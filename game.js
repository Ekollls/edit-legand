!function(b) {
    if ("object" == typeof exports && "undefined" != typeof module) {
        module.exports = b()
    } else {
        if ("function" == typeof define && define.amd) {
            define([], b)
        } else {
            var a;
            "undefined" != typeof window ? a = window : "undefined" != typeof global ? a = global : "undefined" != typeof self && (a = self),
            a.io = b()
        }
    }
}(function() {
    var d, b, a;
    return (function c(f, k, h) {
        function g(n, l) {
            if (!k[n]) {
                if (!f[n]) {
                    var i = typeof require == "function" && require;
                    if (!l && i) {
                        return i(n, !0)
                    }
                    if (e) {
                        return e(n, !0)
                    }
                    throw new Error("Cannot find module '" + n + "'")
                }
                var m = k[n] = {
                    exports: {}
                };
                f[n][0].call(m.exports, function(o) {
                    var p = f[n][1][o];
                    return g(p ? p : o)
                }, m, m.exports, c, f, k, h)
            }
            return k[n].exports
        }
        var e = typeof require == "function" && require;
        for (var j = 0; j < h.length; j++) {
            g(h[j])
        }
        return g
    }
    )({
        1: [function(g, f, e) {
            f.exports = g("./lib/")
        }
        , {
            "./lib/": 2
        }],
        2: [function(j, k, m) {
            var h = j("./url");
            var g = j("socket.io-parser");
            var e = j("./manager");
            var i = j("debug")("socket.io-client");
            k.exports = m = l;
            var f = m.managers = {};
            function l(p, o) {
                if (typeof p == "object") {
                    o = p;
                    p = undefined
                }
                o = o || {};
                var n = h(p);
                var q = n.source;
                var s = n.id;
                var r;
                if (o.forceNew || o["force new connection"] || false === o.multiplex) {
                    i("ignoring socket cache for %s", q);
                    r = e(q, o)
                } else {
                    if (!f[s]) {
                        i("new io instance for %s", q);
                        f[s] = e(q, o)
                    }
                    r = f[s]
                }
                return r.socket(n.path)
            }
            m.protocol = g.protocol;
            m.connect = l;
            m.Manager = j("./manager");
            m.Socket = j("./socket")
        }
        , {
            "./manager": 3,
            "./socket": 5,
            "./url": 6,
            debug: 9,
            "socket.io-parser": 40
        }],
        3: [function(j, k, m) {
            var h = j("./url");
            var o = j("engine.io-client");
            var i = j("./socket");
            var q = j("component-emitter");
            var g = j("socket.io-parser");
            var n = j("./on");
            var p = j("component-bind");
            var l = j("object-component");
            var f = j("debug")("socket.io-client:manager");
            k.exports = e;
            function e(s, r) {
                if (!(this instanceof e)) {
                    return new e(s,r)
                }
                if (s && ("object" == typeof s)) {
                    r = s;
                    s = undefined
                }
                r = r || {};
                r.path = r.path || "/socket.io";
                this.nsps = {};
                this.subs = [];
                this.opts = r;
                this.reconnection(r.reconnection !== false);
                this.reconnectionAttempts(r.reconnectionAttempts || Infinity);
                this.reconnectionDelay(r.reconnectionDelay || 1000);
                this.reconnectionDelayMax(r.reconnectionDelayMax || 5000);
                this.timeout(null == r.timeout ? 20000 : r.timeout);
                this.readyState = "closed";
                this.uri = s;
                this.connected = 0;
                this.attempts = 0;
                this.encoding = false;
                this.packetBuffer = [];
                this.encoder = new g.Encoder();
                this.decoder = new g.Decoder();
                this.autoConnect = r.autoConnect !== false;
                if (this.autoConnect) {
                    this.open()
                }
            }
            e.prototype.emitAll = function() {
                this.emit.apply(this, arguments);
                for (var r in this.nsps) {
                    this.nsps[r].emit.apply(this.nsps[r], arguments)
                }
            }
            ;
            q(e.prototype);
            e.prototype.reconnection = function(r) {
                if (!arguments.length) {
                    return this._reconnection
                }
                this._reconnection = !!r;
                return this
            }
            ;
            e.prototype.reconnectionAttempts = function(r) {
                if (!arguments.length) {
                    return this._reconnectionAttempts
                }
                this._reconnectionAttempts = r;
                return this
            }
            ;
            e.prototype.reconnectionDelay = function(r) {
                if (!arguments.length) {
                    return this._reconnectionDelay
                }
                this._reconnectionDelay = r;
                return this
            }
            ;
            e.prototype.reconnectionDelayMax = function(r) {
                if (!arguments.length) {
                    return this._reconnectionDelayMax
                }
                this._reconnectionDelayMax = r;
                return this
            }
            ;
            e.prototype.timeout = function(r) {
                if (!arguments.length) {
                    return this._timeout
                }
                this._timeout = r;
                return this
            }
            ;
            e.prototype.maybeReconnectOnOpen = function() {
                if (!this.openReconnect && !this.reconnecting && this._reconnection && this.attempts === 0) {
                    this.openReconnect = true;
                    this.reconnect()
                }
            }
            ;
            e.prototype.open = e.prototype.connect = function(u) {
                f("readyState %s", this.readyState);
                if (~this.readyState.indexOf("open")) {
                    return this
                }
                f("opening %s", this.uri);
                this.engine = o(this.uri, this.opts);
                var r = this.engine;
                var t = this;
                this.readyState = "opening";
                var w = n(r, "open", function() {
                    t.onopen();
                    u && u()
                });
                var s = n(r, "error", function(z) {
                    f("connect_error");
                    t.cleanup();
                    t.readyState = "closed";
                    t.emitAll("connect_error", z);
                    if (u) {
                        var y = new Error("Connection error");
                        y.data = z;
                        u(y)
                    }
                    t.maybeReconnectOnOpen()
                });
                if (false !== this._timeout) {
                    var v = this._timeout;
                    f("connect attempt will timeout after %d", v);
                    var x = setTimeout(function() {
                        f("connect attempt timed out after %d", v);
                        w.destroy();
                        r.close();
                        r.emit("error", "timeout");
                        t.emitAll("connect_timeout", v)
                    }, v);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(x)
                        }
                    })
                }
                this.subs.push(w);
                this.subs.push(s);
                return this
            }
            ;
            e.prototype.onopen = function() {
                f("open");
                this.cleanup();
                this.readyState = "open";
                this.emit("open");
                var r = this.engine;
                this.subs.push(n(r, "data", p(this, "ondata")));
                this.subs.push(n(this.decoder, "decoded", p(this, "ondecoded")));
                this.subs.push(n(r, "error", p(this, "onerror")));
                this.subs.push(n(r, "close", p(this, "onclose")))
            }
            ;
            e.prototype.ondata = function(r) {
                this.decoder.add(r)
            }
            ;
            e.prototype.ondecoded = function(r) {
                this.emit("packet", r)
            }
            ;
            e.prototype.onerror = function(r) {
                f("error", r);
                this.emitAll("error", r)
            }
            ;
            e.prototype.socket = function(t) {
                var r = this.nsps[t];
                if (!r) {
                    r = new i(this,t);
                    this.nsps[t] = r;
                    var s = this;
                    r.on("connect", function() {
                        s.connected++
                    })
                }
                return r
            }
            ;
            e.prototype.destroy = function(r) {
                --this.connected || this.close()
            }
            ;
            e.prototype.packet = function(s) {
                f("writing packet %j", s);
                var r = this;
                if (!r.encoding) {
                    r.encoding = true;
                    this.encoder.encode(s, function(u) {
                        for (var t = 0; t < u.length; t++) {
                            r.engine.write(u[t])
                        }
                        r.encoding = false;
                        r.processPacketQueue()
                    })
                } else {
                    r.packetBuffer.push(s)
                }
            }
            ;
            e.prototype.processPacketQueue = function() {
                if (this.packetBuffer.length > 0 && !this.encoding) {
                    var r = this.packetBuffer.shift();
                    this.packet(r)
                }
            }
            ;
            e.prototype.cleanup = function() {
                var r;
                while (r = this.subs.shift()) {
                    r.destroy()
                }
                this.packetBuffer = [];
                this.encoding = false;
                this.decoder.destroy()
            }
            ;
            e.prototype.close = e.prototype.disconnect = function() {
                this.skipReconnect = true;
                this.engine.close()
            }
            ;
            e.prototype.onclose = function(r) {
                f("close");
                this.cleanup();
                this.readyState = "closed";
                this.emit("close", r);
                if (this._reconnection && !this.skipReconnect) {
                    this.reconnect()
                }
            }
            ;
            e.prototype.reconnect = function() {
                if (this.reconnecting) {
                    return this
                }
                var r = this;
                this.attempts++;
                if (this.attempts > this._reconnectionAttempts) {
                    f("reconnect failed");
                    this.emitAll("reconnect_failed");
                    this.reconnecting = false
                } else {
                    var s = this.attempts * this.reconnectionDelay();
                    s = Math.min(s, this.reconnectionDelayMax());
                    f("will wait %dms before reconnect attempt", s);
                    this.reconnecting = true;
                    var t = setTimeout(function() {
                        f("attempting reconnect");
                        r.emitAll("reconnect_attempt", r.attempts);
                        r.emitAll("reconnecting", r.attempts);
                        r.open(function(u) {
                            if (u) {
                                f("reconnect attempt error");
                                r.reconnecting = false;
                                r.reconnect();
                                r.emitAll("reconnect_error", u.data)
                            } else {
                                f("reconnect success");
                                r.onreconnect()
                            }
                        })
                    }, s);
                    this.subs.push({
                        destroy: function() {
                            clearTimeout(t)
                        }
                    })
                }
            }
            ;
            e.prototype.onreconnect = function() {
                var r = this.attempts;
                this.attempts = 0;
                this.reconnecting = false;
                this.emitAll("reconnect", r)
            }
        }
        , {
            "./on": 4,
            "./socket": 5,
            "./url": 6,
            "component-bind": 7,
            "component-emitter": 8,
            debug: 9,
            "engine.io-client": 10,
            "object-component": 37,
            "socket.io-parser": 40
        }],
        4: [function(h, g, f) {
            g.exports = e;
            function e(k, j, i) {
                k.on(j, i);
                return {
                    destroy: function() {
                        k.removeListener(j, i)
                    }
                }
            }
        }
        , {}],
        5: [function(h, i, k) {
            var f = h("socket.io-parser");
            var p = h("component-emitter");
            var j = h("to-array");
            var m = h("./on");
            var n = h("component-bind");
            var e = h("debug")("socket.io-client:socket");
            var l = h("has-binary");
            var o = h("indexof");
            i.exports = k = g;
            var r = {
                connect: 1,
                connect_error: 1,
                connect_timeout: 1,
                disconnect: 1,
                error: 1,
                reconnect: 1,
                reconnect_attempt: 1,
                reconnect_failed: 1,
                reconnect_error: 1,
                reconnecting: 1
            };
            var q = p.prototype.emit;
            function g(t, s) {
                this.io = t;
                this.nsp = s;
                this.json = this;
                this.ids = 0;
                this.acks = {};
                if (this.io.autoConnect) {
                    this.open()
                }
                this.receiveBuffer = [];
                this.sendBuffer = [];
                this.connected = false;
                this.disconnected = true;
                this.subEvents()
            }
            p(g.prototype);
            g.prototype.subEvents = function() {
                var s = this.io;
                this.subs = [m(s, "open", n(this, "onopen")), m(s, "packet", n(this, "onpacket")), m(s, "close", n(this, "onclose"))]
            }
            ;
            g.prototype.open = g.prototype.connect = function() {
                if (this.connected) {
                    return this
                }
                this.io.open();
                if ("open" == this.io.readyState) {
                    this.onopen()
                }
                return this
            }
            ;
            g.prototype.send = function() {
                var s = j(arguments);
                s.unshift("message");
                this.emit.apply(this, s);
                return this
            }
            ;
            g.prototype.emit = function(u) {
                if (r.hasOwnProperty(u)) {
                    q.apply(this, arguments);
                    return this
                }
                var t = j(arguments);
                var s = f.EVENT;
                if (l(t)) {
                    s = f.BINARY_EVENT
                }
                var v = {
                    type: s,
                    data: t
                };
                if ("function" == typeof t[t.length - 1]) {
                    e("emitting packet with ack id %d", this.ids);
                    this.acks[this.ids] = t.pop();
                    v.id = this.ids++
                }
                if (this.connected) {
                    this.packet(v)
                } else {
                    this.sendBuffer.push(v)
                }
                return this
            }
            ;
            g.prototype.packet = function(s) {
                s.nsp = this.nsp;
                this.io.packet(s)
            }
            ;
            g.prototype.onopen = function() {
                e("transport is open - connecting");
                if ("/" != this.nsp) {
                    this.packet({
                        type: f.CONNECT
                    })
                }
            }
            ;
            g.prototype.onclose = function(s) {
                e("close (%s)", s);
                this.connected = false;
                this.disconnected = true;
                this.emit("disconnect", s)
            }
            ;
            g.prototype.onpacket = function(s) {
                if (s.nsp != this.nsp) {
                    return
                }
                switch (s.type) {
                case f.CONNECT:
                    this.onconnect();
                    break;
                case f.EVENT:
                    this.onevent(s);
                    break;
                case f.BINARY_EVENT:
                    this.onevent(s);
                    break;
                case f.ACK:
                    this.onack(s);
                    break;
                case f.BINARY_ACK:
                    this.onack(s);
                    break;
                case f.DISCONNECT:
                    this.ondisconnect();
                    break;
                case f.ERROR:
                    this.emit("error", s.data);
                    break
                }
            }
            ;
            g.prototype.onevent = function(t) {
                var s = t.data || [];
                e("emitting event %j", s);
                if (null != t.id) {
                    e("attaching ack callback to event");
                    s.push(this.ack(t.id))
                }
                if (this.connected) {
                    q.apply(this, s)
                } else {
                    this.receiveBuffer.push(s)
                }
            }
            ;
            g.prototype.ack = function(u) {
                var s = this;
                var t = false;
                return function() {
                    if (t) {
                        return
                    }
                    t = true;
                    var v = j(arguments);
                    e("sending ack %j", v);
                    var w = l(v) ? f.BINARY_ACK : f.ACK;
                    s.packet({
                        type: w,
                        id: u,
                        data: v
                    })
                }
            }
            ;
            g.prototype.onack = function(t) {
                e("calling ack %s with %j", t.id, t.data);
                var s = this.acks[t.id];
                s.apply(this, t.data);
                delete this.acks[t.id]
            }
            ;
            g.prototype.onconnect = function() {
                this.connected = true;
                this.disconnected = false;
                this.emit("connect");
                this.emitBuffered()
            }
            ;
            g.prototype.emitBuffered = function() {
                var s;
                for (s = 0; s < this.receiveBuffer.length; s++) {
                    q.apply(this, this.receiveBuffer[s])
                }
                this.receiveBuffer = [];
                for (s = 0; s < this.sendBuffer.length; s++) {
                    this.packet(this.sendBuffer[s])
                }
                this.sendBuffer = []
            }
            ;
            g.prototype.ondisconnect = function() {
                e("server disconnect (%s)", this.nsp);
                this.destroy();
                this.onclose("io server disconnect")
            }
            ;
            g.prototype.destroy = function() {
                for (var s = 0; s < this.subs.length; s++) {
                    this.subs[s].destroy()
                }
                this.io.destroy(this)
            }
            ;
            g.prototype.close = g.prototype.disconnect = function() {
                if (!this.connected) {
                    return this
                }
                e("performing disconnect (%s)", this.nsp);
                this.packet({
                    type: f.DISCONNECT
                });
                this.destroy();
                this.onclose("io client disconnect");
                return this
            }
        }
        , {
            "./on": 4,
            "component-bind": 7,
            "component-emitter": 8,
            debug: 9,
            "has-binary": 32,
            indexof: 36,
            "socket.io-parser": 40,
            "to-array": 44
        }],
        6: [function(g, f, e) {
            (function(j) {
                var k = g("parseuri");
                var h = g("debug")("socket.io-client:url");
                f.exports = i;
                function i(l, n) {
                    var m = l;
                    var n = n || j.location;
                    if (null == l) {
                        l = n.protocol + "//" + n.hostname
                    }
                    if ("string" == typeof l) {
                        if ("/" == l.charAt(0)) {
                            if ("undefined" != typeof n) {
                                l = n.hostname + l
                            }
                        }
                        if (!/^(https?|wss?):\/\//.test(l)) {
                            h("protocol-less url %s", l);
                            if ("undefined" != typeof n) {
                                l = n.protocol + "//" + l
                            } else {
                                l = "https://" + l
                            }
                        }
                        h("parse %s", l);
                        m = k(l)
                    }
                    if (!m.port) {
                        if (/^(http|ws)$/.test(m.protocol)) {
                            m.port = "80"
                        } else {
                            if (/^(http|ws)s$/.test(m.protocol)) {
                                m.port = "443"
                            }
                        }
                    }
                    m.path = m.path || "/";
                    m.id = m.protocol + "://" + m.host + ":" + m.port;
                    m.href = m.protocol + "://" + m.host + (n && n.port == m.port ? "" : (":" + m.port));
                    return m
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            debug: 9,
            parseuri: 38
        }],
        7: [function(g, f, e) {
            var h = [].slice;
            f.exports = function(k, j) {
                if ("string" == typeof j) {
                    j = k[j]
                }
                if ("function" != typeof j) {
                    throw new Error("bind() requires a function")
                }
                var i = h.call(arguments, 2);
                return function() {
                    return j.apply(k, i.concat(h.call(arguments)))
                }
            }
        }
        , {}],
        8: [function(i, g, f) {
            g.exports = h;
            function h(j) {
                if (j) {
                    return e(j)
                }
            }
            function e(k) {
                for (var j in h.prototype) {
                    k[j] = h.prototype[j]
                }
                return k
            }
            h.prototype.on = h.prototype.addEventListener = function(k, j) {
                this._callbacks = this._callbacks || {};
                (this._callbacks[k] = this._callbacks[k] || []).push(j);
                return this
            }
            ;
            h.prototype.once = function(m, l) {
                var k = this;
                this._callbacks = this._callbacks || {};
                function j() {
                    k.off(m, j);
                    l.apply(this, arguments)
                }
                j.fn = l;
                this.on(m, j);
                return this
            }
            ;
            h.prototype.off = h.prototype.removeListener = h.prototype.removeAllListeners = h.prototype.removeEventListener = function(n, l) {
                this._callbacks = this._callbacks || {};
                if (0 == arguments.length) {
                    this._callbacks = {};
                    return this
                }
                var m = this._callbacks[n];
                if (!m) {
                    return this
                }
                if (1 == arguments.length) {
                    delete this._callbacks[n];
                    return this
                }
                var j;
                for (var k = 0; k < m.length; k++) {
                    j = m[k];
                    if (j === l || j.fn === l) {
                        m.splice(k, 1);
                        break
                    }
                }
                return this
            }
            ;
            h.prototype.emit = function(n) {
                this._callbacks = this._callbacks || {};
                var k = [].slice.call(arguments, 1)
                  , m = this._callbacks[n];
                if (m) {
                    m = m.slice(0);
                    for (var l = 0, j = m.length; l < j; ++l) {
                        m[l].apply(this, k)
                    }
                }
                return this
            }
            ;
            h.prototype.listeners = function(j) {
                this._callbacks = this._callbacks || {};
                return this._callbacks[j] || []
            }
            ;
            h.prototype.hasListeners = function(j) {
                return !!this.listeners(j).length
            }
        }
        , {}],
        9: [function(j, h, g) {
            h.exports = f;
            function f(e) {
                if (!f.enabled(e)) {
                    return function() {}
                }
                return function(l) {
                    l = i(l);
                    var n = new Date;
                    var m = n - (f[e] || n);
                    f[e] = n;
                    l = e + " " + l + " +" + f.humanize(m);
                    window.console && console.log && Function.prototype.apply.call(console.log, console, arguments)
                }
            }
            f.names = [];
            f.skips = [];
            f.enable = function(m) {
                try {
                    localStorage.debug = m
                } catch (p) {}
                var o = (m || "").split(/[\s,]+/)
                  , l = o.length;
                for (var n = 0; n < l; n++) {
                    m = o[n].replace("*", ".*?");
                    if (m[0] === "-") {
                        f.skips.push(new RegExp("^" + m.substr(1) + "$"))
                    } else {
                        f.names.push(new RegExp("^" + m + "$"))
                    }
                }
            }
            ;
            f.disable = function() {
                f.enable("")
            }
            ;
            f.humanize = function(l) {
                var n = 1000
                  , m = 60 * 1000
                  , e = 60 * m;
                if (l >= e) {
                    return (l / e).toFixed(1) + "h"
                }
                if (l >= m) {
                    return (l / m).toFixed(1) + "m"
                }
                if (l >= n) {
                    return (l / n | 0) + "s"
                }
                return l + "ms"
            }
            ;
            f.enabled = function(l) {
                for (var m = 0, e = f.skips.length; m < e; m++) {
                    if (f.skips[m].test(l)) {
                        return false
                    }
                }
                for (var m = 0, e = f.names.length; m < e; m++) {
                    if (f.names[m].test(l)) {
                        return true
                    }
                }
                return false
            }
            ;
            function i(e) {
                if (e instanceof Error) {
                    return e.stack || e.message
                }
                return e
            }
            try {
                if (window.localStorage) {
                    f.enable(localStorage.debug)
                }
            } catch (k) {}
        }
        , {}],
        10: [function(g, f, e) {
            f.exports = g("./lib/")
        }
        , {
            "./lib/": 11
        }],
        11: [function(g, f, e) {
            f.exports = g("./socket");
            f.exports.parser = g("engine.io-parser")
        }
        , {
            "./socket": 12,
            "engine.io-parser": 21
        }],
        12: [function(g, f, e) {
            (function(k) {
                var n = g("./transports");
                var r = g("component-emitter");
                var i = g("debug")("engine.io-client:socket");
                var p = g("indexof");
                var h = g("engine.io-parser");
                var m = g("parseuri");
                var o = g("parsejson");
                var l = g("parseqs");
                f.exports = j;
                function s() {}
                function j(v, u) {
                    if (!(this instanceof j)) {
                        return new j(v,u)
                    }
                    u = u || {};
                    if (v && "object" == typeof v) {
                        u = v;
                        v = null
                    }
                    if (v) {
                        v = m(v);
                        u.host = v.host;
                        u.secure = v.protocol == "https" || v.protocol == "wss";
                        u.port = v.port;
                        if (v.query) {
                            u.query = v.query
                        }
                    }
                    this.secure = null != u.secure ? u.secure : (k.location && "https:" == location.protocol);
                    if (u.host) {
                        var t = u.host.split(":");
                        u.hostname = t.shift();
                        if (t.length) {
                            u.port = t.pop()
                        }
                    }
                    this.agent = u.agent || false;
                    this.hostname = u.hostname || (k.location ? location.hostname : "localhost");
                    this.port = u.port || (k.location && location.port ? location.port : (this.secure ? 443 : 80));
                    this.query = u.query || {};
                    if ("string" == typeof this.query) {
                        this.query = l.decode(this.query)
                    }
                    this.upgrade = false !== u.upgrade;
                    this.path = (u.path || "/engine.io").replace(/\/$/, "") + "/";
                    this.forceJSONP = !!u.forceJSONP;
                    this.jsonp = false !== u.jsonp;
                    this.forceBase64 = !!u.forceBase64;
                    this.enablesXDR = !!u.enablesXDR;
                    this.timestampParam = u.timestampParam || "t";
                    this.timestampRequests = u.timestampRequests;
                    this.transports = u.transports || ["polling", "websocket"];
                    this.readyState = "";
                    this.writeBuffer = [];
                    this.callbackBuffer = [];
                    this.policyPort = u.policyPort || 843;
                    this.rememberUpgrade = u.rememberUpgrade || false;
                    this.open();
                    this.binaryType = null;
                    this.onlyBinaryUpgrades = u.onlyBinaryUpgrades
                }
                j.priorWebsocketSuccess = false;
                r(j.prototype);
                j.protocol = h.protocol;
                j.Socket = j;
                j.Transport = g("./transport");
                j.transports = g("./transports");
                j.parser = g("engine.io-parser");
                j.prototype.createTransport = function(t) {
                    i('creating transport "%s"', t);
                    var u = q(this.query);
                    u.EIO = h.protocol;
                    u.transport = t;
                    if (this.id) {
                        u.sid = this.id
                    }
                    var v = new n[t]({
                        agent: this.agent,
                        hostname: this.hostname,
                        port: this.port,
                        secure: this.secure,
                        path: this.path,
                        query: u,
                        forceJSONP: this.forceJSONP,
                        jsonp: this.jsonp,
                        forceBase64: this.forceBase64,
                        enablesXDR: this.enablesXDR,
                        timestampRequests: this.timestampRequests,
                        timestampParam: this.timestampParam,
                        policyPort: this.policyPort,
                        socket: this
                    });
                    return v
                }
                ;
                function q(u) {
                    var v = {};
                    for (var t in u) {
                        if (u.hasOwnProperty(t)) {
                            v[t] = u[t]
                        }
                    }
                    return v
                }
                j.prototype.open = function() {
                    var v;
                    if (this.rememberUpgrade && j.priorWebsocketSuccess && this.transports.indexOf("websocket") != -1) {
                        v = "websocket"
                    } else {
                        if (0 == this.transports.length) {
                            var t = this;
                            setTimeout(function() {
                                t.emit("error", "No transports available")
                            }, 0);
                            return
                        } else {
                            v = this.transports[0]
                        }
                    }
                    this.readyState = "opening";
                    var v;
                    try {
                        v = this.createTransport(v)
                    } catch (u) {
                        this.transports.shift();
                        this.open();
                        return
                    }
                    v.open();
                    this.setTransport(v)
                }
                ;
                j.prototype.setTransport = function(u) {
                    i("setting transport %s", u.name);
                    var t = this;
                    if (this.transport) {
                        i("clearing existing transport %s", this.transport.name);
                        this.transport.removeAllListeners()
                    }
                    this.transport = u;
                    u.on("drain", function() {
                        t.onDrain()
                    }).on("packet", function(v) {
                        t.onPacket(v)
                    }).on("error", function(v) {
                        t.onError(v)
                    }).on("close", function() {
                        t.onClose("transport close")
                    })
                }
                ;
                j.prototype.probe = function(t) {
                    i('probing transport "%s"', t);
                    var w = this.createTransport(t, {
                        probe: 1
                    })
                      , y = false
                      , C = this;
                    j.priorWebsocketSuccess = false;
                    function x() {
                        if (C.onlyBinaryUpgrades) {
                            var F = !this.supportsBinary && C.transport.supportsBinary;
                            y = y || F
                        }
                        if (y) {
                            return
                        }
                        i('probe transport "%s" opened', t);
                        var G = window.setInterval(function E() {
                            if (w != null && !y) {
                                w.send([{
                                    type: "ping",
                                    data: "probe"
                                }])
                            } else {
                                window.clearInterval(G)
                            }
                        }, 500);
                        w.once("packet", function(I) {
                            if (y) {
                                return
                            }
                            if ("pong" == I.type && "probe" == I.data) {
                                window.clearInterval(G);
                                i('probe transport "%s" pong', t);
                                C.upgrading = true;
                                C.emit("upgrading", w);
                                j.priorWebsocketSuccess = "websocket" == w.name;
                                i('pausing current transport "%s"', C.transport.name);
                                C.transport.pause(function() {
                                    if (y) {
                                        return
                                    }
                                    if ("closed" == C.readyState || "closing" == C.readyState) {
                                        return
                                    }
                                    i("changing transport and sending upgrade packet");
                                    u();
                                    C.setTransport(w);
                                    w.send([{
                                        type: "upgrade"
                                    }]);
                                    C.emit("upgrade", w);
                                    w = null;
                                    C.upgrading = false;
                                    C.flush()
                                })
                            } else {
                                i('probe transport "%s" failed', t);
                                var H = new Error("probe error");
                                H.transport = w.name;
                                C.emit("upgradeError", H)
                            }
                        })
                    }
                    function A() {
                        if (y) {
                            return
                        }
                        y = true;
                        u();
                        w.close();
                        w = null
                    }
                    function z(F) {
                        var E = new Error("probe error: " + F);
                        E.transport = w.name;
                        A();
                        i('probe transport "%s" failed because of error: %s', t, F);
                        C.emit("upgradeError", E)
                    }
                    function D() {
                        z("transport closed")
                    }
                    function B() {
                        z("socket closed")
                    }
                    function v(E) {
                        if (w && E.name != w.name) {
                            i('"%s" works - aborting "%s"', E.name, w.name);
                            A()
                        }
                    }
                    function u() {
                        w.removeListener("open", x);
                        w.removeListener("error", z);
                        w.removeListener("close", D);
                        C.removeListener("close", B);
                        C.removeListener("upgrading", v)
                    }
                    w.once("open", x);
                    w.once("error", z);
                    w.once("close", D);
                    this.once("close", B);
                    this.once("upgrading", v);
                    w.open()
                }
                ;
                j.prototype.onOpen = function() {
                    i("socket open");
                    this.readyState = "open";
                    j.priorWebsocketSuccess = "websocket" == this.transport.name;
                    this.emit("open");
                    this.flush();
                    if ("open" == this.readyState && this.upgrade && this.transport.pause) {
                        i("starting upgrade probes");
                        for (var u = 0, t = this.upgrades.length; u < t; u++) {
                            this.probe(this.upgrades[u])
                        }
                    }
                }
                ;
                j.prototype.onPacket = function(u) {
                    if ("opening" == this.readyState || "open" == this.readyState) {
                        i('socket receive: type "%s", data "%s"', u.type, u.data);
                        this.emit("packet", u);
                        this.emit("heartbeat");
                        switch (u.type) {
                        case "open":
                            this.onHandshake(o(u.data));
                            break;
                        case "pong":
                            this.setPing();
                            break;
                        case "error":
                            var t = new Error("server error");
                            t.code = u.data;
                            this.emit("error", t);
                            break;
                        case "message":
                            this.emit("data", u.data);
                            this.emit("message", u.data);
                            break
                        }
                    } else {
                        i('packet received with socket readyState "%s"', this.readyState)
                    }
                }
                ;
                j.prototype.onHandshake = function(t) {
                    this.emit("handshake", t);
                    this.id = t.sid;
                    this.transport.query.sid = t.sid;
                    this.upgrades = this.filterUpgrades(t.upgrades);
                    this.pingInterval = t.pingInterval;
                    this.pingTimeout = t.pingTimeout;
                    this.onOpen();
                    if ("closed" == this.readyState) {
                        return
                    }
                    this.setPing();
                    this.removeListener("heartbeat", this.onHeartbeat);
                    this.on("heartbeat", this.onHeartbeat)
                }
                ;
                j.prototype.onHeartbeat = function(u) {
                    clearTimeout(this.pingTimeoutTimer);
                    var t = this;
                    t.pingTimeoutTimer = setTimeout(function() {
                        if ("closed" == t.readyState) {
                            return
                        }
                        t.onClose("ping timeout")
                    }, u || (t.pingInterval + t.pingTimeout))
                }
                ;
                j.prototype.setPing = function() {
                    var t = this;
                    clearTimeout(t.pingIntervalTimer);
                    t.pingIntervalTimer = setTimeout(function() {
                        i("writing ping packet - expecting pong within %sms", t.pingTimeout);
                        t.ping();
                        t.onHeartbeat(t.pingTimeout)
                    }, t.pingInterval)
                }
                ;
                j.prototype.ping = function() {
                    this.sendPacket("ping")
                }
                ;
                j.prototype.onDrain = function() {
                    for (var t = 0; t < this.prevBufferLen; t++) {
                        if (this.callbackBuffer[t]) {
                            this.callbackBuffer[t]()
                        }
                    }
                    this.writeBuffer.splice(0, this.prevBufferLen);
                    this.callbackBuffer.splice(0, this.prevBufferLen);
                    this.prevBufferLen = 0;
                    if (this.writeBuffer.length == 0) {
                        this.emit("drain")
                    } else {
                        this.flush()
                    }
                }
                ;
                j.prototype.flush = function() {
                    if ("closed" != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
                        i("flushing %d packets in socket", this.writeBuffer.length);
                        this.transport.send(this.writeBuffer);
                        this.prevBufferLen = this.writeBuffer.length;
                        this.emit("flush")
                    }
                }
                ;
                j.prototype.write = j.prototype.send = function(u, t) {
                    this.sendPacket("message", u, t);
                    return this
                }
                ;
                j.prototype.sendPacket = function(u, v, t) {
                    var w = {
                        type: u,
                        data: v
                    };
                    this.emit("packetCreate", w);
                    this.writeBuffer.push(w);
                    this.callbackBuffer.push(t);
                    this.flush()
                }
                ;
                j.prototype.close = function() {
                    if ("opening" == this.readyState || "open" == this.readyState) {
                        this.onClose("forced close");
                        i("socket closing - telling transport to close");
                        this.transport.close()
                    }
                    return this
                }
                ;
                j.prototype.onError = function(t) {
                    i("socket error %j", t);
                    j.priorWebsocketSuccess = false;
                    this.emit("error", t);
                    this.onClose("transport error", t)
                }
                ;
                j.prototype.onClose = function(u, v) {
                    if ("opening" == this.readyState || "open" == this.readyState) {
                        i('socket close with reason: "%s"', u);
                        var t = this;
                        clearTimeout(this.pingIntervalTimer);
                        clearTimeout(this.pingTimeoutTimer);
                        setTimeout(function() {
                            t.writeBuffer = [];
                            t.callbackBuffer = [];
                            t.prevBufferLen = 0
                        }, 0);
                        this.transport.removeAllListeners("close");
                        this.transport.close();
                        this.transport.removeAllListeners();
                        this.readyState = "closed";
                        this.id = null;
                        this.emit("close", u, v)
                    }
                }
                ;
                j.prototype.filterUpgrades = function(v) {
                    var w = [];
                    for (var u = 0, t = v.length; u < t; u++) {
                        if (~p(this.transports, v[u])) {
                            w.push(v[u])
                        }
                    }
                    return w
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            "./transport": 13,
            "./transports": 14,
            "component-emitter": 8,
            debug: 9,
            "engine.io-parser": 21,
            indexof: 36,
            parsejson: 28,
            parseqs: 29,
            parseuri: 30
        }],
        13: [function(h, f, e) {
            var j = h("engine.io-parser");
            var g = h("component-emitter");
            f.exports = i;
            function i(k) {
                this.path = k.path;
                this.hostname = k.hostname;
                this.port = k.port;
                this.secure = k.secure;
                this.query = k.query;
                this.timestampParam = k.timestampParam;
                this.timestampRequests = k.timestampRequests;
                this.readyState = "";
                this.agent = k.agent || false;
                this.socket = k.socket;
                this.enablesXDR = k.enablesXDR
            }
            g(i.prototype);
            i.timestamps = 0;
            i.prototype.onError = function(m, l) {
                var k = new Error(m);
                k.type = "TransportError";
                k.description = l;
                this.emit("error", k);
                return this
            }
            ;
            i.prototype.open = function() {
                if ("closed" == this.readyState || "" == this.readyState) {
                    this.readyState = "opening";
                    this.doOpen()
                }
                return this
            }
            ;
            i.prototype.close = function() {
                if ("opening" == this.readyState || "open" == this.readyState) {
                    this.doClose();
                    this.onClose()
                }
                return this
            }
            ;
            i.prototype.send = function(k) {
                if ("open" == this.readyState) {
                    this.write(k)
                } else {
                    throw new Error("Transport not open")
                }
            }
            ;
            i.prototype.onOpen = function() {
                this.readyState = "open";
                this.writable = true;
                this.emit("open")
            }
            ;
            i.prototype.onData = function(k) {
                var l = j.decodePacket(k, this.socket.binaryType);
                this.onPacket(l)
            }
            ;
            i.prototype.onPacket = function(k) {
                this.emit("packet", k)
            }
            ;
            i.prototype.onClose = function() {
                this.readyState = "closed";
                this.emit("close")
            }
        }
        , {
            "component-emitter": 8,
            "engine.io-parser": 21
        }],
        14: [function(g, f, e) {
            (function(k) {
                var j = g("xmlhttprequest");
                var i = g("./polling-xhr");
                var m = g("./polling-jsonp");
                var h = g("./websocket");
                e.polling = l;
                e.websocket = h;
                function l(p) {
                    var t;
                    var q = false;
                    var o = false;
                    var s = false !== p.jsonp;
                    if (k.location) {
                        var r = "https:" == location.protocol;
                        var n = location.port;
                        if (!n) {
                            n = r ? 443 : 80
                        }
                        q = p.hostname != location.hostname || n != p.port;
                        o = p.secure != r
                    }
                    p.xdomain = q;
                    p.xscheme = o;
                    t = new j(p);
                    if ("open"in t && !p.forceJSONP) {
                        return new i(p)
                    } else {
                        if (!s) {
                            throw new Error("JSONP disabled")
                        }
                        return new m(p)
                    }
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            "./polling-jsonp": 15,
            "./polling-xhr": 16,
            "./websocket": 18,
            xmlhttprequest: 19
        }],
        15: [function(g, f, e) {
            (function(h) {
                var p = g("./polling");
                var j = g("component-inherit");
                f.exports = l;
                var n = /\n/g;
                var i = /\\n/g;
                var o;
                var m = 0;
                function k() {}
                function l(r) {
                    p.call(this, r);
                    this.query = this.query || {};
                    if (!o) {
                        if (!h.___eio) {
                            h.___eio = []
                        }
                        o = h.___eio
                    }
                    this.index = o.length;
                    var q = this;
                    o.push(function(s) {
                        q.onData(s)
                    });
                    this.query.j = this.index;
                    if (h.document && h.addEventListener) {
                        h.addEventListener("beforeunload", function() {
                            if (q.script) {
                                q.script.onerror = k
                            }
                        })
                    }
                }
                j(l, p);
                l.prototype.supportsBinary = false;
                l.prototype.doClose = function() {
                    if (this.script) {
                        this.script.parentNode.removeChild(this.script);
                        this.script = null
                    }
                    if (this.form) {
                        this.form.parentNode.removeChild(this.form);
                        this.form = null
                    }
                    p.prototype.doClose.call(this)
                }
                ;
                l.prototype.doPoll = function() {
                    var r = this;
                    var q = document.createElement("script");
                    if (this.script) {
                        this.script.parentNode.removeChild(this.script);
                        this.script = null
                    }
                    q.async = true;
                    q.src = this.uri();
                    q.onerror = function(u) {
                        r.onError("jsonp poll error", u)
                    }
                    ;
                    var t = document.getElementsByTagName("script")[0];
                    t.parentNode.insertBefore(q, t);
                    this.script = q;
                    var s = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent);
                    if (s) {
                        setTimeout(function() {
                            var u = document.createElement("iframe");
                            document.body.appendChild(u);
                            document.body.removeChild(u)
                        }, 100)
                    }
                }
                ;
                l.prototype.doWrite = function(w, y) {
                    var z = this;
                    if (!this.form) {
                        var r = document.createElement("form");
                        var s = document.createElement("textarea");
                        var q = this.iframeId = "eio_iframe_" + this.index;
                        var v;
                        r.className = "socketio";
                        r.style.position = "absolute";
                        r.style.top = "-1000px";
                        r.style.left = "-1000px";
                        r.target = q;
                        r.method = "POST";
                        r.setAttribute("accept-charset", "utf-8");
                        s.name = "d";
                        r.appendChild(s);
                        document.body.appendChild(r);
                        this.form = r;
                        this.area = s
                    }
                    this.form.action = this.uri();
                    function t() {
                        u();
                        y()
                    }
                    function u() {
                        if (z.iframe) {
                            try {
                                z.form.removeChild(z.iframe)
                            } catch (B) {
                                z.onError("jsonp polling iframe removal error", B)
                            }
                        }
                        try {
                            var A = '<iframe src="javascript:0" name="' + z.iframeId + '">';
                            v = document.createElement(A)
                        } catch (B) {
                            v = document.createElement("iframe");
                            v.name = z.iframeId;
                            v.src = "javascript:0"
                        }
                        v.id = z.iframeId;
                        z.form.appendChild(v);
                        z.iframe = v
                    }
                    u();
                    w = w.replace(i, "\\\n");
                    this.area.value = w.replace(n, "\\n");
                    try {
                        this.form.submit()
                    } catch (x) {}
                    if (this.iframe.attachEvent) {
                        this.iframe.onreadystatechange = function() {
                            if (z.iframe.readyState == "complete") {
                                t()
                            }
                        }
                    } else {
                        this.iframe.onload = t
                    }
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            "./polling": 17,
            "component-inherit": 20
        }],
        16: [function(g, f, e) {
            (function(j) {
                var o = g("xmlhttprequest");
                var p = g("./polling");
                var n = g("component-emitter");
                var k = g("component-inherit");
                var i = g("debug")("engine.io-client:polling-xhr");
                f.exports = m;
                f.exports.Request = h;
                function l() {}
                function m(s) {
                    p.call(this, s);
                    if (j.location) {
                        var t = "https:" == location.protocol;
                        var r = location.port;
                        if (!r) {
                            r = t ? 443 : 80
                        }
                        this.xd = s.hostname != j.location.hostname || r != s.port;
                        this.xs = s.secure != t
                    }
                }
                k(m, p);
                m.prototype.supportsBinary = true;
                m.prototype.request = function(r) {
                    r = r || {};
                    r.uri = this.uri();
                    r.xd = this.xd;
                    r.xs = this.xs;
                    r.agent = this.agent || false;
                    r.supportsBinary = this.supportsBinary;
                    r.enablesXDR = this.enablesXDR;
                    return new h(r)
                }
                ;
                m.prototype.doWrite = function(v, s) {
                    var u = typeof v !== "string" && v !== undefined;
                    var t = this.request({
                        method: "POST",
                        data: v,
                        isBinary: u
                    });
                    var r = this;
                    t.on("success", s);
                    t.on("error", function(w) {
                        r.onError("xhr post error", w)
                    });
                    this.sendXhr = t
                }
                ;
                m.prototype.doPoll = function() {
                    i("xhr poll");
                    var s = this.request();
                    var r = this;
                    s.on("data", function(t) {
                        r.onData(t)
                    });
                    s.on("error", function(t) {
                        r.onError("xhr poll error", t)
                    });
                    this.pollXhr = s
                }
                ;
                function h(r) {
                    this.method = r.method || "GET";
                    this.uri = r.uri;
                    this.xd = !!r.xd;
                    this.xs = !!r.xs;
                    this.async = false !== r.async;
                    this.data = undefined != r.data ? r.data : null;
                    this.agent = r.agent;
                    this.isBinary = r.isBinary;
                    this.supportsBinary = r.supportsBinary;
                    this.enablesXDR = r.enablesXDR;
                    this.create()
                }
                n(h.prototype);
                h.prototype.create = function() {
                    var t = this.xhr = new o({
                        agent: this.agent,
                        xdomain: this.xd,
                        xscheme: this.xs,
                        enablesXDR: this.enablesXDR
                    });
                    var r = this;
                    try {
                        i("xhr open %s: %s", this.method, this.uri);
                        t.open(this.method, this.uri, this.async);
                        if (this.supportsBinary) {
                            t.responseType = "arraybuffer"
                        }
                        if ("POST" == this.method) {
                            try {
                                if (this.isBinary) {
                                    t.setRequestHeader("Content-type", "application/octet-stream")
                                } else {
                                    t.setRequestHeader("Content-type", "text/plain;charset=UTF-8")
                                }
                            } catch (s) {}
                        }
                        if ("withCredentials"in t) {
                            t.withCredentials = true
                        }
                        if (this.hasXDR()) {
                            t.onload = function() {
                                r.onLoad()
                            }
                            ;
                            t.onerror = function() {
                                r.onError(t.responseText)
                            }
                        } else {
                            t.onreadystatechange = function() {
                                if (4 != t.readyState) {
                                    return
                                }
                                if (200 == t.status || 1223 == t.status) {
                                    r.onLoad()
                                } else {
                                    setTimeout(function() {
                                        r.onError(t.status)
                                    }, 0)
                                }
                            }
                        }
                        i("xhr data %s", this.data);
                        t.send(this.data)
                    } catch (s) {
                        setTimeout(function() {
                            r.onError(s)
                        }, 0);
                        return
                    }
                    if (j.document) {
                        this.index = h.requestsCount++;
                        h.requests[this.index] = this
                    }
                }
                ;
                h.prototype.onSuccess = function() {
                    this.emit("success");
                    this.cleanup()
                }
                ;
                h.prototype.onData = function(r) {
                    this.emit("data", r);
                    this.onSuccess()
                }
                ;
                h.prototype.onError = function(r) {
                    this.emit("error", r);
                    this.cleanup()
                }
                ;
                h.prototype.cleanup = function() {
                    if ("undefined" == typeof this.xhr || null === this.xhr) {
                        return
                    }
                    if (this.hasXDR()) {
                        this.xhr.onload = this.xhr.onerror = l
                    } else {
                        this.xhr.onreadystatechange = l
                    }
                    try {
                        this.xhr.abort()
                    } catch (r) {}
                    if (j.document) {
                        delete h.requests[this.index]
                    }
                    this.xhr = null
                }
                ;
                h.prototype.onLoad = function() {
                    var r;
                    try {
                        var t;
                        try {
                            t = this.xhr.getResponseHeader("Content-Type")
                        } catch (s) {}
                        if (t === "application/octet-stream") {
                            r = this.xhr.response
                        } else {
                            if (!this.supportsBinary) {
                                r = this.xhr.responseText
                            } else {
                                r = "ok"
                            }
                        }
                    } catch (s) {
                        this.onError(s)
                    }
                    if (null != r) {
                        this.onData(r)
                    }
                }
                ;
                h.prototype.hasXDR = function() {
                    return "undefined" !== typeof j.XDomainRequest && !this.xs && this.enablesXDR
                }
                ;
                h.prototype.abort = function() {
                    this.cleanup()
                }
                ;
                if (j.document) {
                    h.requestsCount = 0;
                    h.requests = {};
                    if (j.attachEvent) {
                        j.attachEvent("onunload", q)
                    } else {
                        if (j.addEventListener) {
                            j.addEventListener("beforeunload", q)
                        }
                    }
                }
                function q() {
                    for (var r in h.requests) {
                        if (h.requests.hasOwnProperty(r)) {
                            h.requests[r].abort()
                        }
                    }
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            "./polling": 17,
            "component-emitter": 8,
            "component-inherit": 20,
            debug: 9,
            xmlhttprequest: 19
        }],
        17: [function(g, h, k) {
            var m = g("../transport");
            var j = g("parseqs");
            var e = g("engine.io-parser");
            var l = g("component-inherit");
            var f = g("debug")("engine.io-client:polling");
            h.exports = n;
            var i = (function() {
                var o = g("xmlhttprequest");
                var p = new o({
                    agent: this.agent,
                    xdomain: false
                });
                return null != p.responseType
            }
            )();
            function n(p) {
                var o = (p && p.forceBase64);
                if (!i || o) {
                    this.supportsBinary = false
                }
                m.call(this, p)
            }
            l(n, m);
            n.prototype.name = "polling";
            n.prototype.doOpen = function() {
                this.poll()
            }
            ;
            n.prototype.pause = function(o) {
                var s = 0;
                var p = this;
                this.readyState = "pausing";
                function r() {
                    f("paused");
                    p.readyState = "paused";
                    o()
                }
                if (this.polling || !this.writable) {
                    var q = 0;
                    if (this.polling) {
                        f("we are currently polling - waiting to pause");
                        q++;
                        this.once("pollComplete", function() {
                            f("pre-pause polling complete");
                            --q || r()
                        })
                    }
                    if (!this.writable) {
                        f("we are currently writing - waiting to pause");
                        q++;
                        this.once("drain", function() {
                            f("pre-pause writing complete");
                            --q || r()
                        })
                    }
                } else {
                    r()
                }
            }
            ;
            n.prototype.poll = function() {
                f("polling");
                this.polling = true;
                this.doPoll();
                this.emit("poll")
            }
            ;
            n.prototype.onData = function(p) {
                var o = this;
                f("polling got data %s", p);
                var q = function(t, r, s) {
                    if ("opening" == o.readyState) {
                        o.onOpen()
                    }
                    if ("close" == t.type) {
                        o.onClose();
                        return false
                    }
                    o.onPacket(t)
                };
                e.decodePayload(p, this.socket.binaryType, q);
                if ("closed" != this.readyState) {
                    this.polling = false;
                    this.emit("pollComplete");
                    if ("open" == this.readyState) {
                        this.poll()
                    } else {
                        f('ignoring poll - transport state "%s"', this.readyState)
                    }
                }
            }
            ;
            n.prototype.doClose = function() {
                var o = this;
                function p() {
                    f("writing close packet");
                    o.write([{
                        type: "close"
                    }])
                }
                if ("open" == this.readyState) {
                    f("transport open - closing");
                    p()
                } else {
                    f("transport not open - deferring close");
                    this.once("open", p)
                }
            }
            ;
            n.prototype.write = function(q) {
                var p = this;
                this.writable = false;
                var o = function() {
                    p.writable = true;
                    p.emit("drain")
                };
                var p = this;
                e.encodePayload(q, this.supportsBinary, function(r) {
                    p.doWrite(r, o)
                })
            }
            ;
            n.prototype.uri = function() {
                var q = this.query || {};
                var p = this.secure ? "https" : "http";
                var o = "";
                if (false !== this.timestampRequests) {
                    q[this.timestampParam] = +new Date + "-" + m.timestamps++
                }
                if (!this.supportsBinary && !q.sid) {
                    q.b64 = 1
                }
                q = j.encode(q);
                if (this.port && (("https" == p && this.port != 443) || ("http" == p && this.port != 80))) {
                    o = ":" + this.port
                }
                if (q.length) {
                    q = "?" + q
                }
                return p + "://" + this.hostname + o + this.path + q
            }
        }
        , {
            "../transport": 13,
            "component-inherit": 20,
            debug: 9,
            "engine.io-parser": 21,
            parseqs: 29,
            xmlhttprequest: 19
        }],
        18: [function(h, i, k) {
            var m = h("../transport");
            var e = h("engine.io-parser");
            var j = h("parseqs");
            var l = h("component-inherit");
            var f = h("debug")("engine.io-client:websocket");
            var n = h("ws");
            i.exports = g;
            function g(p) {
                var o = (p && p.forceBase64);
                if (o) {
                    this.supportsBinary = false
                }
                m.call(this, p)
            }
            l(g, m);
            g.prototype.name = "websocket";
            g.prototype.supportsBinary = true;
            g.prototype.doOpen = function() {
                if (!this.check()) {
                    return
                }
                var o = this;
                var r = this.uri();
                var q = void (0);
                var p = {
                    agent: this.agent
                };
                this.ws = new n(r,q,p);
                if (this.ws.binaryType === undefined) {
                    this.supportsBinary = false
                }
                this.ws.binaryType = "arraybuffer";
                this.addEventListeners()
            }
            ;
            g.prototype.addEventListeners = function() {
                var o = this;
                this.ws.onopen = function() {
                    o.onOpen()
                }
                ;
                this.ws.onclose = function() {
                    o.onClose()
                }
                ;
                this.ws.onmessage = function(p) {
                    o.onData(p.data)
                }
                ;
                this.ws.onerror = function(p) {
                    o.onError("websocket error", p)
                }
            }
            ;
            if ("undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {
                g.prototype.onData = function(p) {
                    var o = this;
                    setTimeout(function() {
                        m.prototype.onData.call(o, p)
                    }, 0)
                }
            }
            g.prototype.write = function(r) {
                var p = this;
                this.writable = false;
                for (var q = 0, o = r.length; q < o; q++) {
                    e.encodePacket(r[q], this.supportsBinary, function(t) {
                        try {
                            p.ws.send(t)
                        } catch (u) {
                            f("websocket closed before onclose event")
                        }
                    })
                }
                function s() {
                    p.writable = true;
                    p.emit("drain")
                }
                setTimeout(s, 0)
            }
            ;
            g.prototype.onClose = function() {
                m.prototype.onClose.call(this)
            }
            ;
            g.prototype.doClose = function() {
                if (typeof this.ws !== "undefined") {
                    this.ws.close()
                }
            }
            ;
            g.prototype.uri = function() {
                var q = this.query || {};
                var p = this.secure ? "wss" : "ws";
                var o = "";
                if (this.port && (("wss" == p && this.port != 443) || ("ws" == p && this.port != 80))) {
                    o = ":" + this.port
                }
                if (this.timestampRequests) {
                    q[this.timestampParam] = +new Date
                }
                if (!this.supportsBinary) {
                    q.b64 = 1
                }
                q = j.encode(q);
                if (q.length) {
                    q = "?" + q
                }
                return p + "://" + this.hostname + o + this.path + q
            }
            ;
            g.prototype.check = function() {
                return !!n && !("__initialize"in n && this.name === g.prototype.name)
            }
        }
        , {
            "../transport": 13,
            "component-inherit": 20,
            debug: 9,
            "engine.io-parser": 21,
            parseqs: 29,
            ws: 31
        }],
        19: [function(h, g, f) {
            var e = h("has-cors");
            g.exports = function(l) {
                var k = l.xdomain;
                var i = l.xscheme;
                var j = l.enablesXDR;
                try {
                    if ("undefined" != typeof XDomainRequest && !i && j) {
                        return new XDomainRequest()
                    }
                } catch (m) {}
                try {
                    if ("undefined" != typeof XMLHttpRequest && (!k || e)) {
                        return new XMLHttpRequest()
                    }
                } catch (m) {}
                if (!k) {
                    try {
                        return new ActiveXObject("Microsoft.XMLHTTP")
                    } catch (m) {}
                }
            }
        }
        , {
            "has-cors": 34
        }],
        20: [function(g, f, e) {
            f.exports = function(i, h) {
                var j = function() {};
                j.prototype = h.prototype;
                i.prototype = new j;
                i.prototype.constructor = i
            }
        }
        , {}],
        21: [function(g, f, e) {
            (function(j) {
                var v = g("./keys");
                var m = g("arraybuffer.slice");
                var k = g("base64-arraybuffer");
                var i = g("after");
                var u = g("utf8");
                var r = navigator.userAgent.match(/Android/i);
                e.protocol = 3;
                var q = e.packets = {
                    open: 0,
                    close: 1,
                    ping: 2,
                    pong: 3,
                    message: 4,
                    upgrade: 5,
                    noop: 6
                };
                var l = v(q);
                var n = {
                    type: "error",
                    data: "parser error"
                };
                var o = g("blob");
                e.encodePacket = function(y, B, z, A) {
                    if ("function" == typeof B) {
                        A = B;
                        B = false
                    }
                    if ("function" == typeof z) {
                        A = z;
                        z = null
                    }
                    var w = (y.data === undefined) ? undefined : y.data.buffer || y.data;
                    if (j.ArrayBuffer && w instanceof ArrayBuffer) {
                        return t(y, B, A)
                    } else {
                        if (o && w instanceof j.Blob) {
                            return s(y, B, A)
                        }
                    }
                    var x = q[y.type];
                    if (undefined !== y.data) {
                        x += z ? u.encode(String(y.data)) : String(y.data)
                    }
                    return A("" + x)
                }
                ;
                function t(A, C, B) {
                    if (!C) {
                        return e.encodeBase64Packet(A, B)
                    }
                    var z = A.data;
                    var y = new Uint8Array(z);
                    var x = new Uint8Array(1 + z.byteLength);
                    x[0] = q[A.type];
                    for (var w = 0; w < y.length; w++) {
                        x[w + 1] = y[w]
                    }
                    return B(x.buffer)
                }
                function p(x, z, y) {
                    if (!z) {
                        return e.encodeBase64Packet(x, y)
                    }
                    var w = new FileReader();
                    w.onload = function() {
                        x.data = w.result;
                        e.encodePacket(x, z, true, y)
                    }
                    ;
                    return w.readAsArrayBuffer(x.data)
                }
                function s(y, A, z) {
                    if (!A) {
                        return e.encodeBase64Packet(y, z)
                    }
                    if (r) {
                        return p(y, A, z)
                    }
                    var x = new Uint8Array(1);
                    x[0] = q[y.type];
                    var w = new o([x.buffer, y.data]);
                    return z(w)
                }
                e.encodeBase64Packet = function(w, D) {
                    var E = "b" + e.packets[w.type];
                    if (o && w.data instanceof o) {
                        var A = new FileReader();
                        A.onload = function() {
                            var F = A.result.split(",")[1];
                            D(E + F)
                        }
                        ;
                        return A.readAsDataURL(w.data)
                    }
                    var C;
                    try {
                        C = String.fromCharCode.apply(null, new Uint8Array(w.data))
                    } catch (B) {
                        var x = new Uint8Array(w.data);
                        var y = new Array(x.length);
                        for (var z = 0; z < x.length; z++) {
                            y[z] = x[z]
                        }
                        C = String.fromCharCode.apply(null, y)
                    }
                    E += j.btoa(C);
                    return D(E)
                }
                ;
                e.decodePacket = function(A, C, w) {
                    if (typeof A == "string" || A === undefined) {
                        if (A.charAt(0) == "b") {
                            return e.decodeBase64Packet(A.substr(1), C)
                        }
                        if (w) {
                            try {
                                A = u.decode(A)
                            } catch (B) {
                                return n
                            }
                        }
                        var z = A.charAt(0);
                        if (Number(z) != z || !l[z]) {
                            return n
                        }
                        if (A.length > 1) {
                            return {
                                type: l[z],
                                data: A.substring(1)
                            }
                        } else {
                            return {
                                type: l[z]
                            }
                        }
                    }
                    var x = new Uint8Array(A);
                    var z = x[0];
                    var y = m(A, 1);
                    if (o && C === "blob") {
                        y = new o([y])
                    }
                    return {
                        type: l[z],
                        data: y
                    }
                }
                ;
                e.decodeBase64Packet = function(y, z) {
                    var w = l[y.charAt(0)];
                    if (!j.ArrayBuffer) {
                        return {
                            type: w,
                            data: {
                                base64: true,
                                data: y.substr(1)
                            }
                        }
                    }
                    var x = k.decode(y.substr(1));
                    if (z === "blob" && o) {
                        x = new o([x])
                    }
                    return {
                        type: w,
                        data: x
                    }
                }
                ;
                e.encodePayload = function(y, A, z) {
                    if (typeof A == "function") {
                        z = A;
                        A = null
                    }
                    if (A) {
                        if (o && !r) {
                            return e.encodePayloadAsBlob(y, z)
                        }
                        return e.encodePayloadAsArrayBuffer(y, z)
                    }
                    if (!y.length) {
                        return z("0:")
                    }
                    function w(B) {
                        return B.length + ":" + B
                    }
                    function x(C, B) {
                        e.encodePacket(C, A, true, function(D) {
                            B(null, w(D))
                        })
                    }
                    h(y, x, function(C, B) {
                        return z(B.join(""))
                    })
                }
                ;
                function h(A, C, x) {
                    var w = new Array(A.length);
                    var B = i(A.length, x);
                    var y = function(E, F, D) {
                        C(F, function(G, H) {
                            w[E] = H;
                            D(G, w)
                        })
                    };
                    for (var z = 0; z < A.length; z++) {
                        y(z, A[z], B)
                    }
                }
                e.decodePayload = function(D, w, G) {
                    if (typeof D != "string") {
                        return e.decodePayloadAsBinary(D, w, G)
                    }
                    if (typeof w === "function") {
                        G = w;
                        w = null
                    }
                    var x;
                    if (D == "") {
                        return G(n, 0, 1)
                    }
                    var y = "", z, A;
                    for (var E = 0, B = D.length; E < B; E++) {
                        var C = D.charAt(E);
                        if (":" != C) {
                            y += C
                        } else {
                            if ("" == y || (y != (z = Number(y)))) {
                                return G(n, 0, 1)
                            }
                            A = D.substr(E + 1, z);
                            if (y != A.length) {
                                return G(n, 0, 1)
                            }
                            if (A.length) {
                                x = e.decodePacket(A, w, true);
                                if (n.type == x.type && n.data == x.data) {
                                    return G(n, 0, 1)
                                }
                                var F = G(x, E + z, B);
                                if (false === F) {
                                    return
                                }
                            }
                            E += z;
                            y = ""
                        }
                    }
                    if (y != "") {
                        return G(n, 0, 1)
                    }
                }
                ;
                e.encodePayloadAsArrayBuffer = function(x, y) {
                    if (!x.length) {
                        return y(new ArrayBuffer(0))
                    }
                    function w(A, z) {
                        e.encodePacket(A, true, true, function(B) {
                            return z(null, B)
                        })
                    }
                    h(x, w, function(A, C) {
                        var D = C.reduce(function(F, G) {
                            var E;
                            if (typeof G === "string") {
                                E = G.length
                            } else {
                                E = G.byteLength
                            }
                            return F + E.toString().length + E + 2
                        }, 0);
                        var B = new Uint8Array(D);
                        var z = 0;
                        C.forEach(function(I) {
                            var E = typeof I === "string";
                            var H = I;
                            if (E) {
                                var F = new Uint8Array(I.length);
                                for (var G = 0; G < I.length; G++) {
                                    F[G] = I.charCodeAt(G)
                                }
                                H = F.buffer
                            }
                            if (E) {
                                B[z++] = 0
                            } else {
                                B[z++] = 1
                            }
                            var J = H.byteLength.toString();
                            for (var G = 0; G < J.length; G++) {
                                B[z++] = parseInt(J[G])
                            }
                            B[z++] = 255;
                            var F = new Uint8Array(H);
                            for (var G = 0; G < F.length; G++) {
                                B[z++] = F[G]
                            }
                        });
                        return y(B.buffer)
                    })
                }
                ;
                e.encodePayloadAsBlob = function(x, y) {
                    function w(A, z) {
                        e.encodePacket(A, true, true, function(H) {
                            var F = new Uint8Array(1);
                            F[0] = 1;
                            if (typeof H === "string") {
                                var C = new Uint8Array(H.length);
                                for (var E = 0; E < H.length; E++) {
                                    C[E] = H.charCodeAt(E)
                                }
                                H = C.buffer;
                                F[0] = 0
                            }
                            var B = (H instanceof ArrayBuffer) ? H.byteLength : H.size;
                            var I = B.toString();
                            var G = new Uint8Array(I.length + 1);
                            for (var E = 0; E < I.length; E++) {
                                G[E] = parseInt(I[E])
                            }
                            G[I.length] = 255;
                            if (o) {
                                var D = new o([F.buffer, G.buffer, H]);
                                z(null, D)
                            }
                        })
                    }
                    h(x, w, function(A, z) {
                        return y(new o(z))
                    })
                }
                ;
                e.decodePayloadAsBinary = function(C, w, I) {
                    if (typeof w === "function") {
                        I = w;
                        w = null
                    }
                    var H = C;
                    var J = [];
                    var F = false;
                    while (H.byteLength > 0) {
                        var x = new Uint8Array(H);
                        var y = x[0] === 0;
                        var G = "";
                        for (var B = 1; ; B++) {
                            if (x[B] == 255) {
                                break
                            }
                            if (G.length > 310) {
                                F = true;
                                break
                            }
                            G += x[B]
                        }
                        if (F) {
                            return I(n, 0, 1)
                        }
                        H = m(H, 2 + G.length);
                        G = parseInt(G);
                        var A = m(H, 0, G);
                        if (y) {
                            try {
                                A = String.fromCharCode.apply(null, new Uint8Array(A))
                            } catch (D) {
                                var z = new Uint8Array(A);
                                A = "";
                                for (var B = 0; B < z.length; B++) {
                                    A += String.fromCharCode(z[B])
                                }
                            }
                        }
                        J.push(A);
                        H = m(H, G)
                    }
                    var E = J.length;
                    J.forEach(function(K, L) {
                        I(e.decodePacket(K, w, true), L, E)
                    })
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            "./keys": 22,
            after: 23,
            "arraybuffer.slice": 24,
            "base64-arraybuffer": 25,
            blob: 26,
            utf8: 27
        }],
        22: [function(h, f, e) {
            f.exports = Object.keys || function g(m) {
                var j = [];
                var k = Object.prototype.hasOwnProperty;
                for (var l in m) {
                    if (k.call(m, l)) {
                        j.push(l)
                    }
                }
                return j
            }
        }
        , {}],
        23: [function(h, f, e) {
            f.exports = i;
            function i(m, n, l) {
                var j = false;
                l = l || g;
                k.count = m;
                return (m === 0) ? n() : k;
                function k(p, o) {
                    if (k.count <= 0) {
                        throw new Error("after called too many times")
                    }
                    --k.count;
                    if (p) {
                        j = true;
                        n(p);
                        n = l
                    } else {
                        if (k.count === 0 && !j) {
                            n(null, o)
                        }
                    }
                }
            }
            function g() {}
        }
        , {}],
        24: [function(g, f, e) {
            f.exports = function(n, p, k) {
                var j = n.byteLength;
                p = p || 0;
                k = k || j;
                if (n.slice) {
                    return n.slice(p, k)
                }
                if (p < 0) {
                    p += j
                }
                if (k < 0) {
                    k += j
                }
                if (k > j) {
                    k = j
                }
                if (p >= j || p >= k || j === 0) {
                    return new ArrayBuffer(0)
                }
                var o = new Uint8Array(n);
                var h = new Uint8Array(k - p);
                for (var l = p, m = 0; l < k; l++,
                m++) {
                    h[m] = o[l]
                }
                return h.buffer
            }
        }
        , {}],
        25: [function(g, f, e) {
            (function(h) {
                e.encode = function(n) {
                    var l = new Uint8Array(n), m, j = l.length, k = "";
                    for (m = 0; m < j; m += 3) {
                        k += h[l[m] >> 2];
                        k += h[((l[m] & 3) << 4) | (l[m + 1] >> 4)];
                        k += h[((l[m + 1] & 15) << 2) | (l[m + 2] >> 6)];
                        k += h[l[m + 2] & 63]
                    }
                    if ((j % 3) === 2) {
                        k = k.substring(0, k.length - 1) + "="
                    } else {
                        if (j % 3 === 1) {
                            k = k.substring(0, k.length - 2) + "=="
                        }
                    }
                    return k
                }
                ;
                e.decode = function(r) {
                    var k = r.length * 0.75, s = r.length, q, m = 0, n, l, j, u;
                    if (r[r.length - 1] === "=") {
                        k--;
                        if (r[r.length - 2] === "=") {
                            k--
                        }
                    }
                    var o = new ArrayBuffer(k)
                      , t = new Uint8Array(o);
                    for (q = 0; q < s; q += 4) {
                        n = h.indexOf(r[q]);
                        l = h.indexOf(r[q + 1]);
                        j = h.indexOf(r[q + 2]);
                        u = h.indexOf(r[q + 3]);
                        t[m++] = (n << 2) | (l >> 4);
                        t[m++] = ((l & 15) << 4) | (j >> 2);
                        t[m++] = ((j & 3) << 6) | (u & 63)
                    }
                    return o
                }
            }
            )("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")
        }
        , {}],
        26: [function(g, f, e) {
            (function(l) {
                var k = l.BlobBuilder || l.WebKitBlobBuilder || l.MSBlobBuilder || l.MozBlobBuilder;
                var i = (function() {
                    try {
                        var m = new Blob(["hi"]);
                        return m.size == 2
                    } catch (n) {
                        return false
                    }
                }
                )();
                var j = k && k.prototype.append && k.prototype.getBlob;
                function h(o, m) {
                    m = m || {};
                    var p = new k();
                    for (var n = 0; n < o.length; n++) {
                        p.append(o[n])
                    }
                    return (m.type) ? p.getBlob(m.type) : p.getBlob()
                }
                f.exports = (function() {
                    if (i) {
                        return l.Blob
                    } else {
                        if (j) {
                            return h
                        } else {
                            return undefined
                        }
                    }
                }
                )()
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {}],
        27: [function(g, f, e) {
            (function(h) {
                /*! http://mths.be/utf8js v2.0.0 by @mathias */
                ;(function(v) {
                    var o = typeof e == "object" && e;
                    var B = typeof f == "object" && f && f.exports == o && f;
                    var u = typeof h == "object" && h;
                    if (u.global === u || u.window === u) {
                        v = u
                    }
                    var t = String.fromCharCode;
                    function n(F) {
                        var E = [];
                        var D = 0;
                        var G = F.length;
                        var H;
                        var C;
                        while (D < G) {
                            H = F.charCodeAt(D++);
                            if (H >= 55296 && H <= 56319 && D < G) {
                                C = F.charCodeAt(D++);
                                if ((C & 64512) == 56320) {
                                    E.push(((H & 1023) << 10) + (C & 1023) + 65536)
                                } else {
                                    E.push(H);
                                    D--
                                }
                            } else {
                                E.push(H)
                            }
                        }
                        return E
                    }
                    function y(G) {
                        var E = G.length;
                        var D = -1;
                        var F;
                        var C = "";
                        while (++D < E) {
                            F = G[D];
                            if (F > 65535) {
                                F -= 65536;
                                C += t(F >>> 10 & 1023 | 55296);
                                F = 56320 | F & 1023
                            }
                            C += t(F)
                        }
                        return C
                    }
                    function m(D, C) {
                        return t(((D >> C) & 63) | 128)
                    }
                    function x(C) {
                        if ((C & 4294967168) == 0) {
                            return t(C)
                        }
                        var D = "";
                        if ((C & 4294965248) == 0) {
                            D = t(((C >> 6) & 31) | 192)
                        } else {
                            if ((C & 4294901760) == 0) {
                                D = t(((C >> 12) & 15) | 224);
                                D += m(C, 6)
                            } else {
                                if ((C & 4292870144) == 0) {
                                    D = t(((C >> 18) & 7) | 240);
                                    D += m(C, 12);
                                    D += m(C, 6)
                                }
                            }
                        }
                        D += t((C & 63) | 128);
                        return D
                    }
                    function w(F) {
                        var E = n(F);
                        var G = E.length;
                        var D = -1;
                        var C;
                        var H = "";
                        while (++D < G) {
                            C = E[D];
                            H += x(C)
                        }
                        return H
                    }
                    function i() {
                        if (r >= q) {
                            throw Error("Invalid byte index")
                        }
                        var C = s[r] & 255;
                        r++;
                        if ((C & 192) == 128) {
                            return C & 63
                        }
                        throw Error("Invalid continuation byte")
                    }
                    function k() {
                        var D;
                        var C;
                        var G;
                        var F;
                        var E;
                        if (r > q) {
                            throw Error("Invalid byte index")
                        }
                        if (r == q) {
                            return false
                        }
                        D = s[r] & 255;
                        r++;
                        if ((D & 128) == 0) {
                            return D
                        }
                        if ((D & 224) == 192) {
                            var C = i();
                            E = ((D & 31) << 6) | C;
                            if (E >= 128) {
                                return E
                            } else {
                                throw Error("Invalid continuation byte")
                            }
                        }
                        if ((D & 240) == 224) {
                            C = i();
                            G = i();
                            E = ((D & 15) << 12) | (C << 6) | G;
                            if (E >= 2048) {
                                return E
                            } else {
                                throw Error("Invalid continuation byte")
                            }
                        }
                        if ((D & 248) == 240) {
                            C = i();
                            G = i();
                            F = i();
                            E = ((D & 15) << 18) | (C << 12) | (G << 6) | F;
                            if (E >= 65536 && E <= 1114111) {
                                return E
                            }
                        }
                        throw Error("Invalid UTF-8 detected")
                    }
                    var s;
                    var q;
                    var r;
                    function j(E) {
                        s = n(E);
                        q = s.length;
                        r = 0;
                        var C = [];
                        var D;
                        while ((D = k()) !== false) {
                            C.push(D)
                        }
                        return y(C)
                    }
                    var l = {
                        version: "2.0.0",
                        encode: w,
                        decode: j
                    };
                    if (typeof d == "function" && typeof d.amd == "object" && d.amd) {
                        d(function() {
                            return l
                        })
                    } else {
                        if (o && !o.nodeType) {
                            if (B) {
                                B.exports = l
                            } else {
                                var z = {};
                                var p = z.hasOwnProperty;
                                for (var A in l) {
                                    p.call(l, A) && (o[A] = l[A])
                                }
                            }
                        } else {
                            v.utf8 = l
                        }
                    }
                }(this))
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {}],
        28: [function(g, f, e) {
            (function(l) {
                var h = /^[\],:{}\s]*$/;
                var k = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
                var n = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
                var o = /(?:^|:|,)(?:\s*\[)+/g;
                var m = /^\s+/;
                var j = /\s+$/;
                f.exports = function i(p) {
                    if ("string" != typeof p || !p) {
                        return null
                    }
                    p = p.replace(m, "").replace(j, "");
                    if (l.JSON && JSON.parse) {
                        return JSON.parse(p)
                    }
                    if (h.test(p.replace(k, "@").replace(n, "]").replace(o, ""))) {
                        return (new Function("return " + p))()
                    }
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {}],
        29: [function(g, f, e) {
            e.encode = function(j) {
                var k = "";
                for (var h in j) {
                    if (j.hasOwnProperty(h)) {
                        if (k.length) {
                            k += "&"
                        }
                        k += encodeURIComponent(h) + "=" + encodeURIComponent(j[h])
                    }
                }
                return k
            }
            ;
            e.decode = function(h) {
                var m = {};
                var n = h.split("&");
                for (var k = 0, j = n.length; k < j; k++) {
                    var o = n[k].split("=");
                    m[decodeURIComponent(o[0])] = decodeURIComponent(o[1])
                }
                return m
            }
        }
        , {}],
        30: [function(h, f, e) {
            var g = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
            var j = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            f.exports = function i(r) {
                var q = r
                  , l = r.indexOf("[")
                  , p = r.indexOf("]");
                if (l != -1 && p != -1) {
                    r = r.substring(0, l) + r.substring(l, p).replace(/:/g, ";") + r.substring(p, r.length)
                }
                var k = g.exec(r || "")
                  , o = {}
                  , n = 14;
                while (n--) {
                    o[j[n]] = k[n] || ""
                }
                if (l != -1 && p != -1) {
                    o.source = q;
                    o.host = o.host.substring(1, o.host.length - 1).replace(/;/g, ":");
                    o.authority = o.authority.replace("[", "").replace("]", "").replace(/;/g, ":");
                    o.ipv6uri = true
                }
                return o
            }
        }
        , {}],
        31: [function(j, h, f) {
            var i = (function() {
                return this
            }
            )();
            var g = i.WebSocket || i.MozWebSocket;
            h.exports = g ? e : null;
            function e(n, m, l) {
                var k;
                if (m) {
                    k = new g(n,m)
                } else {
                    k = new g(n)
                }
                return k
            }
            if (g) {
                e.prototype = g.prototype
            }
        }
        , {}],
        32: [function(g, f, e) {
            (function(j) {
                var h = g("isarray");
                f.exports = i;
                function i(l) {
                    function k(o) {
                        if (!o) {
                            return false
                        }
                        if ((j.Buffer && j.Buffer.isBuffer(o)) || (j.ArrayBuffer && o instanceof ArrayBuffer) || (j.Blob && o instanceof Blob) || (j.File && o instanceof File)) {
                            return true
                        }
                        if (h(o)) {
                            for (var n = 0; n < o.length; n++) {
                                if (k(o[n])) {
                                    return true
                                }
                            }
                        } else {
                            if (o && "object" == typeof o) {
                                if (o.toJSON) {
                                    o = o.toJSON()
                                }
                                for (var m in o) {
                                    if (o.hasOwnProperty(m) && k(o[m])) {
                                        return true
                                    }
                                }
                            }
                        }
                        return false
                    }
                    return k(l)
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            isarray: 33
        }],
        33: [function(g, f, e) {
            f.exports = Array.isArray || function(h) {
                return Object.prototype.toString.call(h) == "[object Array]"
            }
        }
        , {}],
        34: [function(i, f, e) {
            var h = i("global");
            try {
                f.exports = "XMLHttpRequest"in h && "withCredentials"in new h.XMLHttpRequest()
            } catch (g) {
                f.exports = false
            }
        }
        , {
            global: 35
        }],
        35: [function(g, f, e) {
            f.exports = (function() {
                return this
            }
            )()
        }
        , {}],
        36: [function(h, f, e) {
            var g = [].indexOf;
            f.exports = function(j, l) {
                if (g) {
                    return j.indexOf(l)
                }
                for (var k = 0; k < j.length; ++k) {
                    if (j[k] === l) {
                        return k
                    }
                }
                return -1
            }
        }
        , {}],
        37: [function(h, g, e) {
            var f = Object.prototype.hasOwnProperty;
            e.keys = Object.keys || function(k) {
                var j = [];
                for (var i in k) {
                    if (f.call(k, i)) {
                        j.push(i)
                    }
                }
                return j
            }
            ;
            e.values = function(k) {
                var j = [];
                for (var i in k) {
                    if (f.call(k, i)) {
                        j.push(k[i])
                    }
                }
                return j
            }
            ;
            e.merge = function(j, i) {
                for (var k in i) {
                    if (f.call(i, k)) {
                        j[k] = i[k]
                    }
                }
                return j
            }
            ;
            e.length = function(i) {
                return e.keys(i).length
            }
            ;
            e.isEmpty = function(i) {
                return 0 == e.length(i)
            }
        }
        , {}],
        38: [function(h, f, e) {
            var g = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
            var j = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            f.exports = function i(o) {
                var k = g.exec(o || "")
                  , n = {}
                  , l = 14;
                while (l--) {
                    n[j[l]] = k[l] || ""
                }
                return n
            }
        }
        , {}],
        39: [function(g, f, e) {
            (function(i) {
                var h = g("isarray");
                var j = g("./is-buffer");
                e.deconstructPacket = function(o) {
                    var l = [];
                    var k = o.data;
                    function n(s) {
                        if (!s) {
                            return s
                        }
                        if (j(s)) {
                            var t = {
                                _placeholder: true,
                                num: l.length
                            };
                            l.push(s);
                            return t
                        } else {
                            if (h(s)) {
                                var r = new Array(s.length);
                                for (var q = 0; q < s.length; q++) {
                                    r[q] = n(s[q])
                                }
                                return r
                            } else {
                                if ("object" == typeof s && !(s instanceof Date)) {
                                    var r = {};
                                    for (var p in s) {
                                        r[p] = n(s[p])
                                    }
                                    return r
                                }
                            }
                        }
                        return s
                    }
                    var m = o;
                    m.data = n(k);
                    m.attachments = l.length;
                    return {
                        packet: m,
                        buffers: l
                    }
                }
                ;
                e.reconstructPacket = function(n, l) {
                    var k = 0;
                    function m(r) {
                        if (r && r._placeholder) {
                            var o = l[r.num];
                            return o
                        } else {
                            if (h(r)) {
                                for (var q = 0; q < r.length; q++) {
                                    r[q] = m(r[q])
                                }
                                return r
                            } else {
                                if (r && "object" == typeof r) {
                                    for (var p in r) {
                                        r[p] = m(r[p])
                                    }
                                    return r
                                }
                            }
                        }
                        return r
                    }
                    n.data = m(n.data);
                    n.attachments = undefined;
                    return n
                }
                ;
                e.removeBlobs = function(m, o) {
                    function n(t, u, q) {
                        if (!t) {
                            return t
                        }
                        if ((i.Blob && t instanceof Blob) || (i.File && t instanceof File)) {
                            k++;
                            var p = new FileReader();
                            p.onload = function() {
                                if (q) {
                                    q[u] = this.result
                                } else {
                                    l = this.result
                                }
                                if (!--k) {
                                    o(l)
                                }
                            }
                            ;
                            p.readAsArrayBuffer(t)
                        } else {
                            if (h(t)) {
                                for (var s = 0; s < t.length; s++) {
                                    n(t[s], s, t)
                                }
                            } else {
                                if (t && "object" == typeof t && !j(t)) {
                                    for (var r in t) {
                                        n(t[r], r, t)
                                    }
                                }
                            }
                        }
                    }
                    var k = 0;
                    var l = m;
                    n(l);
                    if (!k) {
                        o(l)
                    }
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {
            "./is-buffer": 41,
            isarray: 42
        }],
        40: [function(g, h, l) {
            var f = g("debug")("socket.io-parser");
            var t = g("json3");
            var o = g("isarray");
            var q = g("component-emitter");
            var n = g("./binary");
            var e = g("./is-buffer");
            l.protocol = 4;
            l.types = ["CONNECT", "DISCONNECT", "EVENT", "BINARY_EVENT", "ACK", "BINARY_ACK", "ERROR"];
            l.CONNECT = 0;
            l.DISCONNECT = 1;
            l.EVENT = 2;
            l.ACK = 3;
            l.ERROR = 4;
            l.BINARY_EVENT = 5;
            l.BINARY_ACK = 6;
            l.Encoder = k;
            l.Decoder = s;
            function k() {}
            k.prototype.encode = function(v, w) {
                f("encoding packet %j", v);
                if (l.BINARY_EVENT == v.type || l.BINARY_ACK == v.type) {
                    i(v, w)
                } else {
                    var u = j(v);
                    w([u])
                }
            }
            ;
            function j(v) {
                var w = "";
                var u = false;
                w += v.type;
                if (l.BINARY_EVENT == v.type || l.BINARY_ACK == v.type) {
                    w += v.attachments;
                    w += "-"
                }
                if (v.nsp && "/" != v.nsp) {
                    u = true;
                    w += v.nsp
                }
                if (null != v.id) {
                    if (u) {
                        w += ",";
                        u = false
                    }
                    w += v.id
                }
                if (null != v.data) {
                    if (u) {
                        w += ","
                    }
                    w += t.stringify(v.data)
                }
                f("encoded %j as %s", v, w);
                return w
            }
            function i(v, w) {
                function u(A) {
                    var y = n.deconstructPacket(A);
                    var z = j(y.packet);
                    var x = y.buffers;
                    x.unshift(z);
                    w(x)
                }
                n.removeBlobs(v, u)
            }
            function s() {
                this.reconstructor = null
            }
            q(s.prototype);
            s.prototype.add = function(v) {
                var u;
                if ("string" == typeof v) {
                    u = m(v);
                    if (l.BINARY_EVENT == u.type || l.BINARY_ACK == u.type) {
                        this.reconstructor = new r(u);
                        if (this.reconstructor.reconPack.attachments == 0) {
                            this.emit("decoded", u)
                        }
                    } else {
                        this.emit("decoded", u)
                    }
                } else {
                    if (e(v) || v.base64) {
                        if (!this.reconstructor) {
                            throw new Error("got binary data when not reconstructing a packet")
                        } else {
                            u = this.reconstructor.takeBinaryData(v);
                            if (u) {
                                this.reconstructor = null;
                                this.emit("decoded", u)
                            }
                        }
                    } else {
                        throw new Error("Unknown type: " + v)
                    }
                }
            }
            ;
            function m(y) {
                var x = {};
                var u = 0;
                x.type = Number(y.charAt(0));
                if (null == l.types[x.type]) {
                    return p()
                }
                if (l.BINARY_EVENT == x.type || l.BINARY_ACK == x.type) {
                    x.attachments = "";
                    while (y.charAt(++u) != "-") {
                        x.attachments += y.charAt(u)
                    }
                    x.attachments = Number(x.attachments)
                }
                if ("/" == y.charAt(u + 1)) {
                    x.nsp = "";
                    while (++u) {
                        var z = y.charAt(u);
                        if ("," == z) {
                            break
                        }
                        x.nsp += z;
                        if (u + 1 == y.length) {
                            break
                        }
                    }
                } else {
                    x.nsp = "/"
                }
                var v = y.charAt(u + 1);
                if ("" != v && Number(v) == v) {
                    x.id = "";
                    while (++u) {
                        var z = y.charAt(u);
                        if (null == z || Number(z) != z) {
                            --u;
                            break
                        }
                        x.id += y.charAt(u);
                        if (u + 1 == y.length) {
                            break
                        }
                    }
                    x.id = Number(x.id)
                }
                if (y.charAt(++u)) {
                    try {
                        x.data = t.parse(y.substr(u))
                    } catch (w) {
                        return p()
                    }
                }
                f("decoded %s as %j", y, x);
                return x
            }
            s.prototype.destroy = function() {
                if (this.reconstructor) {
                    this.reconstructor.finishedReconstruction()
                }
            }
            ;
            function r(u) {
                this.reconPack = u;
                this.buffers = []
            }
            r.prototype.takeBinaryData = function(u) {
                this.buffers.push(u);
                if (this.buffers.length == this.reconPack.attachments) {
                    var v = n.reconstructPacket(this.reconPack, this.buffers);
                    this.finishedReconstruction();
                    return v
                }
                return null
            }
            ;
            r.prototype.finishedReconstruction = function() {
                this.reconPack = null;
                this.buffers = []
            }
            ;
            function p(u) {
                return {
                    type: l.ERROR,
                    data: "parser error"
                }
            }
        }
        , {
            "./binary": 39,
            "./is-buffer": 41,
            "component-emitter": 8,
            debug: 9,
            isarray: 42,
            json3: 43
        }],
        41: [function(g, f, e) {
            (function(h) {
                f.exports = i;
                function i(j) {
                    return (h.Buffer && h.Buffer.isBuffer(j)) || (h.ArrayBuffer && j instanceof ArrayBuffer)
                }
            }
            ).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
        }
        , {}],
        42: [function(g, f, e) {
            f.exports = g(33)
        }
        , {}],
        43: [function(g, f, e) {
            /*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */
            ;(function(M) {
                var q = {}.toString, m, h, F;
                var D = typeof d === "function" && d.amd;
                var R = typeof JSON == "object" && JSON;
                var L = typeof e == "object" && e && !e.nodeType && e;
                if (L && R) {
                    L.stringify = R.stringify;
                    L.parse = R.parse
                } else {
                    L = M.JSON = R || {}
                }
                var w = new Date(-3509827334573292);
                try {
                    w = w.getUTCFullYear() == -109252 && w.getUTCMonth() === 0 && w.getUTCDate() === 1 && w.getUTCHours() == 10 && w.getUTCMinutes() == 37 && w.getUTCSeconds() == 6 && w.getUTCMilliseconds() == 708
                } catch (r) {}
                function j(T) {
                    if (j[T] !== F) {
                        return j[T]
                    }
                    var U;
                    if (T == "bug-string-char-index") {
                        U = "a"[0] != "a"
                    } else {
                        if (T == "json") {
                            U = j("json-stringify") && j("json-parse")
                        } else {
                            var ab, Y = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                            if (T == "json-stringify") {
                                var Z = L.stringify
                                  , aa = typeof Z == "function" && w;
                                if (aa) {
                                    (ab = function() {
                                        return 1
                                    }
                                    ).toJSON = ab;
                                    try {
                                        aa = Z(0) === "0" && Z(new Number()) === "0" && Z(new String()) == '""' && Z(q) === F && Z(F) === F && Z() === F && Z(ab) === "1" && Z([ab]) == "[1]" && Z([F]) == "[null]" && Z(null) == "null" && Z([F, q, null]) == "[null,null,null]" && Z({
                                            a: [ab, true, false, null, "\x00\b\n\f\r\t"]
                                        }) == Y && Z(null, ab) === "1" && Z([1, 2], null, 1) == "[\n 1,\n 2\n]" && Z(new Date(-8640000000000000)) == '"-271821-04-20T00:00:00.000Z"' && Z(new Date(8640000000000000)) == '"+275760-09-13T00:00:00.000Z"' && Z(new Date(-62198755200000)) == '"-000001-01-01T00:00:00.000Z"' && Z(new Date(-1)) == '"1969-12-31T23:59:59.999Z"'
                                    } catch (V) {
                                        aa = false
                                    }
                                }
                                U = aa
                            }
                            if (T == "json-parse") {
                                var X = L.parse;
                                if (typeof X == "function") {
                                    try {
                                        if (X("0") === 0 && !X(false)) {
                                            ab = X(Y);
                                            var W = ab.a.length == 5 && ab.a[0] === 1;
                                            if (W) {
                                                try {
                                                    W = !X('"\t"')
                                                } catch (V) {}
                                                if (W) {
                                                    try {
                                                        W = X("01") !== 1
                                                    } catch (V) {}
                                                }
                                                if (W) {
                                                    try {
                                                        W = X("1.") !== 1
                                                    } catch (V) {}
                                                }
                                            }
                                        }
                                    } catch (V) {
                                        W = false
                                    }
                                }
                                U = W
                            }
                        }
                    }
                    return j[T] = !!U
                }
                if (!j("json")) {
                    var N = "[object Function]";
                    var K = "[object Date]";
                    var H = "[object Number]";
                    var I = "[object String]";
                    var z = "[object Array]";
                    var v = "[object Boolean]";
                    var A = j("bug-string-char-index");
                    if (!w) {
                        var n = Math.floor;
                        var S = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
                        var y = function(T, U) {
                            return S[U] + 365 * (T - 1970) + n((T - 1969 + (U = +(U > 1))) / 4) - n((T - 1901 + U) / 100) + n((T - 1601 + U) / 400)
                        }
                    }
                    if (!(m = {}.hasOwnProperty)) {
                        m = function(V) {
                            var T = {}, U;
                            if ((T.__proto__ = null,
                            T.__proto__ = {
                                toString: 1
                            },
                            T).toString != q) {
                                m = function(Y) {
                                    var X = this.__proto__
                                      , W = Y in (this.__proto__ = null,
                                    this);
                                    this.__proto__ = X;
                                    return W
                                }
                            } else {
                                U = T.constructor;
                                m = function(X) {
                                    var W = (this.constructor || U).prototype;
                                    return X in this && !(X in W && this[X] === W[X])
                                }
                            }
                            T = null;
                            return m.call(this, V)
                        }
                    }
                    var O = {
                        "boolean": 1,
                        number: 1,
                        string: 1,
                        "undefined": 1
                    };
                    var p = function(T, V) {
                        var U = typeof T[V];
                        return U == "object" ? !!T[V] : !O[U]
                    };
                    h = function(V, Y) {
                        var W = 0, T, U, X;
                        (T = function() {
                            this.valueOf = 0
                        }
                        ).prototype.valueOf = 0;
                        U = new T();
                        for (X in U) {
                            if (m.call(U, X)) {
                                W++
                            }
                        }
                        T = U = null;
                        if (!W) {
                            U = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];
                            h = function(aa, ae) {
                                var ad = q.call(aa) == N, ac, ab;
                                var Z = !ad && typeof aa.constructor != "function" && p(aa, "hasOwnProperty") ? aa.hasOwnProperty : m;
                                for (ac in aa) {
                                    if (!(ad && ac == "prototype") && Z.call(aa, ac)) {
                                        ae(ac)
                                    }
                                }
                                for (ab = U.length; ac = U[--ab]; Z.call(aa, ac) && ae(ac)) {}
                            }
                        } else {
                            if (W == 2) {
                                h = function(aa, ad) {
                                    var Z = {}, ac = q.call(aa) == N, ab;
                                    for (ab in aa) {
                                        if (!(ac && ab == "prototype") && !m.call(Z, ab) && (Z[ab] = 1) && m.call(aa, ab)) {
                                            ad(ab)
                                        }
                                    }
                                }
                            } else {
                                h = function(aa, ad) {
                                    var ac = q.call(aa) == N, ab, Z;
                                    for (ab in aa) {
                                        if (!(ac && ab == "prototype") && m.call(aa, ab) && !(Z = ab === "constructor")) {
                                            ad(ab)
                                        }
                                    }
                                    if (Z || m.call(aa, (ab = "constructor"))) {
                                        ad(ab)
                                    }
                                }
                            }
                        }
                        return h(V, Y)
                    }
                    ;
                    if (!j("json-stringify")) {
                        var l = {
                            92: "\\\\",
                            34: '\\"',
                            8: "\\b",
                            12: "\\f",
                            10: "\\n",
                            13: "\\r",
                            9: "\\t"
                        };
                        var E = "000000";
                        var o = function(T, U) {
                            return (E + (U || 0)).slice(-T)
                        };
                        var t = "\\u00";
                        var x = function(Z) {
                            var T = '"', W = 0, X = Z.length, Y = X > 10 && A, V;
                            if (Y) {
                                V = Z.split("")
                            }
                            for (; W < X; W++) {
                                var U = Z.charCodeAt(W);
                                switch (U) {
                                case 8:
                                case 9:
                                case 10:
                                case 12:
                                case 13:
                                case 34:
                                case 92:
                                    T += l[U];
                                    break;
                                default:
                                    if (U < 32) {
                                        T += t + o(2, U.toString(16));
                                        break
                                    }
                                    T += Y ? V[W] : A ? Z.charAt(W) : Z[W]
                                }
                            }
                            return T + '"'
                        };
                        var k = function(Z, aq, X, ac, an, T, aa) {
                            var aj, V, ag, ap, ao, ab, am, ak, ah, ae, ai, U, Y, W, al, af;
                            try {
                                aj = aq[Z]
                            } catch (ad) {}
                            if (typeof aj == "object" && aj) {
                                V = q.call(aj);
                                if (V == K && !m.call(aj, "toJSON")) {
                                    if (aj > -1 / 0 && aj < 1 / 0) {
                                        if (y) {
                                            ao = n(aj / 86400000);
                                            for (ag = n(ao / 365.2425) + 1970 - 1; y(ag + 1, 0) <= ao; ag++) {}
                                            for (ap = n((ao - y(ag, 0)) / 30.42); y(ag, ap + 1) <= ao; ap++) {}
                                            ao = 1 + ao - y(ag, ap);
                                            ab = (aj % 86400000 + 86400000) % 86400000;
                                            am = n(ab / 3600000) % 24;
                                            ak = n(ab / 60000) % 60;
                                            ah = n(ab / 1000) % 60;
                                            ae = ab % 1000
                                        } else {
                                            ag = aj.getUTCFullYear();
                                            ap = aj.getUTCMonth();
                                            ao = aj.getUTCDate();
                                            am = aj.getUTCHours();
                                            ak = aj.getUTCMinutes();
                                            ah = aj.getUTCSeconds();
                                            ae = aj.getUTCMilliseconds()
                                        }
                                        aj = (ag <= 0 || ag >= 10000 ? (ag < 0 ? "-" : "+") + o(6, ag < 0 ? -ag : ag) : o(4, ag)) + "-" + o(2, ap + 1) + "-" + o(2, ao) + "T" + o(2, am) + ":" + o(2, ak) + ":" + o(2, ah) + "." + o(3, ae) + "Z"
                                    } else {
                                        aj = null
                                    }
                                } else {
                                    if (typeof aj.toJSON == "function" && ((V != H && V != I && V != z) || m.call(aj, "toJSON"))) {
                                        aj = aj.toJSON(Z)
                                    }
                                }
                            }
                            if (X) {
                                aj = X.call(aq, Z, aj)
                            }
                            if (aj === null) {
                                return "null"
                            }
                            V = q.call(aj);
                            if (V == v) {
                                return "" + aj
                            } else {
                                if (V == H) {
                                    return aj > -1 / 0 && aj < 1 / 0 ? "" + aj : "null"
                                } else {
                                    if (V == I) {
                                        return x("" + aj)
                                    }
                                }
                            }
                            if (typeof aj == "object") {
                                for (W = aa.length; W--; ) {
                                    if (aa[W] === aj) {
                                        throw TypeError()
                                    }
                                }
                                aa.push(aj);
                                ai = [];
                                al = T;
                                T += an;
                                if (V == z) {
                                    for (Y = 0,
                                    W = aj.length; Y < W; Y++) {
                                        U = k(Y, aj, X, ac, an, T, aa);
                                        ai.push(U === F ? "null" : U)
                                    }
                                    af = ai.length ? (an ? "[\n" + T + ai.join(",\n" + T) + "\n" + al + "]" : ("[" + ai.join(",") + "]")) : "[]"
                                } else {
                                    h(ac || aj, function(at) {
                                        var ar = k(at, aj, X, ac, an, T, aa);
                                        if (ar !== F) {
                                            ai.push(x(at) + ":" + (an ? " " : "") + ar)
                                        }
                                    });
                                    af = ai.length ? (an ? "{\n" + T + ai.join(",\n" + T) + "\n" + al + "}" : ("{" + ai.join(",") + "}")) : "{}"
                                }
                                aa.pop();
                                return af
                            }
                        };
                        L.stringify = function(T, V, W) {
                            var U, ac, aa, Z;
                            if (typeof V == "function" || typeof V == "object" && V) {
                                if ((Z = q.call(V)) == N) {
                                    ac = V
                                } else {
                                    if (Z == z) {
                                        aa = {};
                                        for (var Y = 0, X = V.length, ab; Y < X; ab = V[Y++],
                                        ((Z = q.call(ab)),
                                        Z == I || Z == H) && (aa[ab] = 1)) {}
                                    }
                                }
                            }
                            if (W) {
                                if ((Z = q.call(W)) == H) {
                                    if ((W -= W % 1) > 0) {
                                        for (U = "",
                                        W > 10 && (W = 10); U.length < W; U += " ") {}
                                    }
                                } else {
                                    if (Z == I) {
                                        U = W.length <= 10 ? W : W.slice(0, 10)
                                    }
                                }
                            }
                            return k("", (ab = {},
                            ab[""] = T,
                            ab), ac, aa, U, "", [])
                        }
                    }
                    if (!j("json-parse")) {
                        var G = String.fromCharCode;
                        var i = {
                            92: "\\",
                            34: '"',
                            47: "/",
                            98: "\b",
                            116: "\t",
                            110: "\n",
                            102: "\f",
                            114: "\r"
                        };
                        var B, Q;
                        var C = function() {
                            B = Q = null;
                            throw SyntaxError()
                        };
                        var u = function() {
                            var Y = Q, W = Y.length, X, V, T, Z, U;
                            while (B < W) {
                                U = Y.charCodeAt(B);
                                switch (U) {
                                case 9:
                                case 10:
                                case 13:
                                case 32:
                                    B++;
                                    break;
                                case 123:
                                case 125:
                                case 91:
                                case 93:
                                case 58:
                                case 44:
                                    X = A ? Y.charAt(B) : Y[B];
                                    B++;
                                    return X;
                                case 34:
                                    for (X = "@",
                                    B++; B < W; ) {
                                        U = Y.charCodeAt(B);
                                        if (U < 32) {
                                            C()
                                        } else {
                                            if (U == 92) {
                                                U = Y.charCodeAt(++B);
                                                switch (U) {
                                                case 92:
                                                case 34:
                                                case 47:
                                                case 98:
                                                case 116:
                                                case 110:
                                                case 102:
                                                case 114:
                                                    X += i[U];
                                                    B++;
                                                    break;
                                                case 117:
                                                    V = ++B;
                                                    for (T = B + 4; B < T; B++) {
                                                        U = Y.charCodeAt(B);
                                                        if (!(U >= 48 && U <= 57 || U >= 97 && U <= 102 || U >= 65 && U <= 70)) {
                                                            C()
                                                        }
                                                    }
                                                    X += G("0x" + Y.slice(V, B));
                                                    break;
                                                default:
                                                    C()
                                                }
                                            } else {
                                                if (U == 34) {
                                                    break
                                                }
                                                U = Y.charCodeAt(B);
                                                V = B;
                                                while (U >= 32 && U != 92 && U != 34) {
                                                    U = Y.charCodeAt(++B)
                                                }
                                                X += Y.slice(V, B)
                                            }
                                        }
                                    }
                                    if (Y.charCodeAt(B) == 34) {
                                        B++;
                                        return X
                                    }
                                    C();
                                default:
                                    V = B;
                                    if (U == 45) {
                                        Z = true;
                                        U = Y.charCodeAt(++B)
                                    }
                                    if (U >= 48 && U <= 57) {
                                        if (U == 48 && ((U = Y.charCodeAt(B + 1)),
                                        U >= 48 && U <= 57)) {
                                            C()
                                        }
                                        Z = false;
                                        for (; B < W && ((U = Y.charCodeAt(B)),
                                        U >= 48 && U <= 57); B++) {}
                                        if (Y.charCodeAt(B) == 46) {
                                            T = ++B;
                                            for (; T < W && ((U = Y.charCodeAt(T)),
                                            U >= 48 && U <= 57); T++) {}
                                            if (T == B) {
                                                C()
                                            }
                                            B = T
                                        }
                                        U = Y.charCodeAt(B);
                                        if (U == 101 || U == 69) {
                                            U = Y.charCodeAt(++B);
                                            if (U == 43 || U == 45) {
                                                B++
                                            }
                                            for (T = B; T < W && ((U = Y.charCodeAt(T)),
                                            U >= 48 && U <= 57); T++) {}
                                            if (T == B) {
                                                C()
                                            }
                                            B = T
                                        }
                                        return +Y.slice(V, B)
                                    }
                                    if (Z) {
                                        C()
                                    }
                                    if (Y.slice(B, B + 4) == "true") {
                                        B += 4;
                                        return true
                                    } else {
                                        if (Y.slice(B, B + 5) == "false") {
                                            B += 5;
                                            return false
                                        } else {
                                            if (Y.slice(B, B + 4) == "null") {
                                                B += 4;
                                                return null
                                            }
                                        }
                                    }
                                    C()
                                }
                            }
                            return "$"
                        };
                        var P = function(U) {
                            var T, V;
                            if (U == "$") {
                                C()
                            }
                            if (typeof U == "string") {
                                if ((A ? U.charAt(0) : U[0]) == "@") {
                                    return U.slice(1)
                                }
                                if (U == "[") {
                                    T = [];
                                    for (; ; V || (V = true)) {
                                        U = u();
                                        if (U == "]") {
                                            break
                                        }
                                        if (V) {
                                            if (U == ",") {
                                                U = u();
                                                if (U == "]") {
                                                    C()
                                                }
                                            } else {
                                                C()
                                            }
                                        }
                                        if (U == ",") {
                                            C()
                                        }
                                        T.push(P(U))
                                    }
                                    return T
                                } else {
                                    if (U == "{") {
                                        T = {};
                                        for (; ; V || (V = true)) {
                                            U = u();
                                            if (U == "}") {
                                                break
                                            }
                                            if (V) {
                                                if (U == ",") {
                                                    U = u();
                                                    if (U == "}") {
                                                        C()
                                                    }
                                                } else {
                                                    C()
                                                }
                                            }
                                            if (U == "," || typeof U != "string" || (A ? U.charAt(0) : U[0]) != "@" || u() != ":") {
                                                C()
                                            }
                                            T[U.slice(1)] = P(u())
                                        }
                                        return T
                                    }
                                }
                                C()
                            }
                            return U
                        };
                        var J = function(V, U, W) {
                            var T = s(V, U, W);
                            if (T === F) {
                                delete V[U]
                            } else {
                                V[U] = T
                            }
                        };
                        var s = function(W, V, X) {
                            var U = W[V], T;
                            if (typeof U == "object" && U) {
                                if (q.call(U) == z) {
                                    for (T = U.length; T--; ) {
                                        J(U, T, X)
                                    }
                                } else {
                                    h(U, function(Y) {
                                        J(U, Y, X)
                                    })
                                }
                            }
                            return X.call(W, V, U)
                        };
                        L.parse = function(V, W) {
                            var T, U;
                            B = 0;
                            Q = "" + V;
                            T = P(u());
                            if (u() != "$") {
                                C()
                            }
                            B = Q = null;
                            return W && q.call(W) == N ? s((U = {},
                            U[""] = T,
                            U), "", W) : T
                        }
                    }
                }
                if (D) {
                    d(function() {
                        return L
                    })
                }
            }(this))
        }
        , {}],
        44: [function(h, g, e) {
            g.exports = f;
            function f(l, j) {
                var m = [];
                j = j || 0;
                for (var k = j || 0; k < l.length; k++) {
                    m[k - j] = l[k]
                }
                return m
            }
        }
        , {}]
    }, {}, [1])(1)
});
(function(dV, el, fE) {
    function eT(f0, f1) {
        f1 = f1 || Error;
        return function() {
            var f8 = 2;
            var f2 = arguments, f7 = f2[0], f6 = "[" + (f0 ? f0 + ":" : "") + f7 + "] ", f5 = f2[1], f3, f4;
            f6 += f5.replace(/\{\d+\}/g, function(ga) {
                var f9 = +ga.slice(1, -1)
                  , gb = f9 + f8;
                if (gb < f2.length) {
                    return fr(f2[gb])
                }
                return ga
            });
            f6 += "\nhttp://errors.angularjs.org/1.4.3/" + (f0 ? f0 + "/" : "") + f7;
            for (f4 = f8,
            f3 = "?"; f4 < f2.length; f4++,
            f3 = "&") {
                f6 += f3 + "p" + (f4 - f8) + "=" + encodeURIComponent(fr(f2[f4]))
            }
            return new f1(f6)
        }
    }
    var cq = /^\/(.+)\/([a-z]*)$/;
    var fv = "validity";
    var db = function(f0) {
        return w(f0) ? f0.toLowerCase() : f0
    };
    var O = Object.prototype.hasOwnProperty;
    var a4 = function(f0) {
        return w(f0) ? f0.toUpperCase() : f0
    };
    var cK = function(f0) {
        return w(f0) ? f0.replace(/[A-Z]/g, function(f1) {
            return String.fromCharCode(f1.charCodeAt(0) | 32)
        }) : f0
    };
    var e7 = function(f0) {
        return w(f0) ? f0.replace(/[a-z]/g, function(f1) {
            return String.fromCharCode(f1.charCodeAt(0) & ~32)
        }) : f0
    };
    if ("i" !== "I".toLowerCase()) {
        db = cK;
        a4 = e7
    }
    var e8, ac, fz, cW = [].slice, dZ = [].splice, cl = [].push, eC = Object.prototype.toString, ak = Object.getPrototypeOf, eW = eT("ng"), cY = dV.angular || (dV.angular = {}), fY, k = 0;
    e8 = el.documentMode;
    function b2(f1) {
        if (f1 == null || eS(f1)) {
            return false
        }
        var f0 = "length"in Object(f1) && f1.length;
        if (f1.nodeType === bB && f0) {
            return true
        }
        return w(f1) || U(f1) || f0 === 0 || typeof f0 === "number" && f0 > 0 && (f0 - 1)in f1
    }
    function bj(f5, f3, f2) {
        var f1, f4;
        if (f5) {
            if (bn(f5)) {
                for (f1 in f5) {
                    if (f1 != "prototype" && f1 != "length" && f1 != "name" && (!f5.hasOwnProperty || f5.hasOwnProperty(f1))) {
                        f3.call(f2, f5[f1], f1, f5)
                    }
                }
            } else {
                if (U(f5) || b2(f5)) {
                    var f0 = typeof f5 !== "object";
                    for (f1 = 0,
                    f4 = f5.length; f1 < f4; f1++) {
                        if (f0 || f1 in f5) {
                            f3.call(f2, f5[f1], f1, f5)
                        }
                    }
                } else {
                    if (f5.forEach && f5.forEach !== bj) {
                        f5.forEach(f3, f2, f5)
                    } else {
                        if (fO(f5)) {
                            for (f1 in f5) {
                                f3.call(f2, f5[f1], f1, f5)
                            }
                        } else {
                            if (typeof f5.hasOwnProperty === "function") {
                                for (f1 in f5) {
                                    if (f5.hasOwnProperty(f1)) {
                                        f3.call(f2, f5[f1], f1, f5)
                                    }
                                }
                            } else {
                                for (f1 in f5) {
                                    if (O.call(f5, f1)) {
                                        f3.call(f2, f5[f1], f1, f5)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return f5
    }
    function dy(f4, f2, f1) {
        var f3 = Object.keys(f4).sort();
        for (var f0 = 0; f0 < f3.length; f0++) {
            f2.call(f1, f4[f3[f0]], f3[f0])
        }
        return f3
    }
    function dP(f0) {
        return function(f2, f1) {
            f0(f1, f2)
        }
    }
    function aP() {
        return ++k
    }
    function cn(f1, f0) {
        if (f0) {
            f1.$$hashKey = f0
        } else {
            delete f1.$$hashKey
        }
    }
    function c0(f7, f4, f9) {
        var f5 = f7.$$hashKey;
        for (var f3 = 0, ga = f4.length; f3 < ga; ++f3) {
            var f2 = f4[f3];
            if (!s(f2) && !bn(f2)) {
                continue
            }
            var gb = Object.keys(f2);
            for (var f1 = 0, f6 = gb.length; f1 < f6; f1++) {
                var f8 = gb[f1];
                var f0 = f2[f8];
                if (f9 && s(f0)) {
                    if (fe(f0)) {
                        f7[f8] = new Date(f0.valueOf())
                    } else {
                        if (!s(f7[f8])) {
                            f7[f8] = U(f0) ? [] : {}
                        }
                        c0(f7[f8], [f0], true)
                    }
                } else {
                    f7[f8] = f0
                }
            }
        }
        cn(f7, f5);
        return f7
    }
    function fU(f0) {
        return c0(f0, cW.call(arguments, 1), false)
    }
    function b3(f0) {
        return c0(f0, cW.call(arguments, 1), true)
    }
    function de(f0) {
        return parseInt(f0, 10)
    }
    function eo(f1, f0) {
        return fU(Object.create(f1), f0)
    }
    function eD() {}
    eD.$inject = [];
    function aU(f0) {
        return f0
    }
    aU.$inject = [];
    function V(f0) {
        return function() {
            return f0
        }
    }
    function dx(f0) {
        return bn(f0.toString) && f0.toString !== Object.prototype.toString
    }
    function x(f0) {
        return typeof f0 === "undefined"
    }
    function eX(f0) {
        return typeof f0 !== "undefined"
    }
    function s(f0) {
        return f0 !== null && typeof f0 === "object"
    }
    function fO(f0) {
        return f0 !== null && typeof f0 === "object" && !ak(f0)
    }
    function w(f0) {
        return typeof f0 === "string"
    }
    function p(f0) {
        return typeof f0 === "number"
    }
    function fe(f0) {
        return eC.call(f0) === "[object Date]"
    }
    var U = Array.isArray;
    function bn(f0) {
        return typeof f0 === "function"
    }
    function az(f0) {
        return eC.call(f0) === "[object RegExp]"
    }
    function eS(f0) {
        return f0 && f0.window === f0
    }
    function dO(f0) {
        return f0 && f0.$evalAsync && f0.$watch
    }
    function cP(f0) {
        return eC.call(f0) === "[object File]"
    }
    function eB(f0) {
        return eC.call(f0) === "[object FormData]"
    }
    function a(f0) {
        return eC.call(f0) === "[object Blob]"
    }
    function aH(f0) {
        return typeof f0 === "boolean"
    }
    function fH(f0) {
        return f0 && bn(f0.then)
    }
    var fy = /^\[object (Uint8(Clamped)?)|(Uint16)|(Uint32)|(Int8)|(Int16)|(Int32)|(Float(32)|(64))Array\]$/;
    function dM(f0) {
        return fy.test(eC.call(f0))
    }
    var aL = function(f0) {
        return w(f0) ? f0.trim() : f0
    };
    var ex = function(f0) {
        return f0.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
    };
    function q(f0) {
        return !!(f0 && (f0.nodeName || (f0.prop && f0.attr && f0.find)))
    }
    function t(f3) {
        var f2 = {}, f0 = f3.split(","), f1;
        for (f1 = 0; f1 < f0.length; f1++) {
            f2[f0[f1]] = true
        }
        return f2
    }
    function d4(f0) {
        return db(f0.nodeName || (f0[0] && f0[0].nodeName))
    }
    function an(f1, f0) {
        return Array.prototype.indexOf.call(f1, f0) != -1
    }
    function eI(f2, f1) {
        var f0 = f2.indexOf(f1);
        if (f0 >= 0) {
            f2.splice(f0, 1)
        }
        return f0
    }
    function fV(f0, f7, f1, f6) {
        if (eS(f0) || dO(f0)) {
            throw eW("cpws", "Can't copy! Making copies of Window or Scope instances is not supported.")
        }
        if (dM(f7)) {
            throw eW("cpta", "Can't copy! TypedArray destination cannot be mutated.")
        }
        if (!f7) {
            f7 = f0;
            if (s(f0)) {
                var f5;
                if (f1 && (f5 = f1.indexOf(f0)) !== -1) {
                    return f6[f5]
                }
                if (U(f0)) {
                    return fV(f0, [], f1, f6)
                } else {
                    if (dM(f0)) {
                        f7 = new f0.constructor(f0)
                    } else {
                        if (fe(f0)) {
                            f7 = new Date(f0.getTime())
                        } else {
                            if (az(f0)) {
                                f7 = new RegExp(f0.source,f0.toString().match(/[^\/]*$/)[0]);
                                f7.lastIndex = f0.lastIndex
                            } else {
                                var f2 = Object.create(ak(f0));
                                return fV(f0, f2, f1, f6)
                            }
                        }
                    }
                }
                if (f6) {
                    f1.push(f0);
                    f6.push(f7)
                }
            }
        } else {
            if (f0 === f7) {
                throw eW("cpi", "Can't copy! Source and destination are identical.")
            }
            f1 = f1 || [];
            f6 = f6 || [];
            if (s(f0)) {
                f1.push(f0);
                f6.push(f7)
            }
            var f9, f8;
            if (U(f0)) {
                f7.length = 0;
                for (var f3 = 0; f3 < f0.length; f3++) {
                    f7.push(fV(f0[f3], null, f1, f6))
                }
            } else {
                var f4 = f7.$$hashKey;
                if (U(f7)) {
                    f7.length = 0
                } else {
                    bj(f7, function(gb, ga) {
                        delete f7[ga]
                    })
                }
                if (fO(f0)) {
                    for (f8 in f0) {
                        f7[f8] = fV(f0[f8], null, f1, f6)
                    }
                } else {
                    if (f0 && typeof f0.hasOwnProperty === "function") {
                        for (f8 in f0) {
                            if (f0.hasOwnProperty(f8)) {
                                f7[f8] = fV(f0[f8], null, f1, f6)
                            }
                        }
                    } else {
                        for (f8 in f0) {
                            if (O.call(f0, f8)) {
                                f7[f8] = fV(f0[f8], null, f1, f6)
                            }
                        }
                    }
                }
                cn(f7, f4)
            }
        }
        return f7
    }
    function d8(f3, f4) {
        if (U(f3)) {
            f4 = f4 || [];
            for (var f1 = 0, f2 = f3.length; f1 < f2; f1++) {
                f4[f1] = f3[f1]
            }
        } else {
            if (s(f3)) {
                f4 = f4 || {};
                for (var f0 in f3) {
                    if (!(f0.charAt(0) === "$" && f0.charAt(1) === "$")) {
                        f4[f0] = f3[f0]
                    }
                }
            }
        }
        return f4 || f3
    }
    function dY(f6, f5) {
        if (f6 === f5) {
            return true
        }
        if (f6 === null || f5 === null) {
            return false
        }
        if (f6 !== f6 && f5 !== f5) {
            return true
        }
        var f4 = typeof f6, f2 = typeof f5, f3, f1, f0;
        if (f4 == f2) {
            if (f4 == "object") {
                if (U(f6)) {
                    if (!U(f5)) {
                        return false
                    }
                    if ((f3 = f6.length) == f5.length) {
                        for (f1 = 0; f1 < f3; f1++) {
                            if (!dY(f6[f1], f5[f1])) {
                                return false
                            }
                        }
                        return true
                    }
                } else {
                    if (fe(f6)) {
                        if (!fe(f5)) {
                            return false
                        }
                        return dY(f6.getTime(), f5.getTime())
                    } else {
                        if (az(f6)) {
                            return az(f5) ? f6.toString() == f5.toString() : false
                        } else {
                            if (dO(f6) || dO(f5) || eS(f6) || eS(f5) || U(f5) || fe(f5) || az(f5)) {
                                return false
                            }
                            f0 = fM();
                            for (f1 in f6) {
                                if (f1.charAt(0) === "$" || bn(f6[f1])) {
                                    continue
                                }
                                if (!dY(f6[f1], f5[f1])) {
                                    return false
                                }
                                f0[f1] = true
                            }
                            for (f1 in f5) {
                                if (!(f1 in f0) && f1.charAt(0) !== "$" && f5[f1] !== fE && !bn(f5[f1])) {
                                    return false
                                }
                            }
                            return true
                        }
                    }
                }
            }
        }
        return false
    }
    var al = function() {
        if (eX(al.isActive_)) {
            return al.isActive_
        }
        var f1 = !!(el.querySelector("[ng-csp]") || el.querySelector("[data-ng-csp]"));
        if (!f1) {
            try {
                new Function("")
            } catch (f0) {
                f1 = true
            }
        }
        return (al.isActive_ = f1)
    };
    var c7 = function() {
        if (eX(c7.name_)) {
            return c7.name_
        }
        var f3;
        var f1, f2 = di.length, f4, f0;
        for (f1 = 0; f1 < f2; ++f1) {
            f4 = di[f1];
            if (f3 = el.querySelector("[" + f4.replace(":", "\\:") + "jq]")) {
                f0 = f3.getAttribute(f4 + "jq");
                break
            }
        }
        return (c7.name_ = f0)
    };
    function fB(f2, f1, f0) {
        return f2.concat(cW.call(f1, f0))
    }
    function eV(f0, f1) {
        return cW.call(f0, f1 || 0)
    }
    function cv(f1, f2) {
        var f0 = arguments.length > 2 ? eV(arguments, 2) : [];
        if (bn(f2) && !(f2 instanceof RegExp)) {
            return f0.length ? function() {
                return arguments.length ? f2.apply(f1, fB(f0, arguments, 0)) : f2.apply(f1, f0)
            }
            : function() {
                return arguments.length ? f2.apply(f1, arguments) : f2.call(f1)
            }
        } else {
            return f2
        }
    }
    function e(f0, f1) {
        var f2 = f1;
        if (typeof f0 === "string" && f0.charAt(0) === "$" && f0.charAt(1) === "$") {
            f2 = fE
        } else {
            if (eS(f1)) {
                f2 = "$WINDOW"
            } else {
                if (f1 && el === f1) {
                    f2 = "$DOCUMENT"
                } else {
                    if (dO(f1)) {
                        f2 = "$SCOPE"
                    }
                }
            }
        }
        return f2
    }
    function aA(f1, f0) {
        if (typeof f1 === "undefined") {
            return fE
        }
        if (!p(f0)) {
            f0 = f0 ? 2 : null
        }
        return JSON.stringify(f1, e, f0)
    }
    function a2(f0) {
        return w(f0) ? JSON.parse(f0) : f0
    }
    function fF(f0, f2) {
        var f1 = Date.parse("Jan 01, 1970 00:00:00 " + f0) / 60000;
        return isNaN(f1) ? f2 : f1
    }
    function aI(f0, f1) {
        f0 = new Date(f0.getTime());
        f0.setMinutes(f0.getMinutes() + f1);
        return f0
    }
    function a0(f1, f3, f0) {
        f0 = f0 ? -1 : 1;
        var f2 = fF(f3, f1.getTimezoneOffset());
        return aI(f1, f0 * (f2 - f1.getTimezoneOffset()))
    }
    function ce(f0) {
        f0 = ac(f0).clone();
        try {
            f0.empty()
        } catch (f2) {}
        var f1 = ac("<div>").append(f0).html();
        try {
            return f0[0].nodeType === bz ? db(f1) : f1.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function(f3, f4) {
                return "<" + db(f4)
            })
        } catch (f2) {
            return db(f1)
        }
    }
    function bR(f0) {
        try {
            return decodeURIComponent(f0)
        } catch (f1) {}
    }
    function ah(f3) {
        var f2 = {}, f0, f1;
        bj((f3 || "").split("&"), function(f4) {
            if (f4) {
                f0 = f4.replace(/\+/g, "%20").split("=");
                f1 = bR(f0[0]);
                if (eX(f1)) {
                    var f5 = eX(f0[1]) ? bR(f0[1]) : true;
                    if (!O.call(f2, f1)) {
                        f2[f1] = f5
                    } else {
                        if (U(f2[f1])) {
                            f2[f1].push(f5)
                        } else {
                            f2[f1] = [f2[f1], f5]
                        }
                    }
                }
            }
        });
        return f2
    }
    function eu(f1) {
        var f0 = [];
        bj(f1, function(f3, f2) {
            if (U(f3)) {
                bj(f3, function(f4) {
                    f0.push(I(f2, true) + (f4 === true ? "" : "=" + I(f4, true)))
                })
            } else {
                f0.push(I(f2, true) + (f3 === true ? "" : "=" + I(f3, true)))
            }
        });
        return f0.length ? f0.join("&") : ""
    }
    function bv(f0) {
        return I(f0, true).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+")
    }
    function I(f1, f0) {
        return encodeURIComponent(f1).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, (f0 ? "%20" : "+"))
    }
    var di = ["ng-", "data-ng-", "ng:", "x-ng-"];
    function dk(f3, f1) {
        var f0, f2, f4 = di.length;
        for (f2 = 0; f2 < f4; ++f2) {
            f0 = di[f2] + f1;
            if (w(f0 = f3.getAttribute(f0))) {
                return f0
            }
        }
        return null
    }
    function b4(f3, f2) {
        var f4, f1, f0 = {};
        bj(di, function(f6) {
            var f5 = f6 + "app";
            if (!f4 && f3.hasAttribute && f3.hasAttribute(f5)) {
                f4 = f3;
                f1 = f3.getAttribute(f5)
            }
        });
        bj(di, function(f7) {
            var f5 = f7 + "app";
            var f6;
            if (!f4 && (f6 = f3.querySelector("[" + f5.replace(":", "\\:") + "]"))) {
                f4 = f6;
                f1 = f6.getAttribute(f5)
            }
        });
        if (f4) {
            f0.strictDi = dk(f4, "strict-di") !== null;
            f2(f4, f1 ? [f1] : [], f0)
        }
    }
    function bp(f5, f4, f3) {
        if (!s(f3)) {
            f3 = {}
        }
        var f1 = {
            strictDi: false
        };
        f3 = fU(f1, f3);
        var f6 = function() {
            f5 = ac(f5);
            if (f5.injector()) {
                var f7 = (f5[0] === el) ? "document" : ce(f5);
                throw eW("btstrpd", "App Already Bootstrapped with this Element '{0}'", f7.replace(/</, "&lt;").replace(/>/, "&gt;"))
            }
            f4 = f4 || [];
            f4.unshift(["$provide", function(ga) {
                ga.value("$rootElement", f5)
            }
            ]);
            if (f3.debugInfoEnabled) {
                f4.push(["$compileProvider", function(ga) {
                    ga.debugInfoEnabled(true)
                }
                ])
            }
            f4.unshift("ng");
            var f9 = cA(f4, f3.strictDi);
            f9.invoke(["$rootScope", "$rootElement", "$compile", "$injector", function f8(gb, ga, gc, gd) {
                gb.$apply(function() {
                    ga.data("$injector", gd);
                    gc(ga)(gb)
                })
            }
            ]);
            return f9
        };
        var f2 = /^NG_ENABLE_DEBUG_INFO!/;
        var f0 = /^NG_DEFER_BOOTSTRAP!/;
        if (dV && f2.test(dV.name)) {
            f3.debugInfoEnabled = true;
            dV.name = dV.name.replace(f2, "")
        }
        if (dV && !f0.test(dV.name)) {
            return f6()
        }
        dV.name = dV.name.replace(f0, "");
        cY.resumeBootstrap = function(f7) {
            bj(f7, function(f8) {
                f4.push(f8)
            });
            return f6()
        }
        ;
        if (bn(cY.resumeDeferredBootstrap)) {
            cY.resumeDeferredBootstrap()
        }
    }
    function bK() {
        dV.name = "NG_ENABLE_DEBUG_INFO!" + dV.name;
        dV.location.reload()
    }
    function ci(f0) {
        var f1 = cY.element(f0).injector();
        if (!f1) {
            throw eW("test", "no injector found for element argument to getTestability")
        }
        return f1.get("$$testability")
    }
    var D = /[A-Z]/g;
    function Q(f0, f1) {
        f1 = f1 || "_";
        return f0.replace(D, function(f2, f3) {
            return (f3 ? f1 : "") + f2.toLowerCase()
        })
    }
    var c9 = false;
    var b1;
    function v() {
        var f1;
        if (c9) {
            return
        }
        var f0 = c7();
        fz = dV.jQuery;
        if (eX(f0)) {
            fz = f0 === null ? fE : dV[f0]
        }
        if (fz && fz.fn.on) {
            ac = fz;
            fU(fz.fn, {
                scope: dQ.scope,
                isolateScope: dQ.isolateScope,
                controller: dQ.controller,
                injector: dQ.injector,
                inheritedData: dQ.inheritedData
            });
            f1 = fz.cleanData;
            fz.cleanData = function(f2) {
                var f4;
                if (!b1) {
                    for (var f3 = 0, f5; (f5 = f2[f3]) != null; f3++) {
                        f4 = fz._data(f5, "events");
                        if (f4 && f4.$destroy) {
                            fz(f5).triggerHandler("$destroy")
                        }
                    }
                } else {
                    b1 = false
                }
                f1(f2)
            }
        } else {
            ac = ff
        }
        cY.element = ac;
        c9 = true
    }
    function dF(f0, f1, f2) {
        if (!f0) {
            throw eW("areq", "Argument '{0}' is {1}", (f1 || "?"), (f2 || "required"))
        }
        return f0
    }
    function dg(f0, f1, f2) {
        if (f2 && U(f0)) {
            f0 = f0[f0.length - 1]
        }
        dF(bn(f0), f1, "not a function, got " + (f0 && typeof f0 === "object" ? f0.constructor.name || "Object" : typeof f0));
        return f0
    }
    function fa(f0, f1) {
        if (f0 === "hasOwnProperty") {
            throw eW("badname", "hasOwnProperty is not a valid {0} name", f1)
        }
    }
    function c6(f7, f6, f5) {
        if (!f6) {
            return f7
        }
        var f4 = f6.split(".");
        var f3;
        var f1 = f7;
        var f0 = f4.length;
        for (var f2 = 0; f2 < f0; f2++) {
            f3 = f4[f2];
            if (f7) {
                f7 = (f1 = f7)[f3]
            }
        }
        if (!f5 && bn(f7)) {
            return cv(f1, f7)
        }
        return f7
    }
    function a9(f1) {
        var f3 = f1[0];
        var f0 = f1[f1.length - 1];
        var f2 = [f3];
        do {
            f3 = f3.nextSibling;
            if (!f3) {
                break
            }
            f2.push(f3)
        } while (f3 !== f0);
        return ac(f2)
    }
    function fM() {
        return Object.create(null)
    }
    var bB = 1;
    var bi = 2;
    var bz = 3;
    var e5 = 8;
    var bk = 9;
    var aj = 11;
    function fs(f4) {
        var f2 = eT("$injector");
        var f0 = eT("ng");
        function f3(f7, f6, f5) {
            return f7[f6] || (f7[f6] = f5())
        }
        var f1 = f3(f4, "angular", Object);
        f1.$$minErr = f1.$$minErr || eT;
        return f3(f1, "module", function() {
            var f5 = {};
            return function f6(f7, f9, f8) {
                var ga = function(gb, gc) {
                    if (gb === "hasOwnProperty") {
                        throw f0("badname", "hasOwnProperty is not a valid {0} name", gc)
                    }
                };
                ga(f7, "module");
                if (f9 && f5.hasOwnProperty(f7)) {
                    f5[f7] = null
                }
                return f3(f5, f7, function() {
                    if (!f9) {
                        throw f2("nomod", "Module '{0}' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.", f7)
                    }
                    var gg = [];
                    var gh = [];
                    var gf = [];
                    var gc = gb("$injector", "invoke", "push", gh);
                    var ge = {
                        _invokeQueue: gg,
                        _configBlocks: gh,
                        _runBlocks: gf,
                        requires: f9,
                        name: f7,
                        provider: gd("$provide", "provider"),
                        factory: gd("$provide", "factory"),
                        service: gd("$provide", "service"),
                        value: gb("$provide", "value"),
                        constant: gb("$provide", "constant", "unshift"),
                        decorator: gd("$provide", "decorator"),
                        animation: gd("$animateProvider", "register"),
                        filter: gd("$filterProvider", "register"),
                        controller: gd("$controllerProvider", "register"),
                        directive: gd("$compileProvider", "directive"),
                        config: gc,
                        run: function(gi) {
                            gf.push(gi);
                            return this
                        }
                    };
                    if (f8) {
                        gc(f8)
                    }
                    return ge;
                    function gb(gk, gl, gj, gi) {
                        if (!gi) {
                            gi = gg
                        }
                        return function() {
                            gi[gj || "push"]([gk, gl, arguments]);
                            return ge
                        }
                    }
                    function gd(gi, gj) {
                        return function(gl, gk) {
                            if (gk && bn(gk)) {
                                gk.$$moduleName = f7
                            }
                            gg.push([gi, gj, arguments]);
                            return ge
                        }
                    }
                })
            }
        })
    }
    function fh(f1) {
        var f0 = [];
        return JSON.stringify(f1, function(f2, f3) {
            f3 = e(f2, f3);
            if (s(f3)) {
                if (f0.indexOf(f3) >= 0) {
                    return "<<already seen>>"
                }
                f0.push(f3)
            }
            return f3
        })
    }
    function fr(f0) {
        if (typeof f0 === "function") {
            return f0.toString().replace(/ \{[\s\S]*$/, "")
        } else {
            if (typeof f0 === "undefined") {
                return "undefined"
            } else {
                if (typeof f0 !== "string") {
                    return fh(f0)
                }
            }
        }
        return f0
    }
    var ag = {
        full: "1.4.3",
        major: 1,
        minor: 4,
        dot: 3,
        codeName: "foam-acceleration"
    };
    function aG(f0) {
        fU(f0, {
            bootstrap: bp,
            copy: fV,
            extend: fU,
            merge: b3,
            equals: dY,
            element: ac,
            forEach: bj,
            injector: cA,
            noop: eD,
            bind: cv,
            toJson: aA,
            fromJson: a2,
            identity: aU,
            isUndefined: x,
            isDefined: eX,
            isString: w,
            isFunction: bn,
            isObject: s,
            isNumber: p,
            isElement: q,
            isArray: U,
            version: ag,
            isDate: fe,
            lowercase: db,
            uppercase: a4,
            callbacks: {
                counter: 0
            },
            getTestability: ci,
            "$$minErr": eT,
            "$$csp": al,
            reloadWithDebugInfo: bK
        });
        fY = fs(dV);
        try {
            fY("ngLocale")
        } catch (f1) {
            fY("ngLocale", []).provider("$locale", cb)
        }
        fY("ng", ["ngLocale"], ["$provide", function f2(f3) {
            f3.provider({
                $$sanitizeUri: dR
            });
            f3.provider("$compile", ea).directive({
                a: bf,
                input: d5,
                textarea: d5,
                form: bX,
                script: aW,
                select: ae,
                style: e1,
                option: cU,
                ngBind: y,
                ngBindHtml: l,
                ngBindTemplate: dE,
                ngClass: H,
                ngClassEven: eG,
                ngClassOdd: j,
                ngCloak: cT,
                ngController: ey,
                ngForm: bL,
                ngHide: eR,
                ngIf: cr,
                ngInclude: dp,
                ngInit: d1,
                ngNonBindable: eH,
                ngPluralize: c8,
                ngRepeat: eb,
                ngShow: aZ,
                ngStyle: cx,
                ngSwitch: ew,
                ngSwitchWhen: ca,
                ngSwitchDefault: fj,
                ngOptions: dX,
                ngTransclude: bC,
                ngModel: bh,
                ngList: cF,
                ngChange: b7,
                pattern: dq,
                ngPattern: dq,
                required: cj,
                ngRequired: cj,
                minlength: aM,
                ngMinlength: aM,
                maxlength: fm,
                ngMaxlength: fm,
                ngValue: b5,
                ngModelOptions: d0
            }).directive({
                ngInclude: dN
            }).directive(ed).directive(aB);
            f3.provider({
                $anchorScroll: fl,
                $animate: d3,
                $$animateQueue: bb,
                $$AnimateRunner: cZ,
                $browser: ec,
                $cacheFactory: c,
                $controller: dt,
                $document: dA,
                $exceptionHandler: fS,
                $filter: bo,
                $interpolate: eq,
                $interval: ai,
                $http: dm,
                $httpParamSerializer: av,
                $httpParamSerializerJQLike: aR,
                $httpBackend: fq,
                $location: m,
                $log: dr,
                $parse: dh,
                $rootScope: dG,
                $q: c1,
                $$q: bx,
                $sce: bd,
                $sceDelegate: bw,
                $sniffer: dW,
                $templateCache: bO,
                $templateRequest: d6,
                $$testability: fI,
                $timeout: fW,
                $window: N,
                $$rAF: bF,
                $$jqLite: bY,
                $$HashMap: ct,
                $$cookieReader: dH
            })
        }
        ])
    }
    ff.expando = "ng339";
    var fZ = ff.cache = {}
      , aw = 1
      , cp = function(f0, f2, f1) {
        f0.addEventListener(f2, f1, false)
    }
      , e2 = function(f0, f2, f1) {
        f0.removeEventListener(f2, f1, false)
    };
    ff._data = function(f0) {
        return this.cache[f0[this.expando]] || {}
    }
    ;
    function bQ() {
        return ++aw
    }
    var F = /([\:\-\_]+(.))/g;
    var b6 = /^moz([A-Z])/;
    var d = {
        mouseleave: "mouseout",
        mouseenter: "mouseover"
    };
    var c3 = eT("jqLite");
    function ar(f0) {
        return f0.replace(F, function(f1, f3, f2, f4) {
            return f4 ? f2.toUpperCase() : f2
        }).replace(b6, "Moz$1")
    }
    var bI = /^<(\w+)\s*\/?>(?:<\/\1>|)$/;
    var A = /<|&#?\w+;/;
    var ee = /<([\w:]+)/;
    var a6 = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi;
    var aN = {
        option: [1, '<select multiple="multiple">', "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    aN.optgroup = aN.option;
    aN.tbody = aN.tfoot = aN.colgroup = aN.caption = aN.thead;
    aN.th = aN.td;
    function g(f0) {
        return !A.test(f0)
    }
    function aO(f1) {
        var f0 = f1.nodeType;
        return f0 === bB || !f0 || f0 === bk
    }
    function cV(f1) {
        for (var f0 in fZ[f1.ng339]) {
            return true
        }
        return false
    }
    function ev(f6, f5) {
        var f4, f0, f7, f2 = f5.createDocumentFragment(), f1 = [], f3;
        if (g(f6)) {
            f1.push(f5.createTextNode(f6))
        } else {
            f4 = f4 || f2.appendChild(f5.createElement("div"));
            f0 = (ee.exec(f6) || ["", ""])[1].toLowerCase();
            f7 = aN[f0] || aN._default;
            f4.innerHTML = f7[1] + f6.replace(a6, "<$1></$2>") + f7[2];
            f3 = f7[0];
            while (f3--) {
                f4 = f4.lastChild
            }
            f1 = fB(f1, f4.childNodes);
            f4 = f2.firstChild;
            f4.textContent = ""
        }
        f2.textContent = "";
        f2.innerHTML = "";
        bj(f1, function(f8) {
            f2.appendChild(f8)
        });
        return f2
    }
    function aC(f2, f1) {
        f1 = f1 || el;
        var f0;
        if ((f0 = bI.exec(f2))) {
            return [f1.createElement(f0[1])]
        }
        if ((f0 = ev(f2, f1))) {
            return f0.childNodes
        }
        return []
    }
    function ff(f0) {
        if (f0 instanceof ff) {
            return f0
        }
        var f1;
        if (w(f0)) {
            f0 = aL(f0);
            f1 = true
        }
        if (!(this instanceof ff)) {
            if (f1 && f0.charAt(0) != "<") {
                throw c3("nosel", "Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element")
            }
            return new ff(f0)
        }
        if (f1) {
            X(this, aC(f0))
        } else {
            X(this, f0)
        }
    }
    function dz(f0) {
        return f0.cloneNode(true)
    }
    function bu(f2, f3) {
        if (!f3) {
            dL(f2)
        }
        if (f2.querySelectorAll) {
            var f4 = f2.querySelectorAll("*");
            for (var f1 = 0, f0 = f4.length; f1 < f0; f1++) {
                dL(f4[f1])
            }
        }
    }
    function aa(f2, f4, f3, f6) {
        if (eX(f6)) {
            throw c3("offargs", "jqLite#off() does not support the `selector` argument")
        }
        var f0 = b8(f2);
        var f1 = f0 && f0.events;
        var f5 = f0 && f0.handle;
        if (!f5) {
            return
        }
        if (!f4) {
            for (f4 in f1) {
                if (f4 !== "$destroy") {
                    e2(f2, f4, f5)
                }
                delete f1[f4]
            }
        } else {
            bj(f4.split(" "), function(f8) {
                if (eX(f3)) {
                    var f7 = f1[f8];
                    eI(f7 || [], f3);
                    if (f7 && f7.length > 0) {
                        return
                    }
                }
                e2(f2, f8, f5);
                delete f1[f8]
            })
        }
    }
    function dL(f3, f2) {
        var f1 = f3.ng339;
        var f0 = f1 && fZ[f1];
        if (f0) {
            if (f2) {
                delete f0.data[f2];
                return
            }
            if (f0.handle) {
                if (f0.events.$destroy) {
                    f0.handle({}, "$destroy")
                }
                aa(f3)
            }
            delete fZ[f1];
            f3.ng339 = fE
        }
    }
    function b8(f3, f1) {
        var f2 = f3.ng339
          , f0 = f2 && fZ[f2];
        if (f1 && !f0) {
            f3.ng339 = f2 = bQ();
            f0 = fZ[f2] = {
                events: {},
                data: {},
                handle: fE
            }
        }
        return f0
    }
    function am(f2, f1, f5) {
        if (aO(f2)) {
            var f6 = eX(f5);
            var f7 = !f6 && f1 && !s(f1);
            var f3 = !f1;
            var f0 = b8(f2, !f7);
            var f4 = f0 && f0.data;
            if (f6) {
                f4[f1] = f5
            } else {
                if (f3) {
                    return f4
                } else {
                    if (f7) {
                        return f4 && f4[f1]
                    } else {
                        fU(f4, f1)
                    }
                }
            }
        }
    }
    function br(f1, f0) {
        if (!f1.getAttribute) {
            return false
        }
        return ((" " + (f1.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + f0 + " ") > -1)
    }
    function df(f1, f0) {
        if (f0 && f1.setAttribute) {
            bj(f0.split(" "), function(f2) {
                f1.setAttribute("class", aL((" " + (f1.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + aL(f2) + " ", " ")))
            })
        }
    }
    function ds(f1, f0) {
        if (f0 && f1.setAttribute) {
            var f2 = (" " + (f1.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            bj(f0.split(" "), function(f3) {
                f3 = aL(f3);
                if (f2.indexOf(" " + f3 + " ") === -1) {
                    f2 += f3 + " "
                }
            });
            f1.setAttribute("class", aL(f2))
        }
    }
    function X(f0, f3) {
        if (f3) {
            if (f3.nodeType) {
                f0[f0.length++] = f3
            } else {
                var f2 = f3.length;
                if (typeof f2 === "number" && f3.window !== f3) {
                    if (f2) {
                        for (var f1 = 0; f1 < f2; f1++) {
                            f0[f0.length++] = f3[f1]
                        }
                    }
                } else {
                    f0[f0.length++] = f3
                }
            }
        }
    }
    function aV(f1, f0) {
        return cR(f1, "$" + (f0 || "ngController") + "Controller")
    }
    function cR(f2, f0, f4) {
        if (f2.nodeType == bk) {
            f2 = f2.documentElement
        }
        var f5 = U(f0) ? f0 : [f0];
        while (f2) {
            for (var f1 = 0, f3 = f5.length; f1 < f3; f1++) {
                if ((f4 = ac.data(f2, f5[f1])) !== fE) {
                    return f4
                }
            }
            f2 = f2.parentNode || (f2.nodeType === aj && f2.host)
        }
    }
    function W(f0) {
        bu(f0, true);
        while (f0.firstChild) {
            f0.removeChild(f0.firstChild)
        }
    }
    function aD(f0, f2) {
        if (!f2) {
            bu(f0)
        }
        var f1 = f0.parentNode;
        if (f1) {
            f1.removeChild(f0)
        }
    }
    function fb(f0, f1) {
        f1 = f1 || dV;
        if (f1.document.readyState === "complete") {
            f1.setTimeout(f0)
        } else {
            ac(f1).on("load", f0)
        }
    }
    var dQ = ff.prototype = {
        ready: function(f1) {
            var f2 = false;
            function f0() {
                if (f2) {
                    return
                }
                f2 = true;
                f1()
            }
            if (el.readyState === "complete") {
                setTimeout(f0)
            } else {
                this.on("DOMContentLoaded", f0);
                ff(dV).on("load", f0)
            }
        },
        toString: function() {
            var f0 = [];
            bj(this, function(f1) {
                f0.push("" + f1)
            });
            return "[" + f0.join(", ") + "]"
        },
        eq: function(f0) {
            return (f0 >= 0) ? ac(this[f0]) : ac(this[this.length + f0])
        },
        length: 0,
        push: cl,
        sort: [].sort,
        splice: [].splice
    };
    var cE = {};
    bj("multiple,selected,checked,disabled,readOnly,required,open".split(","), function(f0) {
        cE[db(f0)] = f0
    });
    var c5 = {};
    bj("input,select,option,textarea,button,form,details".split(","), function(f0) {
        c5[f0] = true
    });
    var fQ = {
        ngMinlength: "minlength",
        ngMaxlength: "maxlength",
        ngMin: "min",
        ngMax: "max",
        ngPattern: "pattern"
    };
    function da(f2, f0) {
        var f1 = cE[f0.toLowerCase()];
        return f1 && c5[d4(f2)] && f1
    }
    function a3(f1, f0) {
        var f2 = f1.nodeName;
        return (f2 === "INPUT" || f2 === "TEXTAREA") && fQ[f0]
    }
    bj({
        data: am,
        removeData: dL,
        hasData: cV
    }, function(f1, f0) {
        ff[f0] = f1
    });
    bj({
        data: am,
        inheritedData: cR,
        scope: function(f0) {
            return ac.data(f0, "$scope") || cR(f0.parentNode || f0, ["$isolateScope", "$scope"])
        },
        isolateScope: function(f0) {
            return ac.data(f0, "$isolateScope") || ac.data(f0, "$isolateScopeNoTemplate")
        },
        controller: aV,
        injector: function(f0) {
            return cR(f0, "$injector")
        },
        removeAttr: function(f1, f0) {
            f1.removeAttribute(f0)
        },
        hasClass: br,
        css: function(f1, f0, f2) {
            f0 = ar(f0);
            if (eX(f2)) {
                f1.style[f0] = f2
            } else {
                return f1.style[f0]
            }
        },
        attr: function(f4, f2, f5) {
            var f0 = f4.nodeType;
            if (f0 === bz || f0 === bi || f0 === e5) {
                return
            }
            var f3 = db(f2);
            if (cE[f3]) {
                if (eX(f5)) {
                    if (!!f5) {
                        f4[f2] = true;
                        f4.setAttribute(f2, f3)
                    } else {
                        f4[f2] = false;
                        f4.removeAttribute(f3)
                    }
                } else {
                    return (f4[f2] || (f4.attributes.getNamedItem(f2) || eD).specified) ? f3 : fE
                }
            } else {
                if (eX(f5)) {
                    f4.setAttribute(f2, f5)
                } else {
                    if (f4.getAttribute) {
                        var f1 = f4.getAttribute(f2, 2);
                        return f1 === null ? fE : f1
                    }
                }
            }
        },
        prop: function(f1, f0, f2) {
            if (eX(f2)) {
                f1[f0] = f2
            } else {
                return f1[f0]
            }
        },
        text: (function() {
            f0.$dv = "";
            return f0;
            function f0(f2, f3) {
                if (x(f3)) {
                    var f1 = f2.nodeType;
                    return (f1 === bB || f1 === bz) ? f2.textContent : ""
                }
                f2.textContent = f3
            }
        }
        )(),
        val: function(f1, f2) {
            if (x(f2)) {
                if (f1.multiple && d4(f1) === "select") {
                    var f0 = [];
                    bj(f1.options, function(f3) {
                        if (f3.selected) {
                            f0.push(f3.value || f3.text)
                        }
                    });
                    return f0.length === 0 ? null : f0
                }
                return f1.value
            }
            f1.value = f2
        },
        html: function(f0, f1) {
            if (x(f1)) {
                return f0.innerHTML
            }
            bu(f0, true);
            f0.innerHTML = f1
        },
        empty: W
    }, function(f1, f0) {
        ff.prototype[f0] = function(f7, f5) {
            var f4, ga;
            var f2 = this.length;
            if (f1 !== W && (((f1.length == 2 && (f1 !== br && f1 !== aV)) ? f7 : f5) === fE)) {
                if (s(f7)) {
                    for (f4 = 0; f4 < f2; f4++) {
                        if (f1 === am) {
                            f1(this[f4], f7)
                        } else {
                            for (ga in f7) {
                                f1(this[f4], ga, f7[ga])
                            }
                        }
                    }
                    return this
                } else {
                    var f9 = f1.$dv;
                    var f6 = (f9 === fE) ? Math.min(f2, 1) : f2;
                    for (var f3 = 0; f3 < f6; f3++) {
                        var f8 = f1(this[f3], f7, f5);
                        f9 = f9 ? f9 + f8 : f8
                    }
                    return f9
                }
            } else {
                for (f4 = 0; f4 < f2; f4++) {
                    f1(this[f4], f7, f5)
                }
                return this
            }
        }
    });
    function cI(f2, f1) {
        var f0 = function(f8, f7) {
            f8.isDefaultPrevented = function() {
                return f8.defaultPrevented
            }
            ;
            var f4 = f1[f7 || f8.type];
            var f6 = f4 ? f4.length : 0;
            if (!f6) {
                return
            }
            if (x(f8.immediatePropagationStopped)) {
                var f3 = f8.stopImmediatePropagation;
                f8.stopImmediatePropagation = function() {
                    f8.immediatePropagationStopped = true;
                    if (f8.stopPropagation) {
                        f8.stopPropagation()
                    }
                    if (f3) {
                        f3.call(f8)
                    }
                }
            }
            f8.isImmediatePropagationStopped = function() {
                return f8.immediatePropagationStopped === true
            }
            ;
            if ((f6 > 1)) {
                f4 = d8(f4)
            }
            for (var f5 = 0; f5 < f6; f5++) {
                if (!f8.isImmediatePropagationStopped()) {
                    f4[f5].call(f2, f8)
                }
            }
        };
        f0.elem = f2;
        return f0
    }
    bj({
        removeData: dL,
        on: function bg(f3, f6, f7, f8) {
            if (eX(f8)) {
                throw c3("onargs", "jqLite#on() does not support the `selector` or `eventData` parameters")
            }
            if (!aO(f3)) {
                return
            }
            var f0 = b8(f3, true);
            var f9 = f0.events;
            var f4 = f0.handle;
            if (!f4) {
                f4 = f0.handle = cI(f3, f9)
            }
            var f5 = f6.indexOf(" ") >= 0 ? f6.split(" ") : [f6];
            var f2 = f5.length;
            while (f2--) {
                f6 = f5[f2];
                var f1 = f9[f6];
                if (!f1) {
                    f9[f6] = [];
                    if (f6 === "mouseenter" || f6 === "mouseleave") {
                        bg(f3, d[f6], function(ga) {
                            var gc = this
                              , gb = ga.relatedTarget;
                            if (!gb || (gb !== gc && !gc.contains(gb))) {
                                f4(ga, f6)
                            }
                        })
                    } else {
                        if (f6 !== "$destroy") {
                            cp(f3, f6, f4)
                        }
                    }
                    f1 = f9[f6]
                }
                f1.push(f7)
            }
        },
        off: aa,
        one: function(f1, f3, f2) {
            f1 = ac(f1);
            f1.on(f3, function f0() {
                f1.off(f3, f2);
                f1.off(f3, f0)
            });
            f1.on(f3, f2)
        },
        replaceWith: function(f1, f3) {
            var f0, f2 = f1.parentNode;
            bu(f1);
            bj(new ff(f3), function(f4) {
                if (f0) {
                    f2.insertBefore(f4, f0.nextSibling)
                } else {
                    f2.replaceChild(f4, f1)
                }
                f0 = f4
            })
        },
        children: function(f1) {
            var f0 = [];
            bj(f1.childNodes, function(f2) {
                if (f2.nodeType === bB) {
                    f0.push(f2)
                }
            });
            return f0
        },
        contents: function(f0) {
            return f0.contentDocument || f0.childNodes || []
        },
        append: function(f2, f4) {
            var f0 = f2.nodeType;
            if (f0 !== bB && f0 !== aj) {
                return
            }
            f4 = new ff(f4);
            for (var f1 = 0, f3 = f4.length; f1 < f3; f1++) {
                var f5 = f4[f1];
                f2.appendChild(f5)
            }
        },
        prepend: function(f1, f2) {
            if (f1.nodeType === bB) {
                var f0 = f1.firstChild;
                bj(new ff(f2), function(f3) {
                    f1.insertBefore(f3, f0)
                })
            }
        },
        wrap: function(f1, f0) {
            f0 = ac(f0).eq(0).clone()[0];
            var f2 = f1.parentNode;
            if (f2) {
                f2.replaceChild(f0, f1)
            }
            f0.appendChild(f1)
        },
        remove: aD,
        detach: function(f0) {
            aD(f0, true)
        },
        after: function(f2, f6) {
            var f0 = f2
              , f4 = f2.parentNode;
            f6 = new ff(f6);
            for (var f1 = 0, f3 = f6.length; f1 < f3; f1++) {
                var f5 = f6[f1];
                f4.insertBefore(f5, f0.nextSibling);
                f0 = f5
            }
        },
        addClass: ds,
        removeClass: df,
        toggleClass: function(f1, f0, f2) {
            if (f0) {
                bj(f0.split(" "), function(f4) {
                    var f3 = f2;
                    if (x(f3)) {
                        f3 = !br(f1, f4)
                    }
                    (f3 ? ds : df)(f1, f4)
                })
            }
        },
        parent: function(f0) {
            var f1 = f0.parentNode;
            return f1 && f1.nodeType !== aj ? f1 : null
        },
        next: function(f0) {
            return f0.nextElementSibling
        },
        find: function(f1, f0) {
            if (f1.getElementsByTagName) {
                return f1.getElementsByTagName(f0)
            } else {
                return []
            }
        },
        clone: dz,
        triggerHandler: function(f6, f3, f4) {
            var f5, f0, f8;
            var f7 = f3.type || f3;
            var f1 = b8(f6);
            var f9 = f1 && f1.events;
            var f2 = f9 && f9[f7];
            if (f2) {
                f5 = {
                    preventDefault: function() {
                        this.defaultPrevented = true
                    },
                    isDefaultPrevented: function() {
                        return this.defaultPrevented === true
                    },
                    stopImmediatePropagation: function() {
                        this.immediatePropagationStopped = true
                    },
                    isImmediatePropagationStopped: function() {
                        return this.immediatePropagationStopped === true
                    },
                    stopPropagation: eD,
                    type: f7,
                    target: f6
                };
                if (f3.type) {
                    f5 = fU(f5, f3)
                }
                f0 = d8(f2);
                f8 = f4 ? [f5].concat(f4) : [f5];
                bj(f0, function(ga) {
                    if (!f5.isImmediatePropagationStopped()) {
                        ga.apply(f6, f8)
                    }
                })
            }
        }
    }, function(f1, f0) {
        ff.prototype[f0] = function(f4, f3, f2) {
            var f7;
            for (var f5 = 0, f6 = this.length; f5 < f6; f5++) {
                if (x(f7)) {
                    f7 = f1(this[f5], f4, f3, f2);
                    if (eX(f7)) {
                        f7 = ac(f7)
                    }
                } else {
                    X(f7, f1(this[f5], f4, f3, f2))
                }
            }
            return eX(f7) ? f7 : this
        }
        ;
        ff.prototype.bind = ff.prototype.on;
        ff.prototype.unbind = ff.prototype.off
    });
    function bY() {
        this.$get = function f0() {
            return fU(ff, {
                hasClass: function(f2, f1) {
                    if (f2.attr) {
                        f2 = f2[0]
                    }
                    return br(f2, f1)
                },
                addClass: function(f2, f1) {
                    if (f2.attr) {
                        f2 = f2[0]
                    }
                    return ds(f2, f1)
                },
                removeClass: function(f2, f1) {
                    if (f2.attr) {
                        f2 = f2[0]
                    }
                    return df(f2, f1)
                }
            })
        }
    }
    function ef(f2, f0) {
        var f1 = f2 && f2.$$hashKey;
        if (f1) {
            if (typeof f1 === "function") {
                f1 = f2.$$hashKey()
            }
            return f1
        }
        var f3 = typeof f2;
        if (f3 == "function" || (f3 == "object" && f2 !== null)) {
            f1 = f2.$$hashKey = f3 + ":" + (f0 || aP)()
        } else {
            f1 = f3 + ":" + f2
        }
        return f1
    }
    function cu(f2, f0) {
        if (f0) {
            var f1 = 0;
            this.nextUid = function() {
                return ++f1
            }
        }
        bj(f2, this.put, this)
    }
    cu.prototype = {
        put: function(f0, f1) {
            this[ef(f0, this.nextUid)] = f1
        },
        get: function(f0) {
            return this[ef(f0, this.nextUid)]
        },
        remove: function(f0) {
            var f1 = this[f0 = ef(f0, this.nextUid)];
            delete this[f0];
            return f1
        }
    };
    var ct = [function() {
        this.$get = [function() {
            return cu
        }
        ]
    }
    ];
    var dK = /^function\s*[^\(]*\(\s*([^\)]*)\)/m;
    var cQ = /,/;
    var fp = /^\s*(_?)(\S+?)\1\s*$/;
    var c4 = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
    var fo = eT("$injector");
    function ez(f2) {
        var f1 = f2.toString().replace(c4, "")
          , f0 = f1.match(dK);
        if (f0) {
            return "function(" + (f0[1] || "").replace(/[\s\r\n]+/, " ") + ")"
        }
        return "fn"
    }
    function eL(f3, f2, f0) {
        var f5, f1, f6, f4;
        if (typeof f3 === "function") {
            if (!(f5 = f3.$inject)) {
                f5 = [];
                if (f3.length) {
                    if (f2) {
                        if (!w(f0) || !f0) {
                            f0 = f3.name || ez(f3)
                        }
                        throw fo("strictdi", "{0} is not using explicit annotation and cannot be invoked in strict mode", f0)
                    }
                    f1 = f3.toString().replace(c4, "");
                    f6 = f1.match(dK);
                    bj(f6[1].split(cQ), function(f7) {
                        f7.replace(fp, function(ga, f8, f9) {
                            f5.push(f9)
                        })
                    })
                }
                f3.$inject = f5
            }
        } else {
            if (U(f3)) {
                f4 = f3.length - 1;
                dg(f3[f4], "fn");
                f5 = f3.slice(0, f4)
            } else {
                dg(f3, "fn", true)
            }
        }
        return f5
    }
    function cA(gf, f9) {
        f9 = (f9 === true);
        var f2 = {}
          , ge = "Provider"
          , ga = []
          , f6 = new cu([],true)
          , f4 = {
            $provide: {
                provider: f8(gh),
                factory: f8(f5),
                service: f8(gi),
                value: f8(gc),
                constant: f8(f1),
                decorator: f0
            }
        }
          , gj = (f4.$injector = gd(f4, function(gl, gk) {
            if (cY.isString(gk)) {
                ga.push(gk)
            }
            throw fo("unpr", "Unknown provider: {0}", ga.join(" <- "))
        }))
          , gg = {}
          , gb = (gg.$injector = gd(gg, function(gl, gk) {
            var gm = gj.get(gl + ge, gk);
            return gb.invoke(gm.$get, gm, fE, gl)
        }));
        bj(f3(gf), function(gk) {
            if (gk) {
                gb.invoke(gk)
            }
        });
        return gb;
        function f8(gk) {
            return function(gl, gm) {
                if (s(gl)) {
                    bj(gl, dP(gk))
                } else {
                    return gk(gl, gm)
                }
            }
        }
        function gh(gk, gl) {
            fa(gk, "service");
            if (bn(gl) || U(gl)) {
                gl = gj.instantiate(gl)
            }
            if (!gl.$get) {
                throw fo("pget", "Provider '{0}' must define $get factory method.", gk)
            }
            return f4[gk + ge] = gl
        }
        function f7(gm, gl) {
            return function gk() {
                var gn = gb.invoke(gl, this);
                if (x(gn)) {
                    throw fo("undef", "Provider '{0}' must return a value from $get factory method.", gm)
                }
                return gn
            }
        }
        function f5(gk, gl, gm) {
            return gh(gk, {
                $get: gm !== false ? f7(gk, gl) : gl
            })
        }
        function gi(gk, gl) {
            return f5(gk, ["$injector", function(gm) {
                return gm.instantiate(gl)
            }
            ])
        }
        function gc(gk, gl) {
            return f5(gk, V(gl), false)
        }
        function f1(gk, gl) {
            fa(gk, "constant");
            f4[gk] = gl;
            gg[gk] = gl
        }
        function f0(gl, gm) {
            var gk = gj.get(gl + ge)
              , gn = gk.$get;
            gk.$get = function() {
                var go = gb.invoke(gn, gk);
                return gb.invoke(gm, null, {
                    $delegate: go
                })
            }
        }
        function f3(gk) {
            var gm = [], gl;
            bj(gk, function(go) {
                if (f6.get(go)) {
                    return
                }
                f6.put(go, true);
                function gn(gq) {
                    var gr, gs;
                    for (gr = 0,
                    gs = gq.length; gr < gs; gr++) {
                        var gu = gq[gr]
                          , gt = gj.get(gu[0]);
                        gt[gu[1]].apply(gt, gu[2])
                    }
                }
                try {
                    if (w(go)) {
                        gl = fY(go);
                        gm = gm.concat(f3(gl.requires)).concat(gl._runBlocks);
                        gn(gl._invokeQueue);
                        gn(gl._configBlocks)
                    } else {
                        if (bn(go)) {
                            gm.push(gj.invoke(go))
                        } else {
                            if (U(go)) {
                                gm.push(gj.invoke(go))
                            } else {
                                dg(go, "module")
                            }
                        }
                    }
                } catch (gp) {
                    if (U(go)) {
                        go = go[go.length - 1]
                    }
                    if (gp.message && gp.stack && gp.stack.indexOf(gp.message) == -1) {
                        gp = gp.message + "\n" + gp.stack
                    }
                    throw fo("modulerr", "Failed to instantiate module {0} due to:\n{1}", go, gp.stack || gp.message || gp)
                }
            });
            return gm
        }
        function gd(gm, gl) {
            function go(gq, gp) {
                if (gm.hasOwnProperty(gq)) {
                    if (gm[gq] === f2) {
                        throw fo("cdep", "Circular dependency found: {0}", gq + " <- " + ga.join(" <- "))
                    }
                    return gm[gq]
                } else {
                    try {
                        ga.unshift(gq);
                        gm[gq] = f2;
                        return gm[gq] = gl(gq, gp)
                    } catch (gr) {
                        if (gm[gq] === f2) {
                            delete gm[gq]
                        }
                        throw gr
                    } finally {
                        ga.shift()
                    }
                }
            }
            function gn(gv, gx, gq, gt) {
                if (typeof gq === "string") {
                    gt = gq;
                    gq = null
                }
                var gu = [], gp = cA.$$annotate(gv, f9, gt), gr, gs, gw;
                for (gs = 0,
                gr = gp.length; gs < gr; gs++) {
                    gw = gp[gs];
                    if (typeof gw !== "string") {
                        throw fo("itkn", "Incorrect injection token! Expected service name as string, got {0}", gw)
                    }
                    gu.push(gq && gq.hasOwnProperty(gw) ? gq[gw] : go(gw, gt))
                }
                if (U(gv)) {
                    gv = gv[gr]
                }
                return gv.apply(gx, gu)
            }
            function gk(gq, gt, gr) {
                var gp = Object.create((U(gq) ? gq[gq.length - 1] : gq).prototype || null);
                var gs = gn(gq, gp, gt, gr);
                return s(gs) || bn(gs) ? gs : gp
            }
            return {
                invoke: gn,
                instantiate: gk,
                get: go,
                annotate: cA.$$annotate,
                has: function(gp) {
                    return f4.hasOwnProperty(gp + ge) || gm.hasOwnProperty(gp)
                }
            }
        }
    }
    cA.$$annotate = eL;
    function fl() {
        var f0 = true;
        this.disableAutoScrolling = function() {
            f0 = false
        }
        ;
        this.$get = ["$window", "$location", "$rootScope", function(f2, f4, f8) {
            var f7 = f2.document;
            function f5(gc) {
                var gb = null;
                Array.prototype.some.call(gc, function(gd) {
                    if (d4(gd) === "a") {
                        gb = gd;
                        return true
                    }
                });
                return gb
            }
            function ga() {
                var gd = f9.yOffset;
                if (bn(gd)) {
                    gd = gd()
                } else {
                    if (q(gd)) {
                        var gc = gd[0];
                        var gb = f2.getComputedStyle(gc);
                        if (gb.position !== "fixed") {
                            gd = 0
                        } else {
                            gd = gc.getBoundingClientRect().bottom
                        }
                    } else {
                        if (!p(gd)) {
                            gd = 0
                        }
                    }
                }
                return gd
            }
            function f6(gc) {
                if (gc) {
                    gc.scrollIntoView();
                    var gd = ga();
                    if (gd) {
                        var gb = gc.getBoundingClientRect().top;
                        f2.scrollBy(0, gb - gd)
                    }
                } else {
                    f2.scrollTo(0, 0)
                }
            }
            function f9(gb) {
                gb = w(gb) ? gb : f4.hash();
                var gc;
                if (!gb) {
                    f6(null)
                } else {
                    if ((gc = f7.getElementById(gb))) {
                        f6(gc)
                    } else {
                        if ((gc = f5(f7.getElementsByName(gb)))) {
                            f6(gc)
                        } else {
                            if (gb === "top") {
                                f6(null)
                            }
                        }
                    }
                }
            }
            if (f0) {
                f8.$watch(function f1() {
                    return f4.hash()
                }, function f3(gc, gb) {
                    if (gc === gb && gc === "") {
                        return
                    }
                    fb(function() {
                        f8.$evalAsync(f9)
                    })
                })
            }
            return f9
        }
        ]
    }
    var b0 = eT("$animate");
    var R = 1;
    var ax = "ng-animate";
    function en(f1, f0) {
        if (!f1 && !f0) {
            return ""
        }
        if (!f1) {
            return f0
        }
        if (!f0) {
            return f1
        }
        if (U(f1)) {
            f1 = f1.join(" ")
        }
        if (U(f0)) {
            f0 = f0.join(" ")
        }
        return f1 + " " + f0
    }
    function au(f1) {
        for (var f0 = 0; f0 < f1.length; f0++) {
            var f2 = f1[f0];
            if (f2.nodeType === R) {
                return f2
            }
        }
    }
    function cJ(f0) {
        if (w(f0)) {
            f0 = f0.split(" ")
        }
        var f1 = fM();
        bj(f0, function(f2) {
            if (f2.length) {
                f1[f2] = true
            }
        });
        return f1
    }
    function fX(f0) {
        return s(f0) ? f0 : {}
    }
    var cZ = function() {
        this.$get = ["$q", "$$rAF", function(f1, f2) {
            function f0() {}
            f0.all = eD;
            f0.chain = eD;
            f0.prototype = {
                end: eD,
                cancel: eD,
                resume: eD,
                pause: eD,
                complete: eD,
                then: function(f4, f3) {
                    return f1(function(f5) {
                        f2(function() {
                            f5()
                        })
                    }).then(f4, f3)
                }
            };
            return f0
        }
        ]
    };
    var bb = function() {
        var f1 = new cu();
        var f0 = [];
        this.$get = ["$$AnimateRunner", "$rootScope", function(f4, f2) {
            return {
                enabled: eD,
                on: eD,
                off: eD,
                pin: eD,
                push: function(f7, f8, f6, f5) {
                    f5 && f5();
                    f6 = f6 || {};
                    f6.from && f7.css(f6.from);
                    f6.to && f7.css(f6.to);
                    if (f6.addClass || f6.removeClass) {
                        f3(f7, f6.addClass, f6.removeClass)
                    }
                    return new f4()
                }
            };
            function f3(f6, f9, f5) {
                var f8 = f1.get(f6);
                var f7;
                if (!f8) {
                    f1.put(f6, f8 = {});
                    f0.push(f6)
                }
                if (f9) {
                    bj(f9.split(" "), function(ga) {
                        if (ga) {
                            f8[ga] = true
                        }
                    })
                }
                if (f5) {
                    bj(f5.split(" "), function(ga) {
                        if (ga) {
                            f8[ga] = false
                        }
                    })
                }
                if (f0.length > 1) {
                    return
                }
                f2.$$postDigest(function() {
                    bj(f0, function(gb) {
                        var ge = f1.get(gb);
                        if (ge) {
                            var gd = cJ(gb.attr("class"));
                            var ga = "";
                            var gc = "";
                            bj(ge, function(gf, gh) {
                                var gg = !!gd[gh];
                                if (gf !== gg) {
                                    if (gf) {
                                        ga += (ga.length ? " " : "") + gh
                                    } else {
                                        gc += (gc.length ? " " : "") + gh
                                    }
                                }
                            });
                            bj(gb, function(gf) {
                                ga && ds(gf, ga);
                                gc && df(gf, gc)
                            });
                            f1.remove(gb)
                        }
                    });
                    f0.length = 0
                })
            }
        }
        ]
    };
    var d3 = ["$provide", function(f0) {
        var f1 = this;
        this.$$registeredAnimations = Object.create(null);
        this.register = function(f3, f2) {
            if (f3 && f3.charAt(0) !== ".") {
                throw b0("notcsel", "Expecting class selector starting with '.' got '{0}'.", f3)
            }
            var f4 = f3 + "-animation";
            f1.$$registeredAnimations[f3.substr(1)] = f4;
            f0.factory(f4, f2)
        }
        ;
        this.classNameFilter = function(f3) {
            if (arguments.length === 1) {
                this.$$classNameFilter = (f3 instanceof RegExp) ? f3 : null;
                if (this.$$classNameFilter) {
                    var f2 = new RegExp("(\\s+|\\/)" + ax + "(\\s+|\\/)");
                    if (f2.test(this.$$classNameFilter.toString())) {
                        throw b0("nongcls", '$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.', ax)
                    }
                }
            }
            return this.$$classNameFilter
        }
        ;
        this.$get = ["$$animateQueue", function(f2) {
            function f3(f5, f4, f7) {
                if (f7) {
                    var f6 = au(f7);
                    if (f6 && !f6.parentNode && !f6.previousElementSibling) {
                        f7 = null
                    }
                }
                f7 ? f7.after(f5) : f4.prepend(f5)
            }
            return {
                on: f2.on,
                off: f2.off,
                pin: f2.pin,
                enabled: f2.enabled,
                cancel: function(f4) {
                    f4.end && f4.end()
                },
                enter: function(f5, f6, f7, f4) {
                    f6 = f6 && ac(f6);
                    f7 = f7 && ac(f7);
                    f6 = f6 || f7.parent();
                    f3(f5, f6, f7);
                    return f2.push(f5, "enter", fX(f4))
                },
                move: function(f5, f6, f7, f4) {
                    f6 = f6 && ac(f6);
                    f7 = f7 && ac(f7);
                    f6 = f6 || f7.parent();
                    f3(f5, f6, f7);
                    return f2.push(f5, "move", fX(f4))
                },
                leave: function(f5, f4) {
                    return f2.push(f5, "leave", fX(f4), function() {
                        f5.remove()
                    })
                },
                addClass: function(f5, f6, f4) {
                    f4 = fX(f4);
                    f4.addClass = en(f4.addclass, f6);
                    return f2.push(f5, "addClass", f4)
                },
                removeClass: function(f5, f6, f4) {
                    f4 = fX(f4);
                    f4.removeClass = en(f4.removeClass, f6);
                    return f2.push(f5, "removeClass", f4)
                },
                setClass: function(f6, f7, f4, f5) {
                    f5 = fX(f5);
                    f5.addClass = en(f5.addClass, f7);
                    f5.removeClass = en(f5.removeClass, f4);
                    return f2.push(f6, "setClass", f5)
                },
                animate: function(f5, f8, f7, f6, f4) {
                    f4 = fX(f4);
                    f4.from = f4.from ? fU(f4.from, f8) : f8;
                    f4.to = f4.to ? fU(f4.to, f7) : f7;
                    f6 = f6 || "ng-inline-animate";
                    f4.tempClasses = en(f4.tempClasses, f6);
                    return f2.push(f5, "animate", f4)
                }
            }
        }
        ]
    }
    ];
    function ad() {
        this.$get = ["$$rAF", "$timeout", function(f1, f0) {
            return f1.supported ? function(f2) {
                return f1(f2)
            }
            : function(f2) {
                return f0(f2, 0, false)
            }
        }
        ]
    }
    function cs(gd, gj, gk, gm) {
        var gg = this
          , gn = gj[0]
          , f4 = gd.location
          , gf = gd.history
          , f5 = gd.setTimeout
          , f6 = gd.clearTimeout
          , gc = {};
        gg.isMock = false;
        var gq = 0;
        var gp = [];
        gg.$$completeOutstandingRequest = ga;
        gg.$$incOutstandingRequestCount = function() {
            gq++
        }
        ;
        function ga(gr) {
            try {
                gr.apply(null, eV(arguments, 1))
            } finally {
                gq--;
                if (gq === 0) {
                    while (gp.length) {
                        try {
                            gp.pop()()
                        } catch (gs) {
                            gk.error(gs)
                        }
                    }
                }
            }
        }
        function gi(gs) {
            var gr = gs.indexOf("#");
            return gr === -1 ? "" : gs.substr(gr)
        }
        gg.notifyWhenNoOutstandingRequests = function(gr) {
            if (gq === 0) {
                gr()
            } else {
                gp.push(gr)
            }
        }
        ;
        var f2, f1, gb = f4.href, f0 = gj.find("base"), gl = null;
        f7();
        f1 = f2;
        gg.url = function(gr, gs, gu) {
            if (x(gu)) {
                gu = null
            }
            if (f4 !== gd.location) {
                f4 = gd.location
            }
            if (gf !== gd.history) {
                gf = gd.history
            }
            if (gr) {
                var gv = f1 === gu;
                if (gb === gr && (!gm.history || gv)) {
                    return gg
                }
                var gt = gb && i(gb) === i(gr);
                gb = gr;
                f1 = gu;
                if (gm.history && (!gt || !gv)) {
                    gf[gs ? "replaceState" : "pushState"](gu, "", gr);
                    f7();
                    f1 = f2
                } else {
                    if (!gt || gl) {
                        gl = gr
                    }
                    if (gs) {
                        f4.replace(gr)
                    } else {
                        if (!gt) {
                            f4.href = gr
                        } else {
                            f4.hash = gi(gr)
                        }
                    }
                }
                return gg
            } else {
                return gl || f4.href.replace(/%27/g, "'")
            }
        }
        ;
        gg.state = function() {
            return f2
        }
        ;
        var f8 = []
          , f9 = false;
        function gh() {
            f7();
            f3()
        }
        function go() {
            try {
                return gf.state
            } catch (gr) {}
        }
        var ge = null;
        function f7() {
            f2 = go();
            f2 = x(f2) ? null : f2;
            if (dY(f2, ge)) {
                f2 = ge
            }
            ge = f2
        }
        function f3() {
            if (gb === gg.url() && f1 === f2) {
                return
            }
            gb = gg.url();
            f1 = f2;
            bj(f8, function(gr) {
                gr(gg.url(), f2)
            })
        }
        gg.onUrlChange = function(gr) {
            if (!f9) {
                if (gm.history) {
                    ac(gd).on("popstate", gh)
                }
                ac(gd).on("hashchange", gh);
                f9 = true
            }
            f8.push(gr);
            return gr
        }
        ;
        gg.$$applicationDestroyed = function() {
            ac(gd).off("hashchange popstate", gh)
        }
        ;
        gg.$$checkUrlChange = f3;
        gg.baseHref = function() {
            var gr = f0.attr("href");
            return gr ? gr.replace(/^(https?\:)?\/\/[^\/]*/, "") : ""
        }
        ;
        gg.defer = function(gs, gr) {
            var gt;
            gq++;
            gt = f5(function() {
                delete gc[gt];
                ga(gs)
            }, gr || 0);
            gc[gt] = true;
            return gt
        }
        ;
        gg.defer.cancel = function(gr) {
            if (gc[gr]) {
                delete gc[gr];
                f6(gr);
                ga(eD);
                return true
            }
            return false
        }
    }
    function ec() {
        this.$get = ["$window", "$log", "$sniffer", "$document", function(f3, f0, f2, f1) {
            return new cs(f3,f1,f0,f2)
        }
        ]
    }
    function c() {
        this.$get = function() {
            var f0 = {};
            function f1(ga, gc) {
                if (ga in f0) {
                    throw eT("$cacheFactory")("iid", "CacheId '{0}' is already taken!", ga)
                }
                var gb = 0
                  , f5 = fU({}, gc, {
                    id: ga
                })
                  , f4 = {}
                  , f2 = (gc && gc.capacity) || Number.MAX_VALUE
                  , f3 = {}
                  , f9 = null
                  , f7 = null;
                return f0[ga] = {
                    put: function(ge, gf) {
                        if (x(gf)) {
                            return
                        }
                        if (f2 < Number.MAX_VALUE) {
                            var gd = f3[ge] || (f3[ge] = {
                                key: ge
                            });
                            f6(gd)
                        }
                        if (!(ge in f4)) {
                            gb++
                        }
                        f4[ge] = gf;
                        if (gb > f2) {
                            this.remove(f7.key)
                        }
                        return gf
                    },
                    get: function(ge) {
                        if (f2 < Number.MAX_VALUE) {
                            var gd = f3[ge];
                            if (!gd) {
                                return
                            }
                            f6(gd)
                        }
                        return f4[ge]
                    },
                    remove: function(ge) {
                        if (f2 < Number.MAX_VALUE) {
                            var gd = f3[ge];
                            if (!gd) {
                                return
                            }
                            if (gd == f9) {
                                f9 = gd.p
                            }
                            if (gd == f7) {
                                f7 = gd.n
                            }
                            f8(gd.n, gd.p);
                            delete f3[ge]
                        }
                        delete f4[ge];
                        gb--
                    },
                    removeAll: function() {
                        f4 = {};
                        gb = 0;
                        f3 = {};
                        f9 = f7 = null
                    },
                    destroy: function() {
                        f4 = null;
                        f5 = null;
                        f3 = null;
                        delete f0[ga]
                    },
                    info: function() {
                        return fU({}, f5, {
                            size: gb
                        })
                    }
                };
                function f6(gd) {
                    if (gd != f9) {
                        if (!f7) {
                            f7 = gd
                        } else {
                            if (f7 == gd) {
                                f7 = gd.n
                            }
                        }
                        f8(gd.n, gd.p);
                        f8(gd, f9);
                        f9 = gd;
                        f9.n = null
                    }
                }
                function f8(gd, ge) {
                    if (gd != ge) {
                        if (gd) {
                            gd.p = ge
                        }
                        if (ge) {
                            ge.n = gd
                        }
                    }
                }
            }
            f1.info = function() {
                var f2 = {};
                bj(f0, function(f3, f4) {
                    f2[f4] = f3.info()
                });
                return f2
            }
            ;
            f1.get = function(f2) {
                return f0[f2]
            }
            ;
            return f1
        }
    }
    function bO() {
        this.$get = ["$cacheFactory", function(f0) {
            return f0("templates")
        }
        ]
    }
    var C = eT("$compile");
    ea.$inject = ["$provide", "$$sanitizeUriProvider"];
    function ea(f8, f9) {
        var gd = {}
          , f5 = "Directive"
          , f1 = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/
          , gc = /(([\w\-]+)(?:\:([^;]+))?;?)/
          , f6 = t("ngSrc,ngSrcset,src,srcset")
          , f2 = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/;
        var f7 = /^(on[a-z]+|formaction)$/;
        function gb(ge, gh, gg) {
            var gf = /^\s*([@&]|=(\*?))(\??)\s*(\w*)\s*$/;
            var gi = {};
            bj(ge, function(gl, gj) {
                var gk = gl.match(gf);
                if (!gk) {
                    throw C("iscp", "Invalid {3} for directive '{0}'. Definition: {... {1}: '{2}' ...}", gh, gj, gl, (gg ? "controller bindings definition" : "isolate scope definition"))
                }
                gi[gj] = {
                    mode: gk[1][0],
                    collection: gk[2] === "*",
                    optional: gk[3] === "?",
                    attrName: gk[4] || gj
                }
            });
            return gi
        }
        function ga(gh, gg) {
            var gi = {
                isolateScope: null,
                bindToController: null
            };
            if (s(gh.scope)) {
                if (gh.bindToController === true) {
                    gi.bindToController = gb(gh.scope, gg, true);
                    gi.isolateScope = {}
                } else {
                    gi.isolateScope = gb(gh.scope, gg, false)
                }
            }
            if (s(gh.bindToController)) {
                gi.bindToController = gb(gh.bindToController, gg, true)
            }
            if (s(gi.bindToController)) {
                var ge = gh.controller;
                var gf = gh.controllerAs;
                if (!ge) {
                    throw C("noctrl", "Cannot bind to controller without directive '{0}'s controller.", gg)
                } else {
                    if (!d2(ge, gf)) {
                        throw C("noident", "Cannot bind to controller without identifier for directive '{0}'.", gg)
                    }
                }
            }
            return gi
        }
        function f4(ge) {
            var gf = ge.charAt(0);
            if (!gf || gf !== db(gf)) {
                throw C("baddir", "Directive name '{0}' is invalid. The first character must be a lowercase letter", ge)
            }
            if (ge !== ge.trim()) {
                throw C("baddir", "Directive name '{0}' is invalid. The name should not contain leading or trailing whitespaces", ge)
            }
        }
        this.directive = function f3(gf, ge) {
            fa(gf, "directive");
            if (w(gf)) {
                f4(gf);
                dF(ge, "directiveFactory");
                if (!gd.hasOwnProperty(gf)) {
                    gd[gf] = [];
                    f8.factory(gf + f5, ["$injector", "$exceptionHandler", function(gh, gg) {
                        var gi = [];
                        bj(gd[gf], function(gk, gj) {
                            try {
                                var gm = gh.invoke(gk);
                                if (bn(gm)) {
                                    gm = {
                                        compile: V(gm)
                                    }
                                } else {
                                    if (!gm.compile && gm.link) {
                                        gm.compile = V(gm.link)
                                    }
                                }
                                gm.priority = gm.priority || 0;
                                gm.index = gj;
                                gm.name = gm.name || gf;
                                gm.require = gm.require || (gm.controller && gm.name);
                                gm.restrict = gm.restrict || "EA";
                                var gn = gm.$$bindings = ga(gm, gm.name);
                                if (s(gn.isolateScope)) {
                                    gm.$$isolateBindings = gn.isolateScope
                                }
                                gm.$$moduleName = gk.$$moduleName;
                                gi.push(gm)
                            } catch (gl) {
                                gg(gl)
                            }
                        });
                        return gi
                    }
                    ])
                }
                gd[gf].push(ge)
            } else {
                bj(gf, dP(f3))
            }
            return this
        }
        ;
        this.aHrefSanitizationWhitelist = function(ge) {
            if (eX(ge)) {
                f9.aHrefSanitizationWhitelist(ge);
                return this
            } else {
                return f9.aHrefSanitizationWhitelist()
            }
        }
        ;
        this.imgSrcSanitizationWhitelist = function(ge) {
            if (eX(ge)) {
                f9.imgSrcSanitizationWhitelist(ge);
                return this
            } else {
                return f9.imgSrcSanitizationWhitelist()
            }
        }
        ;
        var f0 = true;
        this.debugInfoEnabled = function(ge) {
            if (eX(ge)) {
                f0 = ge;
                return this
            }
            return f0
        }
        ;
        this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri", function(gO, gs, gf, gJ, gU, gK, gu, gz, gj, gP, gF) {
            var gi = function(g0, gX) {
                if (gX) {
                    var g1 = Object.keys(gX);
                    var gZ, gW, gY;
                    for (gZ = 0,
                    gW = g1.length; gZ < gW; gZ++) {
                        gY = g1[gZ];
                        this[gY] = gX[gY]
                    }
                } else {
                    this.$attr = {}
                }
                this.$$element = g0
            };
            gi.prototype = {
                $normalize: bl,
                $addClass: function(gW) {
                    if (gW && gW.length > 0) {
                        gP.addClass(this.$$element, gW)
                    }
                },
                $removeClass: function(gW) {
                    if (gW && gW.length > 0) {
                        gP.removeClass(this.$$element, gW)
                    }
                },
                $updateClass: function(gZ, gW) {
                    var gX = L(gZ, gW);
                    if (gX && gX.length) {
                        gP.addClass(this.$$element, gX)
                    }
                    var gY = L(gW, gZ);
                    if (gY && gY.length) {
                        gP.removeClass(this.$$element, gY)
                    }
                },
                $set: function(he, g4, g1, g8) {
                    var g5 = this.$$element[0], hb = da(g5, he), hc = a3(g5, he), g7 = he, gX;
                    if (hb) {
                        this.$$element.prop(he, g4);
                        g8 = hb
                    } else {
                        if (hc) {
                            this[hc] = g4;
                            g7 = hc
                        }
                    }
                    this[he] = g4;
                    if (g8) {
                        this.$attr[he] = g8
                    } else {
                        g8 = this.$attr[he];
                        if (!g8) {
                            this.$attr[he] = g8 = Q(he, "-")
                        }
                    }
                    gX = d4(this.$$element);
                    if ((gX === "a" && he === "href") || (gX === "img" && he === "src")) {
                        this[he] = g4 = gF(g4, he === "src")
                    } else {
                        if (gX === "img" && he === "srcset") {
                            var g3 = "";
                            var gW = aL(g4);
                            var gZ = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;
                            var ha = /\s/.test(gW) ? gZ : /(,)/;
                            var g2 = gW.split(ha);
                            var g6 = Math.floor(g2.length / 2);
                            for (var g9 = 0; g9 < g6; g9++) {
                                var hd = g9 * 2;
                                g3 += gF(aL(g2[hd]), true);
                                g3 += (" " + aL(g2[hd + 1]))
                            }
                            var gY = aL(g2[g9 * 2]).split(/\s/);
                            g3 += gF(aL(gY[0]), true);
                            if (gY.length === 2) {
                                g3 += (" " + aL(gY[1]))
                            }
                            this[he] = g4 = g3
                        }
                    }
                    if (g1 !== false) {
                        if (g4 === null || g4 === fE) {
                            this.$$element.removeAttr(g8)
                        } else {
                            this.$$element.attr(g8, g4)
                        }
                    }
                    var g0 = this.$$observers;
                    g0 && bj(g0[g7], function(hf) {
                        try {
                            hf(g4)
                        } catch (hg) {
                            gf(hg)
                        }
                    })
                },
                $observe: function(gY, g0) {
                    var gX = this
                      , gW = (gX.$$observers || (gX.$$observers = fM()))
                      , gZ = (gW[gY] || (gW[gY] = []));
                    gZ.push(g0);
                    gu.$evalAsync(function() {
                        if (!gZ.$$inter && gX.hasOwnProperty(gY)) {
                            g0(gX[gY])
                        }
                    });
                    return function() {
                        eI(gZ, g0)
                    }
                }
            };
            function gE(gW, gX) {
                try {
                    gW.addClass(gX)
                } catch (gY) {}
            }
            var gL = gs.startSymbol()
              , gN = gs.endSymbol()
              , gI = (gL == "{{" || gN == "}}") ? aU : function gI(gW) {
                return gW.replace(/\{\{/g, gL).replace(/}}/g, gN)
            }
              , gv = /^ngAttr[A-Z]/;
            gm.$$addBindingInfo = f0 ? function gp(gW, gX) {
                var gY = gW.data("$binding") || [];
                if (U(gX)) {
                    gY = gY.concat(gX)
                } else {
                    gY.push(gX)
                }
                gW.data("$binding", gY)
            }
            : eD;
            gm.$$addBindingClass = f0 ? function gT(gW) {
                gE(gW, "ng-binding")
            }
            : eD;
            gm.$$addScopeInfo = f0 ? function gG(gX, gY, gZ, g0) {
                var gW = gZ ? (g0 ? "$isolateScopeNoTemplate" : "$isolateScope") : "$scope";
                gX.data(gW, gY)
            }
            : eD;
            gm.$$addScopeClass = f0 ? function gt(gW, gX) {
                gE(gW, gX ? "ng-isolate-scope" : "ng-scope")
            }
            : eD;
            return gm;
            function gm(g2, g1, gY, g3, gX) {
                if (!(g2 instanceof ac)) {
                    g2 = ac(g2)
                }
                bj(g2, function(g5, g4) {
                    if (g5.nodeType == bz && g5.nodeValue.match(/\S+/)) {
                        g2[g4] = ac(g5).wrap("<span></span>").parent()[0]
                    }
                });
                var gZ = go(g2, g1, g2, gY, g3, gX);
                gm.$$addScopeClass(g2);
                var g0 = null;
                return function gW(g8, g4, g6) {
                    dF(g8, "scope");
                    g6 = g6 || {};
                    var ha = g6.parentBoundTranscludeFn
                      , g7 = g6.transcludeControllers
                      , g5 = g6.futureParentElement;
                    if (ha && ha.$$boundTransclude) {
                        ha = ha.$$boundTransclude
                    }
                    if (!g0) {
                        g0 = gC(g5)
                    }
                    var hb;
                    if (g0 !== "html") {
                        hb = ac(gw(g0, ac("<div>").append(g2).html()))
                    } else {
                        if (g4) {
                            hb = dQ.clone.call(g2)
                        } else {
                            hb = g2
                        }
                    }
                    if (g7) {
                        for (var g9 in g7) {
                            hb.data("$" + g9 + "Controller", g7[g9].instance)
                        }
                    }
                    gm.$$addScopeInfo(hb, g8);
                    if (g4) {
                        g4(hb, g8)
                    }
                    if (gZ) {
                        gZ(g8, hb, hb, ha)
                    }
                    return hb
                }
            }
            function gC(gW) {
                var gX = gW && gW[0];
                if (!gX) {
                    return "html"
                } else {
                    return d4(gX) !== "foreignobject" && gX.toString().match(/SVG/) ? "svg" : "html"
                }
            }
            function go(gX, g9, g5, g4, gW, g8) {
                var gZ = [], g6, gY, g1, g7, g3, g2, hb;
                for (var g0 = 0; g0 < gX.length; g0++) {
                    g6 = new gi();
                    gY = gV(gX[g0], [], g6, g0 === 0 ? g4 : fE, gW);
                    g1 = (gY.length) ? gA(gY, gX[g0], g6, g9, g5, null, [], [], g8) : null;
                    if (g1 && g1.scope) {
                        gm.$$addScopeClass(g6.$$element)
                    }
                    g3 = (g1 && g1.terminal || !(g7 = gX[g0].childNodes) || !g7.length) ? null : go(g7, g1 ? ((g1.transcludeOnThisElement || !g1.templateOnThisElement) && g1.transclude) : g9);
                    if (g1 || g3) {
                        gZ.push(g0, g1, g3);
                        g2 = true;
                        hb = hb || g1
                    }
                    g8 = null
                }
                return g2 ? ha : null;
                function ha(hq, he, ho, hn) {
                    var hh, hj, hd, hk, hf, hp, hm, hi;
                    var hg;
                    if (hb) {
                        var hl = he.length;
                        hg = new Array(hl);
                        for (hf = 0; hf < gZ.length; hf += 3) {
                            hm = gZ[hf];
                            hg[hm] = he[hm]
                        }
                    } else {
                        hg = he
                    }
                    for (hf = 0,
                    hp = gZ.length; hf < hp; ) {
                        hd = hg[gZ[hf++]];
                        hh = gZ[hf++];
                        hj = gZ[hf++];
                        if (hh) {
                            if (hh.scope) {
                                hk = hq.$new();
                                gm.$$addScopeInfo(ac(hd), hk);
                                var hc = hh.$$destroyBindings;
                                if (hc) {
                                    hh.$$destroyBindings = null;
                                    hk.$on("$destroyed", hc)
                                }
                            } else {
                                hk = hq
                            }
                            if (hh.transcludeOnThisElement) {
                                hi = gg(hq, hh.transclude, hn)
                            } else {
                                if (!hh.templateOnThisElement && hn) {
                                    hi = hn
                                } else {
                                    if (!hn && g9) {
                                        hi = gg(hq, g9)
                                    } else {
                                        hi = null
                                    }
                                }
                            }
                            hh(hj, hk, hd, ho, hi, hh)
                        } else {
                            if (hj) {
                                hj(hq, hd.childNodes, fE, hn)
                            }
                        }
                    }
                }
            }
            function gg(gY, gZ, gX) {
                var gW = function(g3, g1, g4, g0, g2) {
                    if (!g3) {
                        g3 = gY.$new(false, g2);
                        g3.$$transcluded = true
                    }
                    return gZ(g3, g1, {
                        parentBoundTranscludeFn: gX,
                        transcludeControllers: g4,
                        futureParentElement: g0
                    })
                };
                return gW
            }
            function gV(hb, g2, g8, g0, gZ) {
                var g1 = hb.nodeType, hg = g8.$attr, g5, gY;
                switch (g1) {
                case bB:
                    gk(g2, bl(d4(hb)), "E", g0, gZ);
                    for (var ha, hh, gW, g3, g9, g7, g6 = hb.attributes, hc = 0, he = g6 && g6.length; hc < he; hc++) {
                        var hd = false;
                        var g4 = false;
                        ha = g6[hc];
                        hh = ha.name;
                        g9 = aL(ha.value);
                        g3 = bl(hh);
                        if (g7 = gv.test(g3)) {
                            hh = hh.replace(bc, "").substr(8).replace(/_(.)/g, function(hi, hj) {
                                return hj.toUpperCase()
                            })
                        }
                        var gX = g3.replace(/(Start|End)$/, "");
                        if (gQ(gX)) {
                            if (g3 === gX + "Start") {
                                hd = hh;
                                g4 = hh.substr(0, hh.length - 5) + "end";
                                hh = hh.substr(0, hh.length - 6)
                            }
                        }
                        gW = bl(hh.toLowerCase());
                        hg[gW] = hh;
                        if (g7 || !g8.hasOwnProperty(gW)) {
                            g8[gW] = g9;
                            if (da(hb, gW)) {
                                g8[gW] = true
                            }
                        }
                        gy(hb, g2, g9, gW, g7);
                        gk(g2, gW, "A", g0, gZ, hd, g4)
                    }
                    gY = hb.className;
                    if (s(gY)) {
                        gY = gY.animVal
                    }
                    if (w(gY) && gY !== "") {
                        while (g5 = gc.exec(gY)) {
                            gW = bl(g5[2]);
                            if (gk(g2, gW, "C", g0, gZ)) {
                                g8[gW] = aL(g5[3])
                            }
                            gY = gY.substr(g5.index + g5[0].length)
                        }
                    }
                    break;
                case bz:
                    if (e8 === 11) {
                        while (hb.parentNode && hb.nextSibling && hb.nextSibling.nodeType === bz) {
                            hb.nodeValue = hb.nodeValue + hb.nextSibling.nodeValue;
                            hb.parentNode.removeChild(hb.nextSibling)
                        }
                    }
                    gr(g2, hb.nodeValue);
                    break;
                case e5:
                    try {
                        g5 = f1.exec(hb.nodeValue);
                        if (g5) {
                            gW = bl(g5[1]);
                            if (gk(g2, gW, "M", g0, gZ)) {
                                g8[gW] = aL(g5[2])
                            }
                        }
                    } catch (hf) {}
                    break
                }
                g2.sort(gR);
                return g2
            }
            function gM(gZ, gW, gY) {
                var gX = [];
                var g0 = 0;
                if (gW && gZ.hasAttribute && gZ.hasAttribute(gW)) {
                    do {
                        if (!gZ) {
                            throw C("uterdir", "Unterminated attribute, found '{0}' but no matching '{1}' found.", gW, gY)
                        }
                        if (gZ.nodeType == bB) {
                            if (gZ.hasAttribute(gW)) {
                                g0++
                            }
                            if (gZ.hasAttribute(gY)) {
                                g0--
                            }
                        }
                        gX.push(gZ);
                        gZ = gZ.nextSibling
                    } while (g0 > 0)
                } else {
                    gX.push(gZ)
                }
                return ac(gX)
            }
            function gS(gX, gW, gY) {
                return function(g1, g0, gZ, g3, g2) {
                    g0 = gM(g0[0], gW, gY);
                    return gX(g1, g0, gZ, g3, g2)
                }
            }
            function gA(g3, g4, hj, hk, he, g7, ho, gW, gY) {
                gY = gY || {};
                var g9 = -Number.MAX_VALUE, hh = gY.newScopeDirective, g8 = gY.controllerDirectives, hf = gY.newIsolateScopeDirective, hu = gY.templateDirective, hr = gY.nonTlbTranscludeDirective, g2 = false, gZ = false, hn = gY.hasElementTranscludeDirective, hq = hj.$$element = ac(g4), gX, g5, hd, hi = g7, hb = hk, ht, g1;
                for (var hv = 0, hl = g3.length; hv < hl; hv++) {
                    gX = g3[hv];
                    var hs = gX.$$start;
                    var g0 = gX.$$end;
                    if (hs) {
                        hq = gM(g4, hs, g0)
                    }
                    hd = fE;
                    if (g9 > gX.priority) {
                        break
                    }
                    if (g1 = gX.scope) {
                        if (!gX.templateUrl) {
                            if (s(g1)) {
                                gx("new/isolated scope", hf || hh, gX, hq);
                                hf = gX
                            } else {
                                gx("new/isolated scope", hf, gX, hq)
                            }
                        }
                        hh = hh || gX
                    }
                    g5 = gX.name;
                    if (!gX.templateUrl && gX.controller) {
                        g1 = gX.controller;
                        g8 = g8 || fM();
                        gx("'" + g5 + "' controller", g8[g5], gX, hq);
                        g8[g5] = gX
                    }
                    if (g1 = gX.transclude) {
                        g2 = true;
                        if (!gX.$$tlb) {
                            gx("transclusion", hr, gX, hq);
                            hr = gX
                        }
                        if (g1 == "element") {
                            hn = true;
                            g9 = gX.priority;
                            hd = hq;
                            hq = hj.$$element = ac(el.createComment(" " + g5 + ": " + hj[g5] + " "));
                            g4 = hq[0];
                            gn(he, eV(hd), g4);
                            hb = gm(hd, hk, g9, hi && hi.name, {
                                nonTlbTranscludeDirective: hr
                            })
                        } else {
                            hd = ac(dz(g4)).contents();
                            hq.empty();
                            hb = gm(hd, hk)
                        }
                    }
                    if (gX.template) {
                        gZ = true;
                        gx("template", hu, gX, hq);
                        hu = gX;
                        g1 = (bn(gX.template)) ? gX.template(hq, hj) : gX.template;
                        g1 = gI(g1);
                        if (gX.replace) {
                            hi = gX;
                            if (g(g1)) {
                                hd = []
                            } else {
                                hd = by(gw(gX.templateNamespace, aL(g1)))
                            }
                            g4 = hd[0];
                            if (hd.length != 1 || g4.nodeType !== bB) {
                                throw C("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", g5, "")
                            }
                            gn(he, hq, g4);
                            var ha = {
                                $attr: {}
                            };
                            var hm = gV(g4, [], ha);
                            var g6 = g3.splice(hv + 1, g3.length - (hv + 1));
                            if (hf) {
                                gD(hm)
                            }
                            g3 = g3.concat(hm).concat(g6);
                            gh(hj, ha);
                            hl = g3.length
                        } else {
                            hq.html(g1)
                        }
                    }
                    if (gX.templateUrl) {
                        gZ = true;
                        gx("template", hu, gX, hq);
                        hu = gX;
                        if (gX.replace) {
                            hi = gX
                        }
                        hc = gH(g3.splice(hv, g3.length - hv), hq, hj, he, g2 && hb, ho, gW, {
                            controllerDirectives: g8,
                            newScopeDirective: (hh !== gX) && hh,
                            newIsolateScopeDirective: hf,
                            templateDirective: hu,
                            nonTlbTranscludeDirective: hr
                        });
                        hl = g3.length
                    } else {
                        if (gX.compile) {
                            try {
                                ht = gX.compile(hq, hj, hb);
                                if (bn(ht)) {
                                    hg(null, ht, hs, g0)
                                } else {
                                    if (ht) {
                                        hg(ht.pre, ht.post, hs, g0)
                                    }
                                }
                            } catch (hx) {
                                gf(hx, ce(hq))
                            }
                        }
                    }
                    if (gX.terminal) {
                        hc.terminal = true;
                        g9 = Math.max(g9, gX.priority)
                    }
                }
                hc.scope = hh && hh.scope === true;
                hc.transcludeOnThisElement = g2;
                hc.templateOnThisElement = gZ;
                hc.transclude = hb;
                gY.hasElementTranscludeDirective = hn;
                return hc;
                function hg(hB, hz, hy, hA) {
                    if (hB) {
                        if (hy) {
                            hB = gS(hB, hy, hA)
                        }
                        hB.require = gX.require;
                        hB.directiveName = g5;
                        if (hf === gX || gX.$$isolateScope) {
                            hB = gl(hB, {
                                isolateScope: true
                            })
                        }
                        ho.push(hB)
                    }
                    if (hz) {
                        if (hy) {
                            hz = gS(hz, hy, hA)
                        }
                        hz.require = gX.require;
                        hz.directiveName = g5;
                        if (hf === gX || gX.$$isolateScope) {
                            hz = gl(hz, {
                                isolateScope: true
                            })
                        }
                        gW.push(hz)
                    }
                }
                function hw(hE, hB, hJ, hy) {
                    var hH;
                    if (w(hB)) {
                        var hD = hB.match(f2);
                        var hz = hB.substring(hD[0].length);
                        var hG = hD[1] || hD[3];
                        var hF = hD[2] === "?";
                        if (hG === "^^") {
                            hJ = hJ.parent()
                        } else {
                            hH = hy && hy[hz];
                            hH = hH && hH.instance
                        }
                        if (!hH) {
                            var hA = "$" + hz + "Controller";
                            hH = hG ? hJ.inheritedData(hA) : hJ.data(hA)
                        }
                        if (!hH && !hF) {
                            throw C("ctreq", "Controller '{0}', required by directive '{1}', can't be found!", hz, hE)
                        }
                    } else {
                        if (U(hB)) {
                            hH = [];
                            for (var hC = 0, hI = hB.length; hC < hI; hC++) {
                                hH[hC] = hw(hE, hB[hC], hJ, hy)
                            }
                        }
                    }
                    return hH || null
                }
                function hp(hH, hG, hI, hE, hD, hJ) {
                    var hy = fM();
                    for (var hA in hE) {
                        var hF = hE[hA];
                        var hz = {
                            $scope: hF === hf || hF.$$isolateScope ? hD : hJ,
                            $element: hH,
                            $attrs: hG,
                            $transclude: hI
                        };
                        var hB = hF.controller;
                        if (hB == "@") {
                            hB = hG[hF.name]
                        }
                        var hC = gK(hB, hz, true, hF.controllerAs);
                        hy[hF.name] = hC;
                        if (!hn) {
                            hH.data("$" + hF.name + "Controller", hC.instance)
                        }
                    }
                    return hy
                }
                function hc(hI, hA, hB, hD, hP, hy) {
                    var hN, hE, hC, hH, hF, hQ, hz, hG, hJ;
                    if (g4 === hB) {
                        hJ = hj;
                        hG = hj.$$element
                    } else {
                        hG = ac(hB);
                        hJ = new gi(hG,hj)
                    }
                    if (hf) {
                        hF = hA.$new(true)
                    }
                    if (hP) {
                        hz = hK;
                        hz.$$boundTransclude = hP
                    }
                    if (g8) {
                        hQ = hp(hG, hJ, hz, g8, hF, hA)
                    }
                    if (hf) {
                        gm.$$addScopeInfo(hG, hF, true, !(hu && (hu === hf || hu === hf.$$originalDirective)));
                        gm.$$addScopeClass(hG, true);
                        hF.$$isolateBindings = hf.$$isolateBindings;
                        ge(hA, hJ, hF, hF.$$isolateBindings, hf, hF)
                    }
                    if (hQ) {
                        var hM = hf || hh;
                        var hS;
                        var hL;
                        if (hM && hQ[hM.name]) {
                            hS = hM.$$bindings.bindToController;
                            hH = hQ[hM.name];
                            if (hH && hH.identifier && hS) {
                                hL = hH;
                                hy.$$destroyBindings = ge(hA, hJ, hH.instance, hS, hM)
                            }
                        }
                        for (hN in hQ) {
                            hH = hQ[hN];
                            var hR = hH();
                            if (hR !== hH.instance) {
                                hH.instance = hR;
                                hG.data("$" + hN + "Controller", hR);
                                if (hH === hL) {
                                    hy.$$destroyBindings();
                                    hy.$$destroyBindings = ge(hA, hJ, hR, hS, hM)
                                }
                            }
                        }
                    }
                    for (hN = 0,
                    hE = ho.length; hN < hE; hN++) {
                        hC = ho[hN];
                        gq(hC, hC.isolateScope ? hF : hA, hG, hJ, hC.require && hw(hC.directiveName, hC.require, hG, hQ), hz)
                    }
                    var hO = hA;
                    if (hf && (hf.template || hf.templateUrl === null)) {
                        hO = hF
                    }
                    hI && hI(hO, hB.childNodes, fE, hP);
                    for (hN = gW.length - 1; hN >= 0; hN--) {
                        hC = gW[hN];
                        gq(hC, hC.isolateScope ? hF : hA, hG, hJ, hC.require && hw(hC.directiveName, hC.require, hG, hQ), hz)
                    }
                    function hK(hW, hV, hT) {
                        var hU;
                        if (!dO(hW)) {
                            hT = hV;
                            hV = hW;
                            hW = fE
                        }
                        if (hn) {
                            hU = hQ
                        }
                        if (!hT) {
                            hT = hn ? hG.parent() : hG
                        }
                        return hP(hW, hV, hU, hT, hO)
                    }
                }
            }
            function gD(gY) {
                for (var gW = 0, gX = gY.length; gW < gX; gW++) {
                    gY[gW] = eo(gY[gW], {
                        $$isolateScope: true
                    })
                }
            }
            function gk(g3, gW, g7, g6, gX, g4, gZ) {
                if (gW === gX) {
                    return null
                }
                var g1 = null;
                if (gd.hasOwnProperty(gW)) {
                    for (var g5, gY = gO.get(gW + f5), g0 = 0, g8 = gY.length; g0 < g8; g0++) {
                        try {
                            g5 = gY[g0];
                            if ((g6 === fE || g6 > g5.priority) && g5.restrict.indexOf(g7) != -1) {
                                if (g4) {
                                    g5 = eo(g5, {
                                        $$start: g4,
                                        $$end: gZ
                                    })
                                }
                                g3.push(g5);
                                g1 = g5
                            }
                        } catch (g2) {
                            gf(g2)
                        }
                    }
                }
                return g1
            }
            function gQ(gW) {
                if (gd.hasOwnProperty(gW)) {
                    for (var g0, gZ = gO.get(gW + f5), gX = 0, gY = gZ.length; gX < gY; gX++) {
                        g0 = gZ[gX];
                        if (g0.multiElement) {
                            return true
                        }
                    }
                }
                return false
            }
            function gh(g0, gZ) {
                var gX = gZ.$attr
                  , gY = g0.$attr
                  , gW = g0.$$element;
                bj(g0, function(g2, g1) {
                    if (g1.charAt(0) != "$") {
                        if (gZ[g1] && gZ[g1] !== g2) {
                            g2 += (g1 === "style" ? ";" : " ") + gZ[g1]
                        }
                        g0.$set(g1, g2, true, gX[g1])
                    }
                });
                bj(gZ, function(g2, g1) {
                    if (g1 == "class") {
                        gE(gW, g2);
                        g0["class"] = (g0["class"] ? g0["class"] + " " : "") + g2
                    } else {
                        if (g1 == "style") {
                            gW.attr("style", gW.attr("style") + ";" + g2);
                            g0.style = (g0.style ? g0.style + ";" : "") + g2
                        } else {
                            if (g1.charAt(0) != "$" && !g0.hasOwnProperty(g1)) {
                                g0[g1] = g2;
                                gY[g1] = gX[g1]
                            }
                        }
                    }
                })
            }
            function gH(g1, g5, g0, g9, g3, gW, gY, hb) {
                var g6 = [], hc, gZ, g2 = g5[0], g4 = g1.shift(), g8 = eo(g4, {
                    templateUrl: null,
                    transclude: null,
                    replace: null,
                    $$originalDirective: g4
                }), gX = (bn(g4.templateUrl)) ? g4.templateUrl(g5, g0) : g4.templateUrl, ha = g4.templateNamespace;
                g5.empty();
                gJ(gX).then(function(hj) {
                    var hm, hh, hg, hl;
                    hj = gI(hj);
                    if (g4.replace) {
                        if (g(hj)) {
                            hg = []
                        } else {
                            hg = by(gw(ha, aL(hj)))
                        }
                        hm = hg[0];
                        if (hg.length != 1 || hm.nodeType !== bB) {
                            throw C("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", g4.name, gX)
                        }
                        hh = {
                            $attr: {}
                        };
                        gn(g9, g5, hm);
                        var hk = gV(hm, [], hh);
                        if (s(g4.scope)) {
                            gD(hk)
                        }
                        g1 = hk.concat(g1);
                        gh(g0, hh)
                    } else {
                        hm = g2;
                        g5.html(hj)
                    }
                    g1.unshift(g8);
                    hc = gA(g1, hm, g0, g3, g5, g4, gW, gY, hb);
                    bj(g9, function(hq, hp) {
                        if (hq == hm) {
                            g9[hp] = g5[0]
                        }
                    });
                    gZ = go(g5[0].childNodes, g3);
                    while (g6.length) {
                        var ho = g6.shift()
                          , hn = g6.shift()
                          , hd = g6.shift()
                          , hf = g6.shift()
                          , hi = g5[0];
                        if (ho.$$destroyed) {
                            continue
                        }
                        if (hn !== g2) {
                            var he = hn.className;
                            if (!(hb.hasElementTranscludeDirective && g4.replace)) {
                                hi = dz(hm)
                            }
                            gn(hd, ac(hn), hi);
                            gE(ac(hi), he)
                        }
                        if (hc.transcludeOnThisElement) {
                            hl = gg(ho, hc.transclude, hf)
                        } else {
                            hl = hf
                        }
                        hc(gZ, ho, hi, g9, hl, hc)
                    }
                    g6 = null
                });
                return function g7(he, hg, hi, hd, hf) {
                    var hh = hf;
                    if (hg.$$destroyed) {
                        return
                    }
                    if (g6) {
                        g6.push(hg, hi, hd, hh)
                    } else {
                        if (hc.transcludeOnThisElement) {
                            hh = gg(hg, hc.transclude, hf)
                        }
                        hc(gZ, hg, hi, hd, hh, hc)
                    }
                }
            }
            function gR(gX, gW) {
                var gY = gW.priority - gX.priority;
                if (gY !== 0) {
                    return gY
                }
                if (gX.name !== gW.name) {
                    return (gX.name < gW.name) ? -1 : 1
                }
                return gX.index - gW.index
            }
            function gx(gZ, gX, g0, gW) {
                function gY(g1) {
                    return g1 ? (" (module: " + g1 + ")") : ""
                }
                if (gX) {
                    throw C("multidir", "Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}", gX.name, gY(gX.$$moduleName), g0.name, gY(g0.$$moduleName), gZ, ce(gW))
                }
            }
            function gr(gY, gZ) {
                var gW = gs(gZ, true);
                if (gW) {
                    gY.push({
                        priority: 0,
                        compile: function gX(g2) {
                            var g3 = g2.parent()
                              , g1 = !!g3.length;
                            if (g1) {
                                gm.$$addBindingClass(g3)
                            }
                            return function g0(g6, g7) {
                                var g5 = g7.parent();
                                if (!g1) {
                                    gm.$$addBindingClass(g5)
                                }
                                gm.$$addBindingInfo(g5, gW.expressions);
                                g6.$watch(gW, function g4(g8) {
                                    g7[0].nodeValue = g8
                                })
                            }
                        }
                    })
                }
            }
            function gw(gX, gW) {
                gX = db(gX || "html");
                switch (gX) {
                case "svg":
                case "math":
                    var gY = el.createElement("div");
                    gY.innerHTML = "<" + gX + ">" + gW + "</" + gX + ">";
                    return gY.childNodes[0].childNodes;
                default:
                    return gW
                }
            }
            function gB(gY, gX) {
                if (gX == "srcdoc") {
                    return gj.HTML
                }
                var gW = d4(gY);
                if (gX == "xlinkHref" || (gW == "form" && gX == "action") || (gW != "img" && (gX == "src" || gX == "ngSrc"))) {
                    return gj.RESOURCE_URL
                }
            }
            function gy(gZ, g2, g1, gX, g0) {
                var gY = gB(gZ, gX);
                g0 = f6[gX] || g0;
                var gW = gs(g1, true, gY, g0);
                if (!gW) {
                    return
                }
                if (gX === "multiple" && d4(gZ) === "select") {
                    throw C("selmulti", "Binding to the 'multiple' attribute is not supported. Element: {0}", ce(gZ))
                }
                g2.push({
                    priority: 100,
                    compile: function() {
                        return {
                            pre: function g3(g8, g7, g4) {
                                var g6 = (g4.$$observers || (g4.$$observers = {}));
                                if (f7.test(gX)) {
                                    throw C("nodomevents", "Interpolations for HTML DOM event attributes are disallowed.  Please use the ng- versions (such as ng-click instead of onclick) instead.")
                                }
                                var g9 = g4[gX];
                                if (g9 !== g1) {
                                    gW = g9 && gs(g9, true, gY, g0);
                                    g1 = g9
                                }
                                if (!gW) {
                                    return
                                }
                                g4[gX] = gW(g8);
                                (g6[gX] || (g6[gX] = [])).$$inter = true;
                                (g4.$$observers && g4.$$observers[gX].$$scope || g8).$watch(gW, function g5(hb, ha) {
                                    if (gX === "class" && hb != ha) {
                                        g4.$updateClass(hb, ha)
                                    } else {
                                        g4.$set(gX, hb)
                                    }
                                })
                            }
                        }
                    }
                })
            }
            function gn(g8, gY, g7) {
                var g5 = gY[0], gX = gY.length, g6 = g5.parentNode, g2, g9;
                if (g8) {
                    for (g2 = 0,
                    g9 = g8.length; g2 < g9; g2++) {
                        if (g8[g2] == g5) {
                            g8[g2++] = g7;
                            for (var g0 = g2, ha = g0 + gX - 1, g3 = g8.length; g0 < g3; g0++,
                            ha++) {
                                if (ha < g3) {
                                    g8[g0] = g8[ha]
                                } else {
                                    delete g8[g0]
                                }
                            }
                            g8.length -= gX - 1;
                            if (g8.context === g5) {
                                g8.context = g7
                            }
                            break
                        }
                    }
                }
                if (g6) {
                    g6.replaceChild(g7, g5)
                }
                var g4 = el.createDocumentFragment();
                g4.appendChild(g5);
                if (ac.hasData(g5)) {
                    ac(g7).data(ac(g5).data());
                    if (!fz) {
                        delete ac.cache[g5[ac.expando]]
                    } else {
                        b1 = true;
                        fz.cleanData([g5])
                    }
                }
                for (var gZ = 1, gW = gY.length; gZ < gW; gZ++) {
                    var g1 = gY[gZ];
                    ac(g1).remove();
                    g4.appendChild(g1);
                    delete gY[gZ]
                }
                gY[0] = g7;
                gY.length = 1
            }
            function gl(gX, gW) {
                return fU(function() {
                    return gX.apply(null, arguments)
                }, gX, gW)
            }
            function gq(gY, gZ, gW, gX, g2, g0) {
                try {
                    gY(gZ, gW, gX, g2, g0)
                } catch (g1) {
                    gf(g1, ce(gW))
                }
            }
            function ge(gY, gX, gW, g3, g1, gZ) {
                var g0;
                bj(g3, function(g8, g5) {
                    var ha = g8.attrName, hb = g8.optional, g9 = g8.mode, he, g7, hd, g6;
                    if (!O.call(gX, ha)) {
                        gX[ha] = fE
                    }
                    switch (g9) {
                    case "@":
                        if (!gX[ha] && !hb) {
                            gW[g5] = fE
                        }
                        gX.$observe(ha, function(hf) {
                            gW[g5] = hf
                        });
                        gX.$$observers[ha].$$scope = gY;
                        if (gX[ha]) {
                            gW[g5] = gs(gX[ha])(gY)
                        }
                        break;
                    case "=":
                        if (hb && !gX[ha]) {
                            return
                        }
                        g7 = gU(gX[ha]);
                        if (g7.literal) {
                            g6 = dY
                        } else {
                            g6 = function(hg, hf) {
                                return hg === hf || (hg !== hg && hf !== hf)
                            }
                        }
                        hd = g7.assign || function() {
                            he = gW[g5] = g7(gY);
                            throw C("nonassign", "Expression '{0}' used with directive '{1}' is non-assignable!", gX[ha], g1.name)
                        }
                        ;
                        he = gW[g5] = g7(gY);
                        var g4 = function g4(hf) {
                            if (!g6(hf, gW[g5])) {
                                if (!g6(hf, he)) {
                                    gW[g5] = hf
                                } else {
                                    hd(gY, hf = gW[g5])
                                }
                            }
                            return he = hf
                        };
                        g4.$stateful = true;
                        var hc;
                        if (g8.collection) {
                            hc = gY.$watchCollection(gX[ha], g4)
                        } else {
                            hc = gY.$watch(gU(gX[ha], g4), null, g7.literal)
                        }
                        g0 = (g0 || []);
                        g0.push(hc);
                        break;
                    case "&":
                        g7 = gU(gX[ha]);
                        if (g7 === eD && hb) {
                            break
                        }
                        gW[g5] = function(hf) {
                            return g7(gY, hf)
                        }
                        ;
                        break
                    }
                });
                var g2 = g0 ? function g2() {
                    for (var g4 = 0, g5 = g0.length; g4 < g5; ++g4) {
                        g0[g4]()
                    }
                }
                : eD;
                if (gZ && g2 !== eD) {
                    gZ.$on("$destroy", g2);
                    return eD
                }
                return g2
            }
        }
        ]
    }
    var bc = /^((?:x|data)[\:\-_])/i;
    function bl(f0) {
        return ar(f0.replace(bc, ""))
    }
    function es(f3, f1, f0, f2) {}
    function aS(f4, f2, f3, f0, f1) {}
    function L(f7, f6) {
        var f2 = ""
          , f1 = f7.split(/\s+/)
          , f0 = f6.split(/\s+/);
        outer: for (var f5 = 0; f5 < f1.length; f5++) {
            var f4 = f1[f5];
            for (var f3 = 0; f3 < f0.length; f3++) {
                if (f4 == f0[f3]) {
                    continue outer
                }
            }
            f2 += (f2.length > 0 ? " " : "") + f4
        }
        return f2
    }
    function by(f2) {
        f2 = ac(f2);
        var f0 = f2.length;
        if (f0 <= 1) {
            return f2
        }
        while (f0--) {
            var f1 = f2[f0];
            if (f1.nodeType === e5) {
                dZ.call(f2, f0, 1)
            }
        }
        return f2
    }
    var dS = eT("$controller");
    var bU = /^(\S+)(\s+as\s+(\w+))?$/;
    function d2(f0, f2) {
        if (f2 && w(f2)) {
            return f2
        }
        if (w(f0)) {
            var f1 = bU.exec(f0);
            if (f1) {
                return f1[3]
            }
        }
    }
    function dt() {
        var f1 = {}
          , f0 = false;
        this.register = function(f2, f3) {
            fa(f2, "controller");
            if (s(f2)) {
                fU(f1, f2)
            } else {
                f1[f2] = f3
            }
        }
        ;
        this.allowGlobals = function() {
            f0 = true
        }
        ;
        this.$get = ["$injector", "$window", function(f2, f3) {
            return function(gb, f5, f8, f7) {
                var gd, f9, f6, ga;
                f8 = f8 === true;
                if (f7 && w(f7)) {
                    ga = f7
                }
                if (w(gb)) {
                    f9 = gb.match(bU);
                    if (!f9) {
                        throw dS("ctrlfmt", "Badly formed controller string '{0}'. Must match `__name__ as __id__` or `__name__`.", gb)
                    }
                    f6 = f9[1],
                    ga = ga || f9[3];
                    gb = f1.hasOwnProperty(f6) ? f1[f6] : c6(f5.$scope, f6, true) || (f0 ? c6(f3, f6, true) : fE);
                    dg(gb, f6, true)
                }
                if (f8) {
                    var gc = (U(gb) ? gb[gb.length - 1] : gb).prototype;
                    gd = Object.create(gc || null);
                    if (ga) {
                        f4(f5, ga, gd, f6 || gb.name)
                    }
                    var ge;
                    return ge = fU(function() {
                        var gf = f2.invoke(gb, gd, f5, f6);
                        if (gf !== gd && (s(gf) || bn(gf))) {
                            gd = gf;
                            if (ga) {
                                f4(f5, ga, gd, f6 || gb.name)
                            }
                        }
                        return gd
                    }, {
                        instance: gd,
                        identifier: ga
                    })
                }
                gd = f2.instantiate(gb, f5, f6);
                if (ga) {
                    f4(f5, ga, gd, f6 || gb.name)
                }
                return gd
            }
            ;
            function f4(f8, f7, f5, f6) {
                if (!(f8 && s(f8.$scope))) {
                    throw eT("$controller")("noscp", "Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.", f6, f7)
                }
                f8.$scope[f7] = f5
            }
        }
        ]
    }
    function dA() {
        this.$get = ["$window", function(f0) {
            return ac(f0.document)
        }
        ]
    }
    function fS() {
        this.$get = ["$log", function(f0) {
            return function(f1, f2) {
                f0.error.apply(f0, arguments)
            }
        }
        ]
    }
    var aE = "application/json";
    var b9 = {
        "Content-Type": aE + ";charset=utf-8"
    };
    var ep = /^\[|^\{(?!\{)/;
    var d9 = {
        "[": /]$/,
        "{": /}$/
    };
    var cc = /^\)\]\}',?\n/;
    function fK(f0) {
        if (s(f0)) {
            return fe(f0) ? f0.toISOString() : aA(f0)
        }
        return f0
    }
    function av() {
        this.$get = function() {
            return function f0(f2) {
                if (!f2) {
                    return ""
                }
                var f1 = [];
                dy(f2, function(f4, f3) {
                    if (f4 === null || x(f4)) {
                        return
                    }
                    if (U(f4)) {
                        bj(f4, function(f6, f5) {
                            f1.push(I(f3) + "=" + I(fK(f6)))
                        })
                    } else {
                        f1.push(I(f3) + "=" + I(fK(f4)))
                    }
                });
                return f1.join("&")
            }
        }
    }
    function aR() {
        this.$get = function() {
            return function f0(f3) {
                if (!f3) {
                    return ""
                }
                var f2 = [];
                f1(f3, "", true);
                return f2.join("&");
                function f1(f6, f5, f4) {
                    if (f6 === null || x(f6)) {
                        return
                    }
                    if (U(f6)) {
                        bj(f6, function(f7) {
                            f1(f7, f5 + "[]")
                        })
                    } else {
                        if (s(f6) && !fe(f6)) {
                            dy(f6, function(f8, f7) {
                                f1(f8, f5 + (f4 ? "" : "[") + f7 + (f4 ? "" : "]"))
                            })
                        } else {
                            f2.push(I(f5) + "=" + I(fK(f6)))
                        }
                    }
                }
            }
        }
    }
    function B(f0, f2) {
        if (w(f0)) {
            var f1 = f0.replace(cc, "").trim();
            if (f1) {
                var f3 = f2("Content-Type");
                if ((f3 && (f3.indexOf(aE) === 0)) || e9(f1)) {
                    f0 = a2(f1)
                }
            }
        }
        return f0
    }
    function e9(f1) {
        var f0 = f1.match(ep);
        return f0 && d9[f0[0]].test(f1)
    }
    function eQ(f3) {
        var f1 = fM(), f2;
        function f0(f4, f5) {
            if (f4) {
                f1[f4] = f1[f4] ? f1[f4] + ", " + f5 : f5
            }
        }
        if (w(f3)) {
            bj(f3.split("\n"), function(f4) {
                f2 = f4.indexOf(":");
                f0(db(aL(f4.substr(0, f2))), aL(f4.substr(f2 + 1)))
            })
        } else {
            if (s(f3)) {
                bj(f3, function(f5, f4) {
                    f0(db(f4), aL(f5))
                })
            }
        }
        return f1
    }
    function bs(f0) {
        var f1;
        return function(f2) {
            if (!f1) {
                f1 = eQ(f0)
            }
            if (f2) {
                var f3 = f1[db(f2)];
                if (f3 === void 0) {
                    f3 = null
                }
                return f3
            }
            return f1
        }
    }
    function u(f2, f3, f0, f1) {
        if (bn(f1)) {
            return f1(f2, f3, f0)
        }
        bj(f1, function(f4) {
            f2 = f4(f2, f3, f0)
        });
        return f2
    }
    function aT(f0) {
        return 200 <= f0 && f0 < 300
    }
    function dm() {
        var f2 = this.defaults = {
            transformResponse: [B],
            transformRequest: [function(f3) {
                return s(f3) && !cP(f3) && !a(f3) && !eB(f3) ? aA(f3) : f3
            }
            ],
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                },
                post: d8(b9),
                put: d8(b9),
                patch: d8(b9)
            },
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            paramSerializer: "$httpParamSerializer"
        };
        var f1 = false;
        this.useApplyAsync = function(f3) {
            if (eX(f3)) {
                f1 = !!f3;
                return this
            }
            return f1
        }
        ;
        var f0 = this.interceptors = [];
        this.$get = ["$httpBackend", "$$cookieReader", "$cacheFactory", "$rootScope", "$q", "$injector", function(ga, gf, f9, gb, f6, gd) {
            var ge = f9("$http");
            f2.paramSerializer = w(f2.paramSerializer) ? gd.get(f2.paramSerializer) : f2.paramSerializer;
            var gc = [];
            bj(f0, function(gg) {
                gc.unshift(w(gg) ? gd.get(gg) : gd.invoke(gg))
            });
            function f7(gm) {
                if (!cY.isObject(gm)) {
                    throw eT("$http")("badreq", "Http request configuration must be an object.  Received: {0}", gm)
                }
                var gj = fU({
                    method: "get",
                    transformRequest: f2.transformRequest,
                    transformResponse: f2.transformResponse,
                    paramSerializer: f2.paramSerializer
                }, gm);
                gj.headers = gk(gm);
                gj.method = a4(gj.method);
                gj.paramSerializer = w(gj.paramSerializer) ? gd.get(gj.paramSerializer) : gj.paramSerializer;
                var gh = function(gr) {
                    var gs = gr.headers;
                    var gq = u(gr.data, bs(gs), fE, gr.transformRequest);
                    if (x(gq)) {
                        bj(gs, function(gt, gu) {
                            if (db(gu) === "content-type") {
                                delete gs[gu]
                            }
                        })
                    }
                    if (x(gr.withCredentials) && !x(f2.withCredentials)) {
                        gr.withCredentials = f2.withCredentials
                    }
                    return f4(gr, gq).then(gi, gi)
                };
                var gg = [gh, fE];
                var gp = f6.when(gj);
                bj(gc, function(gq) {
                    if (gq.request || gq.requestError) {
                        gg.unshift(gq.request, gq.requestError)
                    }
                    if (gq.response || gq.responseError) {
                        gg.push(gq.response, gq.responseError)
                    }
                });
                while (gg.length) {
                    var go = gg.shift();
                    var gl = gg.shift();
                    gp = gp.then(go, gl)
                }
                gp.success = function(gq) {
                    dg(gq, "fn");
                    gp.then(function(gr) {
                        gq(gr.data, gr.status, gr.headers, gj)
                    });
                    return gp
                }
                ;
                gp.error = function(gq) {
                    dg(gq, "fn");
                    gp.then(null, function(gr) {
                        gq(gr.data, gr.status, gr.headers, gj)
                    });
                    return gp
                }
                ;
                return gp;
                function gi(gq) {
                    var gr = fU({}, gq);
                    if (!gq.data) {
                        gr.data = gq.data
                    } else {
                        gr.data = u(gq.data, gq.headers, gq.status, gj.transformResponse)
                    }
                    return (aT(gq.status)) ? gr : f6.reject(gr)
                }
                function gn(gt, gq) {
                    var gr, gs = {};
                    bj(gt, function(gv, gu) {
                        if (bn(gv)) {
                            gr = gv(gq);
                            if (gr != null) {
                                gs[gu] = gr
                            }
                        } else {
                            gs[gu] = gv
                        }
                    });
                    return gs
                }
                function gk(gt) {
                    var gr = f2.headers, gv = fU({}, gt.headers), gu, gq, gs;
                    gr = fU({}, gr.common, gr[db(gt.method)]);
                    defaultHeadersIteration: for (gu in gr) {
                        gq = db(gu);
                        for (gs in gv) {
                            if (db(gs) === gq) {
                                continue defaultHeadersIteration
                            }
                        }
                        gv[gu] = gr[gu]
                    }
                    return gn(gv, d8(gt))
                }
            }
            f7.pendingRequests = [];
            f3("get", "delete", "head", "jsonp");
            f5("post", "put", "patch");
            f7.defaults = f2;
            return f7;
            function f3(gg) {
                bj(arguments, function(gh) {
                    f7[gh] = function(gj, gi) {
                        return f7(fU({}, gi || {}, {
                            method: gh,
                            url: gj
                        }))
                    }
                })
            }
            function f5(gg) {
                bj(arguments, function(gh) {
                    f7[gh] = function(gj, gk, gi) {
                        return f7(fU({}, gi || {}, {
                            method: gh,
                            url: gj,
                            data: gk
                        }))
                    }
                })
            }
            function f4(gk, gp) {
                var gr = f6.defer(), gs = gr.promise, gg, gn, gh = gk.headers, gi = f8(gk.url, gk.paramSerializer(gk.params));
                f7.pendingRequests.push(gk);
                gs.then(gl, gl);
                if ((gk.cache || f2.cache) && gk.cache !== false && (gk.method === "GET" || gk.method === "JSONP")) {
                    gg = s(gk.cache) ? gk.cache : s(f2.cache) ? f2.cache : ge
                }
                if (gg) {
                    gn = gg.get(gi);
                    if (eX(gn)) {
                        if (fH(gn)) {
                            gn.then(gj, gj)
                        } else {
                            if (U(gn)) {
                                go(gn[1], gn[0], d8(gn[2]), gn[3])
                            } else {
                                go(gn, 200, {}, "OK")
                            }
                        }
                    } else {
                        gg.put(gi, gs)
                    }
                }
                if (x(gn)) {
                    var gq = dD(gk.url) ? gf()[gk.xsrfCookieName || f2.xsrfCookieName] : fE;
                    if (gq) {
                        gh[(gk.xsrfHeaderName || f2.xsrfHeaderName)] = gq
                    }
                    ga(gk.method, gi, gp, gm, gh, gk.timeout, gk.withCredentials, gk.responseType)
                }
                return gs;
                function gm(gt, gu, gv, gx) {
                    if (gg) {
                        if (aT(gt)) {
                            gg.put(gi, [gt, gu, eQ(gv), gx])
                        } else {
                            gg.remove(gi)
                        }
                    }
                    function gw() {
                        go(gu, gt, gv, gx)
                    }
                    if (f1) {
                        gb.$applyAsync(gw)
                    } else {
                        gw();
                        if (!gb.$$phase) {
                            gb.$apply()
                        }
                    }
                }
                function go(gu, gt, gw, gv) {
                    gt = Math.max(gt, 0);
                    (aT(gt) ? gr.resolve : gr.reject)({
                        data: gu,
                        status: gt,
                        headers: bs(gw),
                        config: gk,
                        statusText: gv
                    })
                }
                function gj(gt) {
                    go(gt.data, gt.status, d8(gt.headers()), gt.statusText)
                }
                function gl() {
                    var gt = f7.pendingRequests.indexOf(gk);
                    if (gt !== -1) {
                        f7.pendingRequests.splice(gt, 1)
                    }
                }
            }
            function f8(gg, gh) {
                if (gh.length > 0) {
                    gg += ((gg.indexOf("?") == -1) ? "?" : "&") + gh
                }
                return gg
            }
        }
        ]
    }
    function fi() {
        return new dV.XMLHttpRequest()
    }
    function fq() {
        this.$get = ["$browser", "$window", "$document", function(f0, f2, f1) {
            return dB(f0, fi, f0.defer, f2.angular.callbacks, f1[0])
        }
        ]
    }
    function dB(f0, f3, f1, f4, f2) {
        return function(f7, f8, gj, gl, gb, gg, gc, gd) {
            f0.$$incOutstandingRequestCount();
            f8 = f8 || f0.url();
            if (db(f7) == "jsonp") {
                var f6 = "_" + (f4.counter++).toString(36);
                f4[f6] = function(gn) {
                    f4[f6].data = gn;
                    f4[f6].called = true
                }
                ;
                var ga = f5(f8.replace("JSON_CALLBACK", "angular.callbacks." + f6), f6, function(gn, go) {
                    f9(gl, gn, f4[f6].data, "", go);
                    f4[f6] = eD
                })
            } else {
                var gm = f3();
                gm.open(f7, f8, true);
                bj(gb, function(go, gn) {
                    if (eX(go)) {
                        gm.setRequestHeader(gn, go)
                    }
                });
                gm.onload = function gk() {
                    var gp = gm.statusText || "";
                    var go = ("response"in gm) ? gm.response : gm.responseText;
                    var gn = gm.status === 1223 ? 204 : gm.status;
                    if (gn === 0) {
                        gn = go ? 200 : r(f8).protocol == "file" ? 404 : 0
                    }
                    f9(gl, gn, go, gm.getAllResponseHeaders(), gp)
                }
                ;
                var gh = function() {
                    f9(gl, -1, null, null, "")
                };
                gm.onerror = gh;
                gm.onabort = gh;
                if (gc) {
                    gm.withCredentials = true
                }
                if (gd) {
                    try {
                        gm.responseType = gd
                    } catch (ge) {
                        if (gd !== "json") {
                            throw ge
                        }
                    }
                }
                gm.send(gj)
            }
            if (gg > 0) {
                var gi = f1(gf, gg)
            } else {
                if (fH(gg)) {
                    gg.then(gf)
                }
            }
            function gf() {
                ga && ga();
                gm && gm.abort()
            }
            function f9(gr, gn, go, gp, gq) {
                if (gi !== fE) {
                    f1.cancel(gi)
                }
                ga = gm = null;
                gr(gn, go, gp, gq);
                f0.$$completeOutstandingRequest(eD)
            }
        }
        ;
        function f5(f8, f9, f6) {
            var f7 = f2.createElement("script")
              , ga = null;
            f7.type = "text/javascript";
            f7.src = f8;
            f7.async = true;
            ga = function(gc) {
                e2(f7, "load", ga);
                e2(f7, "error", ga);
                f2.body.removeChild(f7);
                f7 = null;
                var gb = -1;
                var gd = "unknown";
                if (gc) {
                    if (gc.type === "load" && !f4[f9].called) {
                        gc = {
                            type: "error"
                        }
                    }
                    gd = gc.type;
                    gb = gc.type === "error" ? 404 : 200
                }
                if (f6) {
                    f6(gb, gd)
                }
            }
            ;
            cp(f7, "load", ga);
            cp(f7, "error", ga);
            f2.body.appendChild(f7);
            return ga
        }
    }
    var dU = cY.$interpolateMinErr = eT("$interpolate");
    dU.throwNoconcat = function(f0) {
        throw dU("noconcat", "Error while interpolating: {0}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See http://docs.angularjs.org/api/ng.$sce", f0)
    }
    ;
    dU.interr = function(f1, f0) {
        return dU("interr", "Can't interpolate: {0}\n{1}", f1, f0.toString())
    }
    ;
    function eq() {
        var f1 = "{{";
        var f0 = "}}";
        this.startSymbol = function(f2) {
            if (f2) {
                f1 = f2;
                return this
            } else {
                return f1
            }
        }
        ;
        this.endSymbol = function(f2) {
            if (f2) {
                f0 = f2;
                return this
            } else {
                return f0
            }
        }
        ;
        this.$get = ["$parse", "$exceptionHandler", "$sce", function(f4, ga, f9) {
            var f2 = f1.length
              , f8 = f0.length
              , gc = new RegExp(f1.replace(/./g, gb),"g")
              , f3 = new RegExp(f0.replace(/./g, gb),"g");
            function gb(gd) {
                return "\\\\\\" + gd
            }
            function f7(gd) {
                return gd.replace(gc, f1).replace(f3, f0)
            }
            function f6(gd) {
                if (gd == null) {
                    return ""
                }
                switch (typeof gd) {
                case "string":
                    break;
                case "number":
                    gd = "" + gd;
                    break;
                default:
                    gd = aA(gd)
                }
                return gd
            }
            function f5(gr, gg, gn, gs) {
                gs = !!gs;
                var gq, gk, gm = 0, gl = [], ge = [], gt = gr.length, gi, gp = [], gf = [];
                while (gm < gt) {
                    if (((gq = gr.indexOf(f1, gm)) != -1) && ((gk = gr.indexOf(f0, gq + f2)) != -1)) {
                        if (gm !== gq) {
                            gp.push(f7(gr.substring(gm, gq)))
                        }
                        gi = gr.substring(gq + f2, gk);
                        gl.push(gi);
                        ge.push(f4(gi, gd));
                        gm = gk + f8;
                        gf.push(gp.length);
                        gp.push("")
                    } else {
                        if (gm !== gt) {
                            gp.push(f7(gr.substring(gm)))
                        }
                        break
                    }
                }
                if (gn && gp.length > 1) {
                    dU.throwNoconcat(gr)
                }
                if (!gg || gl.length) {
                    var go = function(gu) {
                        for (var gv = 0, gw = gl.length; gv < gw; gv++) {
                            if (gs && x(gu[gv])) {
                                return
                            }
                            gp[gf[gv]] = gu[gv]
                        }
                        return gp.join("")
                    };
                    var gj = function(gu) {
                        return gn ? f9.getTrusted(gn, gu) : f9.valueOf(gu)
                    };
                    return fU(function gh(gw) {
                        var gv = 0;
                        var gx = gl.length;
                        var gu = new Array(gx);
                        try {
                            for (; gv < gx; gv++) {
                                gu[gv] = ge[gv](gw)
                            }
                            return go(gu)
                        } catch (gy) {
                            ga(dU.interr(gr, gy))
                        }
                    }, {
                        exp: gr,
                        expressions: gl,
                        $$watchDelegate: function(gv, gw) {
                            var gu;
                            return gv.$watchGroup(ge, function gx(gA, gy) {
                                var gz = go(gA);
                                if (bn(gw)) {
                                    gw.call(this, gz, gA !== gy ? gu : gz, gv)
                                }
                                gu = gz
                            })
                        }
                    })
                }
                function gd(gv) {
                    try {
                        gv = gj(gv);
                        return gs && !eX(gv) ? gv : f6(gv)
                    } catch (gu) {
                        ga(dU.interr(gr, gu))
                    }
                }
            }
            f5.startSymbol = function() {
                return f1
            }
            ;
            f5.endSymbol = function() {
                return f0
            }
            ;
            return f5
        }
        ]
    }
    function ai() {
        this.$get = ["$rootScope", "$window", "$q", "$$q", function(f0, f5, f3, f1) {
            var f4 = {};
            function f2(gf, f9, gd, gc) {
                var f8 = arguments.length > 4
                  , ge = f8 ? eV(arguments, 4) : []
                  , gb = f5.setInterval
                  , gg = f5.clearInterval
                  , f6 = 0
                  , f7 = (eX(gc) && !gc)
                  , gh = (f7 ? f1 : f3).defer()
                  , gi = gh.promise;
                gd = eX(gd) ? gd : 0;
                gi.then(null, null, (!f8) ? gf : function() {
                    gf.apply(null, ge)
                }
                );
                gi.$$intervalId = gb(function ga() {
                    gh.notify(f6++);
                    if (gd > 0 && f6 >= gd) {
                        gh.resolve(f6);
                        gg(gi.$$intervalId);
                        delete f4[gi.$$intervalId]
                    }
                    if (!f7) {
                        f0.$apply()
                    }
                }, f9);
                f4[gi.$$intervalId] = gh;
                return gi
            }
            f2.cancel = function(f6) {
                if (f6 && f6.$$intervalId in f4) {
                    f4[f6.$$intervalId].reject("canceled");
                    f5.clearInterval(f6.$$intervalId);
                    delete f4[f6.$$intervalId];
                    return true
                }
                return false
            }
            ;
            return f2
        }
        ]
    }
    function cb() {
        this.$get = function() {
            return {
                id: "en-us",
                NUMBER_FORMATS: {
                    DECIMAL_SEP: ".",
                    GROUP_SEP: ",",
                    PATTERNS: [{
                        minInt: 1,
                        minFrac: 0,
                        maxFrac: 3,
                        posPre: "",
                        posSuf: "",
                        negPre: "-",
                        negSuf: "",
                        gSize: 3,
                        lgSize: 3
                    }, {
                        minInt: 1,
                        minFrac: 2,
                        maxFrac: 2,
                        posPre: "\u00A4",
                        posSuf: "",
                        negPre: "(\u00A4",
                        negSuf: ")",
                        gSize: 3,
                        lgSize: 3
                    }],
                    CURRENCY_SYM: "$"
                },
                DATETIME_FORMATS: {
                    MONTH: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
                    SHORTMONTH: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
                    DAY: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
                    SHORTDAY: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(","),
                    AMPMS: ["AM", "PM"],
                    medium: "MMM d, y h:mm:ss a",
                    "short": "M/d/yy h:mm a",
                    fullDate: "EEEE, MMMM d, y",
                    longDate: "MMMM d, y",
                    mediumDate: "MMM d, y",
                    shortDate: "M/d/yy",
                    mediumTime: "h:mm:ss a",
                    shortTime: "h:mm a",
                    ERANAMES: ["Before Christ", "Anno Domini"],
                    ERAS: ["BC", "AD"]
                },
                pluralCat: function(f0) {
                    if (f0 === 1) {
                        return "one"
                    }
                    return "other"
                }
            }
        }
    }
    var fk = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/
      , ej = {
        http: 80,
        https: 443,
        ftp: 21
    };
    var dc = eT("$location");
    function cX(f2) {
        var f0 = f2.split("/")
          , f1 = f0.length;
        while (f1--) {
            f0[f1] = bv(f0[f1])
        }
        return f0.join("/")
    }
    function aY(f1, f2) {
        var f0 = r(f1);
        f2.$$protocol = f0.protocol;
        f2.$$host = f0.hostname;
        f2.$$port = de(f0.port) || ej[f0.protocol] || null
    }
    function bJ(f1, f3) {
        var f0 = (f1.charAt(0) !== "/");
        if (f0) {
            f1 = "/" + f1
        }
        var f2 = r(f1);
        f3.$$path = decodeURIComponent(f0 && f2.pathname.charAt(0) === "/" ? f2.pathname.substring(1) : f2.pathname);
        f3.$$search = ah(f2.search);
        f3.$$hash = decodeURIComponent(f2.hash);
        if (f3.$$path && f3.$$path.charAt(0) != "/") {
            f3.$$path = "/" + f3.$$path
        }
    }
    function cf(f0, f1) {
        if (f1.indexOf(f0) === 0) {
            return f1.substr(f0.length)
        }
    }
    function i(f1) {
        var f0 = f1.indexOf("#");
        return f0 == -1 ? f1 : f1.substr(0, f0)
    }
    function z(f0) {
        return f0.replace(/(#.+)|#$/, "$1")
    }
    function fN(f0) {
        return f0.substr(0, i(f0).lastIndexOf("/") + 1)
    }
    function cB(f0) {
        return f0.substring(0, f0.indexOf("/", f0.indexOf("//") + 2))
    }
    function cC(f0, f2) {
        this.$$html5 = true;
        f2 = f2 || "";
        var f1 = fN(f0);
        aY(f0, this);
        this.$$parse = function(f3) {
            var f4 = cf(f1, f3);
            if (!w(f4)) {
                throw dc("ipthprfx", 'Invalid url "{0}", missing path prefix "{1}".', f3, f1)
            }
            bJ(f4, this);
            if (!this.$$path) {
                this.$$path = "/"
            }
            this.$$compose()
        }
        ;
        this.$$compose = function() {
            var f3 = eu(this.$$search)
              , f4 = this.$$hash ? "#" + bv(this.$$hash) : "";
            this.$$url = cX(this.$$path) + (f3 ? "?" + f3 : "") + f4;
            this.$$absUrl = f1 + this.$$url.substr(1)
        }
        ;
        this.$$parseLinkUrl = function(f4, f3) {
            if (f3 && f3[0] === "#") {
                this.hash(f3.slice(1));
                return true
            }
            var f6, f5;
            var f7;
            if ((f6 = cf(f0, f4)) !== fE) {
                f5 = f6;
                if ((f6 = cf(f2, f6)) !== fE) {
                    f7 = f1 + (cf("/", f6) || f6)
                } else {
                    f7 = f0 + f5
                }
            } else {
                if ((f6 = cf(f1, f4)) !== fE) {
                    f7 = f1 + f6
                } else {
                    if (f1 == f4 + "/") {
                        f7 = f1
                    }
                }
            }
            if (f7) {
                this.$$parse(f7)
            }
            return !!f7
        }
    }
    function bZ(f1, f0) {
        var f2 = fN(f1);
        aY(f1, this);
        this.$$parse = function(f4) {
            var f5 = cf(f1, f4) || cf(f2, f4);
            var f3;
            if (!x(f5) && f5.charAt(0) === "#") {
                f3 = cf(f0, f5);
                if (x(f3)) {
                    f3 = f5
                }
            } else {
                if (this.$$html5) {
                    f3 = f5
                } else {
                    f3 = "";
                    if (x(f5)) {
                        f1 = f4;
                        this.replace()
                    }
                }
            }
            bJ(f3, this);
            this.$$path = f6(this.$$path, f3, f1);
            this.$$compose();
            function f6(ga, f7, f9) {
                var f8 = /^\/[A-Z]:(\/.*)/;
                var gb;
                if (f7.indexOf(f9) === 0) {
                    f7 = f7.replace(f9, "")
                }
                if (f8.exec(f7)) {
                    return ga
                }
                gb = f8.exec(ga);
                return gb ? gb[1] : ga
            }
        }
        ;
        this.$$compose = function() {
            var f3 = eu(this.$$search)
              , f4 = this.$$hash ? "#" + bv(this.$$hash) : "";
            this.$$url = cX(this.$$path) + (f3 ? "?" + f3 : "") + f4;
            this.$$absUrl = f1 + (this.$$url ? f0 + this.$$url : "")
        }
        ;
        this.$$parseLinkUrl = function(f4, f3) {
            if (i(f1) == i(f4)) {
                this.$$parse(f4);
                return true
            }
            return false
        }
    }
    function fc(f1, f0) {
        this.$$html5 = true;
        bZ.apply(this, arguments);
        var f2 = fN(f1);
        this.$$parseLinkUrl = function(f4, f3) {
            if (f3 && f3[0] === "#") {
                this.hash(f3.slice(1));
                return true
            }
            var f6;
            var f5;
            if (f1 == i(f4)) {
                f6 = f4
            } else {
                if ((f5 = cf(f2, f4))) {
                    f6 = f1 + f0 + f5
                } else {
                    if (f2 === f4 + "/") {
                        f6 = f2
                    }
                }
            }
            if (f6) {
                this.$$parse(f6)
            }
            return !!f6
        }
        ;
        this.$$compose = function() {
            var f3 = eu(this.$$search)
              , f4 = this.$$hash ? "#" + bv(this.$$hash) : "";
            this.$$url = cX(this.$$path) + (f3 ? "?" + f3 : "") + f4;
            this.$$absUrl = f1 + f0 + this.$$url
        }
    }
    var cz = {
        $$html5: false,
        $$replace: false,
        absUrl: M("$$absUrl"),
        url: function(f1) {
            if (x(f1)) {
                return this.$$url
            }
            var f0 = fk.exec(f1);
            if (f0[1] || f1 === "") {
                this.path(decodeURIComponent(f0[1]))
            }
            if (f0[2] || f0[1] || f1 === "") {
                this.search(f0[3] || "")
            }
            this.hash(f0[5] || "");
            return this
        },
        protocol: M("$$protocol"),
        host: M("$$host"),
        port: M("$$port"),
        path: fG("$$path", function(f0) {
            f0 = f0 !== null ? f0.toString() : "";
            return f0.charAt(0) == "/" ? f0 : "/" + f0
        }),
        search: function(f0, f1) {
            switch (arguments.length) {
            case 0:
                return this.$$search;
            case 1:
                if (w(f0) || p(f0)) {
                    f0 = f0.toString();
                    this.$$search = ah(f0)
                } else {
                    if (s(f0)) {
                        f0 = fV(f0, {});
                        bj(f0, function(f3, f2) {
                            if (f3 == null) {
                                delete f0[f2]
                            }
                        });
                        this.$$search = f0
                    } else {
                        throw dc("isrcharg", "The first argument of the `$location#search()` call must be a string or an object.")
                    }
                }
                break;
            default:
                if (x(f1) || f1 === null) {
                    delete this.$$search[f0]
                } else {
                    this.$$search[f0] = f1
                }
            }
            this.$$compose();
            return this
        },
        hash: fG("$$hash", function(f0) {
            return f0 !== null ? f0.toString() : ""
        }),
        replace: function() {
            this.$$replace = true;
            return this
        }
    };
    bj([fc, bZ, cC], function(f0) {
        f0.prototype = Object.create(cz);
        f0.prototype.state = function(f1) {
            if (!arguments.length) {
                return this.$$state
            }
            if (f0 !== cC || !this.$$html5) {
                throw dc("nostate", "History API state support is available only in HTML5 mode and only in browsers supporting HTML5 History API")
            }
            this.$$state = x(f1) ? null : f1;
            return this
        }
    });
    function M(f0) {
        return function() {
            return this[f0]
        }
    }
    function fG(f1, f0) {
        return function(f2) {
            if (x(f2)) {
                return this[f1]
            }
            this[f1] = f0(f2);
            this.$$compose();
            return this
        }
    }
    function m() {
        var f0 = ""
          , f1 = {
            enabled: false,
            requireBase: true,
            rewriteLinks: true
        };
        this.hashPrefix = function(f2) {
            if (eX(f2)) {
                f0 = f2;
                return this
            } else {
                return f0
            }
        }
        ;
        this.html5Mode = function(f2) {
            if (aH(f2)) {
                f1.enabled = f2;
                return this
            } else {
                if (s(f2)) {
                    if (aH(f2.enabled)) {
                        f1.enabled = f2.enabled
                    }
                    if (aH(f2.requireBase)) {
                        f1.requireBase = f2.requireBase
                    }
                    if (aH(f2.rewriteLinks)) {
                        f1.rewriteLinks = f2.rewriteLinks
                    }
                    return this
                } else {
                    return f1
                }
            }
        }
        ;
        this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function(ge, gg, f3, gf, f4) {
            var f8, f9, f2 = gg.baseHref(), gb = gg.url(), gd;
            if (f1.enabled) {
                if (!f2 && f1.requireBase) {
                    throw dc("nobase", "$location in HTML5 mode requires a <base> tag to be present!")
                }
                gd = cB(gb) + (f2 || "/");
                f9 = f3.history ? cC : fc
            } else {
                gd = i(gb);
                f9 = bZ
            }
            f8 = new f9(gd,"#" + f0);
            f8.$$parseLinkUrl(gb, gb);
            f8.$$state = gg.state();
            var f6 = /^\s*(javascript|mailto):/i;
            function ga(gi, gj, gl) {
                var gk = f8.url();
                var gh = f8.$$state;
                try {
                    gg.url(gi, gj, gl);
                    f8.$$state = gg.state()
                } catch (gm) {
                    f8.url(gk);
                    f8.$$state = gh;
                    throw gm
                }
            }
            gf.on("click", function(gi) {
                if (!f1.rewriteLinks || gi.ctrlKey || gi.metaKey || gi.shiftKey || gi.which == 2 || gi.button == 2) {
                    return
                }
                var gk = ac(gi.target);
                while (d4(gk[0]) !== "a") {
                    if (gk[0] === gf[0] || !(gk = gk.parent())[0]) {
                        return
                    }
                }
                var gj = gk.prop("href");
                var gh = gk.attr("href") || gk.attr("xlink:href");
                if (s(gj) && gj.toString() === "[object SVGAnimatedString]") {
                    gj = r(gj.animVal).href
                }
                if (f6.test(gj)) {
                    return
                }
                if (gj && !gk.attr("target") && !gi.isDefaultPrevented()) {
                    if (f8.$$parseLinkUrl(gj, gh)) {
                        gi.preventDefault();
                        if (f8.absUrl() != gg.url()) {
                            ge.$apply();
                            f4.angular["ff-684208-preventDefault"] = true
                        }
                    }
                }
            });
            if (z(f8.absUrl()) != z(gb)) {
                gg.url(f8.absUrl(), true)
            }
            var f7 = true;
            gg.onUrlChange(function(gi, gh) {
                ge.$evalAsync(function() {
                    var gl = f8.absUrl();
                    var gk = f8.$$state;
                    var gj;
                    f8.$$parse(gi);
                    f8.$$state = gh;
                    gj = ge.$broadcast("$locationChangeStart", gi, gl, gh, gk).defaultPrevented;
                    if (f8.absUrl() !== gi) {
                        return
                    }
                    if (gj) {
                        f8.$$parse(gl);
                        f8.$$state = gk;
                        ga(gl, false, gk)
                    } else {
                        f7 = false;
                        f5(gl, gk)
                    }
                });
                if (!ge.$$phase) {
                    ge.$digest()
                }
            });
            ge.$watch(function gc() {
                var gk = z(gg.url());
                var gl = z(f8.absUrl());
                var gi = gg.state();
                var gh = f8.$$replace;
                var gj = gk !== gl || (f8.$$html5 && f3.history && gi !== f8.$$state);
                if (f7 || gj) {
                    f7 = false;
                    ge.$evalAsync(function() {
                        var gn = f8.absUrl();
                        var gm = ge.$broadcast("$locationChangeStart", gn, gk, f8.$$state, gi).defaultPrevented;
                        if (f8.absUrl() !== gn) {
                            return
                        }
                        if (gm) {
                            f8.$$parse(gk);
                            f8.$$state = gi
                        } else {
                            if (gj) {
                                ga(gn, gh, gi === f8.$$state ? null : f8.$$state)
                            }
                            f5(gk, gi)
                        }
                    })
                }
                f8.$$replace = false
            });
            return f8;
            function f5(gi, gh) {
                ge.$broadcast("$locationChangeSuccess", f8.absUrl(), gi, f8.$$state, gh)
            }
        }
        ]
    }
    function dr() {
        var f1 = true
          , f0 = this;
        this.debugEnabled = function(f2) {
            if (eX(f2)) {
                f1 = f2;
                return this
            } else {
                return f1
            }
        }
        ;
        this.$get = ["$window", function(f4) {
            return {
                log: f3("log"),
                info: f3("info"),
                warn: f3("warn"),
                error: f3("error"),
                debug: (function() {
                    var f5 = f3("debug");
                    return function() {
                        if (f1) {
                            f5.apply(f0, arguments)
                        }
                    }
                }())
            };
            function f2(f5) {
                if (f5 instanceof Error) {
                    if (f5.stack) {
                        f5 = (f5.message && f5.stack.indexOf(f5.message) === -1) ? "Error: " + f5.message + "\n" + f5.stack : f5.stack
                    } else {
                        if (f5.sourceURL) {
                            f5 = f5.message + "\n" + f5.sourceURL + ":" + f5.line
                        }
                    }
                }
                return f5
            }
            function f3(f6) {
                var f5 = f4.console || {}
                  , f8 = f5[f6] || f5.log || eD
                  , f9 = false;
                try {
                    f9 = !!f8.apply
                } catch (f7) {}
                if (f9) {
                    return function() {
                        var ga = [];
                        bj(arguments, function(gb) {
                            ga.push(f2(gb))
                        });
                        return f8.apply(f5, ga)
                    }
                }
                return function(gb, ga) {
                    f8(gb, ga == null ? "" : ga)
                }
            }
        }
        ]
    }
    var af = eT("$parse");
    function cd(f0, f1) {
        if (f0 === "__defineGetter__" || f0 === "__defineSetter__" || f0 === "__lookupGetter__" || f0 === "__lookupSetter__" || f0 === "__proto__") {
            throw af("isecfld", "Attempting to access a disallowed field in Angular expressions! Expression: {0}", f1)
        }
        return f0
    }
    function h(f1, f0) {
        if (f1) {
            if (f1.constructor === f1) {
                throw af("isecfn", "Referencing Function in Angular expressions is disallowed! Expression: {0}", f0)
            } else {
                if (f1.window === f1) {
                    throw af("isecwindow", "Referencing the Window in Angular expressions is disallowed! Expression: {0}", f0)
                } else {
                    if (f1.children && (f1.nodeName || (f1.prop && f1.attr && f1.find))) {
                        throw af("isecdom", "Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}", f0)
                    } else {
                        if (f1 === Object) {
                            throw af("isecobj", "Referencing Object in Angular expressions is disallowed! Expression: {0}", f0)
                        }
                    }
                }
            }
        }
        return f1
    }
    var o = Function.prototype.call;
    var eK = Function.prototype.apply;
    var eE = Function.prototype.bind;
    function dw(f1, f0) {
        if (f1) {
            if (f1.constructor === f1) {
                throw af("isecfn", "Referencing Function in Angular expressions is disallowed! Expression: {0}", f0)
            } else {
                if (f1 === o || f1 === eK || f1 === eE) {
                    throw af("isecff", "Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}", f0)
                }
            }
        }
    }
    var a5 = fM();
    bj("+ - * / % === !== == != < > <= >= && || ! = |".split(" "), function(f0) {
        a5[f0] = true
    });
    var bH = {
        n: "\n",
        f: "\f",
        r: "\r",
        t: "\t",
        v: "\v",
        "'": "'",
        '"': '"'
    };
    var aK = function(f0) {
        this.options = f0
    };
    aK.prototype = {
        constructor: aK,
        lex: function(f7) {
            this.text = f7;
            this.index = 0;
            this.tokens = [];
            while (this.index < this.text.length) {
                var f6 = this.text.charAt(this.index);
                if (f6 === '"' || f6 === "'") {
                    this.readString(f6)
                } else {
                    if (this.isNumber(f6) || f6 === "." && this.isNumber(this.peek())) {
                        this.readNumber()
                    } else {
                        if (this.isIdent(f6)) {
                            this.readIdent()
                        } else {
                            if (this.is(f6, "(){}[].,;:?")) {
                                this.tokens.push({
                                    index: this.index,
                                    text: f6
                                });
                                this.index++
                            } else {
                                if (this.isWhitespace(f6)) {
                                    this.index++
                                } else {
                                    var f2 = f6 + this.peek();
                                    var f0 = f2 + this.peek(2);
                                    var f5 = a5[f6];
                                    var f4 = a5[f2];
                                    var f1 = a5[f0];
                                    if (f5 || f4 || f1) {
                                        var f3 = f1 ? f0 : (f4 ? f2 : f6);
                                        this.tokens.push({
                                            index: this.index,
                                            text: f3,
                                            operator: true
                                        });
                                        this.index += f3.length
                                    } else {
                                        this.throwError("Unexpected next character ", this.index, this.index + 1)
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return this.tokens
        },
        is: function(f0, f1) {
            return f1.indexOf(f0) !== -1
        },
        peek: function(f1) {
            var f0 = f1 || 1;
            return (this.index + f0 < this.text.length) ? this.text.charAt(this.index + f0) : false
        },
        isNumber: function(f0) {
            return ("0" <= f0 && f0 <= "9") && typeof f0 === "string"
        },
        isWhitespace: function(f0) {
            return (f0 === " " || f0 === "\r" || f0 === "\t" || f0 === "\n" || f0 === "\v" || f0 === "\u00A0")
        },
        isIdent: function(f0) {
            return ("a" <= f0 && f0 <= "z" || "A" <= f0 && f0 <= "Z" || "_" === f0 || f0 === "$")
        },
        isExpOperator: function(f0) {
            return (f0 === "-" || f0 === "+" || this.isNumber(f0))
        },
        throwError: function(f1, f3, f0) {
            f0 = f0 || this.index;
            var f2 = (eX(f3) ? "s " + f3 + "-" + this.index + " [" + this.text.substring(f3, f0) + "]" : " " + f0);
            throw af("lexerr", "Lexer Error: {0} at column{1} in expression [{2}].", f1, f2, this.text)
        },
        readNumber: function() {
            var f2 = "";
            var f3 = this.index;
            while (this.index < this.text.length) {
                var f1 = db(this.text.charAt(this.index));
                if (f1 == "." || this.isNumber(f1)) {
                    f2 += f1
                } else {
                    var f0 = this.peek();
                    if (f1 == "e" && this.isExpOperator(f0)) {
                        f2 += f1
                    } else {
                        if (this.isExpOperator(f1) && f0 && this.isNumber(f0) && f2.charAt(f2.length - 1) == "e") {
                            f2 += f1
                        } else {
                            if (this.isExpOperator(f1) && (!f0 || !this.isNumber(f0)) && f2.charAt(f2.length - 1) == "e") {
                                this.throwError("Invalid exponent")
                            } else {
                                break
                            }
                        }
                    }
                }
                this.index++
            }
            this.tokens.push({
                index: f3,
                text: f2,
                constant: true,
                value: Number(f2)
            })
        },
        readIdent: function() {
            var f1 = this.index;
            while (this.index < this.text.length) {
                var f0 = this.text.charAt(this.index);
                if (!(this.isIdent(f0) || this.isNumber(f0))) {
                    break
                }
                this.index++
            }
            this.tokens.push({
                index: f1,
                text: this.text.slice(f1, this.index),
                identifier: true
            })
        },
        readString: function(f0) {
            var f7 = this.index;
            this.index++;
            var f1 = "";
            var f2 = f0;
            var f5 = false;
            while (this.index < this.text.length) {
                var f3 = this.text.charAt(this.index);
                f2 += f3;
                if (f5) {
                    if (f3 === "u") {
                        var f4 = this.text.substring(this.index + 1, this.index + 5);
                        if (!f4.match(/[\da-f]{4}/i)) {
                            this.throwError("Invalid unicode escape [\\u" + f4 + "]")
                        }
                        this.index += 4;
                        f1 += String.fromCharCode(parseInt(f4, 16))
                    } else {
                        var f6 = bH[f3];
                        f1 = f1 + (f6 || f3)
                    }
                    f5 = false
                } else {
                    if (f3 === "\\") {
                        f5 = true
                    } else {
                        if (f3 === f0) {
                            this.index++;
                            this.tokens.push({
                                index: f7,
                                text: f2,
                                constant: true,
                                value: f1
                            });
                            return
                        } else {
                            f1 += f3
                        }
                    }
                }
                this.index++
            }
            this.throwError("Unterminated quote", f7)
        }
    };
    var E = function(f1, f0) {
        this.lexer = f1;
        this.options = f0
    };
    E.Program = "Program";
    E.ExpressionStatement = "ExpressionStatement";
    E.AssignmentExpression = "AssignmentExpression";
    E.ConditionalExpression = "ConditionalExpression";
    E.LogicalExpression = "LogicalExpression";
    E.BinaryExpression = "BinaryExpression";
    E.UnaryExpression = "UnaryExpression";
    E.CallExpression = "CallExpression";
    E.MemberExpression = "MemberExpression";
    E.Identifier = "Identifier";
    E.Literal = "Literal";
    E.ArrayExpression = "ArrayExpression";
    E.Property = "Property";
    E.ObjectExpression = "ObjectExpression";
    E.ThisExpression = "ThisExpression";
    E.NGValueParameter = "NGValueParameter";
    E.prototype = {
        ast: function(f1) {
            this.text = f1;
            this.tokens = this.lexer.lex(f1);
            var f0 = this.program();
            if (this.tokens.length !== 0) {
                this.throwError("is an unexpected token", this.tokens[0])
            }
            return f0
        },
        program: function() {
            var f0 = [];
            while (true) {
                if (this.tokens.length > 0 && !this.peek("}", ")", ";", "]")) {
                    f0.push(this.expressionStatement())
                }
                if (!this.expect(";")) {
                    return {
                        type: E.Program,
                        body: f0
                    }
                }
            }
        },
        expressionStatement: function() {
            return {
                type: E.ExpressionStatement,
                expression: this.filterChain()
            }
        },
        filterChain: function() {
            var f1 = this.expression();
            var f0;
            while ((f0 = this.expect("|"))) {
                f1 = this.filter(f1)
            }
            return f1
        },
        expression: function() {
            return this.assignment()
        },
        assignment: function() {
            var f0 = this.ternary();
            if (this.expect("=")) {
                f0 = {
                    type: E.AssignmentExpression,
                    left: f0,
                    right: this.assignment(),
                    operator: "="
                }
            }
            return f0
        },
        ternary: function() {
            var f2 = this.logicalOR();
            var f1;
            var f0;
            if (this.expect("?")) {
                f1 = this.expression();
                if (this.consume(":")) {
                    f0 = this.expression();
                    return {
                        type: E.ConditionalExpression,
                        test: f2,
                        alternate: f1,
                        consequent: f0
                    }
                }
            }
            return f2
        },
        logicalOR: function() {
            var f0 = this.logicalAND();
            while (this.expect("||")) {
                f0 = {
                    type: E.LogicalExpression,
                    operator: "||",
                    left: f0,
                    right: this.logicalAND()
                }
            }
            return f0
        },
        logicalAND: function() {
            var f0 = this.equality();
            while (this.expect("&&")) {
                f0 = {
                    type: E.LogicalExpression,
                    operator: "&&",
                    left: f0,
                    right: this.equality()
                }
            }
            return f0
        },
        equality: function() {
            var f1 = this.relational();
            var f0;
            while ((f0 = this.expect("==", "!=", "===", "!=="))) {
                f1 = {
                    type: E.BinaryExpression,
                    operator: f0.text,
                    left: f1,
                    right: this.relational()
                }
            }
            return f1
        },
        relational: function() {
            var f1 = this.additive();
            var f0;
            while ((f0 = this.expect("<", ">", "<=", ">="))) {
                f1 = {
                    type: E.BinaryExpression,
                    operator: f0.text,
                    left: f1,
                    right: this.additive()
                }
            }
            return f1
        },
        additive: function() {
            var f1 = this.multiplicative();
            var f0;
            while ((f0 = this.expect("+", "-"))) {
                f1 = {
                    type: E.BinaryExpression,
                    operator: f0.text,
                    left: f1,
                    right: this.multiplicative()
                }
            }
            return f1
        },
        multiplicative: function() {
            var f1 = this.unary();
            var f0;
            while ((f0 = this.expect("*", "/", "%"))) {
                f1 = {
                    type: E.BinaryExpression,
                    operator: f0.text,
                    left: f1,
                    right: this.unary()
                }
            }
            return f1
        },
        unary: function() {
            var f0;
            if ((f0 = this.expect("+", "-", "!"))) {
                return {
                    type: E.UnaryExpression,
                    operator: f0.text,
                    prefix: true,
                    argument: this.unary()
                }
            } else {
                return this.primary()
            }
        },
        primary: function() {
            var f1;
            if (this.expect("(")) {
                f1 = this.filterChain();
                this.consume(")")
            } else {
                if (this.expect("[")) {
                    f1 = this.arrayDeclaration()
                } else {
                    if (this.expect("{")) {
                        f1 = this.object()
                    } else {
                        if (this.constants.hasOwnProperty(this.peek().text)) {
                            f1 = fV(this.constants[this.consume().text])
                        } else {
                            if (this.peek().identifier) {
                                f1 = this.identifier()
                            } else {
                                if (this.peek().constant) {
                                    f1 = this.constant()
                                } else {
                                    this.throwError("not a primary expression", this.peek())
                                }
                            }
                        }
                    }
                }
            }
            var f0;
            while ((f0 = this.expect("(", "[", "."))) {
                if (f0.text === "(") {
                    f1 = {
                        type: E.CallExpression,
                        callee: f1,
                        arguments: this.parseArguments()
                    };
                    this.consume(")")
                } else {
                    if (f0.text === "[") {
                        f1 = {
                            type: E.MemberExpression,
                            object: f1,
                            property: this.expression(),
                            computed: true
                        };
                        this.consume("]")
                    } else {
                        if (f0.text === ".") {
                            f1 = {
                                type: E.MemberExpression,
                                object: f1,
                                property: this.identifier(),
                                computed: false
                            }
                        } else {
                            this.throwError("IMPOSSIBLE")
                        }
                    }
                }
            }
            return f1
        },
        filter: function(f1) {
            var f2 = [f1];
            var f0 = {
                type: E.CallExpression,
                callee: this.identifier(),
                arguments: f2,
                filter: true
            };
            while (this.expect(":")) {
                f2.push(this.expression())
            }
            return f0
        },
        parseArguments: function() {
            var f0 = [];
            if (this.peekToken().text !== ")") {
                do {
                    f0.push(this.expression())
                } while (this.expect(","))
            }
            return f0
        },
        identifier: function() {
            var f0 = this.consume();
            if (!f0.identifier) {
                this.throwError("is not a valid identifier", f0)
            }
            return {
                type: E.Identifier,
                name: f0.text
            }
        },
        constant: function() {
            return {
                type: E.Literal,
                value: this.consume().value
            }
        },
        arrayDeclaration: function() {
            var f0 = [];
            if (this.peekToken().text !== "]") {
                do {
                    if (this.peek("]")) {
                        break
                    }
                    f0.push(this.expression())
                } while (this.expect(","))
            }
            this.consume("]");
            return {
                type: E.ArrayExpression,
                elements: f0
            }
        },
        object: function() {
            var f0 = [], f1;
            if (this.peekToken().text !== "}") {
                do {
                    if (this.peek("}")) {
                        break
                    }
                    f1 = {
                        type: E.Property,
                        kind: "init"
                    };
                    if (this.peek().constant) {
                        f1.key = this.constant()
                    } else {
                        if (this.peek().identifier) {
                            f1.key = this.identifier()
                        } else {
                            this.throwError("invalid key", this.peek())
                        }
                    }
                    this.consume(":");
                    f1.value = this.expression();
                    f0.push(f1)
                } while (this.expect(","))
            }
            this.consume("}");
            return {
                type: E.ObjectExpression,
                properties: f0
            }
        },
        throwError: function(f1, f0) {
            throw af("syntax", "Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting at [{4}].", f0.text, f1, (f0.index + 1), this.text, this.text.substring(f0.index))
        },
        consume: function(f1) {
            if (this.tokens.length === 0) {
                throw af("ueoe", "Unexpected end of expression: {0}", this.text)
            }
            var f0 = this.expect(f1);
            if (!f0) {
                this.throwError("is unexpected, expecting [" + f1 + "]", this.peek())
            }
            return f0
        },
        peekToken: function() {
            if (this.tokens.length === 0) {
                throw af("ueoe", "Unexpected end of expression: {0}", this.text)
            }
            return this.tokens[0]
        },
        peek: function(f3, f2, f1, f0) {
            return this.peekAhead(0, f3, f2, f1, f0)
        },
        peekAhead: function(f2, f6, f5, f4, f3) {
            if (this.tokens.length > f2) {
                var f1 = this.tokens[f2];
                var f0 = f1.text;
                if (f0 === f6 || f0 === f5 || f0 === f4 || f0 === f3 || (!f6 && !f5 && !f4 && !f3)) {
                    return f1
                }
            }
            return false
        },
        expect: function(f4, f3, f2, f1) {
            var f0 = this.peek(f4, f3, f2, f1);
            if (f0) {
                this.tokens.shift();
                return f0
            }
            return false
        },
        constants: {
            "true": {
                type: E.Literal,
                value: true
            },
            "false": {
                type: E.Literal,
                value: false
            },
            "null": {
                type: E.Literal,
                value: null
            },
            "undefined": {
                type: E.Literal,
                value: fE
            },
            "this": {
                type: E.ThisExpression
            }
        }
    };
    function ei(f0, f1) {
        return typeof f0 !== "undefined" ? f0 : f1
    }
    function cD(f0, f1) {
        if (typeof f0 === "undefined") {
            return f1
        }
        if (typeof f1 === "undefined") {
            return f0
        }
        return f0 + f1
    }
    function eO(f2, f0) {
        var f1 = f2(f0);
        return !f1.$stateful
    }
    function bG(f0, f3) {
        var f2;
        var f1;
        switch (f0.type) {
        case E.Program:
            f2 = true;
            bj(f0.body, function(f4) {
                bG(f4.expression, f3);
                f2 = f2 && f4.expression.constant
            });
            f0.constant = f2;
            break;
        case E.Literal:
            f0.constant = true;
            f0.toWatch = [];
            break;
        case E.UnaryExpression:
            bG(f0.argument, f3);
            f0.constant = f0.argument.constant;
            f0.toWatch = f0.argument.toWatch;
            break;
        case E.BinaryExpression:
            bG(f0.left, f3);
            bG(f0.right, f3);
            f0.constant = f0.left.constant && f0.right.constant;
            f0.toWatch = f0.left.toWatch.concat(f0.right.toWatch);
            break;
        case E.LogicalExpression:
            bG(f0.left, f3);
            bG(f0.right, f3);
            f0.constant = f0.left.constant && f0.right.constant;
            f0.toWatch = f0.constant ? [] : [f0];
            break;
        case E.ConditionalExpression:
            bG(f0.test, f3);
            bG(f0.alternate, f3);
            bG(f0.consequent, f3);
            f0.constant = f0.test.constant && f0.alternate.constant && f0.consequent.constant;
            f0.toWatch = f0.constant ? [] : [f0];
            break;
        case E.Identifier:
            f0.constant = false;
            f0.toWatch = [f0];
            break;
        case E.MemberExpression:
            bG(f0.object, f3);
            if (f0.computed) {
                bG(f0.property, f3)
            }
            f0.constant = f0.object.constant && (!f0.computed || f0.property.constant);
            f0.toWatch = [f0];
            break;
        case E.CallExpression:
            f2 = f0.filter ? eO(f3, f0.callee.name) : false;
            f1 = [];
            bj(f0.arguments, function(f4) {
                bG(f4, f3);
                f2 = f2 && f4.constant;
                if (!f4.constant) {
                    f1.push.apply(f1, f4.toWatch)
                }
            });
            f0.constant = f2;
            f0.toWatch = f0.filter && eO(f3, f0.callee.name) ? f1 : [f0];
            break;
        case E.AssignmentExpression:
            bG(f0.left, f3);
            bG(f0.right, f3);
            f0.constant = f0.left.constant && f0.right.constant;
            f0.toWatch = [f0];
            break;
        case E.ArrayExpression:
            f2 = true;
            f1 = [];
            bj(f0.elements, function(f4) {
                bG(f4, f3);
                f2 = f2 && f4.constant;
                if (!f4.constant) {
                    f1.push.apply(f1, f4.toWatch)
                }
            });
            f0.constant = f2;
            f0.toWatch = f1;
            break;
        case E.ObjectExpression:
            f2 = true;
            f1 = [];
            bj(f0.properties, function(f4) {
                bG(f4.value, f3);
                f2 = f2 && f4.value.constant;
                if (!f4.value.constant) {
                    f1.push.apply(f1, f4.value.toWatch)
                }
            });
            f0.constant = f2;
            f0.toWatch = f1;
            break;
        case E.ThisExpression:
            f0.constant = false;
            f0.toWatch = [];
            break
        }
    }
    function a7(f0) {
        if (f0.length != 1) {
            return
        }
        var f1 = f0[0].expression;
        var f2 = f1.toWatch;
        if (f2.length !== 1) {
            return f2
        }
        return f2[0] !== f1 ? f2 : fE
    }
    function eM(f0) {
        return f0.type === E.Identifier || f0.type === E.MemberExpression
    }
    function a1(f0) {
        if (f0.body.length === 1 && eM(f0.body[0].expression)) {
            return {
                type: E.AssignmentExpression,
                left: f0.body[0].expression,
                right: {
                    type: E.NGValueParameter
                },
                operator: "="
            }
        }
    }
    function cH(f0) {
        return f0.body.length === 0 || f0.body.length === 1 && (f0.body[0].expression.type === E.Literal || f0.body[0].expression.type === E.ArrayExpression || f0.body[0].expression.type === E.ObjectExpression)
    }
    function b(f0) {
        return f0.constant
    }
    function fd(f0, f1) {
        this.astBuilder = f0;
        this.$filter = f1
    }
    fd.prototype = {
        compile: function(f5, f3) {
            var f7 = this;
            var f0 = this.astBuilder.ast(f5);
            this.state = {
                nextId: 0,
                filters: {},
                expensiveChecks: f3,
                fn: {
                    vars: [],
                    body: [],
                    own: {}
                },
                assign: {
                    vars: [],
                    body: [],
                    own: {}
                },
                inputs: []
            };
            bG(f0, f7.$filter);
            var f2 = "";
            var f8;
            this.stage = "assign";
            if ((f8 = a1(f0))) {
                this.state.computing = "assign";
                var f9 = this.nextId();
                this.recurse(f8, f9);
                f2 = "fn.assign=" + this.generateFunction("assign", "s,v,l")
            }
            var f4 = a7(f0.body);
            f7.stage = "inputs";
            bj(f4, function(gd, ga) {
                var gb = "fn" + ga;
                f7.state[gb] = {
                    vars: [],
                    body: [],
                    own: {}
                };
                f7.state.computing = gb;
                var gc = f7.nextId();
                f7.recurse(gd, gc);
                f7.return_(gc);
                f7.state.inputs.push(gb);
                gd.watchId = ga
            });
            this.state.computing = "fn";
            this.stage = "main";
            this.recurse(f0);
            var f1 = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() + "var fn=" + this.generateFunction("fn", "s,l,a,i") + f2 + this.watchFns() + "return fn;";
            var f6 = (new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","ifDefined","plus","text",f1))(this.$filter, cd, h, dw, ei, cD, f5);
            this.state = this.stage = fE;
            f6.literal = cH(f0);
            f6.constant = b(f0);
            return f6
        },
        USE: "use",
        STRICT: "strict",
        watchFns: function() {
            var f0 = [];
            var f2 = this.state.inputs;
            var f1 = this;
            bj(f2, function(f3) {
                f0.push("var " + f3 + "=" + f1.generateFunction(f3, "s"))
            });
            if (f2.length) {
                f0.push("fn.inputs=[" + f2.join(",") + "];")
            }
            return f0.join("")
        },
        generateFunction: function(f0, f1) {
            return "function(" + f1 + "){" + this.varsPrefix(f0) + this.body(f0) + "};"
        },
        filterPrefix: function() {
            var f1 = [];
            var f0 = this;
            bj(this.state.filters, function(f3, f2) {
                f1.push(f3 + "=$filter(" + f0.escape(f2) + ")")
            });
            if (f1.length) {
                return "var " + f1.join(",") + ";"
            }
            return ""
        },
        varsPrefix: function(f0) {
            return this.state[f0].vars.length ? "var " + this.state[f0].vars.join(",") + ";" : ""
        },
        body: function(f0) {
            return this.state[f0].body.join("")
        },
        recurse: function(f0, f7, f1, f3, f4, f9) {
            var f2, f8, ga = this, f6, f5;
            f3 = f3 || eD;
            if (!f9 && eX(f0.watchId)) {
                f7 = f7 || this.nextId();
                this.if_("i", this.lazyAssign(f7, this.computedMember("i", f0.watchId)), this.lazyRecurse(f0, f7, f1, f3, f4, true));
                return
            }
            switch (f0.type) {
            case E.Program:
                bj(f0.body, function(gb, gc) {
                    ga.recurse(gb.expression, fE, fE, function(gd) {
                        f8 = gd
                    });
                    if (gc !== f0.body.length - 1) {
                        ga.current().body.push(f8, ";")
                    } else {
                        ga.return_(f8)
                    }
                });
                break;
            case E.Literal:
                f5 = this.escape(f0.value);
                this.assign(f7, f5);
                f3(f5);
                break;
            case E.UnaryExpression:
                this.recurse(f0.argument, fE, fE, function(gb) {
                    f8 = gb
                });
                f5 = f0.operator + "(" + this.ifDefined(f8, 0) + ")";
                this.assign(f7, f5);
                f3(f5);
                break;
            case E.BinaryExpression:
                this.recurse(f0.left, fE, fE, function(gb) {
                    f2 = gb
                });
                this.recurse(f0.right, fE, fE, function(gb) {
                    f8 = gb
                });
                if (f0.operator === "+") {
                    f5 = this.plus(f2, f8)
                } else {
                    if (f0.operator === "-") {
                        f5 = this.ifDefined(f2, 0) + f0.operator + this.ifDefined(f8, 0)
                    } else {
                        f5 = "(" + f2 + ")" + f0.operator + "(" + f8 + ")"
                    }
                }
                this.assign(f7, f5);
                f3(f5);
                break;
            case E.LogicalExpression:
                f7 = f7 || this.nextId();
                ga.recurse(f0.left, f7);
                ga.if_(f0.operator === "&&" ? f7 : ga.not(f7), ga.lazyRecurse(f0.right, f7));
                f3(f7);
                break;
            case E.ConditionalExpression:
                f7 = f7 || this.nextId();
                ga.recurse(f0.test, f7);
                ga.if_(f7, ga.lazyRecurse(f0.alternate, f7), ga.lazyRecurse(f0.consequent, f7));
                f3(f7);
                break;
            case E.Identifier:
                f7 = f7 || this.nextId();
                if (f1) {
                    f1.context = ga.stage === "inputs" ? "s" : this.assign(this.nextId(), this.getHasOwnProperty("l", f0.name) + "?l:s");
                    f1.computed = false;
                    f1.name = f0.name
                }
                cd(f0.name);
                ga.if_(ga.stage === "inputs" || ga.not(ga.getHasOwnProperty("l", f0.name)), function() {
                    ga.if_(ga.stage === "inputs" || "s", function() {
                        if (f4 && f4 !== 1) {
                            ga.if_(ga.not(ga.nonComputedMember("s", f0.name)), ga.lazyAssign(ga.nonComputedMember("s", f0.name), "{}"))
                        }
                        ga.assign(f7, ga.nonComputedMember("s", f0.name))
                    })
                }, f7 && ga.lazyAssign(f7, ga.nonComputedMember("l", f0.name)));
                if (ga.state.expensiveChecks || ba(f0.name)) {
                    ga.addEnsureSafeObject(f7)
                }
                f3(f7);
                break;
            case E.MemberExpression:
                f2 = f1 && (f1.context = this.nextId()) || this.nextId();
                f7 = f7 || this.nextId();
                ga.recurse(f0.object, f2, fE, function() {
                    ga.if_(ga.notNull(f2), function() {
                        if (f0.computed) {
                            f8 = ga.nextId();
                            ga.recurse(f0.property, f8);
                            ga.addEnsureSafeMemberName(f8);
                            if (f4 && f4 !== 1) {
                                ga.if_(ga.not(ga.computedMember(f2, f8)), ga.lazyAssign(ga.computedMember(f2, f8), "{}"))
                            }
                            f5 = ga.ensureSafeObject(ga.computedMember(f2, f8));
                            ga.assign(f7, f5);
                            if (f1) {
                                f1.computed = true;
                                f1.name = f8
                            }
                        } else {
                            cd(f0.property.name);
                            if (f4 && f4 !== 1) {
                                ga.if_(ga.not(ga.nonComputedMember(f2, f0.property.name)), ga.lazyAssign(ga.nonComputedMember(f2, f0.property.name), "{}"))
                            }
                            f5 = ga.nonComputedMember(f2, f0.property.name);
                            if (ga.state.expensiveChecks || ba(f0.property.name)) {
                                f5 = ga.ensureSafeObject(f5)
                            }
                            ga.assign(f7, f5);
                            if (f1) {
                                f1.computed = false;
                                f1.name = f0.property.name
                            }
                        }
                    }, function() {
                        ga.assign(f7, "undefined")
                    });
                    f3(f7)
                }, !!f4);
                break;
            case E.CallExpression:
                f7 = f7 || this.nextId();
                if (f0.filter) {
                    f8 = ga.filter(f0.callee.name);
                    f6 = [];
                    bj(f0.arguments, function(gc) {
                        var gb = ga.nextId();
                        ga.recurse(gc, gb);
                        f6.push(gb)
                    });
                    f5 = f8 + "(" + f6.join(",") + ")";
                    ga.assign(f7, f5);
                    f3(f7)
                } else {
                    f8 = ga.nextId();
                    f2 = {};
                    f6 = [];
                    ga.recurse(f0.callee, f8, f2, function() {
                        ga.if_(ga.notNull(f8), function() {
                            ga.addEnsureSafeFunction(f8);
                            bj(f0.arguments, function(gb) {
                                ga.recurse(gb, ga.nextId(), fE, function(gc) {
                                    f6.push(ga.ensureSafeObject(gc))
                                })
                            });
                            if (f2.name) {
                                if (!ga.state.expensiveChecks) {
                                    ga.addEnsureSafeObject(f2.context)
                                }
                                f5 = ga.member(f2.context, f2.name, f2.computed) + "(" + f6.join(",") + ")"
                            } else {
                                f5 = f8 + "(" + f6.join(",") + ")"
                            }
                            f5 = ga.ensureSafeObject(f5);
                            ga.assign(f7, f5)
                        }, function() {
                            ga.assign(f7, "undefined")
                        });
                        f3(f7)
                    })
                }
                break;
            case E.AssignmentExpression:
                f8 = this.nextId();
                f2 = {};
                if (!eM(f0.left)) {
                    throw af("lval", "Trying to assing a value to a non l-value")
                }
                this.recurse(f0.left, fE, f2, function() {
                    ga.if_(ga.notNull(f2.context), function() {
                        ga.recurse(f0.right, f8);
                        ga.addEnsureSafeObject(ga.member(f2.context, f2.name, f2.computed));
                        f5 = ga.member(f2.context, f2.name, f2.computed) + f0.operator + f8;
                        ga.assign(f7, f5);
                        f3(f7 || f5)
                    })
                }, 1);
                break;
            case E.ArrayExpression:
                f6 = [];
                bj(f0.elements, function(gb) {
                    ga.recurse(gb, ga.nextId(), fE, function(gc) {
                        f6.push(gc)
                    })
                });
                f5 = "[" + f6.join(",") + "]";
                this.assign(f7, f5);
                f3(f5);
                break;
            case E.ObjectExpression:
                f6 = [];
                bj(f0.properties, function(gb) {
                    ga.recurse(gb.value, ga.nextId(), fE, function(gc) {
                        f6.push(ga.escape(gb.key.type === E.Identifier ? gb.key.name : ("" + gb.key.value)) + ":" + gc)
                    })
                });
                f5 = "{" + f6.join(",") + "}";
                this.assign(f7, f5);
                f3(f5);
                break;
            case E.ThisExpression:
                this.assign(f7, "s");
                f3("s");
                break;
            case E.NGValueParameter:
                this.assign(f7, "v");
                f3("v");
                break
            }
        },
        getHasOwnProperty: function(f2, f3) {
            var f1 = f2 + "." + f3;
            var f0 = this.current().own;
            if (!f0.hasOwnProperty(f1)) {
                f0[f1] = this.nextId(false, f2 + "&&(" + this.escape(f3) + " in " + f2 + ")")
            }
            return f0[f1]
        },
        assign: function(f1, f0) {
            if (!f1) {
                return
            }
            this.current().body.push(f1, "=", f0, ";");
            return f1
        },
        filter: function(f0) {
            if (!this.state.filters.hasOwnProperty(f0)) {
                this.state.filters[f0] = this.nextId(true)
            }
            return this.state.filters[f0]
        },
        ifDefined: function(f1, f0) {
            return "ifDefined(" + f1 + "," + this.escape(f0) + ")"
        },
        plus: function(f1, f0) {
            return "plus(" + f1 + "," + f0 + ")"
        },
        return_: function(f0) {
            this.current().body.push("return ", f0, ";")
        },
        if_: function(f3, f2, f1) {
            if (f3 === true) {
                f2()
            } else {
                var f0 = this.current().body;
                f0.push("if(", f3, "){");
                f2();
                f0.push("}");
                if (f1) {
                    f0.push("else{");
                    f1();
                    f0.push("}")
                }
            }
        },
        not: function(f0) {
            return "!(" + f0 + ")"
        },
        notNull: function(f0) {
            return f0 + "!=null"
        },
        nonComputedMember: function(f1, f0) {
            return f1 + "." + f0
        },
        computedMember: function(f1, f0) {
            return f1 + "[" + f0 + "]"
        },
        member: function(f2, f0, f1) {
            if (f1) {
                return this.computedMember(f2, f0)
            }
            return this.nonComputedMember(f2, f0)
        },
        addEnsureSafeObject: function(f0) {
            this.current().body.push(this.ensureSafeObject(f0), ";")
        },
        addEnsureSafeMemberName: function(f0) {
            this.current().body.push(this.ensureSafeMemberName(f0), ";")
        },
        addEnsureSafeFunction: function(f0) {
            this.current().body.push(this.ensureSafeFunction(f0), ";")
        },
        ensureSafeObject: function(f0) {
            return "ensureSafeObject(" + f0 + ",text)"
        },
        ensureSafeMemberName: function(f0) {
            return "ensureSafeMemberName(" + f0 + ",text)"
        },
        ensureSafeFunction: function(f0) {
            return "ensureSafeFunction(" + f0 + ",text)"
        },
        lazyRecurse: function(f0, f5, f4, f3, f2, f6) {
            var f1 = this;
            return function() {
                f1.recurse(f0, f5, f4, f3, f2, f6)
            }
        },
        lazyAssign: function(f2, f1) {
            var f0 = this;
            return function() {
                f0.assign(f2, f1)
            }
        },
        stringEscapeRegex: /[^ a-zA-Z0-9]/g,
        stringEscapeFn: function(f0) {
            return "\\u" + ("0000" + f0.charCodeAt(0).toString(16)).slice(-4)
        },
        escape: function(f0) {
            if (w(f0)) {
                return "'" + f0.replace(this.stringEscapeRegex, this.stringEscapeFn) + "'"
            }
            if (p(f0)) {
                return f0.toString()
            }
            if (f0 === true) {
                return "true"
            }
            if (f0 === false) {
                return "false"
            }
            if (f0 === null) {
                return "null"
            }
            if (typeof f0 === "undefined") {
                return "undefined"
            }
            throw af("esc", "IMPOSSIBLE")
        },
        nextId: function(f0, f1) {
            var f2 = "v" + (this.state.nextId++);
            if (!f0) {
                this.current().vars.push(f2 + (f1 ? "=" + f1 : ""))
            }
            return f2
        },
        current: function() {
            return this.state[this.state.computing]
        }
    };
    function er(f0, f1) {
        this.astBuilder = f0;
        this.$filter = f1
    }
    er.prototype = {
        compile: function(f5, f1) {
            var f7 = this;
            var f0 = this.astBuilder.ast(f5);
            this.expression = f5;
            this.expensiveChecks = f1;
            bG(f0, f7.$filter);
            var f8;
            var f9;
            if ((f8 = a1(f0))) {
                f9 = this.recurse(f8)
            }
            var f2 = a7(f0.body);
            var f4;
            if (f2) {
                f4 = [];
                bj(f2, function(gc, gb) {
                    var ga = f7.recurse(gc);
                    gc.input = ga;
                    f4.push(ga);
                    gc.watchId = gb
                })
            }
            var f3 = [];
            bj(f0.body, function(ga) {
                f3.push(f7.recurse(ga.expression))
            });
            var f6 = f0.body.length === 0 ? function() {}
            : f0.body.length === 1 ? f3[0] : function(gb, gc) {
                var ga;
                bj(f3, function(gd) {
                    ga = gd(gb, gc)
                });
                return ga
            }
            ;
            if (f9) {
                f6.assign = function(ga, gb, gc) {
                    return f9(ga, gc, gb)
                }
            }
            if (f4) {
                f6.inputs = f4
            }
            f6.literal = cH(f0);
            f6.constant = b(f0);
            return f6
        },
        recurse: function(f0, f5, f4) {
            var f6, f3, f1 = this, f2, f7;
            if (f0.input) {
                return this.inputs(f0.input, f0.watchId)
            }
            switch (f0.type) {
            case E.Literal:
                return this.value(f0.value, f5);
            case E.UnaryExpression:
                f3 = this.recurse(f0.argument);
                return this["unary" + f0.operator](f3, f5);
            case E.BinaryExpression:
                f6 = this.recurse(f0.left);
                f3 = this.recurse(f0.right);
                return this["binary" + f0.operator](f6, f3, f5);
            case E.LogicalExpression:
                f6 = this.recurse(f0.left);
                f3 = this.recurse(f0.right);
                return this["binary" + f0.operator](f6, f3, f5);
            case E.ConditionalExpression:
                return this["ternary?:"](this.recurse(f0.test), this.recurse(f0.alternate), this.recurse(f0.consequent), f5);
            case E.Identifier:
                cd(f0.name, f1.expression);
                return f1.identifier(f0.name, f1.expensiveChecks || ba(f0.name), f5, f4, f1.expression);
            case E.MemberExpression:
                f6 = this.recurse(f0.object, false, !!f4);
                if (!f0.computed) {
                    cd(f0.property.name, f1.expression);
                    f3 = f0.property.name
                }
                if (f0.computed) {
                    f3 = this.recurse(f0.property)
                }
                return f0.computed ? this.computedMember(f6, f3, f5, f4, f1.expression) : this.nonComputedMember(f6, f3, f1.expensiveChecks, f5, f4, f1.expression);
            case E.CallExpression:
                f2 = [];
                bj(f0.arguments, function(f8) {
                    f2.push(f1.recurse(f8))
                });
                if (f0.filter) {
                    f3 = this.$filter(f0.callee.name)
                }
                if (!f0.filter) {
                    f3 = this.recurse(f0.callee, true)
                }
                return f0.filter ? function(gc, ge, ga, f8) {
                    var f9 = [];
                    for (var gb = 0; gb < f2.length; ++gb) {
                        f9.push(f2[gb](gc, ge, ga, f8))
                    }
                    var gd = f3.apply(fE, f9, f8);
                    return f5 ? {
                        context: fE,
                        name: fE,
                        value: gd
                    } : gd
                }
                : function(gc, ge, ga, f8) {
                    var gf = f3(gc, ge, ga, f8);
                    var gd;
                    if (gf.value != null) {
                        h(gf.context, f1.expression);
                        dw(gf.value, f1.expression);
                        var f9 = [];
                        for (var gb = 0; gb < f2.length; ++gb) {
                            f9.push(h(f2[gb](gc, ge, ga, f8), f1.expression))
                        }
                        gd = h(gf.value.apply(gf.context, f9), f1.expression)
                    }
                    return f5 ? {
                        value: gd
                    } : gd
                }
                ;
            case E.AssignmentExpression:
                f6 = this.recurse(f0.left, true, 1);
                f3 = this.recurse(f0.right);
                return function(gb, gc, ga, f9) {
                    var f8 = f6(gb, gc, ga, f9);
                    var gd = f3(gb, gc, ga, f9);
                    h(f8.value, f1.expression);
                    f8.context[f8.name] = gd;
                    return f5 ? {
                        value: gd
                    } : gd
                }
                ;
            case E.ArrayExpression:
                f2 = [];
                bj(f0.elements, function(f8) {
                    f2.push(f1.recurse(f8))
                });
                return function(gb, gd, f9, f8) {
                    var gc = [];
                    for (var ga = 0; ga < f2.length; ++ga) {
                        gc.push(f2[ga](gb, gd, f9, f8))
                    }
                    return f5 ? {
                        value: gc
                    } : gc
                }
                ;
            case E.ObjectExpression:
                f2 = [];
                bj(f0.properties, function(f8) {
                    f2.push({
                        key: f8.key.type === E.Identifier ? f8.key.name : ("" + f8.key.value),
                        value: f1.recurse(f8.value)
                    })
                });
                return function(gb, gd, f9, f8) {
                    var gc = {};
                    for (var ga = 0; ga < f2.length; ++ga) {
                        gc[f2[ga].key] = f2[ga].value(gb, gd, f9, f8)
                    }
                    return f5 ? {
                        value: gc
                    } : gc
                }
                ;
            case E.ThisExpression:
                return function(f8) {
                    return f5 ? {
                        value: f8
                    } : f8
                }
                ;
            case E.NGValueParameter:
                return function(ga, gb, f9, f8) {
                    return f5 ? {
                        value: f9
                    } : f9
                }
            }
        },
        "unary+": function(f1, f0) {
            return function(f5, f6, f4, f3) {
                var f2 = f1(f5, f6, f4, f3);
                if (eX(f2)) {
                    f2 = +f2
                } else {
                    f2 = 0
                }
                return f0 ? {
                    value: f2
                } : f2
            }
        },
        "unary-": function(f1, f0) {
            return function(f5, f6, f4, f3) {
                var f2 = f1(f5, f6, f4, f3);
                if (eX(f2)) {
                    f2 = -f2
                } else {
                    f2 = 0
                }
                return f0 ? {
                    value: f2
                } : f2
            }
        },
        "unary!": function(f1, f0) {
            return function(f5, f6, f4, f3) {
                var f2 = !f1(f5, f6, f4, f3);
                return f0 ? {
                    value: f2
                } : f2
            }
        },
        "binary+": function(f2, f1, f0) {
            return function(f7, f8, f6, f5) {
                var f4 = f2(f7, f8, f6, f5);
                var f9 = f1(f7, f8, f6, f5);
                var f3 = cD(f4, f9);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary-": function(f2, f1, f0) {
            return function(f7, f8, f6, f5) {
                var f4 = f2(f7, f8, f6, f5);
                var f9 = f1(f7, f8, f6, f5);
                var f3 = (eX(f4) ? f4 : 0) - (eX(f9) ? f9 : 0);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary*": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) * f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary/": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) / f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary%": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) % f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary===": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) === f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary!==": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) !== f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary==": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) == f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary!=": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) != f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary<": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) < f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary>": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) > f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary<=": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) <= f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary>=": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) >= f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary&&": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) && f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "binary||": function(f2, f1, f0) {
            return function(f6, f7, f5, f4) {
                var f3 = f2(f6, f7, f5, f4) || f1(f6, f7, f5, f4);
                return f0 ? {
                    value: f3
                } : f3
            }
        },
        "ternary?:": function(f3, f2, f1, f0) {
            return function(f7, f8, f6, f5) {
                var f4 = f3(f7, f8, f6, f5) ? f2(f7, f8, f6, f5) : f1(f7, f8, f6, f5);
                return f0 ? {
                    value: f4
                } : f4
            }
        },
        value: function(f1, f0) {
            return function() {
                return f0 ? {
                    context: fE,
                    name: fE,
                    value: f1
                } : f1
            }
        },
        identifier: function(f0, f3, f2, f1, f4) {
            return function(f7, ga, f6, f5) {
                var f9 = ga && (f0 in ga) ? ga : f7;
                if (f1 && f1 !== 1 && f9 && !(f9[f0])) {
                    f9[f0] = {}
                }
                var f8 = f9 ? f9[f0] : fE;
                if (f3) {
                    h(f8, f4)
                }
                if (f2) {
                    return {
                        context: f9,
                        name: f0,
                        value: f8
                    }
                } else {
                    return f8
                }
            }
        },
        computedMember: function(f3, f2, f1, f0, f4) {
            return function(f8, ga, f7, f6) {
                var f5 = f3(f8, ga, f7, f6);
                var gb;
                var f9;
                if (f5 != null) {
                    gb = f2(f8, ga, f7, f6);
                    cd(gb, f4);
                    if (f0 && f0 !== 1 && f5 && !(f5[gb])) {
                        f5[gb] = {}
                    }
                    f9 = f5[gb];
                    h(f9, f4)
                }
                if (f1) {
                    return {
                        context: f5,
                        name: gb,
                        value: f9
                    }
                } else {
                    return f9
                }
            }
        },
        nonComputedMember: function(f4, f3, f2, f1, f0, f5) {
            return function(f9, gb, f8, f7) {
                var f6 = f4(f9, gb, f8, f7);
                if (f0 && f0 !== 1 && f6 && !(f6[f3])) {
                    f6[f3] = {}
                }
                var ga = f6 != null ? f6[f3] : fE;
                if (f2 || ba(f3)) {
                    h(ga, f5)
                }
                if (f1) {
                    return {
                        context: f6,
                        name: f3,
                        value: ga
                    }
                } else {
                    return ga
                }
            }
        },
        inputs: function(f0, f1) {
            return function(f3, f4, f5, f2) {
                if (f2) {
                    return f2[f1]
                }
                return f0(f3, f4, f5)
            }
        }
    };
    var n = function(f1, f2, f0) {
        this.lexer = f1;
        this.$filter = f2;
        this.options = f0;
        this.ast = new E(this.lexer);
        this.astCompiler = f0.csp ? new er(this.ast,f2) : new fd(this.ast,f2)
    };
    n.prototype = {
        constructor: n,
        parse: function(f0) {
            return this.astCompiler.compile(f0, this.options.expensiveChecks)
        }
    };
    function e0(f6, f5, f7, f4) {
        h(f6, f4);
        var f3 = f5.split("."), f2;
        for (var f1 = 0; f3.length > 1; f1++) {
            f2 = cd(f3.shift(), f4);
            var f0 = h(f6[f2], f4);
            if (!f0) {
                f0 = {};
                f6[f2] = f0
            }
            f6 = f0
        }
        f2 = cd(f3.shift(), f4);
        h(f6[f2], f4);
        f6[f2] = f7;
        return f7
    }
    var S = fM();
    var eY = fM();
    function ba(f0) {
        return f0 == "constructor"
    }
    var aF = Object.prototype.valueOf;
    function fJ(f0) {
        return bn(f0.valueOf) ? f0.valueOf() : aF.call(f0)
    }
    function dh() {
        var f1 = fM();
        var f0 = fM();
        this.$get = ["$filter", "$sniffer", function(f7, f2) {
            var f8 = {
                csp: f2.csp,
                expensiveChecks: false
            }
              , f6 = {
                csp: f2.csp,
                expensiveChecks: true
            };
            return function f3(gi, gh, gj) {
                var gf, gl, gk;
                switch (typeof gi) {
                case "string":
                    gi = gi.trim();
                    gk = gi;
                    var gd = (gj ? f0 : f1);
                    gf = gd[gk];
                    if (!gf) {
                        if (gi.charAt(0) === ":" && gi.charAt(1) === ":") {
                            gl = true;
                            gi = gi.substring(2)
                        }
                        var gm = gj ? f6 : f8;
                        var gg = new aK(gm);
                        var ge = new n(gg,f7,gm);
                        gf = ge.parse(gi);
                        if (gf.constant) {
                            gf.$$watchDelegate = ga
                        } else {
                            if (gl) {
                                gf.$$watchDelegate = gf.literal ? gc : f4
                            } else {
                                if (gf.inputs) {
                                    gf.$$watchDelegate = f5
                                }
                            }
                        }
                        gd[gk] = gf
                    }
                    return f9(gf, gh);
                case "function":
                    return f9(gi, gh);
                default:
                    return eD
                }
            }
            ;
            function gb(ge, gd) {
                if (ge == null || gd == null) {
                    return ge === gd
                }
                if (typeof ge === "object") {
                    ge = fJ(ge);
                    if (typeof ge === "object") {
                        return false
                    }
                }
                return ge === gd || (ge !== ge && gd !== gd)
            }
            function f5(gp, gf, gq, gd, gj) {
                var gi = gd.inputs;
                var gk;
                if (gi.length === 1) {
                    var go = gb;
                    gi = gi[0];
                    return gp.$watch(function ge(gr) {
                        var gs = gi(gr);
                        if (!gb(gs, go)) {
                            gk = gd(gr, fE, fE, [gs]);
                            go = gs && fJ(gs)
                        }
                        return gk
                    }, gf, gq, gj)
                }
                var gm = [];
                var gl = [];
                for (var gh = 0, gn = gi.length; gh < gn; gh++) {
                    gm[gh] = gb;
                    gl[gh] = null
                }
                return gp.$watch(function gg(gt) {
                    var gv = false;
                    for (var gr = 0, gs = gi.length; gr < gs; gr++) {
                        var gu = gi[gr](gt);
                        if (gv || (gv = !gb(gu, gm[gr]))) {
                            gl[gr] = gu;
                            gm[gr] = gu && fJ(gu)
                        }
                    }
                    if (gv) {
                        gk = gd(gt, fE, fE, gl)
                    }
                    return gk
                }, gf, gq, gj)
            }
            function f4(gg, gi, gd, ge) {
                var gk, gf;
                return gk = gg.$watch(function gj(gl) {
                    return ge(gl)
                }, function gh(gn, gl, gm) {
                    gf = gn;
                    if (bn(gi)) {
                        gi.apply(this, arguments)
                    }
                    if (eX(gn)) {
                        gm.$$postDigest(function() {
                            if (eX(gf)) {
                                gk()
                            }
                        })
                    }
                }, gd)
            }
            function gc(gj, gf, gl, gd) {
                var gg, gh;
                return gg = gj.$watch(function gk(gm) {
                    return gd(gm)
                }, function ge(go, gm, gn) {
                    gh = go;
                    if (bn(gf)) {
                        gf.call(this, go, gm, gn)
                    }
                    if (gi(go)) {
                        gn.$$postDigest(function() {
                            if (gi(gh)) {
                                gg()
                            }
                        })
                    }
                }, gl);
                function gi(gn) {
                    var gm = true;
                    bj(gn, function(go) {
                        if (!eX(go)) {
                            gm = false
                        }
                    });
                    return gm
                }
            }
            function ga(gf, gi, gd, ge) {
                var gj;
                return gj = gf.$watch(function gh(gk) {
                    return ge(gk)
                }, function gg(gm, gk, gl) {
                    if (bn(gi)) {
                        gi.apply(this, arguments)
                    }
                    gj()
                }, gd)
            }
            function f9(ge, gh) {
                if (!gh) {
                    return ge
                }
                var gg = ge.$$watchDelegate;
                var gj = gg !== gc && gg !== f4;
                var gf = gj ? function gd(gm, go, gl, gk) {
                    var gn = ge(gm, go, gl, gk);
                    return gh(gn, gm, go)
                }
                : function gi(gn, gp, gm, gl) {
                    var go = ge(gn, gp, gm, gl);
                    var gk = gh(go, gn, gp);
                    return eX(go) ? gk : go
                }
                ;
                if (ge.$$watchDelegate && ge.$$watchDelegate !== f5) {
                    gf.$$watchDelegate = ge.$$watchDelegate
                } else {
                    if (!gh.$stateful) {
                        gf.$$watchDelegate = f5;
                        gf.inputs = ge.inputs ? ge.inputs : [ge]
                    }
                }
                return gf
            }
        }
        ]
    }
    function c1() {
        this.$get = ["$rootScope", "$exceptionHandler", function(f0, f1) {
            return fP(function(f2) {
                f0.$evalAsync(f2)
            }, f1)
        }
        ]
    }
    function bx() {
        this.$get = ["$browser", "$exceptionHandler", function(f0, f1) {
            return fP(function(f2) {
                f0.defer(f2)
            }, f1)
        }
        ]
    }
    function fP(ga, gh) {
        var f8 = eT("$q", TypeError);
        function gf(gj, gm, gi) {
            var gl = false;
            function gk(gn) {
                return function(go) {
                    if (gl) {
                        return
                    }
                    gl = true;
                    gn.call(gj, go)
                }
            }
            return [gk(gm), gk(gi)]
        }
        var f3 = function() {
            return new f0()
        };
        function f4() {
            this.$$state = {
                status: 0
            }
        }
        f4.prototype = {
            then: function(gl, gj, gk) {
                var gi = new f0();
                this.$$state.pending = this.$$state.pending || [];
                this.$$state.pending.push([gi, gl, gj, gk]);
                if (this.$$state.status > 0) {
                    gc(this.$$state)
                }
                return gi.promise
            },
            "catch": function(gi) {
                return this.then(null, gi)
            },
            "finally": function(gj, gi) {
                return this.then(function(gk) {
                    return f1(gk, true, gj)
                }, function(gk) {
                    return f1(gk, false, gj)
                }, gi)
            }
        };
        function ge(gi, gj) {
            return function(gk) {
                gj.call(gi, gk)
            }
        }
        function f6(gm) {
            var gl, gi, go;
            go = gm.pending;
            gm.processScheduled = false;
            gm.pending = fE;
            for (var gj = 0, gk = go.length; gj < gk; ++gj) {
                gi = go[gj][0];
                gl = go[gj][gm.status];
                try {
                    if (bn(gl)) {
                        gi.resolve(gl(gm.value))
                    } else {
                        if (gm.status === 1) {
                            gi.resolve(gm.value)
                        } else {
                            gi.reject(gm.value)
                        }
                    }
                } catch (gn) {
                    gi.reject(gn);
                    gh(gn)
                }
            }
        }
        function gc(gi) {
            if (gi.processScheduled || !gi.pending) {
                return
            }
            gi.processScheduled = true;
            ga(function() {
                f6(gi)
            })
        }
        function f0() {
            this.promise = new f4();
            this.resolve = ge(this, this.resolve);
            this.reject = ge(this, this.reject);
            this.notify = ge(this, this.notify)
        }
        f0.prototype = {
            resolve: function(gi) {
                if (this.promise.$$state.status) {
                    return
                }
                if (gi === this.promise) {
                    this.$$reject(f8("qcycle", "Expected promise to be resolved with value other than itself '{0}'", gi))
                } else {
                    this.$$resolve(gi)
                }
            },
            $$resolve: function(gl) {
                var gk, gi;
                gi = gf(this, this.$$resolve, this.$$reject);
                try {
                    if ((s(gl) || bn(gl))) {
                        gk = gl && gl.then
                    }
                    if (bn(gk)) {
                        this.promise.$$state.status = -1;
                        gk.call(gl, gi[0], gi[1], this.notify)
                    } else {
                        this.promise.$$state.value = gl;
                        this.promise.$$state.status = 1;
                        gc(this.promise.$$state)
                    }
                } catch (gj) {
                    gi[1](gj);
                    gh(gj)
                }
            },
            reject: function(gi) {
                if (this.promise.$$state.status) {
                    return
                }
                this.$$reject(gi)
            },
            $$reject: function(gi) {
                this.promise.$$state.value = gi;
                this.promise.$$state.status = 2;
                gc(this.promise.$$state)
            },
            notify: function(gi) {
                var gj = this.promise.$$state.pending;
                if ((this.promise.$$state.status <= 0) && gj && gj.length) {
                    ga(function() {
                        var go, gk;
                        for (var gl = 0, gm = gj.length; gl < gm; gl++) {
                            gk = gj[gl][0];
                            go = gj[gl][3];
                            try {
                                gk.notify(bn(go) ? go(gi) : gi)
                            } catch (gn) {
                                gh(gn)
                            }
                        }
                    })
                }
            }
        };
        var f7 = function(gj) {
            var gi = new f0();
            gi.reject(gj);
            return gi.promise
        };
        var f5 = function f5(gk, gj) {
            var gi = new f0();
            if (gj) {
                gi.resolve(gk)
            } else {
                gi.reject(gk)
            }
            return gi.promise
        };
        var f1 = function f1(gj, gm, gl) {
            var gi = null;
            try {
                if (bn(gl)) {
                    gi = gl()
                }
            } catch (gk) {
                return f5(gk, false)
            }
            if (fH(gi)) {
                return gi.then(function() {
                    return f5(gj, gm)
                }, function(gn) {
                    return f5(gn, false)
                })
            } else {
                return f5(gj, gm)
            }
        };
        var gb = function(gk, gm, gj, gl) {
            var gi = new f0();
            gi.resolve(gk);
            return gi.promise.then(gm, gj, gl)
        };
        var gg = gb;
        function f2(gl) {
            var gj = new f0()
              , gi = 0
              , gk = U(gl) ? [] : {};
            bj(gl, function(gn, gm) {
                gi++;
                gb(gn).then(function(go) {
                    if (gk.hasOwnProperty(gm)) {
                        return
                    }
                    gk[gm] = go;
                    if (!(--gi)) {
                        gj.resolve(gk)
                    }
                }, function(go) {
                    if (gk.hasOwnProperty(gm)) {
                        return
                    }
                    gj.reject(go)
                })
            });
            if (gi === 0) {
                gj.resolve(gk)
            }
            return gj.promise
        }
        var gd = function f9(gl) {
            if (!bn(gl)) {
                throw f8("norslvr", "Expected resolverFn, got '{0}'", gl)
            }
            if (!(this instanceof f9)) {
                return new f9(gl)
            }
            var gj = new f0();
            function gk(gm) {
                gj.resolve(gm)
            }
            function gi(gm) {
                gj.reject(gm)
            }
            gl(gk, gi);
            return gj.promise
        };
        gd.defer = f3;
        gd.reject = f7;
        gd.when = gb;
        gd.resolve = gg;
        gd.all = f2;
        return gd
    }
    function bF() {
        this.$get = ["$window", "$timeout", function(f0, f1) {
            var f5 = f0.requestAnimationFrame || f0.webkitRequestAnimationFrame;
            var f4 = f0.cancelAnimationFrame || f0.webkitCancelAnimationFrame || f0.webkitCancelRequestAnimationFrame;
            var ga = !!f5;
            var f8 = ga ? function(gb) {
                var gc = f5(gb);
                return function() {
                    f4(gc)
                }
            }
            : function(gb) {
                var gc = f1(gb, 16.66, false);
                return function() {
                    f1.cancel(gc)
                }
            }
            ;
            f7.supported = ga;
            var f6;
            var f3 = 0;
            var f2 = [];
            return f7;
            function f9() {
                for (var gc = 0; gc < f2.length; gc++) {
                    var gb = f2[gc];
                    if (gb) {
                        f2[gc] = null;
                        gb()
                    }
                }
                f3 = f2.length = 0
            }
            function f7(gc) {
                var gb = f2.length;
                f3++;
                f2.push(gc);
                if (gb === 0) {
                    f6 = f8(f9)
                }
                return function gd() {
                    if (gb >= 0) {
                        f2[gb] = null;
                        gb = null;
                        if (--f3 === 0 && f6) {
                            f6();
                            f6 = null;
                            f2.length = 0
                        }
                    }
                }
            }
        }
        ]
    }
    function dG() {
        var f4 = 10;
        var f2 = eT("$rootScope");
        var f3 = null;
        var f0 = null;
        this.digestTtl = function(f5) {
            if (arguments.length) {
                f4 = f5
            }
            return f4
        }
        ;
        function f1(f5) {
            function f6() {
                this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$id = aP();
                this.$$ChildScope = null
            }
            f6.prototype = f5;
            return f6
        }
        this.$get = ["$injector", "$exceptionHandler", "$parse", "$browser", function(gj, gk, f7, gl) {
            function f8(gm) {
                gm.currentScope.$$destroyed = true
            }
            function gf() {
                this.$id = aP();
                this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                this.$root = this;
                this.$$destroyed = false;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$$isolateBindings = null
            }
            gf.prototype = {
                constructor: gf,
                $new: function(gm, gn) {
                    var go;
                    gn = gn || this;
                    if (gm) {
                        go = new gf();
                        go.$root = this.$root
                    } else {
                        if (!this.$$ChildScope) {
                            this.$$ChildScope = f1(this)
                        }
                        go = new this.$$ChildScope()
                    }
                    go.$parent = gn;
                    go.$$prevSibling = gn.$$childTail;
                    if (gn.$$childHead) {
                        gn.$$childTail.$$nextSibling = go;
                        gn.$$childTail = go
                    } else {
                        gn.$$childHead = gn.$$childTail = go
                    }
                    if (gm || gn != this) {
                        go.$on("$destroy", f8)
                    }
                    return go
                },
                $watch: function(gp, gm, gu, go) {
                    var gn = f7(gp);
                    if (gn.$$watchDelegate) {
                        return gn.$$watchDelegate(this, gm, gu, gn, gp)
                    }
                    var gt = this
                      , gr = gt.$$watchers
                      , gs = {
                        fn: gm,
                        last: gc,
                        get: gn,
                        exp: go || gp,
                        eq: !!gu
                    };
                    f3 = null;
                    if (!bn(gm)) {
                        gs.fn = eD
                    }
                    if (!gr) {
                        gr = gt.$$watchers = []
                    }
                    gr.unshift(gs);
                    f9(this, 1);
                    return function gq() {
                        if (eI(gr, gs) >= 0) {
                            f9(gt, -1)
                        }
                        f3 = null
                    }
                },
                $watchGroup: function(gm, gn) {
                    var gt = new Array(gm.length);
                    var gw = new Array(gm.length);
                    var gq = [];
                    var gv = this;
                    var go = false;
                    var gr = true;
                    if (!gm.length) {
                        var gp = true;
                        gv.$evalAsync(function() {
                            if (gp) {
                                gn(gw, gw, gv)
                            }
                        });
                        return function gs() {
                            gp = false
                        }
                    }
                    if (gm.length === 1) {
                        return this.$watch(gm[0], function gu(gz, gx, gy) {
                            gw[0] = gz;
                            gt[0] = gx;
                            gn(gw, (gz === gx) ? gw : gt, gy)
                        })
                    }
                    bj(gm, function(gA, gy) {
                        var gx = gv.$watch(gA, function gz(gC, gB) {
                            gw[gy] = gC;
                            gt[gy] = gB;
                            if (!go) {
                                go = true;
                                gv.$evalAsync(gu)
                            }
                        });
                        gq.push(gx)
                    });
                    function gu() {
                        go = false;
                        if (gr) {
                            gr = false;
                            gn(gw, gw, gv)
                        } else {
                            gn(gw, gt, gv)
                        }
                    }
                    return function gs() {
                        while (gq.length) {
                            gq.shift()()
                        }
                    }
                },
                $watchCollection: function(gr, gq) {
                    gs.$stateful = true;
                    var gA = this;
                    var go;
                    var gm;
                    var gz;
                    var gv = (gq.length > 1);
                    var gy = 0;
                    var gw = f7(gr, gs);
                    var gu = [];
                    var gx = {};
                    var gt = true;
                    var gp = 0;
                    function gs(gB) {
                        go = gB;
                        var gG, gF, gE, gD, gH;
                        if (x(go)) {
                            return
                        }
                        if (!s(go)) {
                            if (gm !== go) {
                                gm = go;
                                gy++
                            }
                        } else {
                            if (b2(go)) {
                                if (gm !== gu) {
                                    gm = gu;
                                    gp = gm.length = 0;
                                    gy++
                                }
                                gG = go.length;
                                if (gp !== gG) {
                                    gy++;
                                    gm.length = gp = gG
                                }
                                for (var gC = 0; gC < gG; gC++) {
                                    gH = gm[gC];
                                    gD = go[gC];
                                    gE = (gH !== gH) && (gD !== gD);
                                    if (!gE && (gH !== gD)) {
                                        gy++;
                                        gm[gC] = gD
                                    }
                                }
                            } else {
                                if (gm !== gx) {
                                    gm = gx = {};
                                    gp = 0;
                                    gy++
                                }
                                gG = 0;
                                for (gF in go) {
                                    if (go.hasOwnProperty(gF)) {
                                        gG++;
                                        gD = go[gF];
                                        gH = gm[gF];
                                        if (gF in gm) {
                                            gE = (gH !== gH) && (gD !== gD);
                                            if (!gE && (gH !== gD)) {
                                                gy++;
                                                gm[gF] = gD
                                            }
                                        } else {
                                            gp++;
                                            gm[gF] = gD;
                                            gy++
                                        }
                                    }
                                }
                                if (gp > gG) {
                                    gy++;
                                    for (gF in gm) {
                                        if (!go.hasOwnProperty(gF)) {
                                            gp--;
                                            delete gm[gF]
                                        }
                                    }
                                }
                            }
                        }
                        return gy
                    }
                    function gn() {
                        if (gt) {
                            gt = false;
                            gq(go, go, gA)
                        } else {
                            gq(go, gz, gA)
                        }
                        if (gv) {
                            if (!s(go)) {
                                gz = go
                            } else {
                                if (b2(go)) {
                                    gz = new Array(go.length);
                                    for (var gC = 0; gC < go.length; gC++) {
                                        gz[gC] = go[gC]
                                    }
                                } else {
                                    gz = {};
                                    for (var gB in go) {
                                        if (O.call(go, gB)) {
                                            gz[gB] = go[gB]
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return this.$watch(gw, gn)
                },
                $digest: function() {
                    var gw, gy, gA, gq, gn, gm, go = f4, gr, gv, gu = this, gt = [], gp, gz, gx;
                    gg("$digest");
                    gl.$$checkUrlChange();
                    if (this === gh && f0 !== null) {
                        gl.defer.cancel(f0);
                        gb()
                    }
                    f3 = null;
                    do {
                        gm = false;
                        gv = gu;
                        while (f6.length) {
                            try {
                                gx = f6.shift();
                                gx.scope.$eval(gx.expression, gx.locals)
                            } catch (gs) {
                                gk(gs)
                            }
                            f3 = null
                        }
                        traverseScopesLoop: do {
                            if ((gq = gv.$$watchers)) {
                                gn = gq.length;
                                while (gn--) {
                                    try {
                                        gw = gq[gn];
                                        if (gw) {
                                            if ((gy = gw.get(gv)) !== (gA = gw.last) && !(gw.eq ? dY(gy, gA) : (typeof gy === "number" && typeof gA === "number" && isNaN(gy) && isNaN(gA)))) {
                                                gm = true;
                                                f3 = gw;
                                                gw.last = gw.eq ? fV(gy, null) : gy;
                                                gw.fn(gy, ((gA === gc) ? gy : gA), gv);
                                                if (go < 5) {
                                                    gp = 4 - go;
                                                    if (!gt[gp]) {
                                                        gt[gp] = []
                                                    }
                                                    gt[gp].push({
                                                        msg: bn(gw.exp) ? "fn: " + (gw.exp.name || gw.exp.toString()) : gw.exp,
                                                        newVal: gy,
                                                        oldVal: gA
                                                    })
                                                }
                                            } else {
                                                if (gw === f3) {
                                                    gm = false;
                                                    break traverseScopesLoop
                                                }
                                            }
                                        }
                                    } catch (gs) {
                                        gk(gs)
                                    }
                                }
                            }
                            if (!(gr = ((gv.$$watchersCount && gv.$$childHead) || (gv !== gu && gv.$$nextSibling)))) {
                                while (gv !== gu && !(gr = gv.$$nextSibling)) {
                                    gv = gv.$parent
                                }
                            }
                        } while ((gv = gr));
                        if ((gm || f6.length) && !(go--)) {
                            ga();
                            throw f2("infdig", "{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iterations: {1}", f4, gt)
                        }
                    } while (gm || f6.length);
                    ga();
                    while (ge.length) {
                        try {
                            ge.shift()()
                        } catch (gs) {
                            gk(gs)
                        }
                    }
                },
                $destroy: function() {
                    if (this.$$destroyed) {
                        return
                    }
                    var gn = this.$parent;
                    this.$broadcast("$destroy");
                    this.$$destroyed = true;
                    if (this === gh) {
                        gl.$$applicationDestroyed()
                    }
                    f9(this, -this.$$watchersCount);
                    for (var gm in this.$$listenerCount) {
                        gd(this, this.$$listenerCount[gm], gm)
                    }
                    if (gn && gn.$$childHead == this) {
                        gn.$$childHead = this.$$nextSibling
                    }
                    if (gn && gn.$$childTail == this) {
                        gn.$$childTail = this.$$prevSibling
                    }
                    if (this.$$prevSibling) {
                        this.$$prevSibling.$$nextSibling = this.$$nextSibling
                    }
                    if (this.$$nextSibling) {
                        this.$$nextSibling.$$prevSibling = this.$$prevSibling
                    }
                    this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = eD;
                    this.$on = this.$watch = this.$watchGroup = function() {
                        return eD
                    }
                    ;
                    this.$$listeners = {};
                    this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = this.$$watchers = null
                },
                $eval: function(gn, gm) {
                    return f7(gn)(this, gm)
                },
                $evalAsync: function(gn, gm) {
                    if (!gh.$$phase && !f6.length) {
                        gl.defer(function() {
                            if (f6.length) {
                                gh.$digest()
                            }
                        })
                    }
                    f6.push({
                        scope: this,
                        expression: gn,
                        locals: gm
                    })
                },
                $$postDigest: function(gm) {
                    ge.push(gm)
                },
                $apply: function(gn) {
                    try {
                        gg("$apply");
                        return this.$eval(gn)
                    } catch (gm) {
                        gk(gm)
                    } finally {
                        ga();
                        try {
                            gh.$digest()
                        } catch (gm) {
                            gk(gm);
                            throw gm
                        }
                    }
                },
                $applyAsync: function(go) {
                    var gn = this;
                    go && gi.push(gm);
                    f5();
                    function gm() {
                        gn.$eval(go)
                    }
                },
                $on: function(gn, go) {
                    var gq = this.$$listeners[gn];
                    if (!gq) {
                        this.$$listeners[gn] = gq = []
                    }
                    gq.push(go);
                    var gp = this;
                    do {
                        if (!gp.$$listenerCount[gn]) {
                            gp.$$listenerCount[gn] = 0
                        }
                        gp.$$listenerCount[gn]++
                    } while ((gp = gp.$parent));
                    var gm = this;
                    return function() {
                        var gr = gq.indexOf(go);
                        if (gr !== -1) {
                            gq[gr] = null;
                            gd(gm, 1, gn)
                        }
                    }
                },
                $emit: function(gn, gu) {
                    var gs = [], gq, gw = this, gv = false, gm = {
                        name: gn,
                        targetScope: gw,
                        stopPropagation: function() {
                            gv = true
                        },
                        preventDefault: function() {
                            gm.defaultPrevented = true
                        },
                        defaultPrevented: false
                    }, gp = fB([gm], arguments, 1), gr, go;
                    do {
                        gq = gw.$$listeners[gn] || gs;
                        gm.currentScope = gw;
                        for (gr = 0,
                        go = gq.length; gr < go; gr++) {
                            if (!gq[gr]) {
                                gq.splice(gr, 1);
                                gr--;
                                go--;
                                continue
                            }
                            try {
                                gq[gr].apply(null, gp)
                            } catch (gt) {
                                gk(gt)
                            }
                        }
                        if (gv) {
                            gm.currentScope = null;
                            return gm
                        }
                        gw = gw.$parent
                    } while (gw);
                    gm.currentScope = null;
                    return gm
                },
                $broadcast: function(gn, gv) {
                    var gt = this
                      , gu = gt
                      , gr = gt
                      , gm = {
                        name: gn,
                        targetScope: gt,
                        preventDefault: function() {
                            gm.defaultPrevented = true
                        },
                        defaultPrevented: false
                    };
                    if (!gt.$$listenerCount[gn]) {
                        return gm
                    }
                    var gp = fB([gm], arguments, 1), gw, gq, go;
                    while ((gu = gr)) {
                        gm.currentScope = gu;
                        gw = gu.$$listeners[gn] || [];
                        for (gq = 0,
                        go = gw.length; gq < go; gq++) {
                            if (!gw[gq]) {
                                gw.splice(gq, 1);
                                gq--;
                                go--;
                                continue
                            }
                            try {
                                gw[gq].apply(null, gp)
                            } catch (gs) {
                                gk(gs)
                            }
                        }
                        if (!(gr = ((gu.$$listenerCount[gn] && gu.$$childHead) || (gu !== gt && gu.$$nextSibling)))) {
                            while (gu !== gt && !(gr = gu.$$nextSibling)) {
                                gu = gu.$parent
                            }
                        }
                    }
                    gm.currentScope = null;
                    return gm
                }
            };
            var gh = new gf();
            var f6 = gh.$$asyncQueue = [];
            var ge = gh.$$postDigestQueue = [];
            var gi = gh.$$applyAsyncQueue = [];
            return gh;
            function gg(gm) {
                if (gh.$$phase) {
                    throw f2("inprog", "{0} already in progress", gh.$$phase)
                }
                gh.$$phase = gm
            }
            function ga() {
                gh.$$phase = null
            }
            function f9(gn, gm) {
                do {
                    gn.$$watchersCount += gm
                } while ((gn = gn.$parent))
            }
            function gd(go, gn, gm) {
                do {
                    go.$$listenerCount[gm] -= gn;
                    if (go.$$listenerCount[gm] === 0) {
                        delete go.$$listenerCount[gm]
                    }
                } while ((go = go.$parent))
            }
            function gc() {}
            function gb() {
                while (gi.length) {
                    try {
                        gi.shift()()
                    } catch (gm) {
                        gk(gm)
                    }
                }
                f0 = null
            }
            function f5() {
                if (f0 === null) {
                    f0 = gl.defer(function() {
                        gh.$apply(gb)
                    })
                }
            }
        }
        ]
    }
    function dR() {
        var f1 = /^\s*(https?|ftp|mailto|tel|file):/
          , f0 = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function(f2) {
            if (eX(f2)) {
                f1 = f2;
                return this
            }
            return f1
        }
        ;
        this.imgSrcSanitizationWhitelist = function(f2) {
            if (eX(f2)) {
                f0 = f2;
                return this
            }
            return f0
        }
        ;
        this.$get = function() {
            return function f2(f5, f6) {
                var f4 = f6 ? f0 : f1;
                var f3;
                f3 = r(f5).href;
                if (f3 !== "" && !f3.match(f4)) {
                    return "unsafe:" + f3
                }
                return f5
            }
        }
    }
    var dJ = eT("$sce");
    var bM = {
        HTML: "html",
        CSS: "css",
        URL: "url",
        RESOURCE_URL: "resourceUrl",
        JS: "js"
    };
    function cS(f0) {
        if (f0 === "self") {
            return f0
        } else {
            if (w(f0)) {
                if (f0.indexOf("***") > -1) {
                    throw dJ("iwcard", "Illegal sequence *** in string matcher.  String: {0}", f0)
                }
                f0 = ex(f0).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*");
                return new RegExp("^" + f0 + "$")
            } else {
                if (az(f0)) {
                    return new RegExp("^" + f0.source + "$")
                } else {
                    throw dJ("imatcher", 'Matchers may only be "self", string patterns or RegExp objects')
                }
            }
        }
    }
    function aQ(f0) {
        var f1 = [];
        if (eX(f0)) {
            bj(f0, function(f2) {
                f1.push(cS(f2))
            })
        }
        return f1
    }
    function bw() {
        this.SCE_CONTEXTS = bM;
        var f1 = ["self"]
          , f0 = [];
        this.resourceUrlWhitelist = function(f2) {
            if (arguments.length) {
                f1 = aQ(f2)
            }
            return f1
        }
        ;
        this.resourceUrlBlacklist = function(f2) {
            if (arguments.length) {
                f0 = aQ(f2)
            }
            return f0
        }
        ;
        this.$get = ["$injector", function(f7) {
            var f9 = function f9(gc) {
                throw dJ("unsafe", "Attempting to use an unsafe value in a safe context.")
            };
            if (f7.has("$sanitize")) {
                f9 = f7.get("$sanitize")
            }
            function f2(gd, gc) {
                if (gd === "self") {
                    return dD(gc)
                } else {
                    return !!gd.exec(gc.href)
                }
            }
            function f4(gc) {
                var ge = r(gc.toString());
                var gd, gg, gf = false;
                for (gd = 0,
                gg = f1.length; gd < gg; gd++) {
                    if (f2(f1[gd], ge)) {
                        gf = true;
                        break
                    }
                }
                if (gf) {
                    for (gd = 0,
                    gg = f0.length; gd < gg; gd++) {
                        if (f2(f0[gd], ge)) {
                            gf = false;
                            break
                        }
                    }
                }
                return gf
            }
            function ga(gd) {
                var gc = function gg(gh) {
                    this.$$unwrapTrustedValue = function() {
                        return gh
                    }
                };
                if (gd) {
                    gc.prototype = new gd()
                }
                gc.prototype.valueOf = function gf() {
                    return this.$$unwrapTrustedValue()
                }
                ;
                gc.prototype.toString = function ge() {
                    return this.$$unwrapTrustedValue().toString()
                }
                ;
                return gc
            }
            var f8 = ga()
              , f6 = {};
            f6[bM.HTML] = ga(f8);
            f6[bM.CSS] = ga(f8);
            f6[bM.URL] = ga(f8);
            f6[bM.JS] = ga(f8);
            f6[bM.RESOURCE_URL] = ga(f6[bM.URL]);
            function f5(gc, gd) {
                var ge = (f6.hasOwnProperty(gc) ? f6[gc] : null);
                if (!ge) {
                    throw dJ("icontext", "Attempted to trust a value in invalid context. Context: {0}; Value: {1}", gc, gd)
                }
                if (gd === null || gd === fE || gd === "") {
                    return gd
                }
                if (typeof gd !== "string") {
                    throw dJ("itype", "Attempted to trust a non-string value in a content requiring a string: Context: {0}", gc)
                }
                return new ge(gd)
            }
            function gb(gc) {
                if (gc instanceof f8) {
                    return gc.$$unwrapTrustedValue()
                } else {
                    return gc
                }
            }
            function f3(gd, ge) {
                if (ge === null || ge === fE || ge === "") {
                    return ge
                }
                var gc = (f6.hasOwnProperty(gd) ? f6[gd] : null);
                if (gc && ge instanceof gc) {
                    return ge.$$unwrapTrustedValue()
                }
                if (gd === bM.RESOURCE_URL) {
                    if (f4(ge)) {
                        return ge
                    } else {
                        throw dJ("insecurl", "Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}", ge.toString())
                    }
                } else {
                    if (gd === bM.HTML) {
                        return f9(ge)
                    }
                }
                throw dJ("unsafe", "Attempting to use an unsafe value in a safe context.")
            }
            return {
                trustAs: f5,
                getTrusted: f3,
                valueOf: gb
            }
        }
        ]
    }
    function bd() {
        var f0 = true;
        this.enabled = function(f1) {
            if (arguments.length) {
                f0 = !!f1
            }
            return f0
        }
        ;
        this.$get = ["$parse", "$sceDelegate", function(f4, f7) {
            if (f0 && e8 < 8) {
                throw dJ("iequirks", "Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks mode.  You can fix this by adding the text <!doctype html> to the top of your HTML document.  See http://docs.angularjs.org/api/ng.$sce for more information.")
            }
            var f6 = d8(bM);
            f6.isEnabled = function() {
                return f0
            }
            ;
            f6.trustAs = f7.trustAs;
            f6.getTrusted = f7.getTrusted;
            f6.valueOf = f7.valueOf;
            if (!f0) {
                f6.trustAs = f6.getTrusted = function(f8, f9) {
                    return f9
                }
                ;
                f6.valueOf = aU
            }
            f6.parseAs = function f3(f9, ga) {
                var f8 = f4(ga);
                if (f8.literal && f8.constant) {
                    return f8
                } else {
                    return f4(ga, function(gb) {
                        return f6.getTrusted(f9, gb)
                    })
                }
            }
            ;
            var f5 = f6.parseAs
              , f2 = f6.getTrusted
              , f1 = f6.trustAs;
            bj(bM, function(f9, f8) {
                var ga = db(f8);
                f6[ar("parse_as_" + ga)] = function(gb) {
                    return f5(f9, gb)
                }
                ;
                f6[ar("get_trusted_" + ga)] = function(gb) {
                    return f2(f9, gb)
                }
                ;
                f6[ar("trust_as_" + ga)] = function(gb) {
                    return f1(f9, gb)
                }
            });
            return f6
        }
        ]
    }
    function dW() {
        this.$get = ["$window", "$document", function(f4, f7) {
            var f5 = {}, f6 = de((/android (\d+)/.exec(db((f4.navigator || {}).userAgent)) || [])[1]), f2 = /Boxee/i.test((f4.navigator || {}).userAgent), ga = f7[0] || {}, f0, f3 = /^(Moz|webkit|ms)(?=[A-Z])/, f9 = ga.body && ga.body.style, gb = false, gc = false, f8;
            if (f9) {
                for (var f1 in f9) {
                    if (f8 = f3.exec(f1)) {
                        f0 = f8[0];
                        f0 = f0.substr(0, 1).toUpperCase() + f0.substr(1);
                        break
                    }
                }
                if (!f0) {
                    f0 = ("WebkitOpacity"in f9) && "webkit"
                }
                gb = !!(("transition"in f9) || (f0 + "Transition"in f9));
                gc = !!(("animation"in f9) || (f0 + "Animation"in f9));
                if (f6 && (!gb || !gc)) {
                    gb = w(f9.webkitTransition);
                    gc = w(f9.webkitAnimation)
                }
            }
            return {
                history: !!(f4.history && f4.history.pushState && !(f6 < 4) && !f2),
                hasEvent: function(gd) {
                    if (gd === "input" && e8 <= 11) {
                        return false
                    }
                    if (x(f5[gd])) {
                        var ge = ga.createElement("div");
                        f5[gd] = "on" + gd in ge
                    }
                    return f5[gd]
                },
                csp: al(),
                vendorPrefix: f0,
                transitions: gb,
                animations: gc,
                android: f6
            }
        }
        ]
    }
    var C = eT("$compile");
    function d6() {
        this.$get = ["$templateCache", "$http", "$q", "$sce", function(f0, f4, f2, f1) {
            function f3(f7, f8) {
                f3.totalPendingRequests++;
                if (!w(f7) || !f0.get(f7)) {
                    f7 = f1.getTrustedResourceUrl(f7)
                }
                var f6 = f4.defaults && f4.defaults.transformResponse;
                if (U(f6)) {
                    f6 = f6.filter(function(ga) {
                        return ga !== B
                    })
                } else {
                    if (f6 === B) {
                        f6 = null
                    }
                }
                var f5 = {
                    cache: f0,
                    transformResponse: f6
                };
                return f4.get(f7, f5)["finally"](function() {
                    f3.totalPendingRequests--
                }).then(function(ga) {
                    f0.put(f7, ga.data);
                    return ga.data
                }, f9);
                function f9(ga) {
                    if (!f8) {
                        throw C("tpload", "Failed to load template: {0} (HTTP status: {1} {2})", f7, ga.status, ga.statusText)
                    }
                    return f2.reject(ga)
                }
            }
            f3.totalPendingRequests = 0;
            return f3
        }
        ]
    }
    function fI() {
        this.$get = ["$rootScope", "$browser", "$location", function(f1, f0, f3) {
            var f2 = {};
            f2.findBindings = function(f4, f7, f6) {
                var f8 = f4.getElementsByClassName("ng-binding");
                var f5 = [];
                bj(f8, function(ga) {
                    var f9 = cY.element(ga).data("$binding");
                    if (f9) {
                        bj(f9, function(gb) {
                            if (f6) {
                                var gc = new RegExp("(^|\\s)" + ex(f7) + "(\\s|\\||$)");
                                if (gc.test(gb)) {
                                    f5.push(ga)
                                }
                            } else {
                                if (gb.indexOf(f7) != -1) {
                                    f5.push(ga)
                                }
                            }
                        })
                    }
                });
                return f5
            }
            ;
            f2.findModels = function(f6, gb, f9) {
                var f8 = ["ng-", "data-ng-", "ng\\:"];
                for (var ga = 0; ga < f8.length; ++ga) {
                    var f5 = f9 ? "=" : "*=";
                    var f4 = "[" + f8[ga] + "model" + f5 + '"' + gb + '"]';
                    var f7 = f6.querySelectorAll(f4);
                    if (f7.length) {
                        return f7
                    }
                }
            }
            ;
            f2.getLocation = function() {
                return f3.url()
            }
            ;
            f2.setLocation = function(f4) {
                if (f4 !== f3.url()) {
                    f3.url(f4);
                    f1.$digest()
                }
            }
            ;
            f2.whenStable = function(f4) {
                f0.notifyWhenNoOutstandingRequests(f4)
            }
            ;
            return f2
        }
        ]
    }
    function fW() {
        this.$get = ["$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function(f1, f0, f3, f2, f4) {
            var f5 = {};
            function f6(gb, ga, f7) {
                if (!bn(gb)) {
                    f7 = ga;
                    ga = gb;
                    gb = eD
                }
                var f9 = eV(arguments, 3), ge = (eX(f7) && !f7), f8 = (ge ? f2 : f3).defer(), gd = f8.promise, gc;
                gc = f0.defer(function() {
                    try {
                        f8.resolve(gb.apply(null, f9))
                    } catch (gf) {
                        f8.reject(gf);
                        f4(gf)
                    } finally {
                        delete f5[gd.$$timeoutId]
                    }
                    if (!ge) {
                        f1.$apply()
                    }
                }, ga);
                gd.$$timeoutId = gc;
                f5[gc] = f8;
                return gd
            }
            f6.cancel = function(f7) {
                if (f7 && f7.$$timeoutId in f5) {
                    f5[f7.$$timeoutId].reject("canceled");
                    delete f5[f7.$$timeoutId];
                    return f0.defer.cancel(f7.$$timeoutId)
                }
                return false
            }
            ;
            return f6
        }
        ]
    }
    var bS = el.createElement("a");
    var fA = r(dV.location.href);
    function r(f1) {
        var f0 = f1;
        if (e8) {
            bS.setAttribute("href", f0);
            f0 = bS.href
        }
        bS.setAttribute("href", f0);
        return {
            href: bS.href,
            protocol: bS.protocol ? bS.protocol.replace(/:$/, "") : "",
            host: bS.host,
            search: bS.search ? bS.search.replace(/^\?/, "") : "",
            hash: bS.hash ? bS.hash.replace(/^#/, "") : "",
            hostname: bS.hostname,
            port: bS.port,
            pathname: (bS.pathname.charAt(0) === "/") ? bS.pathname : "/" + bS.pathname
        }
    }
    function dD(f1) {
        var f0 = (w(f1)) ? r(f1) : f1;
        return (f0.protocol === fA.protocol && f0.host === fA.host)
    }
    function N() {
        this.$get = V(dV)
    }
    function e6(f4) {
        var f2 = f4[0] || {};
        var f1 = {};
        var f3 = "";
        function f0(f6) {
            try {
                return decodeURIComponent(f6)
            } catch (f5) {
                return f6
            }
        }
        return function() {
            var f5, f9, f8, f7, f6;
            var ga = f2.cookie || "";
            if (ga !== f3) {
                f3 = ga;
                f5 = f3.split("; ");
                f1 = {};
                for (f8 = 0; f8 < f5.length; f8++) {
                    f9 = f5[f8];
                    f7 = f9.indexOf("=");
                    if (f7 > 0) {
                        f6 = f0(f9.substring(0, f7));
                        if (f1[f6] === fE) {
                            f1[f6] = f0(f9.substring(f7 + 1))
                        }
                    }
                }
            }
            return f1
        }
    }
    e6.$inject = ["$document"];
    function dH() {
        this.$get = e6
    }
    bo.$inject = ["$provide"];
    function bo(f1) {
        var f2 = "Filter";
        function f0(f4, f3) {
            if (s(f4)) {
                var f5 = {};
                bj(f4, function(f7, f6) {
                    f5[f6] = f0(f6, f7)
                });
                return f5
            } else {
                return f1.factory(f4 + f2, f3)
            }
        }
        this.register = f0;
        this.$get = ["$injector", function(f3) {
            return function(f4) {
                return f3.get(f4 + f2)
            }
        }
        ];
        f0("currency", cg);
        f0("date", aJ);
        f0("filter", ck);
        f0("json", e3);
        f0("limitTo", fT);
        f0("lowercase", bm);
        f0("number", eA);
        f0("orderBy", cG);
        f0("uppercase", ap)
    }
    function ck() {
        return function(f5, f3, f0) {
            if (!b2(f5)) {
                if (f5 == null) {
                    return f5
                } else {
                    throw eT("filter")("notarray", "Expected array but received: {0}", f5)
                }
            }
            var f1 = dT(f3);
            var f4;
            var f2;
            switch (f1) {
            case "function":
                f4 = f3;
                break;
            case "boolean":
            case "null":
            case "number":
            case "string":
                f2 = true;
            case "object":
                f4 = eg(f3, f0, f2);
                break;
            default:
                return f5
            }
            return Array.prototype.filter.call(f5, f4)
        }
    }
    function eg(f3, f0, f2) {
        var f1 = s(f3) && ("$"in f3);
        var f4;
        if (f0 === true) {
            f0 = dY
        } else {
            if (!bn(f0)) {
                f0 = function(f6, f5) {
                    if (x(f6)) {
                        return false
                    }
                    if ((f6 === null) || (f5 === null)) {
                        return f6 === f5
                    }
                    if (s(f5) || (s(f6) && !dx(f6))) {
                        return false
                    }
                    f6 = db("" + f6);
                    f5 = db("" + f5);
                    return f6.indexOf(f5) !== -1
                }
            }
        }
        f4 = function(f5) {
            if (f1 && !s(f5)) {
                return aX(f5, f3.$, f0, false)
            }
            return aX(f5, f3, f0, f2)
        }
        ;
        return f4
    }
    function aX(ga, f3, f0, f1, f4) {
        var f6 = dT(ga);
        var f2 = dT(f3);
        if ((f2 === "string") && (f3.charAt(0) === "!")) {
            return !aX(ga, f3.substring(1), f0, f1)
        } else {
            if (U(ga)) {
                return ga.some(function(gb) {
                    return aX(gb, f3, f0, f1)
                })
            }
        }
        switch (f6) {
        case "object":
            var f9;
            if (f1) {
                for (f9 in ga) {
                    if ((f9.charAt(0) !== "$") && aX(ga[f9], f3, f0, true)) {
                        return true
                    }
                }
                return f4 ? false : aX(ga, f3, f0, false)
            } else {
                if (f2 === "object") {
                    for (f9 in f3) {
                        var f8 = f3[f9];
                        if (bn(f8) || x(f8)) {
                            continue
                        }
                        var f5 = f9 === "$";
                        var f7 = f5 ? ga : ga[f9];
                        if (!aX(f7, f8, f0, f5, f5)) {
                            return false
                        }
                    }
                    return true
                } else {
                    return f0(ga, f3)
                }
            }
            break;
        case "function":
            return false;
        default:
            return f0(ga, f3)
        }
    }
    function dT(f0) {
        return (f0 === null) ? "null" : typeof f0
    }
    cg.$inject = ["$locale"];
    function cg(f1) {
        var f0 = f1.NUMBER_FORMATS;
        return function(f3, f2, f4) {
            if (x(f2)) {
                f2 = f0.CURRENCY_SYM
            }
            if (x(f4)) {
                f4 = f0.PATTERNS[1].maxFrac
            }
            return (f3 == null) ? f3 : d7(f3, f0.PATTERNS[1], f0.GROUP_SEP, f0.DECIMAL_SEP, f4).replace(/\u00A4/g, f2)
        }
    }
    eA.$inject = ["$locale"];
    function eA(f1) {
        var f0 = f1.NUMBER_FORMATS;
        return function(f2, f3) {
            return (f2 == null) ? f2 : d7(f2, f0.PATTERNS[0], f0.GROUP_SEP, f0.DECIMAL_SEP, f3)
        }
    }
    var cm = ".";
    function d7(f0, gg, f9, f6, f1) {
        if (s(f0)) {
            return ""
        }
        var ga = f0 < 0;
        f0 = Math.abs(f0);
        var f3 = f0 === Infinity;
        if (!f3 && !isFinite(f0)) {
            return ""
        }
        var gh = f0 + ""
          , gc = ""
          , ge = false
          , gd = [];
        if (f3) {
            gc = "\u221e"
        }
        if (!f3 && gh.indexOf("e") !== -1) {
            var f7 = gh.match(/([\d\.]+)e(-?)(\d+)/);
            if (f7 && f7[2] == "-" && f7[3] > f1 + 1) {
                f0 = 0
            } else {
                gc = gh;
                ge = true
            }
        }
        if (!f3 && !ge) {
            var f2 = (gh.split(cm)[1] || "").length;
            if (x(f1)) {
                f1 = Math.min(Math.max(gg.minFrac, f2), gg.maxFrac)
            }
            f0 = +(Math.round(+(f0.toString() + "e" + f1)).toString() + "e" + -f1);
            var f4 = ("" + f0).split(cm);
            var gi = f4[0];
            f4 = f4[1] || "";
            var gf, f5 = 0, gb = gg.lgSize, f8 = gg.gSize;
            if (gi.length >= (gb + f8)) {
                f5 = gi.length - gb;
                for (gf = 0; gf < f5; gf++) {
                    if ((f5 - gf) % f8 === 0 && gf !== 0) {
                        gc += f9
                    }
                    gc += gi.charAt(gf)
                }
            }
            for (gf = f5; gf < gi.length; gf++) {
                if ((gi.length - gf) % gb === 0 && gf !== 0) {
                    gc += f9
                }
                gc += gi.charAt(gf)
            }
            while (f4.length < f1) {
                f4 += "0"
            }
            if (f1 && f1 !== "0") {
                gc += f6 + f4.substr(0, f1)
            }
        } else {
            if (f1 > 0 && f0 < 1) {
                gc = f0.toFixed(f1);
                f0 = parseFloat(gc)
            }
        }
        if (f0 === 0) {
            ga = false
        }
        gd.push(ga ? gg.negPre : gg.posPre, gc, ga ? gg.negSuf : gg.posSuf);
        return gd.join("")
    }
    function bt(f1, f2, f0) {
        var f3 = "";
        if (f1 < 0) {
            f3 = "-";
            f1 = -f1
        }
        f1 = "" + f1;
        while (f1.length < f2) {
            f1 = "0" + f1
        }
        if (f0) {
            f1 = f1.substr(f1.length - f2)
        }
        return f3 + f1
    }
    function dC(f1, f2, f3, f0) {
        f3 = f3 || 0;
        return function(f4) {
            var f5 = f4["get" + f1]();
            if (f3 > 0 || f5 > -f3) {
                f5 += f3
            }
            if (f5 === 0 && f3 == -12) {
                f5 = 12
            }
            return bt(f5, f2, f0)
        }
    }
    function dn(f1, f0) {
        return function(f4, f2) {
            var f5 = f4["get" + f1]();
            var f3 = a4(f0 ? ("SHORT" + f1) : f1);
            return f2[f3][f5]
        }
    }
    function P(f2, f0, f4) {
        var f1 = -1 * f4;
        var f3 = (f1 >= 0) ? "+" : "";
        f3 += bt(Math[f1 > 0 ? "floor" : "ceil"](f1 / 60), 2) + bt(Math.abs(f1 % 60), 2);
        return f3
    }
    function fu(f1) {
        var f0 = (new Date(f1,0,1)).getDay();
        return new Date(f1,0,((f0 <= 4) ? 5 : 12) - f0)
    }
    function dI(f0) {
        return new Date(f0.getFullYear(),f0.getMonth(),f0.getDate() + (4 - f0.getDay()))
    }
    function ch(f0) {
        return function(f3) {
            var f4 = fu(f3.getFullYear())
              , f2 = dI(f3);
            var f5 = +f2 - +f4
              , f1 = 1 + Math.round(f5 / 604800000);
            return bt(f1, f0)
        }
    }
    function J(f1, f0) {
        return f1.getHours() < 12 ? f0.AMPMS[0] : f0.AMPMS[1]
    }
    function fn(f1, f0) {
        return f1.getFullYear() <= 0 ? f0.ERAS[0] : f0.ERAS[1]
    }
    function bV(f1, f0) {
        return f1.getFullYear() <= 0 ? f0.ERANAMES[0] : f0.ERANAMES[1]
    }
    var eF = {
        yyyy: dC("FullYear", 4),
        yy: dC("FullYear", 2, 0, true),
        y: dC("FullYear", 1),
        MMMM: dn("Month"),
        MMM: dn("Month", true),
        MM: dC("Month", 2, 1),
        M: dC("Month", 1, 1),
        dd: dC("Date", 2),
        d: dC("Date", 1),
        HH: dC("Hours", 2),
        H: dC("Hours", 1),
        hh: dC("Hours", 2, -12),
        h: dC("Hours", 1, -12),
        mm: dC("Minutes", 2),
        m: dC("Minutes", 1),
        ss: dC("Seconds", 2),
        s: dC("Seconds", 1),
        sss: dC("Milliseconds", 3),
        EEEE: dn("Day"),
        EEE: dn("Day", true),
        a: J,
        Z: P,
        ww: ch(2),
        w: ch(1),
        G: fn,
        GG: fn,
        GGG: fn,
        GGGG: bV
    };
    var em = /((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/
      , eP = /^\-?\d+$/;
    aJ.$inject = ["$locale"];
    function aJ(f1) {
        var f0 = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        function f2(f8) {
            var f7;
            if (f7 = f8.match(f0)) {
                var f5 = new Date(0)
                  , gb = 0
                  , f9 = 0
                  , ga = f7[8] ? f5.setUTCFullYear : f5.setFullYear
                  , gc = f7[8] ? f5.setUTCHours : f5.setHours;
                if (f7[9]) {
                    gb = de(f7[9] + f7[10]);
                    f9 = de(f7[9] + f7[11])
                }
                ga.call(f5, de(f7[1]), de(f7[2]) - 1, de(f7[3]));
                var f6 = de(f7[4] || 0) - gb;
                var f4 = de(f7[5] || 0) - f9;
                var gd = de(f7[6] || 0);
                var f3 = Math.round(parseFloat("0." + (f7[7] || 0)) * 1000);
                gc.call(f5, f6, f4, gd, f3);
                return f5
            }
            return f8
        }
        return function(f4, f8, f6) {
            var ga = "", f7 = [], f5, f3;
            f8 = f8 || "mediumDate";
            f8 = f1.DATETIME_FORMATS[f8] || f8;
            if (w(f4)) {
                f4 = eP.test(f4) ? de(f4) : f2(f4)
            }
            if (p(f4)) {
                f4 = new Date(f4)
            }
            if (!fe(f4) || !isFinite(f4.getTime())) {
                return f4
            }
            while (f8) {
                f3 = em.exec(f8);
                if (f3) {
                    f7 = fB(f7, f3, 1);
                    f8 = f7.pop()
                } else {
                    f7.push(f8);
                    f8 = null
                }
            }
            var f9 = f4.getTimezoneOffset();
            if (f6) {
                f9 = fF(f6, f4.getTimezoneOffset());
                f4 = a0(f4, f6, true)
            }
            bj(f7, function(gb) {
                f5 = eF[gb];
                ga += f5 ? f5(f4, f1.DATETIME_FORMATS, f9) : gb.replace(/(^'|'$)/g, "").replace(/''/g, "'")
            });
            return ga
        }
    }
    function e3() {
        return function(f0, f1) {
            if (x(f1)) {
                f1 = 2
            }
            return aA(f0, f1)
        }
    }
    var bm = V(db);
    var ap = V(a4);
    function fT() {
        return function(f1, f0, f2) {
            if (Math.abs(Number(f0)) === Infinity) {
                f0 = Number(f0)
            } else {
                f0 = de(f0)
            }
            if (isNaN(f0)) {
                return f1
            }
            if (p(f1)) {
                f1 = f1.toString()
            }
            if (!U(f1) && !w(f1)) {
                return f1
            }
            f2 = (!f2 || isNaN(f2)) ? 0 : de(f2);
            f2 = (f2 < 0 && f2 >= -f1.length) ? f1.length + f2 : f2;
            if (f0 >= 0) {
                return f1.slice(f2, f2 + f0)
            } else {
                if (f2 === 0) {
                    return f1.slice(f0, f1.length)
                } else {
                    return f1.slice(Math.max(0, f2 + f0), f2)
                }
            }
        }
    }
    cG.$inject = ["$parse"];
    function cG(f3) {
        return function(gc, f6, gb) {
            if (!(b2(gc))) {
                return gc
            }
            if (!U(f6)) {
                f6 = [f6]
            }
            if (f6.length === 0) {
                f6 = ["+"]
            }
            var f9 = f0(f6, gb);
            var ga = Array.prototype.map.call(gc, f7);
            ga.sort(f8);
            gc = ga.map(function(gd) {
                return gd.value
            });
            return gc;
            function f7(ge, gd) {
                return {
                    value: ge,
                    predicateValues: f9.map(function(gf) {
                        return f5(gf.get(ge), gd)
                    })
                }
            }
            function f8(gh, gg) {
                var gd = 0;
                for (var ge = 0, gf = f9.length; ge < gf; ++ge) {
                    gd = f4(gh.predicateValues[ge], gg.predicateValues[ge]) * f9[ge].descending;
                    if (gd) {
                        break
                    }
                }
                return gd
            }
        }
        ;
        function f0(f6, f7) {
            f7 = f7 ? -1 : 1;
            return f6.map(function(f8) {
                var gb = 1
                  , f9 = aU;
                if (bn(f8)) {
                    f9 = f8
                } else {
                    if (w(f8)) {
                        if ((f8.charAt(0) == "+" || f8.charAt(0) == "-")) {
                            gb = f8.charAt(0) == "-" ? -1 : 1;
                            f8 = f8.substring(1)
                        }
                        if (f8 !== "") {
                            f9 = f3(f8);
                            if (f9.constant) {
                                var ga = f9();
                                f9 = function(gc) {
                                    return gc[ga]
                                }
                            }
                        }
                    }
                }
                return {
                    get: f9,
                    descending: gb * f7
                }
            })
        }
        function f2(f6) {
            switch (typeof f6) {
            case "number":
            case "boolean":
            case "string":
                return true;
            default:
                return false
            }
        }
        function f1(f7, f6) {
            if (typeof f7.valueOf === "function") {
                f7 = f7.valueOf();
                if (f2(f7)) {
                    return f7
                }
            }
            if (dx(f7)) {
                f7 = f7.toString();
                if (f2(f7)) {
                    return f7
                }
            }
            return f6
        }
        function f5(f8, f6) {
            var f7 = typeof f8;
            if (f8 === null) {
                f7 = "string";
                f8 = "null"
            } else {
                if (f7 === "string") {
                    f8 = f8.toLowerCase()
                } else {
                    if (f7 === "object") {
                        f8 = f1(f8, f6)
                    }
                }
            }
            return {
                value: f8,
                type: f7
            }
        }
        function f4(f8, f7) {
            var f6 = 0;
            if (f8.type === f7.type) {
                if (f8.value !== f7.value) {
                    f6 = f8.value < f7.value ? -1 : 1
                }
            } else {
                f6 = f8.type < f7.type ? -1 : 1
            }
            return f6
        }
    }
    function bE(f0) {
        if (bn(f0)) {
            f0 = {
                link: f0
            }
        }
        f0.restrict = f0.restrict || "AC";
        return V(f0)
    }
    var bf = V({
        restrict: "E",
        compile: function(f1, f0) {
            if (!f0.href && !f0.xlinkHref) {
                return function(f4, f3) {
                    if (f3[0].nodeName.toLowerCase() !== "a") {
                        return
                    }
                    var f2 = eC.call(f3.prop("href")) === "[object SVGAnimatedString]" ? "xlink:href" : "href";
                    f3.on("click", function(f5) {
                        if (!f3.attr(f2)) {
                            f5.preventDefault()
                        }
                    })
                }
            }
        }
    });
    var ed = {};
    bj(cE, function(f3, f2) {
        if (f3 == "multiple") {
            return
        }
        function f0(f8, f7, f5) {
            f8.$watch(f5[f4], function f6(f9) {
                f5.$set(f2, !!f9)
            })
        }
        var f4 = bl("ng-" + f2);
        var f1 = f0;
        if (f3 === "checked") {
            f1 = function(f7, f6, f5) {
                if (f5.ngModel !== f5[f4]) {
                    f0(f7, f6, f5)
                }
            }
        }
        ed[f4] = function() {
            return {
                restrict: "A",
                priority: 100,
                link: f1
            }
        }
    });
    bj(fQ, function(f1, f0) {
        ed[f0] = function() {
            return {
                priority: 100,
                link: function(f5, f4, f2) {
                    if (f0 === "ngPattern" && f2.ngPattern.charAt(0) == "/") {
                        var f3 = f2.ngPattern.match(cq);
                        if (f3) {
                            f2.$set("ngPattern", new RegExp(f3[1],f3[2]));
                            return
                        }
                    }
                    f5.$watch(f2[f0], function f6(f7) {
                        f2.$set(f0, f7)
                    })
                }
            }
        }
    });
    bj(["src", "srcset", "href"], function(f0) {
        var f1 = bl("ng-" + f0);
        ed[f1] = function() {
            return {
                priority: 99,
                link: function(f5, f4, f2) {
                    var f6 = f0
                      , f3 = f0;
                    if (f0 === "href" && eC.call(f4.prop("href")) === "[object SVGAnimatedString]") {
                        f3 = "xlinkHref";
                        f2.$attr[f3] = "xlink:href";
                        f6 = null
                    }
                    f2.$observe(f1, function(f7) {
                        if (!f7) {
                            if (f0 === "href") {
                                f2.$set(f3, null)
                            }
                            return
                        }
                        f2.$set(f3, f7);
                        if (e8 && f6) {
                            f4.prop(f6, f2[f3])
                        }
                    })
                }
            }
        }
    });
    var fD = {
        $addControl: eD,
        $$renameControl: eU,
        $removeControl: eD,
        $setValidity: eD,
        $setDirty: eD,
        $setPristine: eD,
        $setSubmitted: eD
    }
      , c2 = "ng-submitted";
    function eU(f1, f0) {
        f1.$name = f0
    }
    cN.$inject = ["$element", "$attrs", "$scope", "$animate", "$interpolate"];
    function cN(f4, f3, f2, f7, f6) {
        var f5 = this
          , f1 = [];
        var f0 = f5.$$parentForm = f4.parent().controller("form") || fD;
        f5.$error = {};
        f5.$$success = {};
        f5.$pending = fE;
        f5.$name = f6(f3.name || f3.ngForm || "")(f2);
        f5.$dirty = false;
        f5.$pristine = true;
        f5.$valid = true;
        f5.$invalid = false;
        f5.$submitted = false;
        f0.$addControl(f5);
        f5.$rollbackViewValue = function() {
            bj(f1, function(f8) {
                f8.$rollbackViewValue()
            })
        }
        ;
        f5.$commitViewValue = function() {
            bj(f1, function(f8) {
                f8.$commitViewValue()
            })
        }
        ;
        f5.$addControl = function(f8) {
            fa(f8.$name, "input");
            f1.push(f8);
            if (f8.$name) {
                f5[f8.$name] = f8
            }
        }
        ;
        f5.$$renameControl = function(ga, f8) {
            var f9 = ga.$name;
            if (f5[f9] === ga) {
                delete f5[f9]
            }
            f5[f8] = ga;
            ga.$name = f8
        }
        ;
        f5.$removeControl = function(f8) {
            if (f8.$name && f5[f8.$name] === f8) {
                delete f5[f8.$name]
            }
            bj(f5.$pending, function(ga, f9) {
                f5.$setValidity(f9, null, f8)
            });
            bj(f5.$error, function(ga, f9) {
                f5.$setValidity(f9, null, f8)
            });
            bj(f5.$$success, function(ga, f9) {
                f5.$setValidity(f9, null, f8)
            });
            eI(f1, f8)
        }
        ;
        T({
            ctrl: this,
            $element: f4,
            set: function(ga, gc, f8) {
                var gb = ga[gc];
                if (!gb) {
                    ga[gc] = [f8]
                } else {
                    var f9 = gb.indexOf(f8);
                    if (f9 === -1) {
                        gb.push(f8)
                    }
                }
            },
            unset: function(f9, gb, f8) {
                var ga = f9[gb];
                if (!ga) {
                    return
                }
                eI(ga, f8);
                if (ga.length === 0) {
                    delete f9[gb]
                }
            },
            parentForm: f0,
            $animate: f7
        });
        f5.$setDirty = function() {
            f7.removeClass(f4, aq);
            f7.addClass(f4, fR);
            f5.$dirty = true;
            f5.$pristine = false;
            f0.$setDirty()
        }
        ;
        f5.$setPristine = function() {
            f7.setClass(f4, aq, fR + " " + c2);
            f5.$dirty = false;
            f5.$pristine = true;
            f5.$submitted = false;
            bj(f1, function(f8) {
                f8.$setPristine()
            })
        }
        ;
        f5.$setUntouched = function() {
            bj(f1, function(f8) {
                f8.$setUntouched()
            })
        }
        ;
        f5.$setSubmitted = function() {
            f7.addClass(f4, c2);
            f5.$submitted = true;
            f0.$setSubmitted()
        }
    }
    var ab = function(f0) {
        return ["$timeout", function(f2) {
            var f1 = {
                name: "form",
                restrict: f0 ? "EAC" : "E",
                controller: cN,
                compile: function f3(f7, f4) {
                    f7.addClass(aq).addClass(bP);
                    var f6 = f4.name ? "name" : (f0 && f4.ngForm ? "ngForm" : false);
                    return {
                        pre: function f5(gb, ga, f8, f9) {
                            if (!("action"in f8)) {
                                var gd = function(ge) {
                                    gb.$apply(function() {
                                        f9.$commitViewValue();
                                        f9.$setSubmitted()
                                    });
                                    ge.preventDefault()
                                };
                                cp(ga[0], "submit", gd);
                                ga.on("$destroy", function() {
                                    f2(function() {
                                        e2(ga[0], "submit", gd)
                                    }, 0, false)
                                })
                            }
                            var gc = f9.$$parentForm;
                            if (f6) {
                                e0(gb, f9.$name, f9, f9.$name);
                                f8.$observe(f6, function(ge) {
                                    if (f9.$name === ge) {
                                        return
                                    }
                                    e0(gb, f9.$name, fE, f9.$name);
                                    gc.$$renameControl(f9, ge);
                                    e0(gb, f9.$name, f9, f9.$name)
                                })
                            }
                            ga.on("$destroy", function() {
                                gc.$removeControl(f9);
                                if (f6) {
                                    e0(gb, f8[f6], fE, f9.$name)
                                }
                                fU(f9, fD)
                            })
                        }
                    }
                }
            };
            return f1
        }
        ]
    };
    var bX = ab();
    var bL = ab(true);
    var co = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/;
    var fg = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
    var fL = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
    var eZ = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;
    var fx = /^(\d{4})-(\d{2})-(\d{2})$/;
    var fw = /^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
    var e4 = /^(\d{4})-W(\d\d)$/;
    var eh = /^(\d{4})-(\d\d)$/;
    var du = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
    var Z = {
        text: bT,
        date: bW("date", fx, ek(fx, ["yyyy", "MM", "dd"]), "yyyy-MM-dd"),
        "datetime-local": bW("datetimelocal", fw, ek(fw, ["yyyy", "MM", "dd", "HH", "mm", "ss", "sss"]), "yyyy-MM-ddTHH:mm:ss.sss"),
        time: bW("time", du, ek(du, ["HH", "mm", "ss", "sss"]), "HH:mm:ss.sss"),
        week: bW("week", e4, bN, "yyyy-Www"),
        month: bW("month", eh, ek(eh, ["yyyy", "MM"]), "yyyy-MM"),
        number: cO,
        url: eN,
        email: fC,
        radio: cw,
        checkbox: f,
        hidden: eD,
        button: eD,
        submit: eD,
        reset: eD,
        file: eD
    };
    function bD(f0) {
        f0.$formatters.push(function(f1) {
            return f0.$isEmpty(f1) ? f1 : f1.toString()
        })
    }
    function bT(f3, f2, f1, f4, f5, f0) {
        ao(f3, f2, f1, f4, f5, f0);
        bD(f4)
    }
    function ao(f9, f3, f4, f0, f1, ga) {
        var f5 = db(f3[0].type);
        if (!f1.android) {
            var f8 = false;
            f3.on("compositionstart", function(gb) {
                f8 = true
            });
            f3.on("compositionend", function() {
                f8 = false;
                f2()
            })
        }
        var f2 = function(gc) {
            if (f6) {
                ga.defer.cancel(f6);
                f6 = null
            }
            if (f8) {
                return
            }
            var gd = f3.val()
              , gb = gc && gc.type;
            if (f5 !== "password" && (!f4.ngTrim || f4.ngTrim !== "false")) {
                gd = aL(gd)
            }
            if (f0.$viewValue !== gd || (gd === "" && f0.$$hasNativeValidators)) {
                f0.$setViewValue(gd, gb)
            }
        };
        if (f1.hasEvent("input")) {
            f3.on("input", f2)
        } else {
            var f6;
            var f7 = function(gd, gc, gb) {
                if (!f6) {
                    f6 = ga.defer(function() {
                        f6 = null;
                        if (!gc || gc.value !== gb) {
                            f2(gd)
                        }
                    })
                }
            };
            f3.on("keydown", function(gc) {
                var gb = gc.keyCode;
                if (gb === 91 || (15 < gb && gb < 19) || (37 <= gb && gb <= 40)) {
                    return
                }
                f7(gc, this, this.value)
            });
            if (f1.hasEvent("paste")) {
                f3.on("paste cut", f7)
            }
        }
        f3.on("change", f2);
        f0.$render = function() {
            f3.val(f0.$isEmpty(f0.$viewValue) ? "" : f0.$viewValue)
        }
    }
    function bN(ga, f5) {
        if (fe(ga)) {
            return ga
        }
        if (w(ga)) {
            e4.lastIndex = 0;
            var f4 = e4.exec(ga);
            if (f4) {
                var f6 = +f4[1]
                  , f1 = +f4[2]
                  , f7 = 0
                  , f3 = 0
                  , f8 = 0
                  , f2 = 0
                  , f0 = fu(f6)
                  , f9 = (f1 - 1) * 7;
                if (f5) {
                    f7 = f5.getHours();
                    f3 = f5.getMinutes();
                    f8 = f5.getSeconds();
                    f2 = f5.getMilliseconds()
                }
                return new Date(f6,0,f0.getDate() + f9,f7,f3,f8,f2)
            }
        }
        return NaN
    }
    function ek(f1, f0) {
        return function(f3, f2) {
            var f5, f4;
            if (fe(f3)) {
                return f3
            }
            if (w(f3)) {
                if (f3.charAt(0) == '"' && f3.charAt(f3.length - 1) == '"') {
                    f3 = f3.substring(1, f3.length - 1)
                }
                if (co.test(f3)) {
                    return new Date(f3)
                }
                f1.lastIndex = 0;
                f5 = f1.exec(f3);
                if (f5) {
                    f5.shift();
                    if (f2) {
                        f4 = {
                            yyyy: f2.getFullYear(),
                            MM: f2.getMonth() + 1,
                            dd: f2.getDate(),
                            HH: f2.getHours(),
                            mm: f2.getMinutes(),
                            ss: f2.getSeconds(),
                            sss: f2.getMilliseconds() / 1000
                        }
                    } else {
                        f4 = {
                            yyyy: 1970,
                            MM: 1,
                            dd: 1,
                            HH: 0,
                            mm: 0,
                            ss: 0,
                            sss: 0
                        }
                    }
                    bj(f5, function(f7, f6) {
                        if (f6 < f0.length) {
                            f4[f0[f6]] = +f7
                        }
                    });
                    return new Date(f4.yyyy,f4.MM - 1,f4.dd,f4.HH,f4.mm,f4.ss || 0,f4.sss * 1000 || 0)
                }
            }
            return NaN
        }
    }
    function bW(f0, f2, f4, f3) {
        return function f1(gg, f9, gb, f5, f6, gh, gc) {
            dd(gg, f9, gb, f5);
            ao(gg, f9, gb, f5, f6, gh);
            var ga = f5 && f5.$options && f5.$options.timezone;
            var gd;
            f5.$$parserName = f0;
            f5.$parsers.push(function(gj) {
                if (f5.$isEmpty(gj)) {
                    return null
                }
                if (f2.test(gj)) {
                    var gi = f4(gj, gd);
                    if (ga) {
                        gi = a0(gi, ga)
                    }
                    return gi
                }
                return fE
            });
            f5.$formatters.push(function(gi) {
                if (gi && !fe(gi)) {
                    throw eJ("datefmt", "Expected `{0}` to be a date", gi)
                }
                if (f8(gi)) {
                    gd = gi;
                    if (gd && ga) {
                        gd = a0(gd, ga, true)
                    }
                    return gc("date")(gi, f3, ga)
                } else {
                    gd = null;
                    return ""
                }
            });
            if (eX(gb.min) || gb.ngMin) {
                var ge;
                f5.$validators.min = function(gi) {
                    return !f8(gi) || x(ge) || f4(gi) >= ge
                }
                ;
                gb.$observe("min", function(gi) {
                    ge = f7(gi);
                    f5.$validate()
                })
            }
            if (eX(gb.max) || gb.ngMax) {
                var gf;
                f5.$validators.max = function(gi) {
                    return !f8(gi) || x(gf) || f4(gi) <= gf
                }
                ;
                gb.$observe("max", function(gi) {
                    gf = f7(gi);
                    f5.$validate()
                })
            }
            function f8(gi) {
                return gi && !(gi.getTime && gi.getTime() !== gi.getTime())
            }
            function f7(gi) {
                return eX(gi) ? (fe(gi) ? gi : f4(gi)) : fE
            }
        }
    }
    function dd(f3, f2, f0, f5) {
        var f4 = f2[0];
        var f1 = f5.$$hasNativeValidators = s(f4.validity);
        if (f1) {
            f5.$parsers.push(function(f7) {
                var f6 = f2.prop(fv) || {};
                return f6.badInput && !f6.typeMismatch ? fE : f7
            })
        }
    }
    function cO(f4, f3, f2, f5, f6, f1) {
        dd(f4, f3, f2, f5);
        ao(f4, f3, f2, f5, f6, f1);
        f5.$$parserName = "number";
        f5.$parsers.push(function(f8) {
            if (f5.$isEmpty(f8)) {
                return null
            }
            if (eZ.test(f8)) {
                return parseFloat(f8)
            }
            return fE
        });
        f5.$formatters.push(function(f8) {
            if (!f5.$isEmpty(f8)) {
                if (!p(f8)) {
                    throw eJ("numfmt", "Expected `{0}` to be a number", f8)
                }
                f8 = f8.toString()
            }
            return f8
        });
        if (eX(f2.min) || f2.ngMin) {
            var f0;
            f5.$validators.min = function(f8) {
                return f5.$isEmpty(f8) || x(f0) || f8 >= f0
            }
            ;
            f2.$observe("min", function(f8) {
                if (eX(f8) && !p(f8)) {
                    f8 = parseFloat(f8, 10)
                }
                f0 = p(f8) && !isNaN(f8) ? f8 : fE;
                f5.$validate()
            })
        }
        if (eX(f2.max) || f2.ngMax) {
            var f7;
            f5.$validators.max = function(f8) {
                return f5.$isEmpty(f8) || x(f7) || f8 <= f7
            }
            ;
            f2.$observe("max", function(f8) {
                if (eX(f8) && !p(f8)) {
                    f8 = parseFloat(f8, 10)
                }
                f7 = p(f8) && !isNaN(f8) ? f8 : fE;
                f5.$validate()
            })
        }
    }
    function eN(f3, f2, f1, f4, f5, f0) {
        ao(f3, f2, f1, f4, f5, f0);
        bD(f4);
        f4.$$parserName = "url";
        f4.$validators.url = function(f6, f8) {
            var f7 = f6 || f8;
            return f4.$isEmpty(f7) || fg.test(f7)
        }
    }
    function fC(f3, f2, f1, f4, f5, f0) {
        ao(f3, f2, f1, f4, f5, f0);
        bD(f4);
        f4.$$parserName = "email";
        f4.$validators.email = function(f6, f8) {
            var f7 = f6 || f8;
            return f4.$isEmpty(f7) || fL.test(f7)
        }
    }
    function cw(f2, f1, f0, f4) {
        if (x(f0.name)) {
            f1.attr("name", aP())
        }
        var f3 = function(f5) {
            if (f1[0].checked) {
                f4.$setViewValue(f0.value, f5 && f5.type)
            }
        };
        f1.on("click", f3);
        f4.$render = function() {
            var f5 = f0.value;
            f1[0].checked = (f5 == f4.$viewValue)
        }
        ;
        f0.$observe("value", f4.$render)
    }
    function bq(f2, f1, f0, f4, f5) {
        var f3;
        if (eX(f4)) {
            f3 = f2(f4);
            if (!f3.constant) {
                throw eT("ngModel")("constexpr", "Expected constant expression for `{0}`, but saw `{1}`.", f0, f4)
            }
            return f3(f1)
        }
        return f5
    }
    function f(f9, f5, f6, f0, f1, ga, f7, f3) {
        var f8 = bq(f3, f9, "ngTrueValue", f6.ngTrueValue, true);
        var f4 = bq(f3, f9, "ngFalseValue", f6.ngFalseValue, false);
        var f2 = function(gb) {
            f0.$setViewValue(f5[0].checked, gb && gb.type)
        };
        f5.on("click", f2);
        f0.$render = function() {
            f5[0].checked = f0.$viewValue
        }
        ;
        f0.$isEmpty = function(gb) {
            return gb === false
        }
        ;
        f0.$formatters.push(function(gb) {
            return dY(gb, f8)
        });
        f0.$parsers.push(function(gb) {
            return gb ? f8 : f4
        })
    }
    var d5 = ["$browser", "$sniffer", "$filter", "$parse", function(f0, f3, f2, f1) {
        return {
            restrict: "E",
            require: ["?ngModel"],
            link: {
                pre: function(f7, f6, f5, f4) {
                    if (f4[0]) {
                        (Z[db(f5.type)] || Z.text)(f7, f6, f5, f4[0], f3, f0, f2, f1)
                    }
                }
            }
        }
    }
    ];
    var dl = /^(true|false|\d+)$/;
    var b5 = function() {
        return {
            restrict: "A",
            priority: 100,
            compile: function(f1, f3) {
                if (dl.test(f3.ngValue)) {
                    return function f2(f5, f6, f4) {
                        f4.$set("value", f5.$eval(f4.ngValue))
                    }
                } else {
                    return function f0(f6, f7, f4) {
                        f6.$watch(f4.ngValue, function f5(f8) {
                            f4.$set("value", f8)
                        })
                    }
                }
            }
        }
    };
    var y = ["$compile", function(f0) {
        return {
            restrict: "AC",
            compile: function f1(f3) {
                f0.$$addBindingClass(f3);
                return function f2(f6, f5, f4) {
                    f0.$$addBindingInfo(f5, f4.ngBind);
                    f5 = f5[0];
                    f6.$watch(f4.ngBind, function f7(f8) {
                        f5.textContent = f8 === fE ? "" : f8
                    })
                }
            }
        }
    }
    ];
    var dE = ["$interpolate", "$compile", function(f2, f1) {
        return {
            compile: function f0(f4) {
                f1.$$addBindingClass(f4);
                return function f3(f8, f7, f5) {
                    var f6 = f2(f7.attr(f5.$attr.ngBindTemplate));
                    f1.$$addBindingInfo(f7, f6.expressions);
                    f7 = f7[0];
                    f5.$observe("ngBindTemplate", function(f9) {
                        f7.textContent = f9 === fE ? "" : f9
                    })
                }
            }
        }
    }
    ];
    var l = ["$sce", "$parse", "$compile", function(f0, f2, f1) {
        return {
            restrict: "A",
            compile: function f3(f5, f9) {
                var f8 = f2(f9.ngBindHtml);
                var f6 = f2(f9.ngBindHtml, function f4(ga) {
                    return (ga || "").toString()
                });
                f1.$$addBindingClass(f5);
                return function f7(gd, gc, ga) {
                    f1.$$addBindingInfo(gc, ga.ngBindHtml);
                    gd.$watch(f6, function gb() {
                        gc.html(f0.getTrustedHtml(f8(gd)) || "")
                    })
                }
            }
        }
    }
    ];
    var b7 = V({
        restrict: "A",
        require: "ngModel",
        link: function(f2, f1, f0, f3) {
            f3.$viewChangeListeners.push(function() {
                f2.$eval(f0.ngChange)
            })
        }
    });
    function ay(f1, f0) {
        f1 = "ngClass" + f1;
        return ["$animate", function(f4) {
            return {
                restrict: "AC",
                link: function(gd, f8, ga) {
                    var gc;
                    gd.$watch(ga[f1], f6, true);
                    ga.$observe("class", function(ge) {
                        f6(gd.$eval(ga[f1]))
                    });
                    if (f1 !== "ngClass") {
                        gd.$watch("$index", function(ge, gf) {
                            var gh = ge & 1;
                            if (gh !== (gf & 1)) {
                                var gg = f2(gd.$eval(ga[f1]));
                                gh === f0 ? f7(gg) : gb(gg)
                            }
                        })
                    }
                    function f7(ge) {
                        var gf = f5(ge, 1);
                        ga.$addClass(gf)
                    }
                    function gb(ge) {
                        var gf = f5(ge, -1);
                        ga.$removeClass(gf)
                    }
                    function f5(ge, gf) {
                        var gg = f8.data("$classCounts") || fM();
                        var gh = [];
                        bj(ge, function(gi) {
                            if (gf > 0 || gg[gi]) {
                                gg[gi] = (gg[gi] || 0) + gf;
                                if (gg[gi] === +(gf > 0)) {
                                    gh.push(gi)
                                }
                            }
                        });
                        f8.data("$classCounts", gg);
                        return gh.join(" ")
                    }
                    function f9(ge, gh) {
                        var gf = f3(gh, ge);
                        var gg = f3(ge, gh);
                        gf = f5(gf, 1);
                        gg = f5(gg, -1);
                        if (gf && gf.length) {
                            f4.addClass(f8, gf)
                        }
                        if (gg && gg.length) {
                            f4.removeClass(f8, gg)
                        }
                    }
                    function f6(gf) {
                        if (f0 === true || gd.$index % 2 === f0) {
                            var gg = f2(gf || []);
                            if (!gc) {
                                f7(gg)
                            } else {
                                if (!dY(gf, gc)) {
                                    var ge = f2(gc);
                                    f9(ge, gg)
                                }
                            }
                        }
                        gc = d8(gf)
                    }
                }
            };
            function f3(f6, f5) {
                var f7 = [];
                outer: for (var ga = 0; ga < f6.length; ga++) {
                    var f9 = f6[ga];
                    for (var f8 = 0; f8 < f5.length; f8++) {
                        if (f9 == f5[f8]) {
                            continue outer
                        }
                    }
                    f7.push(f9)
                }
                return f7
            }
            function f2(f6) {
                var f5 = [];
                if (U(f6)) {
                    bj(f6, function(f7) {
                        f5 = f5.concat(f2(f7))
                    });
                    return f5
                } else {
                    if (w(f6)) {
                        return f6.split(" ")
                    } else {
                        if (s(f6)) {
                            bj(f6, function(f8, f7) {
                                if (f8) {
                                    f5 = f5.concat(f7.split(" "))
                                }
                            });
                            return f5
                        }
                    }
                }
                return f6
            }
        }
        ]
    }
    var H = ay("", true);
    var j = ay("Odd", 0);
    var eG = ay("Even", 1);
    var cT = bE({
        compile: function(f1, f0) {
            f0.$set("ngCloak", fE);
            f1.removeClass("ng-cloak")
        }
    });
    var ey = [function() {
        return {
            restrict: "A",
            scope: true,
            controller: "@",
            priority: 500
        }
    }
    ];
    var aB = {};
    var a8 = {
        blur: true,
        focus: true
    };
    bj("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(f0) {
        var f1 = bl("ng-" + f0);
        aB[f1] = ["$parse", "$rootScope", function(f3, f2) {
            return {
                restrict: "A",
                compile: function(f5, f4) {
                    var f6 = f3(f4[f1], null, true);
                    return function f7(f9, f8) {
                        f8.on(f0, function(ga) {
                            var gb = function() {
                                f6(f9, {
                                    $event: ga
                                })
                            };
                            if (a8[f0] && f2.$$phase) {
                                f9.$evalAsync(gb)
                            } else {
                                f9.$apply(gb)
                            }
                        })
                    }
                }
            }
        }
        ]
    });
    var cr = ["$animate", function(f0) {
        return {
            multiElement: true,
            transclude: "element",
            priority: 600,
            terminal: true,
            restrict: "A",
            $$tlb: true,
            link: function(f8, f9, f4, f1, f6) {
                var f3, f7, f2;
                f8.$watch(f4.ngIf, function f5(ga) {
                    if (ga) {
                        if (!f7) {
                            f6(function(gc, gb) {
                                f7 = gb;
                                gc[gc.length++] = el.createComment(" end ngIf: " + f4.ngIf + " ");
                                f3 = {
                                    clone: gc
                                };
                                f0.enter(gc, f9.parent(), f9)
                            })
                        }
                    } else {
                        if (f2) {
                            f2.remove();
                            f2 = null
                        }
                        if (f7) {
                            f7.$destroy();
                            f7 = null
                        }
                        if (f3) {
                            f2 = a9(f3.clone);
                            f0.leave(f2).then(function() {
                                f2 = null
                            });
                            f3 = null
                        }
                    }
                })
            }
        }
    }
    ];
    var dp = ["$templateRequest", "$anchorScroll", "$animate", function(f0, f1, f2) {
        return {
            restrict: "ECA",
            priority: 400,
            terminal: true,
            transclude: "element",
            controller: cY.noop,
            compile: function(f7, f3) {
                var f6 = f3.ngInclude || f3.src
                  , f5 = f3.onload || ""
                  , f4 = f3.autoscroll;
                return function(gh, gg, gb, f8, gf) {
                    var ge = 0, gi, ga, gc;
                    var f9 = function() {
                        if (ga) {
                            ga.remove();
                            ga = null
                        }
                        if (gi) {
                            gi.$destroy();
                            gi = null
                        }
                        if (gc) {
                            f2.leave(gc).then(function() {
                                ga = null
                            });
                            ga = gc;
                            gc = null
                        }
                    };
                    gh.$watch(f6, function gd(gl) {
                        var gj = function() {
                            if (eX(f4) && (!f4 || gh.$eval(f4))) {
                                f1()
                            }
                        };
                        var gk = ++ge;
                        if (gl) {
                            f0(gl, true).then(function(gm) {
                                if (gk !== ge) {
                                    return
                                }
                                var gn = gh.$new();
                                f8.template = gm;
                                var go = gf(gn, function(gp) {
                                    f9();
                                    f2.enter(gp, null, gg).then(gj)
                                });
                                gi = gn;
                                gc = go;
                                gi.$emit("$includeContentLoaded", gl);
                                gh.$eval(f5)
                            }, function() {
                                if (gk === ge) {
                                    f9();
                                    gh.$emit("$includeContentError", gl)
                                }
                            });
                            gh.$emit("$includeContentRequested", gl)
                        } else {
                            f9();
                            f8.template = null
                        }
                    })
                }
            }
        }
    }
    ];
    var dN = ["$compile", function(f0) {
        return {
            restrict: "ECA",
            priority: -400,
            require: "ngInclude",
            link: function(f3, f1, f5, f4) {
                if (/SVG/.test(f1[0].toString())) {
                    f1.empty();
                    f0(ev(f4.template, el).childNodes)(f3, function f2(f6) {
                        f1.append(f6)
                    }, {
                        futureParentElement: f1
                    });
                    return
                }
                f1.html(f4.template);
                f0(f1.contents())(f3)
            }
        }
    }
    ];
    var d1 = bE({
        priority: 450,
        compile: function() {
            return {
                pre: function(f2, f1, f0) {
                    f2.$eval(f0.ngInit)
                }
            }
        }
    });
    var cF = function() {
        return {
            restrict: "A",
            priority: 100,
            require: "ngModel",
            link: function(f2, f1, f0, f3) {
                var f5 = f1.attr(f0.$attr.ngList) || ", ";
                var f7 = f0.ngTrim !== "false";
                var f4 = f7 ? aL(f5) : f5;
                var f6 = function(f9) {
                    if (x(f9)) {
                        return
                    }
                    var f8 = [];
                    if (f9) {
                        bj(f9.split(f4), function(ga) {
                            if (ga) {
                                f8.push(f7 ? aL(ga) : ga)
                            }
                        })
                    }
                    return f8
                };
                f3.$parsers.push(f6);
                f3.$formatters.push(function(f8) {
                    if (U(f8)) {
                        return f8.join(f5)
                    }
                    return fE
                });
                f3.$isEmpty = function(f8) {
                    return !f8 || !f8.length
                }
            }
        }
    };
    var bP = "ng-valid"
      , bA = "ng-invalid"
      , aq = "ng-pristine"
      , fR = "ng-dirty"
      , dj = "ng-untouched"
      , be = "ng-touched"
      , at = "ng-pending";
    var eJ = new eT("ngModel");
    var Y = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", "$timeout", "$rootScope", "$q", "$interpolate", function(ga, f3, gg, f9, f2, gc, gi, f5, gf, f4) {
        this.$viewValue = Number.NaN;
        this.$modelValue = Number.NaN;
        this.$$rawModelValue = fE;
        this.$validators = {};
        this.$asyncValidators = {};
        this.$parsers = [];
        this.$formatters = [];
        this.$viewChangeListeners = [];
        this.$untouched = true;
        this.$touched = false;
        this.$pristine = true;
        this.$dirty = false;
        this.$valid = true;
        this.$invalid = false;
        this.$error = {};
        this.$$success = {};
        this.$pending = fE;
        this.$name = f4(gg.name || "", false)(ga);
        var f8 = f2(gg.ngModel), f6 = f8.assign, f1 = f8, ge = f6, gh = null, gb, f7 = this;
        this.$$setOptions = function(gm) {
            f7.$options = gm;
            if (gm && gm.getterSetter) {
                var gl = f2(gg.ngModel + "()")
                  , gk = f2(gg.ngModel + "($$$p)");
                f1 = function(go) {
                    var gn = f8(go);
                    if (bn(gn)) {
                        gn = gl(go)
                    }
                    return gn
                }
                ;
                ge = function(gn, go) {
                    if (bn(f8(gn))) {
                        gk(gn, {
                            $$$p: f7.$modelValue
                        })
                    } else {
                        f6(gn, f7.$modelValue)
                    }
                }
            } else {
                if (!f8.assign) {
                    throw eJ("nonassign", "Expression '{0}' is non-assignable. Element: {1}", gg.ngModel, ce(f9))
                }
            }
        }
        ;
        this.$render = eD;
        this.$isEmpty = function(gk) {
            return x(gk) || gk === "" || gk === null || gk !== gk
        }
        ;
        var gd = f9.inheritedData("$formController") || fD
          , gj = 0;
        T({
            ctrl: this,
            $element: f9,
            set: function(gk, gl) {
                gk[gl] = true
            },
            unset: function(gk, gl) {
                delete gk[gl]
            },
            parentForm: gd,
            $animate: gc
        });
        this.$setPristine = function() {
            f7.$dirty = false;
            f7.$pristine = true;
            gc.removeClass(f9, fR);
            gc.addClass(f9, aq)
        }
        ;
        this.$setDirty = function() {
            f7.$dirty = true;
            f7.$pristine = false;
            gc.removeClass(f9, aq);
            gc.addClass(f9, fR);
            gd.$setDirty()
        }
        ;
        this.$setUntouched = function() {
            f7.$touched = false;
            f7.$untouched = true;
            gc.setClass(f9, dj, be)
        }
        ;
        this.$setTouched = function() {
            f7.$touched = true;
            f7.$untouched = false;
            gc.setClass(f9, be, dj)
        }
        ;
        this.$rollbackViewValue = function() {
            gi.cancel(gh);
            f7.$viewValue = f7.$$lastCommittedViewValue;
            f7.$render()
        }
        ;
        this.$validate = function() {
            if (p(f7.$modelValue) && isNaN(f7.$modelValue)) {
                return
            }
            var go = f7.$$lastCommittedViewValue;
            var gk = f7.$$rawModelValue;
            var gn = f7.$valid;
            var gl = f7.$modelValue;
            var gm = f7.$options && f7.$options.allowInvalid;
            f7.$$runValidators(gk, go, function(gp) {
                if (!gm && gn !== gp) {
                    f7.$modelValue = gp ? gk : fE;
                    if (f7.$modelValue !== gl) {
                        f7.$$writeModelToScope()
                    }
                }
            })
        }
        ;
        this.$$runValidators = function(gm, gk, gn) {
            gj++;
            var gr = gj;
            if (!gp()) {
                gq(false);
                return
            }
            if (!gl()) {
                gq(false);
                return
            }
            go();
            function gp() {
                var gt = f7.$$parserName || "parse";
                if (gb === fE) {
                    gs(gt, null)
                } else {
                    if (!gb) {
                        bj(f7.$validators, function(gu, gv) {
                            gs(gv, null)
                        });
                        bj(f7.$asyncValidators, function(gu, gv) {
                            gs(gv, null)
                        })
                    }
                    gs(gt, gb);
                    return gb
                }
                return true
            }
            function gl() {
                var gt = true;
                bj(f7.$validators, function(gw, gv) {
                    var gu = gw(gm, gk);
                    gt = gt && gu;
                    gs(gv, gu)
                });
                if (!gt) {
                    bj(f7.$asyncValidators, function(gu, gv) {
                        gs(gv, null)
                    });
                    return false
                }
                return true
            }
            function go() {
                var gt = [];
                var gu = true;
                bj(f7.$asyncValidators, function(gw, gv) {
                    var gx = gw(gm, gk);
                    if (!fH(gx)) {
                        throw eJ("$asyncValidators", "Expected asynchronous validator to return a promise but got '{0}' instead.", gx)
                    }
                    gs(gv, fE);
                    gt.push(gx.then(function() {
                        gs(gv, true)
                    }, function(gy) {
                        gu = false;
                        gs(gv, false)
                    }))
                });
                if (!gt.length) {
                    gq(true)
                } else {
                    gf.all(gt).then(function() {
                        gq(gu)
                    }, eD)
                }
            }
            function gs(gt, gu) {
                if (gr === gj) {
                    f7.$setValidity(gt, gu)
                }
            }
            function gq(gt) {
                if (gr === gj) {
                    gn(gt)
                }
            }
        }
        ;
        this.$commitViewValue = function() {
            var gk = f7.$viewValue;
            gi.cancel(gh);
            if (f7.$$lastCommittedViewValue === gk && (gk !== "" || !f7.$$hasNativeValidators)) {
                return
            }
            f7.$$lastCommittedViewValue = gk;
            if (f7.$pristine) {
                this.$setDirty()
            }
            this.$$parseAndValidate()
        }
        ;
        this.$$parseAndValidate = function() {
            var go = f7.$$lastCommittedViewValue;
            var gk = go;
            gb = x(gk) ? fE : true;
            if (gb) {
                for (var gm = 0; gm < f7.$parsers.length; gm++) {
                    gk = f7.$parsers[gm](gk);
                    if (x(gk)) {
                        gb = false;
                        break
                    }
                }
            }
            if (p(f7.$modelValue) && isNaN(f7.$modelValue)) {
                f7.$modelValue = f1(ga)
            }
            var gl = f7.$modelValue;
            var gn = f7.$options && f7.$options.allowInvalid;
            f7.$$rawModelValue = gk;
            if (gn) {
                f7.$modelValue = gk;
                gp()
            }
            f7.$$runValidators(gk, f7.$$lastCommittedViewValue, function(gq) {
                if (!gn) {
                    f7.$modelValue = gq ? gk : fE;
                    gp()
                }
            });
            function gp() {
                if (f7.$modelValue !== gl) {
                    f7.$$writeModelToScope()
                }
            }
        }
        ;
        this.$$writeModelToScope = function() {
            ge(ga, f7.$modelValue);
            bj(f7.$viewChangeListeners, function(gk) {
                try {
                    gk()
                } catch (gl) {
                    f3(gl)
                }
            })
        }
        ;
        this.$setViewValue = function(gl, gk) {
            f7.$viewValue = gl;
            if (!f7.$options || f7.$options.updateOnDefault) {
                f7.$$debounceViewValueCommit(gk)
            }
        }
        ;
        this.$$debounceViewValueCommit = function(gn) {
            var gk = 0, gm = f7.$options, gl;
            if (gm && eX(gm.debounce)) {
                gl = gm.debounce;
                if (p(gl)) {
                    gk = gl
                } else {
                    if (p(gl[gn])) {
                        gk = gl[gn]
                    } else {
                        if (p(gl["default"])) {
                            gk = gl["default"]
                        }
                    }
                }
            }
            gi.cancel(gh);
            if (gk) {
                gh = gi(function() {
                    f7.$commitViewValue()
                }, gk)
            } else {
                if (f5.$$phase) {
                    f7.$commitViewValue()
                } else {
                    ga.$apply(function() {
                        f7.$commitViewValue()
                    })
                }
            }
        }
        ;
        ga.$watch(function f0() {
            var gl = f1(ga);
            if (gl !== f7.$modelValue && (f7.$modelValue === f7.$modelValue || gl === gl)) {
                f7.$modelValue = f7.$$rawModelValue = gl;
                gb = fE;
                var gm = f7.$formatters
                  , gk = gm.length;
                var gn = gl;
                while (gk--) {
                    gn = gm[gk](gn)
                }
                if (f7.$viewValue !== gn) {
                    f7.$viewValue = f7.$$lastCommittedViewValue = gn;
                    f7.$render();
                    f7.$$runValidators(gl, gn, eD)
                }
            }
            return gl
        })
    }
    ];
    var bh = ["$rootScope", function(f0) {
        return {
            restrict: "A",
            require: ["ngModel", "^?form", "^?ngModelOptions"],
            controller: Y,
            priority: 1,
            compile: function f1(f3) {
                f3.addClass(aq).addClass(dj).addClass(bP);
                return {
                    pre: function f4(f9, f7, f6, f5) {
                        var f8 = f5[0]
                          , ga = f5[1] || fD;
                        f8.$$setOptions(f5[2] && f5[2].$options);
                        ga.$addControl(f8);
                        f6.$observe("name", function(gb) {
                            if (f8.$name !== gb) {
                                ga.$$renameControl(f8, gb)
                            }
                        });
                        f9.$on("$destroy", function() {
                            ga.$removeControl(f8)
                        })
                    },
                    post: function f2(f9, f7, f6, f5) {
                        var f8 = f5[0];
                        if (f8.$options && f8.$options.updateOn) {
                            f7.on(f8.$options.updateOn, function(ga) {
                                f8.$$debounceViewValueCommit(ga && ga.type)
                            })
                        }
                        f7.on("blur", function(ga) {
                            if (f8.$touched) {
                                return
                            }
                            if (f0.$$phase) {
                                f9.$evalAsync(f8.$setTouched)
                            } else {
                                f9.$apply(f8.$setTouched)
                            }
                        })
                    }
                }
            }
        }
    }
    ];
    var et = /(\s+|^)default(\s+|$)/;
    var d0 = function() {
        return {
            restrict: "A",
            controller: ["$scope", "$attrs", function(f1, f0) {
                var f2 = this;
                this.$options = fV(f1.$eval(f0.ngModelOptions));
                if (this.$options.updateOn !== fE) {
                    this.$options.updateOnDefault = false;
                    this.$options.updateOn = aL(this.$options.updateOn.replace(et, function() {
                        f2.$options.updateOnDefault = true;
                        return " "
                    }))
                } else {
                    this.$options.updateOnDefault = true
                }
            }
            ]
        }
    };
    function T(f1) {
        var f0 = f1.ctrl
          , ga = f1.$element
          , f5 = {}
          , f9 = f1.set
          , gc = f1.unset
          , f4 = f1.parentForm
          , f7 = f1.$animate;
        f5[bA] = !(f5[bP] = ga.hasClass(bP));
        f0.$setValidity = gb;
        function gb(gf, gg, gd) {
            if (gg === fE) {
                f3("$pending", gf, gd)
            } else {
                f2("$pending", gf, gd)
            }
            if (!aH(gg)) {
                gc(f0.$error, gf, gd);
                gc(f0.$$success, gf, gd)
            } else {
                if (gg) {
                    gc(f0.$error, gf, gd);
                    f9(f0.$$success, gf, gd)
                } else {
                    f9(f0.$error, gf, gd);
                    gc(f0.$$success, gf, gd)
                }
            }
            if (f0.$pending) {
                f8(at, true);
                f0.$valid = f0.$invalid = fE;
                f6("", null)
            } else {
                f8(at, false);
                f0.$valid = cL(f0.$error);
                f0.$invalid = !f0.$valid;
                f6("", f0.$valid)
            }
            var ge;
            if (f0.$pending && f0.$pending[gf]) {
                ge = fE
            } else {
                if (f0.$error[gf]) {
                    ge = false
                } else {
                    if (f0.$$success[gf]) {
                        ge = true
                    } else {
                        ge = null
                    }
                }
            }
            f6(gf, ge);
            f4.$setValidity(gf, ge, f0)
        }
        function f3(ge, gf, gd) {
            if (!f0[ge]) {
                f0[ge] = {}
            }
            f9(f0[ge], gf, gd)
        }
        function f2(ge, gf, gd) {
            if (f0[ge]) {
                gc(f0[ge], gf, gd)
            }
            if (cL(f0[ge])) {
                f0[ge] = fE
            }
        }
        function f8(ge, gd) {
            if (gd && !f5[ge]) {
                f7.addClass(ga, ge);
                f5[ge] = true
            } else {
                if (!gd && f5[ge]) {
                    f7.removeClass(ga, ge);
                    f5[ge] = false
                }
            }
        }
        function f6(gd, ge) {
            gd = gd ? "-" + Q(gd, "-") : "";
            f8(bP + gd, ge === true);
            f8(bA + gd, ge === false)
        }
    }
    function cL(f0) {
        if (f0) {
            for (var f1 in f0) {
                if (f0.hasOwnProperty(f1)) {
                    return false
                }
            }
        }
        return true
    }
    var eH = bE({
        terminal: true,
        priority: 1000
    });
    var cy = eT("ngOptions");
    var cM = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;
    var dX = ["$compile", "$parse", function(f1, f3) {
        function f0(ga, gl, f6) {
            var gg = ga.match(cM);
            if (!(gg)) {
                throw cy("iexp", "Expected expression in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_' but got '{0}'. Element: {1}", ga, ce(gl))
            }
            var gm = gg[5] || gg[7];
            var gd = gg[6];
            var f5 = / as /.test(gg[0]) && gg[1];
            var f9 = gg[9];
            var f7 = f3(gg[2] ? gg[1] : gm);
            var gq = f5 && f3(f5);
            var gn = gq || f7;
            var gc = f9 && f3(f9);
            var gp = f9 ? function(gs, gt) {
                return gc(f6, gt)
            }
            : function go(gs) {
                return ef(gs)
            }
            ;
            var gr = function(gt, gs) {
                return gp(gt, gf(gt, gs))
            };
            var ge = f3(gg[2] || gg[1]);
            var gk = f3(gg[3] || "");
            var f8 = f3(gg[4] || "");
            var gb = f3(gg[8]);
            var gj = {};
            var gf = gd ? function(gt, gs) {
                gj[gd] = gs;
                gj[gm] = gt;
                return gj
            }
            : function(gs) {
                gj[gm] = gs;
                return gj
            }
            ;
            function gi(gu, gv, gs, gw, gt) {
                this.selectValue = gu;
                this.viewValue = gv;
                this.label = gs;
                this.group = gw;
                this.disabled = gt
            }
            function gh(gs) {
                var gt;
                if (!gd && b2(gs)) {
                    gt = gs
                } else {
                    gt = [];
                    for (var gu in gs) {
                        if (gs.hasOwnProperty(gu) && gu.charAt(0) !== "$") {
                            gt.push(gu)
                        }
                    }
                }
                return gt
            }
            return {
                trackBy: f9,
                getTrackByValue: gr,
                getWatchables: f3(gb, function(gy) {
                    var gv = [];
                    gy = gy || [];
                    var gB = gh(gy);
                    var gt = gB.length;
                    for (var gu = 0; gu < gt; gu++) {
                        var gA = (gy === gB) ? gu : gB[gu];
                        var gz = gy[gA];
                        var gs = gf(gy[gA], gA);
                        var gC = gp(gy[gA], gs);
                        gv.push(gC);
                        if (gg[2] || gg[1]) {
                            var gx = ge(f6, gs);
                            gv.push(gx)
                        }
                        if (gg[4]) {
                            var gw = f8(f6, gs);
                            gv.push(gw)
                        }
                    }
                    return gv
                }),
                getOptions: function() {
                    var gy = [];
                    var gw = {};
                    var gA = gb(f6) || [];
                    var gF = gh(gA);
                    var gu = gF.length;
                    for (var gx = 0; gx < gu; gx++) {
                        var gD = (gA === gF) ? gx : gF[gx];
                        var gB = gA[gD];
                        var gt = gf(gB, gD);
                        var gs = gn(f6, gt);
                        var gG = gp(gs, gt);
                        var gz = ge(f6, gt);
                        var gC = gk(f6, gt);
                        var gv = f8(f6, gt);
                        var gE = new gi(gG,gs,gz,gC,gv);
                        gy.push(gE);
                        gw[gG] = gE
                    }
                    return {
                        items: gy,
                        selectValueMap: gw,
                        getOptionFromViewValue: function(gH) {
                            return gw[gr(gH)]
                        },
                        getViewValueFromOption: function(gH) {
                            return f9 ? cY.copy(gH.viewValue) : gH.viewValue
                        }
                    }
                }
            }
        }
        var f4 = el.createElement("option")
          , f2 = el.createElement("optgroup");
        return {
            restrict: "A",
            terminal: true,
            require: ["select", "?ngModel"],
            link: function(f5, gn, gp, gq) {
                var gg = gq[1];
                if (!gg) {
                    return
                }
                var gs = gq[0];
                var gu = gp.multiple;
                var gm;
                for (var gr = 0, gb = gn.children(), gl = gb.length; gr < gl; gr++) {
                    if (gb[gr].value === "") {
                        gm = gb.eq(gr);
                        break
                    }
                }
                var f9 = !!gm;
                var gv = ac(f4.cloneNode(false));
                gv.val("?");
                var ga;
                var f6 = f0(gp.ngOptions, gn, f5);
                var gk = function() {
                    if (!f9) {
                        gn.prepend(gm)
                    }
                    gn.val("");
                    gm.prop("selected", true);
                    gm.attr("selected", true)
                };
                var gc = function() {
                    if (!f9) {
                        gm.remove()
                    }
                };
                var f7 = function() {
                    gn.prepend(gv);
                    gn.val("?");
                    gv.prop("selected", true);
                    gv.attr("selected", true)
                };
                var gf = function() {
                    gv.remove()
                };
                if (!gu) {
                    gs.writeValue = function gj(gy) {
                        var gx = ga.getOptionFromViewValue(gy);
                        if (gx && !gx.disabled) {
                            if (gn[0].value !== gx.selectValue) {
                                gf();
                                gc();
                                gn[0].value = gx.selectValue;
                                gx.element.selected = true;
                                gx.element.setAttribute("selected", "selected")
                            }
                        } else {
                            if (gy === null || f9) {
                                gf();
                                gk()
                            } else {
                                gc();
                                f7()
                            }
                        }
                    }
                    ;
                    gs.readValue = function go() {
                        var gx = ga.selectValueMap[gn.val()];
                        if (gx && !gx.disabled) {
                            gc();
                            gf();
                            return ga.getViewValueFromOption(gx)
                        }
                        return null
                    }
                    ;
                    if (f6.trackBy) {
                        f5.$watch(function() {
                            return f6.getTrackByValue(gg.$viewValue)
                        }, function() {
                            gg.$render()
                        })
                    }
                } else {
                    gg.$isEmpty = function(gx) {
                        return !gx || gx.length === 0
                    }
                    ;
                    gs.writeValue = function ge(gx) {
                        ga.items.forEach(function(gy) {
                            gy.element.selected = false
                        });
                        if (gx) {
                            gx.forEach(function(gz) {
                                var gy = ga.getOptionFromViewValue(gz);
                                if (gy && !gy.disabled) {
                                    gy.element.selected = true
                                }
                            })
                        }
                    }
                    ;
                    gs.readValue = function gi() {
                        var gx = gn.val() || []
                          , gy = [];
                        bj(gx, function(gA) {
                            var gz = ga.selectValueMap[gA];
                            if (!gz.disabled) {
                                gy.push(ga.getViewValueFromOption(gz))
                            }
                        });
                        return gy
                    }
                    ;
                    if (f6.trackBy) {
                        f5.$watchCollection(function() {
                            if (U(gg.$viewValue)) {
                                return gg.$viewValue.map(function(gx) {
                                    return f6.getTrackByValue(gx)
                                })
                            }
                        }, function() {
                            gg.$render()
                        })
                    }
                }
                if (f9) {
                    gm.remove();
                    f1(gm)(f5);
                    gm.removeClass("ng-scope")
                } else {
                    gm = ac(f4.cloneNode(false))
                }
                gw();
                f5.$watchCollection(f6.getWatchables, gw);
                function gt(gy, gx) {
                    gy.element = gx;
                    gx.disabled = gy.disabled;
                    if (gy.value !== gx.value) {
                        gx.value = gy.selectValue
                    }
                    if (gy.label !== gx.label) {
                        gx.label = gy.label;
                        gx.textContent = gy.label
                    }
                }
                function gh(gz, gB, gy, gA) {
                    var gx;
                    if (gB && db(gB.nodeName) === gy) {
                        gx = gB
                    } else {
                        gx = gA.cloneNode(false);
                        if (!gB) {
                            gz.appendChild(gx)
                        } else {
                            gz.insertBefore(gx, gB)
                        }
                    }
                    return gx
                }
                function f8(gy) {
                    var gx;
                    while (gy) {
                        gx = gy.nextSibling;
                        aD(gy);
                        gy = gx
                    }
                }
                function gd(gz) {
                    var gy = gm && gm[0];
                    var gx = gv && gv[0];
                    if (gy || gx) {
                        while (gz && (gz === gy || gz === gx)) {
                            gz = gz.nextSibling
                        }
                    }
                    return gz
                }
                function gw() {
                    var gx = ga && gs.readValue();
                    ga = f6.getOptions();
                    var gB = {};
                    var gy = gn[0].firstChild;
                    if (f9) {
                        gn.prepend(gm)
                    }
                    gy = gd(gy);
                    ga.items.forEach(function gA(gE) {
                        var gF;
                        var gD;
                        var gC;
                        if (gE.group) {
                            gF = gB[gE.group];
                            if (!gF) {
                                gD = gh(gn[0], gy, "optgroup", f2);
                                gy = gD.nextSibling;
                                gD.label = gE.group;
                                gF = gB[gE.group] = {
                                    groupElement: gD,
                                    currentOptionElement: gD.firstChild
                                }
                            }
                            gC = gh(gF.groupElement, gF.currentOptionElement, "option", f4);
                            gt(gE, gC);
                            gF.currentOptionElement = gC.nextSibling
                        } else {
                            gC = gh(gn[0], gy, "option", f4);
                            gt(gE, gC);
                            gy = gC.nextSibling
                        }
                    });
                    Object.keys(gB).forEach(function(gC) {
                        f8(gB[gC].currentOptionElement)
                    });
                    f8(gy);
                    gg.$render();
                    if (!gg.$isEmpty(gx)) {
                        var gz = gs.readValue();
                        if (f6.trackBy ? !dY(gx, gz) : gx !== gz) {
                            gg.$setViewValue(gz);
                            gg.$render()
                        }
                    }
                }
            }
        }
    }
    ];
    var c8 = ["$locale", "$interpolate", "$log", function(f0, f3, f2) {
        var f4 = /{}/g
          , f1 = /^when(Minus)?(.+)$/;
        return {
            link: function(gj, gd, gi) {
                var gg = gi.count, gb = gi.$attr.when && gd.attr(gi.$attr.when), gc = gi.offset || 0, f7 = gj.$eval(gb) || {}, ga = {}, gf = f3.startSymbol(), gh = f3.endSymbol(), f6 = gf + gg + "-" + gc + gh, f9 = cY.noop, ge;
                bj(gi, function(gn, gk) {
                    var gm = f1.exec(gk);
                    if (gm) {
                        var gl = (gm[1] ? "-" : "") + db(gm[2]);
                        f7[gl] = gd.attr(gi.$attr[gk])
                    }
                });
                bj(f7, function(gl, gk) {
                    ga[gk] = f3(gl.replace(f4, f6))
                });
                gj.$watch(gg, function f5(gl) {
                    var gm = parseFloat(gl);
                    var gn = isNaN(gm);
                    if (!gn && !(gm in f7)) {
                        gm = f0.pluralCat(gm - gc)
                    }
                    if ((gm !== ge) && !(gn && p(ge) && isNaN(ge))) {
                        f9();
                        var gk = ga[gm];
                        if (x(gk)) {
                            if (gl != null) {
                                f2.debug("ngPluralize: no rule defined for '" + gm + "' in " + gb)
                            }
                            f9 = eD;
                            f8()
                        } else {
                            f9 = gj.$watch(gk, f8)
                        }
                        ge = gm
                    }
                });
                function f8(gk) {
                    gd.text(gk || "")
                }
            }
        }
    }
    ];
    var eb = ["$parse", "$animate", function(f4, f7) {
        var f3 = "$$NG_REMOVED";
        var f2 = eT("ngRepeat");
        var f6 = function(gb, f8, ga, gc, gd, f9, ge) {
            gb[ga] = gc;
            if (gd) {
                gb[gd] = f9
            }
            gb.$index = f8;
            gb.$first = (f8 === 0);
            gb.$last = (f8 === (ge - 1));
            gb.$middle = !(gb.$first || gb.$last);
            gb.$odd = !(gb.$even = (f8 & 1) === 0)
        };
        var f5 = function(f8) {
            return f8.clone[0]
        };
        var f1 = function(f8) {
            return f8.clone[f8.clone.length - 1]
        };
        return {
            restrict: "A",
            multiElement: true,
            transclude: "element",
            priority: 1000,
            terminal: true,
            $$tlb: true,
            compile: function f0(go, gg) {
                var gm = gg.ngRepeat;
                var gl = el.createComment(" end ngRepeat: " + gm + " ");
                var gh = gm.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                if (!gh) {
                    throw f2("iexp", "Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.", gm)
                }
                var gc = gh[1];
                var gk = gh[2];
                var gn = gh[3];
                var ga = gh[4];
                gh = gc.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);
                if (!gh) {
                    throw f2("iidexp", "'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.", gc)
                }
                var gb = gh[3] || gh[1];
                var gi = gh[2];
                if (gn && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(gn) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(gn))) {
                    throw f2("badident", "alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.", gn)
                }
                var ge, f8, gf, gj;
                var gd = {
                    $id: ef
                };
                if (ga) {
                    ge = f4(ga)
                } else {
                    gf = function(gp, gq) {
                        return ef(gq)
                    }
                    ;
                    gj = function(gp) {
                        return gp
                    }
                }
                return function f9(gr, gq, gu, gt, gp) {
                    if (ge) {
                        f8 = function(gx, gy, gw) {
                            if (gi) {
                                gd[gi] = gx
                            }
                            gd[gb] = gy;
                            gd.$index = gw;
                            return ge(gr, gd)
                        }
                    }
                    var gv = fM();
                    gr.$watchCollection(gk, function gs(gE) {
                        var gA, gz, gF = gq[0], gx, gw = fM(), gL, gM, gG, gD, gI, gC, gB, gN, gy;
                        if (gn) {
                            gr[gn] = gE
                        }
                        if (b2(gE)) {
                            gC = gE;
                            gI = f8 || gf
                        } else {
                            gI = f8 || gj;
                            gC = [];
                            for (var gJ in gE) {
                                if (gE.hasOwnProperty(gJ) && gJ.charAt(0) !== "$") {
                                    gC.push(gJ)
                                }
                            }
                        }
                        gL = gC.length;
                        gN = new Array(gL);
                        for (gA = 0; gA < gL; gA++) {
                            gM = (gE === gC) ? gA : gC[gA];
                            gG = gE[gM];
                            gD = gI(gM, gG, gA);
                            if (gv[gD]) {
                                gB = gv[gD];
                                delete gv[gD];
                                gw[gD] = gB;
                                gN[gA] = gB
                            } else {
                                if (gw[gD]) {
                                    bj(gN, function(gO) {
                                        if (gO && gO.scope) {
                                            gv[gO.id] = gO
                                        }
                                    });
                                    throw f2("dupes", "Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}", gm, gD, gG)
                                } else {
                                    gN[gA] = {
                                        id: gD,
                                        scope: fE,
                                        clone: fE
                                    };
                                    gw[gD] = true
                                }
                            }
                        }
                        for (var gK in gv) {
                            gB = gv[gK];
                            gy = a9(gB.clone);
                            f7.leave(gy);
                            if (gy[0].parentNode) {
                                for (gA = 0,
                                gz = gy.length; gA < gz; gA++) {
                                    gy[gA][f3] = true
                                }
                            }
                            gB.scope.$destroy()
                        }
                        for (gA = 0; gA < gL; gA++) {
                            gM = (gE === gC) ? gA : gC[gA];
                            gG = gE[gM];
                            gB = gN[gA];
                            if (gB.scope) {
                                gx = gF;
                                do {
                                    gx = gx.nextSibling
                                } while (gx && gx[f3]);
                                if (f5(gB) != gx) {
                                    f7.move(a9(gB.clone), null, ac(gF))
                                }
                                gF = f1(gB);
                                f6(gB.scope, gA, gb, gG, gi, gM, gL)
                            } else {
                                gp(function gH(gQ, gP) {
                                    gB.scope = gP;
                                    var gO = gl.cloneNode(false);
                                    gQ[gQ.length++] = gO;
                                    f7.enter(gQ, null, ac(gF));
                                    gF = gO;
                                    gB.clone = gQ;
                                    gw[gB.id] = gB;
                                    f6(gB.scope, gA, gb, gG, gi, gM, gL)
                                })
                            }
                        }
                        gv = gw
                    })
                }
            }
        }
    }
    ];
    var dv = "ng-hide";
    var G = "ng-hide-animate";
    var aZ = ["$animate", function(f0) {
        return {
            restrict: "A",
            multiElement: true,
            link: function(f3, f2, f1) {
                f3.$watch(f1.ngShow, function f4(f5) {
                    f0[f5 ? "removeClass" : "addClass"](f2, dv, {
                        tempClasses: G
                    })
                })
            }
        }
    }
    ];
    var eR = ["$animate", function(f0) {
        return {
            restrict: "A",
            multiElement: true,
            link: function(f3, f2, f1) {
                f3.$watch(f1.ngHide, function f4(f5) {
                    f0[f5 ? "addClass" : "removeClass"](f2, dv, {
                        tempClasses: G
                    })
                })
            }
        }
    }
    ];
    var cx = bE(function(f3, f2, f0) {
        f3.$watch(f0.ngStyle, function f1(f5, f4) {
            if (f4 && (f5 !== f4)) {
                bj(f4, function(f7, f6) {
                    f2.css(f6, "")
                })
            }
            if (f5) {
                f2.css(f5)
            }
        }, true)
    });
    var ew = ["$animate", function(f1) {
        return {
            require: "ngSwitch",
            controller: ["$scope", function f0() {
                this.cases = {}
            }
            ],
            link: function(gc, f4, f8, gb) {
                var f3 = f8.ngSwitch || f8.on
                  , f7 = []
                  , f2 = []
                  , f5 = []
                  , ga = [];
                var f6 = function(ge, gd) {
                    return function() {
                        ge.splice(gd, 1)
                    }
                };
                gc.$watch(f3, function f9(gg) {
                    var gd, gf;
                    for (gd = 0,
                    gf = f5.length; gd < gf; ++gd) {
                        f1.cancel(f5[gd])
                    }
                    f5.length = 0;
                    for (gd = 0,
                    gf = ga.length; gd < gf; ++gd) {
                        var ge = a9(f2[gd].clone);
                        ga[gd].$destroy();
                        var gh = f5[gd] = f1.leave(ge);
                        gh.then(f6(f5, gd))
                    }
                    f2.length = 0;
                    ga.length = 0;
                    if ((f7 = gb.cases["!" + gg] || gb.cases["?"])) {
                        bj(f7, function(gi) {
                            gi.transclude(function(gl, gj) {
                                ga.push(gj);
                                var gk = gi.element;
                                gl[gl.length++] = el.createComment(" end ngSwitchWhen: ");
                                var gm = {
                                    clone: gl
                                };
                                f2.push(gm);
                                f1.enter(gl, gk.parent(), gk)
                            })
                        })
                    }
                })
            }
        }
    }
    ];
    var ca = bE({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: true,
        link: function(f3, f2, f1, f4, f0) {
            f4.cases["!" + f1.ngSwitchWhen] = (f4.cases["!" + f1.ngSwitchWhen] || []);
            f4.cases["!" + f1.ngSwitchWhen].push({
                transclude: f0,
                element: f2
            })
        }
    });
    var fj = bE({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: true,
        link: function(f3, f2, f0, f4, f1) {
            f4.cases["?"] = (f4.cases["?"] || []);
            f4.cases["?"].push({
                transclude: f1,
                element: f2
            })
        }
    });
    var bC = bE({
        restrict: "EAC",
        link: function(f4, f3, f0, f2, f1) {
            if (!f1) {
                throw eT("ngTransclude")("orphan", "Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}", ce(f3))
            }
            f1(function(f5) {
                f3.empty();
                f3.append(f5)
            })
        }
    });
    var aW = ["$templateCache", function(f0) {
        return {
            restrict: "E",
            terminal: true,
            compile: function(f2, f1) {
                if (f1.type == "text/ng-template") {
                    var f3 = f1.id
                      , f4 = f2[0].text;
                    f0.put(f3, f4)
                }
            }
        }
    }
    ];
    var K = {
        $setViewValue: eD,
        $render: eD
    };
    var ft = ["$element", "$scope", "$attrs", function(f1, f3, f0) {
        var f2 = this
          , f4 = new cu();
        f2.ngModelCtrl = K;
        f2.unknownOption = ac(el.createElement("option"));
        f2.renderUnknownOption = function(f7) {
            var f8 = "? " + ef(f7) + " ?";
            f2.unknownOption.val(f8);
            f1.prepend(f2.unknownOption);
            f1.val(f8)
        }
        ;
        f3.$on("$destroy", function() {
            f2.renderUnknownOption = eD
        });
        f2.removeUnknownOption = function() {
            if (f2.unknownOption.parent()) {
                f2.unknownOption.remove()
            }
        }
        ;
        f2.readValue = function f6() {
            f2.removeUnknownOption();
            return f1.val()
        }
        ;
        f2.writeValue = function f5(f7) {
            if (f2.hasOption(f7)) {
                f2.removeUnknownOption();
                f1.val(f7);
                if (f7 === "") {
                    f2.emptyOption.prop("selected", true)
                }
            } else {
                if (f7 == null && f2.emptyOption) {
                    f2.removeUnknownOption();
                    f1.val("")
                } else {
                    f2.renderUnknownOption(f7)
                }
            }
        }
        ;
        f2.addOption = function(f9, f7) {
            fa(f9, '"option value"');
            if (f9 === "") {
                f2.emptyOption = f7
            }
            var f8 = f4.get(f9) || 0;
            f4.put(f9, f8 + 1)
        }
        ;
        f2.removeOption = function(f8) {
            var f7 = f4.get(f8);
            if (f7) {
                if (f7 === 1) {
                    f4.remove(f8);
                    if (f8 === "") {
                        f2.emptyOption = fE
                    }
                } else {
                    f4.put(f8, f7 - 1)
                }
            }
        }
        ;
        f2.hasOption = function(f7) {
            return !!f4.get(f7)
        }
    }
    ];
    var ae = function() {
        return {
            restrict: "E",
            require: ["select", "?ngModel"],
            controller: ft,
            link: function(f9, f4, f6, f3) {
                var f1 = f3[1];
                if (!f1) {
                    return
                }
                var f0 = f3[0];
                f0.ngModelCtrl = f1;
                f1.$render = function() {
                    f0.writeValue(f1.$viewValue)
                }
                ;
                f4.on("change", function() {
                    f9.$apply(function() {
                        f1.$setViewValue(f0.readValue())
                    })
                });
                if (f6.multiple) {
                    f0.readValue = function ga() {
                        var gb = [];
                        bj(f4.find("option"), function(gc) {
                            if (gc.selected) {
                                gb.push(gc.value)
                            }
                        });
                        return gb
                    }
                    ;
                    f0.writeValue = function f7(gc) {
                        var gb = new cu(gc);
                        bj(f4.find("option"), function(gd) {
                            gd.selected = eX(gb.get(gd.value))
                        })
                    }
                    ;
                    var f5, f8 = NaN;
                    f9.$watch(function f2() {
                        if (f8 === f1.$viewValue && !dY(f5, f1.$viewValue)) {
                            f5 = d8(f1.$viewValue);
                            f1.$render()
                        }
                        f8 = f1.$viewValue
                    });
                    f1.$isEmpty = function(gb) {
                        return !gb || gb.length === 0
                    }
                }
            }
        }
    };
    var cU = ["$interpolate", function(f1) {
        function f0(f2) {
            if (f2[0].hasAttribute("selected")) {
                f2[0].selected = true
            }
        }
        return {
            restrict: "E",
            priority: 100,
            compile: function(f4, f2) {
                if (x(f2.value)) {
                    var f3 = f1(f4.text(), true);
                    if (!f3) {
                        f2.$set("value", f4.text())
                    }
                }
                return function(gb, f9, f5) {
                    var f7 = "$selectController"
                      , ga = f9.parent()
                      , f8 = ga.data(f7) || ga.parent().data(f7);
                    if (f8 && f8.ngModelCtrl) {
                        if (f3) {
                            gb.$watch(f3, function f6(gd, gc) {
                                f5.$set("value", gd);
                                if (gc !== gd) {
                                    f8.removeOption(gc)
                                }
                                f8.addOption(gd, f9);
                                f8.ngModelCtrl.$render();
                                f0(f9)
                            })
                        } else {
                            f8.addOption(f5.value, f9);
                            f8.ngModelCtrl.$render();
                            f0(f9)
                        }
                        f9.on("$destroy", function() {
                            f8.removeOption(f5.value);
                            f8.ngModelCtrl.$render()
                        })
                    }
                }
            }
        }
    }
    ];
    var e1 = V({
        restrict: "E",
        terminal: false
    });
    var cj = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(f1, f3, f0, f2) {
                if (!f2) {
                    return
                }
                f0.required = true;
                f2.$validators.required = function(f4, f5) {
                    return !f0.required || !f2.$isEmpty(f5)
                }
                ;
                f0.$observe("required", function() {
                    f2.$validate()
                })
            }
        }
    };
    var dq = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(f1, f5, f0, f3) {
                if (!f3) {
                    return
                }
                var f2, f4 = f0.ngPattern || f0.pattern;
                f0.$observe("pattern", function(f6) {
                    if (w(f6) && f6.length > 0) {
                        f6 = new RegExp("^" + f6 + "$")
                    }
                    if (f6 && !f6.test) {
                        throw eT("ngPattern")("noregexp", "Expected {0} to be a RegExp but was {1}. Element: {2}", f4, f6, ce(f5))
                    }
                    f2 = f6 || fE;
                    f3.$validate()
                });
                f3.$validators.pattern = function(f6) {
                    return f3.$isEmpty(f6) || x(f2) || f2.test(f6)
                }
            }
        }
    };
    var fm = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(f2, f4, f0, f3) {
                if (!f3) {
                    return
                }
                var f1 = -1;
                f0.$observe("maxlength", function(f6) {
                    var f5 = de(f6);
                    f1 = isNaN(f5) ? -1 : f5;
                    f3.$validate()
                });
                f3.$validators.maxlength = function(f5, f6) {
                    return (f1 < 0) || f3.$isEmpty(f6) || (f6.length <= f1)
                }
            }
        }
    };
    var aM = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(f2, f4, f0, f3) {
                if (!f3) {
                    return
                }
                var f1 = 0;
                f0.$observe("minlength", function(f5) {
                    f1 = de(f5) || 0;
                    f3.$validate()
                });
                f3.$validators.minlength = function(f5, f6) {
                    return f3.$isEmpty(f6) || f6.length >= f1
                }
            }
        }
    };
    if (dV.angular.bootstrap) {
        console.log("WARNING: Tried to load angular more than once.");
        return
    }
    v();
    aG(cY);
    ac(el).ready(function() {
        b4(el, bp)
    })
}
)(window, document);
!window.angular.$$csp() && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
(function(d, g, e) {
    function b(j, c, i) {
        return {
            restrict: "ECA",
            terminal: !0,
            priority: 400,
            transclude: "element",
            link: function(v, p, u, q, s) {
                function r() {
                    o && (i.cancel(o),
                    o = null);
                    n && (n.$destroy(),
                    n = null);
                    h && (o = i.leave(h),
                    o.then(function() {
                        o = null
                    }),
                    h = null)
                }
                function A() {
                    var k = j.current && j.current.locals;
                    if (g.isDefined(k && k.$template)) {
                        var k = v.$new()
                          , l = j.current;
                        h = s(k, function(m) {
                            i.enter(m, null, h || p).then(function() {
                                !g.isDefined(C) || C && !v.$eval(C) || c()
                            });
                            r()
                        });
                        n = l.scope = k;
                        n.$emit("$viewContentLoaded");
                        n.$eval(B)
                    } else {
                        r()
                    }
                }
                var n, h, o, C = u.autoscroll, B = u.onload || "";
                v.$on("$routeChangeSuccess", A);
                A()
            }
        }
    }
    function a(k, i, j) {
        return {
            restrict: "ECA",
            priority: -400,
            link: function(h, l) {
                var c = j.current
                  , m = c.locals;
                l.html(m.$template);
                var n = k(l.contents());
                c.controller && (m.$scope = h,
                m = i(c.controller, m),
                c.controllerAs && (h[c.controllerAs] = m),
                l.data("$ngControllerController", m),
                l.children().data("$ngControllerController", m));
                n(h)
            }
        }
    }
    d = g.module("ngRoute", ["ng"]).provider("$route", function() {
        function j(h, k) {
            return g.extend(Object.create(h), k)
        }
        function c(k, n) {
            var h = n.caseInsensitiveMatch
              , m = {
                originalPath: k,
                regexp: k
            }
              , l = m.keys = [];
            k = k.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([\?\*])?/g, function(p, r, o, q) {
                p = "?" === q ? q : null;
                q = "*" === q ? q : null;
                l.push({
                    name: o,
                    optional: !!p
                });
                r = r || "";
                return "" + (p ? "" : r) + "(?:" + (p ? r : "") + (q && "(.+?)" || "([^/]+)") + (p || "") + ")" + (p || "")
            }).replace(/([\/$\*])/g, "\\$1");
            m.regexp = new RegExp("^" + k + "$",h ? "i" : "");
            return m
        }
        var i = {};
        this.when = function(k, l) {
            var h = g.copy(l);
            g.isUndefined(h.reloadOnSearch) && (h.reloadOnSearch = !0);
            g.isUndefined(h.caseInsensitiveMatch) && (h.caseInsensitiveMatch = this.caseInsensitiveMatch);
            i[k] = g.extend(h, k && c(k, h));
            if (k) {
                var m = "/" == k[k.length - 1] ? k.substr(0, k.length - 1) : k + "/";
                i[m] = g.extend({
                    redirectTo: k
                }, c(m, h))
            }
            return this
        }
        ;
        this.caseInsensitiveMatch = !1;
        this.otherwise = function(h) {
            "string" === typeof h && (h = {
                redirectTo: h
            });
            this.when(null, h);
            return this
        }
        ;
        this.$get = ["$rootScope", "$location", "$routeParams", "$q", "$injector", "$templateRequest", "$sce", function(D, A, C, B, z, o, E) {
            function u(h) {
                var k = I.current;
                (G = (q = y()) && k && q.$$route === k.$$route && g.equals(q.pathParams, k.pathParams) && !q.reloadOnSearch && !F) || !k && !q || D.$broadcast("$routeChangeStart", q, k).defaultPrevented && h && h.preventDefault()
            }
            function r() {
                var h = I.current
                  , k = q;
                if (G) {
                    h.params = k.params,
                    g.copy(h.params, C),
                    D.$broadcast("$routeUpdate", h)
                } else {
                    if (k || h) {
                        F = !1,
                        (I.current = k) && k.redirectTo && (g.isString(k.redirectTo) ? A.path(H(k.redirectTo, k.params)).search(k.params).replace() : A.url(k.redirectTo(k.pathParams, A.path(), A.search())).replace()),
                        B.when(k).then(function() {
                            if (k) {
                                var m = g.extend({}, k.resolve), l, n;
                                g.forEach(m, function(p, s) {
                                    m[s] = g.isString(p) ? z.get(p) : z.invoke(p, null, null, s)
                                });
                                g.isDefined(l = k.template) ? g.isFunction(l) && (l = l(k.params)) : g.isDefined(n = k.templateUrl) && (g.isFunction(n) && (n = n(k.params)),
                                g.isDefined(n) && (k.loadedTemplateUrl = E.valueOf(n),
                                l = o(n)));
                                g.isDefined(l) && (m.$template = l);
                                return B.all(m)
                            }
                        }).then(function(l) {
                            k == I.current && (k && (k.locals = l,
                            g.copy(k.params, C)),
                            D.$broadcast("$routeChangeSuccess", k, h))
                        }, function(l) {
                            k == I.current && D.$broadcast("$routeChangeError", k, h, l)
                        })
                    }
                }
            }
            function y() {
                var k, h;
                g.forEach(i, function(M, L) {
                    var s;
                    if (s = !h) {
                        var K = A.path();
                        s = M.keys;
                        var x = {};
                        if (M.regexp) {
                            if (K = M.regexp.exec(K)) {
                                for (var J = 1, w = K.length; J < w; ++J) {
                                    var v = s[J - 1]
                                      , t = K[J];
                                    v && t && (x[v.name] = t)
                                }
                                s = x
                            } else {
                                s = null
                            }
                        } else {
                            s = null
                        }
                        s = k = s
                    }
                    s && (h = j(M, {
                        params: g.extend({}, A.search(), k),
                        pathParams: k
                    }),
                    h.$$route = M)
                });
                return h || i[null] && j(i[null], {
                    params: {},
                    pathParams: {}
                })
            }
            function H(k, h) {
                var l = [];
                g.forEach((k || "").split(":"), function(m, s) {
                    if (0 === s) {
                        l.push(m)
                    } else {
                        var p = m.match(/(\w+)(?:[?*])?(.*)/)
                          , n = p[1];
                        l.push(h[n]);
                        l.push(p[2] || "");
                        delete h[n]
                    }
                });
                return l.join("")
            }
            var F = !1, q, G, I = {
                routes: i,
                reload: function() {
                    F = !0;
                    D.$evalAsync(function() {
                        u();
                        r()
                    })
                },
                updateParams: function(h) {
                    if (this.current && this.current.$$route) {
                        h = g.extend({}, this.current.params, h),
                        A.path(H(this.current.$$route.originalPath, h)),
                        A.search(h)
                    } else {
                        throw f("norout")
                    }
                }
            };
            D.$on("$locationChangeStart", u);
            D.$on("$locationChangeSuccess", r);
            return I
        }
        ]
    });
    var f = g.$$minErr("ngRoute");
    d.provider("$routeParams", function() {
        this.$get = function() {
            return {}
        }
    });
    d.directive("ngView", b);
    d.directive("ngView", a);
    b.$inject = ["$route", "$anchorScroll", "$animate"];
    a.$inject = ["$compile", "$controller", "$route"]
}
)(window, window.angular);
(function(ad, ae, ac) {
    function U(g) {
        var h = [];
        Y(h, ae.noop).chars(g);
        return h.join("")
    }
    function af(h, n) {
        var p = {}, q = h.split(","), g;
        for (g = 0; g < q.length; g++) {
            p[n ? ae.lowercase(q[g]) : q[g]] = !0
        }
        return p
    }
    function S(u, p) {
        function r(y, w, z, x) {
            w = ae.lowercase(w);
            if (W[w]) {
                for (; q.last() && T[q.last()]; ) {
                    s("", q.last())
                }
            }
            R[w] && q.last() == w && s("", w);
            (x = P[w] || !!x) || q.push(w);
            var v = {};
            z.replace(Q, function(A, B, C, E, D) {
                v[B] = aa(C || E || D || "")
            });
            p.start && p.start(w, v, x)
        }
        function s(v, w) {
            var y = 0, x;
            if (w = ae.lowercase(w)) {
                for (y = q.length - 1; 0 <= y && q[y] != w; y--) {}
            }
            if (0 <= y) {
                for (x = q.length - 1; x >= y; x--) {
                    p.end && p.end(q[x])
                }
                q.length = y
            }
        }
        "string" !== typeof u && (u = null === u || "undefined" === typeof u ? "" : "" + u);
        var t, n, q = [], g = u, h;
        for (q.last = function() {
            return q[q.length - 1]
        }
        ; u; ) {
            h = "";
            n = !0;
            if (q.last() && m[q.last()]) {
                u = u.replace(new RegExp("([\\W\\w]*)<\\s*\\/\\s*" + q.last() + "[^>]*>","i"), function(w, v) {
                    v = v.replace(o, "$1").replace(k, "$1");
                    p.chars && p.chars(aa(v));
                    return ""
                }),
                s("", q.last())
            } else {
                if (0 === u.indexOf("\x3c!--")) {
                    t = u.indexOf("--", 4),
                    0 <= t && u.lastIndexOf("--\x3e", t) === t && (p.comment && p.comment(u.substring(4, t)),
                    u = u.substring(t + 3),
                    n = !1)
                } else {
                    if (l.test(u)) {
                        if (t = u.match(l)) {
                            u = u.replace(t[0], ""),
                            n = !1
                        }
                    } else {
                        if (i.test(u)) {
                            if (t = u.match(j)) {
                                u = u.substring(t[0].length),
                                t[0].replace(j, s),
                                n = !1
                            }
                        } else {
                            e.test(u) && ((t = u.match(f)) ? (t[4] && (u = u.substring(t[0].length),
                            t[0].replace(f, r)),
                            n = !1) : (h += "<",
                            u = u.substring(1)))
                        }
                    }
                }
                n && (t = u.indexOf("<"),
                h += 0 > t ? u : u.substring(0, t),
                u = 0 > t ? "" : u.substring(t),
                p.chars && p.chars(aa(h)))
            }
            if (u == g) {
                throw d("badparse", u)
            }
            g = u
        }
        s()
    }
    function aa(g) {
        if (!g) {
            return ""
        }
        ab.innerHTML = g.replace(/</g, "&lt;");
        return ab.textContent
    }
    function Z(g) {
        return g.replace(/&/g, "&amp;").replace(c, function(h) {
            var n = h.charCodeAt(0);
            h = h.charCodeAt(1);
            return "&#" + (1024 * (n - 55296) + (h - 56320) + 65536) + ";"
        }).replace(b, function(h) {
            return "&#" + h.charCodeAt(0) + ";"
        }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
    }
    function Y(g, h) {
        var n = !1
          , p = ae.bind(g, g.push);
        return {
            start: function(q, r, s) {
                q = ae.lowercase(q);
                !n && m[q] && (n = q);
                n || !0 !== X[q] || (p("<"),
                p(q),
                ae.forEach(r, function(w, v) {
                    var t = ae.lowercase(v)
                      , u = "img" === q && "src" === t || "background" === t;
                    !0 !== a[t] || !0 === V[t] && !h(w, u) || (p(" "),
                    p(v),
                    p('="'),
                    p(Z(w)),
                    p('"'))
                }),
                p(s ? "/>" : ">"))
            },
            end: function(q) {
                q = ae.lowercase(q);
                n || !0 !== X[q] || (p("</"),
                p(q),
                p(">"));
                q == n && (n = !1)
            },
            chars: function(q) {
                n || p(Z(q))
            }
        }
    }
    var d = ae.$$minErr("$sanitize")
      , f = /^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/
      , j = /^<\/\s*([\w:-]+)[^>]*>/
      , Q = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g
      , e = /^</
      , i = /^<\//
      , o = /\x3c!--(.*?)--\x3e/g
      , l = /<!DOCTYPE([^>]*?)>/i
      , k = /<!\[CDATA\[(.*?)]]\x3e/g
      , c = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g
      , b = /([^\#-~| |!])/g
      , P = af("area,br,col,hr,img,wbr");
    ad = af("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr");
    ac = af("rp,rt");
    var R = ae.extend({}, ac, ad)
      , W = ae.extend({}, ad, af("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul"))
      , T = ae.extend({}, ac, af("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var"));
    ad = af("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan,use");
    var m = af("script,style")
      , X = ae.extend({}, P, W, T, R, ad)
      , V = af("background,cite,href,longdesc,src,usemap,xlink:href");
    ad = af("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width");
    ac = af("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan", !0);
    var a = ae.extend({}, V, ac, ad)
      , ab = document.createElement("pre");
    ae.module("ngSanitize", []).provider("$sanitize", function() {
        this.$get = ["$$sanitizeUri", function(g) {
            return function(h) {
                var n = [];
                S(h, Y(n, function(q, p) {
                    return !/^unsafe/.test(g(q, p))
                }));
                return n.join("")
            }
        }
        ]
    });
    ae.module("ngSanitize").filter("linky", ["$sanitize", function(g) {
        var h = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i
          , n = /^mailto:/i;
        return function(x, y) {
            function u(p) {
                p && v.push(U(p))
            }
            function w(p, z) {
                v.push("<a ");
                ae.isDefined(y) && v.push('target="', y, '" ');
                v.push('href="', p.replace(/"/g, "&quot;"), '">');
                u(z);
                v.push("</a>")
            }
            if (!x) {
                return x
            }
            for (var s, t = x, v = [], r, q; s = t.match(h); ) {
                r = s[0],
                s[2] || s[4] || (r = (s[3] ? "http://" : "mailto:") + r),
                q = s.index,
                u(t.substr(0, q)),
                w(r, s[0].replace(n, "")),
                t = t.substring(q + s[0].length)
            }
            u(t);
            return g(v.join(""))
        }
    }
    ])
}
)(window, window.angular);
(function(d, c, b) {
    function a(e, g, i) {
        var j = i.baseHref()
          , h = e[0];
        return function(k, o, n) {
            var m, l;
            n = n || {};
            l = n.expires;
            m = c.isDefined(n.path) ? n.path : j;
            o === b && (l = "Thu, 01 Jan 1970 00:00:00 GMT",
            o = "");
            c.isString(l) && (l = new Date(l));
            o = encodeURIComponent(k) + "=" + encodeURIComponent(o);
            o = o + (m ? ";path=" + m : "") + (n.domain ? ";domain=" + n.domain : "");
            o += l ? ";expires=" + l.toUTCString() : "";
            o += n.secure ? ";secure" : "";
            n = o.length + 1;
            4096 < n && g.warn("Cookie '" + k + "' possibly not set or overflowed because it was too large (" + n + " > 4096 bytes)!");
            h.cookie = o
        }
    }
    c.module("ngCookies", ["ng"]).provider("$cookies", [function() {
        var e = this.defaults = {};
        this.$get = ["$$cookieReader", "$$cookieWriter", function(g, h) {
            return {
                get: function(f) {
                    return g()[f]
                },
                getObject: function(f) {
                    return (f = this.get(f)) ? c.fromJson(f) : f
                },
                getAll: function() {
                    return g()
                },
                put: function(j, f, i) {
                    h(j, f, i ? c.extend({}, e, i) : e)
                },
                putObject: function(j, f, i) {
                    this.put(j, c.toJson(f), i)
                },
                remove: function(f, i) {
                    h(f, b, i ? c.extend({}, e, i) : e)
                }
            }
        }
        ]
    }
    ]);
    c.module("ngCookies").factory("$cookieStore", ["$cookies", function(e) {
        return {
            get: function(f) {
                return e.getObject(f)
            },
            put: function(g, h) {
                e.putObject(g, h)
            },
            remove: function(f) {
                e.remove(f)
            }
        }
    }
    ]);
    a.$inject = ["$document", "$log", "$browser"];
    c.module("ngCookies").provider("$$cookieWriter", function() {
        this.$get = a
    })
}
)(window, window.angular);
(function(a) {
    angular.module("tmh.dynamicLocale", []).config(["$provide", function(c) {
        function b(d) {
            d.$stateful = true;
            return d
        }
        c.decorator("dateFilter", ["$delegate", b]);
        c.decorator("numberFilter", ["$delegate", b]);
        c.decorator("currencyFilter", ["$delegate", b])
    }
    ]).constant("tmhDynamicLocale.STORAGE_KEY", "tmhDynamicLocale.locale").provider("tmhDynamicLocale", ["tmhDynamicLocale.STORAGE_KEY", function(j) {
        var k, h = "/lang/{{locale}}/angular-locale.js", d = "tmhDynamicLocaleStorageCache", f, i = j, e = {}, g;
        function b(o, r, n, p) {
            var m = document.createElement("script")
              , l = document.getElementsByTagName("body")[0]
              , q = false;
            m.type = "text/javascript";
            if (m.readyState) {
                m.onreadystatechange = function() {
                    if (m.readyState === "complete" || m.readyState === "loaded") {
                        m.onreadystatechange = null;
                        p(function() {
                            if (q) {
                                return
                            }
                            q = true;
                            l.removeChild(m);
                            r()
                        }, 30, false)
                    }
                }
            } else {
                m.onload = function() {
                    if (q) {
                        return
                    }
                    q = true;
                    l.removeChild(m);
                    r()
                }
                ;
                m.onerror = function() {
                    if (q) {
                        return
                    }
                    q = true;
                    l.removeChild(m);
                    n()
                }
            }
            m.src = o;
            m.async = false;
            l.appendChild(m)
        }
        function c(p, n, q, r, o, l, m) {
            function u(v, w) {
                if (g !== q) {
                    return
                }
                angular.forEach(v, function(y, x) {
                    if (!w[x]) {
                        delete v[x]
                    } else {
                        if (angular.isArray(w[x])) {
                            v[x].length = w[x].length
                        }
                    }
                });
                angular.forEach(w, function(y, x) {
                    if (angular.isArray(w[x]) || angular.isObject(w[x])) {
                        if (!v[x]) {
                            v[x] = angular.isArray(w[x]) ? [] : {}
                        }
                        u(v[x], w[x])
                    } else {
                        v[x] = w[x]
                    }
                })
            }
            if (e[q]) {
                return e[q]
            }
            var t, s = o.defer();
            if (q === g) {
                s.resolve(n)
            } else {
                if ((t = l.get(q))) {
                    g = q;
                    r.$evalAsync(function() {
                        u(n, t);
                        r.$broadcast("$localeChangeSuccess", q, n);
                        f.put(i, q);
                        s.resolve(n)
                    })
                } else {
                    g = q;
                    e[q] = s.promise;
                    b(p, function() {
                        var v = angular.injector(["ngLocale"])
                          , w = v.get("$locale");
                        u(n, w);
                        l.put(q, w);
                        delete e[q];
                        r.$apply(function() {
                            r.$broadcast("$localeChangeSuccess", q, n);
                            f.put(i, q);
                            s.resolve(n)
                        })
                    }, function() {
                        delete e[q];
                        r.$apply(function() {
                            if (g === q) {
                                g = n.id
                            }
                            r.$broadcast("$localeChangeError", q);
                            s.reject(q)
                        })
                    }, m)
                }
            }
            return s.promise
        }
        this.localeLocationPattern = function(l) {
            if (l) {
                h = l;
                return this
            } else {
                return h
            }
        }
        ;
        this.useStorage = function(l) {
            d = l
        }
        ;
        this.useCookieStorage = function() {
            this.useStorage("$cookieStore")
        }
        ;
        this.defaultLocale = function(l) {
            k = l
        }
        ;
        this.storageKey = function(l) {
            if (l) {
                i = l;
                return this
            } else {
                return i
            }
        }
        ;
        this.$get = ["$rootScope", "$injector", "$interpolate", "$locale", "$q", "tmhDynamicLocaleCache", "$timeout", function(m, r, p, l, n, o, q) {
            var s = p(h);
            f = r.get(d);
            m.$evalAsync(function() {
                var t;
                if ((t = (f.get(i) || k))) {
                    c(s({
                        locale: t
                    }), l, t, m, n, o, q)
                }
            });
            return {
                set: function(t) {
                    return c(s({
                        locale: t
                    }), l, t, m, n, o, q)
                },
                get: function() {
                    return g
                }
            }
        }
        ]
    }
    ]).provider("tmhDynamicLocaleCache", function() {
        this.$get = ["$cacheFactory", function(b) {
            return b("tmh.dynamicLocales")
        }
        ]
    }).provider("tmhDynamicLocaleStorageCache", function() {
        this.$get = ["$cacheFactory", function(b) {
            return b("tmh.dynamicLocales.store")
        }
        ]
    }).run(["tmhDynamicLocale", angular.noop])
}(window));
/*! jQuery v2.1.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
;!function(d, c) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = d.document ? c(d, !0) : function(b) {
        if (!b.document) {
            throw new Error("jQuery requires a window with a document")
        }
        return c(b)
    }
    : c(d)
}("undefined" != typeof window ? window : this, function(a, b) {
    var c = []
      , d = c.slice
      , e = c.concat
      , f = c.push
      , g = c.indexOf
      , h = {}
      , i = h.toString
      , j = h.hasOwnProperty
      , k = {}
      , l = a.document
      , m = "2.1.1"
      , n = function(a, b) {
        return new n.fn.init(a,b)
    }
      , o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
      , p = /^-ms-/
      , q = /-([\da-z])/gi
      , r = function(a, b) {
        return b.toUpperCase()
    };
    n.fn = n.prototype = {
        jquery: m,
        constructor: n,
        selector: "",
        length: 0,
        toArray: function() {
            return d.call(this)
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[a] : d.call(this)
        },
        pushStack: function(a) {
            var b = n.merge(this.constructor(), a);
            return b.prevObject = this,
            b.context = this.context,
            b
        },
        each: function(a, b) {
            return n.each(this, a, b)
        },
        map: function(a) {
            return this.pushStack(n.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        slice: function() {
            return this.pushStack(d.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(a) {
            var b = this.length
              , c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [this[c]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: f,
        sort: c.sort,
        splice: c.splice
    },
    n.extend = n.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1;
        for ("boolean" == typeof g && (j = g,
        g = arguments[h] || {},
        h++),
        "object" == typeof g || n.isFunction(g) || (g = {}),
        h === i && (g = this,
        h--); i > h; h++) {
            if (null != (a = arguments[h])) {
                for (b in a) {
                    c = g[b],
                    d = a[b],
                    g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1,
                    f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {},
                    g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d))
                }
            }
        }
        return g
    }
    ,
    n.extend({
        expando: "jQuery" + (m + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a)
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === n.type(a)
        },
        isArray: Array.isArray,
        isWindow: function(a) {
            return null != a && a === a.window
        },
        isNumeric: function(a) {
            return !n.isArray(a) && a - parseFloat(a) >= 0
        },
        isPlainObject: function(a) {
            return "object" !== n.type(a) || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) {
                return !1
            }
            return !0
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a
        },
        globalEval: function(a) {
            var b, c = eval;
            a = n.trim(a),
            a && (1 === a.indexOf("use strict") ? (b = l.createElement("script"),
            b.text = a,
            l.head.appendChild(b).parentNode.removeChild(b)) : c(a))
        },
        camelCase: function(a) {
            return a.replace(p, "ms-").replace(q, r)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
        },
        each: function(a, b, c) {
            var d, e = 0, f = a.length, g = s(a);
            if (c) {
                if (g) {
                    for (; f > e; e++) {
                        if (d = b.apply(a[e], c),
                        d === !1) {
                            break
                        }
                    }
                } else {
                    for (e in a) {
                        if (d = b.apply(a[e], c),
                        d === !1) {
                            break
                        }
                    }
                }
            } else {
                if (g) {
                    for (; f > e; e++) {
                        if (d = b.call(a[e], e, a[e]),
                        d === !1) {
                            break
                        }
                    }
                } else {
                    for (e in a) {
                        if (d = b.call(a[e], e, a[e]),
                        d === !1) {
                            break
                        }
                    }
                }
            }
            return a
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(o, "")
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [a] : a) : f.call(c, a)),
            c
        },
        inArray: function(a, b, c) {
            return null == b ? -1 : g.call(b, a, c)
        },
        merge: function(a, b) {
            for (var c = +b.length, d = 0, e = a.length; c > d; d++) {
                a[e++] = b[d]
            }
            return a.length = e,
            a
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) {
                d = !b(a[f], f),
                d !== h && e.push(a[f])
            }
            return e
        },
        map: function(a, b, c) {
            var d, f = 0, g = a.length, h = s(a), i = [];
            if (h) {
                for (; g > f; f++) {
                    d = b(a[f], f, c),
                    null != d && i.push(d)
                }
            } else {
                for (f in a) {
                    d = b(a[f], f, c),
                    null != d && i.push(d)
                }
            }
            return e.apply([], i)
        },
        guid: 1,
        proxy: function(a, b) {
            var c, e, f;
            return "string" == typeof b && (c = a[b],
            b = a,
            a = c),
            n.isFunction(a) ? (e = d.call(arguments, 2),
            f = function() {
                return a.apply(b || this, e.concat(d.call(arguments)))
            }
            ,
            f.guid = a.guid = a.guid || n.guid++,
            f) : void 0
        },
        now: Date.now,
        support: k
    }),
    n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        h["[object " + b + "]"] = b.toLowerCase()
    });
    function s(a) {
        var b = a.length
          , c = n.type(a);
        return "function" === c || n.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
    }
    var t = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + -new Date, v = a.document, w = 0, x = 0, y = gb(), z = gb(), A = gb(), B = function(a, b) {
            return a === b && (l = !0),
            0
        }, C = "undefined", D = 1 << 31, E = {}.hasOwnProperty, F = [], G = F.pop, H = F.push, I = F.push, J = F.slice, K = F.indexOf || function(a) {
            for (var b = 0, c = this.length; c > b; b++) {
                if (this[b] === a) {
                    return b
                }
            }
            return -1
        }
        , L = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", M = "[\\x20\\t\\r\\n\\f]", N = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", O = N.replace("w", "w#"), P = "\\[" + M + "*(" + N + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + O + "))|)" + M + "*\\]", Q = ":(" + N + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + P + ")*)|.*)\\)|)", R = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$","g"), S = new RegExp("^" + M + "*," + M + "*"), T = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"), U = new RegExp("=" + M + "*([^\\]'\"]*?)" + M + "*\\]","g"), V = new RegExp(Q), W = new RegExp("^" + O + "$"), X = {
            ID: new RegExp("^#(" + N + ")"),
            CLASS: new RegExp("^\\.(" + N + ")"),
            TAG: new RegExp("^(" + N.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + P),
            PSEUDO: new RegExp("^" + Q),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)","i"),
            bool: new RegExp("^(?:" + L + ")$","i"),
            needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)","i")
        }, Y = /^(?:input|select|textarea|button)$/i, Z = /^h\d$/i, $ = /^[^{]+\{\s*\[native \w/, _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ab = /[+~]/, bb = /'|\\/g, cb = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)","ig"), db = function(a, b, c) {
            var d = "0x" + b - 65536;
            return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320)
        };
        try {
            I.apply(F = J.call(v.childNodes), v.childNodes),
            F[v.childNodes.length].nodeType
        } catch (eb) {
            I = {
                apply: F.length ? function(a, b) {
                    H.apply(a, J.call(b))
                }
                : function(a, b) {
                    var c = a.length
                      , d = 0;
                    while (a[c++] = b[d++]) {}
                    a.length = c - 1
                }
            }
        }
        function fb(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b),
            b = b || n,
            d = d || [],
            !a || "string" != typeof a) {
                return d
            }
            if (1 !== (k = b.nodeType) && 9 !== k) {
                return []
            }
            if (p && !e) {
                if (f = _.exec(a)) {
                    if (j = f[1]) {
                        if (9 === k) {
                            if (h = b.getElementById(j),
                            !h || !h.parentNode) {
                                return d
                            }
                            if (h.id === j) {
                                return d.push(h),
                                d
                            }
                        } else {
                            if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) {
                                return d.push(h),
                                d
                            }
                        }
                    } else {
                        if (f[2]) {
                            return I.apply(d, b.getElementsByTagName(a)),
                            d
                        }
                        if ((j = f[3]) && c.getElementsByClassName && b.getElementsByClassName) {
                            return I.apply(d, b.getElementsByClassName(j)),
                            d
                        }
                    }
                }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u,
                    w = b,
                    x = 9 === k && a,
                    1 === k && "object" !== b.nodeName.toLowerCase()) {
                        o = g(a),
                        (r = b.getAttribute("id")) ? s = r.replace(bb, "\\$&") : b.setAttribute("id", s),
                        s = "[id='" + s + "'] ",
                        l = o.length;
                        while (l--) {
                            o[l] = s + qb(o[l])
                        }
                        w = ab.test(a) && ob(b.parentNode) || b,
                        x = o.join(",")
                    }
                    if (x) {
                        try {
                            return I.apply(d, w.querySelectorAll(x)),
                            d
                        } catch (y) {} finally {
                            r || b.removeAttribute("id")
                        }
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e)
        }
        function gb() {
            var a = [];
            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()],
                b[c + " "] = e
            }
            return b
        }
        function hb(a) {
            return a[u] = !0,
            a
        }
        function ib(a) {
            var b = n.createElement("div");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b),
                b = null
            }
        }
        function jb(a, b) {
            var c = a.split("|")
              , e = a.length;
            while (e--) {
                d.attrHandle[c[e]] = b
            }
        }
        function kb(a, b) {
            var c = b && a
              , d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || D) - (~a.sourceIndex || D);
            if (d) {
                return d
            }
            if (c) {
                while (c = c.nextSibling) {
                    if (c === b) {
                        return -1
                    }
                }
            }
            return a ? 1 : -1
        }
        function lb(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a
            }
        }
        function mb(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a
            }
        }
        function nb(a) {
            return hb(function(b) {
                return b = +b,
                hb(function(c, d) {
                    var e, f = a([], c.length, b), g = f.length;
                    while (g--) {
                        c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                    }
                })
            })
        }
        function ob(a) {
            return a && typeof a.getElementsByTagName !== C && a
        }
        c = fb.support = {},
        f = fb.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1
        }
        ,
        m = fb.setDocument = function(a) {
            var b, e = a ? a.ownerDocument || a : v, g = e.defaultView;
            return e !== n && 9 === e.nodeType && e.documentElement ? (n = e,
            o = e.documentElement,
            p = !f(e),
            g && g !== g.top && (g.addEventListener ? g.addEventListener("unload", function() {
                m()
            }, !1) : g.attachEvent && g.attachEvent("onunload", function() {
                m()
            })),
            c.attributes = ib(function(a) {
                return a.className = "i",
                !a.getAttribute("className")
            }),
            c.getElementsByTagName = ib(function(a) {
                return a.appendChild(e.createComment("")),
                !a.getElementsByTagName("*").length
            }),
            c.getElementsByClassName = $.test(e.getElementsByClassName) && ib(function(a) {
                return a.innerHTML = "<div class='a'></div><div class='a i'></div>",
                a.firstChild.className = "i",
                2 === a.getElementsByClassName("i").length
            }),
            c.getById = ib(function(a) {
                return o.appendChild(a).id = u,
                !e.getElementsByName || !e.getElementsByName(u).length
            }),
            c.getById ? (d.find.ID = function(a, b) {
                if (typeof b.getElementById !== C && p) {
                    var c = b.getElementById(a);
                    return c && c.parentNode ? [c] : []
                }
            }
            ,
            d.filter.ID = function(a) {
                var b = a.replace(cb, db);
                return function(a) {
                    return a.getAttribute("id") === b
                }
            }
            ) : (delete d.find.ID,
            d.filter.ID = function(a) {
                var b = a.replace(cb, db);
                return function(a) {
                    var c = typeof a.getAttributeNode !== C && a.getAttributeNode("id");
                    return c && c.value === b
                }
            }
            ),
            d.find.TAG = c.getElementsByTagName ? function(a, b) {
                return typeof b.getElementsByTagName !== C ? b.getElementsByTagName(a) : void 0
            }
            : function(a, b) {
                var c, d = [], e = 0, f = b.getElementsByTagName(a);
                if ("*" === a) {
                    while (c = f[e++]) {
                        1 === c.nodeType && d.push(c)
                    }
                    return d
                }
                return f
            }
            ,
            d.find.CLASS = c.getElementsByClassName && function(a, b) {
                return typeof b.getElementsByClassName !== C && p ? b.getElementsByClassName(a) : void 0
            }
            ,
            r = [],
            q = [],
            (c.qsa = $.test(e.querySelectorAll)) && (ib(function(a) {
                a.innerHTML = "<select msallowclip=''><option selected=''></option></select>",
                a.querySelectorAll("[msallowclip^='']").length && q.push("[*^$]=" + M + "*(?:''|\"\")"),
                a.querySelectorAll("[selected]").length || q.push("\\[" + M + "*(?:value|" + L + ")"),
                a.querySelectorAll(":checked").length || q.push(":checked")
            }),
            ib(function(a) {
                var b = e.createElement("input");
                b.setAttribute("type", "hidden"),
                a.appendChild(b).setAttribute("name", "D"),
                a.querySelectorAll("[name=d]").length && q.push("name" + M + "*[*^$|!~]?="),
                a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"),
                a.querySelectorAll("*,:x"),
                q.push(",.*:")
            })),
            (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ib(function(a) {
                c.disconnectedMatch = s.call(a, "div"),
                s.call(a, "[s!='']:x"),
                r.push("!=", Q)
            }),
            q = q.length && new RegExp(q.join("|")),
            r = r.length && new RegExp(r.join("|")),
            b = $.test(o.compareDocumentPosition),
            t = b || $.test(o.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a
                  , d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
            }
            : function(a, b) {
                if (b) {
                    while (b = b.parentNode) {
                        if (b === a) {
                            return !0
                        }
                    }
                }
                return !1
            }
            ,
            B = b ? function(a, b) {
                if (a === b) {
                    return l = !0,
                    0
                }
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1,
                1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === e || a.ownerDocument === v && t(v, a) ? -1 : b === e || b.ownerDocument === v && t(v, b) ? 1 : k ? K.call(k, a) - K.call(k, b) : 0 : 4 & d ? -1 : 1)
            }
            : function(a, b) {
                if (a === b) {
                    return l = !0,
                    0
                }
                var c, d = 0, f = a.parentNode, g = b.parentNode, h = [a], i = [b];
                if (!f || !g) {
                    return a === e ? -1 : b === e ? 1 : f ? -1 : g ? 1 : k ? K.call(k, a) - K.call(k, b) : 0
                }
                if (f === g) {
                    return kb(a, b)
                }
                c = a;
                while (c = c.parentNode) {
                    h.unshift(c)
                }
                c = b;
                while (c = c.parentNode) {
                    i.unshift(c)
                }
                while (h[d] === i[d]) {
                    d++
                }
                return d ? kb(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0
            }
            ,
            e) : n
        }
        ,
        fb.matches = function(a, b) {
            return fb(a, null, null, b)
        }
        ,
        fb.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a),
            b = b.replace(U, "='$1']"),
            !(!c.matchesSelector || !p || r && r.test(b) || q && q.test(b))) {
                try {
                    var d = s.call(a, b);
                    if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) {
                        return d
                    }
                } catch (e) {}
            }
            return fb(b, n, null, [a]).length > 0
        }
        ,
        fb.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a),
            t(a, b)
        }
        ,
        fb.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()]
              , f = e && E.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null
        }
        ,
        fb.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }
        ,
        fb.uniqueSort = function(a) {
            var b, d = [], e = 0, f = 0;
            if (l = !c.detectDuplicates,
            k = !c.sortStable && a.slice(0),
            a.sort(B),
            l) {
                while (b = a[f++]) {
                    b === a[f] && (e = d.push(f))
                }
                while (e--) {
                    a.splice(d[e], 1)
                }
            }
            return k = null,
            a
        }
        ,
        e = fb.getText = function(a) {
            var b, c = "", d = 0, f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) {
                        return a.textContent
                    }
                    for (a = a.firstChild; a; a = a.nextSibling) {
                        c += e(a)
                    }
                } else {
                    if (3 === f || 4 === f) {
                        return a.nodeValue
                    }
                }
            } else {
                while (b = a[d++]) {
                    c += e(b)
                }
            }
            return c
        }
        ,
        d = fb.selectors = {
            cacheLength: 50,
            createPseudo: hb,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(cb, db),
                    a[3] = (a[3] || a[4] || a[5] || "").replace(cb, db),
                    "~=" === a[2] && (a[3] = " " + a[3] + " "),
                    a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(),
                    "nth" === a[1].slice(0, 3) ? (a[3] || fb.error(a[0]),
                    a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])),
                    a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && fb.error(a[0]),
                    a
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return X.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b),
                    a[2] = c.slice(0, b)),
                    a.slice(0, 3))
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(cb, db).toLowerCase();
                    return "*" === a ? function() {
                        return !0
                    }
                    : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b
                    }
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + M + ")" + a + "(" + M + "|$)")) && y(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || typeof a.getAttribute !== C && a.getAttribute("class") || "")
                    })
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = fb.attr(d, a);
                        return null == e ? "!=" === b : b ? (e += "",
                        "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0
                    }
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3)
                      , g = "last" !== a.slice(-4)
                      , h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode
                    }
                    : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase(), s = !i && !h;
                        if (q) {
                            if (f) {
                                while (p) {
                                    l = b;
                                    while (l = l[p]) {
                                        if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) {
                                            return !1
                                        }
                                    }
                                    o = p = "only" === a && !o && "nextSibling"
                                }
                                return !0
                            }
                            if (o = [g ? q.firstChild : q.lastChild],
                            g && s) {
                                k = q[u] || (q[u] = {}),
                                j = k[a] || [],
                                n = j[0] === w && j[1],
                                m = j[0] === w && j[2],
                                l = n && q.childNodes[n];
                                while (l = ++n && l && l[p] || (m = n = 0) || o.pop()) {
                                    if (1 === l.nodeType && ++m && l === b) {
                                        k[a] = [w, n, m];
                                        break
                                    }
                                }
                            } else {
                                if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w) {
                                    m = j[1]
                                } else {
                                    while (l = ++n && l && l[p] || (m = n = 0) || o.pop()) {
                                        if ((h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) && ++m && (s && ((l[u] || (l[u] = {}))[a] = [w, m]),
                                        l === b)) {
                                            break
                                        }
                                    }
                                }
                            }
                            return m -= e,
                            m === d || m % d === 0 && m / d >= 0
                        }
                    }
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || fb.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b],
                    d.setFilters.hasOwnProperty(a.toLowerCase()) ? hb(function(a, c) {
                        var d, f = e(a, b), g = f.length;
                        while (g--) {
                            d = K.call(a, f[g]),
                            a[d] = !(c[d] = f[g])
                        }
                    }) : function(a) {
                        return e(a, 0, c)
                    }
                    ) : e
                }
            },
            pseudos: {
                not: hb(function(a) {
                    var b = []
                      , c = []
                      , d = h(a.replace(R, "$1"));
                    return d[u] ? hb(function(a, b, c, e) {
                        var f, g = d(a, null, e, []), h = a.length;
                        while (h--) {
                            (f = g[h]) && (a[h] = !(b[h] = f))
                        }
                    }) : function(a, e, f) {
                        return b[0] = a,
                        d(b, null, f, c),
                        !c.pop()
                    }
                }),
                has: hb(function(a) {
                    return function(b) {
                        return fb(a, b).length > 0
                    }
                }),
                contains: hb(function(a) {
                    return function(b) {
                        return (b.textContent || b.innerText || e(b)).indexOf(a) > -1
                    }
                }),
                lang: hb(function(a) {
                    return W.test(a || "") || fb.error("unsupported lang: " + a),
                    a = a.replace(cb, db).toLowerCase(),
                    function(b) {
                        var c;
                        do {
                            if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) {
                                return c = c.toLowerCase(),
                                c === a || 0 === c.indexOf(a + "-")
                            }
                        } while ((b = b.parentNode) && 1 === b.nodeType);
                        return !1
                    }
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                },
                root: function(a) {
                    return a === o
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                },
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex,
                    a.selected === !0
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling) {
                        if (a.nodeType < 6) {
                            return !1
                        }
                    }
                    return !0
                },
                parent: function(a) {
                    return !d.pseudos.empty(a)
                },
                header: function(a) {
                    return Z.test(a.nodeName)
                },
                input: function(a) {
                    return Y.test(a.nodeName)
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                },
                first: nb(function() {
                    return [0]
                }),
                last: nb(function(a, b) {
                    return [b - 1]
                }),
                eq: nb(function(a, b, c) {
                    return [0 > c ? c + b : c]
                }),
                even: nb(function(a, b) {
                    for (var c = 0; b > c; c += 2) {
                        a.push(c)
                    }
                    return a
                }),
                odd: nb(function(a, b) {
                    for (var c = 1; b > c; c += 2) {
                        a.push(c)
                    }
                    return a
                }),
                lt: nb(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; --d >= 0; ) {
                        a.push(d)
                    }
                    return a
                }),
                gt: nb(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; ++d < b; ) {
                        a.push(d)
                    }
                    return a
                })
            }
        },
        d.pseudos.nth = d.pseudos.eq;
        for (b in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) {
            d.pseudos[b] = lb(b)
        }
        for (b in {
            submit: !0,
            reset: !0
        }) {
            d.pseudos[b] = mb(b)
        }
        function pb() {}
        pb.prototype = d.filters = d.pseudos,
        d.setFilters = new pb,
        g = fb.tokenize = function(a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) {
                return b ? 0 : k.slice(0)
            }
            h = a,
            i = [],
            j = d.preFilter;
            while (h) {
                (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h),
                i.push(f = [])),
                c = !1,
                (e = T.exec(h)) && (c = e.shift(),
                f.push({
                    value: c,
                    type: e[0].replace(R, " ")
                }),
                h = h.slice(c.length));
                for (g in d.filter) {
                    !(e = X[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(),
                    f.push({
                        value: c,
                        type: g,
                        matches: e
                    }),
                    h = h.slice(c.length))
                }
                if (!c) {
                    break
                }
            }
            return b ? h.length : h ? fb.error(a) : z(a, i).slice(0)
        }
        ;
        function qb(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) {
                d += a[b].value
            }
            return d
        }
        function rb(a, b, c) {
            var d = b.dir
              , e = c && "parentNode" === d
              , f = x++;
            return b.first ? function(b, c, f) {
                while (b = b[d]) {
                    if (1 === b.nodeType || e) {
                        return a(b, c, f)
                    }
                }
            }
            : function(b, c, g) {
                var h, i, j = [w, f];
                if (g) {
                    while (b = b[d]) {
                        if ((1 === b.nodeType || e) && a(b, c, g)) {
                            return !0
                        }
                    }
                } else {
                    while (b = b[d]) {
                        if (1 === b.nodeType || e) {
                            if (i = b[u] || (b[u] = {}),
                            (h = i[d]) && h[0] === w && h[1] === f) {
                                return j[2] = h[2]
                            }
                            if (i[d] = j,
                            j[2] = a(b, c, g)) {
                                return !0
                            }
                        }
                    }
                }
            }
        }
        function sb(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--) {
                    if (!a[e](b, c, d)) {
                        return !1
                    }
                }
                return !0
            }
            : a[0]
        }
        function tb(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) {
                fb(a, b[d], c)
            }
            return c
        }
        function ub(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++) {
                (f = a[h]) && (!c || c(f, d, e)) && (g.push(f),
                j && b.push(h))
            }
            return g
        }
        function vb(a, b, c, d, e, f) {
            return d && !d[u] && (d = vb(d)),
            e && !e[u] && (e = vb(e, f)),
            hb(function(f, g, h, i) {
                var j, k, l, m = [], n = [], o = g.length, p = f || tb(b || "*", h.nodeType ? [h] : h, []), q = !a || !f && b ? p : ub(p, m, a, h, i), r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i),
                d) {
                    j = ub(r, n),
                    d(j, [], h, i),
                    k = j.length;
                    while (k--) {
                        (l = j[k]) && (r[n[k]] = !(q[n[k]] = l))
                    }
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [],
                            k = r.length;
                            while (k--) {
                                (l = r[k]) && j.push(q[k] = l)
                            }
                            e(null, r = [], j, i)
                        }
                        k = r.length;
                        while (k--) {
                            (l = r[k]) && (j = e ? K.call(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l))
                        }
                    }
                } else {
                    r = ub(r === g ? r.splice(o, r.length) : r),
                    e ? e(null, g, r, i) : I.apply(g, r)
                }
            })
        }
        function wb(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = rb(function(a) {
                return a === b
            }, h, !0), l = rb(function(a) {
                return K.call(b, a) > -1
            }, h, !0), m = [function(a, c, d) {
                return !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d))
            }
            ]; f > i; i++) {
                if (c = d.relative[a[i].type]) {
                    m = [rb(sb(m), c)]
                } else {
                    if (c = d.filter[a[i].type].apply(null, a[i].matches),
                    c[u]) {
                        for (e = ++i; f > e; e++) {
                            if (d.relative[a[e].type]) {
                                break
                            }
                        }
                        return vb(i > 1 && sb(m), i > 1 && qb(a.slice(0, i - 1).concat({
                            value: " " === a[i - 2].type ? "*" : ""
                        })).replace(R, "$1"), c, e > i && wb(a.slice(i, e)), f > e && wb(a = a.slice(e)), f > e && qb(a))
                    }
                    m.push(c)
                }
            }
            return sb(m)
        }
        function xb(a, b) {
            var c = b.length > 0
              , e = a.length > 0
              , f = function(f, g, h, i, k) {
                var l, m, o, p = 0, q = "0", r = f && [], s = [], t = j, u = f || e && d.find.TAG("*", k), v = w += null == t ? 1 : Math.random() || 0.1, x = u.length;
                for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
                    if (e && l) {
                        m = 0;
                        while (o = a[m++]) {
                            if (o(l, g, h)) {
                                i.push(l);
                                break
                            }
                        }
                        k && (w = v)
                    }
                    c && ((l = !o && l) && p--,
                    f && r.push(l))
                }
                if (p += q,
                c && q !== p) {
                    m = 0;
                    while (o = b[m++]) {
                        o(r, s, g, h)
                    }
                    if (f) {
                        if (p > 0) {
                            while (q--) {
                                r[q] || s[q] || (s[q] = G.call(i))
                            }
                        }
                        s = ub(s)
                    }
                    I.apply(i, s),
                    k && !f && s.length > 0 && p + b.length > 1 && fb.uniqueSort(i)
                }
                return k && (w = v,
                j = t),
                r
            };
            return c ? hb(f) : f
        }
        return h = fb.compile = function(a, b) {
            var c, d = [], e = [], f = A[a + " "];
            if (!f) {
                b || (b = g(a)),
                c = b.length;
                while (c--) {
                    f = wb(b[c]),
                    f[u] ? d.push(f) : e.push(f)
                }
                f = A(a, xb(e, d)),
                f.selector = a
            }
            return f
        }
        ,
        i = fb.select = function(a, b, e, f) {
            var i, j, k, l, m, n = "function" == typeof a && a, o = !f && g(a = n.selector || a);
            if (e = e || [],
            1 === o.length) {
                if (j = o[0] = o[0].slice(0),
                j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {
                    if (b = (d.find.ID(k.matches[0].replace(cb, db), b) || [])[0],
                    !b) {
                        return e
                    }
                    n && (b = b.parentNode),
                    a = a.slice(j.shift().value.length)
                }
                i = X.needsContext.test(a) ? 0 : j.length;
                while (i--) {
                    if (k = j[i],
                    d.relative[l = k.type]) {
                        break
                    }
                    if ((m = d.find[l]) && (f = m(k.matches[0].replace(cb, db), ab.test(j[0].type) && ob(b.parentNode) || b))) {
                        if (j.splice(i, 1),
                        a = f.length && qb(j),
                        !a) {
                            return I.apply(e, f),
                            e
                        }
                        break
                    }
                }
            }
            return (n || h(a, o))(f, b, !p, e, ab.test(a) && ob(b.parentNode) || b),
            e
        }
        ,
        c.sortStable = u.split("").sort(B).join("") === u,
        c.detectDuplicates = !!l,
        m(),
        c.sortDetached = ib(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("div"))
        }),
        ib(function(a) {
            return a.innerHTML = "<a href='#'></a>",
            "#" === a.firstChild.getAttribute("href")
        }) || jb("type|href|height|width", function(a, b, c) {
            return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
        }),
        c.attributes && ib(function(a) {
            return a.innerHTML = "<input/>",
            a.firstChild.setAttribute("value", ""),
            "" === a.firstChild.getAttribute("value")
        }) || jb("value", function(a, b, c) {
            return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue
        }),
        ib(function(a) {
            return null == a.getAttribute("disabled")
        }) || jb(L, function(a, b, c) {
            var d;
            return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
        }),
        fb
    }(a);
    n.find = t,
    n.expr = t.selectors,
    n.expr[":"] = n.expr.pseudos,
    n.unique = t.uniqueSort,
    n.text = t.getText,
    n.isXMLDoc = t.isXML,
    n.contains = t.contains;
    var u = n.expr.match.needsContext
      , v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/
      , w = /^.[^:#\[\.,]*$/;
    function x(a, b, c) {
        if (n.isFunction(b)) {
            return n.grep(a, function(a, d) {
                return !!b.call(a, d, a) !== c
            })
        }
        if (b.nodeType) {
            return n.grep(a, function(a) {
                return a === b !== c
            })
        }
        if ("string" == typeof b) {
            if (w.test(b)) {
                return n.filter(b, a, c)
            }
            b = n.filter(b, a)
        }
        return n.grep(a, function(a) {
            return g.call(b, a) >= 0 !== c
        })
    }
    n.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"),
        1 === b.length && 1 === d.nodeType ? n.find.matchesSelector(d, a) ? [d] : [] : n.find.matches(a, n.grep(b, function(a) {
            return 1 === a.nodeType
        }))
    }
    ,
    n.fn.extend({
        find: function(a) {
            var b, c = this.length, d = [], e = this;
            if ("string" != typeof a) {
                return this.pushStack(n(a).filter(function() {
                    for (b = 0; c > b; b++) {
                        if (n.contains(e[b], this)) {
                            return !0
                        }
                    }
                }))
            }
            for (b = 0; c > b; b++) {
                n.find(a, e[b], d)
            }
            return d = this.pushStack(c > 1 ? n.unique(d) : d),
            d.selector = this.selector ? this.selector + " " + a : a,
            d
        },
        filter: function(a) {
            return this.pushStack(x(this, a || [], !1))
        },
        not: function(a) {
            return this.pushStack(x(this, a || [], !0))
        },
        is: function(a) {
            return !!x(this, "string" == typeof a && u.test(a) ? n(a) : a || [], !1).length
        }
    });
    var y, z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, A = n.fn.init = function(a, b) {
        var c, d;
        if (!a) {
            return this
        }
        if ("string" == typeof a) {
            if (c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : z.exec(a),
            !c || !c[1] && b) {
                return !b || b.jquery ? (b || y).find(a) : this.constructor(b).find(a)
            }
            if (c[1]) {
                if (b = b instanceof n ? b[0] : b,
                n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)),
                v.test(c[1]) && n.isPlainObject(b)) {
                    for (c in b) {
                        n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c])
                    }
                }
                return this
            }
            return d = l.getElementById(c[2]),
            d && d.parentNode && (this.length = 1,
            this[0] = d),
            this.context = l,
            this.selector = a,
            this
        }
        return a.nodeType ? (this.context = this[0] = a,
        this.length = 1,
        this) : n.isFunction(a) ? "undefined" != typeof y.ready ? y.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector,
        this.context = a.context),
        n.makeArray(a, this))
    }
    ;
    A.prototype = n.fn,
    y = n(l);
    var B = /^(?:parents|prev(?:Until|All))/
      , C = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    n.extend({
        dir: function(a, b, c) {
            var d = []
              , e = void 0 !== c;
            while ((a = a[b]) && 9 !== a.nodeType) {
                if (1 === a.nodeType) {
                    if (e && n(a).is(c)) {
                        break
                    }
                    d.push(a)
                }
            }
            return d
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) {
                1 === a.nodeType && a !== b && c.push(a)
            }
            return c
        }
    }),
    n.fn.extend({
        has: function(a) {
            var b = n(a, this)
              , c = b.length;
            return this.filter(function() {
                for (var a = 0; c > a; a++) {
                    if (n.contains(this, b[a])) {
                        return !0
                    }
                }
            })
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = u.test(a) || "string" != typeof a ? n(a, b || this.context) : 0; e > d; d++) {
                for (c = this[d]; c && c !== b; c = c.parentNode) {
                    if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && n.find.matchesSelector(c, a))) {
                        f.push(c);
                        break
                    }
                }
            }
            return this.pushStack(f.length > 1 ? n.unique(f) : f)
        },
        index: function(a) {
            return a ? "string" == typeof a ? g.call(n(a), this[0]) : g.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(a, b) {
            return this.pushStack(n.unique(n.merge(this.get(), n(a, b))))
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
        }
    });
    function D(a, b) {
        while ((a = a[b]) && 1 !== a.nodeType) {}
        return a
    }
    n.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null
        },
        parents: function(a) {
            return n.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return n.dir(a, "parentNode", c)
        },
        next: function(a) {
            return D(a, "nextSibling")
        },
        prev: function(a) {
            return D(a, "previousSibling")
        },
        nextAll: function(a) {
            return n.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return n.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return n.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return n.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return n.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return n.sibling(a.firstChild)
        },
        contents: function(a) {
            return a.contentDocument || n.merge([], a.childNodes)
        }
    }, function(a, b) {
        n.fn[a] = function(c, d) {
            var e = n.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c),
            d && "string" == typeof d && (e = n.filter(d, e)),
            this.length > 1 && (C[a] || n.unique(e),
            B.test(a) && e.reverse()),
            this.pushStack(e)
        }
    });
    var E = /\S+/g
      , F = {};
    function G(a) {
        var b = F[a] = {};
        return n.each(a.match(E) || [], function(a, c) {
            b[c] = !0
        }),
        b
    }
    n.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : n.extend({}, a);
        var b, c, d, e, f, g, h = [], i = !a.once && [], j = function(l) {
            for (b = a.memory && l,
            c = !0,
            g = e || 0,
            e = 0,
            f = h.length,
            d = !0; h && f > g; g++) {
                if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                    b = !1;
                    break
                }
            }
            d = !1,
            h && (i ? i.length && j(i.shift()) : b ? h = [] : k.disable())
        }, k = {
            add: function() {
                if (h) {
                    var c = h.length;
                    !function g(b) {
                        n.each(b, function(b, c) {
                            var d = n.type(c);
                            "function" === d ? a.unique && k.has(c) || h.push(c) : c && c.length && "string" !== d && g(c)
                        })
                    }(arguments),
                    d ? f = h.length : b && (e = c,
                    j(b))
                }
                return this
            },
            remove: function() {
                return h && n.each(arguments, function(a, b) {
                    var c;
                    while ((c = n.inArray(b, h, c)) > -1) {
                        h.splice(c, 1),
                        d && (f >= c && f--,
                        g >= c && g--)
                    }
                }),
                this
            },
            has: function(a) {
                return a ? n.inArray(a, h) > -1 : !(!h || !h.length)
            },
            empty: function() {
                return h = [],
                f = 0,
                this
            },
            disable: function() {
                return h = i = b = void 0,
                this
            },
            disabled: function() {
                return !h
            },
            lock: function() {
                return i = void 0,
                b || k.disable(),
                this
            },
            locked: function() {
                return !i
            },
            fireWith: function(a, b) {
                return !h || c && !i || (b = b || [],
                b = [a, b.slice ? b.slice() : b],
                d ? i.push(b) : j(b)),
                this
            },
            fire: function() {
                return k.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!c
            }
        };
        return k
    }
    ,
    n.extend({
        Deferred: function(a) {
            var b = [["resolve", "done", n.Callbacks("once memory"), "resolved"], ["reject", "fail", n.Callbacks("once memory"), "rejected"], ["notify", "progress", n.Callbacks("memory")]]
              , c = "pending"
              , d = {
                state: function() {
                    return c
                },
                always: function() {
                    return e.done(arguments).fail(arguments),
                    this
                },
                then: function() {
                    var a = arguments;
                    return n.Deferred(function(c) {
                        n.each(b, function(b, f) {
                            var g = n.isFunction(a[b]) && a[b];
                            e[f[1]](function() {
                                var a = g && g.apply(this, arguments);
                                a && n.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments)
                            })
                        }),
                        a = null
                    }).promise()
                },
                promise: function(a) {
                    return null != a ? n.extend(a, d) : d
                }
            }
              , e = {};
            return d.pipe = d.then,
            n.each(b, function(a, f) {
                var g = f[2]
                  , h = f[3];
                d[f[1]] = g.add,
                h && g.add(function() {
                    c = h
                }, b[1 ^ a][2].disable, b[2][2].lock),
                e[f[0]] = function() {
                    return e[f[0] + "With"](this === e ? d : this, arguments),
                    this
                }
                ,
                e[f[0] + "With"] = g.fireWith
            }),
            d.promise(e),
            a && a.call(e, e),
            e
        },
        when: function(a) {
            var b = 0, c = d.call(arguments), e = c.length, f = 1 !== e || a && n.isFunction(a.promise) ? e : 0, g = 1 === f ? a : n.Deferred(), h = function(a, b, c) {
                return function(e) {
                    b[a] = this,
                    c[a] = arguments.length > 1 ? d.call(arguments) : e,
                    c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c)
                }
            }, i, j, k;
            if (e > 1) {
                for (i = new Array(e),
                j = new Array(e),
                k = new Array(e); e > b; b++) {
                    c[b] && n.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f
                }
            }
            return f || g.resolveWith(k, c),
            g.promise()
        }
    });
    var H;
    n.fn.ready = function(a) {
        return n.ready.promise().done(a),
        this
    }
    ,
    n.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? n.readyWait++ : n.ready(!0)
        },
        ready: function(a) {
            (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0,
            a !== !0 && --n.readyWait > 0 || (H.resolveWith(l, [n]),
            n.fn.triggerHandler && (n(l).triggerHandler("ready"),
            n(l).off("ready"))))
        }
    });
    function I() {
        l.removeEventListener("DOMContentLoaded", I, !1),
        a.removeEventListener("load", I, !1),
        n.ready()
    }
    n.ready.promise = function(b) {
        return H || (H = n.Deferred(),
        "complete" === l.readyState ? setTimeout(n.ready) : (l.addEventListener("DOMContentLoaded", I, !1),
        a.addEventListener("load", I, !1))),
        H.promise(b)
    }
    ,
    n.ready.promise();
    var J = n.access = function(a, b, c, d, e, f, g) {
        var h = 0
          , i = a.length
          , j = null == c;
        if ("object" === n.type(c)) {
            e = !0;
            for (h in c) {
                n.access(a, b, h, c[h], !0, f, g)
            }
        } else {
            if (void 0 !== d && (e = !0,
            n.isFunction(d) || (g = !0),
            j && (g ? (b.call(a, d),
            b = null) : (j = b,
            b = function(a, b, c) {
                return j.call(n(a), c)
            }
            )),
            b)) {
                for (; i > h; h++) {
                    b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)))
                }
            }
        }
        return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
    }
    ;
    n.acceptData = function(a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType
    }
    ;
    function K() {
        Object.defineProperty(this.cache = {}, 0, {
            get: function() {
                return {}
            }
        }),
        this.expando = n.expando + Math.random()
    }
    K.uid = 1,
    K.accepts = n.acceptData,
    K.prototype = {
        key: function(a) {
            if (!K.accepts(a)) {
                return 0
            }
            var b = {}
              , c = a[this.expando];
            if (!c) {
                c = K.uid++;
                try {
                    b[this.expando] = {
                        value: c
                    },
                    Object.defineProperties(a, b)
                } catch (d) {
                    b[this.expando] = c,
                    n.extend(a, b)
                }
            }
            return this.cache[c] || (this.cache[c] = {}),
            c
        },
        set: function(a, b, c) {
            var d, e = this.key(a), f = this.cache[e];
            if ("string" == typeof b) {
                f[b] = c
            } else {
                if (n.isEmptyObject(f)) {
                    n.extend(this.cache[e], b)
                } else {
                    for (d in b) {
                        f[d] = b[d]
                    }
                }
            }
            return f
        },
        get: function(a, b) {
            var c = this.cache[this.key(a)];
            return void 0 === b ? c : c[b]
        },
        access: function(a, b, c) {
            var d;
            return void 0 === b || b && "string" == typeof b && void 0 === c ? (d = this.get(a, b),
            void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c),
            void 0 !== c ? c : b)
        },
        remove: function(a, b) {
            var c, d, e, f = this.key(a), g = this.cache[f];
            if (void 0 === b) {
                this.cache[f] = {}
            } else {
                n.isArray(b) ? d = b.concat(b.map(n.camelCase)) : (e = n.camelCase(b),
                b in g ? d = [b, e] : (d = e,
                d = d in g ? [d] : d.match(E) || [])),
                c = d.length;
                while (c--) {
                    delete g[d[c]]
                }
            }
        },
        hasData: function(a) {
            return !n.isEmptyObject(this.cache[a[this.expando]] || {})
        },
        discard: function(a) {
            a[this.expando] && delete this.cache[a[this.expando]]
        }
    };
    var L = new K
      , M = new K
      , N = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
      , O = /([A-Z])/g;
    function P(a, b, c) {
        var d;
        if (void 0 === c && 1 === a.nodeType) {
            if (d = "data-" + b.replace(O, "-$1").toLowerCase(),
            c = a.getAttribute(d),
            "string" == typeof c) {
                try {
                    c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : N.test(c) ? n.parseJSON(c) : c
                } catch (e) {}
                M.set(a, b, c)
            } else {
                c = void 0
            }
        }
        return c
    }
    n.extend({
        hasData: function(a) {
            return M.hasData(a) || L.hasData(a)
        },
        data: function(a, b, c) {
            return M.access(a, b, c)
        },
        removeData: function(a, b) {
            M.remove(a, b)
        },
        _data: function(a, b, c) {
            return L.access(a, b, c)
        },
        _removeData: function(a, b) {
            L.remove(a, b)
        }
    }),
    n.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0], g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = M.get(f),
                1 === f.nodeType && !L.get(f, "hasDataAttrs"))) {
                    c = g.length;
                    while (c--) {
                        g[c] && (d = g[c].name,
                        0 === d.indexOf("data-") && (d = n.camelCase(d.slice(5)),
                        P(f, d, e[d])))
                    }
                    L.set(f, "hasDataAttrs", !0)
                }
                return e
            }
            return "object" == typeof a ? this.each(function() {
                M.set(this, a)
            }) : J(this, function(b) {
                var c, d = n.camelCase(a);
                if (f && void 0 === b) {
                    if (c = M.get(f, a),
                    void 0 !== c) {
                        return c
                    }
                    if (c = M.get(f, d),
                    void 0 !== c) {
                        return c
                    }
                    if (c = P(f, d, void 0),
                    void 0 !== c) {
                        return c
                    }
                } else {
                    this.each(function() {
                        var c = M.get(this, d);
                        M.set(this, d, b),
                        -1 !== a.indexOf("-") && void 0 !== c && M.set(this, a, b)
                    })
                }
            }, null, b, arguments.length > 1, null, !0)
        },
        removeData: function(a) {
            return this.each(function() {
                M.remove(this, a)
            })
        }
    }),
    n.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue",
            d = L.get(a, b),
            c && (!d || n.isArray(c) ? d = L.access(a, b, n.makeArray(c)) : d.push(c)),
            d || []) : void 0
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = n.queue(a, b)
              , d = c.length
              , e = c.shift()
              , f = n._queueHooks(a, b)
              , g = function() {
                n.dequeue(a, b)
            };
            "inprogress" === e && (e = c.shift(),
            d--),
            e && ("fx" === b && c.unshift("inprogress"),
            delete f.stop,
            e.call(a, g, f)),
            !d && f && f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return L.get(a, c) || L.access(a, c, {
                empty: n.Callbacks("once memory").add(function() {
                    L.remove(a, [b + "queue", c])
                })
            })
        }
    }),
    n.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a,
            a = "fx",
            c--),
            arguments.length < c ? n.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = n.queue(this, a, b);
                n._queueHooks(this, a),
                "fx" === a && "inprogress" !== c[0] && n.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                n.dequeue(this, a)
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, b) {
            var c, d = 1, e = n.Deferred(), f = this, g = this.length, h = function() {
                --d || e.resolveWith(f, [f])
            };
            "string" != typeof a && (b = a,
            a = void 0),
            a = a || "fx";
            while (g--) {
                c = L.get(f[g], a + "queueHooks"),
                c && c.empty && (d++,
                c.empty.add(h))
            }
            return h(),
            e.promise(b)
        }
    });
    var Q = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
      , R = ["Top", "Right", "Bottom", "Left"]
      , S = function(a, b) {
        return a = b || a,
        "none" === n.css(a, "display") || !n.contains(a.ownerDocument, a)
    }
      , T = /^(?:checkbox|radio)$/i;
    !function() {
        var a = l.createDocumentFragment()
          , b = a.appendChild(l.createElement("div"))
          , c = l.createElement("input");
        c.setAttribute("type", "radio"),
        c.setAttribute("checked", "checked"),
        c.setAttribute("name", "t"),
        b.appendChild(c),
        k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked,
        b.innerHTML = "<textarea>x</textarea>",
        k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue
    }();
    var U = "undefined";
    k.focusinBubbles = "onfocusin"in a;
    var V = /^key/
      , W = /^(?:mouse|pointer|contextmenu)|click/
      , X = /^(?:focusinfocus|focusoutblur)$/
      , Y = /^([^.]*)(?:\.(.+)|)$/;
    function Z() {
        return !0
    }
    function $() {
        return !1
    }
    function _() {
        try {
            return l.activeElement
        } catch (a) {}
    }
    n.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.get(a);
            if (r) {
                c.handler && (f = c,
                c = f.handler,
                e = f.selector),
                c.guid || (c.guid = n.guid++),
                (i = r.events) || (i = r.events = {}),
                (g = r.handle) || (g = r.handle = function(b) {
                    return typeof n !== U && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0
                }
                ),
                b = (b || "").match(E) || [""],
                j = b.length;
                while (j--) {
                    h = Y.exec(b[j]) || [],
                    o = q = h[1],
                    p = (h[2] || "").split(".").sort(),
                    o && (l = n.event.special[o] || {},
                    o = (e ? l.delegateType : l.bindType) || o,
                    l = n.event.special[o] || {},
                    k = n.extend({
                        type: o,
                        origType: q,
                        data: d,
                        handler: c,
                        guid: c.guid,
                        selector: e,
                        needsContext: e && n.expr.match.needsContext.test(e),
                        namespace: p.join(".")
                    }, f),
                    (m = i[o]) || (m = i[o] = [],
                    m.delegateCount = 0,
                    l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g, !1)),
                    l.add && (l.add.call(a, k),
                    k.handler.guid || (k.handler.guid = c.guid)),
                    e ? m.splice(m.delegateCount++, 0, k) : m.push(k),
                    n.event.global[o] = !0)
                }
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.hasData(a) && L.get(a);
            if (r && (i = r.events)) {
                b = (b || "").match(E) || [""],
                j = b.length;
                while (j--) {
                    if (h = Y.exec(b[j]) || [],
                    o = q = h[1],
                    p = (h[2] || "").split(".").sort(),
                    o) {
                        l = n.event.special[o] || {},
                        o = (d ? l.delegateType : l.bindType) || o,
                        m = i[o] || [],
                        h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                        g = f = m.length;
                        while (f--) {
                            k = m[f],
                            !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1),
                            k.selector && m.delegateCount--,
                            l.remove && l.remove.call(a, k))
                        }
                        g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle),
                        delete i[o])
                    } else {
                        for (o in i) {
                            n.event.remove(a, o + b[j], c, d, !0)
                        }
                    }
                }
                n.isEmptyObject(i) && (delete r.handle,
                L.remove(a, "events"))
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, m, o, p = [d || l], q = j.call(b, "type") ? b.type : b, r = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (g = h = d = d || l,
            3 !== d.nodeType && 8 !== d.nodeType && !X.test(q + n.event.triggered) && (q.indexOf(".") >= 0 && (r = q.split("."),
            q = r.shift(),
            r.sort()),
            k = q.indexOf(":") < 0 && "on" + q,
            b = b[n.expando] ? b : new n.Event(q,"object" == typeof b && b),
            b.isTrigger = e ? 2 : 3,
            b.namespace = r.join("."),
            b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
            b.result = void 0,
            b.target || (b.target = d),
            c = null == c ? [b] : n.makeArray(c, [b]),
            o = n.event.special[q] || {},
            e || !o.trigger || o.trigger.apply(d, c) !== !1)) {
                if (!e && !o.noBubble && !n.isWindow(d)) {
                    for (i = o.delegateType || q,
                    X.test(i + q) || (g = g.parentNode); g; g = g.parentNode) {
                        p.push(g),
                        h = g
                    }
                    h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a)
                }
                f = 0;
                while ((g = p[f++]) && !b.isPropagationStopped()) {
                    b.type = f > 1 ? i : o.bindType || q,
                    m = (L.get(g, "events") || {})[b.type] && L.get(g, "handle"),
                    m && m.apply(g, c),
                    m = k && g[k],
                    m && m.apply && n.acceptData(g) && (b.result = m.apply(g, c),
                    b.result === !1 && b.preventDefault())
                }
                return b.type = q,
                e || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !n.acceptData(d) || k && n.isFunction(d[q]) && !n.isWindow(d) && (h = d[k],
                h && (d[k] = null),
                n.event.triggered = q,
                d[q](),
                n.event.triggered = void 0,
                h && (d[k] = h)),
                b.result
            }
        },
        dispatch: function(a) {
            a = n.event.fix(a);
            var b, c, e, f, g, h = [], i = d.call(arguments), j = (L.get(this, "events") || {})[a.type] || [], k = n.event.special[a.type] || {};
            if (i[0] = a,
            a.delegateTarget = this,
            !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
                h = n.event.handlers.call(this, a, j),
                b = 0;
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    a.currentTarget = f.elem,
                    c = 0;
                    while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped()) {
                        (!a.namespace_re || a.namespace_re.test(g.namespace)) && (a.handleObj = g,
                        a.data = g.data,
                        e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i),
                        void 0 !== e && (a.result = e) === !1 && (a.preventDefault(),
                        a.stopPropagation()))
                    }
                }
                return k.postDispatch && k.postDispatch.call(this, a),
                a.result
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [], h = b.delegateCount, i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type)) {
                for (; i !== this; i = i.parentNode || this) {
                    if (i.disabled !== !0 || "click" !== a.type) {
                        for (d = [],
                        c = 0; h > c; c++) {
                            f = b[c],
                            e = f.selector + " ",
                            void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [i]).length),
                            d[e] && d.push(f)
                        }
                        d.length && g.push({
                            elem: i,
                            handlers: d
                        })
                    }
                }
            }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }),
            g
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode),
                a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button;
                return null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || l,
                d = c.documentElement,
                e = c.body,
                a.pageX = b.clientX + (d && d.scrollLeft || e && e.scrollLeft || 0) - (d && d.clientLeft || e && e.clientLeft || 0),
                a.pageY = b.clientY + (d && d.scrollTop || e && e.scrollTop || 0) - (d && d.clientTop || e && e.clientTop || 0)),
                a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0),
                a
            }
        },
        fix: function(a) {
            if (a[n.expando]) {
                return a
            }
            var b, c, d, e = a.type, f = a, g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = W.test(e) ? this.mouseHooks : V.test(e) ? this.keyHooks : {}),
            d = g.props ? this.props.concat(g.props) : this.props,
            a = new n.Event(f),
            b = d.length;
            while (b--) {
                c = d[b],
                a[c] = f[c]
            }
            return a.target || (a.target = l),
            3 === a.target.nodeType && (a.target = a.target.parentNode),
            g.filter ? g.filter(a, f) : a
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    return this !== _() && this.focus ? (this.focus(),
                    !1) : void 0
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === _() && this.blur ? (this.blur(),
                    !1) : void 0
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return "checkbox" === this.type && this.click && n.nodeName(this, "input") ? (this.click(),
                    !1) : void 0
                },
                _default: function(a) {
                    return n.nodeName(a.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = n.extend(new n.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? n.event.trigger(e, null, b) : n.event.dispatch.call(b, e),
            e.isDefaultPrevented() && c.preventDefault()
        }
    },
    n.removeEvent = function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    }
    ,
    n.Event = function(a, b) {
        return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a,
        this.type = a.type,
        this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? Z : $) : this.type = a,
        b && n.extend(this, b),
        this.timeStamp = a && a.timeStamp || n.now(),
        void (this[n.expando] = !0)) : new n.Event(a,b)
    }
    ,
    n.Event.prototype = {
        isDefaultPrevented: $,
        isPropagationStopped: $,
        isImmediatePropagationStopped: $,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = Z,
            a && a.preventDefault && a.preventDefault()
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = Z,
            a && a.stopPropagation && a.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = Z,
            a && a.stopImmediatePropagation && a.stopImmediatePropagation(),
            this.stopPropagation()
        }
    },
    n.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        n.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj;
                return (!e || e !== d && !n.contains(d, e)) && (a.type = f.origType,
                c = f.handler.apply(this, arguments),
                a.type = b),
                c
            }
        }
    }),
    k.focusinBubbles || n.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            n.event.simulate(b, a.target, n.event.fix(a), !0)
        };
        n.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this
                  , e = L.access(d, b);
                e || d.addEventListener(a, c, !0),
                L.access(d, b, (e || 0) + 1)
            },
            teardown: function() {
                var d = this.ownerDocument || this
                  , e = L.access(d, b) - 1;
                e ? L.access(d, b, e) : (d.removeEventListener(a, c, !0),
                L.remove(d, b))
            }
        }
    }),
    n.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b,
                b = void 0);
                for (g in a) {
                    this.on(g, b, c, a[g], e)
                }
                return this
            }
            if (null == c && null == d ? (d = b,
            c = b = void 0) : null == d && ("string" == typeof b ? (d = c,
            c = void 0) : (d = c,
            c = b,
            b = void 0)),
            d === !1) {
                d = $
            } else {
                if (!d) {
                    return this
                }
            }
            return 1 === e && (f = d,
            d = function(a) {
                return n().off(a),
                f.apply(this, arguments)
            }
            ,
            d.guid = f.guid || (f.guid = n.guid++)),
            this.each(function() {
                n.event.add(this, a, d, c, b)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) {
                return d = a.handleObj,
                n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler),
                this
            }
            if ("object" == typeof a) {
                for (e in a) {
                    this.off(e, b, a[e])
                }
                return this
            }
            return (b === !1 || "function" == typeof b) && (c = b,
            b = void 0),
            c === !1 && (c = $),
            this.each(function() {
                n.event.remove(this, a, c, b)
            })
        },
        trigger: function(a, b) {
            return this.each(function() {
                n.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? n.event.trigger(a, b, c, !0) : void 0
        }
    });
    var ab = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , bb = /<([\w:]+)/
      , cb = /<|&#?\w+;/
      , db = /<(?:script|style|link)/i
      , eb = /checked\s*(?:[^=]|=\s*.checked.)/i
      , fb = /^$|\/(?:java|ecma)script/i
      , gb = /^true\/(.*)/
      , hb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g
      , ib = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    ib.optgroup = ib.option,
    ib.tbody = ib.tfoot = ib.colgroup = ib.caption = ib.thead,
    ib.th = ib.td;
    function jb(a, b) {
        return n.nodeName(a, "table") && n.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }
    function kb(a) {
        return a.type = (null !== a.getAttribute("type")) + "/" + a.type,
        a
    }
    function lb(a) {
        var b = gb.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"),
        a
    }
    function mb(a, b) {
        for (var c = 0, d = a.length; d > c; c++) {
            L.set(a[c], "globalEval", !b || L.get(b[c], "globalEval"))
        }
    }
    function nb(a, b) {
        var c, d, e, f, g, h, i, j;
        if (1 === b.nodeType) {
            if (L.hasData(a) && (f = L.access(a),
            g = L.set(b, f),
            j = f.events)) {
                delete g.handle,
                g.events = {};
                for (e in j) {
                    for (c = 0,
                    d = j[e].length; d > c; c++) {
                        n.event.add(b, e, j[e][c])
                    }
                }
            }
            M.hasData(a) && (h = M.access(a),
            i = n.extend({}, h),
            M.set(b, i))
        }
    }
    function ob(a, b) {
        var c = a.getElementsByTagName ? a.getElementsByTagName(b || "*") : a.querySelectorAll ? a.querySelectorAll(b || "*") : [];
        return void 0 === b || b && n.nodeName(a, b) ? n.merge([a], c) : c
    }
    function pb(a, b) {
        var c = b.nodeName.toLowerCase();
        "input" === c && T.test(a.type) ? b.checked = a.checked : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue)
    }
    n.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h = a.cloneNode(!0), i = n.contains(a.ownerDocument, a);
            if (!(k.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || n.isXMLDoc(a))) {
                for (g = ob(h),
                f = ob(a),
                d = 0,
                e = f.length; e > d; d++) {
                    pb(f[d], g[d])
                }
            }
            if (b) {
                if (c) {
                    for (f = f || ob(a),
                    g = g || ob(h),
                    d = 0,
                    e = f.length; e > d; d++) {
                        nb(f[d], g[d])
                    }
                } else {
                    nb(a, h)
                }
            }
            return g = ob(h, "script"),
            g.length > 0 && mb(g, !i && ob(a, "script")),
            h
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, k = b.createDocumentFragment(), l = [], m = 0, o = a.length; o > m; m++) {
                if (e = a[m],
                e || 0 === e) {
                    if ("object" === n.type(e)) {
                        n.merge(l, e.nodeType ? [e] : e)
                    } else {
                        if (cb.test(e)) {
                            f = f || k.appendChild(b.createElement("div")),
                            g = (bb.exec(e) || ["", ""])[1].toLowerCase(),
                            h = ib[g] || ib._default,
                            f.innerHTML = h[1] + e.replace(ab, "<$1></$2>") + h[2],
                            j = h[0];
                            while (j--) {
                                f = f.lastChild
                            }
                            n.merge(l, f.childNodes),
                            f = k.firstChild,
                            f.textContent = ""
                        } else {
                            l.push(b.createTextNode(e))
                        }
                    }
                }
            }
            k.textContent = "",
            m = 0;
            while (e = l[m++]) {
                if ((!d || -1 === n.inArray(e, d)) && (i = n.contains(e.ownerDocument, e),
                f = ob(k.appendChild(e), "script"),
                i && mb(f),
                c)) {
                    j = 0;
                    while (e = f[j++]) {
                        fb.test(e.type || "") && c.push(e)
                    }
                }
            }
            return k
        },
        cleanData: function(a) {
            for (var b, c, d, e, f = n.event.special, g = 0; void 0 !== (c = a[g]); g++) {
                if (n.acceptData(c) && (e = c[L.expando],
                e && (b = L.cache[e]))) {
                    if (b.events) {
                        for (d in b.events) {
                            f[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle)
                        }
                    }
                    L.cache[e] && delete L.cache[e]
                }
                delete M.cache[c[M.expando]]
            }
        }
    }),
    n.fn.extend({
        text: function(a) {
            return J(this, function(a) {
                return void 0 === a ? n.text(this) : this.empty().each(function() {
                    (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = a)
                })
            }, null, a, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = jb(this, a);
                    b.appendChild(a)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = jb(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this)
            })
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling)
            })
        },
        remove: function(a, b) {
            for (var c, d = a ? n.filter(a, this) : this, e = 0; null != (c = d[e]); e++) {
                b || 1 !== c.nodeType || n.cleanData(ob(c)),
                c.parentNode && (b && n.contains(c.ownerDocument, c) && mb(ob(c, "script")),
                c.parentNode.removeChild(c))
            }
            return this
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) {
                1 === a.nodeType && (n.cleanData(ob(a, !1)),
                a.textContent = "")
            }
            return this
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a,
            b = null == b ? a : b,
            this.map(function() {
                return n.clone(this, a, b)
            })
        },
        html: function(a) {
            return J(this, function(a) {
                var b = this[0] || {}
                  , c = 0
                  , d = this.length;
                if (void 0 === a && 1 === b.nodeType) {
                    return b.innerHTML
                }
                if ("string" == typeof a && !db.test(a) && !ib[(bb.exec(a) || ["", ""])[1].toLowerCase()]) {
                    a = a.replace(ab, "<$1></$2>");
                    try {
                        for (; d > c; c++) {
                            b = this[c] || {},
                            1 === b.nodeType && (n.cleanData(ob(b, !1)),
                            b.innerHTML = a)
                        }
                        b = 0
                    } catch (e) {}
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                a = this.parentNode,
                n.cleanData(ob(this)),
                a && a.replaceChild(b, this)
            }),
            a && (a.length || a.nodeType) ? this : this.remove()
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, b) {
            a = e.apply([], a);
            var c, d, f, g, h, i, j = 0, l = this.length, m = this, o = l - 1, p = a[0], q = n.isFunction(p);
            if (q || l > 1 && "string" == typeof p && !k.checkClone && eb.test(p)) {
                return this.each(function(c) {
                    var d = m.eq(c);
                    q && (a[0] = p.call(this, c, d.html())),
                    d.domManip(a, b)
                })
            }
            if (l && (c = n.buildFragment(a, this[0].ownerDocument, !1, this),
            d = c.firstChild,
            1 === c.childNodes.length && (c = d),
            d)) {
                for (f = n.map(ob(c, "script"), kb),
                g = f.length; l > j; j++) {
                    h = c,
                    j !== o && (h = n.clone(h, !0, !0),
                    g && n.merge(f, ob(h, "script"))),
                    b.call(this[j], h, j)
                }
                if (g) {
                    for (i = f[f.length - 1].ownerDocument,
                    n.map(f, lb),
                    j = 0; g > j; j++) {
                        h = f[j],
                        fb.test(h.type || "") && !L.access(h, "globalEval") && n.contains(i, h) && (h.src ? n._evalUrl && n._evalUrl(h.src) : n.globalEval(h.textContent.replace(hb, "")))
                    }
                }
            }
            return this
        }
    }),
    n.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        n.fn[a] = function(a) {
            for (var c, d = [], e = n(a), g = e.length - 1, h = 0; g >= h; h++) {
                c = h === g ? this : this.clone(!0),
                n(e[h])[b](c),
                f.apply(d, c.get())
            }
            return this.pushStack(d)
        }
    });
    var qb, rb = {};
    function sb(b, c) {
        var d, e = n(c.createElement(b)).appendTo(c.body), f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : n.css(e[0], "display");
        return e.detach(),
        f
    }
    function tb(a) {
        var b = l
          , c = rb[a];
        return c || (c = sb(a, b),
        "none" !== c && c || (qb = (qb || n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),
        b = qb[0].contentDocument,
        b.write(),
        b.close(),
        c = sb(a, b),
        qb.detach()),
        rb[a] = c),
        c
    }
    var ub = /^margin/
      , vb = new RegExp("^(" + Q + ")(?!px)[a-z%]+$","i")
      , wb = function(a) {
        return a.ownerDocument.defaultView.getComputedStyle(a, null)
    };
    function xb(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || wb(a),
        c && (g = c.getPropertyValue(b) || c[b]),
        c && ("" !== g || n.contains(a.ownerDocument, a) || (g = n.style(a, b)),
        vb.test(g) && ub.test(b) && (d = h.width,
        e = h.minWidth,
        f = h.maxWidth,
        h.minWidth = h.maxWidth = h.width = g,
        g = c.width,
        h.width = d,
        h.minWidth = e,
        h.maxWidth = f)),
        void 0 !== g ? g + "" : g
    }
    function yb(a, b) {
        return {
            get: function() {
                return a() ? void delete this.get : (this.get = b).apply(this, arguments)
            }
        }
    }
    !function() {
        var b, c, d = l.documentElement, e = l.createElement("div"), f = l.createElement("div");
        if (f.style) {
            f.style.backgroundClip = "content-box",
            f.cloneNode(!0).style.backgroundClip = "",
            k.clearCloneStyle = "content-box" === f.style.backgroundClip,
            e.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",
            e.appendChild(f);
            function g() {
                f.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",
                f.innerHTML = "",
                d.appendChild(e);
                var g = a.getComputedStyle(f, null);
                b = "1%" !== g.top,
                c = "4px" === g.width,
                d.removeChild(e)
            }
            a.getComputedStyle && n.extend(k, {
                pixelPosition: function() {
                    return g(),
                    b
                },
                boxSizingReliable: function() {
                    return null == c && g(),
                    c
                },
                reliableMarginRight: function() {
                    var b, c = f.appendChild(l.createElement("div"));
                    return c.style.cssText = f.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",
                    c.style.marginRight = c.style.width = "0",
                    f.style.width = "1px",
                    d.appendChild(e),
                    b = !parseFloat(a.getComputedStyle(c, null).marginRight),
                    d.removeChild(e),
                    b
                }
            })
        }
    }(),
    n.swap = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) {
            g[f] = a.style[f],
            a.style[f] = b[f]
        }
        e = c.apply(a, d || []);
        for (f in b) {
            a.style[f] = g[f]
        }
        return e
    }
    ;
    var zb = /^(none|table(?!-c[ea]).+)/
      , Ab = new RegExp("^(" + Q + ")(.*)$","i")
      , Bb = new RegExp("^([+-])=(" + Q + ")","i")
      , Cb = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }
      , Db = {
        letterSpacing: "0",
        fontWeight: "400"
    }
      , Eb = ["Webkit", "O", "Moz", "ms"];
    function Fb(a, b) {
        if (b in a) {
            return b
        }
        var c = b[0].toUpperCase() + b.slice(1)
          , d = b
          , e = Eb.length;
        while (e--) {
            if (b = Eb[e] + c,
            b in a) {
                return b
            }
        }
        return d
    }
    function Gb(a, b, c) {
        var d = Ab.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }
    function Hb(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) {
            "margin" === c && (g += n.css(a, c + R[f], !0, e)),
            d ? ("content" === c && (g -= n.css(a, "padding" + R[f], !0, e)),
            "margin" !== c && (g -= n.css(a, "border" + R[f] + "Width", !0, e))) : (g += n.css(a, "padding" + R[f], !0, e),
            "padding" !== c && (g += n.css(a, "border" + R[f] + "Width", !0, e)))
        }
        return g
    }
    function Ib(a, b, c) {
        var d = !0
          , e = "width" === b ? a.offsetWidth : a.offsetHeight
          , f = wb(a)
          , g = "border-box" === n.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = xb(a, b, f),
            (0 > e || null == e) && (e = a.style[b]),
            vb.test(e)) {
                return e
            }
            d = g && (k.boxSizingReliable() || e === a.style[b]),
            e = parseFloat(e) || 0
        }
        return e + Hb(a, b, c || (g ? "border" : "content"), d, f) + "px"
    }
    function Jb(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) {
            d = a[g],
            d.style && (f[g] = L.get(d, "olddisplay"),
            c = d.style.display,
            b ? (f[g] || "none" !== c || (d.style.display = ""),
            "" === d.style.display && S(d) && (f[g] = L.access(d, "olddisplay", tb(d.nodeName)))) : (e = S(d),
            "none" === c && e || L.set(d, "olddisplay", e ? c : n.css(d, "display"))))
        }
        for (g = 0; h > g; g++) {
            d = a[g],
            d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"))
        }
        return a
    }
    n.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = xb(a, "opacity");
                        return "" === c ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": "cssFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = n.camelCase(b), i = a.style;
                return b = n.cssProps[h] || (n.cssProps[h] = Fb(i, h)),
                g = n.cssHooks[b] || n.cssHooks[h],
                void 0 === c ? g && "get"in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c,
                "string" === f && (e = Bb.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(n.css(a, b)),
                f = "number"),
                null != c && c === c && ("number" !== f || n.cssNumber[h] || (c += "px"),
                k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"),
                g && "set"in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)),
                void 0)
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = n.camelCase(b);
            return b = n.cssProps[h] || (n.cssProps[h] = Fb(a.style, h)),
            g = n.cssHooks[b] || n.cssHooks[h],
            g && "get"in g && (e = g.get(a, !0, c)),
            void 0 === e && (e = xb(a, b, d)),
            "normal" === e && b in Db && (e = Db[b]),
            "" === c || c ? (f = parseFloat(e),
            c === !0 || n.isNumeric(f) ? f || 0 : e) : e
        }
    }),
    n.each(["height", "width"], function(a, b) {
        n.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? zb.test(n.css(a, "display")) && 0 === a.offsetWidth ? n.swap(a, Cb, function() {
                    return Ib(a, b, d)
                }) : Ib(a, b, d) : void 0
            },
            set: function(a, c, d) {
                var e = d && wb(a);
                return Gb(a, c, d ? Hb(a, b, d, "border-box" === n.css(a, "boxSizing", !1, e), e) : 0)
            }
        }
    }),
    n.cssHooks.marginRight = yb(k.reliableMarginRight, function(a, b) {
        return b ? n.swap(a, {
            display: "inline-block"
        }, xb, [a, "marginRight"]) : void 0
    }),
    n.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        n.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) {
                    e[a + R[d] + b] = f[d] || f[d - 2] || f[0]
                }
                return e
            }
        },
        ub.test(a) || (n.cssHooks[a + b].set = Gb)
    }),
    n.fn.extend({
        css: function(a, b) {
            return J(this, function(a, b, c) {
                var d, e, f = {}, g = 0;
                if (n.isArray(b)) {
                    for (d = wb(a),
                    e = b.length; e > g; g++) {
                        f[b[g]] = n.css(a, b[g], !1, d)
                    }
                    return f
                }
                return void 0 !== c ? n.style(a, b, c) : n.css(a, b)
            }, a, b, arguments.length > 1)
        },
        show: function() {
            return Jb(this, !0)
        },
        hide: function() {
            return Jb(this)
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                S(this) ? n(this).show() : n(this).hide()
            })
        }
    });
    function Kb(a, b, c, d, e) {
        return new Kb.prototype.init(a,b,c,d,e)
    }
    n.Tween = Kb,
    Kb.prototype = {
        constructor: Kb,
        init: function(a, b, c, d, e, f) {
            this.elem = a,
            this.prop = c,
            this.easing = e || "swing",
            this.options = b,
            this.start = this.now = this.cur(),
            this.end = d,
            this.unit = f || (n.cssNumber[c] ? "" : "px")
        },
        cur: function() {
            var a = Kb.propHooks[this.prop];
            return a && a.get ? a.get(this) : Kb.propHooks._default.get(this)
        },
        run: function(a) {
            var b, c = Kb.propHooks[this.prop];
            return this.pos = b = this.options.duration ? n.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : a,
            this.now = (this.end - this.start) * b + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            c && c.set ? c.set(this) : Kb.propHooks._default.set(this),
            this
        }
    },
    Kb.prototype.init.prototype = Kb.prototype,
    Kb.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = n.css(a.elem, a.prop, ""),
                b && "auto" !== b ? b : 0) : a.elem[a.prop]
            },
            set: function(a) {
                n.fx.step[a.prop] ? n.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[n.cssProps[a.prop]] || n.cssHooks[a.prop]) ? n.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
            }
        }
    },
    Kb.propHooks.scrollTop = Kb.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    },
    n.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return 0.5 - Math.cos(a * Math.PI) / 2
        }
    },
    n.fx = Kb.prototype.init,
    n.fx.step = {};
    var Lb, Mb, Nb = /^(?:toggle|show|hide)$/, Ob = new RegExp("^(?:([+-])=|)(" + Q + ")([a-z%]*)$","i"), Pb = /queueHooks$/, Qb = [Vb], Rb = {
        "*": [function(a, b) {
            var c = this.createTween(a, b)
              , d = c.cur()
              , e = Ob.exec(b)
              , f = e && e[3] || (n.cssNumber[a] ? "" : "px")
              , g = (n.cssNumber[a] || "px" !== f && +d) && Ob.exec(n.css(c.elem, a))
              , h = 1
              , i = 20;
            if (g && g[3] !== f) {
                f = f || g[3],
                e = e || [],
                g = +d || 1;
                do {
                    h = h || ".5",
                    g /= h,
                    n.style(c.elem, a, g + f)
                } while (h !== (h = c.cur() / d) && 1 !== h && --i)
            }
            return e && (g = c.start = +g || +d || 0,
            c.unit = f,
            c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]),
            c
        }
        ]
    };
    function Sb() {
        return setTimeout(function() {
            Lb = void 0
        }),
        Lb = n.now()
    }
    function Tb(a, b) {
        var c, d = 0, e = {
            height: a
        };
        for (b = b ? 1 : 0; 4 > d; d += 2 - b) {
            c = R[d],
            e["margin" + c] = e["padding" + c] = a
        }
        return b && (e.opacity = e.width = a),
        e
    }
    function Ub(a, b, c) {
        for (var d, e = (Rb[b] || []).concat(Rb["*"]), f = 0, g = e.length; g > f; f++) {
            if (d = e[f].call(c, b, a)) {
                return d
            }
        }
    }
    function Vb(a, b, c) {
        var d, e, f, g, h, i, j, k, l = this, m = {}, o = a.style, p = a.nodeType && S(a), q = L.get(a, "fxshow");
        c.queue || (h = n._queueHooks(a, "fx"),
        null == h.unqueued && (h.unqueued = 0,
        i = h.empty.fire,
        h.empty.fire = function() {
            h.unqueued || i()
        }
        ),
        h.unqueued++,
        l.always(function() {
            l.always(function() {
                h.unqueued--,
                n.queue(a, "fx").length || h.empty.fire()
            })
        })),
        1 === a.nodeType && ("height"in b || "width"in b) && (c.overflow = [o.overflow, o.overflowX, o.overflowY],
        j = n.css(a, "display"),
        k = "none" === j ? L.get(a, "olddisplay") || tb(a.nodeName) : j,
        "inline" === k && "none" === n.css(a, "float") && (o.display = "inline-block")),
        c.overflow && (o.overflow = "hidden",
        l.always(function() {
            o.overflow = c.overflow[0],
            o.overflowX = c.overflow[1],
            o.overflowY = c.overflow[2]
        }));
        for (d in b) {
            if (e = b[d],
            Nb.exec(e)) {
                if (delete b[d],
                f = f || "toggle" === e,
                e === (p ? "hide" : "show")) {
                    if ("show" !== e || !q || void 0 === q[d]) {
                        continue
                    }
                    p = !0
                }
                m[d] = q && q[d] || n.style(a, d)
            } else {
                j = void 0
            }
        }
        if (n.isEmptyObject(m)) {
            "inline" === ("none" === j ? tb(a.nodeName) : j) && (o.display = j)
        } else {
            q ? "hidden"in q && (p = q.hidden) : q = L.access(a, "fxshow", {}),
            f && (q.hidden = !p),
            p ? n(a).show() : l.done(function() {
                n(a).hide()
            }),
            l.done(function() {
                var b;
                L.remove(a, "fxshow");
                for (b in m) {
                    n.style(a, b, m[b])
                }
            });
            for (d in m) {
                g = Ub(p ? q[d] : 0, d, l),
                d in q || (q[d] = g.start,
                p && (g.end = g.start,
                g.start = "width" === d || "height" === d ? 1 : 0))
            }
        }
    }
    function Wb(a, b) {
        var c, d, e, f, g;
        for (c in a) {
            if (d = n.camelCase(c),
            e = b[d],
            f = a[c],
            n.isArray(f) && (e = f[1],
            f = a[c] = f[0]),
            c !== d && (a[d] = f,
            delete a[c]),
            g = n.cssHooks[d],
            g && "expand"in g) {
                f = g.expand(f),
                delete a[d];
                for (c in f) {
                    c in a || (a[c] = f[c],
                    b[c] = e)
                }
            } else {
                b[d] = e
            }
        }
    }
    function Xb(a, b, c) {
        var d, e, f = 0, g = Qb.length, h = n.Deferred().always(function() {
            delete i.elem
        }), i = function() {
            if (e) {
                return !1
            }
            for (var b = Lb || Sb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) {
                j.tweens[g].run(f)
            }
            return h.notifyWith(a, [j, f, c]),
            1 > f && i ? c : (h.resolveWith(a, [j]),
            !1)
        }, j = h.promise({
            elem: a,
            props: n.extend({}, b),
            opts: n.extend(!0, {
                specialEasing: {}
            }, c),
            originalProperties: b,
            originalOptions: c,
            startTime: Lb || Sb(),
            duration: c.duration,
            tweens: [],
            createTween: function(b, c) {
                var d = n.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(d),
                d
            },
            stop: function(b) {
                var c = 0
                  , d = b ? j.tweens.length : 0;
                if (e) {
                    return this
                }
                for (e = !0; d > c; c++) {
                    j.tweens[c].run(1)
                }
                return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]),
                this
            }
        }), k = j.props;
        for (Wb(k, j.opts.specialEasing); g > f; f++) {
            if (d = Qb[f].call(j, a, k, j.opts)) {
                return d
            }
        }
        return n.map(k, Ub, j),
        n.isFunction(j.opts.start) && j.opts.start.call(a, j),
        n.fx.timer(n.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })),
        j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
    }
    n.Animation = n.extend(Xb, {
        tweener: function(a, b) {
            n.isFunction(a) ? (b = a,
            a = ["*"]) : a = a.split(" ");
            for (var c, d = 0, e = a.length; e > d; d++) {
                c = a[d],
                Rb[c] = Rb[c] || [],
                Rb[c].unshift(b)
            }
        },
        prefilter: function(a, b) {
            b ? Qb.unshift(a) : Qb.push(a)
        }
    }),
    n.speed = function(a, b, c) {
        var d = a && "object" == typeof a ? n.extend({}, a) : {
            complete: c || !c && b || n.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !n.isFunction(b) && b
        };
        return d.duration = n.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in n.fx.speeds ? n.fx.speeds[d.duration] : n.fx.speeds._default,
        (null == d.queue || d.queue === !0) && (d.queue = "fx"),
        d.old = d.complete,
        d.complete = function() {
            n.isFunction(d.old) && d.old.call(this),
            d.queue && n.dequeue(this, d.queue)
        }
        ,
        d
    }
    ,
    n.fn.extend({
        fadeTo: function(a, b, c, d) {
            return this.filter(S).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d)
        },
        animate: function(a, b, c, d) {
            var e = n.isEmptyObject(a)
              , f = n.speed(b, c, d)
              , g = function() {
                var b = Xb(this, n.extend({}, a), f);
                (e || L.get(this, "finish")) && b.stop(!0)
            };
            return g.finish = g,
            e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
        },
        stop: function(a, b, c) {
            var d = function(a) {
                var b = a.stop;
                delete a.stop,
                b(c)
            };
            return "string" != typeof a && (c = b,
            b = a,
            a = void 0),
            b && a !== !1 && this.queue(a || "fx", []),
            this.each(function() {
                var b = !0
                  , e = null != a && a + "queueHooks"
                  , f = n.timers
                  , g = L.get(this);
                if (e) {
                    g[e] && g[e].stop && d(g[e])
                } else {
                    for (e in g) {
                        g[e] && g[e].stop && Pb.test(e) && d(g[e])
                    }
                }
                for (e = f.length; e--; ) {
                    f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c),
                    b = !1,
                    f.splice(e, 1))
                }
                (b || !c) && n.dequeue(this, a)
            })
        },
        finish: function(a) {
            return a !== !1 && (a = a || "fx"),
            this.each(function() {
                var b, c = L.get(this), d = c[a + "queue"], e = c[a + "queueHooks"], f = n.timers, g = d ? d.length : 0;
                for (c.finish = !0,
                n.queue(this, a, []),
                e && e.stop && e.stop.call(this, !0),
                b = f.length; b--; ) {
                    f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0),
                    f.splice(b, 1))
                }
                for (b = 0; g > b; b++) {
                    d[b] && d[b].finish && d[b].finish.call(this)
                }
                delete c.finish
            })
        }
    }),
    n.each(["toggle", "show", "hide"], function(a, b) {
        var c = n.fn[b];
        n.fn[b] = function(a, d, e) {
            return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(Tb(b, !0), a, d, e)
        }
    }),
    n.each({
        slideDown: Tb("show"),
        slideUp: Tb("hide"),
        slideToggle: Tb("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        n.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d)
        }
    }),
    n.timers = [],
    n.fx.tick = function() {
        var a, b = 0, c = n.timers;
        for (Lb = n.now(); b < c.length; b++) {
            a = c[b],
            a() || c[b] !== a || c.splice(b--, 1)
        }
        c.length || n.fx.stop(),
        Lb = void 0
    }
    ,
    n.fx.timer = function(a) {
        n.timers.push(a),
        a() ? n.fx.start() : n.timers.pop()
    }
    ,
    n.fx.interval = 13,
    n.fx.start = function() {
        Mb || (Mb = setInterval(n.fx.tick, n.fx.interval))
    }
    ,
    n.fx.stop = function() {
        clearInterval(Mb),
        Mb = null
    }
    ,
    n.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    n.fn.delay = function(a, b) {
        return a = n.fx ? n.fx.speeds[a] || a : a,
        b = b || "fx",
        this.queue(b, function(b, c) {
            var d = setTimeout(b, a);
            c.stop = function() {
                clearTimeout(d)
            }
        })
    }
    ,
    function() {
        var a = l.createElement("input")
          , b = l.createElement("select")
          , c = b.appendChild(l.createElement("option"));
        a.type = "checkbox",
        k.checkOn = "" !== a.value,
        k.optSelected = c.selected,
        b.disabled = !0,
        k.optDisabled = !c.disabled,
        a = l.createElement("input"),
        a.value = "t",
        a.type = "radio",
        k.radioValue = "t" === a.value
    }();
    var Yb, Zb, $b = n.expr.attrHandle;
    n.fn.extend({
        attr: function(a, b) {
            return J(this, n.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                n.removeAttr(this, a)
            })
        }
    }),
    n.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (a && 3 !== f && 8 !== f && 2 !== f) {
                return typeof a.getAttribute === U ? n.prop(a, b, c) : (1 === f && n.isXMLDoc(a) || (b = b.toLowerCase(),
                d = n.attrHooks[b] || (n.expr.match.bool.test(b) ? Zb : Yb)),
                void 0 === c ? d && "get"in d && null !== (e = d.get(a, b)) ? e : (e = n.find.attr(a, b),
                null == e ? void 0 : e) : null !== c ? d && "set"in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""),
                c) : void n.removeAttr(a, b))
            }
        },
        removeAttr: function(a, b) {
            var c, d, e = 0, f = b && b.match(E);
            if (f && 1 === a.nodeType) {
                while (c = f[e++]) {
                    d = n.propFix[c] || c,
                    n.expr.match.bool.test(c) && (a[d] = !1),
                    a.removeAttribute(c)
                }
            }
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!k.radioValue && "radio" === b && n.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b),
                        c && (a.value = c),
                        b
                    }
                }
            }
        }
    }),
    Zb = {
        set: function(a, b, c) {
            return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c),
            c
        }
    },
    n.each(n.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = $b[b] || n.find.attr;
        $b[b] = function(a, b, d) {
            var e, f;
            return d || (f = $b[b],
            $b[b] = e,
            e = null != c(a, b, d) ? b.toLowerCase() : null,
            $b[b] = f),
            e
        }
    });
    var _b = /^(?:input|select|textarea|button)$/i;
    n.fn.extend({
        prop: function(a, b) {
            return J(this, n.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return this.each(function() {
                delete this[n.propFix[a] || a]
            })
        }
    }),
    n.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) {
                return f = 1 !== g || !n.isXMLDoc(a),
                f && (b = n.propFix[b] || b,
                e = n.propHooks[b]),
                void 0 !== c ? e && "set"in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get"in e && null !== (d = e.get(a, b)) ? d : a[b]
            }
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    return a.hasAttribute("tabindex") || _b.test(a.nodeName) || a.href ? a.tabIndex : -1
                }
            }
        }
    }),
    k.optSelected || (n.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && b.parentNode && b.parentNode.selectedIndex,
            null
        }
    }),
    n.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        n.propFix[this.toLowerCase()] = this
    });
    var ac = /[\t\r\n\f]/g;
    n.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = "string" == typeof a && a, i = 0, j = this.length;
            if (n.isFunction(a)) {
                return this.each(function(b) {
                    n(this).addClass(a.call(this, b, this.className))
                })
            }
            if (h) {
                for (b = (a || "").match(E) || []; j > i; i++) {
                    if (c = this[i],
                    d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ac, " ") : " ")) {
                        f = 0;
                        while (e = b[f++]) {
                            d.indexOf(" " + e + " ") < 0 && (d += e + " ")
                        }
                        g = n.trim(d),
                        c.className !== g && (c.className = g)
                    }
                }
            }
            return this
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0 === arguments.length || "string" == typeof a && a, i = 0, j = this.length;
            if (n.isFunction(a)) {
                return this.each(function(b) {
                    n(this).removeClass(a.call(this, b, this.className))
                })
            }
            if (h) {
                for (b = (a || "").match(E) || []; j > i; i++) {
                    if (c = this[i],
                    d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ac, " ") : "")) {
                        f = 0;
                        while (e = b[f++]) {
                            while (d.indexOf(" " + e + " ") >= 0) {
                                d = d.replace(" " + e + " ", " ")
                            }
                        }
                        g = a ? n.trim(d) : "",
                        c.className !== g && (c.className = g)
                    }
                }
            }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(n.isFunction(a) ? function(c) {
                n(this).toggleClass(a.call(this, c, this.className, b), b)
            }
            : function() {
                if ("string" === c) {
                    var b, d = 0, e = n(this), f = a.match(E) || [];
                    while (b = f[d++]) {
                        e.hasClass(b) ? e.removeClass(b) : e.addClass(b)
                    }
                } else {
                    (c === U || "boolean" === c) && (this.className && L.set(this, "__className__", this.className),
                    this.className = this.className || a === !1 ? "" : L.get(this, "__className__") || "")
                }
            }
            )
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++) {
                if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(ac, " ").indexOf(b) >= 0) {
                    return !0
                }
            }
            return !1
        }
    });
    var bc = /\r/g;
    n.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0];
            if (arguments.length) {
                return d = n.isFunction(a),
                this.each(function(c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, n(this).val()) : a,
                    null == e ? e = "" : "number" == typeof e ? e += "" : n.isArray(e) && (e = n.map(e, function(a) {
                        return null == a ? "" : a + ""
                    })),
                    b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()],
                    b && "set"in b && void 0 !== b.set(this, e, "value") || (this.value = e))
                })
            }
            if (e) {
                return b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()],
                b && "get"in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value,
                "string" == typeof c ? c.replace(bc, "") : null == c ? "" : c)
            }
        }
    }),
    n.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = n.find.attr(a, "value");
                    return null != b ? b : n.trim(n.text(a))
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++) {
                        if (c = d[i],
                        !(!c.selected && i !== e || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && n.nodeName(c.parentNode, "optgroup"))) {
                            if (b = n(c).val(),
                            f) {
                                return b
                            }
                            g.push(b)
                        }
                    }
                    return g
                },
                set: function(a, b) {
                    var c, d, e = a.options, f = n.makeArray(b), g = e.length;
                    while (g--) {
                        d = e[g],
                        (d.selected = n.inArray(d.value, f) >= 0) && (c = !0)
                    }
                    return c || (a.selectedIndex = -1),
                    f
                }
            }
        }
    }),
    n.each(["radio", "checkbox"], function() {
        n.valHooks[this] = {
            set: function(a, b) {
                return n.isArray(b) ? a.checked = n.inArray(n(a).val(), b) >= 0 : void 0
            }
        },
        k.checkOn || (n.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value
        }
        )
    }),
    n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        n.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
    }),
    n.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
        }
    });
    var cc = n.now()
      , dc = /\?/;
    n.parseJSON = function(a) {
        return JSON.parse(a + "")
    }
    ,
    n.parseXML = function(a) {
        var b, c;
        if (!a || "string" != typeof a) {
            return null
        }
        try {
            c = new DOMParser,
            b = c.parseFromString(a, "text/xml")
        } catch (d) {
            b = void 0
        }
        return (!b || b.getElementsByTagName("parsererror").length) && n.error("Invalid XML: " + a),
        b
    }
    ;
    var ec, fc, gc = /#.*$/, hc = /([?&])_=[^&]*/, ic = /^(.*?):[ \t]*([^\r\n]*)$/gm, jc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, kc = /^(?:GET|HEAD)$/, lc = /^\/\//, mc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, nc = {}, oc = {}, pc = "*/".concat("*");
    try {
        fc = location.href
    } catch (qc) {
        fc = l.createElement("a"),
        fc.href = "",
        fc = fc.href
    }
    ec = mc.exec(fc.toLowerCase()) || [];
    function rc(a) {
        return function(b, c) {
            "string" != typeof b && (c = b,
            b = "*");
            var d, e = 0, f = b.toLowerCase().match(E) || [];
            if (n.isFunction(c)) {
                while (d = f[e++]) {
                    "+" === d[0] ? (d = d.slice(1) || "*",
                    (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
                }
            }
        }
    }
    function sc(a, b, c, d) {
        var e = {}
          , f = a === oc;
        function g(h) {
            var i;
            return e[h] = !0,
            n.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j),
                g(j),
                !1)
            }),
            i
        }
        return g(b.dataTypes[0]) || !e["*"] && g("*")
    }
    function tc(a, b) {
        var c, d, e = n.ajaxSettings.flatOptions || {};
        for (c in b) {
            void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c])
        }
        return d && n.extend(!0, a, d),
        a
    }
    function uc(a, b, c) {
        var d, e, f, g, h = a.contents, i = a.dataTypes;
        while ("*" === i[0]) {
            i.shift(),
            void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"))
        }
        if (d) {
            for (e in h) {
                if (h[e] && h[e].test(d)) {
                    i.unshift(e);
                    break
                }
            }
        }
        if (i[0]in c) {
            f = i[0]
        } else {
            for (e in c) {
                if (!i[0] || a.converters[e + " " + i[0]]) {
                    f = e;
                    break
                }
                g || (g = e)
            }
            f = f || g
        }
        return f ? (f !== i[0] && i.unshift(f),
        c[f]) : void 0
    }
    function vc(a, b, c, d) {
        var e, f, g, h, i, j = {}, k = a.dataTypes.slice();
        if (k[1]) {
            for (g in a.converters) {
                j[g.toLowerCase()] = a.converters[g]
            }
        }
        f = k.shift();
        while (f) {
            if (a.responseFields[f] && (c[a.responseFields[f]] = b),
            !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)),
            i = f,
            f = k.shift()) {
                if ("*" === f) {
                    f = i
                } else {
                    if ("*" !== i && i !== f) {
                        if (g = j[i + " " + f] || j["* " + f],
                        !g) {
                            for (e in j) {
                                if (h = e.split(" "),
                                h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                                    g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0],
                                    k.unshift(h[1]));
                                    break
                                }
                            }
                        }
                        if (g !== !0) {
                            if (g && a["throws"]) {
                                b = g(b)
                            } else {
                                try {
                                    b = g(b)
                                } catch (l) {
                                    return {
                                        state: "parsererror",
                                        error: g ? l : "No conversion from " + i + " to " + f
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return {
            state: "success",
            data: b
        }
    }
    n.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: fc,
            type: "GET",
            isLocal: jc.test(ec[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": pc,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": n.parseJSON,
                "text xml": n.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? tc(tc(a, n.ajaxSettings), b) : tc(n.ajaxSettings, a)
        },
        ajaxPrefilter: rc(nc),
        ajaxTransport: rc(oc),
        ajax: function(a, b) {
            "object" == typeof a && (b = a,
            a = void 0),
            b = b || {};
            var c, d, e, f, g, h, i, j, k = n.ajaxSetup({}, b), l = k.context || k, m = k.context && (l.nodeType || l.jquery) ? n(l) : n.event, o = n.Deferred(), p = n.Callbacks("once memory"), q = k.statusCode || {}, r = {}, s = {}, t = 0, u = "canceled", v = {
                readyState: 0,
                getResponseHeader: function(a) {
                    var b;
                    if (2 === t) {
                        if (!f) {
                            f = {};
                            while (b = ic.exec(e)) {
                                f[b[1].toLowerCase()] = b[2]
                            }
                        }
                        b = f[a.toLowerCase()]
                    }
                    return null == b ? null : b
                },
                getAllResponseHeaders: function() {
                    return 2 === t ? e : null
                },
                setRequestHeader: function(a, b) {
                    var c = a.toLowerCase();
                    return t || (a = s[c] = s[c] || a,
                    r[a] = b),
                    this
                },
                overrideMimeType: function(a) {
                    return t || (k.mimeType = a),
                    this
                },
                statusCode: function(a) {
                    var b;
                    if (a) {
                        if (2 > t) {
                            for (b in a) {
                                q[b] = [q[b], a[b]]
                            }
                        } else {
                            v.always(a[v.status])
                        }
                    }
                    return this
                },
                abort: function(a) {
                    var b = a || u;
                    return c && c.abort(b),
                    x(0, b),
                    this
                }
            };
            if (o.promise(v).complete = p.add,
            v.success = v.done,
            v.error = v.fail,
            k.url = ((a || k.url || fc) + "").replace(gc, "").replace(lc, ec[1] + "//"),
            k.type = b.method || b.type || k.method || k.type,
            k.dataTypes = n.trim(k.dataType || "*").toLowerCase().match(E) || [""],
            null == k.crossDomain && (h = mc.exec(k.url.toLowerCase()),
            k.crossDomain = !(!h || h[1] === ec[1] && h[2] === ec[2] && (h[3] || ("http:" === h[1] ? "80" : "443")) === (ec[3] || ("http:" === ec[1] ? "80" : "443")))),
            k.data && k.processData && "string" != typeof k.data && (k.data = n.param(k.data, k.traditional)),
            sc(nc, k, b, v),
            2 === t) {
                return v
            }
            i = k.global,
            i && 0 === n.active++ && n.event.trigger("ajaxStart"),
            k.type = k.type.toUpperCase(),
            k.hasContent = !kc.test(k.type),
            d = k.url,
            k.hasContent || (k.data && (d = k.url += (dc.test(d) ? "&" : "?") + k.data,
            delete k.data),
            k.cache === !1 && (k.url = hc.test(d) ? d.replace(hc, "$1_=" + cc++) : d + (dc.test(d) ? "&" : "?") + "_=" + cc++)),
            k.ifModified && (n.lastModified[d] && v.setRequestHeader("If-Modified-Since", n.lastModified[d]),
            n.etag[d] && v.setRequestHeader("If-None-Match", n.etag[d])),
            (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", k.contentType),
            v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + pc + "; q=0.01" : "") : k.accepts["*"]);
            for (j in k.headers) {
                v.setRequestHeader(j, k.headers[j])
            }
            if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t)) {
                return v.abort()
            }
            u = "abort";
            for (j in {
                success: 1,
                error: 1,
                complete: 1
            }) {
                v[j](k[j])
            }
            if (c = sc(oc, k, b, v)) {
                v.readyState = 1,
                i && m.trigger("ajaxSend", [v, k]),
                k.async && k.timeout > 0 && (g = setTimeout(function() {
                    v.abort("timeout")
                }, k.timeout));
                try {
                    t = 1,
                    c.send(r, x)
                } catch (w) {
                    if (!(2 > t)) {
                        throw w
                    }
                    x(-1, w)
                }
            } else {
                x(-1, "No Transport")
            }
            function x(a, b, f, h) {
                var j, r, s, u, w, x = b;
                2 !== t && (t = 2,
                g && clearTimeout(g),
                c = void 0,
                e = h || "",
                v.readyState = a > 0 ? 4 : 0,
                j = a >= 200 && 300 > a || 304 === a,
                f && (u = uc(k, v, f)),
                u = vc(k, u, v, j),
                j ? (k.ifModified && (w = v.getResponseHeader("Last-Modified"),
                w && (n.lastModified[d] = w),
                w = v.getResponseHeader("etag"),
                w && (n.etag[d] = w)),
                204 === a || "HEAD" === k.type ? x = "nocontent" : 304 === a ? x = "notmodified" : (x = u.state,
                r = u.data,
                s = u.error,
                j = !s)) : (s = x,
                (a || !x) && (x = "error",
                0 > a && (a = 0))),
                v.status = a,
                v.statusText = (b || x) + "",
                j ? o.resolveWith(l, [r, x, v]) : o.rejectWith(l, [v, x, s]),
                v.statusCode(q),
                q = void 0,
                i && m.trigger(j ? "ajaxSuccess" : "ajaxError", [v, k, j ? r : s]),
                p.fireWith(l, [v, x]),
                i && (m.trigger("ajaxComplete", [v, k]),
                --n.active || n.event.trigger("ajaxStop")))
            }
            return v
        },
        getJSON: function(a, b, c) {
            return n.get(a, b, c, "json")
        },
        getScript: function(a, b) {
            return n.get(a, void 0, b, "script")
        }
    }),
    n.each(["get", "post"], function(a, b) {
        n[b] = function(a, c, d, e) {
            return n.isFunction(c) && (e = e || d,
            d = c,
            c = void 0),
            n.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            })
        }
    }),
    n.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
        n.fn[b] = function(a) {
            return this.on(b, a)
        }
    }),
    n._evalUrl = function(a) {
        return n.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            "throws": !0
        })
    }
    ,
    n.fn.extend({
        wrapAll: function(a) {
            var b;
            return n.isFunction(a) ? this.each(function(b) {
                n(this).wrapAll(a.call(this, b))
            }) : (this[0] && (b = n(a, this[0].ownerDocument).eq(0).clone(!0),
            this[0].parentNode && b.insertBefore(this[0]),
            b.map(function() {
                var a = this;
                while (a.firstElementChild) {
                    a = a.firstElementChild
                }
                return a
            }).append(this)),
            this)
        },
        wrapInner: function(a) {
            return this.each(n.isFunction(a) ? function(b) {
                n(this).wrapInner(a.call(this, b))
            }
            : function() {
                var b = n(this)
                  , c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            }
            )
        },
        wrap: function(a) {
            var b = n.isFunction(a);
            return this.each(function(c) {
                n(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                n.nodeName(this, "body") || n(this).replaceWith(this.childNodes)
            }).end()
        }
    }),
    n.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0
    }
    ,
    n.expr.filters.visible = function(a) {
        return !n.expr.filters.hidden(a)
    }
    ;
    var wc = /%20/g
      , xc = /\[\]$/
      , yc = /\r?\n/g
      , zc = /^(?:submit|button|image|reset|file)$/i
      , Ac = /^(?:input|select|textarea|keygen)/i;
    function Bc(a, b, c, d) {
        var e;
        if (n.isArray(b)) {
            n.each(b, function(b, e) {
                c || xc.test(a) ? d(a, e) : Bc(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d)
            })
        } else {
            if (c || "object" !== n.type(b)) {
                d(a, b)
            } else {
                for (e in b) {
                    Bc(a + "[" + e + "]", b[e], c, d)
                }
            }
        }
    }
    n.param = function(a, b) {
        var c, d = [], e = function(a, b) {
            b = n.isFunction(b) ? b() : null == b ? "" : b,
            d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
        };
        if (void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional),
        n.isArray(a) || a.jquery && !n.isPlainObject(a)) {
            n.each(a, function() {
                e(this.name, this.value)
            })
        } else {
            for (c in a) {
                Bc(c, a[c], b, e)
            }
        }
        return d.join("&").replace(wc, "+")
    }
    ,
    n.fn.extend({
        serialize: function() {
            return n.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var a = n.prop(this, "elements");
                return a ? n.makeArray(a) : this
            }).filter(function() {
                var a = this.type;
                return this.name && !n(this).is(":disabled") && Ac.test(this.nodeName) && !zc.test(a) && (this.checked || !T.test(a))
            }).map(function(a, b) {
                var c = n(this).val();
                return null == c ? null : n.isArray(c) ? n.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(yc, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(yc, "\r\n")
                }
            }).get()
        }
    }),
    n.ajaxSettings.xhr = function() {
        try {
            return new XMLHttpRequest
        } catch (a) {}
    }
    ;
    var Cc = 0
      , Dc = {}
      , Ec = {
        0: 200,
        1223: 204
    }
      , Fc = n.ajaxSettings.xhr();
    a.ActiveXObject && n(a).on("unload", function() {
        for (var a in Dc) {
            Dc[a]()
        }
    }),
    k.cors = !!Fc && "withCredentials"in Fc,
    k.ajax = Fc = !!Fc,
    n.ajaxTransport(function(a) {
        var b;
        return k.cors || Fc && !a.crossDomain ? {
            send: function(c, d) {
                var e, f = a.xhr(), g = ++Cc;
                if (f.open(a.type, a.url, a.async, a.username, a.password),
                a.xhrFields) {
                    for (e in a.xhrFields) {
                        f[e] = a.xhrFields[e]
                    }
                }
                a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType),
                a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                for (e in c) {
                    f.setRequestHeader(e, c[e])
                }
                b = function(a) {
                    return function() {
                        b && (delete Dc[g],
                        b = f.onload = f.onerror = null,
                        "abort" === a ? f.abort() : "error" === a ? d(f.status, f.statusText) : d(Ec[f.status] || f.status, f.statusText, "string" == typeof f.responseText ? {
                            text: f.responseText
                        } : void 0, f.getAllResponseHeaders()))
                    }
                }
                ,
                f.onload = b(),
                f.onerror = b("error"),
                b = Dc[g] = b("abort");
                try {
                    f.send(a.hasContent && a.data || null)
                } catch (h) {
                    if (b) {
                        throw h
                    }
                }
            },
            abort: function() {
                b && b()
            }
        } : void 0
    }),
    n.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return n.globalEval(a),
                a
            }
        }
    }),
    n.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1),
        a.crossDomain && (a.type = "GET")
    }),
    n.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c;
            return {
                send: function(d, e) {
                    b = n("<script>").prop({
                        async: !0,
                        charset: a.scriptCharset,
                        src: a.url
                    }).on("load error", c = function(a) {
                        b.remove(),
                        c = null,
                        a && e("error" === a.type ? 404 : 200, a.type)
                    }
                    ),
                    l.head.appendChild(b[0])
                },
                abort: function() {
                    c && c()
                }
            }
        }
    });
    var Gc = []
      , Hc = /(=)\?(?=&|$)|\?\?/;
    n.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = Gc.pop() || n.expando + "_" + cc++;
            return this[a] = !0,
            a
        }
    }),
    n.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (Hc.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && Hc.test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
        h ? b[h] = b[h].replace(Hc, "$1" + e) : b.jsonp !== !1 && (b.url += (dc.test(b.url) ? "&" : "?") + b.jsonp + "=" + e),
        b.converters["script json"] = function() {
            return g || n.error(e + " was not called"),
            g[0]
        }
        ,
        b.dataTypes[0] = "json",
        f = a[e],
        a[e] = function() {
            g = arguments
        }
        ,
        d.always(function() {
            a[e] = f,
            b[e] && (b.jsonpCallback = c.jsonpCallback,
            Gc.push(e)),
            g && n.isFunction(f) && f(g[0]),
            g = f = void 0
        }),
        "script") : void 0
    }),
    n.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) {
            return null
        }
        "boolean" == typeof b && (c = b,
        b = !1),
        b = b || l;
        var d = v.exec(a)
          , e = !c && [];
        return d ? [b.createElement(d[1])] : (d = n.buildFragment([a], b, e),
        e && e.length && n(e).remove(),
        n.merge([], d.childNodes))
    }
    ;
    var Ic = n.fn.load;
    n.fn.load = function(a, b, c) {
        if ("string" != typeof a && Ic) {
            return Ic.apply(this, arguments)
        }
        var d, e, f, g = this, h = a.indexOf(" ");
        return h >= 0 && (d = n.trim(a.slice(h)),
        a = a.slice(0, h)),
        n.isFunction(b) ? (c = b,
        b = void 0) : b && "object" == typeof b && (e = "POST"),
        g.length > 0 && n.ajax({
            url: a,
            type: e,
            dataType: "html",
            data: b
        }).done(function(a) {
            f = arguments,
            g.html(d ? n("<div>").append(n.parseHTML(a)).find(d) : a)
        }).complete(c && function(a, b) {
            g.each(c, f || [a.responseText, b, a])
        }
        ),
        this
    }
    ,
    n.expr.filters.animated = function(a) {
        return n.grep(n.timers, function(b) {
            return a === b.elem
        }).length
    }
    ;
    var Jc = a.document.documentElement;
    function Kc(a) {
        return n.isWindow(a) ? a : 9 === a.nodeType && a.defaultView
    }
    n.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = n.css(a, "position"), l = n(a), m = {};
            "static" === k && (a.style.position = "relative"),
            h = l.offset(),
            f = n.css(a, "top"),
            i = n.css(a, "left"),
            j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1,
            j ? (d = l.position(),
            g = d.top,
            e = d.left) : (g = parseFloat(f) || 0,
            e = parseFloat(i) || 0),
            n.isFunction(b) && (b = b.call(a, c, h)),
            null != b.top && (m.top = b.top - h.top + g),
            null != b.left && (m.left = b.left - h.left + e),
            "using"in b ? b.using.call(a, m) : l.css(m)
        }
    },
    n.fn.extend({
        offset: function(a) {
            if (arguments.length) {
                return void 0 === a ? this : this.each(function(b) {
                    n.offset.setOffset(this, a, b)
                })
            }
            var b, c, d = this[0], e = {
                top: 0,
                left: 0
            }, f = d && d.ownerDocument;
            if (f) {
                return b = f.documentElement,
                n.contains(b, d) ? (typeof d.getBoundingClientRect !== U && (e = d.getBoundingClientRect()),
                c = Kc(f),
                {
                    top: e.top + c.pageYOffset - b.clientTop,
                    left: e.left + c.pageXOffset - b.clientLeft
                }) : e
            }
        },
        position: function() {
            if (this[0]) {
                var a, b, c = this[0], d = {
                    top: 0,
                    left: 0
                };
                return "fixed" === n.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(),
                b = this.offset(),
                n.nodeName(a[0], "html") || (d = a.offset()),
                d.top += n.css(a[0], "borderTopWidth", !0),
                d.left += n.css(a[0], "borderLeftWidth", !0)),
                {
                    top: b.top - d.top - n.css(c, "marginTop", !0),
                    left: b.left - d.left - n.css(c, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || Jc;
                while (a && !n.nodeName(a, "html") && "static" === n.css(a, "position")) {
                    a = a.offsetParent
                }
                return a || Jc
            })
        }
    }),
    n.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(b, c) {
        var d = "pageYOffset" === c;
        n.fn[b] = function(e) {
            return J(this, function(b, e, f) {
                var g = Kc(b);
                return void 0 === f ? g ? g[c] : b[e] : void (g ? g.scrollTo(d ? a.pageXOffset : f, d ? f : a.pageYOffset) : b[e] = f)
            }, b, e, arguments.length, null)
        }
    }),
    n.each(["top", "left"], function(a, b) {
        n.cssHooks[b] = yb(k.pixelPosition, function(a, c) {
            return c ? (c = xb(a, b),
            vb.test(c) ? n(a).position()[b] + "px" : c) : void 0
        })
    }),
    n.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        n.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            n.fn[d] = function(d, e) {
                var f = arguments.length && (c || "boolean" != typeof d)
                  , g = c || (d === !0 || e === !0 ? "margin" : "border");
                return J(this, function(b, c, d) {
                    var e;
                    return n.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement,
                    Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? n.css(b, c, g) : n.style(b, c, d, g)
                }, b, f ? d : void 0, f, null)
            }
        })
    }),
    n.fn.size = function() {
        return this.length
    }
    ,
    n.fn.andSelf = n.fn.addBack,
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return n
    });
    var Lc = a.jQuery
      , Mc = a.$;
    return n.noConflict = function(b) {
        return a.$ === n && (a.$ = Mc),
        b && a.jQuery === n && (a.jQuery = Lc),
        n
    }
    ,
    typeof b === U && (a.jQuery = a.$ = n),
    n
});
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            a(require("jquery"))
        } else {
            a(jQuery)
        }
    }
}(function(f) {
    var a = /\+/g;
    function d(i) {
        return b.raw ? i : encodeURIComponent(i)
    }
    function g(i) {
        return b.raw ? i : decodeURIComponent(i)
    }
    function h(i) {
        return d(b.json ? JSON.stringify(i) : String(i))
    }
    function c(i) {
        if (i.indexOf('"') === 0) {
            i = i.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            i = decodeURIComponent(i.replace(a, " "));
            return b.json ? JSON.parse(i) : i
        } catch (j) {}
    }
    function e(j, i) {
        var k = b.raw ? j : c(j);
        return f.isFunction(i) ? i(k) : k
    }
    var b = f.cookie = function(q, p, v) {
        if (p !== undefined && !f.isFunction(p)) {
            v = f.extend({}, b.defaults, v);
            if (typeof v.expires === "number") {
                var r = v.expires
                  , u = v.expires = new Date();
                u.setTime(+u + r * 86400000)
            }
            return (document.cookie = [d(q), "=", h(p), v.expires ? "; expires=" + v.expires.toUTCString() : "", v.path ? "; path=" + v.path : "", v.domain ? "; domain=" + v.domain : "", v.secure ? "; secure" : ""].join(""))
        }
        var w = q ? undefined : {};
        var s = document.cookie ? document.cookie.split("; ") : [];
        for (var o = 0, m = s.length; o < m; o++) {
            var n = s[o].split("=");
            var j = g(n.shift());
            var k = n.join("=");
            if (q && q === j) {
                w = e(k, p);
                break
            }
            if (!q && (k = e(k)) !== undefined) {
                w[j] = k
            }
        }
        return w
    }
    ;
    b.defaults = {};
    f.removeCookie = function(j, i) {
        if (f.cookie(j) === undefined) {
            return false
        }
        f.cookie(j, "", f.extend({}, i, {
            expires: -1
        }));
        return !f.cookie(j)
    }
}));
(function(b) {
    var a = function(e, d) {
        var c = !/[^\w\-\.:]/.test(e) ? a.cache[e] = a.cache[e] || a(a.load(e)) : new Function(a.arg + ",tmpl","var _e=tmpl.encode" + a.helper + ",_s='" + e.replace(a.regexp, a.func) + "';return _s;");
        return d ? c(d, a) : function(f) {
            return c(f, a)
        }
    };
    a.cache = {};
    a.load = function(c) {
        return document.getElementById(c).innerHTML
    }
    ;
    a.regexp = /([\s'\\])(?!(?:[^{]|\{(?!%))*%\})|(?:\{%(=|#)([\s\S]+?)%\})|(\{%)|(%\})/g;
    a.func = function(d, h, g, f, e, c) {
        if (h) {
            return {
                "\n": "\\n",
                "\r": "\\r",
                "\t": "\\t",
                " ": " "
            }[h] || "\\" + h
        }
        if (g) {
            if (g === "=") {
                return "'+_e(" + f + ")+'"
            }
            return "'+" + f + "+'"
        }
        if (e) {
            return "';"
        }
        if (c) {
            return "_s+='"
        }
    }
    ;
    a.encReg = /[<>&"'\x00]/g;
    a.encMap = {
        "<": "&lt;",
        ">": "&gt;",
        "&": "&amp;",
        '"': "&quot;",
        "'": "&#39;"
    };
    a.encode = function(c) {
        return String(c).replace(a.encReg, function(d) {
            return a.encMap[d] || ""
        })
    }
    ;
    a.arg = "o";
    a.helper = ",print=function(s,e){_s+=e&&(s||'')||_e(s);},include=function(s,d){_s+=tmpl(s,d);}";
    if (typeof define === "function" && define.amd) {
        define(function() {
            return a
        })
    } else {
        b.tmpl = a
    }
}(this));
/*! jQuery UI - v1.10.3 - 2013-05-24
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.autocomplete.js, jquery.ui.menu.js
* Copyright 2013 jQuery Foundation and other contributors Licensed MIT */
(function(g, d) {
    function c(k, j) {
        var e, p, l, m = k.nodeName.toLowerCase();
        return "area" === m ? (e = k.parentNode,
        p = e.name,
        k.href && p && "map" === e.nodeName.toLowerCase() ? (l = g("img[usemap=#" + p + "]")[0],
        !!l && f(l)) : !1) : (/input|select|textarea|button|object/.test(m) ? !k.disabled : "a" === m ? k.href || j : j) && f(k)
    }
    function f(a) {
        return g.expr.filters.visible(a) && !g(a).parents().addBack().filter(function() {
            return "hidden" === g.css(this, "visibility")
        }).length
    }
    var b = 0
      , h = /^ui-id-\d+$/;
    g.ui = g.ui || {},
    g.extend(g.ui, {
        version: "1.10.3",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }),
    g.fn.extend({
        focus: function(a) {
            return function(e, j) {
                return "number" == typeof e ? this.each(function() {
                    var i = this;
                    setTimeout(function() {
                        g(i).focus(),
                        j && j.call(i)
                    }, e)
                }) : a.apply(this, arguments)
            }
        }(g.fn.focus),
        scrollParent: function() {
            var a;
            return a = g.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
                return /(relative|absolute|fixed)/.test(g.css(this, "position")) && /(auto|scroll)/.test(g.css(this, "overflow") + g.css(this, "overflow-y") + g.css(this, "overflow-x"))
            }).eq(0) : this.parents().filter(function() {
                return /(auto|scroll)/.test(g.css(this, "overflow") + g.css(this, "overflow-y") + g.css(this, "overflow-x"))
            }).eq(0),
            /fixed/.test(this.css("position")) || !a.length ? g(document) : a
        },
        zIndex: function(j) {
            if (j !== d) {
                return this.css("zIndex", j)
            }
            if (this.length) {
                for (var k, e, l = g(this[0]); l.length && l[0] !== document; ) {
                    if (k = l.css("position"),
                    ("absolute" === k || "relative" === k || "fixed" === k) && (e = parseInt(l.css("zIndex"), 10),
                    !isNaN(e) && 0 !== e)) {
                        return e
                    }
                    l = l.parent()
                }
            }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                this.id || (this.id = "ui-id-" + ++b)
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                h.test(this.id) && g(this).removeAttr("id")
            })
        }
    }),
    g.extend(g.expr[":"], {
        data: g.expr.createPseudo ? g.expr.createPseudo(function(a) {
            return function(e) {
                return !!g.data(e, a)
            }
        }) : function(e, a, j) {
            return !!g.data(e, j[3])
        }
        ,
        focusable: function(a) {
            return c(a, !isNaN(g.attr(a, "tabindex")))
        },
        tabbable: function(i) {
            var j = g.attr(i, "tabindex")
              , e = isNaN(j);
            return (e || j >= 0) && c(i, !e)
        }
    }),
    g("<a>").outerWidth(1).jquery || g.each(["Width", "Height"], function(j, k) {
        function e(q, o, r, n) {
            return g.each(p, function() {
                o -= parseFloat(g.css(q, "padding" + this)) || 0,
                r && (o -= parseFloat(g.css(q, "border" + this + "Width")) || 0),
                n && (o -= parseFloat(g.css(q, "margin" + this)) || 0)
            }),
            o
        }
        var p = "Width" === k ? ["Left", "Right"] : ["Top", "Bottom"]
          , l = k.toLowerCase()
          , m = {
            innerWidth: g.fn.innerWidth,
            innerHeight: g.fn.innerHeight,
            outerWidth: g.fn.outerWidth,
            outerHeight: g.fn.outerHeight
        };
        g.fn["inner" + k] = function(a) {
            return a === d ? m["inner" + k].call(this) : this.each(function() {
                g(this).css(l, e(this, a) + "px")
            })
        }
        ,
        g.fn["outer" + k] = function(n, a) {
            return "number" != typeof n ? m["outer" + k].call(this, n) : this.each(function() {
                g(this).css(l, e(this, n, !0, a) + "px")
            })
        }
    }),
    g.fn.addBack || (g.fn.addBack = function(a) {
        return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
    }
    ),
    g("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (g.fn.removeData = function(a) {
        return function(e) {
            return arguments.length ? a.call(this, g.camelCase(e)) : a.call(this)
        }
    }(g.fn.removeData)),
    g.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),
    g.support.selectstart = "onselectstart"in document.createElement("div"),
    g.fn.extend({
        disableSelection: function() {
            return this.bind((g.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(a) {
                a.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    }),
    g.extend(g.ui, {
        plugin: {
            add: function(k, j, l) {
                var e, m = g.ui[k].prototype;
                for (e in l) {
                    m.plugins[e] = m.plugins[e] || [],
                    m.plugins[e].push([j, l[e]])
                }
            },
            call: function(n, l, k) {
                var m, j = n.plugins[l];
                if (j && n.element[0].parentNode && 11 !== n.element[0].parentNode.nodeType) {
                    for (m = 0; j.length > m; m++) {
                        n.options[j[m][0]] && j[m][1].apply(n.element, k)
                    }
                }
            }
        },
        hasScroll: function(k, j) {
            if ("hidden" === g(k).css("overflow")) {
                return !1
            }
            var l = j && "left" === j ? "scrollLeft" : "scrollTop"
              , e = !1;
            return k[l] > 0 ? !0 : (k[l] = 1,
            e = k[l] > 0,
            k[l] = 0,
            e)
        }
    })
}
)(jQuery);
(function(d, b) {
    var a = 0
      , c = Array.prototype.slice
      , f = d.cleanData;
    d.cleanData = function(h) {
        for (var g, j = 0; null != (g = h[j]); j++) {
            try {
                d(g).triggerHandler("remove")
            } catch (e) {}
        }
        f(h)
    }
    ,
    d.widget = function(m, v, j) {
        var q, e, g, p, k = {}, t = m.split(".")[0];
        m = m.split(".")[1],
        q = t + "-" + m,
        j || (j = v,
        v = d.Widget),
        d.expr[":"][q.toLowerCase()] = function(h) {
            return !!d.data(h, q)
        }
        ,
        d[t] = d[t] || {},
        e = d[t][m],
        g = d[t][m] = function(l, h) {
            return this._createWidget ? (arguments.length && this._createWidget(l, h),
            b) : new g(l,h)
        }
        ,
        d.extend(g, e, {
            version: j.version,
            _proto: d.extend({}, j),
            _childConstructors: []
        }),
        p = new v,
        p.options = d.widget.extend({}, p.options),
        d.each(j, function(h, l) {
            return d.isFunction(l) ? (k[h] = function() {
                var n = function() {
                    return v.prototype[h].apply(this, arguments)
                }
                  , i = function(o) {
                    return v.prototype[h].apply(this, o)
                };
                return function() {
                    var r, u = this._super, o = this._superApply;
                    return this._super = n,
                    this._superApply = i,
                    r = l.apply(this, arguments),
                    this._super = u,
                    this._superApply = o,
                    r
                }
            }(),
            b) : (k[h] = l,
            b)
        }),
        g.prototype = d.widget.extend(p, {
            widgetEventPrefix: e ? p.widgetEventPrefix : m
        }, k, {
            constructor: g,
            namespace: t,
            widgetName: m,
            widgetFullName: q
        }),
        e ? (d.each(e._childConstructors, function(l, h) {
            var n = h.prototype;
            d.widget(n.namespace + "." + n.widgetName, g, h._proto)
        }),
        delete e._childConstructors) : v._childConstructors.push(g),
        d.widget.bridge(m, g)
    }
    ,
    d.widget.extend = function(g) {
        for (var m, e, k = c.call(arguments, 1), l = 0, j = k.length; j > l; l++) {
            for (m in k[l]) {
                e = k[l][m],
                k[l].hasOwnProperty(m) && e !== b && (g[m] = d.isPlainObject(e) ? d.isPlainObject(g[m]) ? d.widget.extend({}, g[m], e) : d.widget.extend({}, e) : e)
            }
        }
        return g
    }
    ,
    d.widget.bridge = function(g, h) {
        var e = h.prototype.widgetFullName || g;
        d.fn[g] = function(k) {
            var m = "string" == typeof k
              , j = c.call(arguments, 1)
              , i = this;
            return k = !m && j.length ? d.widget.extend.apply(null, [k].concat(j)) : k,
            m ? this.each(function() {
                var l, o = d.data(this, e);
                return o ? d.isFunction(o[k]) && "_" !== k.charAt(0) ? (l = o[k].apply(o, j),
                l !== o && l !== b ? (i = l && l.jquery ? i.pushStack(l.get()) : l,
                !1) : b) : d.error("no such method '" + k + "' for " + g + " widget instance") : d.error("cannot call methods on " + g + " prior to initialization; attempted to call method '" + k + "'")
            }) : this.each(function() {
                var l = d.data(this, e);
                l ? l.option(k || {})._init() : d.data(this, e, new h(k,this))
            }),
            i
        }
    }
    ,
    d.Widget = function() {}
    ,
    d.Widget._childConstructors = [],
    d.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(e, g) {
            g = d(g || this.defaultElement || this)[0],
            this.element = d(g),
            this.uuid = a++,
            this.eventNamespace = "." + this.widgetName + this.uuid,
            this.options = d.widget.extend({}, this.options, this._getCreateOptions(), e),
            this.bindings = d(),
            this.hoverable = d(),
            this.focusable = d(),
            g !== this && (d.data(g, this.widgetFullName, this),
            this._on(!0, this.element, {
                remove: function(h) {
                    h.target === g && this.destroy()
                }
            }),
            this.document = d(g.style ? g.ownerDocument : g.document || g),
            this.window = d(this.document[0].defaultView || this.document[0].parentWindow)),
            this._create(),
            this._trigger("create", null, this._getCreateEventData()),
            this._init()
        },
        _getCreateOptions: d.noop,
        _getCreateEventData: d.noop,
        _create: d.noop,
        _init: d.noop,
        destroy: function() {
            this._destroy(),
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(d.camelCase(this.widgetFullName)),
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"),
            this.bindings.unbind(this.eventNamespace),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: d.noop,
        widget: function() {
            return this.element
        },
        option: function(g, h) {
            var l, e, j, k = g;
            if (0 === arguments.length) {
                return d.widget.extend({}, this.options)
            }
            if ("string" == typeof g) {
                if (k = {},
                l = g.split("."),
                g = l.shift(),
                l.length) {
                    for (e = k[g] = d.widget.extend({}, this.options[g]),
                    j = 0; l.length - 1 > j; j++) {
                        e[l[j]] = e[l[j]] || {},
                        e = e[l[j]]
                    }
                    if (g = l.pop(),
                    h === b) {
                        return e[g] === b ? null : e[g]
                    }
                    e[g] = h
                } else {
                    if (h === b) {
                        return this.options[g] === b ? null : this.options[g]
                    }
                    k[g] = h
                }
            }
            return this._setOptions(k),
            this
        },
        _setOptions: function(h) {
            var g;
            for (g in h) {
                this._setOption(g, h[g])
            }
            return this
        },
        _setOption: function(h, g) {
            return this.options[h] = g,
            "disabled" === h && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!g).attr("aria-disabled", g),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")),
            this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(g, h, k) {
            var e, j = this;
            "boolean" != typeof g && (k = h,
            h = g,
            g = !1),
            k ? (h = e = d(h),
            this.bindings = this.bindings.add(h)) : (k = h,
            h = this.element,
            e = this.widget()),
            d.each(k, function(s, q) {
                function p() {
                    return g || j.options.disabled !== !0 && !d(this).hasClass("ui-state-disabled") ? ("string" == typeof q ? j[q] : q).apply(j, arguments) : b
                }
                "string" != typeof q && (p.guid = q.guid = q.guid || p.guid || d.guid++);
                var i = s.match(/^(\w+)\s*(.*)$/)
                  , m = i[1] + j.eventNamespace
                  , r = i[2];
                r ? e.delegate(r, m, p) : h.bind(m, p)
            })
        },
        _off: function(h, g) {
            g = (g || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
            h.unbind(g).undelegate(g)
        },
        _delay: function(k, h) {
            function g() {
                return ("string" == typeof k ? j[k] : k).apply(j, arguments)
            }
            var j = this;
            return setTimeout(g, h || 0)
        },
        _hoverable: function(e) {
            this.hoverable = this.hoverable.add(e),
            this._on(e, {
                mouseenter: function(g) {
                    d(g.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(g) {
                    d(g.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(e) {
            this.focusable = this.focusable.add(e),
            this._on(e, {
                focusin: function(g) {
                    d(g.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(g) {
                    d(g.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(h, g, j) {
            var l, e, k = this.options[h];
            if (j = j || {},
            g = d.Event(g),
            g.type = (h === this.widgetEventPrefix ? h : this.widgetEventPrefix + h).toLowerCase(),
            g.target = this.element[0],
            e = g.originalEvent) {
                for (l in e) {
                    l in g || (g[l] = e[l])
                }
            }
            return this.element.trigger(g, j),
            !(d.isFunction(k) && k.apply(this.element[0], [g].concat(j)) === !1 || g.isDefaultPrevented())
        }
    },
    d.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(g, e) {
        d.Widget.prototype["_" + g] = function(i, l, h) {
            "string" == typeof l && (l = {
                effect: l
            });
            var j, k = l ? l === !0 || "number" == typeof l ? e : l.effect || e : g;
            l = l || {},
            "number" == typeof l && (l = {
                duration: l
            }),
            j = !d.isEmptyObject(l),
            l.complete = h,
            l.delay && i.delay(l.delay),
            j && d.effects && d.effects.effect[k] ? i[g](l) : k !== g && i[k] ? i[k](l.duration, l.easing, h) : i.queue(function(m) {
                d(this)[g](),
                h && h.call(i[0]),
                m()
            })
        }
    })
}
)(jQuery);
(function(b) {
    var a = !1;
    b(document).mouseup(function() {
        a = !1
    }),
    b.widget("ui.mouse", {
        version: "1.10.3",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var c = this;
            this.element.bind("mousedown." + this.widgetName, function(d) {
                return c._mouseDown(d)
            }).bind("click." + this.widgetName, function(d) {
                return !0 === b.data(d.target, c.widgetName + ".preventClickEvent") ? (b.removeData(d.target, c.widgetName + ".preventClickEvent"),
                d.stopImmediatePropagation(),
                !1) : undefined
            }),
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName),
            this._mouseMoveDelegate && b(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function(d) {
            if (!a) {
                this._mouseStarted && this._mouseUp(d),
                this._mouseDownEvent = d;
                var e = this
                  , f = 1 === d.which
                  , c = "string" == typeof this.options.cancel && d.target.nodeName ? b(d.target).closest(this.options.cancel).length : !1;
                return f && !c && this._mouseCapture(d) ? (this.mouseDelayMet = !this.options.delay,
                this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                    e.mouseDelayMet = !0
                }, this.options.delay)),
                this._mouseDistanceMet(d) && this._mouseDelayMet(d) && (this._mouseStarted = this._mouseStart(d) !== !1,
                !this._mouseStarted) ? (d.preventDefault(),
                !0) : (!0 === b.data(d.target, this.widgetName + ".preventClickEvent") && b.removeData(d.target, this.widgetName + ".preventClickEvent"),
                this._mouseMoveDelegate = function(g) {
                    return e._mouseMove(g)
                }
                ,
                this._mouseUpDelegate = function(g) {
                    return e._mouseUp(g)
                }
                ,
                b(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate),
                d.preventDefault(),
                a = !0,
                !0)) : !0
            }
        },
        _mouseMove: function(c) {
            return b.ui.ie && (!document.documentMode || 9 > document.documentMode) && !c.button ? this._mouseUp(c) : this._mouseStarted ? (this._mouseDrag(c),
            c.preventDefault()) : (this._mouseDistanceMet(c) && this._mouseDelayMet(c) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, c) !== !1,
            this._mouseStarted ? this._mouseDrag(c) : this._mouseUp(c)),
            !this._mouseStarted)
        },
        _mouseUp: function(c) {
            return b(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
            this._mouseStarted && (this._mouseStarted = !1,
            c.target === this._mouseDownEvent.target && b.data(c.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(c)),
            !1
        },
        _mouseDistanceMet: function(c) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - c.pageX), Math.abs(this._mouseDownEvent.pageY - c.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return !0
        }
    })
}
)(jQuery);
(function(C, x) {
    function q(c, d, a) {
        return [parseFloat(c[0]) * (g.test(c[0]) ? d / 100 : 1), parseFloat(c[1]) * (g.test(c[1]) ? a / 100 : 1)]
    }
    function D(c, a) {
        return parseInt(C.css(c, a), 10) || 0
    }
    function k(c) {
        var a = c[0];
        return 9 === a.nodeType ? {
            width: c.width(),
            height: c.height(),
            offset: {
                top: 0,
                left: 0
            }
        } : C.isWindow(a) ? {
            width: c.width(),
            height: c.height(),
            offset: {
                top: c.scrollTop(),
                left: c.scrollLeft()
            }
        } : a.preventDefault ? {
            width: 0,
            height: 0,
            offset: {
                top: a.pageY,
                left: a.pageX
            }
        } : {
            width: c.outerWidth(),
            height: c.outerHeight(),
            offset: c.offset()
        }
    }
    C.ui = C.ui || {};
    var A, j = Math.max, b = Math.abs, v = Math.round, m = /left|center|right/, z = /top|center|bottom/, B = /[\+\-]\d+(\.[\d]+)?%?/, y = /^\w+/, g = /%$/, w = C.fn.position;
    C.position = {
        scrollbarWidth: function() {
            if (A !== x) {
                return A
            }
            var a, c, e = C("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), d = e.children()[0];
            return C("body").append(e),
            a = d.offsetWidth,
            e.css("overflow", "scroll"),
            c = d.offsetWidth,
            a === c && (c = e[0].clientWidth),
            e.remove(),
            A = a - c
        },
        getScrollInfo: function(h) {
            var d = h.isWindow ? "" : h.element.css("overflow-x")
              , f = h.isWindow ? "" : h.element.css("overflow-y")
              , l = "scroll" === d || "auto" === d && h.width < h.element[0].scrollWidth
              , c = "scroll" === f || "auto" === f && h.height < h.element[0].scrollHeight;
            return {
                width: c ? C.position.scrollbarWidth() : 0,
                height: l ? C.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(d) {
            var a = C(d || window)
              , c = C.isWindow(a[0]);
            return {
                element: a,
                isWindow: c,
                offset: a.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: a.scrollLeft(),
                scrollTop: a.scrollTop(),
                width: c ? a.width() : a.outerWidth(),
                height: c ? a.height() : a.outerHeight()
            }
        }
    },
    C.fn.position = function(i) {
        if (!i || !i.of) {
            return w.apply(this, arguments)
        }
        i = C.extend({}, i);
        var r, c, d, h, u, n, t = C(i.of), l = C.position.getWithinInfo(i.within), s = C.position.getScrollInfo(l), o = (i.collision || "flip").split(" "), f = {};
        return n = k(t),
        t[0].preventDefault && (i.at = "left top"),
        c = n.width,
        d = n.height,
        h = n.offset,
        u = C.extend({}, h),
        C.each(["my", "at"], function() {
            var e, a, p = (i[this] || "").split(" ");
            1 === p.length && (p = m.test(p[0]) ? p.concat(["center"]) : z.test(p[0]) ? ["center"].concat(p) : ["center", "center"]),
            p[0] = m.test(p[0]) ? p[0] : "center",
            p[1] = z.test(p[1]) ? p[1] : "center",
            e = B.exec(p[0]),
            a = B.exec(p[1]),
            f[this] = [e ? e[0] : 0, a ? a[0] : 0],
            i[this] = [y.exec(p[0])[0], y.exec(p[1])[0]]
        }),
        1 === o.length && (o[1] = o[0]),
        "right" === i.at[0] ? u.left += c : "center" === i.at[0] && (u.left += c / 2),
        "bottom" === i.at[1] ? u.top += d : "center" === i.at[1] && (u.top += d / 2),
        r = q(f.at, c, d),
        u.left += r[0],
        u.top += r[1],
        this.each(function() {
            var p, E, J = C(this), L = J.outerWidth(), I = J.outerHeight(), G = D(this, "marginLeft"), K = D(this, "marginTop"), a = L + G + D(this, "marginRight") + s.width, F = I + K + D(this, "marginBottom") + s.height, e = C.extend({}, u), H = q(f.my, J.outerWidth(), J.outerHeight());
            "right" === i.my[0] ? e.left -= L : "center" === i.my[0] && (e.left -= L / 2),
            "bottom" === i.my[1] ? e.top -= I : "center" === i.my[1] && (e.top -= I / 2),
            e.left += H[0],
            e.top += H[1],
            C.support.offsetFractions || (e.left = v(e.left),
            e.top = v(e.top)),
            p = {
                marginLeft: G,
                marginTop: K
            },
            C.each(["left", "top"], function(M, N) {
                C.ui.position[o[M]] && C.ui.position[o[M]][N](e, {
                    targetWidth: c,
                    targetHeight: d,
                    elemWidth: L,
                    elemHeight: I,
                    collisionPosition: p,
                    collisionWidth: a,
                    collisionHeight: F,
                    offset: [r[0] + H[0], r[1] + H[1]],
                    my: i.my,
                    at: i.at,
                    within: l,
                    elem: J
                })
            }),
            i.using && (E = function(O) {
                var N = h.left - e.left
                  , Q = N + c - L
                  , R = h.top - e.top
                  , M = R + d - I
                  , P = {
                    target: {
                        element: t,
                        left: h.left,
                        top: h.top,
                        width: c,
                        height: d
                    },
                    element: {
                        element: J,
                        left: e.left,
                        top: e.top,
                        width: L,
                        height: I
                    },
                    horizontal: 0 > Q ? "left" : N > 0 ? "right" : "center",
                    vertical: 0 > M ? "top" : R > 0 ? "bottom" : "middle"
                };
                L > c && c > b(N + Q) && (P.horizontal = "center"),
                I > d && d > b(R + M) && (P.vertical = "middle"),
                P.important = j(b(N), b(Q)) > j(b(R), b(M)) ? "horizontal" : "vertical",
                i.using.call(this, O, P)
            }
            ),
            J.offset(C.extend(e, {
                using: E
            }))
        })
    }
    ,
    C.ui.position = {
        fit: {
            left: function(F, u) {
                var o, G = u.within, d = G.isWindow ? G.scrollLeft : G.offset.left, E = G.width, c = F.left - u.collisionPosition.marginLeft, p = d - c, f = c + u.collisionWidth - E - d;
                u.collisionWidth > E ? p > 0 && 0 >= f ? (o = F.left + p + u.collisionWidth - E - d,
                F.left += p - o) : F.left = f > 0 && 0 >= p ? d : p > f ? d + E - u.collisionWidth : d : p > 0 ? F.left += p : f > 0 ? F.left -= f : F.left = j(F.left - c, F.left)
            },
            top: function(F, u) {
                var o, G = u.within, d = G.isWindow ? G.scrollTop : G.offset.top, E = u.within.height, c = F.top - u.collisionPosition.marginTop, p = d - c, f = c + u.collisionHeight - E - d;
                u.collisionHeight > E ? p > 0 && 0 >= f ? (o = F.top + p + u.collisionHeight - E - d,
                F.top += p - o) : F.top = f > 0 && 0 >= p ? d : p > f ? d + E - u.collisionHeight : d : p > 0 ? F.top += p : f > 0 ? F.top -= f : F.top = j(F.top - c, F.top)
            }
        },
        flip: {
            left: function(P, K) {
                var H, Q, F = K.within, N = F.offset.left + F.scrollLeft, E = F.width, I = F.isWindow ? F.scrollLeft : F.offset.left, G = P.left - K.collisionPosition.marginLeft, M = G - I, O = G + K.collisionWidth - E - I, L = "left" === K.my[0] ? -K.elemWidth : "right" === K.my[0] ? K.elemWidth : 0, r = "left" === K.at[0] ? K.targetWidth : "right" === K.at[0] ? -K.targetWidth : 0, J = -2 * K.offset[0];
                0 > M ? (H = P.left + L + r + J + K.collisionWidth - E - N,
                (0 > H || b(M) > H) && (P.left += L + r + J)) : O > 0 && (Q = P.left - K.collisionPosition.marginLeft + L + r + J - I,
                (Q > 0 || O > b(Q)) && (P.left += L + r + J))
            },
            top: function(Q, L) {
                var I, R, F = L.within, O = F.offset.top + F.scrollTop, E = F.height, J = F.isWindow ? F.scrollTop : F.offset.top, H = Q.top - L.collisionPosition.marginTop, N = H - J, P = H + L.collisionHeight - E - J, M = "top" === L.my[1], r = M ? -L.elemHeight : "bottom" === L.my[1] ? L.elemHeight : 0, K = "top" === L.at[1] ? L.targetHeight : "bottom" === L.at[1] ? -L.targetHeight : 0, G = -2 * L.offset[1];
                0 > N ? (R = Q.top + r + K + G + L.collisionHeight - E - O,
                Q.top + r + K + G > N && (0 > R || b(N) > R) && (Q.top += r + K + G)) : P > 0 && (I = Q.top - L.collisionPosition.marginTop + r + K + G - J,
                Q.top + r + K + G > P && (I > 0 || P > b(I)) && (Q.top += r + K + G))
            }
        },
        flipfit: {
            left: function() {
                C.ui.position.flip.left.apply(this, arguments),
                C.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                C.ui.position.flip.top.apply(this, arguments),
                C.ui.position.fit.top.apply(this, arguments)
            }
        }
    },
    function() {
        var l, d, f, t, c, p = document.getElementsByTagName("body")[0], h = document.createElement("div");
        l = document.createElement(p ? "div" : "body"),
        f = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        },
        p && C.extend(f, {
            position: "absolute",
            left: "-1000px",
            top: "-1000px"
        });
        for (c in f) {
            l.style[c] = f[c]
        }
        l.appendChild(h),
        d = p || document.documentElement,
        d.insertBefore(l, d.firstChild),
        h.style.cssText = "position: absolute; left: 10.7432222px;",
        t = C(h).offset().left,
        C.support.offsetFractions = t > 10 && 11 > t,
        l.innerHTML = "",
        d.removeChild(l)
    }()
}
)(jQuery);
(function(a) {
    a.widget("ui.draggable", a.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            "original" !== this.options.helper || /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative"),
            this.options.addClasses && this.element.addClass("ui-draggable"),
            this.options.disabled && this.element.addClass("ui-draggable-disabled"),
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),
            this._mouseDestroy()
        },
        _mouseCapture: function(c) {
            var b = this.options;
            return this.helper || b.disabled || a(c.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(c),
            this.handle ? (a(b.iframeFix === !0 ? "iframe" : b.iframeFix).each(function() {
                a("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(a(this).offset()).appendTo("body")
            }),
            !0) : !1)
        },
        _mouseStart: function(c) {
            var b = this.options;
            return this.helper = this._createHelper(c),
            this.helper.addClass("ui-draggable-dragging"),
            this._cacheHelperProportions(),
            a.ui.ddmanager && (a.ui.ddmanager.current = this),
            this._cacheMargins(),
            this.cssPosition = this.helper.css("position"),
            this.scrollParent = this.helper.scrollParent(),
            this.offsetParent = this.helper.offsetParent(),
            this.offsetParentCssPosition = this.offsetParent.css("position"),
            this.offset = this.positionAbs = this.element.offset(),
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            },
            this.offset.scroll = !1,
            a.extend(this.offset, {
                click: {
                    left: c.pageX - this.offset.left,
                    top: c.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }),
            this.originalPosition = this.position = this._generatePosition(c),
            this.originalPageX = c.pageX,
            this.originalPageY = c.pageY,
            b.cursorAt && this._adjustOffsetFromHelper(b.cursorAt),
            this._setContainment(),
            this._trigger("start", c) === !1 ? (this._clear(),
            !1) : (this._cacheHelperProportions(),
            a.ui.ddmanager && !b.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, c),
            this._mouseDrag(c, !0),
            a.ui.ddmanager && a.ui.ddmanager.dragStart(this, c),
            !0)
        },
        _mouseDrag: function(c, b) {
            if ("fixed" === this.offsetParentCssPosition && (this.offset.parent = this._getParentOffset()),
            this.position = this._generatePosition(c),
            this.positionAbs = this._convertPositionTo("absolute"),
            !b) {
                var d = this._uiHash();
                if (this._trigger("drag", c, d) === !1) {
                    return this._mouseUp({}),
                    !1
                }
                this.position = d.position
            }
            return this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"),
            this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"),
            a.ui.ddmanager && a.ui.ddmanager.drag(this, c),
            !1
        },
        _mouseStop: function(c) {
            var b = this
              , d = !1;
            return a.ui.ddmanager && !this.options.dropBehaviour && (d = a.ui.ddmanager.drop(this, c)),
            this.dropped && (d = this.dropped,
            this.dropped = !1),
            "original" !== this.options.helper || a.contains(this.element[0].ownerDocument, this.element[0]) ? ("invalid" === this.options.revert && !d || "valid" === this.options.revert && d || this.options.revert === !0 || a.isFunction(this.options.revert) && this.options.revert.call(this.element, d) ? a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                b._trigger("stop", c) !== !1 && b._clear()
            }) : this._trigger("stop", c) !== !1 && this._clear(),
            !1) : !1
        },
        _mouseUp: function(b) {
            return a("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            }),
            a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b),
            a.ui.mouse.prototype._mouseUp.call(this, b)
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(),
            this
        },
        _getHandle: function(b) {
            return this.options.handle ? !!a(b.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _createHelper: function(c) {
            var b = this.options
              , d = a.isFunction(b.helper) ? a(b.helper.apply(this.element[0], [c])) : "clone" === b.helper ? this.element.clone().removeAttr("id") : this.element;
            return d.parents("body").length || d.appendTo("parent" === b.appendTo ? this.element[0].parentNode : b.appendTo),
            d[0] === this.element[0] || /(fixed|absolute)/.test(d.css("position")) || d.css("position", "absolute"),
            d
        },
        _adjustOffsetFromHelper: function(b) {
            "string" == typeof b && (b = b.split(" ")),
            a.isArray(b) && (b = {
                left: +b[0],
                top: +b[1] || 0
            }),
            "left"in b && (this.offset.click.left = b.left + this.margins.left),
            "right"in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left),
            "top"in b && (this.offset.click.top = b.top + this.margins.top),
            "bottom"in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            var b = this.offsetParent.offset();
            return "absolute" === this.cssPosition && this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(),
            b.top += this.scrollParent.scrollTop()),
            (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && a.ui.ie) && (b = {
                top: 0,
                left: 0
            }),
            {
                top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if ("relative" === this.cssPosition) {
                var b = this.element.position();
                return {
                    top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var c, b, d, e = this.options;
            return e.containment ? "window" === e.containment ? (this.containment = [a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, a(window).scrollLeft() + a(window).width() - this.helperProportions.width - this.margins.left, a(window).scrollTop() + (a(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top],
            undefined) : "document" === e.containment ? (this.containment = [0, 0, a(document).width() - this.helperProportions.width - this.margins.left, (a(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top],
            undefined) : e.containment.constructor === Array ? (this.containment = e.containment,
            undefined) : ("parent" === e.containment && (e.containment = this.helper[0].parentNode),
            b = a(e.containment),
            d = b[0],
            d && (c = "hidden" !== b.css("overflow"),
            this.containment = [(parseInt(b.css("borderLeftWidth"), 10) || 0) + (parseInt(b.css("paddingLeft"), 10) || 0), (parseInt(b.css("borderTopWidth"), 10) || 0) + (parseInt(b.css("paddingTop"), 10) || 0), (c ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(b.css("borderRightWidth"), 10) || 0) - (parseInt(b.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (c ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(b.css("borderBottomWidth"), 10) || 0) - (parseInt(b.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom],
            this.relative_container = b),
            undefined) : (this.containment = null,
            undefined)
        },
        _convertPositionTo: function(c, b) {
            b || (b = this.position);
            var d = "absolute" === c ? 1 : -1
              , e = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent;
            return this.offset.scroll || (this.offset.scroll = {
                top: e.scrollTop(),
                left: e.scrollLeft()
            }),
            {
                top: b.top + this.offset.relative.top * d + this.offset.parent.top * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * d,
                left: b.left + this.offset.relative.left * d + this.offset.parent.left * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * d
            }
        },
        _generatePosition: function(k) {
            var f, m, d, j, c = this.options, b = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, g = k.pageX, e = k.pageY;
            return this.offset.scroll || (this.offset.scroll = {
                top: b.scrollTop(),
                left: b.scrollLeft()
            }),
            this.originalPosition && (this.containment && (this.relative_container ? (m = this.relative_container.offset(),
            f = [this.containment[0] + m.left, this.containment[1] + m.top, this.containment[2] + m.left, this.containment[3] + m.top]) : f = this.containment,
            k.pageX - this.offset.click.left < f[0] && (g = f[0] + this.offset.click.left),
            k.pageY - this.offset.click.top < f[1] && (e = f[1] + this.offset.click.top),
            k.pageX - this.offset.click.left > f[2] && (g = f[2] + this.offset.click.left),
            k.pageY - this.offset.click.top > f[3] && (e = f[3] + this.offset.click.top)),
            c.grid && (d = c.grid[1] ? this.originalPageY + Math.round((e - this.originalPageY) / c.grid[1]) * c.grid[1] : this.originalPageY,
            e = f ? d - this.offset.click.top >= f[1] || d - this.offset.click.top > f[3] ? d : d - this.offset.click.top >= f[1] ? d - c.grid[1] : d + c.grid[1] : d,
            j = c.grid[0] ? this.originalPageX + Math.round((g - this.originalPageX) / c.grid[0]) * c.grid[0] : this.originalPageX,
            g = f ? j - this.offset.click.left >= f[0] || j - this.offset.click.left > f[2] ? j : j - this.offset.click.left >= f[0] ? j - c.grid[0] : j + c.grid[0] : j)),
            {
                top: e - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top),
                left: g - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left)
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging"),
            this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(),
            this.helper = null,
            this.cancelHelperRemoval = !1
        },
        _trigger: function(c, b, d) {
            return d = d || this._uiHash(),
            a.ui.plugin.call(this, c, [b, d]),
            "drag" === c && (this.positionAbs = this._convertPositionTo("absolute")),
            a.Widget.prototype._trigger.call(this, c, b, d)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }),
    a.ui.plugin.add("draggable", "connectToSortable", {
        start: function(d, c) {
            var e = a(this).data("ui-draggable")
              , f = e.options
              , b = a.extend({}, c, {
                item: e.element
            });
            e.sortables = [],
            a(f.connectToSortable).each(function() {
                var g = a.data(this, "ui-sortable");
                g && !g.options.disabled && (e.sortables.push({
                    instance: g,
                    shouldRevert: g.options.revert
                }),
                g.refreshPositions(),
                g._trigger("activate", d, b))
            })
        },
        stop: function(c, b) {
            var d = a(this).data("ui-draggable")
              , e = a.extend({}, b, {
                item: d.element
            });
            a.each(d.sortables, function() {
                this.instance.isOver ? (this.instance.isOver = 0,
                d.cancelHelperRemoval = !0,
                this.instance.cancelHelperRemoval = !1,
                this.shouldRevert && (this.instance.options.revert = this.shouldRevert),
                this.instance._mouseStop(c),
                this.instance.options.helper = this.instance.options._helper,
                "original" === d.options.helper && this.instance.currentItem.css({
                    top: "auto",
                    left: "auto"
                })) : (this.instance.cancelHelperRemoval = !1,
                this.instance._trigger("deactivate", c, e))
            })
        },
        drag: function(c, b) {
            var d = a(this).data("ui-draggable")
              , e = this;
            a.each(d.sortables, function() {
                var f = !1
                  , g = this;
                this.instance.positionAbs = d.positionAbs,
                this.instance.helperProportions = d.helperProportions,
                this.instance.offset.click = d.offset.click,
                this.instance._intersectsWith(this.instance.containerCache) && (f = !0,
                a.each(d.sortables, function() {
                    return this.instance.positionAbs = d.positionAbs,
                    this.instance.helperProportions = d.helperProportions,
                    this.instance.offset.click = d.offset.click,
                    this !== g && this.instance._intersectsWith(this.instance.containerCache) && a.contains(g.instance.element[0], this.instance.element[0]) && (f = !1),
                    f
                })),
                f ? (this.instance.isOver || (this.instance.isOver = 1,
                this.instance.currentItem = a(e).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0),
                this.instance.options._helper = this.instance.options.helper,
                this.instance.options.helper = function() {
                    return b.helper[0]
                }
                ,
                c.target = this.instance.currentItem[0],
                this.instance._mouseCapture(c, !0),
                this.instance._mouseStart(c, !0, !0),
                this.instance.offset.click.top = d.offset.click.top,
                this.instance.offset.click.left = d.offset.click.left,
                this.instance.offset.parent.left -= d.offset.parent.left - this.instance.offset.parent.left,
                this.instance.offset.parent.top -= d.offset.parent.top - this.instance.offset.parent.top,
                d._trigger("toSortable", c),
                d.dropped = this.instance.element,
                d.currentItem = d.element,
                this.instance.fromOutside = d),
                this.instance.currentItem && this.instance._mouseDrag(c)) : this.instance.isOver && (this.instance.isOver = 0,
                this.instance.cancelHelperRemoval = !0,
                this.instance.options.revert = !1,
                this.instance._trigger("out", c, this.instance._uiHash(this.instance)),
                this.instance._mouseStop(c, !0),
                this.instance.options.helper = this.instance.options._helper,
                this.instance.currentItem.remove(),
                this.instance.placeholder && this.instance.placeholder.remove(),
                d._trigger("fromSortable", c),
                d.dropped = !1)
            })
        }
    }),
    a.ui.plugin.add("draggable", "cursor", {
        start: function() {
            var c = a("body")
              , b = a(this).data("ui-draggable").options;
            c.css("cursor") && (b._cursor = c.css("cursor")),
            c.css("cursor", b.cursor)
        },
        stop: function() {
            var b = a(this).data("ui-draggable").options;
            b._cursor && a("body").css("cursor", b._cursor)
        }
    }),
    a.ui.plugin.add("draggable", "opacity", {
        start: function(c, b) {
            var d = a(b.helper)
              , e = a(this).data("ui-draggable").options;
            d.css("opacity") && (e._opacity = d.css("opacity")),
            d.css("opacity", e.opacity)
        },
        stop: function(c, b) {
            var d = a(this).data("ui-draggable").options;
            d._opacity && a(b.helper).css("opacity", d._opacity)
        }
    }),
    a.ui.plugin.add("draggable", "scroll", {
        start: function() {
            var b = a(this).data("ui-draggable");
            b.scrollParent[0] !== document && "HTML" !== b.scrollParent[0].tagName && (b.overflowOffset = b.scrollParent.offset())
        },
        drag: function(c) {
            var b = a(this).data("ui-draggable")
              , d = b.options
              , e = !1;
            b.scrollParent[0] !== document && "HTML" !== b.scrollParent[0].tagName ? (d.axis && "x" === d.axis || (b.overflowOffset.top + b.scrollParent[0].offsetHeight - c.pageY < d.scrollSensitivity ? b.scrollParent[0].scrollTop = e = b.scrollParent[0].scrollTop + d.scrollSpeed : c.pageY - b.overflowOffset.top < d.scrollSensitivity && (b.scrollParent[0].scrollTop = e = b.scrollParent[0].scrollTop - d.scrollSpeed)),
            d.axis && "y" === d.axis || (b.overflowOffset.left + b.scrollParent[0].offsetWidth - c.pageX < d.scrollSensitivity ? b.scrollParent[0].scrollLeft = e = b.scrollParent[0].scrollLeft + d.scrollSpeed : c.pageX - b.overflowOffset.left < d.scrollSensitivity && (b.scrollParent[0].scrollLeft = e = b.scrollParent[0].scrollLeft - d.scrollSpeed))) : (d.axis && "x" === d.axis || (c.pageY - a(document).scrollTop() < d.scrollSensitivity ? e = a(document).scrollTop(a(document).scrollTop() - d.scrollSpeed) : a(window).height() - (c.pageY - a(document).scrollTop()) < d.scrollSensitivity && (e = a(document).scrollTop(a(document).scrollTop() + d.scrollSpeed))),
            d.axis && "y" === d.axis || (c.pageX - a(document).scrollLeft() < d.scrollSensitivity ? e = a(document).scrollLeft(a(document).scrollLeft() - d.scrollSpeed) : a(window).width() - (c.pageX - a(document).scrollLeft()) < d.scrollSensitivity && (e = a(document).scrollLeft(a(document).scrollLeft() + d.scrollSpeed)))),
            e !== !1 && a.ui.ddmanager && !d.dropBehaviour && a.ui.ddmanager.prepareOffsets(b, c)
        }
    }),
    a.ui.plugin.add("draggable", "snap", {
        start: function() {
            var c = a(this).data("ui-draggable")
              , b = c.options;
            c.snapElements = [],
            a(b.snap.constructor !== String ? b.snap.items || ":data(ui-draggable)" : b.snap).each(function() {
                var d = a(this)
                  , e = d.offset();
                this !== c.element[0] && c.snapElements.push({
                    item: this,
                    width: d.outerWidth(),
                    height: d.outerHeight(),
                    top: e.top,
                    left: e.left
                })
            })
        },
        drag: function(q, E) {
            var w, B, L, A, x, F, D, k, J, I, z = a(this).data("ui-draggable"), H = z.options, C = H.snapTolerance, G = E.offset.left, j = G + z.helperProportions.width, K = E.offset.top, e = K + z.helperProportions.height;
            for (J = z.snapElements.length - 1; J >= 0; J--) {
                x = z.snapElements[J].left,
                F = x + z.snapElements[J].width,
                D = z.snapElements[J].top,
                k = D + z.snapElements[J].height,
                x - C > j || G > F + C || D - C > e || K > k + C || !a.contains(z.snapElements[J].item.ownerDocument, z.snapElements[J].item) ? (z.snapElements[J].snapping && z.options.snap.release && z.options.snap.release.call(z.element, q, a.extend(z._uiHash(), {
                    snapItem: z.snapElements[J].item
                })),
                z.snapElements[J].snapping = !1) : ("inner" !== H.snapMode && (w = C >= Math.abs(D - e),
                B = C >= Math.abs(k - K),
                L = C >= Math.abs(x - j),
                A = C >= Math.abs(F - G),
                w && (E.position.top = z._convertPositionTo("relative", {
                    top: D - z.helperProportions.height,
                    left: 0
                }).top - z.margins.top),
                B && (E.position.top = z._convertPositionTo("relative", {
                    top: k,
                    left: 0
                }).top - z.margins.top),
                L && (E.position.left = z._convertPositionTo("relative", {
                    top: 0,
                    left: x - z.helperProportions.width
                }).left - z.margins.left),
                A && (E.position.left = z._convertPositionTo("relative", {
                    top: 0,
                    left: F
                }).left - z.margins.left)),
                I = w || B || L || A,
                "outer" !== H.snapMode && (w = C >= Math.abs(D - K),
                B = C >= Math.abs(k - e),
                L = C >= Math.abs(x - G),
                A = C >= Math.abs(F - j),
                w && (E.position.top = z._convertPositionTo("relative", {
                    top: D,
                    left: 0
                }).top - z.margins.top),
                B && (E.position.top = z._convertPositionTo("relative", {
                    top: k - z.helperProportions.height,
                    left: 0
                }).top - z.margins.top),
                L && (E.position.left = z._convertPositionTo("relative", {
                    top: 0,
                    left: x
                }).left - z.margins.left),
                A && (E.position.left = z._convertPositionTo("relative", {
                    top: 0,
                    left: F - z.helperProportions.width
                }).left - z.margins.left)),
                !z.snapElements[J].snapping && (w || B || L || A || I) && z.options.snap.snap && z.options.snap.snap.call(z.element, q, a.extend(z._uiHash(), {
                    snapItem: z.snapElements[J].item
                })),
                z.snapElements[J].snapping = w || B || L || A || I)
            }
        }
    }),
    a.ui.plugin.add("draggable", "stack", {
        start: function() {
            var c, b = this.data("ui-draggable").options, d = a.makeArray(a(b.stack)).sort(function(f, e) {
                return (parseInt(a(f).css("zIndex"), 10) || 0) - (parseInt(a(e).css("zIndex"), 10) || 0)
            });
            d.length && (c = parseInt(a(d[0]).css("zIndex"), 10) || 0,
            a(d).each(function(e) {
                a(this).css("zIndex", c + e)
            }),
            this.css("zIndex", c + d.length))
        }
    }),
    a.ui.plugin.add("draggable", "zIndex", {
        start: function(c, b) {
            var d = a(b.helper)
              , e = a(this).data("ui-draggable").options;
            d.css("zIndex") && (e._zIndex = d.css("zIndex")),
            d.css("zIndex", e.zIndex)
        },
        stop: function(c, b) {
            var d = a(this).data("ui-draggable").options;
            d._zIndex && a(b.helper).css("zIndex", d._zIndex)
        }
    })
}
)(jQuery);
(function(c) {
    function b(d) {
        return parseInt(d, 10) || 0
    }
    function a(d) {
        return !isNaN(parseInt(d, 10))
    }
    c.widget("ui.resizable", c.ui.mouse, {
        version: "1.10.3",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _create: function() {
            var f, e, g, k, d, j = this, h = this.options;
            if (this.element.addClass("ui-resizable"),
            c.extend(this, {
                _aspectRatio: !!h.aspectRatio,
                aspectRatio: h.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: h.helper || h.ghost || h.animate ? h.helper || "ui-resizable-helper" : null
            }),
            this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(c("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })),
            this.element = this.element.parent().data("ui-resizable", this.element.data("ui-resizable")),
            this.elementIsWrapper = !0,
            this.element.css({
                marginLeft: this.originalElement.css("marginLeft"),
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom")
            }),
            this.originalElement.css({
                marginLeft: 0,
                marginTop: 0,
                marginRight: 0,
                marginBottom: 0
            }),
            this.originalResizeStyle = this.originalElement.css("resize"),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })),
            this.originalElement.css({
                margin: this.originalElement.css("margin")
            }),
            this._proportionallyResize()),
            this.handles = h.handles || (c(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se"),
            this.handles.constructor === String) {
                for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
                f = this.handles.split(","),
                this.handles = {},
                e = 0; f.length > e; e++) {
                    g = c.trim(f[e]),
                    d = "ui-resizable-" + g,
                    k = c("<div class='ui-resizable-handle " + d + "'></div>"),
                    k.css({
                        zIndex: h.zIndex
                    }),
                    "se" === g && k.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),
                    this.handles[g] = ".ui-resizable-" + g,
                    this.element.append(k)
                }
            }
            this._renderAxis = function(o) {
                var m, p, q, l;
                o = o || this.element;
                for (m in this.handles) {
                    this.handles[m].constructor === String && (this.handles[m] = c(this.handles[m], this.element).show()),
                    this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i) && (p = c(this.handles[m], this.element),
                    l = /sw|ne|nw|se|n|s/.test(m) ? p.outerHeight() : p.outerWidth(),
                    q = ["padding", /ne|nw|n/.test(m) ? "Top" : /se|sw|s/.test(m) ? "Bottom" : /^e$/.test(m) ? "Right" : "Left"].join(""),
                    o.css(q, l),
                    this._proportionallyResize()),
                    c(this.handles[m]).length
                }
            }
            ,
            this._renderAxis(this.element),
            this._handles = c(".ui-resizable-handle", this.element).disableSelection(),
            this._handles.mouseover(function() {
                j.resizing || (this.className && (k = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),
                j.axis = k && k[1] ? k[1] : "se")
            }),
            h.autoHide && (this._handles.hide(),
            c(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                h.disabled || (c(this).removeClass("ui-resizable-autohide"),
                j._handles.show())
            }).mouseleave(function() {
                h.disabled || j.resizing || (c(this).addClass("ui-resizable-autohide"),
                j._handles.hide())
            })),
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var e, d = function(f) {
                c(f).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            return this.elementIsWrapper && (d(this.element),
            e = this.element,
            this.originalElement.css({
                position: e.css("position"),
                width: e.outerWidth(),
                height: e.outerHeight(),
                top: e.css("top"),
                left: e.css("left")
            }).insertAfter(e),
            e.remove()),
            this.originalElement.css("resize", this.originalResizeStyle),
            d(this.originalElement),
            this
        },
        _mouseCapture: function(e) {
            var d, f, g = !1;
            for (d in this.handles) {
                f = c(this.handles[d])[0],
                (f === e.target || c.contains(f, e.target)) && (g = !0)
            }
            return !this.options.disabled && g
        },
        _mouseStart: function(e) {
            var g, l, d, k = this.options, j = this.element.position(), f = this.element;
            return this.resizing = !0,
            /absolute/.test(f.css("position")) ? f.css({
                position: "absolute",
                top: f.css("top"),
                left: f.css("left")
            }) : f.is(".ui-draggable") && f.css({
                position: "absolute",
                top: j.top,
                left: j.left
            }),
            this._renderProxy(),
            g = b(this.helper.css("left")),
            l = b(this.helper.css("top")),
            k.containment && (g += c(k.containment).scrollLeft() || 0,
            l += c(k.containment).scrollTop() || 0),
            this.offset = this.helper.offset(),
            this.position = {
                left: g,
                top: l
            },
            this.size = this._helper ? {
                width: f.outerWidth(),
                height: f.outerHeight()
            } : {
                width: f.width(),
                height: f.height()
            },
            this.originalSize = this._helper ? {
                width: f.outerWidth(),
                height: f.outerHeight()
            } : {
                width: f.width(),
                height: f.height()
            },
            this.originalPosition = {
                left: g,
                top: l
            },
            this.sizeDiff = {
                width: f.outerWidth() - f.width(),
                height: f.outerHeight() - f.height()
            },
            this.originalMousePosition = {
                left: e.pageX,
                top: e.pageY
            },
            this.aspectRatio = "number" == typeof k.aspectRatio ? k.aspectRatio : this.originalSize.width / this.originalSize.height || 1,
            d = c(".ui-resizable-" + this.axis).css("cursor"),
            c("body").css("cursor", "auto" === d ? this.axis + "-resize" : d),
            f.addClass("ui-resizable-resizing"),
            this._propagate("start", e),
            !0
        },
        _mouseDrag: function(z) {
            var m, A = this.helper, j = {}, x = this.originalMousePosition, g = this.axis, e = this.position.top, q = this.position.left, k = this.size.width, y = this.size.height, w = z.pageX - x.left || 0, v = z.pageY - x.top || 0, f = this._change[g];
            return f ? (m = f.apply(this, [z, w, v]),
            this._updateVirtualBoundaries(z.shiftKey),
            (this._aspectRatio || z.shiftKey) && (m = this._updateRatio(m, z)),
            m = this._respectSize(m, z),
            this._updateCache(m),
            this._propagate("resize", z),
            this.position.top !== e && (j.top = this.position.top + "px"),
            this.position.left !== q && (j.left = this.position.left + "px"),
            this.size.width !== k && (j.width = this.size.width + "px"),
            this.size.height !== y && (j.height = this.size.height + "px"),
            A.css(j),
            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(),
            c.isEmptyObject(j) || this._trigger("resize", z, this.ui()),
            !1) : !1
        },
        _mouseStop: function(q) {
            this.resizing = !1;
            var j, v, f, m, e, d, k, g = this.options, p = this;
            return this._helper && (j = this._proportionallyResizeElements,
            v = j.length && /textarea/i.test(j[0].nodeName),
            f = v && c.ui.hasScroll(j[0], "left") ? 0 : p.sizeDiff.height,
            m = v ? 0 : p.sizeDiff.width,
            e = {
                width: p.helper.width() - m,
                height: p.helper.height() - f
            },
            d = parseInt(p.element.css("left"), 10) + (p.position.left - p.originalPosition.left) || null,
            k = parseInt(p.element.css("top"), 10) + (p.position.top - p.originalPosition.top) || null,
            g.animate || this.element.css(c.extend(e, {
                top: k,
                left: d
            })),
            p.helper.height(p.size.height),
            p.helper.width(p.size.width),
            this._helper && !g.animate && this._proportionallyResize()),
            c("body").css("cursor", "auto"),
            this.element.removeClass("ui-resizable-resizing"),
            this._propagate("stop", q),
            this._helper && this.helper.remove(),
            !1
        },
        _updateVirtualBoundaries: function(i) {
            var f, g, k, d, j, h = this.options;
            j = {
                minWidth: a(h.minWidth) ? h.minWidth : 0,
                maxWidth: a(h.maxWidth) ? h.maxWidth : 1 / 0,
                minHeight: a(h.minHeight) ? h.minHeight : 0,
                maxHeight: a(h.maxHeight) ? h.maxHeight : 1 / 0
            },
            (this._aspectRatio || i) && (f = j.minHeight * this.aspectRatio,
            k = j.minWidth / this.aspectRatio,
            g = j.maxHeight * this.aspectRatio,
            d = j.maxWidth / this.aspectRatio,
            f > j.minWidth && (j.minWidth = f),
            k > j.minHeight && (j.minHeight = k),
            j.maxWidth > g && (j.maxWidth = g),
            j.maxHeight > d && (j.maxHeight = d)),
            this._vBoundaries = j
        },
        _updateCache: function(d) {
            this.offset = this.helper.offset(),
            a(d.left) && (this.position.left = d.left),
            a(d.top) && (this.position.top = d.top),
            a(d.height) && (this.size.height = d.height),
            a(d.width) && (this.size.width = d.width)
        },
        _updateRatio: function(g) {
            var d = this.position
              , f = this.size
              , h = this.axis;
            return a(g.height) ? g.width = g.height * this.aspectRatio : a(g.width) && (g.height = g.width / this.aspectRatio),
            "sw" === h && (g.left = d.left + (f.width - g.width),
            g.top = null),
            "nw" === h && (g.top = d.top + (f.height - g.height),
            g.left = d.left + (f.width - g.width)),
            g
        },
        _respectSize: function(k) {
            var v = this._vBoundaries
              , w = this.axis
              , g = a(k.width) && v.maxWidth && v.maxWidth < k.width
              , p = a(k.height) && v.maxHeight && v.maxHeight < k.height
              , f = a(k.width) && v.minWidth && v.minWidth > k.width
              , d = a(k.height) && v.minHeight && v.minHeight > k.height
              , j = this.originalPosition.left + this.originalSize.width
              , i = this.position.top + this.size.height
              , q = /sw|nw|w/.test(w)
              , m = /nw|ne|n/.test(w);
            return f && (k.width = v.minWidth),
            d && (k.height = v.minHeight),
            g && (k.width = v.maxWidth),
            p && (k.height = v.maxHeight),
            f && q && (k.left = j - v.minWidth),
            g && q && (k.left = j - v.maxWidth),
            d && m && (k.top = i - v.minHeight),
            p && m && (k.top = i - v.maxHeight),
            k.width || k.height || k.left || !k.top ? k.width || k.height || k.top || !k.left || (k.left = null) : k.top = null,
            k
        },
        _proportionallyResize: function() {
            if (this._proportionallyResizeElements.length) {
                var j, g, f, h, k, d = this.helper || this.element;
                for (j = 0; this._proportionallyResizeElements.length > j; j++) {
                    if (k = this._proportionallyResizeElements[j],
                    !this.borderDif) {
                        for (this.borderDif = [],
                        f = [k.css("borderTopWidth"), k.css("borderRightWidth"), k.css("borderBottomWidth"), k.css("borderLeftWidth")],
                        h = [k.css("paddingTop"), k.css("paddingRight"), k.css("paddingBottom"), k.css("paddingLeft")],
                        g = 0; f.length > g; g++) {
                            this.borderDif[g] = (parseInt(f[g], 10) || 0) + (parseInt(h[g], 10) || 0)
                        }
                    }
                    k.css({
                        height: d.height() - this.borderDif[0] - this.borderDif[2] || 0,
                        width: d.width() - this.borderDif[1] - this.borderDif[3] || 0
                    })
                }
            }
        },
        _renderProxy: function() {
            var e = this.element
              , d = this.options;
            this.elementOffset = e.offset(),
            this._helper ? (this.helper = this.helper || c("<div style='overflow:hidden;'></div>"),
            this.helper.addClass(this._helper).css({
                width: this.element.outerWidth() - 1,
                height: this.element.outerHeight() - 1,
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++d.zIndex
            }),
            this.helper.appendTo("body").disableSelection()) : this.helper = this.element
        },
        _change: {
            e: function(f, d) {
                return {
                    width: this.originalSize.width + d
                }
            },
            w: function(h, f) {
                var d = this.originalSize
                  , g = this.originalPosition;
                return {
                    left: g.left + f,
                    width: d.width - f
                }
            },
            n: function(h, f, d) {
                var g = this.originalSize
                  , j = this.originalPosition;
                return {
                    top: j.top + d,
                    height: g.height - d
                }
            },
            s: function(g, f, d) {
                return {
                    height: this.originalSize.height + d
                }
            },
            se: function(e, d, f) {
                return c.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, d, f]))
            },
            sw: function(e, d, f) {
                return c.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, d, f]))
            },
            ne: function(e, d, f) {
                return c.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, d, f]))
            },
            nw: function(e, d, f) {
                return c.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, d, f]))
            }
        },
        _propagate: function(e, d) {
            c.ui.plugin.call(this, e, [d, this.ui()]),
            "resize" !== e && this._trigger(e, d, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }),
    c.ui.plugin.add("resizable", "animate", {
        stop: function(q) {
            var j = c(this).data("ui-resizable")
              , v = j.options
              , f = j._proportionallyResizeElements
              , m = f.length && /textarea/i.test(f[0].nodeName)
              , e = m && c.ui.hasScroll(f[0], "left") ? 0 : j.sizeDiff.height
              , d = m ? 0 : j.sizeDiff.width
              , k = {
                width: j.size.width - d,
                height: j.size.height - e
            }
              , g = parseInt(j.element.css("left"), 10) + (j.position.left - j.originalPosition.left) || null
              , p = parseInt(j.element.css("top"), 10) + (j.position.top - j.originalPosition.top) || null;
            j.element.animate(c.extend(k, p && g ? {
                top: p,
                left: g
            } : {}), {
                duration: v.animateDuration,
                easing: v.animateEasing,
                step: function() {
                    var h = {
                        width: parseInt(j.element.css("width"), 10),
                        height: parseInt(j.element.css("height"), 10),
                        top: parseInt(j.element.css("top"), 10),
                        left: parseInt(j.element.css("left"), 10)
                    };
                    f && f.length && c(f[0]).css({
                        width: h.width,
                        height: h.height
                    }),
                    j._updateCache(h),
                    j._propagate("resize", q)
                }
            })
        }
    }),
    c.ui.plugin.add("resizable", "containment", {
        start: function() {
            var m, y, j, w, g, e, q, k = c(this).data("ui-resizable"), x = k.options, v = k.element, t = x.containment, f = t instanceof c ? t.get(0) : /parent/.test(t) ? v.parent().get(0) : t;
            f && (k.containerElement = c(f),
            /document/.test(t) || t === document ? (k.containerOffset = {
                left: 0,
                top: 0
            },
            k.containerPosition = {
                left: 0,
                top: 0
            },
            k.parentData = {
                element: c(document),
                left: 0,
                top: 0,
                width: c(document).width(),
                height: c(document).height() || document.body.parentNode.scrollHeight
            }) : (m = c(f),
            y = [],
            c(["Top", "Right", "Left", "Bottom"]).each(function(d, h) {
                y[d] = b(m.css("padding" + h))
            }),
            k.containerOffset = m.offset(),
            k.containerPosition = m.position(),
            k.containerSize = {
                height: m.innerHeight() - y[3],
                width: m.innerWidth() - y[1]
            },
            j = k.containerOffset,
            w = k.containerSize.height,
            g = k.containerSize.width,
            e = c.ui.hasScroll(f, "left") ? f.scrollWidth : g,
            q = c.ui.hasScroll(f) ? f.scrollHeight : w,
            k.parentData = {
                element: f,
                left: j.left,
                top: j.top,
                width: e,
                height: q
            }))
        },
        resize: function(x) {
            var k, y, g, v, f = c(this).data("ui-resizable"), e = f.options, m = f.containerOffset, j = f.position, w = f._aspectRatio || x.shiftKey, q = {
                top: 0,
                left: 0
            }, p = f.containerElement;
            p[0] !== document && /static/.test(p.css("position")) && (q = m),
            j.left < (f._helper ? m.left : 0) && (f.size.width = f.size.width + (f._helper ? f.position.left - m.left : f.position.left - q.left),
            w && (f.size.height = f.size.width / f.aspectRatio),
            f.position.left = e.helper ? m.left : 0),
            j.top < (f._helper ? m.top : 0) && (f.size.height = f.size.height + (f._helper ? f.position.top - m.top : f.position.top),
            w && (f.size.width = f.size.height * f.aspectRatio),
            f.position.top = f._helper ? m.top : 0),
            f.offset.left = f.parentData.left + f.position.left,
            f.offset.top = f.parentData.top + f.position.top,
            k = Math.abs((f._helper ? f.offset.left - q.left : f.offset.left - q.left) + f.sizeDiff.width),
            y = Math.abs((f._helper ? f.offset.top - q.top : f.offset.top - m.top) + f.sizeDiff.height),
            g = f.containerElement.get(0) === f.element.parent().get(0),
            v = /relative|absolute/.test(f.containerElement.css("position")),
            g && v && (k -= f.parentData.left),
            k + f.size.width >= f.parentData.width && (f.size.width = f.parentData.width - k,
            w && (f.size.height = f.size.width / f.aspectRatio)),
            y + f.size.height >= f.parentData.height && (f.size.height = f.parentData.height - y,
            w && (f.size.width = f.size.height * f.aspectRatio))
        },
        stop: function() {
            var p = c(this).data("ui-resizable")
              , j = p.options
              , q = p.containerOffset
              , f = p.containerPosition
              , m = p.containerElement
              , e = c(p.helper)
              , d = e.offset()
              , k = e.outerWidth() - p.sizeDiff.width
              , g = e.outerHeight() - p.sizeDiff.height;
            p._helper && !j.animate && /relative/.test(m.css("position")) && c(this).css({
                left: d.left - f.left - q.left,
                width: k,
                height: g
            }),
            p._helper && !j.animate && /static/.test(m.css("position")) && c(this).css({
                left: d.left - f.left - q.left,
                width: k,
                height: g
            })
        }
    }),
    c.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var e = c(this).data("ui-resizable")
              , d = e.options
              , f = function(g) {
                c(g).each(function() {
                    var h = c(this);
                    h.data("ui-resizable-alsoresize", {
                        width: parseInt(h.width(), 10),
                        height: parseInt(h.height(), 10),
                        left: parseInt(h.css("left"), 10),
                        top: parseInt(h.css("top"), 10)
                    })
                })
            };
            "object" != typeof d.alsoResize || d.alsoResize.parentNode ? f(d.alsoResize) : d.alsoResize.length ? (d.alsoResize = d.alsoResize[0],
            f(d.alsoResize)) : c.each(d.alsoResize, function(g) {
                f(g)
            })
        },
        resize: function(f, e) {
            var j = c(this).data("ui-resizable")
              , m = j.options
              , d = j.originalSize
              , l = j.originalPosition
              , k = {
                height: j.size.height - d.height || 0,
                width: j.size.width - d.width || 0,
                top: j.position.top - l.top || 0,
                left: j.position.left - l.left || 0
            }
              , g = function(h, i) {
                c(h).each(function() {
                    var q = c(this)
                      , s = c(this).data("ui-resizable-alsoresize")
                      , p = {}
                      , r = i && i.length ? i : q.parents(e.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                    c.each(r, function(u, o) {
                        var n = (s[o] || 0) + (k[o] || 0);
                        n && n >= 0 && (p[o] = n || null)
                    }),
                    q.css(p)
                })
            };
            "object" != typeof m.alsoResize || m.alsoResize.nodeType ? g(m.alsoResize) : c.each(m.alsoResize, function(i, h) {
                g(i, h)
            })
        },
        stop: function() {
            c(this).removeData("resizable-alsoresize")
        }
    }),
    c.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var e = c(this).data("ui-resizable")
              , d = e.options
              , f = e.size;
            e.ghost = e.originalElement.clone(),
            e.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: f.height,
                width: f.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass("string" == typeof d.ghost ? d.ghost : ""),
            e.ghost.appendTo(e.helper)
        },
        resize: function() {
            var d = c(this).data("ui-resizable");
            d.ghost && d.ghost.css({
                position: "relative",
                height: d.size.height,
                width: d.size.width
            })
        },
        stop: function() {
            var d = c(this).data("ui-resizable");
            d.ghost && d.helper && d.helper.get(0).removeChild(d.ghost.get(0))
        }
    }),
    c.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var H = c(this).data("ui-resizable")
              , y = H.options
              , I = H.size
              , q = H.originalSize
              , E = H.originalPosition
              , k = H.axis
              , e = "number" == typeof y.grid ? [y.grid, y.grid] : y.grid
              , z = e[0] || 1
              , x = e[1] || 1
              , G = Math.round((I.width - q.width) / z) * z
              , D = Math.round((I.height - q.height) / x) * x
              , C = q.width + G
              , j = q.height + D
              , B = y.maxWidth && C > y.maxWidth
              , w = y.maxHeight && j > y.maxHeight
              , A = y.minWidth && y.minWidth > C
              , F = y.minHeight && y.minHeight > j;
            y.grid = e,
            A && (C += z),
            F && (j += x),
            B && (C -= z),
            w && (j -= x),
            /^(se|s|e)$/.test(k) ? (H.size.width = C,
            H.size.height = j) : /^(ne)$/.test(k) ? (H.size.width = C,
            H.size.height = j,
            H.position.top = E.top - D) : /^(sw)$/.test(k) ? (H.size.width = C,
            H.size.height = j,
            H.position.left = E.left - G) : (H.size.width = C,
            H.size.height = j,
            H.position.top = E.top - D,
            H.position.left = E.left - G)
        }
    })
}
)(jQuery);
(function(a) {
    var b = 0;
    a.widget("ui.autocomplete", {
        version: "1.10.3",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var g, d, f, j = this.element[0].nodeName.toLowerCase(), c = "textarea" === j, h = "input" === j;
            this.isMultiLine = c ? !0 : h ? !1 : this.element.prop("isContentEditable"),
            this.valueMethod = this.element[c || h ? "val" : "text"],
            this.isNewMenu = !0,
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"),
            this._on(this.element, {
                keydown: function(i) {
                    if (this.element.prop("readOnly")) {
                        return g = !0,
                        f = !0,
                        d = !0,
                        undefined
                    }
                    g = !1,
                    f = !1,
                    d = !1;
                    var e = a.ui.keyCode;
                    switch (i.keyCode) {
                    case e.PAGE_UP:
                        g = !0,
                        this._move("previousPage", i);
                        break;
                    case e.PAGE_DOWN:
                        g = !0,
                        this._move("nextPage", i);
                        break;
                    case e.UP:
                        g = !0,
                        this._keyEvent("previous", i);
                        break;
                    case e.DOWN:
                        g = !0,
                        this._keyEvent("next", i);
                        break;
                    case e.ENTER:
                    case e.NUMPAD_ENTER:
                        this.menu.active && (g = !0,
                        i.preventDefault(),
                        this.menu.select(i));
                        break;
                    case e.TAB:
                        this.menu.active && this.menu.select(i);
                        break;
                    case e.ESCAPE:
                        this.menu.element.is(":visible") && (this._value(this.term),
                        this.close(i),
                        i.preventDefault());
                        break;
                    default:
                        d = !0,
                        this._searchTimeout(i)
                    }
                },
                keypress: function(e) {
                    if (g) {
                        return g = !1,
                        (!this.isMultiLine || this.menu.element.is(":visible")) && e.preventDefault(),
                        undefined
                    }
                    if (!d) {
                        var i = a.ui.keyCode;
                        switch (e.keyCode) {
                        case i.PAGE_UP:
                            this._move("previousPage", e);
                            break;
                        case i.PAGE_DOWN:
                            this._move("nextPage", e);
                            break;
                        case i.UP:
                            this._keyEvent("previous", e);
                            break;
                        case i.DOWN:
                            this._keyEvent("next", e)
                        }
                    }
                },
                input: function(e) {
                    return f ? (f = !1,
                    e.preventDefault(),
                    undefined) : (this._searchTimeout(e),
                    undefined)
                },
                focus: function() {
                    this.selectedItem = null,
                    this.previous = this._value()
                },
                blur: function(e) {
                    return this.cancelBlur ? (delete this.cancelBlur,
                    undefined) : (clearTimeout(this.searching),
                    this.close(e),
                    this._change(e),
                    undefined)
                }
            }),
            this._initSource(),
            this.menu = a("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({
                role: null
            }).hide().data("ui-menu"),
            this._on(this.menu.element, {
                mousedown: function(l) {
                    l.preventDefault(),
                    this.cancelBlur = !0,
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var k = this.menu.element[0];
                    a(l.target).closest(".ui-menu-item").length || this._delay(function() {
                        var i = this;
                        this.document.one("mousedown", function(e) {
                            e.target === i.element[0] || e.target === k || a.contains(k, e.target) || i.close()
                        })
                    })
                },
                menufocus: function(m, k) {
                    if (this.isNewMenu && (this.isNewMenu = !1,
                    m.originalEvent && /^mouse/.test(m.originalEvent.type))) {
                        return this.menu.blur(),
                        this.document.one("mousemove", function() {
                            a(m.target).trigger(m.originalEvent)
                        }),
                        undefined
                    }
                    var l = k.item.data("ui-autocomplete-item");
                    !1 !== this._trigger("focus", m, {
                        item: l
                    }) ? m.originalEvent && /^key/.test(m.originalEvent.type) && this._value(l.value) : this.liveRegion.text(l.value)
                },
                menuselect: function(l, n) {
                    var k = n.item.data("ui-autocomplete-item")
                      , m = this.previous;
                    this.element[0] !== this.document[0].activeElement && (this.element.focus(),
                    this.previous = m,
                    this._delay(function() {
                        this.previous = m,
                        this.selectedItem = k
                    })),
                    !1 !== this._trigger("select", l, {
                        item: k
                    }) && this._value(k.value),
                    this.term = this._value(),
                    this.close(l),
                    this.selectedItem = k
                }
            }),
            this.liveRegion = a("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertBefore(this.element),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching),
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),
            this.menu.element.remove(),
            this.liveRegion.remove()
        },
        _setOption: function(c, d) {
            this._super(c, d),
            "source" === c && this._initSource(),
            "appendTo" === c && this.menu.element.appendTo(this._appendTo()),
            "disabled" === c && d && this.xhr && this.xhr.abort()
        },
        _appendTo: function() {
            var c = this.options.appendTo;
            return c && (c = c.jquery || c.nodeType ? a(c) : this.document.find(c).eq(0)),
            c || (c = this.element.closest(".ui-front")),
            c.length || (c = this.document[0].body),
            c
        },
        _initSource: function() {
            var f, c, d = this;
            a.isArray(this.options.source) ? (f = this.options.source,
            this.source = function(e, g) {
                g(a.ui.autocomplete.filter(f, e.term))
            }
            ) : "string" == typeof this.options.source ? (c = this.options.source,
            this.source = function(g, h) {
                d.xhr && d.xhr.abort(),
                d.xhr = a.ajax({
                    url: c,
                    data: g,
                    dataType: "json",
                    success: function(e) {
                        h(e)
                    },
                    error: function() {
                        h([])
                    }
                })
            }
            ) : this.source = this.options.source
        },
        _searchTimeout: function(c) {
            clearTimeout(this.searching),
            this.searching = this._delay(function() {
                this.term !== this._value() && (this.selectedItem = null,
                this.search(null, c))
            }, this.options.delay)
        },
        search: function(c, d) {
            return c = null != c ? c : this._value(),
            this.term = this._value(),
            c.length < this.options.minLength ? this.close(d) : this._trigger("search", d) !== !1 ? this._search(c) : undefined
        },
        _search: function(c) {
            this.pending++,
            this.element.addClass("ui-autocomplete-loading"),
            this.cancelSearch = !1,
            this.source({
                term: c
            }, this._response())
        },
        _response: function() {
            var d = this
              , c = ++b;
            return function(e) {
                c === b && d.__response(e),
                d.pending--,
                d.pending || d.element.removeClass("ui-autocomplete-loading")
            }
        },
        __response: function(c) {
            c && (c = this._normalize(c)),
            this._trigger("response", null, {
                content: c
            }),
            !this.options.disabled && c && c.length && !this.cancelSearch ? (this._suggest(c),
            this._trigger("open")) : this._close()
        },
        close: function(c) {
            this.cancelSearch = !0,
            this._close(c)
        },
        _close: function(c) {
            this.menu.element.is(":visible") && (this.menu.element.hide(),
            this.menu.blur(),
            this.isNewMenu = !0,
            this._trigger("close", c))
        },
        _change: function(c) {
            this.previous !== this._value() && this._trigger("change", c, {
                item: this.selectedItem
            })
        },
        _normalize: function(c) {
            return c.length && c[0].label && c[0].value ? c : a.map(c, function(d) {
                return "string" == typeof d ? {
                    label: d,
                    value: d
                } : a.extend({
                    label: d.label || d.value,
                    value: d.value || d.label
                }, d)
            })
        },
        _suggest: function(d) {
            var c = this.menu.element.empty();
            this._renderMenu(c, d),
            this.isNewMenu = !0,
            this.menu.refresh(),
            c.show(),
            this._resizeMenu(),
            c.position(a.extend({
                of: this.element
            }, this.options.position)),
            this.options.autoFocus && this.menu.next()
        },
        _resizeMenu: function() {
            var c = this.menu.element;
            c.outerWidth(Math.max(c.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(f, c) {
            var d = this;
            a.each(c, function(g, e) {
                d._renderItemData(f, e)
            })
        },
        _renderItemData: function(c, d) {
            return this._renderItem(c, d).data("ui-autocomplete-item", d)
        },
        _renderItem: function(d, c) {
            return a("<li>").append(a("<a>").text(c.label)).appendTo(d)
        },
        _move: function(c, d) {
            return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(c) || this.menu.isLastItem() && /^next/.test(c) ? (this._value(this.term),
            this.menu.blur(),
            undefined) : (this.menu[c](d),
            undefined) : (this.search(null, d),
            undefined)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(c, d) {
            (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(c, d),
            d.preventDefault())
        }
    }),
    a.extend(a.ui.autocomplete, {
        escapeRegex: function(c) {
            return c.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(f, c) {
            var d = RegExp(a.ui.autocomplete.escapeRegex(c), "i");
            return a.grep(f, function(e) {
                return d.test(e.label || e.value || e)
            })
        }
    }),
    a.widget("ui.autocomplete", a.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(c) {
                    return c + (c > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(c) {
            var d;
            this._superApply(arguments),
            this.options.disabled || this.cancelSearch || (d = c && c.length ? this.options.messages.results(c.length) : this.options.messages.noResults,
            this.liveRegion.text(d))
        }
    })
}
)(jQuery);
(function(a) {
    a.widget("ui.menu", {
        version: "1.10.3",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element,
            this.mouseHandled = !1,
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, a.proxy(function(b) {
                this.options.disabled && b.preventDefault()
            }, this)),
            this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"),
            this._on({
                "mousedown .ui-menu-item > a": function(b) {
                    b.preventDefault()
                },
                "click .ui-state-disabled > a": function(b) {
                    b.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(c) {
                    var b = a(c.target).closest(".ui-menu-item");
                    !this.mouseHandled && b.not(".ui-state-disabled").length && (this.mouseHandled = !0,
                    this.select(c),
                    b.has(".ui-menu").length ? this.expand(c) : this.element.is(":focus") || (this.element.trigger("focus", [!0]),
                    this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
                },
                "mouseenter .ui-menu-item": function(c) {
                    var b = a(c.currentTarget);
                    b.siblings().children(".ui-state-active").removeClass("ui-state-active"),
                    this.focus(c, b)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(c, d) {
                    var b = this.active || this.element.children(".ui-menu-item").eq(0);
                    d || this.focus(c, b)
                },
                blur: function(b) {
                    this._delay(function() {
                        a.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(b)
                    })
                },
                keydown: "_keydown"
            }),
            this.refresh(),
            this._on(this.document, {
                click: function(b) {
                    a(b.target).closest(".ui-menu").length || this.collapseAll(b),
                    this.mouseHandled = !1
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var b = a(this);
                b.data("ui-menu-submenu-carat") && b.remove()
            }),
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(j) {
            function c(e) {
                return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            }
            var f, l, b, k, g, d = !0;
            switch (j.keyCode) {
            case a.ui.keyCode.PAGE_UP:
                this.previousPage(j);
                break;
            case a.ui.keyCode.PAGE_DOWN:
                this.nextPage(j);
                break;
            case a.ui.keyCode.HOME:
                this._move("first", "first", j);
                break;
            case a.ui.keyCode.END:
                this._move("last", "last", j);
                break;
            case a.ui.keyCode.UP:
                this.previous(j);
                break;
            case a.ui.keyCode.DOWN:
                this.next(j);
                break;
            case a.ui.keyCode.LEFT:
                this.collapse(j);
                break;
            case a.ui.keyCode.RIGHT:
                this.active && !this.active.is(".ui-state-disabled") && this.expand(j);
                break;
            case a.ui.keyCode.ENTER:
            case a.ui.keyCode.SPACE:
                this._activate(j);
                break;
            case a.ui.keyCode.ESCAPE:
                this.collapse(j);
                break;
            default:
                d = !1,
                l = this.previousFilter || "",
                b = String.fromCharCode(j.keyCode),
                k = !1,
                clearTimeout(this.filterTimer),
                b === l ? k = !0 : b = l + b,
                g = RegExp("^" + c(b), "i"),
                f = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return g.test(a(this).children("a").text())
                }),
                f = k && -1 !== f.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : f,
                f.length || (b = String.fromCharCode(j.keyCode),
                g = RegExp("^" + c(b), "i"),
                f = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return g.test(a(this).children("a").text())
                })),
                f.length ? (this.focus(j, f),
                f.length > 1 ? (this.previousFilter = b,
                this.filterTimer = this._delay(function() {
                    delete this.previousFilter
                }, 1000)) : delete this.previousFilter) : delete this.previousFilter
            }
            d && j.preventDefault()
        },
        _activate: function(b) {
            this.active.is(".ui-state-disabled") || (this.active.children("a[aria-haspopup='true']").length ? this.expand(b) : this.select(b))
        },
        refresh: function() {
            var d, b = this.options.icons.submenu, c = this.element.find(this.options.menus);
            c.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var g = a(this)
                  , f = g.prev("a")
                  , h = a("<span>").addClass("ui-menu-icon ui-icon " + b).data("ui-menu-submenu-carat", !0);
                f.attr("aria-haspopup", "true").prepend(h),
                g.attr("aria-labelledby", f.attr("id"))
            }),
            d = c.add(this.element),
            d.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            }),
            d.children(":not(.ui-menu-item)").each(function() {
                var f = a(this);
                /[^\-\u2014\u2013\s]/.test(f.text()) || f.addClass("ui-widget-content ui-menu-divider")
            }),
            d.children(".ui-state-disabled").attr("aria-disabled", "true"),
            this.active && !a.contains(this.element[0], this.active[0]) && this.blur()
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        _setOption: function(b, c) {
            "icons" === b && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(c.submenu),
            this._super(b, c)
        },
        focus: function(c, f) {
            var b, d;
            this.blur(c, c && "focus" === c.type),
            this._scrollIntoView(f),
            this.active = f.first(),
            d = this.active.children("a").addClass("ui-state-focus"),
            this.options.role && this.element.attr("aria-activedescendant", d.attr("id")),
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),
            c && "keydown" === c.type ? this._close() : this.timer = this._delay(function() {
                this._close()
            }, this.delay),
            b = f.children(".ui-menu"),
            b.length && /^mouse/.test(c.type) && this._startOpening(b),
            this.activeMenu = f.parent(),
            this._trigger("focus", c, {
                item: f
            })
        },
        _scrollIntoView: function(g) {
            var c, d, j, b, h, f;
            this._hasScroll() && (c = parseFloat(a.css(this.activeMenu[0], "borderTopWidth")) || 0,
            d = parseFloat(a.css(this.activeMenu[0], "paddingTop")) || 0,
            j = g.offset().top - this.activeMenu.offset().top - c - d,
            b = this.activeMenu.scrollTop(),
            h = this.activeMenu.height(),
            f = g.height(),
            0 > j ? this.activeMenu.scrollTop(b + j) : j + f > h && this.activeMenu.scrollTop(b + j - h + f))
        },
        blur: function(b, c) {
            c || clearTimeout(this.timer),
            this.active && (this.active.children("a").removeClass("ui-state-focus"),
            this.active = null,
            this._trigger("blur", b, {
                item: this.active
            }))
        },
        _startOpening: function(b) {
            clearTimeout(this.timer),
            "true" === b.attr("aria-hidden") && (this.timer = this._delay(function() {
                this._close(),
                this._open(b)
            }, this.delay))
        },
        _open: function(c) {
            var b = a.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer),
            this.element.find(".ui-menu").not(c.parents(".ui-menu")).hide().attr("aria-hidden", "true"),
            c.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(b)
        },
        collapseAll: function(c, b) {
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                var d = b ? this.element : a(c && c.target).closest(this.element.find(".ui-menu"));
                d.length || (d = this.element),
                this._close(d),
                this.blur(c),
                this.activeMenu = d
            }, this.delay)
        },
        _close: function(b) {
            b || (b = this.active ? this.active.parent() : this.element),
            b.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(b) {
            var c = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            c && c.length && (this._close(),
            this.focus(b, c))
        },
        expand: function(b) {
            var c = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            c && c.length && (this._open(c.parent()),
            this._delay(function() {
                this.focus(b, c)
            }))
        },
        next: function(b) {
            this._move("next", "first", b)
        },
        previous: function(b) {
            this._move("prev", "last", b)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(c, f, b) {
            var d;
            this.active && (d = "first" === c || "last" === c ? this.active["first" === c ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[c + "All"](".ui-menu-item").eq(0)),
            d && d.length && this.active || (d = this.activeMenu.children(".ui-menu-item")[f]()),
            this.focus(b, d)
        },
        nextPage: function(d) {
            var b, c, f;
            return this.active ? (this.isLastItem() || (this._hasScroll() ? (c = this.active.offset().top,
            f = this.element.height(),
            this.active.nextAll(".ui-menu-item").each(function() {
                return b = a(this),
                0 > b.offset().top - c - f
            }),
            this.focus(d, b)) : this.focus(d, this.activeMenu.children(".ui-menu-item")[this.active ? "last" : "first"]())),
            undefined) : (this.next(d),
            undefined)
        },
        previousPage: function(d) {
            var b, c, f;
            return this.active ? (this.isFirstItem() || (this._hasScroll() ? (c = this.active.offset().top,
            f = this.element.height(),
            this.active.prevAll(".ui-menu-item").each(function() {
                return b = a(this),
                b.offset().top - c + f > 0
            }),
            this.focus(d, b)) : this.focus(d, this.activeMenu.children(".ui-menu-item").first())),
            undefined) : (this.next(d),
            undefined)
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(c) {
            this.active = this.active || a(c.target).closest(".ui-menu-item");
            var b = {
                item: this.active
            };
            this.active.has(".ui-menu").length || this.collapseAll(c, !0),
            this._trigger("select", c, b)
        }
    })
}
)(jQuery);
function Mellon(b) {
    var c = this;
    c.url = b;
    c.getRegisterIframe = function(g) {
        if (typeof (g) == "undefined") {
            g = {}
        }
        var f = "";
        for (var e in g) {
            if (g[e] == null || g[e] == "undefined") {
                continue
            }
            f += "/" + e + "/" + g[e]
        }
        var d = c.url + "/iframe/register" + f;
        return c.getIframe(d, "starting_mellon_register")
    }
    ;
    c.getInstantUrl = function() {
        return c.getIframe(c.url + "/auth/login-instant")
    }
    ;
    c.getUpgradeIframe = function() {
        return c.getIframe(c.url + "/user/upgrade")
    }
    ;
    c.getLoginIframe = function() {
        return c.getIframe(c.url + "/iframe/login", "starting_mellon_login")
    }
    ;
    c.getLogoutIframe = function() {
        return c.getIframe(c.url + "/iframe/logout", "starting_mellon_logout")
    }
    ;
    c.getActivationIframe = function(e) {
        if (typeof (e) == "undefined") {
            e = ""
        }
        var d = c.url + "/iframe/activate/token/" + e;
        if (e == "") {
            d = c.url + "/iframe/activate"
        }
        return c.getIframe(d, "starting_mellon_activate")
    }
    ;
    c.getEditUserDataIframe = function() {
        return c.getIframe(c.url + "/user/edit/", "starting_mellon_settings")
    }
    ;
    c.getEditUserEmailIframe = function() {
        return c.getIframe(c.url + "/iframe/change-email", "starting_mellon_email_change")
    }
    ;
    c.getEditUserPasswordIframe = function() {
        return c.getIframe(c.url + "/iframe/change-password", "starting_mellon_password_change")
    }
    ;
    c.getEditSubscriptionIframe = function() {
        return c.getIframe(c.url + "/user/edit-subscriptions", "starting_mellon_subscription_change")
    }
    ;
    c.getLostPasswordIframe = function() {
        return c.getIframe(c.url + "/iframe/forgotten", "starting_lostPassword")
    }
    ;
    c.getResetPasswordIframe = function(d) {
        return c.getIframe(c.url + "/iframe/reset-password/token/" + d, "starting_mellon_resetPassword")
    }
    ;
    c.getWorldSelectionIframe = function() {
        var e = {};
        var d = c.url + "/iframe/external-avatar-list";
        return c.getIframe(d, "starting_mellon_worldSelection")
    }
    ;
    c.getBetaSignupIframe = function() {
        return c.getIframe(c.url + "/iframe/beta-signup", "starting_mellon_betaSignup")
    }
    ;
    c.getReferralInviteIframe = function() {
        return c.getIframe(c.url + "/iframe/referral", "starting_mellon_playerInvitesPlayerInvite")
    }
    ;
    c.getReferralPendingIframe = function() {
        return c.getIframe(c.url + "/invite/show-pending", "starting_mellon_playerInvitesPlayerPending")
    }
    ;
    c.getReferralActiveIframe = function() {
        return c.getIframe(c.url + "/invite/show-active", "starting_mellon_playerInvitesPlayerActive")
    }
    ;
    c.getForumUrl = function(f) {
        var d = config.mellon["applicationId"] + "--" + config.mellon["applicationCountryId"] + "-" + config.mellon["applicationInstanceId"];
        var e = config.forum + "/mellon/redirectMe.php?toGroup=" + f + "&instance=" + config.mellon["applicationInstanceId"];
        return e
    }
    ;
    var a = function(d) {
        var e = "; " + document.cookie;
        var f = e.split("; " + d + "=");
        if (f.length == 2) {
            return f.pop().split(";").shift()
        }
    };
    c.getIframe = function(g, d, j) {
        var h = "";
        if (typeof (totalAppWidth) != "undefined") {
            h = "#width/" + totalAppWidth
        }
        var k = "";
        if (typeof (config.mellon["applicationLanguageId"]) != "undefined" && config.mellon["applicationLanguageId"] != "") {
            k = "/applicationLanguageId/" + config.mellon["applicationLanguageId"] + ""
        }
        var i = "/applicationId/" + config.mellon["applicationId"] + "/applicationCountryId/" + config.mellon["applicationCountryId"] + "/applicationInstanceId/" + config.mellon["applicationInstanceId"];
        var f = getUrlVar("context");
        if (f == null) {
            f = a("mellon_context")
        }
        var e = g + i + k + h;
        if (typeof (j) != "undefined" && !j) {
            e = g + h
        }
        if (f != null) {
            e = e + "?context=" + f
        }
        return e
    }
}
var mellon = null;
if (typeof (config.mellon) != "undefined") {
    mellon = new Mellon(config.mellon["url"])
}
(function(b, a) {
    typeof exports === "object" && typeof module !== "undefined" ? module.exports = a() : typeof define === "function" && define.amd ? define(a) : b.moment = a()
}(this, (function() {
    var b3;
    function et() {
        return b3.apply(null, arguments)
    }
    function aN(eR) {
        b3 = eR
    }
    function U(eR) {
        return eR instanceof Array || Object.prototype.toString.call(eR) === "[object Array]"
    }
    function u(eR) {
        return eR != null && Object.prototype.toString.call(eR) === "[object Object]"
    }
    function ca(eS) {
        var eR;
        for (eR in eS) {
            return false
        }
        return true
    }
    function p(eR) {
        return typeof eR === "number" || Object.prototype.toString.call(eR) === "[object Number]"
    }
    function em(eR) {
        return eR instanceof Date || Object.prototype.toString.call(eR) === "[object Date]"
    }
    function bi(eR, eU) {
        var eT = [], eS;
        for (eS = 0; eS < eR.length; ++eS) {
            eT.push(eU(eR[eS], eS))
        }
        return eT
    }
    function dd(eS, eR) {
        return Object.prototype.hasOwnProperty.call(eS, eR)
    }
    function eM(eS, eR) {
        for (var eT in eR) {
            if (dd(eR, eT)) {
                eS[eT] = eR[eT]
            }
        }
        if (dd(eR, "toString")) {
            eS.toString = eR.toString
        }
        if (dd(eR, "valueOf")) {
            eS.valueOf = eR.valueOf
        }
        return eS
    }
    function cn(eT, eU, eR, eS) {
        return ab(eT, eU, eR, eS, true).utc()
    }
    function cj() {
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            meridiem: null
        }
    }
    function a6(eR) {
        if (eR._pf == null) {
            eR._pf = cj()
        }
        return eR._pf
    }
    var dh;
    if (Array.prototype.some) {
        dh = Array.prototype.some
    } else {
        dh = function(eS) {
            var eU = Object(this);
            var eR = eU.length >>> 0;
            for (var eT = 0; eT < eR; eT++) {
                if (eT in eU && eS.call(this, eU[eT], eT, eU)) {
                    return true
                }
            }
            return false
        }
    }
    var cz = dh;
    function am(eS) {
        if (eS._isValid == null) {
            var eT = a6(eS);
            var eU = cz.call(eT.parsedDateParts, function(eV) {
                return eV != null
            });
            var eR = !isNaN(eS._d.getTime()) && eT.overflow < 0 && !eT.empty && !eT.invalidMonth && !eT.invalidWeekday && !eT.nullInput && !eT.invalidFormat && !eT.userInvalidated && (!eT.meridiem || (eT.meridiem && eU));
            if (eS._strict) {
                eR = eR && eT.charsLeftOver === 0 && eT.unusedTokens.length === 0 && eT.bigHour === undefined
            }
            if (Object.isFrozen == null || !Object.isFrozen(eS)) {
                eS._isValid = eR
            } else {
                return eR
            }
        }
        return eS._isValid
    }
    function M(eS) {
        var eR = cn(NaN);
        if (eS != null) {
            eM(a6(eR), eS)
        } else {
            a6(eR).userInvalidated = true
        }
        return eR
    }
    function E(eR) {
        return eR === void 0
    }
    var cL = et.momentProperties = [];
    function o(eV, eU) {
        var eR, eT, eS;
        if (!E(eU._isAMomentObject)) {
            eV._isAMomentObject = eU._isAMomentObject
        }
        if (!E(eU._i)) {
            eV._i = eU._i
        }
        if (!E(eU._f)) {
            eV._f = eU._f
        }
        if (!E(eU._l)) {
            eV._l = eU._l
        }
        if (!E(eU._strict)) {
            eV._strict = eU._strict
        }
        if (!E(eU._tzm)) {
            eV._tzm = eU._tzm
        }
        if (!E(eU._isUTC)) {
            eV._isUTC = eU._isUTC
        }
        if (!E(eU._offset)) {
            eV._offset = eU._offset
        }
        if (!E(eU._pf)) {
            eV._pf = a6(eU)
        }
        if (!E(eU._locale)) {
            eV._locale = eU._locale
        }
        if (cL.length > 0) {
            for (eR in cL) {
                eT = cL[eR];
                eS = eU[eT];
                if (!E(eS)) {
                    eV[eT] = eS
                }
            }
        }
        return eV
    }
    var c7 = false;
    function ei(eR) {
        o(this, eR);
        this._d = new Date(eR._d != null ? eR._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN)
        }
        if (c7 === false) {
            c7 = true;
            et.updateOffset(this);
            c7 = false
        }
    }
    function b4(eR) {
        return eR instanceof ei || (eR != null && eR._isAMomentObject != null)
    }
    function da(eR) {
        if (eR < 0) {
            return Math.ceil(eR) || 0
        } else {
            return Math.floor(eR)
        }
    }
    function cI(eR) {
        var eT = +eR
          , eS = 0;
        if (eT !== 0 && isFinite(eT)) {
            eS = da(eT)
        }
        return eS
    }
    function bS(eW, eV, eS) {
        var eR = Math.min(eW.length, eV.length), eT = Math.abs(eW.length - eV.length), eX = 0, eU;
        for (eU = 0; eU < eR; eU++) {
            if ((eS && eW[eU] !== eV[eU]) || (!eS && cI(eW[eU]) !== cI(eV[eU]))) {
                eX++
            }
        }
        return eX + eT
    }
    function c6(eR) {
        if (et.suppressDeprecationWarnings === false && (typeof console !== "undefined") && console.warn) {
            console.warn("Deprecation warning: " + eR)
        }
    }
    function d7(eS, eR) {
        var eT = true;
        return eM(function() {
            if (et.deprecationHandler != null) {
                et.deprecationHandler(null, eS)
            }
            if (eT) {
                var eV = [];
                var eU;
                for (var eX = 0; eX < arguments.length; eX++) {
                    eU = "";
                    if (typeof arguments[eX] === "object") {
                        eU += "\n[" + eX + "] ";
                        for (var eW in arguments[0]) {
                            eU += eW + ": " + arguments[0][eW] + ", "
                        }
                        eU = eU.slice(0, -2)
                    } else {
                        eU = arguments[eX]
                    }
                    eV.push(eU)
                }
                c6(eS + "\nArguments: " + Array.prototype.slice.call(eV).join("") + "\n" + (new Error()).stack);
                eT = false
            }
            return eR.apply(this, arguments)
        }, eR)
    }
    var Z = {};
    function eG(eR, eS) {
        if (et.deprecationHandler != null) {
            et.deprecationHandler(eR, eS)
        }
        if (!Z[eR]) {
            c6(eS);
            Z[eR] = true
        }
    }
    et.suppressDeprecationWarnings = false;
    et.deprecationHandler = null;
    function a1(eR) {
        return eR instanceof Function || Object.prototype.toString.call(eR) === "[object Function]"
    }
    function df(eR) {
        var eT, eS;
        for (eS in eR) {
            eT = eR[eS];
            if (a1(eT)) {
                this[eS] = eT
            } else {
                this["_" + eS] = eT
            }
        }
        this._config = eR;
        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + (/\d{1,2}/).source)
    }
    function d0(eT, eR) {
        var eS = eM({}, eT), eU;
        for (eU in eR) {
            if (dd(eR, eU)) {
                if (u(eT[eU]) && u(eR[eU])) {
                    eS[eU] = {};
                    eM(eS[eU], eT[eU]);
                    eM(eS[eU], eR[eU])
                } else {
                    if (eR[eU] != null) {
                        eS[eU] = eR[eU]
                    } else {
                        delete eS[eU]
                    }
                }
            }
        }
        for (eU in eT) {
            if (dd(eT, eU) && !dd(eR, eU) && u(eT[eU])) {
                eS[eU] = eM({}, eS[eU])
            }
        }
        return eS
    }
    function cu(eR) {
        if (eR != null) {
            this.set(eR)
        }
    }
    var bP;
    if (Object.keys) {
        bP = Object.keys
    } else {
        bP = function(eT) {
            var eS, eR = [];
            for (eS in eT) {
                if (dd(eT, eS)) {
                    eR.push(eS)
                }
            }
            return eR
        }
    }
    var dF = bP;
    var cc = {
        sameDay: "[Today at] LT",
        nextDay: "[Tomorrow at] LT",
        nextWeek: "dddd [at] LT",
        lastDay: "[Yesterday at] LT",
        lastWeek: "[Last] dddd [at] LT",
        sameElse: "L"
    };
    function d(eT, eU, eS) {
        var eR = this._calendar[eT] || this._calendar.sameElse;
        return a1(eR) ? eR.call(eU, eS) : eR
    }
    var dQ = {
        LTS: "h:mm:ss A",
        LT: "h:mm A",
        L: "MM/DD/YYYY",
        LL: "MMMM D, YYYY",
        LLL: "MMMM D, YYYY h:mm A",
        LLLL: "dddd, MMMM D, YYYY h:mm A"
    };
    function cC(eR) {
        var eS = this._longDateFormat[eR]
          , eT = this._longDateFormat[eR.toUpperCase()];
        if (eS || !eT) {
            return eS
        }
        this._longDateFormat[eR] = eT.replace(/MMMM|MM|DD|dddd/g, function(eU) {
            return eU.slice(1)
        });
        return this._longDateFormat[eR]
    }
    var ak = "Invalid date";
    function eg() {
        return this._invalidDate
    }
    var bZ = "%d";
    var bp = /\d{1,2}/;
    function er(eR) {
        return this._ordinal.replace("%d", eR)
    }
    var eq = {
        future: "in %s",
        past: "%s ago",
        s: "a few seconds",
        m: "a minute",
        mm: "%d minutes",
        h: "an hour",
        hh: "%d hours",
        d: "a day",
        dd: "%d days",
        M: "a month",
        MM: "%d months",
        y: "a year",
        yy: "%d years"
    };
    function S(eU, eT, eS, eV) {
        var eR = this._relativeTime[eS];
        return (a1(eR)) ? eR(eU, eT, eS, eV) : eR.replace(/%d/i, eU)
    }
    function dR(eT, eR) {
        var eS = this._relativeTime[eT > 0 ? "future" : "past"];
        return a1(eS) ? eS(eR) : eS.replace(/%s/i, eR)
    }
    var cD = {};
    function b7(eT, eR) {
        var eS = eT.toLowerCase();
        cD[eS] = cD[eS + "s"] = cD[eR] = eT
    }
    function cH(eR) {
        return typeof eR === "string" ? cD[eR] || cD[eR.toLowerCase()] : undefined
    }
    function dD(eT) {
        var eS = {}, eR, eU;
        for (eU in eT) {
            if (dd(eT, eU)) {
                eR = cH(eU);
                if (eR) {
                    eS[eR] = eT[eU]
                }
            }
        }
        return eS
    }
    var bn = {};
    function dP(eS, eR) {
        bn[eS] = eR
    }
    function bk(eR) {
        var eS = [];
        for (var eT in eR) {
            eS.push({
                unit: eT,
                priority: bn[eT]
            })
        }
        eS.sort(function(eV, eU) {
            return eV.priority - eU.priority
        });
        return eS
    }
    function d4(eR, eS) {
        return function(eT) {
            if (eT != null) {
                aI(this, eR, eT);
                et.updateOffset(this, eS);
                return this
            } else {
                return dt(this, eR)
            }
        }
    }
    function dt(eS, eR) {
        return eS.isValid() ? eS._d["get" + (eS._isUTC ? "UTC" : "") + eR]() : NaN
    }
    function aI(eS, eR, eT) {
        if (eS.isValid()) {
            eS._d["set" + (eS._isUTC ? "UTC" : "") + eR](eT)
        }
    }
    function aw(eR) {
        eR = cH(eR);
        if (a1(this[eR])) {
            return this[eR]()
        }
        return this
    }
    function aq(eR, eU) {
        if (typeof eR === "object") {
            eR = dD(eR);
            var eT = bk(eR);
            for (var eS = 0; eS < eT.length; eS++) {
                this[eT[eS].unit](eR[eT[eS].unit])
            }
        } else {
            eR = cH(eR);
            if (a1(this[eR])) {
                return this[eR](eU)
            }
        }
        return this
    }
    function cg(eW, eV, eS) {
        var eU = "" + Math.abs(eW)
          , eT = eV - eU.length
          , eR = eW >= 0;
        return (eR ? (eS ? "+" : "") : "-") + Math.pow(10, Math.max(0, eT)).toString().substr(1) + eU
    }
    var bL = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
    var bK = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
    var bJ = {};
    var a4 = {};
    function cp(eS, eT, eR, eV) {
        var eU = eV;
        if (typeof eV === "string") {
            eU = function() {
                return this[eV]()
            }
        }
        if (eS) {
            a4[eS] = eU
        }
        if (eT) {
            a4[eT[0]] = function() {
                return cg(eU.apply(this, arguments), eT[1], eT[2])
            }
        }
        if (eR) {
            a4[eR] = function() {
                return this.localeData().ordinal(eU.apply(this, arguments), eS)
            }
        }
    }
    function at(eR) {
        if (eR.match(/\[[\s\S]/)) {
            return eR.replace(/^\[|\]$/g, "")
        }
        return eR.replace(/\\/g, "")
    }
    function bs(eT) {
        var eU = eT.match(bL), eR, eS;
        for (eR = 0,
        eS = eU.length; eR < eS; eR++) {
            if (a4[eU[eR]]) {
                eU[eR] = a4[eU[eR]]
            } else {
                eU[eR] = at(eU[eR])
            }
        }
        return function(eX) {
            var eV = "", eW;
            for (eW = 0; eW < eS; eW++) {
                eV += eU[eW]instanceof Function ? eU[eW].call(eX, eT) : eU[eW]
            }
            return eV
        }
    }
    function ae(eR, eS) {
        if (!eR.isValid()) {
            return eR.localeData().invalidDate()
        }
        eS = bA(eS, eR.localeData());
        bJ[eS] = bJ[eS] || bs(eS);
        return bJ[eS](eR)
    }
    function bA(eU, eR) {
        var eS = 5;
        function eT(eV) {
            return eR.longDateFormat(eV) || eV
        }
        bK.lastIndex = 0;
        while (eS >= 0 && bK.test(eU)) {
            eU = eU.replace(bK, eT);
            bK.lastIndex = 0;
            eS -= 1
        }
        return eU
    }
    var aH = /\d/;
    var aG = /\d\d/;
    var aF = /\d{3}/;
    var aE = /\d{4}/;
    var aD = /[+-]?\d{6}/;
    var ap = /\d\d?/;
    var cd = /\d\d\d\d?/;
    var d6 = /\d\d\d\d\d\d?/;
    var ao = /\d{1,3}/;
    var an = /\d{1,4}/;
    var al = /[+-]?\d{1,6}/;
    var q = /\d+/;
    var A = /[+-]?\d+/;
    var bC = /Z|[+-]\d\d:?\d\d/gi;
    var cw = /Z|[+-]\d\d(?::?\d\d)?/gi;
    var eH = /[+-]?\d+(\.\d{1,3})?/;
    var a3 = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
    var aY = {};
    function a8(eR, eS, eT) {
        aY[eR] = a1(eS) ? eS : function(eV, eU) {
            return (eV && eT) ? eT : eS
        }
    }
    function bz(eS, eR) {
        if (!dd(aY, eS)) {
            return new RegExp(db(eS))
        }
        return aY[eS](eR._strict, eR._locale)
    }
    function db(eR) {
        return b9(eR.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(eS, eW, eV, eU, eT) {
            return eW || eV || eU || eT
        }))
    }
    function b9(eR) {
        return eR.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
    }
    var g = {};
    function bN(eS, eU) {
        var eR, eT = eU;
        if (typeof eS === "string") {
            eS = [eS]
        }
        if (p(eU)) {
            eT = function(eV, eW) {
                eW[eU] = cI(eV)
            }
        }
        for (eR = 0; eR < eS.length; eR++) {
            g[eS[eR]] = eT
        }
    }
    function W(eR, eS) {
        bN(eR, function(eT, eW, eU, eV) {
            eU._w = eU._w || {};
            eS(eT, eU._w, eU, eV)
        })
    }
    function t(eT, eR, eS) {
        if (eR != null && dd(g, eT)) {
            g[eT](eR, eS._a, eS, eT)
        }
    }
    var eI = 0;
    var i = 1;
    var ek = 2;
    var ex = 3;
    var dA = 4;
    var ah = 5;
    var bE = 6;
    var cb = 7;
    var h = 8;
    var cJ;
    if (Array.prototype.indexOf) {
        cJ = Array.prototype.indexOf
    } else {
        cJ = function(eS) {
            var eR;
            for (eR = 0; eR < this.length; ++eR) {
                if (this[eR] === eS) {
                    return eR
                }
            }
            return -1
        }
    }
    var c1 = cJ;
    function bB(eR, eS) {
        return new Date(Date.UTC(eR, eS + 1, 0)).getUTCDate()
    }
    cp("M", ["MM", 2], "Mo", function() {
        return this.month() + 1
    });
    cp("MMM", 0, 0, function(eR) {
        return this.localeData().monthsShort(this, eR)
    });
    cp("MMMM", 0, 0, function(eR) {
        return this.localeData().months(this, eR)
    });
    b7("month", "M");
    dP("month", 8);
    a8("M", ap);
    a8("MM", ap, aG);
    a8("MMM", function(eS, eR) {
        return eR.monthsShortRegex(eS)
    });
    a8("MMMM", function(eS, eR) {
        return eR.monthsRegex(eS)
    });
    bN(["M", "MM"], function(eR, eS) {
        eS[i] = cI(eR) - 1
    });
    bN(["MMM", "MMMM"], function(eR, eV, eS, eT) {
        var eU = eS._locale.monthsParse(eR, eT, eS._strict);
        if (eU != null) {
            eV[i] = eU
        } else {
            a6(eS).invalidMonth = eR
        }
    });
    var bW = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var O = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
    function aW(eR, eS) {
        if (!eR) {
            return this._months
        }
        return U(this._months) ? this._months[eR.month()] : this._months[(this._months.isFormat || bW).test(eS) ? "format" : "standalone"][eR.month()]
    }
    var dU = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
    function a5(eR, eS) {
        if (!eR) {
            return this._monthsShort
        }
        return U(this._monthsShort) ? this._monthsShort[eR.month()] : this._monthsShort[bW.test(eS) ? "format" : "standalone"][eR.month()]
    }
    function bx(eS, eX, eR) {
        var eU, eV, eW, eT = eS.toLocaleLowerCase();
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (eU = 0; eU < 12; ++eU) {
                eW = cn([2000, eU]);
                this._shortMonthsParse[eU] = this.monthsShort(eW, "").toLocaleLowerCase();
                this._longMonthsParse[eU] = this.months(eW, "").toLocaleLowerCase()
            }
        }
        if (eR) {
            if (eX === "MMM") {
                eV = c1.call(this._shortMonthsParse, eT);
                return eV !== -1 ? eV : null
            } else {
                eV = c1.call(this._longMonthsParse, eT);
                return eV !== -1 ? eV : null
            }
        } else {
            if (eX === "MMM") {
                eV = c1.call(this._shortMonthsParse, eT);
                if (eV !== -1) {
                    return eV
                }
                eV = c1.call(this._longMonthsParse, eT);
                return eV !== -1 ? eV : null
            } else {
                eV = c1.call(this._longMonthsParse, eT);
                if (eV !== -1) {
                    return eV
                }
                eV = c1.call(this._shortMonthsParse, eT);
                return eV !== -1 ? eV : null
            }
        }
    }
    function c4(eS, eW, eR) {
        var eT, eV, eU;
        if (this._monthsParseExact) {
            return bx.call(this, eS, eW, eR)
        }
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = []
        }
        for (eT = 0; eT < 12; eT++) {
            eV = cn([2000, eT]);
            if (eR && !this._longMonthsParse[eT]) {
                this._longMonthsParse[eT] = new RegExp("^" + this.months(eV, "").replace(".", "") + "$","i");
                this._shortMonthsParse[eT] = new RegExp("^" + this.monthsShort(eV, "").replace(".", "") + "$","i")
            }
            if (!eR && !this._monthsParse[eT]) {
                eU = "^" + this.months(eV, "") + "|^" + this.monthsShort(eV, "");
                this._monthsParse[eT] = new RegExp(eU.replace(".", ""),"i")
            }
            if (eR && eW === "MMMM" && this._longMonthsParse[eT].test(eS)) {
                return eT
            } else {
                if (eR && eW === "MMM" && this._shortMonthsParse[eT].test(eS)) {
                    return eT
                } else {
                    if (!eR && this._monthsParse[eT].test(eS)) {
                        return eT
                    }
                }
            }
        }
    }
    function aR(eR, eS) {
        var eT;
        if (!eR.isValid()) {
            return eR
        }
        if (typeof eS === "string") {
            if (/^\d+$/.test(eS)) {
                eS = cI(eS)
            } else {
                eS = eR.localeData().monthsParse(eS);
                if (!p(eS)) {
                    return eR
                }
            }
        }
        eT = Math.min(eR.date(), bB(eR.year(), eS));
        eR._d["set" + (eR._isUTC ? "UTC" : "") + "Month"](eS, eT);
        return eR
    }
    function ew(eR) {
        if (eR != null) {
            aR(this, eR);
            et.updateOffset(this, true);
            return this
        } else {
            return dt(this, "Month")
        }
    }
    function bH() {
        return bB(this.year(), this.month())
    }
    var c9 = a3;
    function dc(eR) {
        if (this._monthsParseExact) {
            if (!dd(this, "_monthsRegex")) {
                de.call(this)
            }
            if (eR) {
                return this._monthsShortStrictRegex
            } else {
                return this._monthsShortRegex
            }
        } else {
            if (!dd(this, "_monthsShortRegex")) {
                this._monthsShortRegex = c9
            }
            return this._monthsShortStrictRegex && eR ? this._monthsShortStrictRegex : this._monthsShortRegex
        }
    }
    var eo = a3;
    function cR(eR) {
        if (this._monthsParseExact) {
            if (!dd(this, "_monthsRegex")) {
                de.call(this)
            }
            if (eR) {
                return this._monthsStrictRegex
            } else {
                return this._monthsRegex
            }
        } else {
            if (!dd(this, "_monthsRegex")) {
                this._monthsRegex = eo
            }
            return this._monthsStrictRegex && eR ? this._monthsStrictRegex : this._monthsRegex
        }
    }
    function de() {
        function eW(eY, eX) {
            return eX.length - eY.length
        }
        var eV = [], eR = [], eU = [], eS, eT;
        for (eS = 0; eS < 12; eS++) {
            eT = cn([2000, eS]);
            eV.push(this.monthsShort(eT, ""));
            eR.push(this.months(eT, ""));
            eU.push(this.months(eT, ""));
            eU.push(this.monthsShort(eT, ""))
        }
        eV.sort(eW);
        eR.sort(eW);
        eU.sort(eW);
        for (eS = 0; eS < 12; eS++) {
            eV[eS] = b9(eV[eS]);
            eR[eS] = b9(eR[eS])
        }
        for (eS = 0; eS < 24; eS++) {
            eU[eS] = b9(eU[eS])
        }
        this._monthsRegex = new RegExp("^(" + eU.join("|") + ")","i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp("^(" + eR.join("|") + ")","i");
        this._monthsShortStrictRegex = new RegExp("^(" + eV.join("|") + ")","i")
    }
    cp("Y", 0, 0, function() {
        var eR = this.year();
        return eR <= 9999 ? "" + eR : "+" + eR
    });
    cp(0, ["YY", 2], 0, function() {
        return this.year() % 100
    });
    cp(0, ["YYYY", 4], 0, "year");
    cp(0, ["YYYYY", 5], 0, "year");
    cp(0, ["YYYYYY", 6, true], 0, "year");
    b7("year", "y");
    dP("year", 1);
    a8("Y", A);
    a8("YY", ap, aG);
    a8("YYYY", an, aE);
    a8("YYYYY", al, aD);
    a8("YYYYYY", al, aD);
    bN(["YYYYY", "YYYYYY"], eI);
    bN("YYYY", function(eR, eS) {
        eS[eI] = eR.length === 2 ? et.parseTwoDigitYear(eR) : cI(eR)
    });
    bN("YY", function(eR, eS) {
        eS[eI] = et.parseTwoDigitYear(eR)
    });
    bN("Y", function(eR, eS) {
        eS[eI] = parseInt(eR, 10)
    });
    function dy(eR) {
        return dT(eR) ? 366 : 365
    }
    function dT(eR) {
        return (eR % 4 === 0 && eR % 100 !== 0) || eR % 400 === 0
    }
    et.parseTwoDigitYear = function(eR) {
        return cI(eR) + (cI(eR) > 68 ? 1900 : 2000)
    }
    ;
    var cy = d4("FullYear", true);
    function cO() {
        return dT(this.year())
    }
    function d1(eY, eR, eW, eV, eX, eU, eT) {
        var eS = new Date(eY,eR,eW,eV,eX,eU,eT);
        if (eY < 100 && eY >= 0 && isFinite(eS.getFullYear())) {
            eS.setFullYear(eY)
        }
        return eS
    }
    function dm(eS) {
        var eR = new Date(Date.UTC.apply(null, arguments));
        if (eS < 100 && eS >= 0 && isFinite(eR.getUTCFullYear())) {
            eR.setUTCFullYear(eS)
        }
        return eR
    }
    function bd(eS, eV, eU) {
        var eR = 7 + eV - eU
          , eT = (7 + dm(eS, 0, eR).getUTCDay() - eV) % 7;
        return -eT + eR - 1
    }
    function bv(eU, eS, eT, e0, eY) {
        var eZ = (7 + eT - e0) % 7, eR = bd(eU, e0, eY), eW = 1 + 7 * (eS - 1) + eZ + eR, eX, eV;
        if (eW <= 0) {
            eX = eU - 1;
            eV = dy(eX) + eW
        } else {
            if (eW > dy(eU)) {
                eX = eU + 1;
                eV = eW - dy(eU)
            } else {
                eX = eU;
                eV = eW
            }
        }
        return {
            year: eX,
            dayOfYear: eV
        }
    }
    function ej(eV, eX, eW) {
        var eT = bd(eV.year(), eX, eW), eU = Math.floor((eV.dayOfYear() - eT - 1) / 7) + 1, eR, eS;
        if (eU < 1) {
            eS = eV.year() - 1;
            eR = eU + D(eS, eX, eW)
        } else {
            if (eU > D(eV.year(), eX, eW)) {
                eR = eU - D(eV.year(), eX, eW);
                eS = eV.year() + 1
            } else {
                eS = eV.year();
                eR = eU
            }
        }
        return {
            week: eR,
            year: eS
        }
    }
    function D(eS, eV, eT) {
        var eR = bd(eS, eV, eT)
          , eU = bd(eS + 1, eV, eT);
        return (dy(eS) - eR + eU) / 7
    }
    cp("w", ["ww", 2], "wo", "week");
    cp("W", ["WW", 2], "Wo", "isoWeek");
    b7("week", "w");
    b7("isoWeek", "W");
    dP("week", 5);
    dP("isoWeek", 5);
    a8("w", ap);
    a8("ww", ap, aG);
    a8("W", ap);
    a8("WW", ap, aG);
    W(["w", "ww", "W", "WW"], function(eR, eU, eS, eT) {
        eU[eT.substr(0, 1)] = cI(eR)
    });
    function bj(eR) {
        return ej(eR, this._week.dow, this._week.doy).week
    }
    var bV = {
        dow: 0,
        doy: 6
    };
    function af() {
        return this._week.dow
    }
    function c2() {
        return this._week.doy
    }
    function I(eR) {
        var eS = this.localeData().week(this);
        return eR == null ? eS : this.add((eR - eS) * 7, "d")
    }
    function w(eR) {
        var eS = ej(this, 1, 4).week;
        return eR == null ? eS : this.add((eR - eS) * 7, "d")
    }
    cp("d", 0, "do", "day");
    cp("dd", 0, 0, function(eR) {
        return this.localeData().weekdaysMin(this, eR)
    });
    cp("ddd", 0, 0, function(eR) {
        return this.localeData().weekdaysShort(this, eR)
    });
    cp("dddd", 0, 0, function(eR) {
        return this.localeData().weekdays(this, eR)
    });
    cp("e", 0, 0, "weekday");
    cp("E", 0, 0, "isoWeekday");
    b7("day", "d");
    b7("weekday", "e");
    b7("isoWeekday", "E");
    dP("day", 11);
    dP("weekday", 11);
    dP("isoWeekday", 11);
    a8("d", ap);
    a8("e", ap);
    a8("E", ap);
    a8("dd", function(eS, eR) {
        return eR.weekdaysMinRegex(eS)
    });
    a8("ddd", function(eS, eR) {
        return eR.weekdaysShortRegex(eS)
    });
    a8("dddd", function(eS, eR) {
        return eR.weekdaysRegex(eS)
    });
    W(["dd", "ddd", "dddd"], function(eR, eU, eS, eT) {
        var eV = eS._locale.weekdaysParse(eR, eT, eS._strict);
        if (eV != null) {
            eU.d = eV
        } else {
            a6(eS).invalidWeekday = eR
        }
    });
    W(["d", "e", "E"], function(eR, eU, eS, eT) {
        eU[eT] = cI(eR)
    });
    function bc(eS, eR) {
        if (typeof eS !== "string") {
            return eS
        }
        if (!isNaN(eS)) {
            return parseInt(eS, 10)
        }
        eS = eR.weekdaysParse(eS);
        if (typeof eS === "number") {
            return eS
        }
        return null
    }
    function by(eS, eR) {
        if (typeof eS === "string") {
            return eR.weekdaysParse(eS) % 7 || 7
        }
        return isNaN(eS) ? null : eS
    }
    var R = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
    function au(eR, eS) {
        if (!eR) {
            return this._weekdays
        }
        return U(this._weekdays) ? this._weekdays[eR.day()] : this._weekdays[this._weekdays.isFormat.test(eS) ? "format" : "standalone"][eR.day()]
    }
    var k = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
    function L(eR) {
        return (eR) ? this._weekdaysShort[eR.day()] : this._weekdaysShort
    }
    var bo = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
    function eu(eR) {
        return (eR) ? this._weekdaysMin[eR.day()] : this._weekdaysMin
    }
    function dG(eW, eX, eR) {
        var eT, eU, eV, eS = eW.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];
            for (eT = 0; eT < 7; ++eT) {
                eV = cn([2000, 1]).day(eT);
                this._minWeekdaysParse[eT] = this.weekdaysMin(eV, "").toLocaleLowerCase();
                this._shortWeekdaysParse[eT] = this.weekdaysShort(eV, "").toLocaleLowerCase();
                this._weekdaysParse[eT] = this.weekdays(eV, "").toLocaleLowerCase()
            }
        }
        if (eR) {
            if (eX === "dddd") {
                eU = c1.call(this._weekdaysParse, eS);
                return eU !== -1 ? eU : null
            } else {
                if (eX === "ddd") {
                    eU = c1.call(this._shortWeekdaysParse, eS);
                    return eU !== -1 ? eU : null
                } else {
                    eU = c1.call(this._minWeekdaysParse, eS);
                    return eU !== -1 ? eU : null
                }
            }
        } else {
            if (eX === "dddd") {
                eU = c1.call(this._weekdaysParse, eS);
                if (eU !== -1) {
                    return eU
                }
                eU = c1.call(this._shortWeekdaysParse, eS);
                if (eU !== -1) {
                    return eU
                }
                eU = c1.call(this._minWeekdaysParse, eS);
                return eU !== -1 ? eU : null
            } else {
                if (eX === "ddd") {
                    eU = c1.call(this._shortWeekdaysParse, eS);
                    if (eU !== -1) {
                        return eU
                    }
                    eU = c1.call(this._weekdaysParse, eS);
                    if (eU !== -1) {
                        return eU
                    }
                    eU = c1.call(this._minWeekdaysParse, eS);
                    return eU !== -1 ? eU : null
                } else {
                    eU = c1.call(this._minWeekdaysParse, eS);
                    if (eU !== -1) {
                        return eU
                    }
                    eU = c1.call(this._weekdaysParse, eS);
                    if (eU !== -1) {
                        return eU
                    }
                    eU = c1.call(this._shortWeekdaysParse, eS);
                    return eU !== -1 ? eU : null
                }
            }
        }
    }
    function bG(eV, eW, eR) {
        var eS, eU, eT;
        if (this._weekdaysParseExact) {
            return dG.call(this, eV, eW, eR)
        }
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = []
        }
        for (eS = 0; eS < 7; eS++) {
            eU = cn([2000, 1]).day(eS);
            if (eR && !this._fullWeekdaysParse[eS]) {
                this._fullWeekdaysParse[eS] = new RegExp("^" + this.weekdays(eU, "").replace(".", ".?") + "$","i");
                this._shortWeekdaysParse[eS] = new RegExp("^" + this.weekdaysShort(eU, "").replace(".", ".?") + "$","i");
                this._minWeekdaysParse[eS] = new RegExp("^" + this.weekdaysMin(eU, "").replace(".", ".?") + "$","i")
            }
            if (!this._weekdaysParse[eS]) {
                eT = "^" + this.weekdays(eU, "") + "|^" + this.weekdaysShort(eU, "") + "|^" + this.weekdaysMin(eU, "");
                this._weekdaysParse[eS] = new RegExp(eT.replace(".", ""),"i")
            }
            if (eR && eW === "dddd" && this._fullWeekdaysParse[eS].test(eV)) {
                return eS
            } else {
                if (eR && eW === "ddd" && this._shortWeekdaysParse[eS].test(eV)) {
                    return eS
                } else {
                    if (eR && eW === "dd" && this._minWeekdaysParse[eS].test(eV)) {
                        return eS
                    } else {
                        if (!eR && this._weekdaysParse[eS].test(eV)) {
                            return eS
                        }
                    }
                }
            }
        }
    }
    function eb(eS) {
        if (!this.isValid()) {
            return eS != null ? this : NaN
        }
        var eR = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (eS != null) {
            eS = bc(eS, this.localeData());
            return this.add(eS - eR, "d")
        } else {
            return eR
        }
    }
    function ac(eR) {
        if (!this.isValid()) {
            return eR != null ? this : NaN
        }
        var eS = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return eR == null ? eS : this.add(eR - eS, "d")
    }
    function cl(eR) {
        if (!this.isValid()) {
            return eR != null ? this : NaN
        }
        if (eR != null) {
            var eS = by(eR, this.localeData());
            return this.day(this.day() % 7 ? eS : eS - 7)
        } else {
            return this.day() || 7
        }
    }
    var aa = a3;
    function eK(eR) {
        if (this._weekdaysParseExact) {
            if (!dd(this, "_weekdaysRegex")) {
                y.call(this)
            }
            if (eR) {
                return this._weekdaysStrictRegex
            } else {
                return this._weekdaysRegex
            }
        } else {
            if (!dd(this, "_weekdaysRegex")) {
                this._weekdaysRegex = aa
            }
            return this._weekdaysStrictRegex && eR ? this._weekdaysStrictRegex : this._weekdaysRegex
        }
    }
    var v = a3;
    function aC(eR) {
        if (this._weekdaysParseExact) {
            if (!dd(this, "_weekdaysRegex")) {
                y.call(this)
            }
            if (eR) {
                return this._weekdaysShortStrictRegex
            } else {
                return this._weekdaysShortRegex
            }
        } else {
            if (!dd(this, "_weekdaysShortRegex")) {
                this._weekdaysShortRegex = v
            }
            return this._weekdaysShortStrictRegex && eR ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex
        }
    }
    var dN = a3;
    function C(eR) {
        if (this._weekdaysParseExact) {
            if (!dd(this, "_weekdaysRegex")) {
                y.call(this)
            }
            if (eR) {
                return this._weekdaysMinStrictRegex
            } else {
                return this._weekdaysMinRegex
            }
        } else {
            if (!dd(this, "_weekdaysMinRegex")) {
                this._weekdaysMinRegex = dN
            }
            return this._weekdaysMinStrictRegex && eR ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex
        }
    }
    function y() {
        function eU(e2, e1) {
            return e1.length - e2.length
        }
        var eW = [], eX = [], e0 = [], eR = [], eV, eT, eS, eY, eZ;
        for (eV = 0; eV < 7; eV++) {
            eT = cn([2000, 1]).day(eV);
            eS = this.weekdaysMin(eT, "");
            eY = this.weekdaysShort(eT, "");
            eZ = this.weekdays(eT, "");
            eW.push(eS);
            eX.push(eY);
            e0.push(eZ);
            eR.push(eS);
            eR.push(eY);
            eR.push(eZ)
        }
        eW.sort(eU);
        eX.sort(eU);
        e0.sort(eU);
        eR.sort(eU);
        for (eV = 0; eV < 7; eV++) {
            eX[eV] = b9(eX[eV]);
            e0[eV] = b9(e0[eV]);
            eR[eV] = b9(eR[eV])
        }
        this._weekdaysRegex = new RegExp("^(" + eR.join("|") + ")","i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp("^(" + e0.join("|") + ")","i");
        this._weekdaysShortStrictRegex = new RegExp("^(" + eX.join("|") + ")","i");
        this._weekdaysMinStrictRegex = new RegExp("^(" + eW.join("|") + ")","i")
    }
    function dr() {
        return this.hours() % 12 || 12
    }
    function N() {
        return this.hours() || 24
    }
    cp("H", ["HH", 2], 0, "hour");
    cp("h", ["hh", 2], 0, dr);
    cp("k", ["kk", 2], 0, N);
    cp("hmm", 0, 0, function() {
        return "" + dr.apply(this) + cg(this.minutes(), 2)
    });
    cp("hmmss", 0, 0, function() {
        return "" + dr.apply(this) + cg(this.minutes(), 2) + cg(this.seconds(), 2)
    });
    cp("Hmm", 0, 0, function() {
        return "" + this.hours() + cg(this.minutes(), 2)
    });
    cp("Hmmss", 0, 0, function() {
        return "" + this.hours() + cg(this.minutes(), 2) + cg(this.seconds(), 2)
    });
    function ee(eR, eS) {
        cp(eR, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), eS)
        })
    }
    ee("a", true);
    ee("A", false);
    b7("hour", "h");
    dP("hour", 13);
    function Q(eS, eR) {
        return eR._meridiemParse
    }
    a8("a", Q);
    a8("A", Q);
    a8("H", ap);
    a8("h", ap);
    a8("HH", ap, aG);
    a8("hh", ap, aG);
    a8("hmm", cd);
    a8("hmmss", d6);
    a8("Hmm", cd);
    a8("Hmmss", d6);
    bN(["H", "HH"], ex);
    bN(["a", "A"], function(eR, eT, eS) {
        eS._isPm = eS._locale.isPM(eR);
        eS._meridiem = eR
    });
    bN(["h", "hh"], function(eR, eT, eS) {
        eT[ex] = cI(eR);
        a6(eS).bigHour = true
    });
    bN("hmm", function(eR, eU, eS) {
        var eT = eR.length - 2;
        eU[ex] = cI(eR.substr(0, eT));
        eU[dA] = cI(eR.substr(eT));
        a6(eS).bigHour = true
    });
    bN("hmmss", function(eR, eV, eS) {
        var eU = eR.length - 4;
        var eT = eR.length - 2;
        eV[ex] = cI(eR.substr(0, eU));
        eV[dA] = cI(eR.substr(eU, 2));
        eV[ah] = cI(eR.substr(eT));
        a6(eS).bigHour = true
    });
    bN("Hmm", function(eR, eU, eS) {
        var eT = eR.length - 2;
        eU[ex] = cI(eR.substr(0, eT));
        eU[dA] = cI(eR.substr(eT))
    });
    bN("Hmmss", function(eR, eV, eS) {
        var eU = eR.length - 4;
        var eT = eR.length - 2;
        eV[ex] = cI(eR.substr(0, eU));
        eV[dA] = cI(eR.substr(eU, 2));
        eV[ah] = cI(eR.substr(eT))
    });
    function b6(eR) {
        return ((eR + "").toLowerCase().charAt(0) === "p")
    }
    var bY = /[ap]\.?m?\.?/i;
    function aP(eR, eS, eT) {
        if (eR > 11) {
            return eT ? "pm" : "PM"
        } else {
            return eT ? "am" : "AM"
        }
    }
    var ch = d4("Hours", true);
    var bU = {
        calendar: cc,
        longDateFormat: dQ,
        invalidDate: ak,
        ordinal: bZ,
        ordinalParse: bp,
        relativeTime: eq,
        months: O,
        monthsShort: dU,
        week: bV,
        weekdays: R,
        weekdaysMin: bo,
        weekdaysShort: k,
        meridiemParse: bY
    };
    var bt = {};
    var l = {};
    var cQ;
    function dg(eR) {
        return eR ? eR.toLowerCase().replace("_", "-") : eR
    }
    function cP(eW) {
        var eU = 0, eS, eV, eR, eT;
        while (eU < eW.length) {
            eT = dg(eW[eU]).split("-");
            eS = eT.length;
            eV = dg(eW[eU + 1]);
            eV = eV ? eV.split("-") : null;
            while (eS > 0) {
                eR = ay(eT.slice(0, eS).join("-"));
                if (eR) {
                    return eR
                }
                if (eV && eV.length >= eS && bS(eT, eV, true) >= eS - 1) {
                    break
                }
                eS--
            }
            eU++
        }
        return null
    }
    function ay(eR) {
        var eT = null;
        if (!bt[eR] && (typeof module !== "undefined") && module && module.exports) {
            try {
                eT = cQ._abbr;
                require("./locale/" + eR);
                z(eT)
            } catch (eS) {}
        }
        return bt[eR]
    }
    function z(eS, eR) {
        var eT;
        if (eS) {
            if (E(eR)) {
                eT = P(eS)
            } else {
                eT = cs(eS, eR)
            }
            if (eT) {
                cQ = eT
            }
        }
        return cQ._abbr
    }
    function cs(eS, eR) {
        if (eR !== null) {
            var eT = bU;
            eR.abbr = eS;
            if (bt[eS] != null) {
                eG("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
                eT = bt[eS]._config
            } else {
                if (eR.parentLocale != null) {
                    if (bt[eR.parentLocale] != null) {
                        eT = bt[eR.parentLocale]._config
                    } else {
                        if (!l[eR.parentLocale]) {
                            l[eR.parentLocale] = []
                        }
                        l[eR.parentLocale].push({
                            name: eS,
                            config: eR
                        });
                        return null
                    }
                }
            }
            bt[eS] = new cu(d0(eT, eR));
            if (l[eS]) {
                l[eS].forEach(function(eU) {
                    cs(eU.name, eU.config)
                })
            }
            z(eS);
            return bt[eS]
        } else {
            delete bt[eS];
            return null
        }
    }
    function ec(eT, eS) {
        if (eS != null) {
            var eR, eU = bU;
            if (bt[eT] != null) {
                eU = bt[eT]._config
            }
            eS = d0(eU, eS);
            eR = new cu(eS);
            eR.parentLocale = bt[eT];
            bt[eT] = eR;
            z(eT)
        } else {
            if (bt[eT] != null) {
                if (bt[eT].parentLocale != null) {
                    bt[eT] = bt[eT].parentLocale
                } else {
                    if (bt[eT] != null) {
                        delete bt[eT]
                    }
                }
            }
        }
        return bt[eT]
    }
    function P(eS) {
        var eR;
        if (eS && eS._locale && eS._locale._abbr) {
            eS = eS._locale._abbr
        }
        if (!eS) {
            return cQ
        }
        if (!U(eS)) {
            eR = ay(eS);
            if (eR) {
                return eR
            }
            eS = [eS]
        }
        return cP(eS)
    }
    function bX() {
        return dF(bt)
    }
    function cG(eR) {
        var eT;
        var eS = eR._a;
        if (eS && a6(eR).overflow === -2) {
            eT = eS[i] < 0 || eS[i] > 11 ? i : eS[ek] < 1 || eS[ek] > bB(eS[eI], eS[i]) ? ek : eS[ex] < 0 || eS[ex] > 24 || (eS[ex] === 24 && (eS[dA] !== 0 || eS[ah] !== 0 || eS[bE] !== 0)) ? ex : eS[dA] < 0 || eS[dA] > 59 ? dA : eS[ah] < 0 || eS[ah] > 59 ? ah : eS[bE] < 0 || eS[bE] > 999 ? bE : -1;
            if (a6(eR)._overflowDayOfYear && (eT < eI || eT > ek)) {
                eT = ek
            }
            if (a6(eR)._overflowWeeks && eT === -1) {
                eT = cb
            }
            if (a6(eR)._overflowWeekday && eT === -1) {
                eT = h
            }
            a6(eR).overflow = eT
        }
        return eR
    }
    var j = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var aO = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var cx = /Z|[+-]\d\d(?::?\d\d)?/;
    var cK = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/]];
    var ci = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]];
    var bO = /^\/?Date\((\-?\d+)/i;
    function B(eS) {
        var eW, eU, eY = eS._i, eX = j.exec(eY) || aO.exec(eY), eZ, eR, eV, eT;
        if (eX) {
            a6(eS).iso = true;
            for (eW = 0,
            eU = cK.length; eW < eU; eW++) {
                if (cK[eW][1].exec(eX[1])) {
                    eR = cK[eW][0];
                    eZ = cK[eW][2] !== false;
                    break
                }
            }
            if (eR == null) {
                eS._isValid = false;
                return
            }
            if (eX[3]) {
                for (eW = 0,
                eU = ci.length; eW < eU; eW++) {
                    if (ci[eW][1].exec(eX[3])) {
                        eV = (eX[2] || " ") + ci[eW][0];
                        break
                    }
                }
                if (eV == null) {
                    eS._isValid = false;
                    return
                }
            }
            if (!eZ && eV != null) {
                eS._isValid = false;
                return
            }
            if (eX[4]) {
                if (cx.exec(eX[4])) {
                    eT = "Z"
                } else {
                    eS._isValid = false;
                    return
                }
            }
            eS._f = eR + (eV || "") + (eT || "");
            bQ(eS)
        } else {
            eS._isValid = false
        }
    }
    function a7(eS) {
        var eR = bO.exec(eS._i);
        if (eR !== null) {
            eS._d = new Date(+eR[1]);
            return
        }
        B(eS);
        if (eS._isValid === false) {
            delete eS._isValid;
            et.createFromInputFallback(eS)
        }
    }
    et.createFromInputFallback = d7("value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(eR) {
        eR._d = new Date(eR._i + (eR._useUTC ? " UTC" : ""))
    });
    function d2(eS, eR, eT) {
        if (eS != null) {
            return eS
        }
        if (eR != null) {
            return eR
        }
        return eT
    }
    function aX(eS) {
        var eR = new Date(et.now());
        if (eS._useUTC) {
            return [eR.getUTCFullYear(), eR.getUTCMonth(), eR.getUTCDate()]
        }
        return [eR.getFullYear(), eR.getMonth(), eR.getDate()]
    }
    function e(eV) {
        var eW, eU, eT = [], eS, eR;
        if (eV._d) {
            return
        }
        eS = aX(eV);
        if (eV._w && eV._a[ek] == null && eV._a[i] == null) {
            cU(eV)
        }
        if (eV._dayOfYear) {
            eR = d2(eV._a[eI], eS[eI]);
            if (eV._dayOfYear > dy(eR)) {
                a6(eV)._overflowDayOfYear = true
            }
            eU = dm(eR, 0, eV._dayOfYear);
            eV._a[i] = eU.getUTCMonth();
            eV._a[ek] = eU.getUTCDate()
        }
        for (eW = 0; eW < 3 && eV._a[eW] == null; ++eW) {
            eV._a[eW] = eT[eW] = eS[eW]
        }
        for (; eW < 7; eW++) {
            eV._a[eW] = eT[eW] = (eV._a[eW] == null) ? (eW === 2 ? 1 : 0) : eV._a[eW]
        }
        if (eV._a[ex] === 24 && eV._a[dA] === 0 && eV._a[ah] === 0 && eV._a[bE] === 0) {
            eV._nextDay = true;
            eV._a[ex] = 0
        }
        eV._d = (eV._useUTC ? dm : d1).apply(null, eT);
        if (eV._tzm != null) {
            eV._d.setUTCMinutes(eV._d.getUTCMinutes() - eV._tzm)
        }
        if (eV._nextDay) {
            eV._a[ex] = 24
        }
    }
    function cU(eU) {
        var eX, eR, eS, eV, e0, eY, eZ, eW;
        eX = eU._w;
        if (eX.GG != null || eX.W != null || eX.E != null) {
            e0 = 1;
            eY = 4;
            eR = d2(eX.GG, eU._a[eI], ej(du(), 1, 4).year);
            eS = d2(eX.W, 1);
            eV = d2(eX.E, 1);
            if (eV < 1 || eV > 7) {
                eW = true
            }
        } else {
            e0 = eU._locale._week.dow;
            eY = eU._locale._week.doy;
            var eT = ej(du(), e0, eY);
            eR = d2(eX.gg, eU._a[eI], eT.year);
            eS = d2(eX.w, eT.week);
            if (eX.d != null) {
                eV = eX.d;
                if (eV < 0 || eV > 6) {
                    eW = true
                }
            } else {
                if (eX.e != null) {
                    eV = eX.e + e0;
                    if (eX.e < 0 || eX.e > 6) {
                        eW = true
                    }
                } else {
                    eV = e0
                }
            }
        }
        if (eS < 1 || eS > D(eR, e0, eY)) {
            a6(eU)._overflowWeeks = true
        } else {
            if (eW != null) {
                a6(eU)._overflowWeekday = true
            } else {
                eZ = bv(eR, eS, eV, e0, eY);
                eU._a[eI] = eZ.year;
                eU._dayOfYear = eZ.dayOfYear
            }
        }
    }
    et.ISO_8601 = function() {}
    ;
    function bQ(eT) {
        if (eT._f === et.ISO_8601) {
            B(eT);
            return
        }
        eT._a = [];
        a6(eT).empty = true;
        var eW = "" + eT._i, eV, eS, eZ, eU, eY, eR = eW.length, eX = 0;
        eZ = bA(eT._f, eT._locale).match(bL) || [];
        for (eV = 0; eV < eZ.length; eV++) {
            eU = eZ[eV];
            eS = (eW.match(bz(eU, eT)) || [])[0];
            if (eS) {
                eY = eW.substr(0, eW.indexOf(eS));
                if (eY.length > 0) {
                    a6(eT).unusedInput.push(eY)
                }
                eW = eW.slice(eW.indexOf(eS) + eS.length);
                eX += eS.length
            }
            if (a4[eU]) {
                if (eS) {
                    a6(eT).empty = false
                } else {
                    a6(eT).unusedTokens.push(eU)
                }
                t(eU, eS, eT)
            } else {
                if (eT._strict && !eS) {
                    a6(eT).unusedTokens.push(eU)
                }
            }
        }
        a6(eT).charsLeftOver = eR - eX;
        if (eW.length > 0) {
            a6(eT).unusedInput.push(eW)
        }
        if (eT._a[ex] <= 12 && a6(eT).bigHour === true && eT._a[ex] > 0) {
            a6(eT).bigHour = undefined
        }
        a6(eT).parsedDateParts = eT._a.slice(0);
        a6(eT).meridiem = eT._meridiem;
        eT._a[ex] = d8(eT._locale, eT._a[ex], eT._meridiem);
        e(eT);
        cG(eT)
    }
    function d8(eR, eT, eU) {
        var eS;
        if (eU == null) {
            return eT
        }
        if (eR.meridiemHour != null) {
            return eR.meridiemHour(eT, eU)
        } else {
            if (eR.isPM != null) {
                eS = eR.isPM(eU);
                if (eS && eT < 12) {
                    eT += 12
                }
                if (!eS && eT === 12) {
                    eT = 0
                }
                return eT
            } else {
                return eT
            }
        }
    }
    function dw(eR) {
        var eV, eT, eU, eS, eW;
        if (eR._f.length === 0) {
            a6(eR).invalidFormat = true;
            eR._d = new Date(NaN);
            return
        }
        for (eS = 0; eS < eR._f.length; eS++) {
            eW = 0;
            eV = o({}, eR);
            if (eR._useUTC != null) {
                eV._useUTC = eR._useUTC
            }
            eV._f = eR._f[eS];
            bQ(eV);
            if (!am(eV)) {
                continue
            }
            eW += a6(eV).charsLeftOver;
            eW += a6(eV).unusedTokens.length * 10;
            a6(eV).score = eW;
            if (eU == null || eW < eU) {
                eU = eW;
                eT = eV
            }
        }
        eM(eR, eT || eV)
    }
    function aZ(eR) {
        if (eR._d) {
            return
        }
        var eS = dD(eR._i);
        eR._a = bi([eS.year, eS.month, eS.day || eS.date, eS.hour, eS.minute, eS.second, eS.millisecond], function(eT) {
            return eT && parseInt(eT, 10)
        });
        e(eR)
    }
    function aj(eR) {
        var eS = new ei(cG(bm(eR)));
        if (eS._nextDay) {
            eS.add(1, "d");
            eS._nextDay = undefined
        }
        return eS
    }
    function bm(eS) {
        var eR = eS._i
          , eT = eS._f;
        eS._locale = eS._locale || P(eS._l);
        if (eR === null || (eT === undefined && eR === "")) {
            return M({
                nullInput: true
            })
        }
        if (typeof eR === "string") {
            eS._i = eR = eS._locale.preparse(eR)
        }
        if (b4(eR)) {
            return new ei(cG(eR))
        } else {
            if (em(eR)) {
                eS._d = eR
            } else {
                if (U(eT)) {
                    dw(eS)
                } else {
                    if (eT) {
                        bQ(eS)
                    } else {
                        cm(eS)
                    }
                }
            }
        }
        if (!am(eS)) {
            eS._d = null
        }
        return eS
    }
    function cm(eS) {
        var eR = eS._i;
        if (eR === undefined) {
            eS._d = new Date(et.now())
        } else {
            if (em(eR)) {
                eS._d = new Date(eR.valueOf())
            } else {
                if (typeof eR === "string") {
                    a7(eS)
                } else {
                    if (U(eR)) {
                        eS._a = bi(eR.slice(0), function(eT) {
                            return parseInt(eT, 10)
                        });
                        e(eS)
                    } else {
                        if (typeof (eR) === "object") {
                            aZ(eS)
                        } else {
                            if (p(eR)) {
                                eS._d = new Date(eR)
                            } else {
                                et.createFromInputFallback(eS)
                            }
                        }
                    }
                }
            }
        }
    }
    function ab(eU, eV, eR, eT, eS) {
        var eW = {};
        if (eR === true || eR === false) {
            eT = eR;
            eR = undefined
        }
        if ((u(eU) && ca(eU)) || (U(eU) && eU.length === 0)) {
            eU = undefined
        }
        eW._isAMomentObject = true;
        eW._useUTC = eW._isUTC = eS;
        eW._l = eR;
        eW._i = eU;
        eW._f = eV;
        eW._strict = eT;
        return aj(eW)
    }
    function du(eT, eU, eR, eS) {
        return ab(eT, eU, eR, eS, false)
    }
    var cB = d7("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var eR = du.apply(null, arguments);
        if (this.isValid() && eR.isValid()) {
            return eR < this ? this : eR
        } else {
            return M()
        }
    });
    var ef = d7("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var eR = du.apply(null, arguments);
        if (this.isValid() && eR.isValid()) {
            return eR > this ? this : eR
        } else {
            return M()
        }
    });
    function eN(eT, eU) {
        var eS, eR;
        if (eU.length === 1 && U(eU[0])) {
            eU = eU[0]
        }
        if (!eU.length) {
            return du()
        }
        eS = eU[0];
        for (eR = 1; eR < eU.length; ++eR) {
            if (!eU[eR].isValid() || eU[eR][eT](eS)) {
                eS = eU[eR]
            }
        }
        return eS
    }
    function n() {
        var eR = [].slice.call(arguments, 0);
        return eN("isBefore", eR)
    }
    function bg() {
        var eR = [].slice.call(arguments, 0);
        return eN("isAfter", eR)
    }
    var cq = function() {
        return Date.now ? Date.now() : +(new Date())
    };
    function dH(eW) {
        var eY = dD(eW)
          , eX = eY.year || 0
          , eS = eY.quarter || 0
          , eT = eY.month || 0
          , eR = eY.week || 0
          , e1 = eY.day || 0
          , eZ = eY.hour || 0
          , eV = eY.minute || 0
          , e0 = eY.second || 0
          , eU = eY.millisecond || 0;
        this._milliseconds = +eU + e0 * 1000 + eV * 60000 + eZ * 1000 * 60 * 60;
        this._days = +e1 + eR * 7;
        this._months = +eT + eS * 3 + eX * 12;
        this._data = {};
        this._locale = P();
        this._bubble()
    }
    function ad(eR) {
        return eR instanceof dH
    }
    function ea(eR) {
        if (eR < 0) {
            return Math.round(-1 * eR) * -1
        } else {
            return Math.round(eR)
        }
    }
    function bq(eR, eS) {
        cp(eR, 0, 0, function() {
            var eU = this.utcOffset();
            var eT = "+";
            if (eU < 0) {
                eU = -eU;
                eT = "-"
            }
            return eT + cg(~~(eU / 60), 2) + eS + cg(~~(eU) % 60, 2)
        })
    }
    bq("Z", ":");
    bq("ZZ", "");
    a8("Z", cw);
    a8("ZZ", cw);
    bN(["Z", "ZZ"], function(eR, eT, eS) {
        eS._useUTC = true;
        eS._tzm = m(cw, eR)
    });
    var es = /([\+\-]|\d\d)/gi;
    function m(eW, eS) {
        var eU = (eS || "").match(eW);
        if (eU === null) {
            return null
        }
        var eR = eU[eU.length - 1] || [];
        var eV = (eR + "").match(es) || ["-", 0, 0];
        var eT = +(eV[1] * 60) + cI(eV[2]);
        return eT === 0 ? 0 : eV[0] === "+" ? eT : -eT
    }
    function az(eR, eS) {
        var eT, eU;
        if (eS._isUTC) {
            eT = eS.clone();
            eU = (b4(eR) || em(eR) ? eR.valueOf() : du(eR).valueOf()) - eT.valueOf();
            eT._d.setTime(eT._d.valueOf() + eU);
            et.updateOffset(eT, false);
            return eT
        } else {
            return du(eR).local()
        }
    }
    function aK(eR) {
        return -Math.round(eR._d.getTimezoneOffset() / 15) * 15
    }
    et.updateOffset = function() {}
    ;
    function dn(eR, eU) {
        var eT = this._offset || 0, eS;
        if (!this.isValid()) {
            return eR != null ? this : NaN
        }
        if (eR != null) {
            if (typeof eR === "string") {
                eR = m(cw, eR);
                if (eR === null) {
                    return this
                }
            } else {
                if (Math.abs(eR) < 16) {
                    eR = eR * 60
                }
            }
            if (!this._isUTC && eU) {
                eS = aK(this)
            }
            this._offset = eR;
            this._isUTC = true;
            if (eS != null) {
                this.add(eS, "m")
            }
            if (eT !== eR) {
                if (!eU || this._changeInProgress) {
                    aU(this, c8(eR - eT, "m"), 1, false)
                } else {
                    if (!this._changeInProgress) {
                        this._changeInProgress = true;
                        et.updateOffset(this, true);
                        this._changeInProgress = null
                    }
                }
            }
            return this
        } else {
            return this._isUTC ? eT : aK(this)
        }
    }
    function di(eR, eS) {
        if (eR != null) {
            if (typeof eR !== "string") {
                eR = -eR
            }
            this.utcOffset(eR, eS);
            return this
        } else {
            return -this.utcOffset()
        }
    }
    function aV(eR) {
        return this.utcOffset(0, eR)
    }
    function dk(eR) {
        if (this._isUTC) {
            this.utcOffset(0, eR);
            this._isUTC = false;
            if (eR) {
                this.subtract(aK(this), "m")
            }
        }
        return this
    }
    function b1() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm)
        } else {
            if (typeof this._i === "string") {
                var eR = m(bC, this._i);
                if (eR != null) {
                    this.utcOffset(eR)
                } else {
                    this.utcOffset(0, true)
                }
            }
        }
        return this
    }
    function ax(eR) {
        if (!this.isValid()) {
            return false
        }
        eR = eR ? du(eR).utcOffset() : 0;
        return (this.utcOffset() - eR) % 60 === 0
    }
    function aJ() {
        return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset())
    }
    function b() {
        if (!E(this._isDSTShifted)) {
            return this._isDSTShifted
        }
        var eS = {};
        o(eS, this);
        eS = bm(eS);
        if (eS._a) {
            var eR = eS._isUTC ? cn(eS._a) : du(eS._a);
            this._isDSTShifted = this.isValid() && bS(eS._a, eR.toArray()) > 0
        } else {
            this._isDSTShifted = false
        }
        return this._isDSTShifted
    }
    function dp() {
        return this.isValid() ? !this._isUTC : false
    }
    function bM() {
        return this.isValid() ? this._isUTC : false
    }
    function dv() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false
    }
    var Y = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
    var co = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;
    function c8(eT, eW) {
        var eX = eT, eV = null, eS, eU, eR;
        if (ad(eT)) {
            eX = {
                ms: eT._milliseconds,
                d: eT._days,
                M: eT._months
            }
        } else {
            if (p(eT)) {
                eX = {};
                if (eW) {
                    eX[eW] = eT
                } else {
                    eX.milliseconds = eT
                }
            } else {
                if (!!(eV = Y.exec(eT))) {
                    eS = (eV[1] === "-") ? -1 : 1;
                    eX = {
                        y: 0,
                        d: cI(eV[ek]) * eS,
                        h: cI(eV[ex]) * eS,
                        m: cI(eV[dA]) * eS,
                        s: cI(eV[ah]) * eS,
                        ms: cI(ea(eV[bE] * 1000)) * eS
                    }
                } else {
                    if (!!(eV = co.exec(eT))) {
                        eS = (eV[1] === "-") ? -1 : 1;
                        eX = {
                            y: eJ(eV[2], eS),
                            M: eJ(eV[3], eS),
                            w: eJ(eV[4], eS),
                            d: eJ(eV[5], eS),
                            h: eJ(eV[6], eS),
                            m: eJ(eV[7], eS),
                            s: eJ(eV[8], eS)
                        }
                    } else {
                        if (eX == null) {
                            eX = {}
                        } else {
                            if (typeof eX === "object" && ("from"in eX || "to"in eX)) {
                                eR = bI(du(eX.from), du(eX.to));
                                eX = {};
                                eX.ms = eR.milliseconds;
                                eX.M = eR.months
                            }
                        }
                    }
                }
            }
        }
        eU = new dH(eX);
        if (ad(eT) && dd(eT, "_locale")) {
            eU._locale = eT._locale
        }
        return eU
    }
    c8.fn = dH.prototype;
    function eJ(eT, eR) {
        var eS = eT && parseFloat(eT.replace(",", "."));
        return (isNaN(eS) ? 0 : eS) * eR
    }
    function ds(eT, eR) {
        var eS = {
            milliseconds: 0,
            months: 0
        };
        eS.months = eR.month() - eT.month() + (eR.year() - eT.year()) * 12;
        if (eT.clone().add(eS.months, "M").isAfter(eR)) {
            --eS.months
        }
        eS.milliseconds = +eR - +(eT.clone().add(eS.months, "M"));
        return eS
    }
    function bI(eT, eR) {
        var eS;
        if (!(eT.isValid() && eR.isValid())) {
            return {
                milliseconds: 0,
                months: 0
            }
        }
        eR = az(eR, eT);
        if (eT.isBefore(eR)) {
            eS = ds(eT, eR)
        } else {
            eS = ds(eR, eT);
            eS.milliseconds = -eS.milliseconds;
            eS.months = -eS.months
        }
        return eS
    }
    function a0(eS, eR) {
        return function(eW, eV) {
            var eU, eT;
            if (eV !== null && !isNaN(+eV)) {
                eG(eR, "moment()." + eR + "(period, number) is deprecated. Please use moment()." + eR + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
                eT = eW;
                eW = eV;
                eV = eT
            }
            eW = typeof eW === "string" ? +eW : eW;
            eU = c8(eW, eV);
            aU(this, eU, eS);
            return this
        }
    }
    function aU(eT, eW, eV, eU) {
        var eS = eW._milliseconds
          , eX = ea(eW._days)
          , eR = ea(eW._months);
        if (!eT.isValid()) {
            return
        }
        eU = eU == null ? true : eU;
        if (eS) {
            eT._d.setTime(eT._d.valueOf() + eS * eV)
        }
        if (eX) {
            aI(eT, "Date", dt(eT, "Date") + eX * eV)
        }
        if (eR) {
            aR(eT, dt(eT, "Month") + eR * eV)
        }
        if (eU) {
            et.updateOffset(eT, eX || eR)
        }
    }
    var aT = a0(1, "add");
    var av = a0(-1, "subtract");
    function ar(eT, eR) {
        var eS = eT.diff(eR, "days", true);
        return eS < -6 ? "sameElse" : eS < -1 ? "lastWeek" : eS < 0 ? "lastDay" : eS < 1 ? "sameDay" : eS < 2 ? "nextDay" : eS < 7 ? "nextWeek" : "sameElse"
    }
    function b8(eW, eR) {
        var eU = eW || du()
          , eT = az(eU, this).startOf("day")
          , eV = et.calendarFormat(this, eT) || "sameElse";
        var eS = eR && (a1(eR[eV]) ? eR[eV].call(this, eU) : eR[eV]);
        return this.format(eS || this.localeData().calendar(eV, this, du(eU)))
    }
    function dj() {
        return new ei(this)
    }
    function cv(eS, eR) {
        var eT = b4(eS) ? eS : du(eS);
        if (!(this.isValid() && eT.isValid())) {
            return false
        }
        eR = cH(!E(eR) ? eR : "millisecond");
        if (eR === "millisecond") {
            return this.valueOf() > eT.valueOf()
        } else {
            return eT.valueOf() < this.clone().startOf(eR).valueOf()
        }
    }
    function eE(eS, eR) {
        var eT = b4(eS) ? eS : du(eS);
        if (!(this.isValid() && eT.isValid())) {
            return false
        }
        eR = cH(!E(eR) ? eR : "millisecond");
        if (eR === "millisecond") {
            return this.valueOf() < eT.valueOf()
        } else {
            return this.clone().endOf(eR).valueOf() < eT.valueOf()
        }
    }
    function eh(eU, eT, eR, eS) {
        eS = eS || "()";
        return (eS[0] === "(" ? this.isAfter(eU, eR) : !this.isBefore(eU, eR)) && (eS[1] === ")" ? this.isBefore(eT, eR) : !this.isAfter(eT, eR))
    }
    function cA(eS, eR) {
        var eU = b4(eS) ? eS : du(eS), eT;
        if (!(this.isValid() && eU.isValid())) {
            return false
        }
        eR = cH(eR || "millisecond");
        if (eR === "millisecond") {
            return this.valueOf() === eU.valueOf()
        } else {
            eT = eU.valueOf();
            return this.clone().startOf(eR).valueOf() <= eT && eT <= this.clone().endOf(eR).valueOf()
        }
    }
    function ez(eS, eR) {
        return this.isSame(eS, eR) || this.isAfter(eS, eR)
    }
    function eC(eS, eR) {
        return this.isSame(eS, eR) || this.isBefore(eS, eR)
    }
    function J(eU, eT, eR) {
        var eW, eV, eX, eS;
        if (!this.isValid()) {
            return NaN
        }
        eW = az(eU, this);
        if (!eW.isValid()) {
            return NaN
        }
        eV = (eW.utcOffset() - this.utcOffset()) * 60000;
        eT = cH(eT);
        if (eT === "year" || eT === "month" || eT === "quarter") {
            eS = ed(this, eW);
            if (eT === "quarter") {
                eS = eS / 3
            } else {
                if (eT === "year") {
                    eS = eS / 12
                }
            }
        } else {
            eX = this - eW;
            eS = eT === "second" ? eX / 1000 : eT === "minute" ? eX / 60000 : eT === "hour" ? eX / 3600000 : eT === "day" ? (eX - eV) / 86400000 : eT === "week" ? (eX - eV) / 604800000 : eX
        }
        return eR ? eS : da(eS)
    }
    function ed(eS, eR) {
        var eW = ((eR.year() - eS.year()) * 12) + (eR.month() - eS.month()), eT = eS.clone().add(eW, "months"), eU, eV;
        if (eR - eT < 0) {
            eU = eS.clone().add(eW - 1, "months");
            eV = (eR - eT) / (eT - eU)
        } else {
            eU = eS.clone().add(eW + 1, "months");
            eV = (eR - eT) / (eU - eT)
        }
        return -(eW + eV) || 0
    }
    et.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
    et.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
    function dV() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    }
    function cW() {
        var eR = this.clone().utc();
        if (0 < eR.year() && eR.year() <= 9999) {
            if (a1(Date.prototype.toISOString)) {
                return this.toDate().toISOString()
            } else {
                return ae(eR, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
            }
        } else {
            return ae(eR, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
        }
    }
    function aM() {
        if (!this.isValid()) {
            return "moment.invalid(/* " + this._i + " */)"
        }
        var eT = "moment";
        var eR = "";
        if (!this.isLocal()) {
            eT = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
            eR = "Z"
        }
        var eU = "[" + eT + '("]';
        var eS = (0 < this.year() && this.year() <= 9999) ? "YYYY" : "YYYYYY";
        var eW = "-MM-DD[T]HH:mm:ss.SSS";
        var eV = eR + '[")]';
        return this.format(eU + eS + eW + eV)
    }
    function cZ(eS) {
        if (!eS) {
            eS = this.isUtc() ? et.defaultFormatUtc : et.defaultFormat
        }
        var eR = ae(this, eS);
        return this.localeData().postformat(eR)
    }
    function dK(eS, eR) {
        if (this.isValid() && ((b4(eS) && eS.isValid()) || du(eS).isValid())) {
            return c8({
                to: this,
                from: eS
            }).locale(this.locale()).humanize(!eR)
        } else {
            return this.localeData().invalidDate()
        }
    }
    function dE(eR) {
        return this.from(du(), eR)
    }
    function ag(eS, eR) {
        if (this.isValid() && ((b4(eS) && eS.isValid()) || du(eS).isValid())) {
            return c8({
                from: this,
                to: eS
            }).locale(this.locale()).humanize(!eR)
        } else {
            return this.localeData().invalidDate()
        }
    }
    function aL(eR) {
        return this.to(du(), eR)
    }
    function eQ(eS) {
        var eR;
        if (eS === undefined) {
            return this._locale._abbr
        } else {
            eR = P(eS);
            if (eR != null) {
                this._locale = eR
            }
            return this
        }
    }
    var x = d7("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(eR) {
        if (eR === undefined) {
            return this.localeData()
        } else {
            return this.locale(eR)
        }
    });
    function dL() {
        return this._locale
    }
    function b0(eR) {
        eR = cH(eR);
        switch (eR) {
        case "year":
            this.month(0);
        case "quarter":
        case "month":
            this.date(1);
        case "week":
        case "isoWeek":
        case "day":
        case "date":
            this.hours(0);
        case "hour":
            this.minutes(0);
        case "minute":
            this.seconds(0);
        case "second":
            this.milliseconds(0)
        }
        if (eR === "week") {
            this.weekday(0)
        }
        if (eR === "isoWeek") {
            this.isoWeekday(1)
        }
        if (eR === "quarter") {
            this.month(Math.floor(this.month() / 3) * 3)
        }
        return this
    }
    function en(eR) {
        eR = cH(eR);
        if (eR === undefined || eR === "millisecond") {
            return this
        }
        if (eR === "date") {
            eR = "day"
        }
        return this.startOf(eR).add(1, (eR === "isoWeek" ? "week" : eR)).subtract(1, "ms")
    }
    function dO() {
        return this._d.valueOf() - ((this._offset || 0) * 60000)
    }
    function bu() {
        return Math.floor(this.valueOf() / 1000)
    }
    function cT() {
        return new Date(this.valueOf())
    }
    function dC() {
        var eR = this;
        return [eR.year(), eR.month(), eR.date(), eR.hour(), eR.minute(), eR.second(), eR.millisecond()]
    }
    function dM() {
        var eR = this;
        return {
            years: eR.year(),
            months: eR.month(),
            date: eR.date(),
            hours: eR.hours(),
            minutes: eR.minutes(),
            seconds: eR.seconds(),
            milliseconds: eR.milliseconds()
        }
    }
    function c0() {
        return this.isValid() ? this.toISOString() : null
    }
    function r() {
        return am(this)
    }
    function dx() {
        return eM({}, a6(this))
    }
    function cr() {
        return a6(this).overflow
    }
    function eF() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        }
    }
    cp(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100
    });
    cp(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100
    });
    function V(eS, eR) {
        cp(0, [eS, eS.length], 0, eR)
    }
    V("gggg", "weekYear");
    V("ggggg", "weekYear");
    V("GGGG", "isoWeekYear");
    V("GGGGG", "isoWeekYear");
    b7("weekYear", "gg");
    b7("isoWeekYear", "GG");
    dP("weekYear", 1);
    dP("isoWeekYear", 1);
    a8("G", A);
    a8("g", A);
    a8("GG", ap, aG);
    a8("gg", ap, aG);
    a8("GGGG", an, aE);
    a8("gggg", an, aE);
    a8("GGGGG", al, aD);
    a8("ggggg", al, aD);
    W(["gggg", "ggggg", "GGGG", "GGGGG"], function(eR, eU, eS, eT) {
        eU[eT.substr(0, 2)] = cI(eR)
    });
    W(["gg", "GG"], function(eR, eU, eS, eT) {
        eU[eT] = et.parseTwoDigitYear(eR)
    });
    function bl(eR) {
        return ck.call(this, eR, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
    }
    function dS(eR) {
        return ck.call(this, eR, this.isoWeek(), this.isoWeekday(), 1, 4)
    }
    function c3() {
        return D(this.year(), 1, 4)
    }
    function H() {
        var eR = this.localeData()._week;
        return D(this.year(), eR.dow, eR.doy)
    }
    function ck(eR, eS, eU, eW, eV) {
        var eT;
        if (eR == null) {
            return ej(this, eW, eV).year
        } else {
            eT = D(eR, eW, eV);
            if (eS > eT) {
                eS = eT
            }
            return a2.call(this, eR, eS, eU, eW, eV)
        }
    }
    function a2(eT, eS, eV, eX, eW) {
        var eU = bv(eT, eS, eV, eX, eW)
          , eR = dm(eU.year, 0, eU.dayOfYear);
        this.year(eR.getUTCFullYear());
        this.month(eR.getUTCMonth());
        this.date(eR.getUTCDate());
        return this
    }
    cp("Q", 0, "Qo", "quarter");
    b7("quarter", "Q");
    dP("quarter", 7);
    a8("Q", aH);
    bN("Q", function(eR, eS) {
        eS[i] = (cI(eR) - 1) * 3
    });
    function bT(eR) {
        return eR == null ? Math.ceil((this.month() + 1) / 3) : this.month((eR - 1) * 3 + this.month() % 3)
    }
    cp("D", ["DD", 2], "Do", "date");
    b7("date", "D");
    dP("date", 9);
    a8("D", ap);
    a8("DD", ap, aG);
    a8("Do", function(eS, eR) {
        return eS ? eR._ordinalParse : eR._ordinalParseLenient
    });
    bN(["D", "DD"], ek);
    bN("Do", function(eR, eS) {
        eS[ek] = cI(eR.match(ap)[0], 10)
    });
    var cf = d4("Date", true);
    cp("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
    b7("dayOfYear", "DDD");
    dP("dayOfYear", 4);
    a8("DDD", ao);
    a8("DDDD", aF);
    bN(["DDD", "DDDD"], function(eR, eT, eS) {
        eS._dayOfYear = cI(eR)
    });
    function ba(eR) {
        var eS = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 86400000) + 1;
        return eR == null ? eS : this.add((eR - eS), "d")
    }
    cp("m", ["mm", 2], 0, "minute");
    b7("minute", "m");
    dP("minute", 14);
    a8("m", ap);
    a8("mm", ap, aG);
    bN(["m", "mm"], dA);
    var eD = d4("Minutes", false);
    cp("s", ["ss", 2], 0, "second");
    b7("second", "s");
    dP("second", 15);
    a8("s", ap);
    a8("ss", ap, aG);
    bN(["s", "ss"], ah);
    var br = d4("Seconds", false);
    cp("S", 0, 0, function() {
        return ~~(this.millisecond() / 100)
    });
    cp(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10)
    });
    cp(0, ["SSS", 3], 0, "millisecond");
    cp(0, ["SSSS", 4], 0, function() {
        return this.millisecond() * 10
    });
    cp(0, ["SSSSS", 5], 0, function() {
        return this.millisecond() * 100
    });
    cp(0, ["SSSSSS", 6], 0, function() {
        return this.millisecond() * 1000
    });
    cp(0, ["SSSSSSS", 7], 0, function() {
        return this.millisecond() * 10000
    });
    cp(0, ["SSSSSSSS", 8], 0, function() {
        return this.millisecond() * 100000
    });
    cp(0, ["SSSSSSSSS", 9], 0, function() {
        return this.millisecond() * 1000000
    });
    b7("millisecond", "ms");
    dP("millisecond", 16);
    a8("S", ao, aH);
    a8("SS", ao, aG);
    a8("SSS", ao, aF);
    var bf;
    for (bf = "SSSS"; bf.length <= 9; bf += "S") {
        a8(bf, q)
    }
    function cX(eR, eS) {
        eS[bE] = cI(("0." + eR) * 1000)
    }
    for (bf = "S"; bf.length <= 9; bf += "S") {
        bN(bf, cX)
    }
    var bR = d4("Milliseconds", false);
    cp("z", 0, 0, "zoneAbbr");
    cp("zz", 0, 0, "zoneName");
    function eA() {
        return this._isUTC ? "UTC" : ""
    }
    function d9() {
        return this._isUTC ? "Coordinated Universal Time" : ""
    }
    var b5 = ei.prototype;
    b5.add = aT;
    b5.calendar = b8;
    b5.clone = dj;
    b5.diff = J;
    b5.endOf = en;
    b5.format = cZ;
    b5.from = dK;
    b5.fromNow = dE;
    b5.to = ag;
    b5.toNow = aL;
    b5.get = aw;
    b5.invalidAt = cr;
    b5.isAfter = cv;
    b5.isBefore = eE;
    b5.isBetween = eh;
    b5.isSame = cA;
    b5.isSameOrAfter = ez;
    b5.isSameOrBefore = eC;
    b5.isValid = r;
    b5.lang = x;
    b5.locale = eQ;
    b5.localeData = dL;
    b5.max = ef;
    b5.min = cB;
    b5.parsingFlags = dx;
    b5.set = aq;
    b5.startOf = b0;
    b5.subtract = av;
    b5.toArray = dC;
    b5.toObject = dM;
    b5.toDate = cT;
    b5.toISOString = cW;
    b5.inspect = aM;
    b5.toJSON = c0;
    b5.toString = dV;
    b5.unix = bu;
    b5.valueOf = dO;
    b5.creationData = eF;
    b5.year = cy;
    b5.isLeapYear = cO;
    b5.weekYear = bl;
    b5.isoWeekYear = dS;
    b5.quarter = b5.quarters = bT;
    b5.month = ew;
    b5.daysInMonth = bH;
    b5.week = b5.weeks = I;
    b5.isoWeek = b5.isoWeeks = w;
    b5.weeksInYear = H;
    b5.isoWeeksInYear = c3;
    b5.date = cf;
    b5.day = b5.days = eb;
    b5.weekday = ac;
    b5.isoWeekday = cl;
    b5.dayOfYear = ba;
    b5.hour = b5.hours = ch;
    b5.minute = b5.minutes = eD;
    b5.second = b5.seconds = br;
    b5.millisecond = b5.milliseconds = bR;
    b5.utcOffset = dn;
    b5.utc = aV;
    b5.local = dk;
    b5.parseZone = b1;
    b5.hasAlignedHourOffset = ax;
    b5.isDST = aJ;
    b5.isLocal = dp;
    b5.isUtcOffset = bM;
    b5.isUtc = dv;
    b5.isUTC = dv;
    b5.zoneAbbr = eA;
    b5.zoneName = d9;
    b5.dates = d7("dates accessor is deprecated. Use date instead.", cf);
    b5.months = d7("months accessor is deprecated. Use month instead", ew);
    b5.years = d7("years accessor is deprecated. Use year instead", cy);
    b5.zone = d7("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", di);
    b5.isDSTShifted = d7("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", b);
    function c5(eR) {
        return du(eR * 1000)
    }
    function cF() {
        return du.apply(null, arguments).parseZone()
    }
    function dq(eR) {
        return eR
    }
    var dX = cu.prototype;
    dX.calendar = d;
    dX.longDateFormat = cC;
    dX.invalidDate = eg;
    dX.ordinal = er;
    dX.preparse = dq;
    dX.postformat = dq;
    dX.relativeTime = S;
    dX.pastFuture = dR;
    dX.set = df;
    dX.months = aW;
    dX.monthsShort = a5;
    dX.monthsParse = c4;
    dX.monthsRegex = cR;
    dX.monthsShortRegex = dc;
    dX.week = bj;
    dX.firstDayOfYear = c2;
    dX.firstDayOfWeek = af;
    dX.weekdays = au;
    dX.weekdaysMin = eu;
    dX.weekdaysShort = L;
    dX.weekdaysParse = bG;
    dX.weekdaysRegex = eK;
    dX.weekdaysShortRegex = aC;
    dX.weekdaysMinRegex = C;
    dX.isPM = b6;
    dX.meridiem = aP;
    function G(eV, eS, eU, eW) {
        var eR = P();
        var eT = cn().set(eW, eS);
        return eR[eU](eT, eV)
    }
    function aS(eV, eS, eU) {
        if (p(eV)) {
            eS = eV;
            eV = undefined
        }
        eV = eV || "";
        if (eS != null) {
            return G(eV, eS, eU, "month")
        }
        var eT;
        var eR = [];
        for (eT = 0; eT < 12; eT++) {
            eR[eT] = G(eV, eT, eU, "month")
        }
        return eR
    }
    function eL(eW, eY, eU, eX) {
        if (typeof eW === "boolean") {
            if (p(eY)) {
                eU = eY;
                eY = undefined
            }
            eY = eY || ""
        } else {
            eY = eW;
            eU = eY;
            eW = false;
            if (p(eY)) {
                eU = eY;
                eY = undefined
            }
            eY = eY || ""
        }
        var eR = P()
          , eS = eW ? eR._week.dow : 0;
        if (eU != null) {
            return G(eY, (eU + eS) % 7, eX, "day")
        }
        var eV;
        var eT = [];
        for (eV = 0; eV < 7; eV++) {
            eT[eV] = G(eY, (eV + eS) % 7, eX, "day")
        }
        return eT
    }
    function cM(eS, eR) {
        return aS(eS, eR, "months")
    }
    function ct(eS, eR) {
        return aS(eS, eR, "monthsShort")
    }
    function cY(eS, eT, eR) {
        return eL(eS, eT, eR, "weekdays")
    }
    function cE(eS, eT, eR) {
        return eL(eS, eT, eR, "weekdaysShort")
    }
    function X(eS, eT, eR) {
        return eL(eS, eT, eR, "weekdaysMin")
    }
    z("en", {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(eT) {
            var eR = eT % 10
              , eS = (cI(eT % 100 / 10) === 1) ? "th" : (eR === 1) ? "st" : (eR === 2) ? "nd" : (eR === 3) ? "rd" : "th";
            return eT + eS
        }
    });
    et.lang = d7("moment.lang is deprecated. Use moment.locale instead.", z);
    et.langData = d7("moment.langData is deprecated. Use moment.localeData instead.", P);
    var ep = Math.abs;
    function bh() {
        var eR = this._data;
        this._milliseconds = ep(this._milliseconds);
        this._days = ep(this._days);
        this._months = ep(this._months);
        eR.milliseconds = ep(eR.milliseconds);
        eR.seconds = ep(eR.seconds);
        eR.minutes = ep(eR.minutes);
        eR.hours = ep(eR.hours);
        eR.months = ep(eR.months);
        eR.years = ep(eR.years);
        return this
    }
    function aB(eV, eS, eT, eU) {
        var eR = c8(eS, eT);
        eV._milliseconds += eU * eR._milliseconds;
        eV._days += eU * eR._days;
        eV._months += eU * eR._months;
        return eV._bubble()
    }
    function bw(eR, eS) {
        return aB(this, eR, eS, 1)
    }
    function dI(eR, eS) {
        return aB(this, eR, eS, -1)
    }
    function ev(eR) {
        if (eR < 0) {
            return Math.floor(eR)
        } else {
            return Math.ceil(eR)
        }
    }
    function cN() {
        var eT = this._milliseconds;
        var eZ = this._days;
        var eR = this._months;
        var eV = this._data;
        var eY, eU, eX, eW, eS;
        if (!((eT >= 0 && eZ >= 0 && eR >= 0) || (eT <= 0 && eZ <= 0 && eR <= 0))) {
            eT += ev(eO(eR) + eZ) * 86400000;
            eZ = 0;
            eR = 0
        }
        eV.milliseconds = eT % 1000;
        eY = da(eT / 1000);
        eV.seconds = eY % 60;
        eU = da(eY / 60);
        eV.minutes = eU % 60;
        eX = da(eU / 60);
        eV.hours = eX % 24;
        eZ += da(eX / 24);
        eS = da(f(eZ));
        eR += eS;
        eZ -= ev(eO(eS));
        eW = da(eR / 12);
        eR %= 12;
        eV.days = eZ;
        eV.months = eR;
        eV.years = eW;
        return this
    }
    function f(eR) {
        return eR * 4800 / 146097
    }
    function eO(eR) {
        return eR * 146097 / 4800
    }
    function ey(eS) {
        var eU;
        var eR;
        var eT = this._milliseconds;
        eS = cH(eS);
        if (eS === "month" || eS === "year") {
            eU = this._days + eT / 86400000;
            eR = this._months + f(eU);
            return eS === "month" ? eR : eR / 12
        } else {
            eU = this._days + Math.round(eO(this._months));
            switch (eS) {
            case "week":
                return eU / 7 + eT / 604800000;
            case "day":
                return eU + eT / 86400000;
            case "hour":
                return eU * 24 + eT / 3600000;
            case "minute":
                return eU * 1440 + eT / 60000;
            case "second":
                return eU * 86400 + eT / 1000;
            case "millisecond":
                return Math.floor(eU * 86400000) + eT;
            default:
                throw new Error("Unknown unit " + eS)
            }
        }
    }
    function cV() {
        return (this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + cI(this._months / 12) * 31536000000)
    }
    function dZ(eR) {
        return function() {
            return this.as(eR)
        }
    }
    var eP = dZ("ms");
    var K = dZ("s");
    var dl = dZ("m");
    var s = dZ("h");
    var d3 = dZ("d");
    var dJ = dZ("w");
    var dY = dZ("M");
    var be = dZ("y");
    function F(eR) {
        eR = cH(eR);
        return this[eR + "s"]()
    }
    function b2(eR) {
        return function() {
            return this._data[eR]
        }
    }
    var c = b2("milliseconds");
    var bb = b2("seconds");
    var aA = b2("minutes");
    var T = b2("hours");
    var a9 = b2("days");
    var eB = b2("months");
    var bF = b2("years");
    function d5() {
        return da(this.days() / 7)
    }
    var cS = Math.round;
    var dz = {
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11
    };
    function ai(eS, eU, eT, eV, eR) {
        return eR.relativeTime(eU || 1, !!eT, eS, eV)
    }
    function dB(eV, eS, eZ) {
        var eT = c8(eV).abs();
        var e0 = cS(eT.as("s"));
        var eU = cS(eT.as("m"));
        var eY = cS(eT.as("h"));
        var e1 = cS(eT.as("d"));
        var eR = cS(eT.as("M"));
        var eW = cS(eT.as("y"));
        var eX = e0 < dz.s && ["s", e0] || eU <= 1 && ["m"] || eU < dz.m && ["mm", eU] || eY <= 1 && ["h"] || eY < dz.h && ["hh", eY] || e1 <= 1 && ["d"] || e1 < dz.d && ["dd", e1] || eR <= 1 && ["M"] || eR < dz.M && ["MM", eR] || eW <= 1 && ["y"] || ["yy", eW];
        eX[2] = eS;
        eX[3] = +eV > 0;
        eX[4] = eZ;
        return ai.apply(null, eX)
    }
    function el(eR) {
        if (eR === undefined) {
            return cS
        }
        if (typeof (eR) === "function") {
            cS = eR;
            return true
        }
        return false
    }
    function ce(eR, eS) {
        if (dz[eR] === undefined) {
            return false
        }
        if (eS === undefined) {
            return dz[eR]
        }
        dz[eR] = eS;
        return true
    }
    function a(eT) {
        var eR = this.localeData();
        var eS = dB(this, !eT, eR);
        if (eT) {
            eS = eR.pastFuture(+this, eS)
        }
        return eR.postformat(eS)
    }
    var aQ = Math.abs;
    function bD() {
        var e1 = aQ(this._milliseconds) / 1000;
        var e2 = aQ(this._days);
        var eT = aQ(this._months);
        var eV, e0, eX;
        eV = da(e1 / 60);
        e0 = da(eV / 60);
        e1 %= 60;
        eV %= 60;
        eX = da(eT / 12);
        eT %= 12;
        var eS = eX;
        var eY = eT;
        var eR = e2;
        var eW = e0;
        var eU = eV;
        var e3 = e1;
        var eZ = this.asSeconds();
        if (!eZ) {
            return "P0D"
        }
        return (eZ < 0 ? "-" : "") + "P" + (eS ? eS + "Y" : "") + (eY ? eY + "M" : "") + (eR ? eR + "D" : "") + ((eW || eU || e3) ? "T" : "") + (eW ? eW + "H" : "") + (eU ? eU + "M" : "") + (e3 ? e3 + "S" : "")
    }
    var dW = dH.prototype;
    dW.abs = bh;
    dW.add = bw;
    dW.subtract = dI;
    dW.as = ey;
    dW.asMilliseconds = eP;
    dW.asSeconds = K;
    dW.asMinutes = dl;
    dW.asHours = s;
    dW.asDays = d3;
    dW.asWeeks = dJ;
    dW.asMonths = dY;
    dW.asYears = be;
    dW.valueOf = cV;
    dW._bubble = cN;
    dW.get = F;
    dW.milliseconds = c;
    dW.seconds = bb;
    dW.minutes = aA;
    dW.hours = T;
    dW.days = a9;
    dW.weeks = d5;
    dW.months = eB;
    dW.years = bF;
    dW.humanize = a;
    dW.toISOString = bD;
    dW.toString = bD;
    dW.toJSON = bD;
    dW.locale = eQ;
    dW.localeData = dL;
    dW.toIsoString = d7("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", bD);
    dW.lang = x;
    cp("X", 0, 0, "unix");
    cp("x", 0, 0, "valueOf");
    a8("x", A);
    a8("X", eH);
    bN("X", function(eR, eT, eS) {
        eS._d = new Date(parseFloat(eR, 10) * 1000)
    });
    bN("x", function(eR, eT, eS) {
        eS._d = new Date(cI(eR))
    });
    et.version = "2.17.1";
    aN(du);
    et.fn = b5;
    et.min = n;
    et.max = bg;
    et.now = cq;
    et.utc = cn;
    et.unix = c5;
    et.months = cM;
    et.isDate = em;
    et.locale = z;
    et.invalid = M;
    et.duration = c8;
    et.isMoment = b4;
    et.weekdays = cY;
    et.parseZone = cF;
    et.localeData = P;
    et.isDuration = ad;
    et.monthsShort = ct;
    et.weekdaysMin = X;
    et.defineLocale = cs;
    et.updateLocale = ec;
    et.locales = bX;
    et.weekdaysShort = cE;
    et.normalizeUnits = cH;
    et.relativeTimeRounding = el;
    et.relativeTimeThreshold = ce;
    et.calendarFormat = ar;
    et.prototype = b5;
    return et
}
)));
(function(b) {
    b.color = {};
    b.color.make = function(d, e, g, f) {
        var c = {};
        c.r = d || 0;
        c.g = e || 0;
        c.b = g || 0;
        c.a = f != null ? f : 1;
        c.add = function(h, i) {
            for (var j = 0; j < h.length; ++j) {
                c[h.charAt(j)] += i
            }
            return c.normalize()
        }
        ;
        c.scale = function(h, i) {
            for (var j = 0; j < h.length; ++j) {
                c[h.charAt(j)] *= i
            }
            return c.normalize()
        }
        ;
        c.toString = function() {
            if (c.a >= 1) {
                return "rgb(" + [c.r, c.g, c.b].join(",") + ")"
            } else {
                return "rgba(" + [c.r, c.g, c.b, c.a].join(",") + ")"
            }
        }
        ;
        c.normalize = function() {
            function h(j, i, k) {
                return i < j ? j : (i > k ? k : i)
            }
            c.r = h(0, parseInt(c.r), 255);
            c.g = h(0, parseInt(c.g), 255);
            c.b = h(0, parseInt(c.b), 255);
            c.a = h(0, c.a, 1);
            return c
        }
        ;
        c.clone = function() {
            return b.color.make(c.r, c.b, c.g, c.a)
        }
        ;
        return c.normalize()
    }
    ;
    b.color.extract = function(d, e) {
        var c;
        do {
            c = d.css(e).toLowerCase();
            if (c != "" && c != "transparent") {
                break
            }
            d = d.parent()
        } while (!b.nodeName(d.get(0), "body"));
        if (c == "rgba(0, 0, 0, 0)") {
            c = "transparent"
        }
        return b.color.parse(c)
    }
    ;
    b.color.parse = function(c) {
        var d, f = b.color.make;
        if (d = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(c)) {
            return f(parseInt(d[1], 10), parseInt(d[2], 10), parseInt(d[3], 10))
        }
        if (d = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(c)) {
            return f(parseInt(d[1], 10), parseInt(d[2], 10), parseInt(d[3], 10), parseFloat(d[4]))
        }
        if (d = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(c)) {
            return f(parseFloat(d[1]) * 2.55, parseFloat(d[2]) * 2.55, parseFloat(d[3]) * 2.55)
        }
        if (d = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(c)) {
            return f(parseFloat(d[1]) * 2.55, parseFloat(d[2]) * 2.55, parseFloat(d[3]) * 2.55, parseFloat(d[4]))
        }
        if (d = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(c)) {
            return f(parseInt(d[1], 16), parseInt(d[2], 16), parseInt(d[3], 16))
        }
        if (d = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(c)) {
            return f(parseInt(d[1] + d[1], 16), parseInt(d[2] + d[2], 16), parseInt(d[3] + d[3], 16))
        }
        var e = b.trim(c).toLowerCase();
        if (e == "transparent") {
            return f(255, 255, 255, 0)
        } else {
            d = a[e] || [0, 0, 0];
            return f(d[0], d[1], d[2])
        }
    }
    ;
    var a = {
        aqua: [0, 255, 255],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        black: [0, 0, 0],
        blue: [0, 0, 255],
        brown: [165, 42, 42],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgrey: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkviolet: [148, 0, 211],
        fuchsia: [255, 0, 255],
        gold: [255, 215, 0],
        green: [0, 128, 0],
        indigo: [75, 0, 130],
        khaki: [240, 230, 140],
        lightblue: [173, 216, 230],
        lightcyan: [224, 255, 255],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        navy: [0, 0, 128],
        olive: [128, 128, 0],
        orange: [255, 165, 0],
        pink: [255, 192, 203],
        purple: [128, 0, 128],
        violet: [128, 0, 128],
        red: [255, 0, 0],
        silver: [192, 192, 192],
        white: [255, 255, 255],
        yellow: [255, 255, 0]
    }
}
)(jQuery);
(function(e) {
    var d = Object.prototype.hasOwnProperty;
    function a(h, g) {
        var j = g.children("." + h)[0];
        if (j == null) {
            j = document.createElement("canvas");
            j.className = h;
            e(j).css({
                direction: "ltr",
                position: "absolute",
                left: 0,
                top: 0
            }).appendTo(g);
            if (!j.getContext) {
                if (window.G_vmlCanvasManager) {
                    j = window.G_vmlCanvasManager.initElement(j)
                } else {
                    throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.")
                }
            }
        }
        this.element = j;
        var i = this.context = j.getContext("2d");
        var f = window.devicePixelRatio || 1
          , k = i.webkitBackingStorePixelRatio || i.mozBackingStorePixelRatio || i.msBackingStorePixelRatio || i.oBackingStorePixelRatio || i.backingStorePixelRatio || 1;
        this.pixelRatio = f / k;
        this.resize(g.width(), g.height());
        this.textContainer = null;
        this.text = {};
        this._textCache = {}
    }
    a.prototype.resize = function(i, f) {
        if (i <= 0 || f <= 0) {
            throw new Error("Invalid dimensions for plot, width = " + i + ", height = " + f)
        }
        var h = this.element
          , g = this.context
          , j = this.pixelRatio;
        if (this.width != i) {
            h.width = i * j;
            h.style.width = i + "px";
            this.width = i
        }
        if (this.height != f) {
            h.height = f * j;
            h.style.height = f + "px";
            this.height = f
        }
        g.restore();
        g.save();
        g.scale(j, j)
    }
    ;
    a.prototype.clear = function() {
        this.context.clearRect(0, 0, this.width, this.height)
    }
    ;
    a.prototype.render = function() {
        var f = this._textCache;
        for (var k in f) {
            if (d.call(f, k)) {
                var j = this.getTextLayer(k)
                  , g = f[k];
                j.hide();
                for (var i in g) {
                    if (d.call(g, i)) {
                        var m = g[i];
                        for (var h in m) {
                            if (d.call(m, h)) {
                                var l = m[h];
                                if (l.active) {
                                    if (!l.rendered) {
                                        j.append(l.element);
                                        l.rendered = true
                                    }
                                } else {
                                    delete m[h];
                                    if (l.rendered) {
                                        l.element.detach()
                                    }
                                }
                            }
                        }
                    }
                }
                j.show()
            }
        }
    }
    ;
    a.prototype.getTextLayer = function(g) {
        var f = this.text[g];
        if (f == null) {
            if (this.textContainer == null) {
                this.textContainer = e("<div class='flot-text'></div>").css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    bottom: 0,
                    right: 0,
                    "font-size": "smaller",
                    color: "#545454"
                }).insertAfter(this.element)
            }
            f = this.text[g] = e("<div></div>").addClass(g).css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0
            }).appendTo(this.textContainer)
        }
        return f
    }
    ;
    a.prototype.getTextInfo = function(l, n, i, j) {
        var m, f, g, h;
        n = "" + n;
        if (typeof i === "object") {
            m = i.style + " " + i.variant + " " + i.weight + " " + i.size + "px/" + i.lineHeight + "px " + i.family
        } else {
            m = i
        }
        f = this._textCache[l];
        if (f == null) {
            f = this._textCache[l] = {}
        }
        g = f[m];
        if (g == null) {
            g = f[m] = {}
        }
        h = g[n];
        if (h == null) {
            var k = e("<div></div>").html(n).css({
                position: "absolute",
                top: -9999
            }).appendTo(this.getTextLayer(l));
            if (typeof i === "object") {
                k.css({
                    font: m,
                    color: i.color
                })
            } else {
                if (typeof i === "string") {
                    k.addClass(i)
                }
            }
            h = g[n] = {
                active: false,
                rendered: false,
                element: k,
                width: k.outerWidth(true),
                height: k.outerHeight(true)
            };
            k.detach()
        }
        return h
    }
    ;
    a.prototype.addText = function(j, m, k, n, g, h, i, l) {
        var f = this.getTextInfo(j, n, g, h);
        f.active = true;
        if (i == "center") {
            m -= f.width / 2
        } else {
            if (i == "right") {
                m -= f.width
            }
        }
        if (l == "middle") {
            k -= f.height / 2
        } else {
            if (l == "bottom") {
                k -= f.height
            }
        }
        f.element.css({
            top: Math.round(k),
            left: Math.round(m)
        })
    }
    ;
    a.prototype.removeText = function(j, m, f, l) {
        if (m == null) {
            var g = this._textCache[j];
            if (g != null) {
                for (var i in g) {
                    if (d.call(g, i)) {
                        var k = g[i];
                        for (var h in k) {
                            if (d.call(k, h)) {
                                k[h].active = false
                            }
                        }
                    }
                }
            }
        } else {
            this.getTextInfo(j, m, f, l).active = false
        }
    }
    ;
    function c(Q, A, C, g) {
        var t = []
          , L = {
            colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
            legend: {
                show: true,
                noColumns: 1,
                labelFormatter: null,
                labelBoxBorderColor: "#ccc",
                container: null,
                position: "ne",
                margin: 5,
                backgroundColor: null,
                backgroundOpacity: 0.85,
                sorted: null
            },
            xaxis: {
                show: null,
                position: "bottom",
                mode: null,
                font: null,
                color: null,
                tickColor: null,
                transform: null,
                inverseTransform: null,
                min: null,
                max: null,
                autoscaleMargin: null,
                ticks: null,
                tickFormatter: null,
                labelWidth: null,
                labelHeight: null,
                reserveSpace: null,
                tickLength: null,
                alignTicksWithAxis: null,
                tickDecimals: null,
                tickSize: null,
                minTickSize: null
            },
            yaxis: {
                autoscaleMargin: 0.02,
                position: "left"
            },
            xaxes: [],
            yaxes: [],
            series: {
                points: {
                    show: false,
                    radius: 3,
                    lineWidth: 2,
                    fill: true,
                    fillColor: "#ffffff",
                    symbol: "circle"
                },
                lines: {
                    lineWidth: 2,
                    fill: false,
                    fillColor: null,
                    steps: false
                },
                bars: {
                    show: false,
                    lineWidth: 2,
                    barWidth: 1,
                    fill: true,
                    fillColor: null,
                    align: "left",
                    horizontal: false,
                    zero: true
                },
                shadowSize: 3,
                highlightColor: null
            },
            grid: {
                show: true,
                aboveData: false,
                color: "#545454",
                backgroundColor: null,
                borderColor: null,
                tickColor: null,
                margin: 0,
                labelMargin: 5,
                axisMargin: 8,
                borderWidth: 2,
                minBorderMargin: null,
                markings: null,
                markingsColor: "#f4f4f4",
                markingsLineWidth: 2,
                clickable: false,
                hoverable: false,
                autoHighlight: true,
                mouseActiveRadius: 10
            },
            interaction: {
                redrawOverlayInterval: 1000 / 60
            },
            hooks: {}
        }
          , ac = null
          , al = null
          , am = null
          , D = null
          , aw = null
          , ao = []
          , W = []
          , J = {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        }
          , k = 0
          , ad = 0
          , p = {
            processOptions: [],
            processRawData: [],
            processDatapoints: [],
            processOffset: [],
            drawBackground: [],
            drawSeries: [],
            draw: [],
            bindEvents: [],
            drawOverlay: [],
            shutdown: []
        }
          , h = this;
        h.setData = K;
        h.setupGrid = O;
        h.draw = au;
        h.getPlaceholder = function() {
            return Q
        }
        ;
        h.getCanvas = function() {
            return ac.element
        }
        ;
        h.getPlotOffset = function() {
            return J
        }
        ;
        h.width = function() {
            return k
        }
        ;
        h.height = function() {
            return ad
        }
        ;
        h.offset = function() {
            var ay = am.offset();
            ay.left += J.left;
            ay.top += J.top;
            return ay
        }
        ;
        h.getData = function() {
            return t
        }
        ;
        h.getAxes = function() {
            var az = {}, ay;
            e.each(ao.concat(W), function(aA, aB) {
                if (aB) {
                    az[aB.direction + (aB.n != 1 ? aB.n : "") + "axis"] = aB
                }
            });
            return az
        }
        ;
        h.getXAxes = function() {
            return ao
        }
        ;
        h.getYAxes = function() {
            return W
        }
        ;
        h.c2p = Y;
        h.p2c = R;
        h.getOptions = function() {
            return L
        }
        ;
        h.highlight = an;
        h.unhighlight = ah;
        h.triggerRedrawOverlay = X;
        h.pointOffset = function(ay) {
            return {
                left: parseInt(ao[x(ay, "x") - 1].p2c(+ay.x) + J.left, 10),
                top: parseInt(W[x(ay, "y") - 1].p2c(+ay.y) + J.top, 10)
            }
        }
        ;
        h.shutdown = o;
        h.resize = function() {
            var az = Q.width()
              , ay = Q.height();
            ac.resize(az, ay);
            al.resize(az, ay)
        }
        ;
        h.hooks = p;
        H(h);
        aa(C);
        ax();
        K(A);
        O();
        au();
        ar();
        function F(aA, ay) {
            ay = [h].concat(ay);
            for (var az = 0; az < aA.length; ++az) {
                aA[az].apply(this, ay)
            }
        }
        function H() {
            var az = {
                Canvas: a
            };
            for (var ay = 0; ay < g.length; ++ay) {
                var aA = g[ay];
                aA.init(h, az);
                if (aA.options) {
                    e.extend(true, L, aA.options)
                }
            }
        }
        function aa(aA) {
            e.extend(true, L, aA);
            if (L.xaxis.color == null) {
                L.xaxis.color = e.color.parse(L.grid.color).scale("a", 0.22).toString()
            }
            if (L.yaxis.color == null) {
                L.yaxis.color = e.color.parse(L.grid.color).scale("a", 0.22).toString()
            }
            if (L.xaxis.tickColor == null) {
                L.xaxis.tickColor = L.grid.tickColor || L.xaxis.color
            }
            if (L.yaxis.tickColor == null) {
                L.yaxis.tickColor = L.grid.tickColor || L.yaxis.color
            }
            if (L.grid.borderColor == null) {
                L.grid.borderColor = L.grid.color
            }
            if (L.grid.tickColor == null) {
                L.grid.tickColor = e.color.parse(L.grid.color).scale("a", 0.22).toString()
            }
            var ay, aD, aB, az = {
                style: Q.css("font-style"),
                size: Math.round(0.8 * (+Q.css("font-size").replace("px", "") || 13)),
                variant: Q.css("font-variant"),
                weight: Q.css("font-weight"),
                family: Q.css("font-family")
            };
            az.lineHeight = az.size * 1.15;
            aB = L.xaxes.length || 1;
            for (ay = 0; ay < aB; ++ay) {
                aD = L.xaxes[ay];
                if (aD && !aD.tickColor) {
                    aD.tickColor = aD.color
                }
                aD = e.extend(true, {}, L.xaxis, aD);
                L.xaxes[ay] = aD;
                if (aD.font) {
                    aD.font = e.extend({}, az, aD.font);
                    if (!aD.font.color) {
                        aD.font.color = aD.color
                    }
                }
            }
            aB = L.yaxes.length || 1;
            for (ay = 0; ay < aB; ++ay) {
                aD = L.yaxes[ay];
                if (aD && !aD.tickColor) {
                    aD.tickColor = aD.color
                }
                aD = e.extend(true, {}, L.yaxis, aD);
                L.yaxes[ay] = aD;
                if (aD.font) {
                    aD.font = e.extend({}, az, aD.font);
                    if (!aD.font.color) {
                        aD.font.color = aD.color
                    }
                }
            }
            if (L.xaxis.noTicks && L.xaxis.ticks == null) {
                L.xaxis.ticks = L.xaxis.noTicks
            }
            if (L.yaxis.noTicks && L.yaxis.ticks == null) {
                L.yaxis.ticks = L.yaxis.noTicks
            }
            if (L.x2axis) {
                L.xaxes[1] = e.extend(true, {}, L.xaxis, L.x2axis);
                L.xaxes[1].position = "top"
            }
            if (L.y2axis) {
                L.yaxes[1] = e.extend(true, {}, L.yaxis, L.y2axis);
                L.yaxes[1].position = "right"
            }
            if (L.grid.coloredAreas) {
                L.grid.markings = L.grid.coloredAreas
            }
            if (L.grid.coloredAreasColor) {
                L.grid.markingsColor = L.grid.coloredAreasColor
            }
            if (L.lines) {
                e.extend(true, L.series.lines, L.lines)
            }
            if (L.points) {
                e.extend(true, L.series.points, L.points)
            }
            if (L.bars) {
                e.extend(true, L.series.bars, L.bars)
            }
            if (L.shadowSize != null) {
                L.series.shadowSize = L.shadowSize
            }
            if (L.highlightColor != null) {
                L.series.highlightColor = L.highlightColor
            }
            for (ay = 0; ay < L.xaxes.length; ++ay) {
                M(ao, ay + 1).options = L.xaxes[ay]
            }
            for (ay = 0; ay < L.yaxes.length; ++ay) {
                M(W, ay + 1).options = L.yaxes[ay]
            }
            for (var aC in p) {
                if (L.hooks[aC] && L.hooks[aC].length) {
                    p[aC] = p[aC].concat(L.hooks[aC])
                }
            }
            F(p.processOptions, [L])
        }
        function K(ay) {
            t = q(ay);
            y();
            S()
        }
        function q(aB) {
            var az = [];
            for (var ay = 0; ay < aB.length; ++ay) {
                var aA = e.extend(true, {}, L.series);
                if (aB[ay].data != null) {
                    aA.data = aB[ay].data;
                    delete aB[ay].data;
                    e.extend(true, aA, aB[ay]);
                    aB[ay].data = aA.data
                } else {
                    aA.data = aB[ay]
                }
                az.push(aA)
            }
            return az
        }
        function x(az, aA) {
            var ay = az[aA + "axis"];
            if (typeof ay == "object") {
                ay = ay.n
            }
            if (typeof ay != "number") {
                ay = 1
            }
            return ay
        }
        function j() {
            return e.grep(ao.concat(W), function(ay) {
                return ay
            })
        }
        function Y(aB) {
            var az = {}, ay, aA;
            for (ay = 0; ay < ao.length; ++ay) {
                aA = ao[ay];
                if (aA && aA.used) {
                    az["x" + aA.n] = aA.c2p(aB.left)
                }
            }
            for (ay = 0; ay < W.length; ++ay) {
                aA = W[ay];
                if (aA && aA.used) {
                    az["y" + aA.n] = aA.c2p(aB.top)
                }
            }
            if (az.x1 !== undefined) {
                az.x = az.x1
            }
            if (az.y1 !== undefined) {
                az.y = az.y1
            }
            return az
        }
        function R(aC) {
            var aA = {}, az, aB, ay;
            for (az = 0; az < ao.length; ++az) {
                aB = ao[az];
                if (aB && aB.used) {
                    ay = "x" + aB.n;
                    if (aC[ay] == null && aB.n == 1) {
                        ay = "x"
                    }
                    if (aC[ay] != null) {
                        aA.left = aB.p2c(aC[ay]);
                        break
                    }
                }
            }
            for (az = 0; az < W.length; ++az) {
                aB = W[az];
                if (aB && aB.used) {
                    ay = "y" + aB.n;
                    if (aC[ay] == null && aB.n == 1) {
                        ay = "y"
                    }
                    if (aC[ay] != null) {
                        aA.top = aB.p2c(aC[ay]);
                        break
                    }
                }
            }
            return aA
        }
        function M(az, ay) {
            if (!az[ay - 1]) {
                az[ay - 1] = {
                    n: ay,
                    direction: az == ao ? "x" : "y",
                    options: e.extend(true, {}, az == ao ? L.xaxis : L.yaxis)
                }
            }
            return az[ay - 1]
        }
        function y() {
            var aJ = t.length, aA = -1, aB;
            for (aB = 0; aB < t.length; ++aB) {
                var aG = t[aB].color;
                if (aG != null) {
                    aJ--;
                    if (typeof aG == "number" && aG > aA) {
                        aA = aG
                    }
                }
            }
            if (aJ <= aA) {
                aJ = aA + 1
            }
            var aF, ay = [], aE = L.colors, aD = aE.length, az = 0;
            for (aB = 0; aB < aJ; aB++) {
                aF = e.color.parse(aE[aB % aD] || "#666");
                if (aB % aD == 0 && aB) {
                    if (az >= 0) {
                        if (az < 0.5) {
                            az = -az - 0.2
                        } else {
                            az = 0
                        }
                    } else {
                        az = -az
                    }
                }
                ay[aB] = aF.scale("rgb", 1 + az)
            }
            var aC = 0, aK;
            for (aB = 0; aB < t.length; ++aB) {
                aK = t[aB];
                if (aK.color == null) {
                    aK.color = ay[aC].toString();
                    ++aC
                } else {
                    if (typeof aK.color == "number") {
                        aK.color = ay[aK.color].toString()
                    }
                }
                if (aK.lines.show == null) {
                    var aI, aH = true;
                    for (aI in aK) {
                        if (aK[aI] && aK[aI].show) {
                            aH = false;
                            break
                        }
                    }
                    if (aH) {
                        aK.lines.show = true
                    }
                }
                if (aK.lines.zero == null) {
                    aK.lines.zero = !!aK.lines.fill
                }
                aK.xaxis = M(ao, x(aK, "x"));
                aK.yaxis = M(W, x(aK, "y"))
            }
        }
        function S() {
            var aM = Number.POSITIVE_INFINITY, aG = Number.NEGATIVE_INFINITY, ay = Number.MAX_VALUE, aT, aR, aQ, aL, aA, aH, aS, aN, aF, aE, az, aZ, aW, aJ, aY, aV;
            function aC(a2, a1, a0) {
                if (a1 < a2.datamin && a1 != -ay) {
                    a2.datamin = a1
                }
                if (a0 > a2.datamax && a0 != ay) {
                    a2.datamax = a0
                }
            }
            e.each(j(), function(a0, a1) {
                a1.datamin = aM;
                a1.datamax = aG;
                a1.used = false
            });
            for (aT = 0; aT < t.length; ++aT) {
                aH = t[aT];
                aH.datapoints = {
                    points: []
                };
                F(p.processRawData, [aH, aH.data, aH.datapoints])
            }
            for (aT = 0; aT < t.length; ++aT) {
                aH = t[aT];
                aY = aH.data;
                aV = aH.datapoints.format;
                if (!aV) {
                    aV = [];
                    aV.push({
                        x: true,
                        number: true,
                        required: true
                    });
                    aV.push({
                        y: true,
                        number: true,
                        required: true
                    });
                    if (aH.bars.show || (aH.lines.show && aH.lines.fill)) {
                        var aO = !!((aH.bars.show && aH.bars.zero) || (aH.lines.show && aH.lines.zero));
                        aV.push({
                            y: true,
                            number: true,
                            required: false,
                            defaultValue: 0,
                            autoscale: aO
                        });
                        if (aH.bars.horizontal) {
                            delete aV[aV.length - 1].y;
                            aV[aV.length - 1].x = true
                        }
                    }
                    aH.datapoints.format = aV
                }
                if (aH.datapoints.pointsize != null) {
                    continue
                }
                aH.datapoints.pointsize = aV.length;
                aN = aH.datapoints.pointsize;
                aS = aH.datapoints.points;
                var aD = aH.lines.show && aH.lines.steps;
                aH.xaxis.used = aH.yaxis.used = true;
                for (aR = aQ = 0; aR < aY.length; ++aR,
                aQ += aN) {
                    aJ = aY[aR];
                    var aB = aJ == null;
                    if (!aB) {
                        for (aL = 0; aL < aN; ++aL) {
                            aZ = aJ[aL];
                            aW = aV[aL];
                            if (aW) {
                                if (aW.number && aZ != null) {
                                    aZ = +aZ;
                                    if (isNaN(aZ)) {
                                        aZ = null
                                    } else {
                                        if (aZ == Infinity) {
                                            aZ = ay
                                        } else {
                                            if (aZ == -Infinity) {
                                                aZ = -ay
                                            }
                                        }
                                    }
                                }
                                if (aZ == null) {
                                    if (aW.required) {
                                        aB = true
                                    }
                                    if (aW.defaultValue != null) {
                                        aZ = aW.defaultValue
                                    }
                                }
                            }
                            aS[aQ + aL] = aZ
                        }
                    }
                    if (aB) {
                        for (aL = 0; aL < aN; ++aL) {
                            aZ = aS[aQ + aL];
                            if (aZ != null) {
                                aW = aV[aL];
                                if (aW.x) {
                                    aC(aH.xaxis, aZ, aZ)
                                }
                                if (aW.y) {
                                    aC(aH.yaxis, aZ, aZ)
                                }
                            }
                            aS[aQ + aL] = null
                        }
                    } else {
                        if (aD && aQ > 0 && aS[aQ - aN] != null && aS[aQ - aN] != aS[aQ] && aS[aQ - aN + 1] != aS[aQ + 1]) {
                            for (aL = 0; aL < aN; ++aL) {
                                aS[aQ + aN + aL] = aS[aQ + aL]
                            }
                            aS[aQ + 1] = aS[aQ - aN + 1];
                            aQ += aN
                        }
                    }
                }
            }
            for (aT = 0; aT < t.length; ++aT) {
                aH = t[aT];
                F(p.processDatapoints, [aH, aH.datapoints])
            }
            for (aT = 0; aT < t.length; ++aT) {
                aH = t[aT];
                aS = aH.datapoints.points,
                aN = aH.datapoints.pointsize;
                aV = aH.datapoints.format;
                var aI = aM
                  , aP = aM
                  , aK = aG
                  , aU = aG;
                for (aR = 0; aR < aS.length; aR += aN) {
                    if (aS[aR] == null) {
                        continue
                    }
                    for (aL = 0; aL < aN; ++aL) {
                        aZ = aS[aR + aL];
                        aW = aV[aL];
                        if (!aW || aW.autoscale === false || aZ == ay || aZ == -ay) {
                            continue
                        }
                        if (aW.x) {
                            if (aZ < aI) {
                                aI = aZ
                            }
                            if (aZ > aK) {
                                aK = aZ
                            }
                        }
                        if (aW.y) {
                            if (aZ < aP) {
                                aP = aZ
                            }
                            if (aZ > aU) {
                                aU = aZ
                            }
                        }
                    }
                }
                if (aH.bars.show) {
                    var aX;
                    switch (aH.bars.align) {
                    case "left":
                        aX = 0;
                        break;
                    case "right":
                        aX = -aH.bars.barWidth;
                        break;
                    case "center":
                        aX = -aH.bars.barWidth / 2;
                        break;
                    default:
                        throw new Error("Invalid bar alignment: " + aH.bars.align)
                    }
                    if (aH.bars.horizontal) {
                        aP += aX;
                        aU += aX + aH.bars.barWidth
                    } else {
                        aI += aX;
                        aK += aX + aH.bars.barWidth
                    }
                }
                aC(aH.xaxis, aI, aK);
                aC(aH.yaxis, aP, aU)
            }
            e.each(j(), function(a0, a1) {
                if (a1.datamin == aM) {
                    a1.datamin = null
                }
                if (a1.datamax == aG) {
                    a1.datamax = null
                }
            })
        }
        function ax() {
            Q.css("padding", 0).children(":not(.flot-base,.flot-overlay)").remove();
            if (Q.css("position") == "static") {
                Q.css("position", "relative")
            }
            ac = new a("flot-base",Q);
            al = new a("flot-overlay",Q);
            D = ac.context;
            aw = al.context;
            am = e(al.element).unbind();
            var ay = Q.data("plot");
            if (ay) {
                ay.shutdown();
                al.clear()
            }
            Q.data("plot", h)
        }
        function ar() {
            if (L.grid.hoverable) {
                am.mousemove(f);
                am.bind("mouseleave", P)
            }
            if (L.grid.clickable) {
                am.click(I)
            }
            F(p.bindEvents, [am])
        }
        function o() {
            if (l) {
                clearTimeout(l)
            }
            am.unbind("mousemove", f);
            am.unbind("mouseleave", P);
            am.unbind("click", I);
            F(p.shutdown, [am])
        }
        function n(aD) {
            function az(aE) {
                return aE
            }
            var aC, ay, aA = aD.options.transform || az, aB = aD.options.inverseTransform;
            if (aD.direction == "x") {
                aC = aD.scale = k / Math.abs(aA(aD.max) - aA(aD.min));
                ay = Math.min(aA(aD.max), aA(aD.min))
            } else {
                aC = aD.scale = ad / Math.abs(aA(aD.max) - aA(aD.min));
                aC = -aC;
                ay = Math.max(aA(aD.max), aA(aD.min))
            }
            if (aA == az) {
                aD.p2c = function(aE) {
                    return (aE - ay) * aC
                }
            } else {
                aD.p2c = function(aE) {
                    return (aA(aE) - ay) * aC
                }
            }
            if (!aB) {
                aD.c2p = function(aE) {
                    return ay + aE / aC
                }
            } else {
                aD.c2p = function(aE) {
                    return aB(ay + aE / aC)
                }
            }
        }
        function Z(aB) {
            var ay = aB.options
              , aG = aB.ticks || []
              , aH = ay.labelWidth || 0
              , aF = ay.labelHeight || 0
              , aD = aB.direction + "Axis " + aB.direction + aB.n + "Axis"
              , aE = "flot-" + aB.direction + "-axis flot-" + aB.direction + aB.n + "-axis " + aD
              , aA = ay.font || "flot-tick-label tickLabel";
            for (var aC = 0; aC < aG.length; ++aC) {
                var aI = aG[aC];
                if (!aI.label) {
                    continue
                }
                var az = ac.getTextInfo(aE, aI.label, aA);
                if (ay.labelWidth == null) {
                    aH = Math.max(aH, az.width)
                }
                if (ay.labelHeight == null) {
                    aF = Math.max(aF, az.height)
                }
            }
            aB.labelWidth = Math.ceil(aH);
            aB.labelHeight = Math.ceil(aF)
        }
        function E(aA) {
            var az = aA.labelWidth, aI = aA.labelHeight, aE = aA.options.position, aC = aA.options.tickLength, aD = L.grid.axisMargin, aG = L.grid.labelMargin, aH = aA.direction == "x" ? ao : W, aB, aJ;
            var ay = e.grep(aH, function(aK) {
                return aK && aK.options.position == aE && aK.reserveSpace
            });
            if (e.inArray(aA, ay) == ay.length - 1) {
                aD = 0
            }
            if (aC == null) {
                var aF = e.grep(aH, function(aK) {
                    return aK && aK.reserveSpace
                });
                aJ = e.inArray(aA, aF) == 0;
                if (aJ) {
                    aC = "full"
                } else {
                    aC = 5
                }
            }
            if (!isNaN(+aC)) {
                aG += +aC
            }
            if (aA.direction == "x") {
                aI += aG;
                if (aE == "bottom") {
                    J.bottom += aI + aD;
                    aA.box = {
                        top: ac.height - J.bottom,
                        height: aI
                    }
                } else {
                    aA.box = {
                        top: J.top + aD,
                        height: aI
                    };
                    J.top += aI + aD
                }
            } else {
                az += aG;
                if (aE == "left") {
                    aA.box = {
                        left: J.left + aD,
                        width: az
                    };
                    J.left += az + aD
                } else {
                    J.right += az + aD;
                    aA.box = {
                        left: ac.width - J.right,
                        width: az
                    }
                }
            }
            aA.position = aE;
            aA.tickLength = aC;
            aA.box.padding = aG;
            aA.innermost = aJ
        }
        function ab(ay) {
            if (ay.direction == "x") {
                ay.box.left = J.left - ay.labelWidth / 2;
                ay.box.width = ac.width - J.left - J.right + ay.labelWidth
            } else {
                ay.box.top = J.top - ay.labelHeight / 2;
                ay.box.height = ac.height - J.bottom - J.top + ay.labelHeight
            }
        }
        function B() {
            var aA = L.grid.minBorderMargin, aB = {
                x: 0,
                y: 0
            }, ay, az;
            if (aA == null) {
                aA = 0;
                for (ay = 0; ay < t.length; ++ay) {
                    aA = Math.max(aA, 2 * (t[ay].points.radius + t[ay].points.lineWidth / 2))
                }
            }
            aB.x = aB.y = Math.ceil(aA);
            e.each(j(), function(aD, aE) {
                var aC = aE.direction;
                if (aE.reserveSpace) {
                    aB[aC] = Math.ceil(Math.max(aB[aC], (aC == "x" ? aE.labelWidth : aE.labelHeight) / 2))
                }
            });
            J.left = Math.max(aB.x, J.left);
            J.right = Math.max(aB.x, J.right);
            J.top = Math.max(aB.y, J.top);
            J.bottom = Math.max(aB.y, J.bottom)
        }
        function O() {
            var aA, aC = j(), aD = L.grid.show;
            for (var az in J) {
                var aB = L.grid.margin || 0;
                J[az] = typeof aB == "number" ? aB : aB[az] || 0
            }
            F(p.processOffset, [J]);
            for (var az in J) {
                if (typeof (L.grid.borderWidth) == "object") {
                    J[az] += aD ? L.grid.borderWidth[az] : 0
                } else {
                    J[az] += aD ? L.grid.borderWidth : 0
                }
            }
            e.each(aC, function(aE, aF) {
                aF.show = aF.options.show;
                if (aF.show == null) {
                    aF.show = aF.used
                }
                aF.reserveSpace = aF.show || aF.options.reserveSpace;
                m(aF)
            });
            if (aD) {
                var ay = e.grep(aC, function(aE) {
                    return aE.reserveSpace
                });
                e.each(ay, function(aE, aF) {
                    aq(aF);
                    V(aF);
                    u(aF, aF.ticks);
                    Z(aF)
                });
                for (aA = ay.length - 1; aA >= 0; --aA) {
                    E(ay[aA])
                }
                B();
                e.each(ay, function(aE, aF) {
                    ab(aF)
                })
            }
            k = ac.width - J.left - J.right;
            ad = ac.height - J.bottom - J.top;
            e.each(aC, function(aE, aF) {
                n(aF)
            });
            if (aD) {
                at()
            }
            av()
        }
        function m(aB) {
            var aC = aB.options
              , aA = +(aC.min != null ? aC.min : aB.datamin)
              , ay = +(aC.max != null ? aC.max : aB.datamax)
              , aE = ay - aA;
            if (aE == 0) {
                var az = ay == 0 ? 1 : 0.01;
                if (aC.min == null) {
                    aA -= az
                }
                if (aC.max == null || aC.min != null) {
                    ay += az
                }
            } else {
                var aD = aC.autoscaleMargin;
                if (aD != null) {
                    if (aC.min == null) {
                        aA -= aE * aD;
                        if (aA < 0 && aB.datamin != null && aB.datamin >= 0) {
                            aA = 0
                        }
                    }
                    if (aC.max == null) {
                        ay += aE * aD;
                        if (ay > 0 && aB.datamax != null && aB.datamax <= 0) {
                            ay = 0
                        }
                    }
                }
            }
            aB.min = aA;
            aB.max = ay
        }
        function aq(aC) {
            var aE = aC.options;
            var aB;
            if (typeof aE.ticks == "number" && aE.ticks > 0) {
                aB = aE.ticks
            } else {
                aB = 0.3 * Math.sqrt(aC.direction == "x" ? ac.width : ac.height)
            }
            aC.delta = (aC.max - aC.min) / aB;
            if (aE.mode == "time" && !aC.tickGenerator) {
                throw new Error("Time mode requires the flot.time plugin.")
            }
            if (!aC.tickGenerator) {
                aC.tickGenerator = function(aJ) {
                    var aH = aE.tickDecimals
                      , aL = -Math.floor(Math.log(aJ.delta) / Math.LN10);
                    if (aH != null && aL > aH) {
                        aL = aH
                    }
                    var aF = Math.pow(10, -aL), aG = aJ.delta / aF, aP, aN = [], aI, aM = 0, aO = Number.NaN, aK;
                    if (aG < 1.5) {
                        aP = 1
                    } else {
                        if (aG < 3) {
                            aP = 2;
                            if (aG > 2.25 && (aH == null || aL + 1 <= aH)) {
                                aP = 2.5;
                                ++aL
                            }
                        } else {
                            if (aG < 7.5) {
                                aP = 5
                            } else {
                                aP = 10
                            }
                        }
                    }
                    aP *= aF;
                    if (aE.minTickSize != null && aP < aE.minTickSize) {
                        aP = aE.minTickSize
                    }
                    aJ.tickDecimals = Math.max(0, aH != null ? aH : aL);
                    aJ.tickSize = aE.tickSize || aP;
                    aI = b(aJ.min, aJ.tickSize);
                    do {
                        aK = aO;
                        aO = aI + aM * aJ.tickSize;
                        aN.push(aO);
                        ++aM
                    } while (aO < aJ.max && aO != aK);
                    return aN
                }
                ;
                aC.tickFormatter = function(aK, aI) {
                    var aH = aI.tickDecimals ? Math.pow(10, aI.tickDecimals) : 1;
                    var aJ = "" + Math.round(aK * aH) / aH;
                    if (aI.tickDecimals != null) {
                        var aG = aJ.indexOf(".");
                        var aF = aG == -1 ? 0 : aJ.length - aG - 1;
                        if (aF < aI.tickDecimals) {
                            return (aF ? aJ : aJ + ".") + ("" + aH).substr(1, aI.tickDecimals - aF)
                        }
                    }
                    return aJ
                }
            }
            if (e.isFunction(aE.tickFormatter)) {
                aC.tickFormatter = function(aF, aG) {
                    return "" + aE.tickFormatter(aF, aG)
                }
            }
            if (aE.alignTicksWithAxis != null) {
                var az = (aC.direction == "x" ? ao : W)[aE.alignTicksWithAxis - 1];
                if (az && az.used && az != aC) {
                    var ay = aC.tickGenerator(aC);
                    if (ay.length > 0) {
                        if (aE.min == null) {
                            aC.min = Math.min(aC.min, ay[0])
                        }
                        if (aE.max == null && ay.length > 1) {
                            aC.max = Math.max(aC.max, ay[ay.length - 1])
                        }
                    }
                    aC.tickGenerator = function(aH) {
                        var aI = [], aF, aG;
                        for (aG = 0; aG < az.ticks.length; ++aG) {
                            aF = (az.ticks[aG].v - az.min) / (az.max - az.min);
                            aF = aH.min + aF * (aH.max - aH.min);
                            aI.push(aF)
                        }
                        return aI
                    }
                    ;
                    if (!aC.mode && aE.tickDecimals == null) {
                        var aA = Math.max(0, -Math.floor(Math.log(aC.delta) / Math.LN10) + 1)
                          , aD = aC.tickGenerator(aC);
                        if (!(aD.length > 1 && /\..*0$/.test((aD[1] - aD[0]).toFixed(aA)))) {
                            aC.tickDecimals = aA
                        }
                    }
                }
            }
        }
        function V(aC) {
            var aE = aC.options.ticks
              , aD = [];
            if (aE == null || (typeof aE == "number" && aE > 0)) {
                aD = aC.tickGenerator(aC)
            } else {
                if (aE) {
                    if (e.isFunction(aE)) {
                        aD = aE(aC)
                    } else {
                        aD = aE
                    }
                }
            }
            var aB, ay;
            aC.ticks = [];
            for (aB = 0; aB < aD.length; ++aB) {
                var az = null;
                var aA = aD[aB];
                if (typeof aA == "object") {
                    ay = +aA[0];
                    if (aA.length > 1) {
                        az = aA[1]
                    }
                } else {
                    ay = +aA
                }
                if (az == null) {
                    az = aC.tickFormatter(ay, aC)
                }
                if (!isNaN(ay)) {
                    aC.ticks.push({
                        v: ay,
                        label: az
                    })
                }
            }
        }
        function u(ay, az) {
            if (ay.options.autoscaleMargin && az.length > 0) {
                if (ay.options.min == null) {
                    ay.min = Math.min(ay.min, az[0].v)
                }
                if (ay.options.max == null && az.length > 1) {
                    ay.max = Math.max(ay.max, az[az.length - 1].v)
                }
            }
        }
        function au() {
            ac.clear();
            F(p.drawBackground, [D]);
            var az = L.grid;
            if (az.show && az.backgroundColor) {
                r()
            }
            if (az.show && !az.aboveData) {
                w()
            }
            for (var ay = 0; ay < t.length; ++ay) {
                F(p.drawSeries, [D, t[ay]]);
                aj(t[ay])
            }
            F(p.draw, [D]);
            if (az.show && az.aboveData) {
                w()
            }
            ac.render()
        }
        function s(ay, aC) {
            var az, aE, aF, aG, aD = j();
            for (var aB = 0; aB < aD.length; ++aB) {
                az = aD[aB];
                if (az.direction == aC) {
                    aG = aC + az.n + "axis";
                    if (!ay[aG] && az.n == 1) {
                        aG = aC + "axis"
                    }
                    if (ay[aG]) {
                        aE = ay[aG].from;
                        aF = ay[aG].to;
                        break
                    }
                }
            }
            if (!ay[aG]) {
                az = aC == "x" ? ao[0] : W[0];
                aE = ay[aC + "1"];
                aF = ay[aC + "2"]
            }
            if (aE != null && aF != null && aE > aF) {
                var aA = aE;
                aE = aF;
                aF = aA
            }
            return {
                from: aE,
                to: aF,
                axis: az
            }
        }
        function r() {
            D.save();
            D.translate(J.left, J.top);
            D.fillStyle = v(L.grid.backgroundColor, ad, 0, "rgba(255, 255, 255, 0)");
            D.fillRect(0, 0, k, ad);
            D.restore()
        }
        function w() {
            var aC, aI, aK, aG;
            D.save();
            D.translate(J.left, J.top);
            var aE = L.grid.markings;
            if (aE) {
                if (e.isFunction(aE)) {
                    aI = h.getAxes();
                    aI.xmin = aI.xaxis.min;
                    aI.xmax = aI.xaxis.max;
                    aI.ymin = aI.yaxis.min;
                    aI.ymax = aI.yaxis.max;
                    aE = aE(aI)
                }
                for (aC = 0; aC < aE.length; ++aC) {
                    var aA = aE[aC]
                      , az = s(aA, "x")
                      , aF = s(aA, "y");
                    if (az.from == null) {
                        az.from = az.axis.min
                    }
                    if (az.to == null) {
                        az.to = az.axis.max
                    }
                    if (aF.from == null) {
                        aF.from = aF.axis.min
                    }
                    if (aF.to == null) {
                        aF.to = aF.axis.max
                    }
                    if (az.to < az.axis.min || az.from > az.axis.max || aF.to < aF.axis.min || aF.from > aF.axis.max) {
                        continue
                    }
                    az.from = Math.max(az.from, az.axis.min);
                    az.to = Math.min(az.to, az.axis.max);
                    aF.from = Math.max(aF.from, aF.axis.min);
                    aF.to = Math.min(aF.to, aF.axis.max);
                    if (az.from == az.to && aF.from == aF.to) {
                        continue
                    }
                    az.from = az.axis.p2c(az.from);
                    az.to = az.axis.p2c(az.to);
                    aF.from = aF.axis.p2c(aF.from);
                    aF.to = aF.axis.p2c(aF.to);
                    if (az.from == az.to || aF.from == aF.to) {
                        D.beginPath();
                        D.strokeStyle = aA.color || L.grid.markingsColor;
                        D.lineWidth = aA.lineWidth || L.grid.markingsLineWidth;
                        D.moveTo(az.from, aF.from);
                        D.lineTo(az.to, aF.to);
                        D.stroke()
                    } else {
                        D.fillStyle = aA.color || L.grid.markingsColor;
                        D.fillRect(az.from, aF.to, az.to - az.from, aF.from - aF.to)
                    }
                }
            }
            aI = j();
            aK = L.grid.borderWidth;
            for (var aB = 0; aB < aI.length; ++aB) {
                var ay = aI[aB], aD = ay.box, aO = ay.tickLength, aL, aJ, aN, aH;
                if (!ay.show || ay.ticks.length == 0) {
                    continue
                }
                D.lineWidth = 1;
                if (ay.direction == "x") {
                    aL = 0;
                    if (aO == "full") {
                        aJ = (ay.position == "top" ? 0 : ad)
                    } else {
                        aJ = aD.top - J.top + (ay.position == "top" ? aD.height : 0)
                    }
                } else {
                    aJ = 0;
                    if (aO == "full") {
                        aL = (ay.position == "left" ? 0 : k)
                    } else {
                        aL = aD.left - J.left + (ay.position == "left" ? aD.width : 0)
                    }
                }
                if (!ay.innermost) {
                    D.strokeStyle = ay.options.color;
                    D.beginPath();
                    aN = aH = 0;
                    if (ay.direction == "x") {
                        aN = k + 1
                    } else {
                        aH = ad + 1
                    }
                    if (D.lineWidth == 1) {
                        if (ay.direction == "x") {
                            aJ = Math.floor(aJ) + 0.5
                        } else {
                            aL = Math.floor(aL) + 0.5
                        }
                    }
                    D.moveTo(aL, aJ);
                    D.lineTo(aL + aN, aJ + aH);
                    D.stroke()
                }
                D.strokeStyle = ay.options.tickColor;
                D.beginPath();
                for (aC = 0; aC < ay.ticks.length; ++aC) {
                    var aM = ay.ticks[aC].v;
                    aN = aH = 0;
                    if (isNaN(aM) || aM < ay.min || aM > ay.max || (aO == "full" && ((typeof aK == "object" && aK[ay.position] > 0) || aK > 0) && (aM == ay.min || aM == ay.max))) {
                        continue
                    }
                    if (ay.direction == "x") {
                        aL = ay.p2c(aM);
                        aH = aO == "full" ? -ad : aO;
                        if (ay.position == "top") {
                            aH = -aH
                        }
                    } else {
                        aJ = ay.p2c(aM);
                        aN = aO == "full" ? -k : aO;
                        if (ay.position == "left") {
                            aN = -aN
                        }
                    }
                    if (D.lineWidth == 1) {
                        if (ay.direction == "x") {
                            aL = Math.floor(aL) + 0.5
                        } else {
                            aJ = Math.floor(aJ) + 0.5
                        }
                    }
                    D.moveTo(aL, aJ);
                    D.lineTo(aL + aN, aJ + aH)
                }
                D.stroke()
            }
            if (aK) {
                aG = L.grid.borderColor;
                if (typeof aK == "object" || typeof aG == "object") {
                    if (typeof aK !== "object") {
                        aK = {
                            top: aK,
                            right: aK,
                            bottom: aK,
                            left: aK
                        }
                    }
                    if (typeof aG !== "object") {
                        aG = {
                            top: aG,
                            right: aG,
                            bottom: aG,
                            left: aG
                        }
                    }
                    if (aK.top > 0) {
                        D.strokeStyle = aG.top;
                        D.lineWidth = aK.top;
                        D.beginPath();
                        D.moveTo(0 - aK.left, 0 - aK.top / 2);
                        D.lineTo(k, 0 - aK.top / 2);
                        D.stroke()
                    }
                    if (aK.right > 0) {
                        D.strokeStyle = aG.right;
                        D.lineWidth = aK.right;
                        D.beginPath();
                        D.moveTo(k + aK.right / 2, 0 - aK.top);
                        D.lineTo(k + aK.right / 2, ad);
                        D.stroke()
                    }
                    if (aK.bottom > 0) {
                        D.strokeStyle = aG.bottom;
                        D.lineWidth = aK.bottom;
                        D.beginPath();
                        D.moveTo(k + aK.right, ad + aK.bottom / 2);
                        D.lineTo(0, ad + aK.bottom / 2);
                        D.stroke()
                    }
                    if (aK.left > 0) {
                        D.strokeStyle = aG.left;
                        D.lineWidth = aK.left;
                        D.beginPath();
                        D.moveTo(0 - aK.left / 2, ad + aK.bottom);
                        D.lineTo(0 - aK.left / 2, 0);
                        D.stroke()
                    }
                } else {
                    D.lineWidth = aK;
                    D.strokeStyle = L.grid.borderColor;
                    D.strokeRect(-aK / 2, -aK / 2, k + aK, ad + aK)
                }
            }
            D.restore()
        }
        function at() {
            e.each(j(), function(aJ, az) {
                if (!az.show || az.ticks.length == 0) {
                    return
                }
                var aC = az.box, aB = az.direction + "Axis " + az.direction + az.n + "Axis", aF = "flot-" + az.direction + "-axis flot-" + az.direction + az.n + "-axis " + aB, ay = az.options.font || "flot-tick-label tickLabel", aD, aI, aG, aE, aH;
                ac.removeText(aF);
                for (var aA = 0; aA < az.ticks.length; ++aA) {
                    aD = az.ticks[aA];
                    if (!aD.label || aD.v < az.min || aD.v > az.max) {
                        continue
                    }
                    if (az.direction == "x") {
                        aE = "center";
                        aI = J.left + az.p2c(aD.v);
                        if (az.position == "bottom") {
                            aG = aC.top + aC.padding
                        } else {
                            aG = aC.top + aC.height - aC.padding;
                            aH = "bottom"
                        }
                    } else {
                        aH = "middle";
                        aG = J.top + az.p2c(aD.v);
                        if (az.position == "left") {
                            aI = aC.left + aC.width - aC.padding;
                            aE = "right"
                        } else {
                            aI = aC.left + aC.padding
                        }
                    }
                    ac.addText(aF, aI, aG, aD.label, ay, null, aE, aH)
                }
            })
        }
        function aj(ay) {
            if (ay.lines.show) {
                G(ay)
            }
            if (ay.bars.show) {
                T(ay)
            }
            if (ay.points.show) {
                U(ay)
            }
        }
        function G(aB) {
            function aA(aM, aN, aF, aR, aQ) {
                var aS = aM.points
                  , aG = aM.pointsize
                  , aK = null
                  , aJ = null;
                D.beginPath();
                for (var aL = aG; aL < aS.length; aL += aG) {
                    var aI = aS[aL - aG]
                      , aP = aS[aL - aG + 1]
                      , aH = aS[aL]
                      , aO = aS[aL + 1];
                    if (aI == null || aH == null) {
                        continue
                    }
                    if (aP <= aO && aP < aQ.min) {
                        if (aO < aQ.min) {
                            continue
                        }
                        aI = (aQ.min - aP) / (aO - aP) * (aH - aI) + aI;
                        aP = aQ.min
                    } else {
                        if (aO <= aP && aO < aQ.min) {
                            if (aP < aQ.min) {
                                continue
                            }
                            aH = (aQ.min - aP) / (aO - aP) * (aH - aI) + aI;
                            aO = aQ.min
                        }
                    }
                    if (aP >= aO && aP > aQ.max) {
                        if (aO > aQ.max) {
                            continue
                        }
                        aI = (aQ.max - aP) / (aO - aP) * (aH - aI) + aI;
                        aP = aQ.max
                    } else {
                        if (aO >= aP && aO > aQ.max) {
                            if (aP > aQ.max) {
                                continue
                            }
                            aH = (aQ.max - aP) / (aO - aP) * (aH - aI) + aI;
                            aO = aQ.max
                        }
                    }
                    if (aI <= aH && aI < aR.min) {
                        if (aH < aR.min) {
                            continue
                        }
                        aP = (aR.min - aI) / (aH - aI) * (aO - aP) + aP;
                        aI = aR.min
                    } else {
                        if (aH <= aI && aH < aR.min) {
                            if (aI < aR.min) {
                                continue
                            }
                            aO = (aR.min - aI) / (aH - aI) * (aO - aP) + aP;
                            aH = aR.min
                        }
                    }
                    if (aI >= aH && aI > aR.max) {
                        if (aH > aR.max) {
                            continue
                        }
                        aP = (aR.max - aI) / (aH - aI) * (aO - aP) + aP;
                        aI = aR.max
                    } else {
                        if (aH >= aI && aH > aR.max) {
                            if (aI > aR.max) {
                                continue
                            }
                            aO = (aR.max - aI) / (aH - aI) * (aO - aP) + aP;
                            aH = aR.max
                        }
                    }
                    if (aI != aK || aP != aJ) {
                        D.moveTo(aR.p2c(aI) + aN, aQ.p2c(aP) + aF)
                    }
                    aK = aH;
                    aJ = aO;
                    D.lineTo(aR.p2c(aH) + aN, aQ.p2c(aO) + aF)
                }
                D.stroke()
            }
            function aC(aF, aN, aM) {
                var aT = aF.points, aS = aF.pointsize, aK = Math.min(Math.max(0, aM.min), aM.max), aU = 0, aR, aQ = false, aJ = 1, aI = 0, aO = 0;
                while (true) {
                    if (aS > 0 && aU > aT.length + aS) {
                        break
                    }
                    aU += aS;
                    var aW = aT[aU - aS]
                      , aH = aT[aU - aS + aJ]
                      , aV = aT[aU]
                      , aG = aT[aU + aJ];
                    if (aQ) {
                        if (aS > 0 && aW != null && aV == null) {
                            aO = aU;
                            aS = -aS;
                            aJ = 2;
                            continue
                        }
                        if (aS < 0 && aU == aI + aS) {
                            D.fill();
                            aQ = false;
                            aS = -aS;
                            aJ = 1;
                            aU = aI = aO + aS;
                            continue
                        }
                    }
                    if (aW == null || aV == null) {
                        continue
                    }
                    if (aW <= aV && aW < aN.min) {
                        if (aV < aN.min) {
                            continue
                        }
                        aH = (aN.min - aW) / (aV - aW) * (aG - aH) + aH;
                        aW = aN.min
                    } else {
                        if (aV <= aW && aV < aN.min) {
                            if (aW < aN.min) {
                                continue
                            }
                            aG = (aN.min - aW) / (aV - aW) * (aG - aH) + aH;
                            aV = aN.min
                        }
                    }
                    if (aW >= aV && aW > aN.max) {
                        if (aV > aN.max) {
                            continue
                        }
                        aH = (aN.max - aW) / (aV - aW) * (aG - aH) + aH;
                        aW = aN.max
                    } else {
                        if (aV >= aW && aV > aN.max) {
                            if (aW > aN.max) {
                                continue
                            }
                            aG = (aN.max - aW) / (aV - aW) * (aG - aH) + aH;
                            aV = aN.max
                        }
                    }
                    if (!aQ) {
                        D.beginPath();
                        D.moveTo(aN.p2c(aW), aM.p2c(aK));
                        aQ = true
                    }
                    if (aH >= aM.max && aG >= aM.max) {
                        D.lineTo(aN.p2c(aW), aM.p2c(aM.max));
                        D.lineTo(aN.p2c(aV), aM.p2c(aM.max));
                        continue
                    } else {
                        if (aH <= aM.min && aG <= aM.min) {
                            D.lineTo(aN.p2c(aW), aM.p2c(aM.min));
                            D.lineTo(aN.p2c(aV), aM.p2c(aM.min));
                            continue
                        }
                    }
                    var aL = aW
                      , aP = aV;
                    if (aH <= aG && aH < aM.min && aG >= aM.min) {
                        aW = (aM.min - aH) / (aG - aH) * (aV - aW) + aW;
                        aH = aM.min
                    } else {
                        if (aG <= aH && aG < aM.min && aH >= aM.min) {
                            aV = (aM.min - aH) / (aG - aH) * (aV - aW) + aW;
                            aG = aM.min
                        }
                    }
                    if (aH >= aG && aH > aM.max && aG <= aM.max) {
                        aW = (aM.max - aH) / (aG - aH) * (aV - aW) + aW;
                        aH = aM.max
                    } else {
                        if (aG >= aH && aG > aM.max && aH <= aM.max) {
                            aV = (aM.max - aH) / (aG - aH) * (aV - aW) + aW;
                            aG = aM.max
                        }
                    }
                    if (aW != aL) {
                        D.lineTo(aN.p2c(aL), aM.p2c(aH))
                    }
                    D.lineTo(aN.p2c(aW), aM.p2c(aH));
                    D.lineTo(aN.p2c(aV), aM.p2c(aG));
                    if (aV != aP) {
                        D.lineTo(aN.p2c(aV), aM.p2c(aG));
                        D.lineTo(aN.p2c(aP), aM.p2c(aG))
                    }
                }
            }
            D.save();
            D.translate(J.left, J.top);
            D.lineJoin = "round";
            var aD = aB.lines.lineWidth
              , ay = aB.shadowSize;
            if (aD > 0 && ay > 0) {
                D.lineWidth = ay;
                D.strokeStyle = "rgba(0,0,0,0.1)";
                var aE = Math.PI / 18;
                aA(aB.datapoints, Math.sin(aE) * (aD / 2 + ay / 2), Math.cos(aE) * (aD / 2 + ay / 2), aB.xaxis, aB.yaxis);
                D.lineWidth = ay / 2;
                aA(aB.datapoints, Math.sin(aE) * (aD / 2 + ay / 4), Math.cos(aE) * (aD / 2 + ay / 4), aB.xaxis, aB.yaxis)
            }
            D.lineWidth = aD;
            D.strokeStyle = aB.color;
            var az = z(aB.lines, aB.color, 0, ad);
            if (az) {
                D.fillStyle = az;
                aC(aB.datapoints, aB.xaxis, aB.yaxis)
            }
            if (aD > 0) {
                aA(aB.datapoints, 0, 0, aB.xaxis, aB.yaxis)
            }
            D.restore()
        }
        function U(aB) {
            function aE(aK, aJ, aR, aH, aP, aQ, aN, aG) {
                var aO = aK.points
                  , aF = aK.pointsize;
                for (var aI = 0; aI < aO.length; aI += aF) {
                    var aM = aO[aI]
                      , aL = aO[aI + 1];
                    if (aM == null || aM < aQ.min || aM > aQ.max || aL < aN.min || aL > aN.max) {
                        continue
                    }
                    D.beginPath();
                    aM = aQ.p2c(aM);
                    aL = aN.p2c(aL) + aH;
                    if (aG == "circle") {
                        D.arc(aM, aL, aJ, 0, aP ? Math.PI : Math.PI * 2, false)
                    } else {
                        aG(D, aM, aL, aJ, aP)
                    }
                    D.closePath();
                    if (aR) {
                        D.fillStyle = aR;
                        D.fill()
                    }
                    D.stroke()
                }
            }
            D.save();
            D.translate(J.left, J.top);
            var aD = aB.points.lineWidth
              , az = aB.shadowSize
              , ay = aB.points.radius
              , aC = aB.points.symbol;
            if (aD == 0) {
                aD = 0.0001
            }
            if (aD > 0 && az > 0) {
                var aA = az / 2;
                D.lineWidth = aA;
                D.strokeStyle = "rgba(0,0,0,0.1)";
                aE(aB.datapoints, ay, null, aA + aA / 2, true, aB.xaxis, aB.yaxis, aC);
                D.strokeStyle = "rgba(0,0,0,0.2)";
                aE(aB.datapoints, ay, null, aA / 2, true, aB.xaxis, aB.yaxis, aC)
            }
            D.lineWidth = aD;
            D.strokeStyle = aB.color;
            aE(aB.datapoints, ay, z(aB.points, aB.color), 0, false, aB.xaxis, aB.yaxis, aC);
            D.restore()
        }
        function ak(aK, aJ, aS, aF, aN, aC, aA, aI, aH, aR, aO, az) {
            var aB, aQ, aG, aM, aD, ay, aL, aE, aP;
            if (aO) {
                aE = ay = aL = true;
                aD = false;
                aB = aS;
                aQ = aK;
                aM = aJ + aF;
                aG = aJ + aN;
                if (aQ < aB) {
                    aP = aQ;
                    aQ = aB;
                    aB = aP;
                    aD = true;
                    ay = false
                }
            } else {
                aD = ay = aL = true;
                aE = false;
                aB = aK + aF;
                aQ = aK + aN;
                aG = aS;
                aM = aJ;
                if (aM < aG) {
                    aP = aM;
                    aM = aG;
                    aG = aP;
                    aE = true;
                    aL = false
                }
            }
            if (aQ < aI.min || aB > aI.max || aM < aH.min || aG > aH.max) {
                return
            }
            if (aB < aI.min) {
                aB = aI.min;
                aD = false
            }
            if (aQ > aI.max) {
                aQ = aI.max;
                ay = false
            }
            if (aG < aH.min) {
                aG = aH.min;
                aE = false
            }
            if (aM > aH.max) {
                aM = aH.max;
                aL = false
            }
            aB = aI.p2c(aB);
            aG = aH.p2c(aG);
            aQ = aI.p2c(aQ);
            aM = aH.p2c(aM);
            if (aA) {
                aR.beginPath();
                aR.moveTo(aB, aG);
                aR.lineTo(aB, aM);
                aR.lineTo(aQ, aM);
                aR.lineTo(aQ, aG);
                aR.fillStyle = aA(aG, aM);
                aR.fill()
            }
            if (az > 0 && (aD || ay || aL || aE)) {
                aR.beginPath();
                aR.moveTo(aB, aG + aC);
                if (aD) {
                    aR.lineTo(aB, aM + aC)
                } else {
                    aR.moveTo(aB, aM + aC)
                }
                if (aL) {
                    aR.lineTo(aQ, aM + aC)
                } else {
                    aR.moveTo(aQ, aM + aC)
                }
                if (ay) {
                    aR.lineTo(aQ, aG + aC)
                } else {
                    aR.moveTo(aQ, aG + aC)
                }
                if (aE) {
                    aR.lineTo(aB, aG + aC)
                } else {
                    aR.moveTo(aB, aG + aC)
                }
                aR.stroke()
            }
        }
        function T(aA) {
            function az(aG, aF, aI, aD, aH, aK, aJ) {
                var aL = aG.points
                  , aC = aG.pointsize;
                for (var aE = 0; aE < aL.length; aE += aC) {
                    if (aL[aE] == null) {
                        continue
                    }
                    ak(aL[aE], aL[aE + 1], aL[aE + 2], aF, aI, aD, aH, aK, aJ, D, aA.bars.horizontal, aA.bars.lineWidth)
                }
            }
            D.save();
            D.translate(J.left, J.top);
            D.lineWidth = aA.bars.lineWidth;
            D.strokeStyle = aA.color;
            var ay;
            switch (aA.bars.align) {
            case "left":
                ay = 0;
                break;
            case "right":
                ay = -aA.bars.barWidth;
                break;
            case "center":
                ay = -aA.bars.barWidth / 2;
                break;
            default:
                throw new Error("Invalid bar alignment: " + aA.bars.align)
            }
            var aB = aA.bars.fill ? function(aC, aD) {
                return z(aA.bars, aA.color, aC, aD)
            }
            : null;
            az(aA.datapoints, ay, ay + aA.bars.barWidth, 0, aB, aA.xaxis, aA.yaxis);
            D.restore()
        }
        function z(aA, ay, az, aC) {
            var aB = aA.fill;
            if (!aB) {
                return null
            }
            if (aA.fillColor) {
                return v(aA.fillColor, az, aC, ay)
            }
            var aD = e.color.parse(ay);
            aD.a = typeof aB == "number" ? aB : 0.4;
            aD.normalize();
            return aD.toString()
        }
        function av() {
            Q.find(".legend").remove();
            if (!L.legend.show) {
                return
            }
            var aG = [], aD = [], aE = false, aN = L.legend.labelFormatter, aM, aI;
            for (var aC = 0; aC < t.length; ++aC) {
                aM = t[aC];
                if (aM.label) {
                    aI = aN ? aN(aM.label, aM) : aM.label;
                    if (aI) {
                        aD.push({
                            label: aI,
                            color: aM.color
                        })
                    }
                }
            }
            if (L.legend.sorted) {
                if (e.isFunction(L.legend.sorted)) {
                    aD.sort(L.legend.sorted)
                } else {
                    if (L.legend.sorted == "reverse") {
                        aD.reverse()
                    } else {
                        var aB = L.legend.sorted != "descending";
                        aD.sort(function(aP, aO) {
                            return aP.label == aO.label ? 0 : ((aP.label < aO.label) != aB ? 1 : -1)
                        })
                    }
                }
            }
            for (var aC = 0; aC < aD.length; ++aC) {
                var aK = aD[aC];
                if (aC % L.legend.noColumns == 0) {
                    if (aE) {
                        aG.push("</tr>")
                    }
                    aG.push("<tr>");
                    aE = true
                }
                aG.push('<td class="legendColorBox"><div style="border:1px solid ' + L.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + aK.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + aK.label + "</td>")
            }
            if (aE) {
                aG.push("</tr>")
            }
            if (aG.length == 0) {
                return
            }
            var aL = '<table style="font-size:smaller;color:' + L.grid.color + '">' + aG.join("") + "</table>";
            if (L.legend.container != null) {
                e(L.legend.container).html(aL)
            } else {
                var aH = ""
                  , az = L.legend.position
                  , aA = L.legend.margin;
                if (aA[0] == null) {
                    aA = [aA, aA]
                }
                if (az.charAt(0) == "n") {
                    aH += "top:" + (aA[1] + J.top) + "px;"
                } else {
                    if (az.charAt(0) == "s") {
                        aH += "bottom:" + (aA[1] + J.bottom) + "px;"
                    }
                }
                if (az.charAt(1) == "e") {
                    aH += "right:" + (aA[0] + J.right) + "px;"
                } else {
                    if (az.charAt(1) == "w") {
                        aH += "left:" + (aA[0] + J.left) + "px;"
                    }
                }
                var aJ = e('<div class="legend">' + aL.replace('style="', 'style="position:absolute;' + aH + ";") + "</div>").appendTo(Q);
                if (L.legend.backgroundOpacity != 0) {
                    var aF = L.legend.backgroundColor;
                    if (aF == null) {
                        aF = L.grid.backgroundColor;
                        if (aF && typeof aF == "string") {
                            aF = e.color.parse(aF)
                        } else {
                            aF = e.color.extract(aJ, "background-color")
                        }
                        aF.a = 1;
                        aF = aF.toString()
                    }
                    var ay = aJ.children();
                    e('<div style="position:absolute;width:' + ay.width() + "px;height:" + ay.height() + "px;" + aH + "background-color:" + aF + ';"> </div>').prependTo(aJ).css("opacity", L.legend.backgroundOpacity)
                }
            }
        }
        var ag = []
          , l = null;
        function ap(aF, aD, aA) {
            var aL = L.grid.mouseActiveRadius, aX = aL * aL + 1, aV = null, aO = false, aT, aR, aQ;
            for (aT = t.length - 1; aT >= 0; --aT) {
                if (!aA(t[aT])) {
                    continue
                }
                var aM = t[aT]
                  , aE = aM.xaxis
                  , aC = aM.yaxis
                  , aS = aM.datapoints.points
                  , aN = aE.c2p(aF)
                  , aK = aC.c2p(aD)
                  , az = aL / aE.scale
                  , ay = aL / aC.scale;
                aQ = aM.datapoints.pointsize;
                if (aE.options.inverseTransform) {
                    az = Number.MAX_VALUE
                }
                if (aC.options.inverseTransform) {
                    ay = Number.MAX_VALUE
                }
                if (aM.lines.show || aM.points.show) {
                    for (aR = 0; aR < aS.length; aR += aQ) {
                        var aH = aS[aR]
                          , aG = aS[aR + 1];
                        if (aH == null) {
                            continue
                        }
                        if (aH - aN > az || aH - aN < -az || aG - aK > ay || aG - aK < -ay) {
                            continue
                        }
                        var aJ = Math.abs(aE.p2c(aH) - aF)
                          , aI = Math.abs(aC.p2c(aG) - aD)
                          , aP = aJ * aJ + aI * aI;
                        if (aP < aX) {
                            aX = aP;
                            aV = [aT, aR / aQ]
                        }
                    }
                }
                if (aM.bars.show && !aV) {
                    var aB = aM.bars.align == "left" ? 0 : -aM.bars.barWidth / 2
                      , aU = aB + aM.bars.barWidth;
                    for (aR = 0; aR < aS.length; aR += aQ) {
                        var aH = aS[aR]
                          , aG = aS[aR + 1]
                          , aW = aS[aR + 2];
                        if (aH == null) {
                            continue
                        }
                        if (t[aT].bars.horizontal ? (aN <= Math.max(aW, aH) && aN >= Math.min(aW, aH) && aK >= aG + aB && aK <= aG + aU) : (aN >= aH + aB && aN <= aH + aU && aK >= Math.min(aW, aG) && aK <= Math.max(aW, aG))) {
                            aV = [aT, aR / aQ]
                        }
                    }
                }
            }
            if (aV) {
                aT = aV[0];
                aR = aV[1];
                aQ = t[aT].datapoints.pointsize;
                return {
                    datapoint: t[aT].datapoints.points.slice(aR * aQ, (aR + 1) * aQ),
                    dataIndex: aR,
                    series: t[aT],
                    seriesIndex: aT
                }
            }
            return null
        }
        function f(ay) {
            if (L.grid.hoverable) {
                i("plothover", ay, function(az) {
                    return az.hoverable != false
                })
            }
        }
        function P(ay) {
            if (L.grid.hoverable) {
                i("plothover", ay, function(az) {
                    return false
                })
            }
        }
        function I(ay) {
            i("plotclick", ay, function(az) {
                return az.clickable != false
            })
        }
        function i(az, ay, aA) {
            var aB = am.offset()
              , aE = ay.pageX - aB.left - J.left
              , aC = ay.pageY - aB.top - J.top
              , aG = Y({
                left: aE,
                top: aC
            });
            aG.pageX = ay.pageX;
            aG.pageY = ay.pageY;
            var aH = ap(aE, aC, aA);
            if (aH) {
                aH.pageX = parseInt(aH.series.xaxis.p2c(aH.datapoint[0]) + aB.left + J.left, 10);
                aH.pageY = parseInt(aH.series.yaxis.p2c(aH.datapoint[1]) + aB.top + J.top, 10)
            }
            if (L.grid.autoHighlight) {
                for (var aD = 0; aD < ag.length; ++aD) {
                    var aF = ag[aD];
                    if (aF.auto == az && !(aH && aF.series == aH.series && aF.point[0] == aH.datapoint[0] && aF.point[1] == aH.datapoint[1])) {
                        ah(aF.series, aF.point)
                    }
                }
                if (aH) {
                    an(aH.series, aH.datapoint, az)
                }
            }
            Q.trigger(az, [aG, aH])
        }
        function X() {
            var ay = L.interaction.redrawOverlayInterval;
            if (ay == -1) {
                af();
                return
            }
            if (!l) {
                l = setTimeout(af, ay)
            }
        }
        function af() {
            l = null;
            aw.save();
            al.clear();
            aw.translate(J.left, J.top);
            var az, ay;
            for (az = 0; az < ag.length; ++az) {
                ay = ag[az];
                if (ay.series.bars.show) {
                    ai(ay.series, ay.point)
                } else {
                    ae(ay.series, ay.point)
                }
            }
            aw.restore();
            F(p.drawOverlay, [aw])
        }
        function an(aA, ay, aC) {
            if (typeof aA == "number") {
                aA = t[aA]
            }
            if (typeof ay == "number") {
                var aB = aA.datapoints.pointsize;
                ay = aA.datapoints.points.slice(aB * ay, aB * (ay + 1))
            }
            var az = N(aA, ay);
            if (az == -1) {
                ag.push({
                    series: aA,
                    point: ay,
                    auto: aC
                });
                X()
            } else {
                if (!aC) {
                    ag[az].auto = false
                }
            }
        }
        function ah(aA, ay) {
            if (aA == null && ay == null) {
                ag = [];
                X();
                return
            }
            if (typeof aA == "number") {
                aA = t[aA]
            }
            if (typeof ay == "number") {
                var aB = aA.datapoints.pointsize;
                ay = aA.datapoints.points.slice(aB * ay, aB * (ay + 1))
            }
            var az = N(aA, ay);
            if (az != -1) {
                ag.splice(az, 1);
                X()
            }
        }
        function N(aA, aB) {
            for (var ay = 0; ay < ag.length; ++ay) {
                var az = ag[ay];
                if (az.series == aA && az.point[0] == aB[0] && az.point[1] == aB[1]) {
                    return ay
                }
            }
            return -1
        }
        function ae(ay, aE) {
            var aC = aE[0]
              , aA = aE[1]
              , aF = ay.xaxis
              , aD = ay.yaxis
              , aG = (typeof ay.highlightColor === "string") ? ay.highlightColor : e.color.parse(ay.color).scale("a", 0.5).toString();
            if (aC < aF.min || aC > aF.max || aA < aD.min || aA > aD.max) {
                return
            }
            var aB = ay.points.radius + ay.points.lineWidth / 2;
            aw.lineWidth = aB;
            aw.strokeStyle = aG;
            var az = 1.5 * aB;
            aC = aF.p2c(aC);
            aA = aD.p2c(aA);
            aw.beginPath();
            if (ay.points.symbol == "circle") {
                aw.arc(aC, aA, az, 0, 2 * Math.PI, false)
            } else {
                ay.points.symbol(aw, aC, aA, az, false)
            }
            aw.closePath();
            aw.stroke()
        }
        function ai(aB, ay) {
            var aC = (typeof aB.highlightColor === "string") ? aB.highlightColor : e.color.parse(aB.color).scale("a", 0.5).toString()
              , aA = aC
              , az = aB.bars.align == "left" ? 0 : -aB.bars.barWidth / 2;
            aw.lineWidth = aB.bars.lineWidth;
            aw.strokeStyle = aC;
            ak(ay[0], ay[1], ay[2] || 0, az, az + aB.bars.barWidth, 0, function() {
                return aA
            }, aB.xaxis, aB.yaxis, aw, aB.bars.horizontal, aB.bars.lineWidth)
        }
        function v(aG, ay, aE, az) {
            if (typeof aG == "string") {
                return aG
            } else {
                var aF = D.createLinearGradient(0, aE, 0, ay);
                for (var aB = 0, aA = aG.colors.length; aB < aA; ++aB) {
                    var aC = aG.colors[aB];
                    if (typeof aC != "string") {
                        var aD = e.color.parse(az);
                        if (aC.brightness != null) {
                            aD = aD.scale("rgb", aC.brightness)
                        }
                        if (aC.opacity != null) {
                            aD.a *= aC.opacity
                        }
                        aC = aD.toString()
                    }
                    aF.addColorStop(aB / (aA - 1), aC)
                }
                return aF
            }
        }
    }
    e.plot = function(i, g, f) {
        var h = new c(e(i),g,f,e.plot.plugins);
        return h
    }
    ;
    e.plot.version = "0.8.0-beta";
    e.plot.plugins = [];
    e.fn.plot = function(g, f) {
        return this.each(function() {
            e.plot(this, g, f)
        })
    }
    ;
    function b(g, f) {
        return f * Math.floor(g / f)
    }
}
)(jQuery);
(function(c) {
    var e = 10;
    var a = 0.95;
    function d(v) {
        var h = null
          , A = null
          , m = null
          , s = null
          , n = null
          , f = false
          , u = null;
        var i = [];
        v.hooks.processOptions.push(function(C, B) {
            if (B.series.pie.show) {
                B.grid.show = false;
                if (B.series.pie.label.show == "auto") {
                    if (B.legend.show) {
                        B.series.pie.label.show = false
                    } else {
                        B.series.pie.label.show = true
                    }
                }
                if (B.series.pie.radius == "auto") {
                    if (B.series.pie.label.show) {
                        B.series.pie.radius = 3 / 4
                    } else {
                        B.series.pie.radius = 1
                    }
                }
                if (B.series.pie.tilt > 1) {
                    B.series.pie.tilt = 1
                } else {
                    if (B.series.pie.tilt < 0) {
                        B.series.pie.tilt = 0
                    }
                }
            }
        });
        v.hooks.bindEvents.push(function(D, B) {
            var C = D.getOptions();
            if (C.series.pie.show) {
                if (C.grid.hoverable) {
                    B.unbind("mousemove").mousemove(r)
                }
                if (C.grid.clickable) {
                    B.unbind("click").click(k)
                }
            }
        });
        v.hooks.processDatapoints.push(function(F, C, D, E) {
            var B = F.getOptions();
            if (B.series.pie.show) {
                w(F, C, D, E)
            }
        });
        v.hooks.drawOverlay.push(function(C, D) {
            var B = C.getOptions();
            if (B.series.pie.show) {
                x(C, D)
            }
        });
        v.hooks.draw.push(function(D, C) {
            var B = D.getOptions();
            if (B.series.pie.show) {
                o(D, C)
            }
        });
        function w(D, B, C) {
            if (!f) {
                f = true;
                h = D.getCanvas();
                A = c(h).parent();
                b = D.getOptions();
                D.setData(z(D.getData()))
            }
        }
        function z(G) {
            var E = 0
              , D = 0
              , I = 0
              , B = b.series.pie.combine.color
              , H = [];
            for (var C = 0; C < G.length; ++C) {
                var F = G[C].data;
                if (c.isArray(F)) {
                    if (c.isNumeric(F[1])) {
                        F[1] = +F[1]
                    } else {
                        F[1] = 0
                    }
                } else {
                    if (c.isNumeric(F)) {
                        F = [1, +F]
                    } else {
                        F = [1, 0]
                    }
                }
                G[C].data = [F]
            }
            for (var C = 0; C < G.length; ++C) {
                E += G[C].data[0][1]
            }
            for (var C = 0; C < G.length; ++C) {
                var F = G[C].data[0][1];
                if (F / E <= b.series.pie.combine.threshold) {
                    D += F;
                    I++;
                    if (!B) {
                        B = G[C].color
                    }
                }
            }
            for (var C = 0; C < G.length; ++C) {
                var F = G[C].data[0][1];
                if (I < 2 || F / E > b.series.pie.combine.threshold) {
                    H.push({
                        data: [[1, F]],
                        color: G[C].color,
                        label: G[C].label,
                        angle: F * Math.PI * 2 / E,
                        percent: F / (E / 100)
                    })
                }
            }
            if (I > 1) {
                H.push({
                    data: [[1, D]],
                    color: B,
                    label: b.series.pie.combine.label,
                    angle: D * Math.PI * 2 / E,
                    percent: D / (E / 100)
                })
            }
            return H
        }
        function o(G, J) {
            if (!A) {
                return
            }
            var C = G.getPlaceholder().width()
              , E = G.getPlaceholder().height()
              , I = A.children().filter(".legend").children().width() || 0;
            u = J;
            f = false;
            m = Math.min(C, E / b.series.pie.tilt) / 2;
            n = E / 2 + b.series.pie.offset.top;
            s = C / 2;
            if (b.series.pie.offset.left == "auto") {
                if (b.legend.position.match("w")) {
                    s += I / 2
                } else {
                    s -= I / 2
                }
            } else {
                s += b.series.pie.offset.left
            }
            if (s < m) {
                s = m
            } else {
                if (s > C - m) {
                    s = C - m
                }
            }
            var H = G.getData()
              , K = 0;
            do {
                if (K > 0) {
                    m *= a
                }
                K += 1;
                F();
                if (b.series.pie.tilt <= 0.8) {
                    D()
                }
            } while (!B() && K < e);
            if (K >= e) {
                F();
                A.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>")
            }
            if (G.setSeries && G.insertLegend) {
                G.setSeries(H);
                G.insertLegend()
            }
            function F() {
                u.clearRect(0, 0, C, E);
                A.children().filter(".pieLabel, .pieLabelBackground").remove()
            }
            function D() {
                var Q = b.series.pie.shadow.left;
                var P = b.series.pie.shadow.top;
                var N = 10;
                var O = b.series.pie.shadow.alpha;
                var L = b.series.pie.radius > 1 ? b.series.pie.radius : m * b.series.pie.radius;
                if (L >= C / 2 - Q || L * b.series.pie.tilt >= E / 2 - P || L <= N) {
                    return
                }
                u.save();
                u.translate(Q, P);
                u.globalAlpha = O;
                u.fillStyle = "#000";
                u.translate(s, n);
                u.scale(1, b.series.pie.tilt);
                for (var M = 1; M <= N; M++) {
                    u.beginPath();
                    u.arc(0, 0, L, 0, Math.PI * 2, false);
                    u.fill();
                    L -= M
                }
                u.restore()
            }
            function B() {
                var O = Math.PI * b.series.pie.startAngle;
                var L = b.series.pie.radius > 1 ? b.series.pie.radius : m * b.series.pie.radius;
                u.save();
                u.translate(s, n);
                u.scale(1, b.series.pie.tilt);
                u.save();
                var Q = O;
                for (var N = 0; N < H.length; ++N) {
                    H[N].startAngle = Q;
                    P(H[N].angle, H[N].color, true)
                }
                u.restore();
                if (b.series.pie.stroke.width > 0) {
                    u.save();
                    u.lineWidth = b.series.pie.stroke.width;
                    Q = O;
                    for (var N = 0; N < H.length; ++N) {
                        P(H[N].angle, b.series.pie.stroke.color, false)
                    }
                    u.restore()
                }
                y(u);
                u.restore();
                if (b.series.pie.label.show) {
                    return M()
                } else {
                    return true
                }
                function P(T, R, S) {
                    if (T <= 0 || isNaN(T)) {
                        return
                    }
                    if (S) {
                        u.fillStyle = R
                    } else {
                        u.strokeStyle = R;
                        u.lineJoin = "round"
                    }
                    u.beginPath();
                    if (Math.abs(T - Math.PI * 2) > 1e-9) {
                        u.moveTo(0, 0)
                    }
                    u.arc(0, 0, L, Q, Q + T / 2, false);
                    u.arc(0, 0, L, Q + T / 2, Q + T, false);
                    u.closePath();
                    Q += T;
                    if (S) {
                        u.fill()
                    } else {
                        u.stroke()
                    }
                }
                function M() {
                    var U = O;
                    var R = b.series.pie.label.radius > 1 ? b.series.pie.label.radius : m * b.series.pie.label.radius;
                    for (var T = 0; T < H.length; ++T) {
                        if (H[T].percent >= b.series.pie.label.threshold * 100) {
                            if (!S(H[T], U, T)) {
                                return false
                            }
                        }
                        U += H[T].angle
                    }
                    return true;
                    function S(ah, aa, Y) {
                        if (ah.data[0][1] == 0) {
                            return true
                        }
                        var aj = b.legend.labelFormatter, ai, W = b.series.pie.label.formatter;
                        if (aj) {
                            ai = aj(ah.label, ah)
                        } else {
                            ai = ah.label
                        }
                        if (W) {
                            ai = W(ai, ah)
                        }
                        var ab = ((aa + ah.angle) + aa) / 2;
                        var ag = s + Math.round(Math.cos(ab) * R);
                        var ae = n + Math.round(Math.sin(ab) * R) * b.series.pie.tilt;
                        var X = "<span class='pieLabel' id='pieLabel" + Y + "' style='position:absolute;top:" + ae + "px;left:" + ag + "px;'>" + ai + "</span>";
                        A.append(X);
                        var af = A.children("#pieLabel" + Y);
                        var V = (ae - af.height() / 2);
                        var Z = (ag - af.width() / 2);
                        af.css("top", V);
                        af.css("left", Z);
                        if (0 - V > 0 || 0 - Z > 0 || E - (V + af.height()) < 0 || C - (Z + af.width()) < 0) {
                            return false
                        }
                        if (b.series.pie.label.background.opacity != 0) {
                            var ac = b.series.pie.label.background.color;
                            if (ac == null) {
                                ac = ah.color
                            }
                            var ad = "top:" + V + "px;left:" + Z + "px;";
                            c("<div class='pieLabelBackground' style='position:absolute;width:" + af.width() + "px;height:" + af.height() + "px;" + ad + "background-color:" + ac + ";'></div>").css("opacity", b.series.pie.label.background.opacity).insertBefore(af)
                        }
                        return true
                    }
                }
            }
        }
        function y(B) {
            if (b.series.pie.innerRadius > 0) {
                B.save();
                var C = b.series.pie.innerRadius > 1 ? b.series.pie.innerRadius : m * b.series.pie.innerRadius;
                B.globalCompositeOperation = "destination-out";
                B.beginPath();
                B.fillStyle = b.series.pie.stroke.color;
                B.arc(0, 0, C, 0, Math.PI * 2, false);
                B.fill();
                B.closePath();
                B.restore();
                B.save();
                B.beginPath();
                B.strokeStyle = b.series.pie.stroke.color;
                B.arc(0, 0, C, 0, Math.PI * 2, false);
                B.stroke();
                B.closePath();
                B.restore()
            }
        }
        function p(E, F) {
            for (var G = false, D = -1, B = E.length, C = B - 1; ++D < B; C = D) {
                ((E[D][1] <= F[1] && F[1] < E[C][1]) || (E[C][1] <= F[1] && F[1] < E[D][1])) && (F[0] < (E[C][0] - E[D][0]) * (F[1] - E[D][1]) / (E[C][1] - E[D][1]) + E[D][0]) && (G = !G)
            }
            return G
        }
        function q(J, I) {
            var D = v.getData(), G = v.getOptions(), H = G.series.pie.radius > 1 ? G.series.pie.radius : m * G.series.pie.radius, M, K;
            for (var T = 0; T < D.length; ++T) {
                var P = D[T];
                if (P.pie.show) {
                    u.save();
                    u.beginPath();
                    u.moveTo(0, 0);
                    u.arc(0, 0, H, P.startAngle, P.startAngle + P.angle / 2, false);
                    u.arc(0, 0, H, P.startAngle + P.angle / 2, P.startAngle + P.angle, false);
                    u.closePath();
                    M = J - s;
                    K = I - n;
                    if (u.isPointInPath) {
                        if (u.isPointInPath(J - s, I - n)) {
                            u.restore();
                            return {
                                datapoint: [P.percent, P.data],
                                dataIndex: 0,
                                series: P,
                                seriesIndex: T
                            }
                        }
                    } else {
                        var S = H * Math.cos(P.startAngle)
                          , R = H * Math.sin(P.startAngle)
                          , E = H * Math.cos(P.startAngle + P.angle / 4)
                          , B = H * Math.sin(P.startAngle + P.angle / 4)
                          , N = H * Math.cos(P.startAngle + P.angle / 2)
                          , L = H * Math.sin(P.startAngle + P.angle / 2)
                          , V = H * Math.cos(P.startAngle + P.angle / 1.5)
                          , U = H * Math.sin(P.startAngle + P.angle / 1.5)
                          , F = H * Math.cos(P.startAngle + P.angle)
                          , C = H * Math.sin(P.startAngle + P.angle)
                          , Q = [[0, 0], [S, R], [E, B], [N, L], [V, U], [F, C]]
                          , O = [M, K];
                        if (p(Q, O)) {
                            u.restore();
                            return {
                                datapoint: [P.percent, P.data],
                                dataIndex: 0,
                                series: P,
                                seriesIndex: T
                            }
                        }
                    }
                    u.restore()
                }
            }
            return null
        }
        function r(B) {
            l("plothover", B)
        }
        function k(B) {
            l("plotclick", B)
        }
        function l(B, H) {
            var C = v.offset();
            var F = parseInt(H.pageX - C.left);
            var D = parseInt(H.pageY - C.top);
            var J = q(F, D);
            if (b.grid.autoHighlight) {
                for (var E = 0; E < i.length; ++E) {
                    var G = i[E];
                    if (G.auto == B && !(J && G.series == J.series)) {
                        g(G.series)
                    }
                }
            }
            if (J) {
                j(J.series, B)
            }
            var I = {
                pageX: H.pageX,
                pageY: H.pageY
            };
            A.trigger(B, [I, J])
        }
        function j(C, D) {
            var B = t(C);
            if (B == -1) {
                i.push({
                    series: C,
                    auto: D
                });
                v.triggerRedrawOverlay()
            } else {
                if (!D) {
                    i[B].auto = false
                }
            }
        }
        function g(C) {
            if (C == null) {
                i = [];
                v.triggerRedrawOverlay()
            }
            var B = t(C);
            if (B != -1) {
                i.splice(B, 1);
                v.triggerRedrawOverlay()
            }
        }
        function t(D) {
            for (var B = 0; B < i.length; ++B) {
                var C = i[B];
                if (C.series == D) {
                    return B
                }
            }
            return -1
        }
        function x(F, G) {
            var D = F.getOptions();
            var B = D.series.pie.radius > 1 ? D.series.pie.radius : m * D.series.pie.radius;
            G.save();
            G.translate(s, n);
            G.scale(1, D.series.pie.tilt);
            for (var E = 0; E < i.length; ++E) {
                C(i[E].series)
            }
            y(G);
            G.restore();
            function C(H) {
                if (H.angle <= 0 || isNaN(H.angle)) {
                    return
                }
                G.fillStyle = "rgba(255, 255, 255, " + D.series.pie.highlight.opacity + ")";
                G.beginPath();
                if (Math.abs(H.angle - Math.PI * 2) > 1e-9) {
                    G.moveTo(0, 0)
                }
                G.arc(0, 0, B, H.startAngle, H.startAngle + H.angle / 2, false);
                G.arc(0, 0, B, H.startAngle + H.angle / 2, H.startAngle + H.angle, false);
                G.closePath();
                G.fill()
            }
        }
    }
    var b = {
        series: {
            pie: {
                show: false,
                radius: "auto",
                innerRadius: 0,
                startAngle: 3 / 2,
                tilt: 1,
                shadow: {
                    left: 5,
                    top: 15,
                    alpha: 0.02
                },
                offset: {
                    top: 0,
                    left: "auto"
                },
                stroke: {
                    color: "#fff",
                    width: 1
                },
                label: {
                    show: "auto",
                    formatter: function(f, g) {
                        return "<div style='font-size:x-small;text-align:center;padding:2px;color:" + g.color + ";'>" + f + "<br/>" + Math.round(g.percent) + "%</div>"
                    },
                    radius: 1,
                    background: {
                        color: null,
                        opacity: 0
                    },
                    threshold: 0
                },
                combine: {
                    threshold: -1,
                    color: null,
                    label: "Other"
                },
                highlight: {
                    opacity: 0.5
                }
            }
        }
    };
    c.plot.plugins.push({
        init: d,
        options: b,
        name: "pie",
        version: "1.1"
    })
}
)(jQuery);
(function(a) {
    var k = {
        xaxis: {
            timezone: null,
            timeformat: null,
            twelveHourClock: false,
            monthNames: null
        }
    };
    function g(m, l) {
        return l * Math.floor(m / l)
    }
    function j(t, n, q, m) {
        if (typeof t.strftime == "function") {
            return t.strftime(n)
        }
        var w = function(y, r) {
            y = "" + y;
            r = "" + (r == null ? "0" : r);
            return y.length == 1 ? r + y : y
        };
        var l = [];
        var x = false;
        var v = t.getHours();
        var s = v < 12;
        if (q == null) {
            q = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
        }
        if (m == null) {
            m = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
        }
        var o;
        if (v > 12) {
            o = v - 12
        } else {
            if (v == 0) {
                o = 12
            } else {
                o = v
            }
        }
        for (var p = 0; p < n.length; ++p) {
            var u = n.charAt(p);
            if (x) {
                switch (u) {
                case "a":
                    u = "" + m[t.getDay()];
                    break;
                case "b":
                    u = "" + q[t.getMonth()];
                    break;
                case "d":
                    u = w(t.getDate());
                    break;
                case "e":
                    u = w(t.getDate(), " ");
                    break;
                case "H":
                    u = w(v);
                    break;
                case "I":
                    u = w(o);
                    break;
                case "l":
                    u = w(o, " ");
                    break;
                case "m":
                    u = w(t.getMonth() + 1);
                    break;
                case "M":
                    u = w(t.getMinutes());
                    break;
                case "q":
                    u = "" + (Math.floor(t.getMonth() / 3) + 1);
                    break;
                case "S":
                    u = w(t.getSeconds());
                    break;
                case "y":
                    u = w(t.getFullYear() % 100);
                    break;
                case "Y":
                    u = "" + t.getFullYear();
                    break;
                case "p":
                    u = (s) ? ("am") : ("pm");
                    break;
                case "P":
                    u = (s) ? ("AM") : ("PM");
                    break;
                case "w":
                    u = "" + t.getDay();
                    break
                }
                l.push(u);
                x = false
            } else {
                if (u == "%") {
                    x = true
                } else {
                    l.push(u)
                }
            }
        }
        return l.join("")
    }
    function i(q) {
        function l(s, r, p, t) {
            s[r] = function() {
                return p[t].apply(p, arguments)
            }
        }
        var n = {
            date: q
        };
        if (q.strftime != undefined) {
            l(n, "strftime", q, "strftime")
        }
        l(n, "getTime", q, "getTime");
        l(n, "setTime", q, "setTime");
        var m = ["Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds"];
        for (var o = 0; o < m.length; o++) {
            l(n, "get" + m[o], q, "getUTC" + m[o]);
            l(n, "set" + m[o], q, "setUTC" + m[o])
        }
        return n
    }
    function e(m, l) {
        if (l.timezone == "browser") {
            return new Date(m)
        } else {
            if (!l.timezone || l.timezone == "utc") {
                return i(new Date(m))
            } else {
                if (typeof timezoneJS != "undefined" && typeof timezoneJS.Date != "undefined") {
                    var n = new timezoneJS.Date();
                    n.setTimezone(l.timezone);
                    n.setTime(m);
                    return n
                } else {
                    return i(new Date(m))
                }
            }
        }
    }
    var c = {
        second: 1000,
        minute: 60 * 1000,
        hour: 60 * 60 * 1000,
        day: 24 * 60 * 60 * 1000,
        month: 30 * 24 * 60 * 60 * 1000,
        quarter: 3 * 30 * 24 * 60 * 60 * 1000,
        year: 365.2425 * 24 * 60 * 60 * 1000
    };
    var f = [[1, "second"], [2, "second"], [5, "second"], [10, "second"], [30, "second"], [1, "minute"], [2, "minute"], [5, "minute"], [10, "minute"], [30, "minute"], [1, "hour"], [2, "hour"], [4, "hour"], [8, "hour"], [12, "hour"], [1, "day"], [2, "day"], [3, "day"], [0.25, "month"], [0.5, "month"], [1, "month"], [2, "month"]];
    var b = f.concat([[3, "month"], [6, "month"], [1, "year"]]);
    var d = f.concat([[1, "quarter"], [2, "quarter"], [1, "year"]]);
    function h(l) {
        l.hooks.processDatapoints.push(function(o, m, n) {
            a.each(o.getAxes(), function(r, p) {
                var q = p.options;
                if (q.mode == "time") {
                    p.tickGenerator = function(y) {
                        var E = [];
                        var D = e(y.min, q);
                        var w = 0;
                        var H = (q.tickSize && q.tickSize[1] === "quarter") || (q.minTickSize && q.minTickSize[1] === "quarter") ? d : b;
                        if (q.minTickSize != null) {
                            if (typeof q.tickSize == "number") {
                                w = q.tickSize
                            } else {
                                w = q.minTickSize[0] * c[q.minTickSize[1]]
                            }
                        }
                        for (var C = 0; C < H.length - 1; ++C) {
                            if (y.delta < (H[C][0] * c[H[C][1]] + H[C + 1][0] * c[H[C + 1][1]]) / 2 && H[C][0] * c[H[C][1]] >= w) {
                                break
                            }
                        }
                        var J = H[C][0];
                        var F = H[C][1];
                        if (F == "year") {
                            if (q.minTickSize != null && q.minTickSize[1] == "year") {
                                J = Math.floor(q.minTickSize[0])
                            } else {
                                var t = Math.pow(10, Math.floor(Math.log(y.delta / c.year) / Math.LN10));
                                var s = (y.delta / c.year) / t;
                                if (s < 1.5) {
                                    J = 1
                                } else {
                                    if (s < 3) {
                                        J = 2
                                    } else {
                                        if (s < 7.5) {
                                            J = 5
                                        } else {
                                            J = 10
                                        }
                                    }
                                }
                                J *= t
                            }
                            if (J < 1) {
                                J = 1
                            }
                        }
                        y.tickSize = q.tickSize || [J, F];
                        var B = y.tickSize[0];
                        F = y.tickSize[1];
                        var x = B * c[F];
                        if (F == "second") {
                            D.setSeconds(g(D.getSeconds(), B))
                        } else {
                            if (F == "minute") {
                                D.setMinutes(g(D.getMinutes(), B))
                            } else {
                                if (F == "hour") {
                                    D.setHours(g(D.getHours(), B))
                                } else {
                                    if (F == "month") {
                                        D.setMonth(g(D.getMonth(), B))
                                    } else {
                                        if (F == "quarter") {
                                            D.setMonth(3 * g(D.getMonth() / 3, B))
                                        } else {
                                            if (F == "year") {
                                                D.setFullYear(g(D.getFullYear(), B))
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        D.setMilliseconds(0);
                        if (x >= c.minute) {
                            D.setSeconds(0)
                        } else {
                            if (x >= c.hour) {
                                D.setMinutes(0)
                            } else {
                                if (x >= c.day) {
                                    D.setHours(0)
                                } else {
                                    if (x >= c.day * 4) {
                                        D.setDate(1)
                                    } else {
                                        if (x >= c.month * 2) {
                                            D.setMonth(g(D.getMonth(), 3))
                                        } else {
                                            if (x >= c.quarter * 2) {
                                                D.setMonth(g(D.getMonth(), 6))
                                            } else {
                                                if (x >= c.year) {
                                                    D.setMonth(0)
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        var I = 0;
                        var G = Number.NaN;
                        var z;
                        do {
                            z = G;
                            G = D.getTime();
                            E.push(G);
                            if (F == "month" || F == "quarter") {
                                if (B < 1) {
                                    D.setDate(1);
                                    var u = D.getTime();
                                    D.setMonth(D.getMonth() + (F == "quarter" ? 3 : 1));
                                    var A = D.getTime();
                                    D.setTime(G + I * c.hour + (A - u) * B);
                                    I = D.getHours();
                                    D.setHours(0)
                                } else {
                                    D.setMonth(D.getMonth() + B * (F == "quarter" ? 3 : 1))
                                }
                            } else {
                                if (F == "year") {
                                    D.setFullYear(D.getFullYear() + B)
                                } else {
                                    D.setTime(G + x)
                                }
                            }
                        } while (G < y.max && G != z);
                        return E
                    }
                    ;
                    p.tickFormatter = function(z, u) {
                        var x = e(z, u.options);
                        if (q.timeformat != null) {
                            return j(x, q.timeformat, q.monthNames, q.dayNames)
                        }
                        var D = (u.options.tickSize && u.options.tickSize[1] == "quarter") || (u.options.minTickSize && u.options.minTickSize[1] == "quarter");
                        var C = u.tickSize[0] * c[u.tickSize[1]];
                        var y = u.max - u.min;
                        var B = (q.twelveHourClock) ? " %p" : "";
                        var A = (q.twelveHourClock) ? "%I" : "%H";
                        var s;
                        if (C < c.minute) {
                            s = A + ":%M:%S" + B
                        } else {
                            if (C < c.day) {
                                if (y < 2 * c.day) {
                                    s = A + ":%M" + B
                                } else {
                                    s = "%b %d " + A + ":%M" + B
                                }
                            } else {
                                if (C < c.month) {
                                    s = "%b %d"
                                } else {
                                    if ((D && C < c.quarter) || (!D && C < c.year)) {
                                        if (y < c.year) {
                                            s = "%b"
                                        } else {
                                            s = "%b %Y"
                                        }
                                    } else {
                                        if (D && C < c.year) {
                                            if (y < c.year) {
                                                s = "Q%q"
                                            } else {
                                                s = "Q%q %Y"
                                            }
                                        } else {
                                            s = "%Y"
                                        }
                                    }
                                }
                            }
                        }
                        var w = j(x, s, q.monthNames, q.dayNames);
                        return w
                    }
                }
            })
        })
    }
    a.plot.plugins.push({
        init: h,
        options: k,
        name: "time",
        version: "1.0"
    });
    a.plot.formatDate = j
}
)(jQuery);
indexOfArray = function(b, c) {
    if (typeof (b.indexOf) != "undefined") {
        return b.indexOf(c)
    }
    var a = b.length;
    var d = Number(arguments[2]) || 0;
    d = (d < 0) ? Math.ceil(d) : Math.floor(d);
    if (d < 0) {
        d += a
    }
    for (; d < a; d++) {
        if (b[d] === c) {
            return d
        }
    }
    return -1
}
;
/*!
 * jQuery Browser Plugin 0.0.7
 * https://github.com/gabceb/jquery-browser-plugin
 *
 * Original jquery-browser code Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * http://jquery.org/license
 *
 * Modifications Copyright 2015 Gabriel Cebrian
 * https://github.com/gabceb
 *
 * Released under the MIT license
 *
 * Date: 20-01-2015
 */
;!function(b) {
    "function" == typeof define && define.amd ? define(["jquery"], function(a) {
        b(a)
    }) : "object" == typeof module && "object" == typeof module.exports ? module.exports = b(require("jquery")) : b(window.jQuery)
}(function(d) {
    function c(z) {
        void 0 === z && (z = window.navigator.userAgent),
        z = z.toLowerCase();
        var y = /(edge)\/([\w.]+)/.exec(z) || /(opr)[\/]([\w.]+)/.exec(z) || /(chrome)[ \/]([\w.]+)/.exec(z) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(z) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(z) || /(webkit)[ \/]([\w.]+)/.exec(z) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(z) || /(msie) ([\w.]+)/.exec(z) || z.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(z) || z.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(z) || []
          , x = /(ipad)/.exec(z) || /(ipod)/.exec(z) || /(iphone)/.exec(z) || /(kindle)/.exec(z) || /(silk)/.exec(z) || /(android)/.exec(z) || /(windows phone)/.exec(z) || /(win)/.exec(z) || /(mac)/.exec(z) || /(linux)/.exec(z) || /(cros)/.exec(z) || /(playbook)/.exec(z) || /(bb)/.exec(z) || /(blackberry)/.exec(z) || []
          , w = {}
          , v = {
            browser: y[5] || y[3] || y[1] || "",
            version: y[2] || y[4] || "0",
            versionNumber: y[4] || y[2] || "0",
            platform: x[0] || ""
        };
        if (v.browser && (w[v.browser] = !0,
        w.version = v.version,
        w.versionNumber = parseInt(v.versionNumber, 10)),
        v.platform && (w[v.platform] = !0),
        (w.android || w.bb || w.blackberry || w.ipad || w.iphone || w.ipod || w.kindle || w.playbook || w.silk || w["windows phone"]) && (w.mobile = !0),
        (w.cros || w.mac || w.linux || w.win) && (w.desktop = !0),
        (w.chrome || w.opr || w.safari) && (w.webkit = !0),
        w.rv || w.edge) {
            var u = "msie";
            v.browser = u,
            w[u] = !0
        }
        if (w.safari && w.blackberry) {
            var t = "blackberry";
            v.browser = t,
            w[t] = !0
        }
        if (w.safari && w.playbook) {
            var s = "playbook";
            v.browser = s,
            w[s] = !0
        }
        if (w.bb) {
            var r = "blackberry";
            v.browser = r,
            w[r] = !0
        }
        if (w.opr) {
            var q = "opera";
            v.browser = q,
            w[q] = !0
        }
        if (w.safari && w.android) {
            var p = "android";
            v.browser = p,
            w[p] = !0
        }
        if (w.safari && w.kindle) {
            var o = "kindle";
            v.browser = o,
            w[o] = !0
        }
        if (w.safari && w.silk) {
            var n = "silk";
            v.browser = n,
            w[n] = !0
        }
        return w.name = v.browser,
        w.platform = v.platform,
        w
    }
    return window.jQBrowser = c(window.navigator.userAgent),
    window.jQBrowser.uaMatch = c,
    d && (d.browser = window.jQBrowser),
    window.jQBrowser
});
window.Modernizr = (function(l, q, g) {
    var c = "2.6.2", j = {}, y = q.documentElement, z = "modernizr", w = q.createElement(z), m = w.style, d = q.createElement("input"), t = {}.toString, h = {}, b = {}, r = {}, v = [], s = v.slice, a, o = ({}).hasOwnProperty, x;
    if (!i(o, "undefined") && !i(o.call, "undefined")) {
        x = function(B, C) {
            return o.call(B, C)
        }
    } else {
        x = function(B, C) {
            return ((C in B) && i(B.constructor.prototype[C], "undefined"))
        }
    }
    if (!Function.prototype.bind) {
        Function.prototype.bind = function A(D) {
            var E = this;
            if (typeof E != "function") {
                throw new TypeError()
            }
            var B = s.call(arguments, 1)
              , C = function() {
                if (this instanceof C) {
                    var I = function() {};
                    I.prototype = E.prototype;
                    var H = new I();
                    var G = E.apply(H, B.concat(s.call(arguments)));
                    if (Object(G) === G) {
                        return G
                    }
                    return H
                } else {
                    return E.apply(D, B.concat(s.call(arguments)))
                }
            };
            return C
        }
    }
    function n(B) {
        m.cssText = B
    }
    function f(C, B) {
        return n(prefixes.join(C + ";") + (B || ""))
    }
    function i(C, B) {
        return typeof C === B
    }
    function k(C, B) {
        return !!~("" + C).indexOf(B)
    }
    function u(C, F, E) {
        for (var B in C) {
            var D = F[C[B]];
            if (D !== g) {
                if (E === false) {
                    return C[B]
                }
                if (i(D, "function")) {
                    return D.bind(E || F)
                }
                return D
            }
        }
        return false
    }
    function p() {
        j.input = (function(D) {
            for (var C = 0, B = D.length; C < B; C++) {
                r[D[C]] = !!(D[C]in d)
            }
            if (r.list) {
                r.list = !!(q.createElement("datalist") && l.HTMLDataListElement)
            }
            return r
        }
        )("autocomplete autofocus list placeholder max min multiple pattern required step".split(" "))
    }
    for (var e in h) {
        if (x(h, e)) {
            a = e.toLowerCase();
            j[a] = h[e]();
            v.push((j[a] ? "" : "no-") + a)
        }
    }
    j.input || p();
    j.addTest = function(C, D) {
        if (typeof C == "object") {
            for (var B in C) {
                if (x(C, B)) {
                    j.addTest(B, C[B])
                }
            }
        } else {
            C = C.toLowerCase();
            if (j[C] !== g) {
                return j
            }
            D = typeof D == "function" ? D() : D;
            if (typeof enableClasses !== "undefined" && enableClasses) {
                y.className += " " + (D ? "" : "no-") + C
            }
            j[C] = D
        }
        return j
    }
    ;
    n("");
    w = d = null;
    j._version = c;
    return j
}
)(this, this.document);
(function(ad, ac, ab) {
    function aa(b) {
        return "[object Function]" == P.call(b)
    }
    function Z(b) {
        return "string" == typeof b
    }
    function Y() {}
    function X(b) {
        return !b || "loaded" == b || "complete" == b || "uninitialized" == b
    }
    function W() {
        var b = O.shift();
        M = 1,
        b ? b.t ? R(function() {
            ("c" == b.t ? L.injectCss : L.injectJs)(b.s, 0, b.a, b.x, b.e, 1)
        }, 0) : (b(),
        W()) : M = 0
    }
    function V(w, v, t, s, q, p, n) {
        function m(a) {
            if (!g && X(h.readyState) && (x.r = g = 1,
            !M && W(),
            h.onload = h.onreadystatechange = null,
            a)) {
                "img" != w && R(function() {
                    I.removeChild(h)
                }, 50);
                for (var c in D[v]) {
                    D[v].hasOwnProperty(c) && D[v][c].onload()
                }
            }
        }
        var n = n || L.errorTimeout
          , h = ac.createElement(w)
          , g = 0
          , b = 0
          , x = {
            t: t,
            s: v,
            e: q,
            a: p,
            x: n
        };
        1 === D[v] && (b = 1,
        D[v] = []),
        "object" == w ? h.data = v : (h.src = v,
        h.type = w),
        h.width = h.height = "0",
        h.onerror = h.onload = h.onreadystatechange = function() {
            m.call(this, b)
        }
        ,
        O.splice(s, 0, x),
        "img" != w && (b || 2 === D[v] ? (I.insertBefore(h, J ? null : Q),
        R(m, n)) : D[v].push(h))
    }
    function U(g, e, j, i, h) {
        return M = 0,
        e = e || "j",
        Z(g) ? V("c" == e ? G : H, g, e, this.i++, j, i, h) : (O.splice(this.i++, 0, g),
        1 == O.length && W()),
        this
    }
    function T() {
        var b = L;
        return b.loader = {
            load: U,
            i: 0
        },
        b
    }
    var S = ac.documentElement, R = ad.setTimeout, Q = ac.getElementsByTagName("script")[0], P = {}.toString, O = [], M = 0, K = "MozAppearance"in S.style, J = K && !!ac.createRange().compareNode, I = J ? S : Q.parentNode, S = ad.opera && "[object Opera]" == P.call(ad.opera), S = !!ac.attachEvent && !S, H = K ? "object" : S ? "script" : "img", G = S ? "script" : H, F = Array.isArray || function(b) {
        return "[object Array]" == P.call(b)
    }
    , E = [], D = {}, C = {
        timeout: function(d, c) {
            return c.length && (d.timeout = c[0]),
            d
        }
    }, N, L;
    L = function(e) {
        function c(i) {
            var i = i.split("!"), h = E.length, q = i.pop(), p = i.length, q = {
                url: q,
                origUrl: q,
                prefixes: i
            }, o, l, j;
            for (l = 0; l < p; l++) {
                j = i[l].split("="),
                (o = C[j.shift()]) && (q = o(q, j))
            }
            for (l = 0; l < h; l++) {
                q = E[l](q)
            }
            return q
        }
        function n(b, s, r, q, p) {
            var o = c(b)
              , l = o.autoCallback;
            o.url.split(".").pop().split("?").shift(),
            o.bypass || (s && (s = aa(s) ? s : s[b] || s[q] || s[b.split("/").pop().split("?")[0]]),
            o.instead ? o.instead(b, s, r, q, p) : (D[o.url] ? o.noexec = !0 : D[o.url] = 1,
            r.load(o.url, o.forceCSS || !o.forceJS && "css" == o.url.split(".").pop().split("?").shift() ? "c" : ab, o.noexec, o.attrs, o.timeout),
            (aa(s) || aa(l)) && r.load(function() {
                T(),
                s && s(o.origUrl, p, q),
                l && l(o.origUrl, p, q),
                D[o.url] = 2
            })))
        }
        function m(w, v) {
            function u(b, h) {
                if (b) {
                    if (Z(b)) {
                        h || (r = function() {
                            var i = [].slice.call(arguments);
                            q.apply(this, i),
                            p()
                        }
                        ),
                        n(b, r, v, 0, t)
                    } else {
                        if (Object(b) === b) {
                            for (g in o = function() {
                                var a = 0, i;
                                for (i in b) {
                                    b.hasOwnProperty(i) && a++
                                }
                                return a
                            }(),
                            b) {
                                b.hasOwnProperty(g) && (!h && !--o && (aa(r) ? r = function() {
                                    var i = [].slice.call(arguments);
                                    q.apply(this, i),
                                    p()
                                }
                                : r[g] = function(i) {
                                    return function() {
                                        var a = [].slice.call(arguments);
                                        i && i.apply(this, a),
                                        p()
                                    }
                                }(q[g])),
                                n(b[g], r, v, g, t))
                            }
                        }
                    }
                } else {
                    !h && p()
                }
            }
            var t = !!w.test, s = w.load || w.both, r = w.callback || Y, q = r, p = w.complete || Y, o, g;
            u(t ? w.yep : w.nope, !!s),
            s && u(s)
        }
        var k, f, d = this.yepnope.loader;
        if (Z(e)) {
            n(e, 0, d, 0)
        } else {
            if (F(e)) {
                for (k = 0; k < e.length; k++) {
                    f = e[k],
                    Z(f) ? n(f, 0, d, 0) : F(f) ? L(f) : Object(f) === f && m(f, d)
                }
            } else {
                Object(e) === e && m(e, d)
            }
        }
    }
    ,
    L.addPrefix = function(d, c) {
        C[d] = c
    }
    ,
    L.addFilter = function(b) {
        E.push(b)
    }
    ,
    L.errorTimeout = 10000,
    null == ac.readyState && ac.addEventListener && (ac.readyState = "loading",
    ac.addEventListener("DOMContentLoaded", N = function() {
        ac.removeEventListener("DOMContentLoaded", N, 0),
        ac.readyState = "complete"
    }
    , 0)),
    ad.yepnope = T(),
    ad.yepnope.executeStack = W,
    ad.yepnope.injectJs = function(r, q, p, n, m, h) {
        var g = ac.createElement("script"), f, b, n = n || L.errorTimeout;
        g.src = r;
        for (b in p) {
            g.setAttribute(b, p[b])
        }
        q = h ? W : q || Y,
        g.onreadystatechange = g.onload = function() {
            !f && X(g.readyState) && (f = 1,
            q(),
            g.onload = g.onreadystatechange = null)
        }
        ,
        R(function() {
            f || (f = 1,
            q(1))
        }, n),
        m ? g.onload() : Q.parentNode.insertBefore(g, Q)
    }
    ,
    ad.yepnope.injectCss = function(b, n, m, l, k, h) {
        var l = ac.createElement("link"), f, n = h ? W : n || Y;
        l.href = b,
        l.rel = "stylesheet",
        l.type = "text/css";
        for (f in m) {
            l.setAttribute(f, m[f])
        }
        k || (Q.parentNode.insertBefore(l, Q),
        R(n, 0))
    }
}
)(this, document);
Modernizr.load = function() {
    yepnope.apply(window, [].slice.call(arguments, 0))
}
;
/*!
 *  howler.js v2.0.0-beta
 *  howlerjs.com
 *
 *  (c) 2013-2015, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
(function() {
    var n = null;
    var c = true;
    var l = false;
    f();
    if (c) {
        var g = (typeof n.createGain === "undefined") ? n.createGainNode() : n.createGain();
        g.gain.value = 1;
        g.connect(n.destination)
    }
    var d = function() {
        this.init()
    };
    d.prototype = {
        init: function() {
            var o = this || m;
            o._codecs = {};
            o._howls = [];
            o._muted = false;
            o._volume = 1;
            o.iOSAutoEnable = true;
            o.noAudio = l;
            o.usingWebAudio = c;
            o.ctx = n;
            if (!l) {
                o._setupCodecs()
            }
            return o
        },
        volume: function(r) {
            var o = this || m;
            r = parseFloat(r);
            if (typeof r !== "undefined" && r >= 0 && r <= 1) {
                o._volume = r;
                if (c) {
                    g.gain.value = r
                }
                for (var q = 0; q < o._howls.length; q++) {
                    if (!o._howls[q]._webAudio) {
                        var s = o._howls[q]._getSoundIds();
                        for (var p = 0; p < s.length; p++) {
                            var t = o._howls[q]._soundById(s[p]);
                            if (t && t._node) {
                                t._node.volume = t._volume * r
                            }
                        }
                    }
                }
                return o
            }
            return o._volume
        },
        mute: function(s) {
            var o = this || m;
            o._muted = s;
            if (c) {
                g.gain.value = s ? 0 : o._volume
            }
            for (var q = 0; q < o._howls.length; q++) {
                if (!o._howls[q]._webAudio) {
                    var r = o._howls[q]._getSoundIds();
                    for (var p = 0; p < r.length; p++) {
                        var t = o._howls[q]._soundById(r[p]);
                        if (t && t._node) {
                            t._node.muted = (s) ? true : t._muted
                        }
                    }
                }
            }
            return o
        },
        codecs: function(o) {
            return (this || m)._codecs[o]
        },
        _setupCodecs: function() {
            var o = this || m;
            var p = new Audio();
            var q = p.canPlayType("audio/mpeg;").replace(/^no$/, "");
            o._codecs = {
                mp3: !!(q || p.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!q,
                opus: !!p.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!p.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!p.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!p.canPlayType("audio/aac;").replace(/^no$/, ""),
                m4a: !!(p.canPlayType("audio/x-m4a;") || p.canPlayType("audio/m4a;") || p.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(p.canPlayType("audio/x-mp4;") || p.canPlayType("audio/mp4;") || p.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")
            };
            return o
        },
        _enableiOSAudio: function() {
            var o = this || m;
            if (n && (o._iOSEnabled || !/iPhone|iPad|iPod/i.test(navigator.userAgent))) {
                return
            }
            o._iOSEnabled = false;
            var p = function() {
                var q = n.createBuffer(1, 1, 22050);
                var r = n.createBufferSource();
                r.buffer = q;
                r.connect(n.destination);
                if (typeof r.start === "undefined") {
                    r.noteOn(0)
                } else {
                    r.start(0)
                }
                setTimeout(function() {
                    if ((r.playbackState === r.PLAYING_STATE || r.playbackState === r.FINISHED_STATE)) {
                        o._iOSEnabled = true;
                        o.iOSAutoEnable = false;
                        window.removeEventListener("touchstart", p, false)
                    }
                }, 0)
            };
            window.addEventListener("touchstart", p, false);
            return o
        }
    };
    var m = new d();
    var e = function(q) {
        var p = this;
        if (!q.src || q.src.length === 0) {
            console.error("An array of source files must be passed with any new Howl.");
            return
        }
        p.init(q)
    };
    e.prototype = {
        init: function(q) {
            var p = this;
            p._autoplay = q.autoplay || false;
            p._ext = q.ext || null;
            p._html5 = q.html5 || false;
            p._muted = q.mute || false;
            p._loop = q.loop || false;
            p._pool = q.pool || 5;
            p._preload = (typeof q.preload === "boolean") ? q.preload : true;
            p._rate = q.rate || 1;
            p._sprite = q.sprite || {};
            p._src = (typeof q.src !== "string") ? q.src : [q.src];
            p._volume = q.volume !== undefined ? q.volume : 1;
            p._duration = 0;
            p._loaded = false;
            p._sounds = [];
            p._endTimers = {};
            p._onend = q.onend ? [{
                fn: q.onend
            }] : [];
            p._onfaded = q.onfaded ? [{
                fn: q.onfaded
            }] : [];
            p._onload = q.onload ? [{
                fn: q.onload
            }] : [];
            p._onloaderror = q.onloaderror ? [{
                fn: q.onloaderror
            }] : [];
            p._onpause = q.onpause ? [{
                fn: q.onpause
            }] : [];
            p._onplay = q.onplay ? [{
                fn: q.onplay
            }] : [];
            p._webAudio = c && !p._html5;
            if (typeof n !== "undefined" && n && m.iOSAutoEnable) {
                m._enableiOSAudio()
            }
            m._howls.push(p);
            if (p._preload) {
                p.load()
            }
            return p
        },
        load: function() {
            var o = this;
            var p = null;
            if (l) {
                o._emit("loaderror");
                return
            }
            if (typeof o._src === "string") {
                o._src = [o._src]
            }
            for (var q = 0; q < o._src.length; q++) {
                var r, s;
                if (o._ext && o._ext[q]) {
                    r = o._ext[q]
                } else {
                    s = o._src[q];
                    r = /^data:audio\/([^;,]+);/i.exec(s);
                    if (!r) {
                        r = /\.([^.]+)$/.exec(s.split("?", 1)[0])
                    }
                    if (r) {
                        r = r[1].toLowerCase()
                    }
                }
                if (m.codecs(r)) {
                    p = o._src[q];
                    break
                }
            }
            if (!p) {
                o._emit("loaderror");
                return
            }
            o._src = p;
            new i(o);
            if (o._webAudio) {
                k(o)
            }
            return o
        },
        play: function(A) {
            var B = this;
            var x = arguments;
            var o = null;
            if (typeof A === "number") {
                o = A;
                A = null
            } else {
                if (typeof A === "undefined") {
                    A = "__default";
                    var v = 0;
                    for (var u = 0; u < B._sounds.length; u++) {
                        if (B._sounds[u]._paused && !B._sounds[u]._ended) {
                            v++;
                            o = B._sounds[u]._id
                        }
                    }
                    if (v === 1) {
                        A = null
                    } else {
                        o = null
                    }
                }
            }
            var z = o ? B._soundById(o) : B._inactiveSound();
            if (!z) {
                return null
            }
            if (o && !A) {
                A = z._sprite || "__default"
            }
            if (!B._loaded && !B._sprite[A]) {
                B.once("load", function() {
                    B.play(B._soundById(z._id) ? z._id : undefined)
                });
                return z._id
            }
            if (o && !z._paused) {
                return z._id
            }
            var p = z._seek > 0 ? z._seek : B._sprite[A][0] / 1000;
            var t = ((B._sprite[A][0] + B._sprite[A][1]) / 1000) - p;
            var y = function() {
                var C = !!(z._loop || B._sprite[A][2]);
                B._emit("end", z._id);
                if (!B._webAudio && C) {
                    B.stop(z._id).play(z._id)
                }
                if (B._webAudio && C) {
                    B._emit("play", z._id);
                    z._seek = z._start || 0;
                    z._playStart = n.currentTime;
                    B._endTimers[z._id] = setTimeout(y, ((z._stop - z._start) * 1000) / Math.abs(B._rate))
                }
                if (B._webAudio && !C) {
                    z._paused = true;
                    z._ended = true;
                    z._seek = z._start || 0;
                    B._clearTimer(z._id);
                    z._node.bufferSource = null
                }
                if (!B._webAudio && !C) {
                    B.stop(z._id)
                }
            };
            B._endTimers[z._id] = setTimeout(y, (t * 1000) / Math.abs(B._rate));
            z._paused = false;
            z._ended = false;
            z._sprite = A;
            z._seek = p;
            z._start = B._sprite[A][0] / 1000;
            z._stop = (B._sprite[A][0] + B._sprite[A][1]) / 1000;
            z._loop = !!(z._loop || B._sprite[A][2]);
            var s = z._node;
            if (B._webAudio) {
                var w = function() {
                    B._refreshBuffer(z);
                    var C = (z._muted || B._muted) ? 0 : z._volume * m.volume();
                    s.gain.setValueAtTime(C, n.currentTime);
                    z._playStart = n.currentTime;
                    if (typeof s.bufferSource.start === "undefined") {
                        s.bufferSource.noteGrainOn(0, p, t)
                    } else {
                        s.bufferSource.start(0, p, t)
                    }
                    if (!B._endTimers[z._id]) {
                        B._endTimers[z._id] = setTimeout(y, (t * 1000) / Math.abs(B._rate))
                    }
                    if (!x[1]) {
                        setTimeout(function() {
                            B._emit("play", z._id)
                        }, 0)
                    }
                };
                if (B._loaded) {
                    w()
                } else {
                    B.once("load", w);
                    B._clearTimer(z._id)
                }
            } else {
                var r = function() {
                    s.currentTime = p;
                    s.muted = z._muted || B._muted || m._muted || s.muted;
                    s.volume = z._volume * m.volume();
                    s.playbackRate = B._rate;
                    setTimeout(function() {
                        s.play();
                        if (!x[1]) {
                            B._emit("play", z._id)
                        }
                    }, 0)
                };
                if (s.readyState === 4 || !s.readyState && navigator.isCocoonJS) {
                    r()
                } else {
                    var q = function() {
                        B._endTimers[z._id] = setTimeout(y, (t * 1000) / Math.abs(B._rate));
                        r();
                        s.removeEventListener("canplaythrough", q, false)
                    };
                    s.addEventListener("canplaythrough", q, false);
                    B._clearTimer(z._id)
                }
            }
            return z._id
        },
        pause: function(s) {
            var o = this;
            if (!o._loaded) {
                o.once("play", function() {
                    o.pause(s)
                });
                return o
            }
            var q = o._getSoundIds(s);
            for (var p = 0; p < q.length; p++) {
                o._clearTimer(q[p]);
                var r = o._soundById(q[p]);
                if (r && !r._paused) {
                    r._seek = o.seek(q[p]);
                    r._paused = true;
                    if (o._webAudio) {
                        if (!r._node.bufferSource) {
                            return o
                        }
                        if (typeof r._node.bufferSource.stop === "undefined") {
                            r._node.bufferSource.noteOff(0)
                        } else {
                            r._node.bufferSource.stop(0)
                        }
                        r._node.bufferSource = null
                    } else {
                        if (!isNaN(r._node.duration)) {
                            r._node.pause()
                        }
                    }
                    if (!arguments[1]) {
                        o._emit("pause", r._id)
                    }
                }
            }
            return o
        },
        stop: function(s) {
            var o = this;
            if (!o._loaded) {
                if (typeof o._sounds[0]._sprite !== "undefined") {
                    o.once("play", function() {
                        o.stop(s)
                    })
                }
                return o
            }
            var q = o._getSoundIds(s);
            for (var p = 0; p < q.length; p++) {
                o._clearTimer(q[p]);
                var r = o._soundById(q[p]);
                if (r && !r._paused) {
                    r._seek = r._start || 0;
                    r._paused = true;
                    r._ended = true;
                    if (o._webAudio && r._node) {
                        if (!r._node.bufferSource) {
                            return o
                        }
                        if (typeof r._node.bufferSource.stop === "undefined") {
                            r._node.bufferSource.noteOff(0)
                        } else {
                            r._node.bufferSource.stop(0)
                        }
                        r._node.bufferSource = null
                    } else {
                        if (r._node && !isNaN(r._node.duration)) {
                            r._node.pause();
                            r._node.currentTime = r._start || 0
                        }
                    }
                }
            }
            return o
        },
        mute: function(r, t) {
            var o = this;
            if (!o._loaded) {
                o.once("play", function() {
                    o.mute(r, t)
                });
                return o
            }
            if (typeof t === "undefined") {
                if (typeof r === "boolean") {
                    o._muted = r
                } else {
                    return o._muted
                }
            }
            var q = o._getSoundIds(t);
            for (var p = 0; p < q.length; p++) {
                var s = o._soundById(q[p]);
                if (s) {
                    s._muted = r;
                    if (o._webAudio && s._node) {
                        s._node.gain.setValueAtTime(r ? 0 : s._volume * m.volume(), n.currentTime)
                    } else {
                        if (s._node) {
                            s._node.muted = m._muted ? true : r
                        }
                    }
                }
            }
            return o
        },
        volume: function() {
            var o = this;
            var q = arguments;
            var s, v;
            if (q.length === 0) {
                return o._volume
            } else {
                if (q.length === 1) {
                    var t = o._getSoundIds();
                    var p = t.indexOf(q[0]);
                    if (p >= 0) {
                        v = parseInt(q[0], 10)
                    } else {
                        s = parseFloat(q[0])
                    }
                } else {
                    if (q.length === 2) {
                        s = parseFloat(q[0]);
                        v = parseInt(q[1], 10)
                    }
                }
            }
            var u;
            if (typeof s !== "undefined" && s >= 0 && s <= 1) {
                if (!o._loaded) {
                    o.once("play", function() {
                        o.volume.apply(o, q)
                    });
                    return o
                }
                if (typeof v === "undefined") {
                    o._volume = s
                }
                v = o._getSoundIds(v);
                for (var r = 0; r < v.length; r++) {
                    u = o._soundById(v[r]);
                    if (u) {
                        u._volume = s;
                        if (o._webAudio && u._node) {
                            u._node.gain.setValueAtTime(s * m.volume(), n.currentTime)
                        } else {
                            if (u._node) {
                                u._node.volume = s * m.volume()
                            }
                        }
                    }
                }
            } else {
                u = v ? o._soundById(v) : o._sounds[0];
                return u ? u._volume : 0
            }
            return o
        },
        fade: function(y, z, u, q) {
            var B = this;
            if (!B._loaded) {
                B.once("play", function() {
                    B.fade(y, z, u, q)
                });
                return B
            }
            B.volume(y, q);
            var o = B._getSoundIds(q);
            for (var t = 0; t < o.length; t++) {
                var A = B._soundById(o[t]);
                if (A) {
                    if (B._webAudio) {
                        var p = n.currentTime;
                        var s = p + (u / 1000);
                        A._volume = y;
                        A._node.gain.setValueAtTime(y, p);
                        A._node.gain.linearRampToValueAtTime(z, s);
                        setTimeout(function(D, C) {
                            setTimeout(function() {
                                C._volume = z;
                                B._emit("faded", D)
                            }, s - n.currentTime > 0 ? Math.ceil((s - n.currentTime) * 1000) : 0)
                        }
                        .bind(B, o[t], A), u)
                    } else {
                        var x = Math.abs(y - z);
                        var r = y > z ? "out" : "in";
                        var w = x / 0.01;
                        var v = u / w;
                        (function() {
                            var D = y;
                            var C = setInterval(function(E) {
                                D += (r === "in" ? 0.01 : -0.01);
                                D = Math.max(0, D);
                                D = Math.min(1, D);
                                D = Math.round(D * 100) / 100;
                                B.volume(D, E);
                                if (D === z) {
                                    clearInterval(C);
                                    B._emit("faded", E)
                                }
                            }
                            .bind(B, o[t]), v)
                        }
                        )()
                    }
                }
            }
            return B
        },
        loop: function() {
            var p = this;
            var q = arguments;
            var o, u, t;
            if (q.length === 0) {
                return p._loop
            } else {
                if (q.length === 1) {
                    if (typeof q[0] === "boolean") {
                        o = q[0];
                        p._loop = o
                    } else {
                        t = p._soundById(parseInt(q[0], 10));
                        return t ? t._loop : false
                    }
                } else {
                    if (q.length === 2) {
                        o = q[0];
                        u = parseInt(q[1], 10)
                    }
                }
            }
            var s = p._getSoundIds(u);
            for (var r = 0; r < s.length; r++) {
                t = p._soundById(s[r]);
                if (t) {
                    t._loop = o;
                    if (p._webAudio && t._node) {
                        t._node.bufferSource.loop = o
                    }
                }
            }
            return p
        },
        seek: function() {
            var o = this;
            var q = arguments;
            var t, v;
            if (q.length === 0) {
                v = o._sounds[0]._id
            } else {
                if (q.length === 1) {
                    var s = o._getSoundIds();
                    var p = s.indexOf(q[0]);
                    if (p >= 0) {
                        v = parseInt(q[0], 10)
                    } else {
                        v = o._sounds[0]._id;
                        t = parseFloat(q[0])
                    }
                } else {
                    if (q.length === 2) {
                        t = parseFloat(q[0]);
                        v = parseInt(q[1], 10)
                    }
                }
            }
            if (typeof v === "undefined") {
                return o
            }
            if (!o._loaded) {
                o.once("load", function() {
                    o.seek.apply(o, q)
                });
                return o
            }
            var u = o._soundById(v);
            if (u) {
                if (t >= 0) {
                    var r = o.playing(v);
                    if (r) {
                        o.pause(v, true)
                    }
                    u._seek = t;
                    o._clearTimer(v);
                    if (r) {
                        o.play(v, true)
                    }
                } else {
                    if (o._webAudio) {
                        return (u._seek + o.playing(v) ? n.currentTime - u._playStart : 0)
                    } else {
                        return u._node.currentTime
                    }
                }
            }
            return o
        },
        playing: function(q) {
            var o = this;
            var p = o._soundById(q) || o._sounds[0];
            return p ? !p._paused : false
        },
        duration: function() {
            return this._duration
        },
        unload: function() {
            var p = this;
            var o = p._sounds;
            for (var r = 0; r < o.length; r++) {
                if (!o[r]._paused) {
                    p.stop(o[r]._id);
                    p._emit("end", o[r]._id)
                }
                if (!p._webAudio) {
                    o[r]._node.src = "";
                    o[r]._node.removeEventListener("error", o[r]._errorFn, false);
                    o[r]._node.removeEventListener("canplaythrough", o[r]._loadFn, false)
                }
                delete o[r]._node;
                p._clearTimer(o[r]._id);
                var q = m._howls.indexOf(p);
                if (q >= 0) {
                    m._howls.splice(q, 1)
                }
            }
            if (a) {
                delete a[p._src]
            }
            p = null;
            return null
        },
        on: function(r, q, s) {
            var o = this;
            var p = o["_on" + r];
            if (typeof q === "function") {
                p.push({
                    id: s,
                    fn: q
                })
            }
            return o
        },
        off: function(s, r, t) {
            var o = this;
            var q = o["_on" + s];
            if (r) {
                for (var p = 0; p < q.length; p++) {
                    if (r === q[p].fn && t === q[p].id) {
                        q.splice(p, 1);
                        break
                    }
                }
            } else {
                q = []
            }
            return o
        },
        once: function(q, p, s) {
            var o = this;
            var r = function() {
                p.apply(o, arguments);
                o.off(q, r, s)
            };
            o.on(q, r, s);
            return o
        },
        _emit: function(r, t, s) {
            var o = this;
            var q = o["_on" + r];
            for (var p = 0; p < q.length; p++) {
                if (!q[p].id || q[p].id === t) {
                    setTimeout(function(u) {
                        u.call(this, t, s)
                    }
                    .bind(o, q[p].fn), 0)
                }
            }
            return o
        },
        _clearTimer: function(p) {
            var o = this;
            if (o._endTimers[p]) {
                clearTimeout(o._endTimers[p]);
                delete o._endTimers[p]
            }
            return o
        },
        _soundById: function(q) {
            var o = this;
            for (var p = 0; p < o._sounds.length; p++) {
                if (q === o._sounds[p]._id) {
                    return o._sounds[p]
                }
            }
            return null
        },
        _inactiveSound: function() {
            var o = this;
            o._drain();
            for (var p = 0; p < o._sounds.length; p++) {
                if (o._sounds[p]._ended) {
                    return o._sounds[p].reset()
                }
            }
            return new i(o)
        },
        _drain: function() {
            var p = this;
            var o = p._pool;
            var r = 0;
            var q = 0;
            if (p._sounds.length < o) {
                return
            }
            for (q = 0; q < p._sounds.length; q++) {
                if (p._sounds[q]._ended) {
                    r++
                }
            }
            for (q = p._sounds.length - 1; q >= 0; q--) {
                if (r <= o) {
                    return
                }
                if (p._sounds[q]._ended) {
                    if (p._webAudio && p._sounds[q]._node) {
                        p._sounds[q]._node.disconnect(0)
                    }
                    p._sounds.splice(q, 1);
                    r--
                }
            }
        },
        _getSoundIds: function(r) {
            var o = this;
            if (typeof r === "undefined") {
                var q = [];
                for (var p = 0; p < o._sounds.length; p++) {
                    q.push(o._sounds[p]._id)
                }
                return q
            } else {
                return [r]
            }
        },
        _refreshBuffer: function(p) {
            var o = this;
            p._node.bufferSource = n.createBufferSource();
            p._node.bufferSource.buffer = a[o._src];
            if (p._panner) {
                p._node.bufferSource.connect(p._panner)
            } else {
                p._node.bufferSource.connect(p._node)
            }
            p._node.bufferSource.loop = p._loop;
            if (p._loop) {
                p._node.bufferSource.loopStart = p._start || 0;
                p._node.bufferSource.loopEnd = p._stop
            }
            p._node.bufferSource.playbackRate.value = o._rate;
            return o
        }
    };
    var i = function(o) {
        this._parent = o;
        this.init()
    };
    i.prototype = {
        init: function() {
            var o = this;
            var p = o._parent;
            o._muted = p._muted;
            o._loop = p._loop;
            o._volume = p._volume;
            o._muted = p._muted;
            o._seek = 0;
            o._paused = true;
            o._ended = true;
            o._id = Math.round(Date.now() * Math.random());
            p._sounds.push(o);
            o.create();
            return o
        },
        create: function() {
            var o = this;
            var p = o._parent;
            var q = (m._muted || o._muted || o._parent._muted) ? 0 : o._volume * m.volume();
            if (p._webAudio) {
                o._node = (typeof n.createGain === "undefined") ? n.createGainNode() : n.createGain();
                o._node.gain.setValueAtTime(q, n.currentTime);
                o._node.paused = true;
                o._node.connect(g)
            } else {
                o._node = new Audio();
                o._errorFn = o._errorListener.bind(o);
                o._node.addEventListener("error", o._errorFn, false);
                o._loadFn = o._loadListener.bind(o);
                o._node.addEventListener("canplaythrough", o._loadFn, false);
                o._node.src = p._src;
                o._node.preload = "auto";
                o._node.volume = q;
                o._node.load()
            }
            return o
        },
        reset: function() {
            var o = this;
            var p = o._parent;
            o._muted = p._muted;
            o._loop = p._loop;
            o._volume = p._volume;
            o._muted = p._muted;
            o._seek = 0;
            o._paused = true;
            o._ended = true;
            o._sprite = null;
            o._id = Math.round(Date.now() * Math.random());
            return o
        },
        _errorListener: function() {
            var o = this;
            if (o._node.error && o._node.error.code === 4) {
                m.noAudio = true
            }
            o._parent._emit("loaderror", o._id, o._node.error ? o._node.error.code : 0);
            o._node.removeEventListener("error", o._errorListener, false)
        },
        _loadListener: function() {
            var o = this;
            var p = o._parent;
            p._duration = Math.ceil(o._node.duration * 10) / 10;
            if (Object.keys(p._sprite).length === 0) {
                p._sprite = {
                    __default: [0, p._duration * 1000]
                }
            }
            if (!p._loaded) {
                p._loaded = true;
                p._emit("load")
            }
            if (p._autoplay) {
                p.play()
            }
            o._node.removeEventListener("canplaythrough", o._loadFn, false)
        }
    };
    if (c) {
        var a = {};
        var k = function(o) {
            var p = o._src;
            if (a[p]) {
                o._duration = a[p].duration;
                j(o);
                return
            }
            if (/^data:[^;]+;base64,/.test(p)) {
                window.atob = window.atob || function(x) {
                    var z = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                    var B = String(x).replace(/=+$/, "");
                    for (var A = 0, y, v, u = 0, w = ""; v = B.charAt(u++); ~v && (y = A % 4 ? y * 64 + v : v,
                    A++ % 4) ? w += String.fromCharCode(255 & y >> (-2 * A & 6)) : 0) {
                        v = z.indexOf(v)
                    }
                    return w
                }
                ;
                var r = atob(p.split(",")[1]);
                var t = new Uint8Array(r.length);
                for (var q = 0; q < r.length; ++q) {
                    t[q] = r.charCodeAt(q)
                }
                h(t.buffer, o)
            } else {
                var s = new XMLHttpRequest();
                s.open("GET", p, true);
                s.responseType = "arraybuffer";
                s.onload = function() {
                    h(s.response, o)
                }
                ;
                s.onerror = function() {
                    if (o._webAudio) {
                        o._html5 = true;
                        o._webAudio = false;
                        o._sounds = [];
                        delete a[p];
                        o.load()
                    }
                }
                ;
                b(s)
            }
        };
        var b = function(p) {
            try {
                p.send()
            } catch (o) {
                p.onerror()
            }
        };
        var h = function(p, o) {
            n.decodeAudioData(p, function(q) {
                if (q) {
                    a[o._src] = q;
                    j(o, q)
                }
            }, function() {
                o._emit("loaderror")
            })
        };
        var j = function(p, o) {
            if (o && !p._duration) {
                p._duration = o.duration
            }
            if (Object.keys(p._sprite).length === 0) {
                p._sprite = {
                    __default: [0, p._duration * 1000]
                }
            }
            if (!p._loaded) {
                p._loaded = true;
                p._emit("load")
            }
            if (p._autoplay) {
                p.play()
            }
        }
    }
    function f() {
        try {
            if (typeof AudioContext !== "undefined") {
                n = new AudioContext()
            } else {
                if (typeof webkitAudioContext !== "undefined") {
                    n = new webkitAudioContext()
                } else {
                    c = false
                }
            }
        } catch (o) {
            c = false
        }
        if (!c) {
            if (typeof Audio !== "undefined") {
                try {
                    new Audio()
                } catch (o) {
                    l = true
                }
            } else {
                l = true
            }
        }
    }
    if (typeof define === "function" && define.amd) {
        define("howler", function() {
            return {
                Howler: m,
                Howl: e
            }
        })
    }
    if (typeof exports !== "undefined") {
        exports.Howler = m;
        exports.Howl = e
    }
    if (typeof window !== "undefined") {
        window.HowlerGlobal = d;
        window.Howler = m;
        window.Howl = e;
        window.Sound = i
    }
}
)();

config.buildings = {
    "0": {
        buildingId: 0,
        tribe: false,
        base: "g0.png"
    },
    "1": {
        buildingId: 1,
        tribe: false,
        base: "g1.png"
    },
    "2": {
        buildingId: 2,
        tribe: false,
        base: "g2.png"
    },
    "3": {
        buildingId: 3,
        tribe: false,
        base: "g3.png"
    },
    "4": {
        buildingId: 4,
        tribe: false,
        base: "g4.png"
    },
    "5": {
        buildingId: 5,
        tribe: false,
        base: "g5.png"
    },
    "6": {
        buildingId: 6,
        tribe: false,
        base: "g6.png"
    },
    "7": {
        buildingId: 7,
        tribe: false,
        base: "g7.png"
    },
    "8": {
        buildingId: 8,
        tribe: false,
        base: "g8.png"
    },
    "9": {
        buildingId: 9,
        tribe: false,
        base: "g9.png"
    },
    "10": {
        buildingId: 10,
        tribe: false,
        base: "g10.png",
        levels: [0, 10, 20],
        states: ["e", "f", "hf"]
    },
    "11": {
        buildingId: 11,
        tribe: false,
        base: "g11.png",
        levels: [0, 10, 20],
        states: ["e", "f", "hf"]
    },
    "13": {
        buildingId: 13,
        tribe: true,
        base: "g13.png",
        levels: [0, 10, 20]
    },
    "14": {
        buildingId: 14,
        tribe: false,
        base: "g14.png",
        levels: [0, 10]
    },
    "15": {
        buildingId: 15,
        tribe: true,
        base: "g15.png",
        levels: [0, 10, 20]
    },
    "16": {
        buildingId: 16,
        tribe: true,
        levels: [0, 10, 20],
        states: ["ww"]
    },
    "17": {
        buildingId: 17,
        tribe: false,
        base: "g17.png",
        levels: [0, 10, 20]
    },
    "18": {
        buildingId: 18,
        tribe: true,
        base: "g18.png",
        levels: [0, 10, 20]
    },
    "19": {
        buildingId: 19,
        tribe: true,
        base: "g19.png",
        levels: [0, 10, 20]
    },
    "20": {
        buildingId: 20,
        tribe: true,
        base: "g20.png",
        levels: [0, 10, 20]
    },
    "21": {
        buildingId: 21,
        tribe: false,
        base: "g21.png"
    },
    "22": {
        buildingId: 22,
        tribe: true,
        base: "g22.png",
        levels: [0, 10, 20]
    },
    "23": {
        buildingId: 23,
        tribe: false,
        base: "g23.png"
    },
    "24": {
        buildingId: 24,
        tribe: true,
        base: "g24.png",
        levels: [0, 10]
    },
    "25": {
        buildingId: 25,
        tribe: true,
        base: "g25.png",
        levels: [0, 10, 20]
    },
    "26": {
        buildingId: 26,
        tribe: true,
        base: "g26.png",
        levels: [0, 10, 15, 20]
    },
    "27": {
        buildingId: 27,
        tribe: false,
        base: "g27.png",
        levels: [0, 10, 20]
    },
    "28": {
        buildingId: 28,
        tribe: false,
        base: "g28.png"
    },
    "29": {
        buildingId: 29,
        tribe: true,
        base: "g29.png",
        levels: [0, 10, 20]
    },
    "30": {
        buildingId: 30,
        tribe: true,
        base: "g30.png",
        levels: [0, 10, 20]
    },
    "31": {
        buildingId: 31,
        tribe: false,
        levels: [0, 1, 5, 10, 15, 20],
        states: ["normal", "water"],
        parts: ["bottom", "top"]
    },
    "32": {
        buildingId: 32,
        tribe: false,
        levels: [0, 1, 5, 10, 15, 20],
        states: ["normal", "water"],
        parts: ["bottom", "top"]
    },
    "33": {
        buildingId: 33,
        tribe: false,
        levels: [0, 1, 5, 10, 15, 20],
        states: ["normal", "water"],
        parts: ["bottom", "top"]
    },
    "34": {
        buildingId: 34,
        tribe: false,
        base: "g34.png"
    },
    "35": {
        buildingId: 35,
        tribe: false,
        base: "g35.png"
    },
    "36": {
        buildingId: 36,
        tribe: false,
        base: "g36.png"
    },
    "38": {
        buildingId: 38,
        tribe: false,
        base: "g38.png",
        levels: [0, 10, 20],
        states: ["e", "f", "hf"]
    },
    "39": {
        buildingId: 39,
        tribe: false,
        base: "g39.png",
        levels: [0, 10, 20],
        states: ["e", "f", "hf"]
    },
    "40": {
        buildingId: 40,
        tribe: false,
        levels: [0, 1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    },
    "41": {
        buildingId: 41,
        tribe: false,
        base: "g41.png"
    },
    "42": {
        buildingId: 42,
        tribe: false,
        base: "g42.png"
    },
    "43": {
        buildingId: 43,
        tribe: false,
        levels: [0, 1, 5, 10, 15, 20],
        states: ["normal", "water"],
        parts: ["bottom", "top"]
    },
    "44": {
        buildingId: 44,
        tribe: false,
        base: "g44.png"
    },
    "45": {
        buildingId: 45,
        tribe: false,
        base: "g45.png",
        levels: [0, 10, 20]
    },
    "46": {
        buildingId: 46,
        tribe: true,
        base: "g46.png",
        levels: [0, 5, 10, 20]
    }
};
config.village = {};
config.village["locationPos"] = [{
    x: null,
    y: null
}, {
    x: 381,
    y: 307,
    z: 1
}, {
    x: 518,
    y: 238,
    z: 1
}, {
    x: 691,
    y: 269,
    z: 1
}, {
    x: 272,
    y: 370,
    z: 1
}, {
    x: 508,
    y: 351,
    z: 1
}, {
    x: 602,
    y: 336,
    z: 1
}, {
    x: 803,
    y: 329,
    z: 1
}, {
    x: 199,
    y: 485,
    z: 1
}, {
    x: 312,
    y: 472,
    z: 1
}, {
    x: 739,
    y: 394,
    z: 1
}, {
    x: 918,
    y: 405,
    z: 1
}, {
    x: 253,
    y: 564,
    z: 1
}, {
    x: 376,
    y: 513,
    z: 1
}, {
    x: 548,
    y: 568
}, {
    x: 795,
    y: 502,
    z: 1
}, {
    x: 433,
    y: 605,
    z: 1
}, {
    x: 559,
    y: 666,
    z: 1
}, {
    x: 680,
    y: 604,
    z: 1
}, {
    x: 260,
    y: 362,
    z: 5
}, {
    x: 383,
    y: 510,
    z: 7
}, {
    x: 190,
    y: 443,
    z: 6
}, {
    x: 181,
    y: 557,
    z: 7
}, {
    x: 451,
    y: 421,
    z: 6
}, {
    x: 402,
    y: 311,
    z: 3
}, {
    x: 519,
    y: 256,
    z: 2
}, {
    x: 658,
    y: 278,
    z: 3
}, {
    x: 608,
    y: 381,
    z: 5
}, {
    x: 789,
    y: 292,
    z: 4
}, {
    x: 848,
    y: 384,
    z: 5
}, {
    x: 951,
    y: 432,
    z: 6
}, {
    x: 964,
    y: 561,
    z: 7
}, {
    x: 726,
    y: 526,
    z: 6
}, {
    x: 509,
    y: 756,
    z: 1,
    z2: 43
}, {
    x: 859,
    y: 622,
    z: 8
}, {
    x: 542,
    y: 572,
    z: 8
}, {
    x: 266,
    y: 622,
    z: 8
}, {
    x: 392,
    y: 689,
    z: 9
}, {
    x: 663,
    y: 652,
    z: 9
}, {
    x: 772,
    y: 710,
    z: 10
}, {
    x: 535,
    y: 688,
    z: 10
}, {
    x: 60,
    y: 471,
    z: 1
}, {
    x: 1083,
    y: 821,
    z: 44
}, {
    x: 952,
    y: 860,
    z: 45
}];
config.village["worldWonderPos"] = {
    x: 533,
    y: 598,
    z: 6
};
config.village["buildingPoly"] = {
    0: [66, 12, 75, 13, 82, 14, 84, 15, 86, 16, 87, 17, 89, 18, 90, 19, 91, 20, 94, 21, 95, 22, 95, 23, 95, 24, 96, 25, 96, 26, 97, 27, 98, 28, 98, 29, 99, 30, 100, 31, 101, 32, 101, 33, 101, 34, 101, 35, 101, 36, 101, 37, 101, 38, 101, 39, 101, 40, 101, 41, 101, 42, 101, 43, 101, 44, 101, 45, 100, 46, 100, 47, 100, 48, 100, 49, 100, 50, 100, 51, 100, 52, 100, 53, 99, 54, 99, 55, 99, 56, 99, 57, 98, 58, 98, 59, 98, 60, 97, 61, 96, 62, 96, 63, 94, 64, 93, 65, 92, 66, 90, 67, 89, 68, 88, 69, 87, 70, 85, 71, 82, 72, 80, 73, 76, 74, 67, 75, 63, 75, 43, 74, 39, 73, 37, 72, 34, 71, 32, 70, 30, 69, 29, 68, 27, 67, 26, 66, 25, 65, 24, 64, 23, 63, 22, 62, 21, 61, 21, 60, 20, 59, 19, 58, 19, 57, 18, 56, 18, 55, 18, 54, 17, 53, 17, 52, 16, 51, 16, 50, 15, 49, 15, 48, 15, 47, 15, 46, 15, 45, 15, 44, 15, 43, 15, 42, 15, 41, 16, 40, 16, 39, 16, 38, 16, 37, 17, 36, 17, 35, 17, 34, 18, 33, 19, 32, 19, 31, 19, 30, 19, 29, 19, 28, 20, 27, 21, 26, 23, 25, 23, 24, 24, 23, 26, 22, 27, 21, 28, 20, 30, 19, 33, 18, 35, 17, 37, 16, 40, 15, 46, 14, 50, 13, 56, 12, 66, 12],
    1: [33, 1, 34, 2, 36, 3, 36, 4, 36, 5, 36, 6, 70, 7, 109, 8, 110, 9, 112, 10, 112, 11, 112, 12, 112, 13, 112, 14, 111, 15, 110, 16, 110, 17, 107, 18, 107, 19, 108, 20, 116, 21, 118, 22, 119, 23, 119, 24, 119, 25, 119, 26, 119, 27, 118, 28, 118, 29, 116, 30, 117, 31, 118, 32, 118, 33, 118, 34, 117, 35, 111, 36, 111, 37, 112, 38, 112, 39, 112, 40, 113, 41, 113, 42, 113, 43, 114, 44, 114, 45, 113, 46, 112, 47, 111, 48, 113, 49, 114, 50, 114, 51, 114, 52, 114, 53, 113, 54, 113, 55, 113, 56, 112, 57, 111, 58, 111, 59, 108, 60, 110, 61, 111, 62, 111, 63, 111, 64, 111, 65, 110, 66, 103, 67, 103, 68, 103, 69, 103, 70, 102, 71, 102, 72, 101, 73, 106, 74, 108, 75, 109, 76, 116, 77, 117, 78, 119, 79, 119, 80, 119, 81, 119, 82, 119, 83, 118, 84, 117, 85, 117, 86, 114, 87, 116, 88, 117, 89, 117, 90, 117, 91, 117, 92, 117, 93, 115, 94, 112, 95, 112, 96, 112, 97, 112, 98, 111, 99, 111, 100, 109, 101, 111, 102, 112, 103, 112, 104, 112, 105, 111, 106, 110, 107, 61, 107, 19, 106, 18, 105, 17, 104, 17, 103, 6, 102, 5, 101, 4, 100, 4, 99, 4, 98, 5, 97, 5, 96, 2, 95, 1, 94, 1, 93, 1, 92, 1, 91, 1, 90, 2, 89, 3, 88, 5, 87, 7, 86, 6, 85, 5, 84, 6, 83, 6, 82, 7, 81, 7, 80, 7, 79, 7, 78, 6, 77, 6, 76, 6, 75, 5, 74, 6, 73, 6, 72, 5, 71, 4, 70, 2, 69, 1, 68, 1, 67, 1, 66, 1, 65, 1, 64, 2, 63, 3, 62, 5, 61, 6, 60, 6, 59, 6, 58, 6, 57, 4, 56, 3, 55, 2, 54, 3, 53, 3, 52, 4, 51, 4, 50, 4, 49, 4, 48, 5, 47, 5, 46, 5, 45, 6, 44, 6, 43, 7, 42, 7, 41, 9, 40, 8, 39, 7, 38, 7, 37, 8, 36, 6, 35, 5, 34, 4, 33, 5, 32, 5, 31, 6, 30, 6, 29, 6, 28, 6, 27, 7, 26, 7, 25, 7, 24, 8, 23, 8, 22, 9, 21, 9, 20, 13, 19, 13, 18, 14, 17, 14, 16, 15, 15, 15, 14, 27, 13, 27, 12, 26, 11, 25, 10, 23, 9, 22, 8, 22, 7, 22, 6, 22, 5, 22, 4, 23, 3, 24, 2, 26, 1, 33, 1],
    2: [70, 3, 72, 4, 72, 5, 74, 6, 79, 7, 80, 8, 83, 9, 86, 10, 87, 11, 87, 12, 86, 13, 86, 14, 87, 15, 89, 16, 89, 17, 89, 18, 89, 19, 91, 20, 94, 21, 95, 22, 94, 23, 94, 24, 95, 25, 95, 26, 98, 27, 100, 28, 101, 29, 103, 30, 104, 31, 105, 32, 105, 33, 105, 34, 106, 35, 107, 36, 109, 37, 111, 38, 113, 39, 115, 40, 118, 41, 117, 42, 117, 43, 117, 44, 119, 45, 119, 46, 117, 47, 115, 48, 113, 49, 112, 50, 110, 51, 109, 52, 109, 53, 108, 54, 108, 55, 105, 56, 105, 57, 105, 58, 105, 59, 105, 60, 107, 61, 106, 62, 106, 63, 106, 64, 104, 65, 102, 66, 100, 67, 101, 68, 101, 69, 89, 70, 81, 71, 66, 72, 43, 73, 44, 74, 42, 74, 40, 73, 38, 72, 32, 71, 29, 70, 26, 69, 21, 68, 20, 67, 19, 66, 19, 65, 18, 64, 17, 63, 16, 62, 16, 61, 14, 60, 13, 59, 12, 58, 11, 57, 11, 56, 10, 55, 9, 54, 8, 53, 8, 52, 8, 51, 9, 50, 12, 49, 13, 48, 17, 47, 18, 46, 20, 45, 21, 44, 21, 43, 21, 42, 20, 41, 20, 40, 23, 39, 26, 38, 17, 37, 16, 36, 16, 35, 16, 34, 18, 33, 18, 32, 20, 31, 28, 30, 28, 29, 15, 28, 12, 27, 7, 26, 3, 25, 2, 24, 1, 23, 1, 22, 1, 21, 2, 20, 2, 19, 3, 18, 5, 17, 7, 16, 8, 15, 10, 14, 41, 13, 42, 12, 43, 11, 44, 10, 45, 9, 47, 8, 50, 7, 53, 6, 61, 5, 64, 4, 66, 3, 70, 3],
    3: [70, 1, 70, 2, 71, 3, 71, 4, 72, 5, 73, 6, 73, 7, 74, 8, 74, 9, 74, 10, 74, 11, 74, 12, 75, 13, 75, 14, 76, 15, 76, 16, 77, 17, 77, 18, 78, 19, 79, 20, 79, 21, 81, 22, 82, 23, 82, 24, 83, 25, 83, 26, 84, 27, 85, 28, 96, 29, 97, 30, 98, 31, 99, 32, 100, 33, 101, 34, 102, 35, 103, 36, 104, 37, 104, 38, 105, 39, 107, 40, 108, 41, 110, 42, 111, 43, 112, 44, 113, 45, 113, 46, 114, 47, 114, 48, 115, 49, 116, 50, 117, 51, 117, 52, 117, 53, 117, 54, 117, 55, 116, 56, 115, 57, 116, 58, 116, 59, 115, 60, 115, 61, 114, 62, 114, 63, 114, 64, 114, 65, 116, 66, 116, 67, 117, 68, 117, 69, 117, 70, 118, 71, 118, 72, 119, 73, 118, 74, 118, 75, 118, 76, 118, 77, 118, 78, 116, 79, 114, 80, 112, 81, 112, 82, 112, 83, 111, 84, 110, 85, 108, 86, 107, 87, 107, 88, 108, 89, 73, 90, 73, 91, 34, 92, 31, 92, 29, 91, 28, 90, 28, 89, 15, 88, 15, 87, 13, 86, 11, 85, 9, 84, 9, 83, 7, 82, 6, 81, 5, 80, 4, 79, 5, 78, 5, 77, 6, 76, 6, 75, 6, 74, 4, 73, 4, 72, 4, 71, 4, 70, 5, 69, 1, 68, 1, 67, 0, 66, 1, 65, 1, 64, 1, 63, 2, 62, 3, 61, 2, 60, 0, 59, 0, 58, 0, 57, 3, 56, 8, 55, 8, 54, 9, 53, 12, 52, 5, 51, 6, 50, 7, 49, 7, 48, 8, 47, 9, 46, 9, 45, 8, 44, 9, 43, 9, 42, 9, 41, 10, 40, 10, 39, 10, 38, 11, 37, 12, 36, 13, 35, 14, 34, 15, 33, 17, 32, 18, 31, 18, 30, 19, 29, 19, 28, 20, 27, 20, 26, 20, 25, 21, 24, 21, 23, 22, 22, 23, 21, 25, 20, 26, 19, 27, 18, 28, 17, 28, 16, 29, 15, 30, 14, 31, 13, 31, 12, 32, 11, 33, 10, 33, 9, 34, 8, 35, 7, 36, 6, 38, 5, 39, 4, 40, 3, 41, 2, 42, 1, 70, 1],
    4: [83, 3, 83, 4, 84, 5, 87, 6, 88, 7, 90, 8, 91, 9, 92, 10, 94, 11, 95, 12, 96, 13, 97, 14, 98, 15, 98, 16, 99, 17, 99, 18, 100, 19, 100, 20, 101, 21, 101, 22, 102, 23, 102, 24, 103, 25, 103, 26, 103, 27, 104, 28, 104, 29, 108, 30, 108, 31, 108, 32, 109, 33, 109, 34, 110, 35, 110, 36, 111, 37, 111, 38, 112, 39, 113, 40, 113, 41, 114, 42, 114, 43, 115, 44, 116, 45, 117, 46, 117, 47, 119, 48, 119, 49, 119, 50, 119, 51, 119, 52, 118, 53, 118, 54, 118, 55, 118, 56, 118, 57, 118, 58, 118, 59, 118, 60, 117, 61, 116, 62, 115, 63, 115, 64, 117, 65, 118, 66, 118, 67, 117, 68, 117, 69, 114, 70, 114, 71, 114, 72, 114, 73, 115, 74, 116, 75, 116, 76, 116, 77, 116, 78, 116, 79, 117, 80, 118, 81, 117, 82, 117, 83, 115, 84, 115, 85, 110, 86, 111, 87, 111, 88, 111, 89, 64, 90, 58, 90, 55, 89, 53, 88, 31, 87, 27, 86, 26, 85, 25, 84, 24, 83, 24, 82, 24, 81, 23, 80, 21, 79, 20, 78, 19, 77, 19, 76, 18, 75, 17, 74, 16, 73, 15, 72, 14, 71, 13, 70, 12, 69, 12, 68, 12, 67, 11, 66, 11, 65, 11, 64, 11, 63, 11, 62, 11, 61, 11, 60, 11, 59, 11, 58, 11, 57, 12, 56, 12, 55, 12, 54, 13, 53, 14, 52, 15, 51, 17, 50, 17, 49, 5, 48, 4, 47, 0, 46, 0, 45, 0, 44, 0, 43, 0, 42, 1, 41, 2, 40, 3, 39, 4, 38, 1, 37, 2, 36, 3, 35, 2, 34, 3, 33, 2, 32, 2, 31, 4, 30, 5, 29, 5, 28, 6, 27, 8, 26, 8, 25, 8, 24, 9, 23, 11, 22, 11, 21, 29, 20, 29, 19, 30, 18, 30, 17, 30, 16, 31, 15, 32, 14, 32, 13, 32, 12, 33, 11, 34, 10, 35, 9, 36, 8, 37, 7, 41, 6, 44, 5, 50, 4, 52, 3, 83, 3],
    5: [85, 18, 85, 19, 86, 20, 86, 21, 87, 22, 87, 23, 88, 24, 88, 25, 89, 26, 89, 27, 89, 28, 90, 29, 90, 30, 91, 31, 92, 32, 92, 33, 93, 34, 94, 35, 94, 36, 95, 37, 96, 38, 96, 39, 97, 40, 98, 41, 98, 42, 99, 43, 100, 44, 101, 45, 120, 46, 125, 47, 125, 48, 126, 49, 127, 50, 127, 51, 128, 52, 128, 53, 128, 54, 127, 55, 126, 56, 125, 57, 124, 58, 125, 59, 126, 60, 126, 61, 126, 62, 126, 63, 126, 64, 125, 65, 124, 66, 122, 67, 123, 68, 123, 69, 124, 70, 124, 71, 123, 72, 123, 73, 122, 74, 117, 75, 119, 76, 119, 77, 124, 78, 124, 79, 124, 80, 124, 81, 124, 82, 125, 83, 124, 84, 124, 85, 123, 86, 122, 87, 117, 88, 119, 89, 120, 90, 122, 91, 123, 92, 124, 93, 124, 94, 122, 95, 120, 96, 125, 97, 126, 98, 127, 99, 127, 100, 127, 101, 128, 102, 128, 103, 128, 104, 126, 105, 124, 106, 124, 107, 125, 108, 126, 109, 126, 110, 127, 111, 128, 112, 127, 113, 127, 114, 126, 115, 124, 116, 117, 117, 118, 118, 119, 119, 119, 120, 120, 121, 121, 122, 122, 123, 122, 124, 121, 125, 120, 126, 119, 127, 92, 128, 92, 129, 94, 130, 97, 131, 98, 132, 98, 133, 98, 134, 97, 135, 91, 136, 90, 137, 88, 138, 79, 139, 65, 140, 64, 141, 63, 142, 61, 143, 57, 143, 57, 142, 53, 141, 52, 140, 52, 139, 52, 138, 50, 137, 50, 136, 50, 135, 50, 134, 50, 133, 51, 132, 52, 131, 53, 130, 59, 129, 60, 128, 61, 127, 62, 126, 62, 125, 24, 124, 22, 123, 21, 122, 20, 121, 20, 120, 20, 119, 20, 118, 20, 117, 20, 116, 21, 115, 22, 114, 24, 113, 26, 112, 28, 111, 30, 110, 33, 109, 35, 108, 30, 107, 28, 106, 26, 105, 25, 104, 19, 103, 18, 102, 17, 101, 17, 100, 17, 99, 17, 98, 17, 97, 18, 96, 20, 95, 21, 94, 21, 93, 21, 92, 21, 91, 22, 90, 23, 89, 25, 88, 29, 87, 30, 86, 31, 85, 35, 84, 33, 83, 33, 82, 33, 81, 34, 80, 36, 79, 18, 78, 17, 77, 17, 76, 16, 75, 16, 74, 17, 73, 18, 72, 21, 71, 18, 70, 17, 69, 17, 68, 16, 67, 16, 66, 17, 65, 21, 64, 29, 63, 29, 62, 29, 61, 29, 60, 29, 59, 29, 58, 29, 57, 29, 56, 28, 55, 27, 54, 25, 53, 25, 52, 25, 51, 25, 50, 25, 49, 26, 48, 42, 47, 42, 46, 43, 45, 43, 44, 44, 43, 45, 42, 46, 41, 46, 40, 47, 39, 48, 38, 48, 37, 49, 36, 50, 35, 50, 34, 51, 33, 52, 32, 52, 31, 53, 30, 54, 29, 55, 28, 55, 27, 59, 26, 61, 25, 61, 24, 64, 23, 67, 22, 69, 21, 73, 20, 75, 19, 78, 18, 85, 18],
    6: [64, 23, 65, 24, 66, 25, 68, 26, 70, 27, 71, 28, 73, 29, 76, 30, 79, 31, 81, 32, 83, 33, 87, 34, 91, 35, 95, 36, 95, 37, 95, 38, 95, 39, 95, 40, 95, 41, 96, 42, 97, 43, 97, 44, 97, 45, 98, 46, 99, 47, 99, 48, 100, 49, 101, 50, 102, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 105, 57, 106, 58, 107, 59, 107, 60, 109, 61, 110, 62, 109, 63, 110, 64, 111, 65, 113, 66, 112, 67, 110, 68, 109, 69, 108, 70, 103, 71, 122, 72, 123, 73, 123, 74, 123, 75, 124, 76, 124, 77, 124, 78, 124, 79, 124, 80, 124, 81, 124, 82, 124, 83, 124, 84, 125, 85, 125, 86, 125, 87, 125, 88, 125, 89, 125, 90, 126, 91, 126, 92, 126, 93, 126, 94, 127, 95, 127, 96, 128, 97, 128, 98, 129, 99, 129, 100, 130, 101, 131, 102, 131, 103, 131, 104, 131, 105, 132, 106, 132, 107, 132, 108, 132, 109, 132, 110, 133, 111, 134, 112, 135, 113, 135, 114, 136, 115, 136, 116, 134, 117, 133, 118, 132, 119, 131, 120, 130, 121, 128, 122, 127, 123, 126, 124, 86, 125, 86, 126, 86, 127, 85, 128, 76, 129, 75, 130, 75, 131, 73, 132, 57, 133, 57, 134, 55, 135, 54, 136, 43, 137, 41, 137, 40, 136, 39, 135, 37, 134, 35, 133, 34, 132, 32, 131, 31, 130, 31, 129, 32, 128, 29, 127, 26, 126, 24, 125, 24, 124, 21, 123, 21, 122, 21, 121, 22, 120, 20, 119, 19, 118, 20, 117, 20, 116, 21, 115, 21, 114, 22, 113, 24, 112, 24, 111, 24, 110, 24, 109, 24, 108, 24, 107, 23, 106, 23, 105, 23, 104, 22, 103, 20, 102, 19, 101, 19, 100, 18, 99, 18, 98, 19, 97, 21, 96, 22, 95, 23, 94, 25, 93, 27, 92, 27, 91, 29, 90, 31, 89, 32, 88, 34, 87, 36, 86, 36, 85, 38, 84, 40, 83, 41, 82, 41, 81, 41, 80, 41, 79, 41, 78, 41, 77, 41, 76, 41, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 41, 67, 40, 66, 38, 65, 36, 64, 36, 63, 35, 62, 35, 61, 35, 60, 36, 59, 37, 58, 38, 57, 39, 56, 39, 55, 40, 54, 41, 53, 42, 52, 43, 51, 43, 50, 43, 49, 44, 48, 45, 47, 46, 46, 46, 45, 47, 44, 48, 43, 49, 42, 50, 41, 50, 40, 51, 39, 51, 38, 52, 37, 53, 36, 53, 35, 53, 34, 54, 33, 55, 32, 56, 31, 56, 30, 57, 29, 58, 28, 58, 27, 58, 26, 58, 25, 59, 24, 59, 23, 64, 23],
    7: [47, 33, 49, 34, 49, 35, 108, 36, 109, 37, 110, 38, 111, 39, 111, 40, 112, 41, 113, 42, 114, 43, 115, 44, 115, 45, 116, 46, 117, 47, 118, 48, 119, 49, 119, 50, 120, 51, 121, 52, 121, 53, 122, 54, 123, 55, 125, 56, 126, 57, 126, 58, 127, 59, 127, 60, 128, 61, 129, 62, 130, 63, 131, 64, 132, 65, 131, 66, 131, 67, 131, 68, 129, 69, 127, 70, 127, 71, 127, 72, 127, 73, 127, 74, 127, 75, 127, 76, 127, 77, 127, 78, 127, 79, 127, 80, 126, 81, 126, 82, 131, 83, 133, 84, 136, 85, 137, 86, 137, 87, 138, 88, 138, 89, 140, 90, 141, 91, 142, 92, 142, 93, 142, 94, 142, 95, 143, 96, 144, 97, 144, 98, 144, 99, 144, 100, 144, 101, 144, 102, 140, 103, 140, 104, 140, 105, 139, 106, 136, 107, 136, 108, 137, 109, 136, 110, 135, 111, 133, 112, 133, 113, 132, 114, 127, 115, 127, 116, 127, 117, 120, 118, 119, 119, 118, 120, 118, 121, 118, 122, 117, 123, 107, 124, 107, 125, 107, 126, 108, 127, 108, 128, 108, 129, 108, 130, 108, 131, 108, 132, 101, 133, 94, 134, 94, 135, 94, 136, 94, 137, 94, 138, 93, 139, 73, 139, 73, 138, 72, 137, 72, 136, 72, 135, 53, 134, 45, 133, 37, 132, 31, 131, 26, 130, 23, 129, 22, 128, 19, 127, 15, 126, 14, 125, 14, 124, 11, 123, 9, 122, 8, 121, 9, 120, 6, 119, 5, 118, 4, 117, 4, 116, 3, 115, 3, 114, 3, 113, 4, 112, 4, 111, 5, 110, 6, 109, 7, 108, 8, 107, 7, 106, 7, 105, 7, 104, 8, 103, 9, 102, 11, 101, 11, 100, 11, 99, 12, 98, 13, 97, 12, 96, 11, 95, 12, 94, 16, 93, 17, 92, 17, 91, 17, 90, 17, 89, 16, 88, 16, 87, 16, 86, 16, 85, 17, 84, 18, 83, 20, 82, 23, 81, 35, 80, 36, 79, 37, 78, 37, 77, 37, 76, 37, 75, 37, 74, 37, 73, 37, 72, 37, 71, 37, 70, 37, 69, 37, 68, 37, 67, 37, 66, 37, 65, 37, 64, 37, 63, 37, 62, 37, 61, 37, 60, 37, 59, 38, 58, 38, 57, 38, 56, 38, 55, 38, 54, 38, 53, 38, 52, 38, 51, 38, 50, 38, 49, 38, 48, 38, 47, 38, 46, 38, 45, 39, 44, 38, 43, 38, 42, 38, 41, 38, 40, 39, 39, 39, 38, 39, 37, 39, 36, 39, 35, 40, 34, 41, 33, 47, 33],
    8: [73, 2, 75, 3, 76, 4, 83, 5, 85, 6, 86, 7, 86, 8, 86, 9, 85, 10, 85, 11, 85, 12, 86, 13, 87, 14, 87, 15, 88, 16, 89, 17, 89, 18, 89, 19, 88, 20, 87, 21, 86, 22, 85, 23, 84, 24, 83, 25, 81, 26, 87, 27, 88, 28, 100, 29, 100, 30, 100, 31, 100, 32, 100, 33, 100, 34, 100, 35, 100, 36, 100, 37, 100, 38, 100, 39, 98, 40, 95, 41, 87, 42, 91, 43, 93, 44, 94, 45, 94, 46, 95, 47, 94, 48, 95, 49, 95, 50, 95, 51, 95, 52, 95, 53, 97, 54, 98, 55, 98, 56, 98, 57, 97, 58, 97, 59, 98, 60, 98, 61, 99, 62, 99, 63, 99, 64, 100, 65, 101, 66, 102, 67, 102, 68, 103, 69, 103, 70, 103, 71, 104, 72, 104, 73, 104, 74, 105, 75, 105, 76, 105, 77, 105, 78, 104, 79, 104, 80, 103, 81, 101, 82, 96, 83, 96, 84, 97, 85, 97, 86, 97, 87, 97, 88, 98, 89, 99, 90, 100, 91, 101, 92, 102, 93, 102, 94, 103, 95, 103, 96, 104, 97, 104, 98, 104, 99, 104, 100, 104, 101, 104, 102, 104, 103, 104, 104, 104, 105, 104, 106, 104, 107, 104, 108, 103, 109, 103, 110, 102, 111, 101, 112, 100, 113, 99, 114, 98, 115, 96, 116, 96, 117, 96, 118, 96, 119, 96, 120, 96, 121, 98, 122, 99, 123, 98, 124, 98, 125, 97, 126, 97, 127, 97, 128, 93, 129, 93, 130, 97, 131, 98, 132, 99, 133, 99, 134, 99, 135, 99, 136, 98, 137, 96, 138, 87, 139, 60, 140, 56, 140, 54, 139, 54, 138, 54, 137, 50, 136, 48, 135, 48, 134, 49, 133, 50, 132, 49, 131, 48, 130, 46, 129, 43, 128, 42, 127, 35, 126, 34, 125, 34, 124, 35, 123, 42, 122, 41, 121, 42, 120, 42, 119, 43, 118, 44, 117, 44, 116, 44, 115, 45, 114, 45, 113, 46, 112, 46, 111, 46, 110, 46, 109, 45, 108, 45, 107, 45, 106, 45, 105, 45, 104, 45, 103, 45, 102, 45, 101, 45, 100, 45, 99, 45, 98, 45, 97, 45, 96, 45, 95, 45, 94, 46, 93, 47, 92, 48, 91, 28, 90, 26, 89, 25, 88, 26, 87, 26, 86, 26, 85, 25, 84, 24, 83, 23, 82, 22, 81, 21, 80, 20, 79, 20, 78, 20, 77, 20, 76, 21, 75, 22, 74, 24, 73, 25, 72, 26, 71, 27, 70, 28, 69, 29, 68, 30, 67, 32, 66, 33, 65, 34, 64, 35, 63, 36, 62, 38, 61, 39, 60, 40, 59, 41, 58, 42, 57, 43, 56, 45, 55, 46, 54, 47, 53, 48, 52, 49, 51, 50, 50, 50, 49, 50, 48, 47, 47, 42, 46, 37, 45, 33, 44, 28, 43, 24, 42, 19, 41, 18, 40, 17, 39, 16, 38, 17, 37, 17, 36, 17, 35, 18, 34, 18, 33, 19, 32, 19, 31, 20, 30, 20, 29, 21, 28, 21, 27, 22, 26, 21, 25, 20, 24, 19, 23, 20, 22, 20, 21, 21, 20, 22, 19, 28, 18, 28, 17, 29, 16, 30, 15, 31, 14, 32, 13, 34, 12, 35, 11, 67, 10, 68, 9, 68, 8, 68, 7, 69, 6, 69, 5, 69, 4, 70, 3, 70, 2, 73, 2],
    9: [98, 17, 100, 18, 102, 19, 102, 20, 102, 21, 102, 22, 102, 23, 102, 24, 102, 25, 102, 26, 103, 27, 103, 28, 103, 29, 103, 30, 103, 31, 103, 32, 103, 33, 103, 34, 103, 35, 103, 36, 103, 37, 104, 38, 104, 39, 105, 40, 106, 41, 106, 42, 107, 43, 107, 44, 108, 45, 108, 46, 109, 47, 109, 48, 110, 49, 110, 50, 111, 51, 111, 52, 112, 53, 112, 54, 112, 55, 113, 56, 113, 57, 114, 58, 114, 59, 114, 60, 114, 61, 115, 62, 115, 63, 116, 64, 116, 65, 117, 66, 117, 67, 116, 68, 116, 69, 116, 70, 116, 71, 116, 72, 116, 73, 116, 74, 115, 75, 115, 76, 115, 77, 114, 78, 113, 79, 113, 80, 113, 81, 113, 82, 114, 83, 116, 84, 117, 85, 118, 86, 120, 87, 121, 88, 122, 89, 124, 90, 124, 91, 124, 92, 124, 93, 124, 94, 124, 95, 129, 96, 130, 97, 130, 98, 130, 99, 131, 100, 132, 101, 132, 102, 132, 103, 132, 104, 131, 105, 130, 106, 130, 107, 130, 108, 130, 109, 130, 110, 129, 111, 122, 112, 122, 113, 122, 114, 120, 115, 116, 116, 115, 117, 113, 118, 112, 119, 109, 120, 108, 121, 110, 122, 111, 123, 111, 124, 111, 125, 110, 126, 110, 127, 110, 128, 109, 129, 107, 130, 105, 131, 103, 132, 100, 133, 99, 134, 97, 135, 90, 135, 86, 134, 84, 133, 83, 132, 83, 131, 83, 130, 82, 129, 80, 128, 78, 127, 74, 126, 39, 125, 39, 124, 39, 123, 37, 122, 35, 121, 35, 120, 34, 119, 34, 118, 31, 117, 30, 116, 24, 115, 23, 114, 24, 113, 25, 112, 25, 111, 18, 110, 11, 109, 10, 108, 9, 107, 8, 106, 7, 105, 7, 104, 8, 103, 8, 102, 8, 101, 9, 100, 10, 99, 12, 98, 14, 97, 13, 96, 13, 95, 12, 94, 12, 93, 13, 92, 24, 91, 25, 90, 27, 89, 27, 88, 26, 87, 24, 86, 23, 85, 23, 84, 22, 83, 18, 82, 17, 81, 16, 80, 16, 79, 16, 78, 16, 77, 16, 76, 23, 75, 24, 74, 24, 73, 24, 72, 25, 71, 25, 70, 26, 69, 28, 68, 29, 67, 30, 66, 32, 65, 33, 64, 34, 63, 35, 62, 36, 61, 36, 60, 37, 59, 38, 58, 38, 57, 38, 56, 38, 55, 39, 54, 39, 53, 40, 52, 40, 51, 41, 50, 43, 49, 45, 48, 47, 47, 50, 46, 55, 45, 59, 44, 62, 43, 64, 42, 66, 41, 68, 40, 70, 39, 71, 38, 73, 37, 74, 36, 76, 35, 77, 34, 78, 33, 79, 32, 80, 31, 81, 30, 83, 29, 85, 28, 89, 27, 90, 26, 90, 25, 90, 24, 90, 23, 90, 22, 90, 21, 90, 20, 90, 19, 91, 18, 94, 17, 98, 17],
    10: [106, 32, 106, 33, 107, 34, 107, 35, 108, 36, 108, 37, 108, 38, 109, 39, 109, 40, 110, 41, 110, 42, 111, 43, 111, 44, 112, 45, 112, 46, 113, 47, 113, 48, 114, 49, 114, 50, 115, 51, 115, 52, 116, 53, 119, 54, 119, 55, 119, 56, 120, 57, 120, 58, 120, 59, 120, 60, 120, 61, 120, 62, 121, 63, 121, 64, 122, 65, 122, 66, 123, 67, 124, 68, 123, 69, 123, 70, 123, 71, 121, 72, 120, 73, 119, 74, 118, 75, 118, 76, 118, 77, 118, 78, 119, 79, 119, 80, 119, 81, 119, 82, 119, 83, 119, 84, 119, 85, 119, 86, 119, 87, 119, 88, 119, 89, 120, 90, 120, 91, 120, 92, 120, 93, 120, 94, 119, 95, 119, 96, 119, 97, 120, 98, 120, 99, 121, 100, 121, 101, 121, 102, 121, 103, 121, 104, 121, 105, 121, 106, 121, 107, 121, 108, 123, 109, 123, 110, 123, 111, 123, 112, 123, 113, 123, 114, 123, 115, 123, 116, 121, 117, 121, 118, 121, 119, 121, 120, 121, 121, 121, 122, 121, 123, 121, 124, 121, 125, 121, 126, 121, 127, 120, 128, 98, 129, 98, 130, 98, 131, 98, 132, 98, 133, 98, 134, 98, 135, 97, 136, 96, 137, 95, 138, 90, 139, 87, 139, 69, 138, 68, 137, 67, 136, 66, 135, 65, 134, 65, 133, 47, 132, 45, 131, 44, 130, 44, 129, 43, 128, 41, 127, 39, 126, 38, 125, 33, 124, 32, 123, 31, 122, 31, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 31, 110, 31, 109, 31, 108, 30, 107, 28, 106, 27, 105, 25, 104, 24, 103, 23, 102, 23, 101, 23, 100, 23, 99, 22, 98, 22, 97, 22, 96, 22, 95, 22, 94, 22, 93, 21, 92, 21, 91, 21, 90, 23, 89, 24, 88, 26, 87, 27, 86, 28, 85, 30, 84, 31, 83, 33, 82, 34, 81, 32, 80, 32, 79, 32, 78, 32, 77, 33, 76, 34, 75, 35, 74, 36, 73, 37, 72, 38, 71, 39, 70, 40, 69, 42, 68, 43, 67, 44, 66, 45, 65, 46, 64, 47, 63, 48, 62, 49, 61, 50, 60, 52, 59, 53, 58, 55, 57, 59, 56, 61, 55, 62, 54, 63, 53, 64, 52, 65, 51, 67, 50, 68, 49, 72, 48, 73, 47, 76, 46, 77, 45, 82, 44, 84, 43, 86, 42, 86, 41, 86, 40, 87, 39, 89, 38, 90, 37, 92, 36, 93, 35, 95, 34, 97, 33, 102, 32, 106, 32],
    11: [67, 18, 68, 19, 69, 20, 70, 21, 71, 22, 72, 23, 73, 24, 74, 25, 75, 26, 77, 27, 78, 28, 81, 29, 84, 30, 85, 31, 87, 32, 88, 33, 89, 34, 91, 35, 92, 36, 92, 37, 93, 38, 93, 39, 94, 40, 94, 41, 94, 42, 94, 43, 93, 44, 93, 45, 92, 46, 92, 47, 91, 48, 90, 49, 89, 50, 89, 51, 90, 52, 89, 53, 90, 54, 90, 55, 90, 56, 90, 57, 90, 58, 90, 59, 90, 60, 90, 61, 90, 62, 90, 63, 90, 64, 90, 65, 90, 66, 90, 67, 90, 68, 90, 69, 90, 70, 90, 71, 90, 72, 90, 73, 90, 74, 90, 75, 90, 76, 90, 77, 90, 78, 90, 79, 90, 80, 90, 81, 90, 82, 90, 83, 90, 84, 90, 85, 90, 86, 90, 87, 90, 88, 90, 89, 91, 90, 93, 91, 95, 92, 98, 93, 100, 94, 102, 95, 105, 96, 108, 97, 111, 98, 114, 99, 114, 100, 114, 101, 114, 102, 113, 103, 112, 104, 112, 105, 111, 106, 111, 107, 111, 108, 111, 109, 111, 110, 111, 111, 111, 112, 111, 113, 111, 114, 111, 115, 111, 116, 111, 117, 111, 118, 111, 119, 111, 120, 111, 121, 110, 122, 109, 123, 108, 124, 107, 125, 106, 126, 104, 127, 102, 128, 101, 129, 99, 130, 98, 131, 96, 132, 95, 133, 94, 134, 93, 135, 90, 136, 87, 137, 86, 138, 86, 139, 86, 140, 82, 141, 77, 142, 74, 142, 67, 141, 64, 140, 62, 139, 62, 138, 63, 137, 63, 136, 49, 135, 46, 134, 44, 133, 42, 132, 41, 131, 41, 130, 42, 129, 42, 128, 41, 127, 40, 126, 40, 125, 40, 124, 40, 123, 41, 122, 24, 121, 22, 120, 21, 119, 21, 118, 21, 117, 20, 116, 21, 115, 22, 114, 21, 113, 21, 112, 20, 111, 19, 110, 19, 109, 18, 108, 18, 107, 18, 106, 19, 105, 20, 104, 21, 103, 34, 102, 34, 101, 34, 100, 34, 99, 34, 98, 34, 97, 36, 96, 40, 95, 40, 94, 40, 93, 40, 92, 40, 91, 40, 90, 40, 89, 40, 88, 40, 87, 40, 86, 40, 85, 30, 84, 29, 83, 29, 82, 29, 81, 29, 80, 31, 79, 31, 78, 30, 77, 29, 76, 28, 75, 28, 74, 28, 73, 28, 72, 28, 71, 28, 70, 27, 69, 25, 68, 25, 67, 24, 66, 24, 65, 24, 64, 23, 63, 23, 62, 23, 61, 28, 60, 30, 59, 35, 58, 39, 57, 39, 56, 39, 55, 39, 54, 40, 53, 40, 52, 39, 51, 38, 50, 38, 49, 37, 48, 36, 47, 36, 46, 35, 45, 35, 44, 35, 43, 35, 42, 35, 41, 36, 40, 36, 39, 37, 38, 38, 37, 39, 36, 40, 35, 41, 34, 42, 33, 44, 32, 45, 31, 46, 30, 48, 29, 50, 28, 52, 27, 53, 26, 55, 25, 56, 24, 57, 23, 59, 22, 60, 21, 61, 20, 62, 19, 63, 18, 67, 18],
    13: [47, 34, 101, 35, 102, 36, 103, 37, 103, 38, 103, 39, 103, 40, 103, 41, 103, 42, 103, 43, 103, 44, 103, 45, 103, 46, 104, 47, 104, 48, 104, 49, 103, 50, 104, 51, 106, 52, 104, 53, 104, 54, 106, 55, 106, 56, 107, 57, 106, 58, 107, 59, 108, 60, 108, 61, 109, 62, 110, 63, 110, 64, 110, 65, 111, 66, 111, 67, 110, 68, 111, 69, 111, 70, 111, 71, 111, 72, 111, 73, 113, 74, 115, 75, 117, 76, 119, 77, 120, 78, 122, 79, 124, 80, 126, 81, 128, 82, 130, 83, 132, 84, 134, 85, 134, 86, 134, 87, 133, 88, 132, 89, 131, 90, 131, 91, 131, 92, 131, 93, 131, 94, 131, 95, 131, 96, 131, 97, 136, 98, 137, 99, 137, 100, 137, 101, 138, 102, 138, 103, 139, 104, 140, 105, 140, 106, 139, 107, 138, 108, 138, 109, 138, 110, 138, 111, 138, 112, 136, 113, 136, 114, 133, 115, 135, 116, 135, 117, 134, 118, 130, 119, 127, 120, 127, 121, 127, 122, 126, 123, 125, 124, 127, 125, 127, 126, 126, 127, 125, 128, 126, 129, 127, 130, 126, 131, 128, 132, 128, 133, 127, 134, 125, 135, 119, 136, 118, 137, 111, 138, 106, 139, 79, 139, 73, 138, 72, 137, 65, 136, 63, 135, 62, 134, 61, 133, 61, 132, 59, 131, 56, 130, 51, 129, 49, 128, 48, 127, 47, 126, 29, 125, 27, 124, 26, 123, 25, 122, 25, 121, 25, 120, 25, 119, 25, 118, 26, 117, 28, 116, 31, 115, 30, 114, 29, 113, 26, 112, 19, 111, 18, 110, 15, 109, 14, 108, 13, 107, 14, 106, 12, 105, 12, 104, 12, 103, 12, 102, 13, 101, 12, 100, 12, 99, 8, 98, 7, 97, 7, 96, 8, 95, 6, 94, 5, 93, 5, 92, 6, 91, 6, 90, 8, 89, 11, 88, 11, 87, 13, 86, 13, 85, 13, 84, 13, 83, 13, 82, 13, 81, 13, 80, 13, 79, 13, 78, 13, 77, 13, 76, 13, 75, 13, 74, 13, 73, 13, 72, 12, 71, 11, 70, 9, 69, 9, 68, 9, 67, 10, 66, 11, 65, 12, 64, 14, 63, 14, 62, 15, 61, 15, 60, 16, 59, 17, 58, 18, 57, 19, 56, 20, 55, 21, 54, 21, 53, 22, 52, 32, 51, 32, 50, 32, 49, 33, 48, 33, 47, 33, 46, 33, 45, 33, 44, 34, 43, 34, 42, 35, 41, 35, 40, 35, 39, 36, 38, 37, 37, 39, 36, 42, 35, 43, 34, 47, 34],
    14: [76, 23, 78, 24, 79, 25, 83, 26, 86, 27, 87, 28, 88, 29, 88, 30, 89, 31, 89, 32, 89, 33, 90, 34, 90, 35, 89, 36, 89, 37, 89, 38, 88, 39, 87, 40, 85, 41, 88, 42, 93, 43, 95, 44, 95, 45, 96, 46, 96, 47, 97, 48, 97, 49, 96, 50, 96, 51, 96, 52, 95, 53, 95, 54, 94, 55, 93, 56, 90, 57, 87, 58, 118, 59, 118, 60, 117, 61, 117, 62, 117, 63, 116, 64, 116, 65, 114, 66, 114, 67, 119, 68, 119, 69, 120, 70, 120, 71, 120, 72, 121, 73, 120, 74, 120, 75, 120, 76, 120, 77, 122, 78, 123, 79, 123, 80, 122, 81, 122, 82, 120, 83, 118, 84, 119, 85, 121, 86, 132, 87, 133, 88, 132, 89, 132, 90, 133, 91, 133, 92, 133, 93, 134, 94, 134, 95, 134, 96, 134, 97, 134, 98, 135, 99, 137, 100, 138, 101, 136, 102, 128, 103, 129, 104, 130, 105, 130, 106, 130, 107, 130, 108, 129, 109, 128, 110, 128, 111, 128, 112, 128, 113, 127, 114, 123, 115, 124, 116, 125, 117, 126, 118, 126, 119, 126, 120, 129, 121, 129, 122, 130, 123, 131, 124, 125, 125, 128, 126, 115, 127, 115, 128, 116, 129, 115, 130, 113, 131, 107, 132, 92, 133, 93, 134, 91, 135, 92, 136, 89, 137, 86, 138, 81, 139, 75, 139, 50, 138, 48, 137, 47, 136, 44, 135, 41, 134, 36, 133, 35, 132, 35, 131, 32, 130, 30, 129, 30, 128, 30, 127, 25, 126, 25, 125, 23, 124, 23, 123, 23, 122, 21, 121, 20, 120, 19, 119, 18, 118, 18, 117, 17, 116, 16, 115, 16, 114, 16, 113, 17, 112, 16, 111, 16, 110, 17, 109, 18, 108, 20, 107, 24, 106, 17, 105, 12, 104, 13, 103, 11, 102, 14, 101, 13, 100, 15, 99, 16, 98, 16, 97, 17, 96, 18, 95, 19, 94, 19, 93, 20, 92, 21, 91, 22, 90, 29, 89, 29, 88, 30, 87, 29, 86, 24, 85, 23, 84, 22, 83, 21, 82, 21, 81, 22, 80, 26, 79, 27, 78, 28, 77, 30, 76, 30, 75, 31, 74, 31, 73, 32, 72, 32, 71, 32, 70, 32, 69, 32, 68, 32, 67, 33, 66, 33, 65, 33, 64, 34, 63, 35, 62, 36, 61, 38, 60, 66, 59, 66, 58, 66, 57, 66, 56, 50, 55, 49, 54, 46, 53, 45, 52, 45, 51, 44, 50, 44, 49, 44, 48, 45, 47, 45, 46, 45, 45, 46, 44, 46, 43, 47, 42, 47, 41, 48, 40, 49, 39, 51, 38, 58, 37, 57, 36, 57, 35, 57, 34, 59, 33, 59, 32, 60, 31, 60, 30, 60, 29, 61, 28, 64, 27, 66, 26, 68, 25, 70, 24, 72, 23, 76, 23],
    15: [83, 14, 85, 15, 86, 16, 87, 17, 88, 18, 88, 19, 88, 20, 88, 21, 88, 22, 88, 23, 88, 24, 88, 25, 88, 26, 88, 27, 88, 28, 88, 29, 88, 30, 88, 31, 88, 32, 88, 33, 89, 34, 91, 35, 94, 36, 99, 37, 103, 38, 106, 39, 107, 40, 109, 41, 110, 42, 110, 43, 111, 44, 112, 45, 112, 46, 112, 47, 113, 48, 113, 49, 114, 50, 114, 51, 114, 52, 115, 53, 115, 54, 115, 55, 116, 56, 117, 57, 117, 58, 119, 59, 120, 60, 120, 61, 121, 62, 122, 63, 123, 64, 124, 65, 124, 66, 125, 67, 125, 68, 126, 69, 126, 70, 125, 71, 125, 72, 125, 73, 124, 74, 123, 75, 122, 76, 122, 77, 122, 78, 122, 79, 122, 80, 122, 81, 122, 82, 122, 83, 124, 84, 125, 85, 127, 86, 132, 87, 133, 88, 133, 89, 134, 90, 135, 91, 136, 92, 135, 93, 135, 94, 133, 95, 133, 96, 133, 97, 133, 98, 133, 99, 133, 100, 133, 101, 133, 102, 133, 103, 131, 104, 130, 105, 128, 106, 124, 107, 123, 108, 122, 109, 122, 110, 120, 111, 121, 112, 123, 113, 125, 114, 127, 115, 128, 116, 130, 117, 131, 118, 132, 119, 132, 120, 131, 121, 130, 122, 128, 123, 126, 124, 126, 125, 124, 126, 123, 127, 121, 128, 120, 129, 118, 130, 115, 131, 113, 132, 112, 133, 110, 134, 109, 135, 107, 136, 105, 137, 104, 138, 102, 139, 100, 140, 99, 141, 97, 142, 95, 143, 91, 143, 89, 142, 88, 141, 86, 140, 85, 139, 83, 138, 81, 137, 75, 136, 73, 135, 72, 134, 59, 133, 57, 132, 57, 131, 57, 130, 57, 129, 56, 128, 54, 127, 52, 126, 51, 125, 49, 124, 47, 123, 31, 122, 30, 121, 29, 120, 29, 119, 28, 118, 26, 117, 26, 116, 25, 115, 24, 114, 23, 113, 24, 112, 24, 111, 25, 110, 26, 109, 25, 108, 24, 107, 23, 106, 19, 105, 18, 104, 17, 103, 15, 102, 14, 101, 14, 100, 14, 99, 14, 98, 14, 97, 12, 96, 12, 95, 12, 94, 12, 93, 12, 92, 12, 91, 12, 90, 12, 89, 12, 88, 12, 87, 12, 86, 12, 85, 12, 84, 10, 83, 9, 82, 9, 81, 9, 80, 9, 79, 10, 78, 10, 77, 10, 76, 11, 75, 13, 74, 14, 73, 15, 72, 16, 71, 17, 70, 17, 69, 18, 68, 19, 67, 20, 66, 21, 65, 22, 64, 22, 63, 23, 62, 24, 61, 25, 60, 26, 59, 26, 58, 26, 57, 26, 56, 26, 55, 27, 54, 35, 53, 35, 52, 36, 51, 37, 50, 38, 49, 39, 48, 40, 47, 38, 46, 38, 45, 37, 44, 36, 43, 36, 42, 36, 41, 36, 40, 36, 39, 38, 38, 43, 37, 43, 36, 44, 35, 44, 34, 45, 33, 46, 32, 47, 31, 47, 30, 47, 29, 47, 28, 47, 27, 47, 26, 47, 25, 46, 24, 46, 23, 46, 22, 46, 21, 46, 20, 46, 19, 46, 18, 47, 17, 49, 16, 50, 15, 77, 14, 83, 14],
    16: [110, 1, 110, 2, 113, 3, 115, 4, 119, 5, 121, 6, 128, 7, 131, 8, 134, 9, 137, 10, 139, 11, 143, 12, 144, 13, 144, 14, 144, 15, 143, 16, 142, 17, 138, 18, 138, 19, 138, 20, 137, 21, 138, 22, 139, 23, 140, 24, 139, 25, 138, 26, 138, 27, 138, 28, 138, 29, 138, 30, 138, 31, 138, 32, 138, 33, 137, 34, 137, 35, 137, 36, 137, 37, 137, 38, 137, 39, 137, 40, 137, 41, 138, 42, 138, 43, 138, 44, 138, 45, 137, 46, 136, 47, 135, 48, 134, 49, 131, 50, 129, 51, 127, 52, 124, 53, 118, 54, 116, 55, 115, 56, 110, 57, 104, 58, 105, 59, 106, 60, 107, 61, 108, 62, 108, 63, 139, 64, 141, 65, 145, 66, 147, 67, 147, 68, 147, 69, 148, 70, 149, 71, 149, 72, 151, 73, 152, 74, 152, 75, 152, 76, 153, 77, 154, 78, 154, 79, 153, 80, 153, 81, 153, 82, 154, 83, 154, 84, 154, 85, 154, 86, 153, 87, 153, 88, 152, 89, 151, 90, 149, 91, 150, 92, 149, 93, 147, 94, 145, 95, 144, 96, 144, 97, 140, 98, 98, 99, 98, 100, 99, 101, 126, 102, 131, 103, 131, 104, 131, 105, 131, 106, 131, 107, 131, 108, 131, 109, 131, 110, 130, 111, 130, 112, 130, 113, 130, 114, 131, 115, 132, 116, 133, 117, 132, 118, 132, 119, 124, 120, 123, 121, 123, 122, 122, 123, 121, 124, 121, 125, 120, 126, 119, 127, 119, 128, 118, 129, 118, 130, 117, 131, 117, 132, 116, 133, 115, 134, 115, 135, 114, 136, 112, 137, 111, 138, 110, 139, 110, 140, 109, 141, 108, 142, 107, 143, 106, 144, 105, 145, 104, 146, 103, 147, 102, 148, 101, 149, 100, 150, 99, 151, 98, 152, 98, 153, 98, 154, 98, 155, 98, 156, 91, 157, 90, 158, 89, 159, 89, 160, 89, 161, 89, 162, 89, 163, 89, 164, 89, 165, 86, 166, 76, 167, 74, 168, 72, 169, 70, 170, 69, 171, 66, 172, 65, 173, 64, 174, 64, 175, 64, 176, 64, 177, 63, 178, 57, 178, 56, 177, 54, 176, 52, 175, 50, 174, 48, 173, 46, 172, 45, 171, 44, 170, 44, 169, 44, 168, 45, 167, 45, 166, 46, 165, 45, 164, 45, 163, 45, 162, 46, 161, 48, 160, 50, 159, 53, 158, 55, 157, 57, 156, 60, 155, 62, 154, 63, 153, 65, 152, 68, 151, 31, 150, 31, 149, 10, 148, 9, 147, 8, 146, 8, 145, 7, 144, 7, 143, 7, 142, 8, 141, 8, 140, 8, 139, 8, 138, 8, 137, 8, 136, 8, 135, 8, 134, 9, 133, 11, 132, 28, 131, 28, 130, 28, 129, 29, 128, 30, 127, 31, 126, 33, 125, 34, 124, 54, 123, 54, 122, 54, 121, 54, 120, 54, 119, 55, 118, 55, 117, 55, 116, 55, 115, 55, 114, 56, 113, 57, 112, 60, 111, 60, 110, 59, 109, 59, 108, 59, 107, 59, 106, 60, 105, 64, 104, 65, 103, 64, 102, 63, 101, 63, 100, 63, 99, 63, 98, 64, 97, 67, 96, 67, 95, 67, 94, 67, 93, 67, 92, 67, 91, 67, 90, 67, 89, 68, 88, 68, 87, 69, 86, 69, 85, 69, 84, 69, 83, 69, 82, 68, 81, 67, 80, 67, 79, 67, 78, 67, 77, 67, 76, 67, 75, 67, 74, 67, 73, 67, 72, 65, 71, 63, 70, 63, 69, 63, 68, 62, 67, 62, 66, 63, 65, 64, 64, 66, 63, 67, 62, 67, 61, 60, 60, 60, 59, 59, 58, 59, 57, 59, 56, 60, 55, 65, 54, 67, 53, 70, 52, 73, 51, 76, 50, 78, 49, 88, 48, 50, 47, 50, 46, 49, 45, 48, 44, 47, 43, 47, 42, 46, 41, 47, 40, 47, 39, 47, 38, 47, 37, 47, 36, 48, 35, 50, 34, 51, 33, 62, 32, 62, 31, 62, 30, 63, 29, 66, 28, 67, 27, 68, 26, 70, 25, 71, 24, 73, 23, 68, 22, 68, 21, 68, 20, 69, 19, 71, 18, 72, 17, 74, 16, 76, 15, 77, 14, 79, 13, 80, 12, 80, 11, 77, 10, 76, 9, 75, 8, 75, 7, 76, 6, 78, 5, 80, 4, 81, 3, 83, 2, 85, 1, 110, 1],
    17: [68, 40, 70, 41, 71, 42, 72, 43, 112, 44, 112, 45, 111, 46, 116, 47, 115, 48, 114, 49, 115, 50, 115, 51, 115, 52, 115, 53, 118, 54, 118, 55, 119, 56, 121, 57, 122, 58, 120, 59, 119, 60, 118, 61, 116, 62, 110, 63, 110, 64, 110, 65, 111, 66, 112, 67, 113, 68, 115, 69, 117, 70, 118, 71, 121, 72, 131, 73, 132, 74, 132, 75, 131, 76, 131, 77, 131, 78, 132, 79, 133, 80, 134, 81, 135, 82, 135, 83, 136, 84, 133, 85, 135, 86, 136, 87, 136, 88, 137, 89, 137, 90, 137, 91, 137, 92, 137, 93, 138, 94, 138, 95, 139, 96, 139, 97, 139, 98, 139, 99, 139, 100, 138, 101, 138, 102, 143, 103, 142, 104, 144, 105, 145, 106, 143, 107, 133, 108, 133, 109, 132, 110, 134, 111, 134, 112, 129, 113, 129, 114, 129, 115, 129, 116, 131, 117, 129, 118, 121, 119, 120, 120, 117, 121, 114, 122, 114, 123, 114, 124, 115, 125, 117, 126, 117, 127, 116, 128, 105, 129, 103, 130, 101, 131, 94, 132, 92, 133, 87, 134, 85, 135, 83, 136, 81, 137, 79, 138, 75, 138, 73, 137, 72, 136, 70, 135, 55, 134, 53, 133, 53, 132, 34, 131, 33, 130, 33, 129, 29, 128, 27, 127, 26, 126, 24, 125, 22, 124, 21, 123, 20, 122, 20, 121, 18, 120, 17, 119, 17, 118, 19, 117, 20, 116, 20, 115, 21, 114, 20, 113, 20, 112, 16, 111, 16, 110, 18, 109, 17, 108, 17, 107, 14, 106, 12, 105, 12, 104, 13, 103, 14, 102, 12, 101, 8, 100, 8, 99, 9, 98, 8, 97, 8, 96, 9, 95, 11, 94, 13, 93, 13, 92, 13, 91, 13, 90, 13, 89, 13, 88, 13, 87, 13, 86, 13, 85, 13, 84, 13, 83, 13, 82, 13, 81, 13, 80, 13, 79, 13, 78, 13, 77, 13, 76, 13, 75, 13, 74, 19, 73, 19, 72, 20, 71, 23, 70, 24, 69, 26, 68, 29, 67, 29, 66, 29, 65, 29, 64, 29, 63, 29, 62, 29, 61, 30, 60, 30, 59, 30, 58, 30, 57, 31, 56, 31, 55, 32, 54, 33, 53, 33, 52, 36, 51, 36, 50, 38, 49, 45, 48, 48, 47, 51, 46, 53, 45, 55, 44, 56, 43, 58, 42, 60, 41, 62, 40, 68, 40],
    18: [111, 12, 111, 13, 123, 14, 127, 15, 127, 16, 126, 17, 126, 18, 126, 19, 126, 20, 126, 21, 124, 22, 126, 23, 125, 24, 125, 25, 125, 26, 125, 27, 125, 28, 125, 29, 123, 30, 125, 31, 125, 32, 125, 33, 125, 34, 125, 35, 125, 36, 125, 37, 123, 38, 125, 39, 126, 40, 126, 41, 126, 42, 126, 43, 126, 44, 126, 45, 127, 46, 121, 47, 120, 48, 112, 49, 110, 50, 110, 51, 110, 52, 110, 53, 110, 54, 110, 55, 111, 56, 111, 57, 111, 58, 111, 59, 111, 60, 111, 61, 111, 62, 111, 63, 111, 64, 111, 65, 111, 66, 111, 67, 111, 68, 111, 69, 111, 70, 111, 71, 111, 72, 111, 73, 112, 74, 113, 75, 113, 76, 114, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 115, 84, 116, 85, 117, 86, 117, 87, 117, 88, 117, 89, 117, 90, 117, 91, 118, 92, 118, 93, 118, 94, 120, 95, 121, 96, 121, 97, 120, 98, 123, 99, 124, 100, 125, 101, 126, 102, 126, 103, 126, 104, 126, 105, 126, 106, 127, 107, 127, 108, 127, 109, 126, 110, 127, 111, 127, 112, 127, 113, 127, 114, 125, 115, 125, 116, 125, 117, 124, 118, 123, 119, 123, 120, 124, 121, 124, 122, 124, 123, 125, 124, 124, 125, 126, 126, 126, 127, 125, 128, 125, 129, 125, 130, 121, 131, 121, 132, 121, 133, 120, 134, 116, 135, 115, 136, 114, 137, 110, 138, 101, 138, 65, 137, 64, 136, 64, 135, 57, 134, 50, 133, 49, 132, 47, 131, 45, 130, 44, 129, 42, 128, 39, 127, 38, 126, 37, 125, 36, 124, 36, 123, 34, 122, 33, 121, 31, 120, 30, 119, 27, 118, 26, 117, 24, 116, 24, 115, 24, 114, 23, 113, 23, 112, 22, 111, 21, 110, 21, 109, 22, 108, 22, 107, 21, 106, 21, 105, 21, 104, 22, 103, 21, 102, 21, 101, 21, 100, 22, 99, 23, 98, 22, 97, 21, 96, 21, 95, 21, 94, 21, 93, 24, 92, 24, 91, 24, 90, 24, 89, 27, 88, 27, 87, 32, 86, 32, 85, 31, 84, 30, 83, 29, 82, 29, 81, 28, 80, 28, 79, 28, 78, 28, 77, 28, 76, 28, 75, 28, 74, 28, 73, 28, 72, 28, 71, 29, 70, 29, 69, 30, 68, 30, 67, 31, 66, 31, 65, 32, 64, 32, 63, 33, 62, 34, 61, 34, 60, 35, 59, 36, 58, 36, 57, 37, 56, 38, 55, 38, 54, 39, 53, 39, 52, 40, 51, 40, 50, 41, 49, 41, 48, 41, 47, 41, 46, 41, 45, 41, 44, 41, 43, 40, 42, 40, 41, 41, 40, 41, 39, 42, 38, 42, 37, 43, 36, 44, 35, 44, 34, 44, 33, 45, 32, 46, 31, 50, 30, 52, 29, 59, 28, 59, 27, 60, 26, 60, 25, 60, 24, 60, 23, 61, 22, 64, 21, 106, 20, 106, 19, 106, 18, 106, 17, 106, 16, 105, 15, 105, 14, 105, 13, 106, 12, 111, 12],
    19: [59, 26, 59, 27, 59, 28, 60, 29, 61, 30, 62, 31, 65, 32, 64, 33, 63, 34, 63, 35, 63, 36, 63, 37, 63, 38, 63, 39, 62, 40, 62, 41, 62, 42, 62, 43, 61, 44, 61, 45, 61, 46, 60, 47, 60, 48, 59, 49, 59, 50, 59, 51, 80, 52, 80, 53, 82, 54, 83, 55, 88, 56, 87, 57, 85, 58, 80, 59, 109, 60, 109, 61, 111, 62, 112, 63, 117, 64, 116, 65, 117, 66, 115, 67, 109, 68, 109, 69, 109, 70, 109, 71, 110, 72, 111, 73, 112, 74, 114, 75, 115, 76, 116, 77, 117, 78, 118, 79, 119, 80, 120, 81, 122, 82, 123, 83, 123, 84, 124, 85, 124, 86, 124, 87, 124, 88, 124, 89, 124, 90, 124, 91, 125, 92, 125, 93, 125, 94, 125, 95, 125, 96, 125, 97, 126, 98, 127, 99, 129, 100, 130, 101, 131, 102, 131, 103, 132, 104, 132, 105, 134, 106, 134, 107, 134, 108, 135, 109, 135, 110, 135, 111, 135, 112, 135, 113, 135, 114, 136, 115, 134, 116, 134, 117, 134, 118, 134, 119, 132, 120, 132, 121, 131, 122, 130, 123, 130, 124, 127, 125, 126, 126, 125, 127, 120, 128, 117, 129, 112, 130, 110, 131, 73, 132, 73, 133, 72, 134, 72, 135, 62, 135, 62, 134, 62, 133, 63, 132, 60, 131, 50, 130, 50, 129, 50, 128, 51, 127, 51, 126, 28, 125, 24, 124, 22, 123, 21, 122, 21, 121, 19, 120, 17, 119, 15, 118, 15, 117, 13, 116, 13, 115, 12, 114, 12, 113, 10, 112, 10, 111, 11, 110, 12, 109, 12, 108, 14, 107, 14, 106, 16, 105, 18, 104, 20, 103, 20, 102, 20, 101, 20, 100, 20, 99, 20, 98, 20, 97, 20, 96, 20, 95, 19, 94, 18, 93, 18, 92, 18, 91, 19, 90, 20, 89, 20, 88, 21, 87, 22, 86, 22, 85, 23, 84, 24, 83, 25, 82, 25, 81, 26, 80, 27, 79, 27, 78, 28, 77, 29, 76, 55, 75, 55, 74, 55, 73, 55, 72, 55, 71, 55, 70, 55, 69, 55, 68, 55, 67, 55, 66, 55, 65, 55, 64, 55, 63, 55, 62, 55, 61, 55, 60, 55, 59, 55, 58, 55, 57, 55, 56, 55, 55, 52, 54, 52, 53, 51, 52, 51, 51, 50, 50, 50, 49, 49, 48, 49, 47, 48, 46, 48, 45, 48, 44, 49, 43, 49, 42, 50, 41, 50, 40, 50, 39, 50, 38, 51, 37, 51, 36, 51, 35, 51, 34, 51, 33, 51, 32, 51, 31, 54, 30, 55, 29, 55, 28, 55, 27, 56, 26, 59, 26],
    20: [61, 36, 63, 37, 64, 38, 66, 39, 67, 40, 69, 41, 70, 42, 72, 43, 74, 44, 76, 45, 78, 46, 109, 47, 108, 48, 107, 49, 108, 50, 109, 51, 109, 52, 108, 53, 109, 54, 110, 55, 110, 56, 116, 57, 116, 58, 116, 59, 116, 60, 116, 61, 114, 62, 115, 63, 115, 64, 114, 65, 115, 66, 115, 67, 116, 68, 117, 69, 117, 70, 117, 71, 118, 72, 118, 73, 118, 74, 119, 75, 119, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 118, 83, 117, 84, 117, 85, 117, 86, 117, 87, 117, 88, 117, 89, 117, 90, 117, 91, 116, 92, 116, 93, 116, 94, 116, 95, 116, 96, 116, 97, 116, 98, 116, 99, 116, 100, 116, 101, 116, 102, 116, 103, 117, 104, 117, 105, 117, 106, 117, 107, 117, 108, 117, 109, 117, 110, 117, 111, 117, 112, 120, 113, 123, 114, 124, 115, 125, 116, 124, 117, 123, 118, 124, 119, 128, 120, 129, 121, 129, 122, 129, 123, 128, 124, 124, 125, 122, 126, 121, 127, 121, 128, 119, 129, 116, 130, 115, 131, 111, 132, 109, 133, 106, 134, 104, 135, 102, 136, 99, 137, 94, 138, 92, 138, 89, 137, 86, 136, 86, 135, 83, 134, 55, 133, 52, 132, 52, 131, 53, 130, 52, 129, 54, 128, 53, 127, 43, 126, 43, 125, 43, 124, 43, 123, 43, 122, 43, 121, 43, 120, 43, 119, 42, 118, 16, 117, 16, 116, 16, 115, 16, 114, 17, 113, 17, 112, 17, 111, 13, 110, 13, 109, 13, 108, 13, 107, 14, 106, 18, 105, 19, 104, 22, 103, 28, 102, 28, 101, 29, 100, 29, 99, 29, 98, 29, 97, 29, 96, 29, 95, 29, 94, 29, 93, 29, 92, 29, 91, 29, 90, 29, 89, 29, 88, 29, 87, 29, 86, 29, 85, 29, 84, 29, 83, 29, 82, 29, 81, 29, 80, 26, 79, 25, 78, 24, 77, 23, 76, 23, 75, 26, 74, 33, 73, 37, 72, 37, 71, 37, 70, 36, 69, 35, 68, 35, 67, 34, 66, 33, 65, 33, 64, 33, 63, 32, 62, 32, 61, 32, 60, 32, 59, 32, 58, 32, 57, 33, 56, 34, 55, 35, 54, 36, 53, 39, 52, 41, 51, 42, 50, 42, 49, 43, 48, 43, 47, 43, 46, 42, 45, 41, 44, 40, 43, 40, 42, 40, 41, 41, 40, 53, 39, 54, 38, 60, 37, 58, 36, 61, 36],
    21: [89, 21, 90, 22, 90, 23, 90, 24, 90, 25, 90, 26, 90, 27, 90, 28, 90, 29, 91, 30, 91, 31, 91, 32, 91, 33, 91, 34, 91, 35, 91, 36, 91, 37, 92, 38, 92, 39, 92, 40, 92, 41, 93, 42, 95, 43, 98, 44, 101, 45, 102, 46, 102, 47, 106, 48, 109, 49, 111, 50, 113, 51, 116, 52, 117, 53, 119, 54, 120, 55, 121, 56, 122, 57, 123, 58, 124, 59, 125, 60, 126, 61, 127, 62, 128, 63, 129, 64, 130, 65, 131, 66, 132, 67, 133, 68, 134, 69, 135, 70, 136, 71, 136, 72, 135, 73, 132, 74, 132, 75, 132, 76, 133, 77, 132, 78, 132, 79, 132, 80, 132, 81, 132, 82, 132, 83, 132, 84, 132, 85, 132, 86, 132, 87, 132, 88, 133, 89, 132, 90, 133, 91, 133, 92, 133, 93, 133, 94, 133, 95, 135, 96, 135, 97, 136, 98, 137, 99, 136, 100, 134, 101, 131, 102, 129, 103, 126, 104, 125, 105, 124, 106, 126, 107, 127, 108, 127, 109, 126, 110, 126, 111, 127, 112, 128, 113, 128, 114, 125, 115, 113, 116, 111, 117, 109, 118, 108, 119, 108, 120, 106, 121, 104, 122, 104, 123, 114, 124, 113, 125, 112, 126, 99, 127, 102, 128, 102, 129, 102, 130, 103, 131, 100, 132, 100, 133, 100, 134, 97, 135, 97, 136, 96, 137, 89, 138, 84, 138, 82, 137, 78, 136, 77, 135, 75, 134, 73, 133, 72, 132, 72, 131, 69, 130, 68, 129, 60, 128, 58, 127, 49, 126, 48, 125, 46, 124, 46, 123, 47, 122, 47, 121, 38, 120, 36, 119, 36, 118, 21, 117, 16, 116, 17, 115, 10, 114, 9, 113, 9, 112, 10, 111, 11, 110, 7, 109, 4, 108, 2, 107, 2, 106, 3, 105, 3, 104, 4, 103, 5, 102, 5, 101, 5, 100, 5, 99, 4, 98, 4, 97, 4, 96, 5, 95, 6, 94, 6, 93, 7, 92, 13, 91, 16, 90, 18, 89, 18, 88, 17, 87, 17, 86, 17, 85, 17, 84, 17, 83, 17, 82, 17, 81, 17, 80, 17, 79, 17, 78, 18, 77, 18, 76, 18, 75, 18, 74, 17, 73, 16, 72, 14, 71, 12, 70, 11, 69, 11, 68, 12, 67, 13, 66, 14, 65, 14, 64, 15, 63, 16, 62, 16, 61, 17, 60, 18, 59, 18, 58, 19, 57, 20, 56, 21, 55, 21, 54, 22, 53, 22, 52, 23, 51, 23, 50, 23, 49, 23, 48, 23, 47, 27, 46, 27, 45, 28, 44, 29, 43, 29, 42, 30, 41, 31, 40, 32, 39, 32, 38, 33, 37, 34, 36, 71, 35, 72, 34, 73, 33, 80, 32, 81, 31, 81, 30, 81, 29, 81, 28, 81, 27, 81, 26, 81, 25, 81, 24, 81, 23, 82, 22, 83, 21, 89, 21],
    22: [55, 14, 56, 15, 56, 16, 56, 17, 56, 18, 55, 19, 55, 20, 55, 21, 54, 22, 54, 23, 54, 24, 53, 25, 53, 26, 54, 27, 55, 28, 57, 29, 58, 30, 60, 31, 61, 32, 63, 33, 64, 34, 68, 35, 70, 36, 72, 37, 73, 38, 73, 39, 74, 40, 76, 41, 101, 42, 102, 43, 103, 44, 103, 45, 103, 46, 102, 47, 102, 48, 102, 49, 101, 50, 101, 51, 100, 52, 100, 53, 101, 54, 120, 55, 120, 56, 121, 57, 121, 58, 121, 59, 121, 60, 122, 61, 121, 62, 122, 63, 122, 64, 122, 65, 122, 66, 122, 67, 122, 68, 122, 69, 123, 70, 123, 71, 123, 72, 123, 73, 123, 74, 123, 75, 124, 76, 124, 77, 124, 78, 123, 79, 123, 80, 124, 81, 124, 82, 125, 83, 125, 84, 125, 85, 126, 86, 126, 87, 126, 88, 126, 89, 126, 90, 126, 91, 126, 92, 127, 93, 127, 94, 126, 95, 126, 96, 126, 97, 125, 98, 124, 99, 124, 100, 124, 101, 124, 102, 125, 103, 125, 104, 125, 105, 124, 106, 128, 107, 129, 108, 129, 109, 129, 110, 129, 111, 129, 112, 129, 113, 129, 114, 129, 115, 129, 116, 129, 117, 129, 118, 130, 119, 129, 120, 127, 121, 124, 122, 132, 123, 132, 124, 132, 125, 131, 126, 129, 127, 127, 128, 125, 129, 124, 130, 122, 131, 120, 132, 116, 133, 117, 134, 117, 135, 116, 136, 102, 137, 100, 138, 60, 138, 59, 137, 58, 136, 58, 135, 56, 134, 58, 133, 58, 132, 58, 131, 57, 130, 56, 129, 55, 128, 49, 127, 48, 126, 41, 125, 41, 124, 41, 123, 39, 122, 38, 121, 38, 120, 35, 119, 33, 118, 33, 117, 33, 116, 45, 115, 44, 114, 44, 113, 44, 112, 43, 111, 41, 110, 16, 109, 14, 108, 13, 107, 13, 106, 13, 105, 13, 104, 15, 103, 16, 102, 14, 101, 13, 100, 13, 99, 12, 98, 13, 97, 15, 96, 15, 95, 15, 94, 16, 93, 16, 92, 17, 91, 20, 90, 20, 89, 19, 88, 18, 87, 18, 86, 19, 85, 19, 84, 19, 83, 19, 82, 20, 81, 22, 80, 22, 79, 32, 78, 32, 77, 32, 76, 32, 75, 32, 74, 33, 73, 33, 72, 33, 71, 29, 70, 27, 69, 26, 68, 26, 67, 27, 66, 28, 65, 28, 64, 28, 63, 29, 62, 29, 61, 30, 60, 30, 59, 30, 58, 31, 57, 31, 56, 32, 55, 32, 54, 32, 53, 33, 52, 33, 51, 34, 50, 34, 49, 35, 48, 35, 47, 35, 46, 36, 45, 36, 44, 37, 43, 37, 42, 38, 41, 38, 40, 39, 39, 39, 38, 39, 37, 40, 36, 40, 35, 41, 34, 40, 33, 39, 32, 39, 31, 39, 30, 40, 29, 40, 28, 41, 27, 42, 26, 43, 25, 42, 24, 41, 23, 40, 22, 39, 21, 39, 20, 40, 19, 42, 18, 48, 17, 48, 16, 49, 15, 50, 14, 55, 14],
    23: [100, 18, 110, 19, 113, 20, 113, 21, 117, 22, 119, 23, 119, 24, 120, 25, 121, 26, 121, 27, 122, 28, 122, 29, 122, 30, 131, 31, 131, 32, 133, 33, 134, 34, 134, 35, 136, 36, 136, 37, 137, 38, 137, 39, 137, 40, 136, 41, 137, 42, 138, 43, 138, 44, 137, 45, 137, 46, 138, 47, 138, 48, 138, 49, 138, 50, 138, 51, 137, 52, 137, 53, 136, 54, 136, 55, 134, 56, 133, 57, 132, 58, 113, 59, 123, 60, 125, 61, 125, 62, 126, 63, 129, 64, 129, 65, 132, 66, 132, 67, 133, 68, 133, 69, 134, 70, 134, 71, 135, 72, 135, 73, 135, 74, 135, 75, 134, 76, 134, 77, 133, 78, 133, 79, 131, 80, 131, 81, 127, 82, 121, 83, 121, 84, 117, 85, 110, 86, 123, 87, 123, 88, 125, 89, 125, 90, 125, 91, 124, 92, 125, 93, 125, 94, 126, 95, 126, 96, 126, 97, 126, 98, 126, 99, 125, 100, 117, 101, 117, 102, 118, 103, 126, 104, 126, 105, 132, 106, 132, 107, 135, 108, 136, 109, 136, 110, 137, 111, 137, 112, 142, 113, 142, 114, 141, 115, 146, 116, 141, 117, 141, 118, 111, 119, 114, 120, 113, 121, 98, 122, 96, 123, 93, 124, 91, 125, 88, 126, 88, 127, 88, 128, 93, 129, 93, 130, 94, 131, 97, 132, 97, 133, 91, 134, 85, 135, 84, 136, 84, 137, 84, 138, 82, 139, 81, 140, 80, 141, 74, 141, 71, 140, 70, 139, 69, 138, 68, 137, 68, 136, 68, 135, 68, 134, 68, 133, 39, 132, 35, 131, 34, 130, 29, 129, 29, 128, 28, 127, 27, 126, 27, 125, 27, 124, 29, 123, 29, 122, 21, 121, 18, 120, 17, 119, 18, 118, 16, 117, 12, 116, 11, 115, 11, 114, 11, 113, 14, 112, 14, 111, 9, 110, 7, 109, 8, 108, 8, 107, 10, 106, 10, 105, 11, 104, 12, 103, 20, 102, 20, 101, 20, 100, 20, 99, 21, 98, 21, 97, 22, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 28, 87, 31, 86, 32, 85, 34, 84, 32, 83, 31, 82, 22, 81, 21, 80, 20, 79, 18, 78, 16, 77, 16, 76, 15, 75, 15, 74, 14, 73, 14, 72, 14, 71, 15, 70, 14, 69, 14, 68, 15, 67, 16, 66, 17, 65, 20, 64, 20, 63, 21, 62, 22, 61, 23, 60, 24, 59, 25, 58, 27, 57, 33, 56, 54, 55, 54, 54, 54, 53, 55, 52, 55, 51, 55, 50, 56, 49, 56, 48, 57, 47, 58, 46, 59, 45, 60, 44, 63, 43, 68, 42, 68, 41, 67, 40, 67, 39, 67, 38, 67, 37, 68, 36, 68, 35, 70, 34, 70, 33, 71, 32, 74, 31, 75, 30, 76, 29, 76, 28, 76, 27, 76, 26, 79, 25, 79, 24, 81, 23, 87, 22, 88, 21, 91, 20, 91, 19, 98, 18, 100, 18],
    24: [61, 26, 62, 27, 63, 28, 63, 29, 63, 30, 63, 31, 62, 32, 63, 33, 65, 34, 68, 35, 70, 36, 73, 37, 75, 38, 78, 39, 81, 40, 118, 41, 118, 42, 118, 43, 117, 44, 133, 45, 133, 46, 132, 47, 130, 48, 128, 49, 133, 50, 132, 51, 130, 52, 127, 53, 117, 54, 117, 55, 117, 56, 117, 57, 117, 58, 117, 59, 117, 60, 117, 61, 117, 62, 117, 63, 117, 64, 117, 65, 117, 66, 117, 67, 117, 68, 117, 69, 118, 70, 120, 71, 121, 72, 121, 73, 121, 74, 121, 75, 120, 76, 120, 77, 121, 78, 120, 79, 120, 80, 119, 81, 117, 82, 117, 83, 117, 84, 118, 85, 118, 86, 123, 87, 124, 88, 124, 89, 125, 90, 125, 91, 125, 92, 126, 93, 127, 94, 127, 95, 128, 96, 129, 97, 129, 98, 129, 99, 127, 100, 127, 101, 127, 102, 127, 103, 127, 104, 127, 105, 127, 106, 127, 107, 127, 108, 127, 109, 128, 110, 130, 111, 131, 112, 132, 113, 133, 114, 135, 115, 135, 116, 134, 117, 134, 118, 134, 119, 133, 120, 130, 121, 130, 122, 129, 123, 125, 124, 126, 125, 125, 126, 119, 127, 119, 128, 117, 129, 115, 130, 114, 131, 112, 132, 108, 133, 106, 134, 106, 135, 105, 136, 95, 137, 88, 138, 86, 138, 75, 137, 64, 136, 62, 135, 62, 134, 56, 133, 53, 132, 53, 131, 47, 130, 39, 129, 32, 128, 32, 127, 26, 126, 25, 125, 24, 124, 19, 123, 18, 122, 16, 121, 16, 120, 15, 119, 14, 118, 14, 117, 15, 116, 17, 115, 16, 114, 15, 113, 15, 112, 16, 111, 16, 110, 18, 109, 17, 108, 19, 107, 16, 106, 15, 105, 15, 104, 15, 103, 15, 102, 15, 101, 14, 100, 14, 99, 17, 98, 18, 97, 17, 96, 18, 95, 20, 94, 28, 93, 30, 92, 30, 91, 31, 90, 33, 89, 38, 88, 38, 87, 38, 86, 37, 85, 37, 84, 37, 83, 37, 82, 37, 81, 37, 80, 37, 79, 37, 78, 37, 77, 37, 76, 36, 75, 33, 74, 32, 73, 31, 72, 31, 71, 31, 70, 32, 69, 32, 68, 32, 67, 32, 66, 32, 65, 33, 64, 35, 63, 38, 62, 38, 61, 39, 60, 40, 59, 41, 58, 41, 57, 42, 56, 43, 55, 43, 54, 44, 53, 45, 52, 45, 51, 46, 50, 46, 49, 47, 48, 48, 47, 48, 46, 49, 45, 50, 44, 50, 43, 51, 42, 51, 41, 52, 40, 52, 39, 53, 38, 54, 37, 54, 36, 55, 35, 56, 34, 56, 33, 56, 32, 56, 31, 55, 30, 55, 29, 55, 28, 56, 27, 58, 26, 61, 26],
    25: [106, 2, 106, 3, 106, 4, 106, 5, 110, 6, 113, 7, 116, 8, 117, 9, 112, 10, 115, 11, 117, 12, 112, 13, 106, 14, 106, 15, 106, 16, 106, 17, 106, 18, 107, 19, 107, 20, 108, 21, 109, 22, 110, 23, 112, 24, 114, 25, 116, 26, 117, 27, 119, 28, 120, 29, 120, 30, 121, 31, 122, 32, 122, 33, 122, 34, 122, 35, 122, 36, 122, 37, 122, 38, 122, 39, 122, 40, 122, 41, 121, 42, 120, 43, 119, 44, 118, 45, 118, 46, 118, 47, 118, 48, 120, 49, 135, 50, 135, 51, 135, 52, 133, 53, 138, 54, 139, 55, 139, 56, 140, 57, 142, 58, 138, 59, 131, 60, 131, 61, 131, 62, 131, 63, 131, 64, 131, 65, 131, 66, 131, 67, 131, 68, 131, 69, 131, 70, 118, 71, 118, 72, 118, 73, 118, 74, 118, 75, 118, 76, 118, 77, 118, 78, 118, 79, 118, 80, 118, 81, 118, 82, 118, 83, 118, 84, 118, 85, 118, 86, 118, 87, 118, 88, 118, 89, 118, 90, 118, 91, 118, 92, 118, 93, 118, 94, 118, 95, 118, 96, 118, 97, 124, 98, 125, 99, 125, 100, 125, 101, 128, 102, 129, 103, 129, 104, 129, 105, 128, 106, 128, 107, 128, 108, 127, 109, 123, 110, 126, 111, 129, 112, 129, 113, 129, 114, 128, 115, 128, 116, 119, 117, 118, 118, 116, 119, 108, 120, 108, 121, 106, 122, 106, 123, 107, 124, 106, 125, 105, 126, 102, 127, 102, 128, 101, 129, 101, 130, 102, 131, 101, 132, 97, 133, 95, 134, 93, 135, 91, 136, 92, 137, 92, 138, 90, 139, 75, 140, 75, 141, 74, 142, 62, 142, 52, 141, 48, 140, 47, 139, 47, 138, 46, 137, 42, 136, 41, 135, 40, 134, 39, 133, 40, 132, 35, 131, 34, 130, 34, 129, 32, 128, 31, 127, 27, 126, 26, 125, 26, 124, 26, 123, 27, 122, 26, 121, 25, 120, 25, 119, 27, 118, 30, 117, 29, 116, 25, 115, 24, 114, 23, 113, 23, 112, 22, 111, 22, 110, 22, 109, 22, 108, 22, 107, 22, 106, 23, 105, 24, 104, 25, 103, 30, 102, 30, 101, 30, 100, 31, 99, 31, 98, 30, 97, 29, 96, 28, 95, 26, 94, 25, 93, 25, 92, 25, 91, 25, 90, 24, 89, 24, 88, 24, 87, 25, 86, 25, 85, 25, 84, 25, 83, 26, 82, 26, 81, 26, 80, 27, 79, 27, 78, 28, 77, 29, 76, 29, 75, 30, 74, 30, 73, 31, 72, 31, 71, 32, 70, 32, 69, 33, 68, 33, 67, 34, 66, 34, 65, 34, 64, 34, 63, 35, 62, 35, 61, 35, 60, 34, 59, 34, 58, 34, 57, 35, 56, 35, 55, 35, 54, 36, 53, 36, 52, 37, 51, 38, 50, 39, 49, 40, 48, 41, 47, 43, 46, 45, 45, 45, 44, 45, 43, 45, 42, 45, 41, 46, 40, 46, 39, 46, 38, 46, 37, 46, 36, 46, 35, 46, 34, 46, 33, 46, 32, 46, 31, 46, 30, 45, 29, 45, 28, 91, 27, 93, 26, 95, 25, 97, 24, 98, 23, 100, 22, 100, 21, 101, 20, 101, 19, 103, 18, 103, 17, 103, 16, 103, 15, 103, 14, 103, 13, 103, 12, 103, 11, 103, 10, 103, 9, 103, 8, 103, 7, 103, 6, 103, 5, 103, 4, 102, 3, 103, 2, 106, 2],
    26: [70, 1, 70, 2, 69, 3, 69, 4, 73, 5, 80, 6, 82, 7, 110, 8, 110, 9, 110, 10, 110, 11, 113, 12, 118, 13, 121, 14, 118, 15, 116, 16, 120, 17, 121, 18, 118, 19, 110, 20, 110, 21, 110, 22, 110, 23, 110, 24, 111, 25, 111, 26, 112, 27, 113, 28, 114, 29, 115, 30, 116, 31, 118, 32, 120, 33, 121, 34, 123, 35, 124, 36, 125, 37, 126, 38, 126, 39, 127, 40, 127, 41, 127, 42, 127, 43, 128, 44, 127, 45, 127, 46, 127, 47, 126, 48, 126, 49, 126, 50, 126, 51, 124, 52, 124, 53, 123, 54, 123, 55, 123, 56, 123, 57, 123, 58, 123, 59, 123, 60, 123, 61, 123, 62, 123, 63, 123, 64, 123, 65, 123, 66, 123, 67, 123, 68, 123, 69, 123, 70, 123, 71, 123, 72, 123, 73, 123, 74, 123, 75, 123, 76, 123, 77, 123, 78, 123, 79, 123, 80, 123, 81, 123, 82, 123, 83, 123, 84, 123, 85, 123, 86, 123, 87, 123, 88, 123, 89, 123, 90, 123, 91, 123, 92, 123, 93, 123, 94, 123, 95, 123, 96, 123, 97, 123, 98, 123, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 124, 110, 124, 111, 124, 112, 124, 113, 124, 114, 124, 115, 123, 116, 122, 117, 120, 118, 117, 119, 117, 120, 118, 121, 115, 122, 111, 123, 113, 124, 113, 125, 116, 126, 116, 127, 115, 128, 113, 129, 105, 130, 94, 131, 95, 132, 95, 133, 95, 134, 95, 135, 95, 136, 94, 137, 93, 138, 91, 139, 90, 140, 92, 141, 91, 142, 90, 143, 86, 144, 83, 144, 81, 143, 81, 142, 80, 141, 80, 140, 81, 139, 79, 138, 42, 137, 38, 136, 36, 135, 34, 134, 33, 133, 32, 132, 31, 131, 30, 130, 30, 129, 30, 128, 30, 127, 30, 126, 30, 125, 30, 124, 30, 123, 31, 122, 31, 121, 32, 120, 33, 119, 33, 118, 33, 117, 33, 116, 31, 115, 31, 114, 30, 113, 28, 112, 26, 111, 24, 110, 24, 109, 24, 108, 23, 107, 22, 106, 15, 105, 13, 104, 11, 103, 10, 102, 10, 101, 10, 100, 10, 99, 10, 98, 10, 97, 11, 96, 11, 95, 11, 94, 11, 93, 11, 92, 11, 91, 11, 90, 11, 89, 11, 88, 11, 87, 11, 86, 11, 85, 12, 84, 15, 83, 15, 82, 15, 81, 15, 80, 15, 79, 15, 78, 15, 77, 15, 76, 15, 75, 15, 74, 15, 73, 15, 72, 15, 71, 15, 70, 15, 69, 15, 68, 15, 67, 15, 66, 15, 65, 15, 64, 15, 63, 15, 62, 15, 61, 15, 60, 15, 59, 15, 58, 15, 57, 15, 56, 15, 55, 15, 54, 14, 53, 13, 52, 12, 51, 11, 50, 10, 49, 10, 48, 10, 47, 9, 46, 9, 45, 9, 44, 10, 43, 10, 42, 11, 41, 11, 40, 12, 39, 13, 38, 14, 37, 16, 36, 18, 35, 19, 34, 21, 33, 23, 32, 24, 31, 25, 30, 25, 29, 26, 28, 27, 27, 28, 26, 28, 25, 28, 24, 28, 23, 28, 22, 28, 21, 28, 20, 28, 19, 28, 18, 28, 17, 28, 16, 28, 15, 28, 14, 28, 13, 28, 12, 28, 11, 66, 10, 66, 9, 66, 8, 66, 7, 66, 6, 66, 5, 66, 4, 66, 3, 65, 2, 65, 1, 70, 1],
    27: [79, 20, 82, 21, 84, 22, 86, 23, 87, 24, 89, 25, 90, 26, 91, 27, 92, 28, 93, 29, 94, 30, 94, 31, 95, 32, 96, 33, 96, 34, 97, 35, 97, 36, 98, 37, 98, 38, 99, 39, 99, 40, 99, 41, 99, 42, 100, 43, 100, 44, 100, 45, 100, 46, 100, 47, 101, 48, 101, 49, 101, 50, 101, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 113, 57, 114, 58, 115, 59, 115, 60, 115, 61, 115, 62, 115, 63, 115, 64, 115, 65, 115, 66, 115, 67, 115, 68, 115, 69, 115, 70, 115, 71, 115, 72, 115, 73, 115, 74, 115, 75, 115, 76, 115, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 114, 84, 114, 85, 114, 86, 114, 87, 114, 88, 114, 89, 114, 90, 118, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 119, 97, 120, 98, 121, 99, 122, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 122, 107, 121, 108, 121, 109, 122, 110, 123, 111, 124, 112, 124, 113, 125, 114, 125, 115, 125, 116, 124, 117, 123, 118, 123, 119, 123, 120, 123, 121, 125, 122, 124, 123, 122, 124, 121, 125, 120, 126, 120, 127, 120, 128, 119, 129, 119, 130, 119, 131, 116, 132, 115, 133, 107, 134, 69, 134, 66, 133, 64, 132, 64, 131, 64, 130, 65, 129, 66, 128, 58, 127, 54, 126, 35, 125, 31, 124, 31, 123, 31, 122, 32, 121, 33, 120, 33, 119, 34, 118, 34, 117, 34, 116, 34, 115, 34, 114, 33, 113, 32, 112, 31, 111, 31, 110, 30, 109, 29, 108, 29, 107, 29, 106, 28, 105, 24, 104, 22, 103, 22, 102, 22, 101, 23, 100, 24, 99, 25, 98, 25, 97, 25, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 26, 87, 28, 86, 39, 85, 39, 84, 39, 83, 39, 82, 39, 81, 39, 80, 39, 79, 39, 78, 39, 77, 39, 76, 40, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 42, 67, 41, 66, 41, 65, 41, 64, 41, 63, 41, 62, 41, 61, 41, 60, 41, 59, 41, 58, 41, 57, 41, 56, 41, 55, 41, 54, 41, 53, 42, 52, 42, 51, 42, 50, 42, 49, 42, 48, 42, 47, 43, 46, 43, 45, 43, 44, 43, 43, 44, 42, 44, 41, 44, 40, 45, 39, 45, 38, 45, 37, 46, 36, 46, 35, 47, 34, 47, 33, 48, 32, 49, 31, 50, 30, 51, 29, 52, 28, 53, 27, 54, 26, 55, 25, 56, 24, 58, 23, 60, 22, 62, 21, 64, 20, 79, 20],
    28: [74, 12, 76, 13, 77, 14, 77, 15, 77, 16, 77, 17, 77, 18, 78, 19, 78, 20, 78, 21, 78, 22, 78, 23, 78, 24, 78, 25, 78, 26, 78, 27, 78, 28, 79, 29, 79, 30, 79, 31, 79, 32, 79, 33, 79, 34, 79, 35, 79, 36, 80, 37, 88, 38, 89, 39, 88, 40, 91, 41, 93, 42, 91, 43, 92, 44, 94, 45, 95, 46, 96, 47, 96, 48, 97, 49, 98, 50, 98, 51, 97, 52, 98, 53, 98, 54, 96, 55, 97, 56, 97, 57, 98, 58, 98, 59, 99, 60, 100, 61, 101, 62, 101, 63, 102, 64, 102, 65, 103, 66, 103, 67, 103, 68, 103, 69, 104, 70, 104, 71, 103, 72, 104, 73, 107, 74, 109, 75, 112, 76, 113, 77, 117, 78, 119, 79, 120, 80, 120, 81, 121, 82, 122, 83, 122, 84, 123, 85, 124, 86, 125, 87, 125, 88, 126, 89, 126, 90, 127, 91, 128, 92, 129, 93, 129, 94, 131, 95, 131, 96, 132, 97, 134, 98, 135, 99, 135, 100, 136, 101, 136, 102, 134, 103, 129, 104, 129, 105, 129, 106, 129, 107, 129, 108, 129, 109, 129, 110, 129, 111, 129, 112, 129, 113, 133, 114, 134, 115, 135, 116, 135, 117, 136, 118, 138, 119, 138, 120, 138, 121, 137, 122, 137, 123, 135, 124, 132, 125, 128, 126, 127, 127, 126, 128, 127, 129, 128, 130, 126, 131, 124, 132, 124, 133, 122, 134, 118, 135, 118, 136, 116, 137, 112, 138, 74, 139, 73, 140, 71, 140, 55, 139, 54, 138, 55, 137, 56, 136, 43, 135, 43, 134, 36, 133, 33, 132, 28, 131, 25, 130, 23, 129, 22, 128, 22, 127, 18, 126, 16, 125, 13, 124, 11, 123, 11, 122, 11, 121, 11, 120, 11, 119, 12, 118, 12, 117, 13, 116, 13, 115, 13, 114, 11, 113, 10, 112, 10, 111, 10, 110, 11, 109, 19, 108, 22, 107, 23, 106, 23, 105, 23, 104, 23, 103, 23, 102, 23, 101, 23, 100, 23, 99, 23, 98, 23, 97, 23, 96, 23, 95, 23, 94, 23, 93, 23, 92, 23, 91, 22, 90, 21, 89, 21, 88, 19, 87, 19, 86, 18, 85, 18, 84, 18, 83, 19, 82, 19, 81, 19, 80, 20, 79, 20, 78, 21, 77, 22, 76, 22, 75, 22, 74, 23, 73, 25, 72, 25, 71, 26, 70, 25, 69, 25, 68, 26, 67, 26, 66, 26, 65, 26, 64, 26, 63, 27, 62, 28, 61, 28, 60, 29, 59, 30, 58, 31, 57, 31, 56, 28, 55, 28, 54, 29, 53, 30, 52, 31, 51, 32, 50, 32, 49, 34, 48, 36, 47, 37, 46, 62, 45, 63, 44, 64, 43, 65, 42, 65, 41, 65, 40, 65, 39, 65, 38, 65, 37, 65, 36, 65, 35, 66, 34, 65, 33, 65, 32, 66, 31, 66, 30, 66, 29, 66, 28, 66, 27, 66, 26, 66, 25, 66, 24, 66, 23, 66, 22, 66, 21, 66, 20, 66, 19, 66, 18, 66, 17, 66, 16, 66, 15, 67, 14, 67, 13, 69, 12, 74, 12],
    29: [60, 18, 61, 19, 60, 20, 61, 21, 62, 22, 60, 23, 67, 24, 67, 25, 67, 26, 66, 27, 110, 28, 114, 29, 112, 30, 115, 31, 111, 32, 110, 33, 111, 34, 112, 35, 112, 36, 113, 37, 113, 38, 114, 39, 115, 40, 116, 41, 116, 42, 117, 43, 118, 44, 119, 45, 119, 46, 120, 47, 121, 48, 121, 49, 121, 50, 121, 51, 122, 52, 122, 53, 122, 54, 123, 55, 123, 56, 123, 57, 123, 58, 124, 59, 124, 60, 128, 61, 126, 62, 125, 63, 127, 64, 124, 65, 127, 66, 129, 67, 129, 68, 130, 69, 132, 70, 135, 71, 138, 72, 141, 73, 142, 74, 142, 75, 144, 76, 145, 77, 147, 78, 147, 79, 147, 80, 148, 81, 147, 82, 147, 83, 148, 84, 148, 85, 150, 86, 149, 87, 149, 88, 149, 89, 149, 90, 147, 91, 147, 92, 146, 93, 145, 94, 144, 95, 142, 96, 140, 97, 137, 98, 137, 99, 137, 100, 137, 101, 139, 102, 141, 103, 142, 104, 143, 105, 144, 106, 143, 107, 145, 108, 145, 109, 147, 110, 147, 111, 147, 112, 148, 113, 148, 114, 149, 115, 149, 116, 148, 117, 148, 118, 148, 119, 149, 120, 147, 121, 147, 122, 146, 123, 147, 124, 145, 125, 145, 126, 145, 127, 144, 128, 142, 129, 142, 130, 140, 131, 139, 132, 137, 133, 137, 134, 131, 135, 128, 136, 123, 137, 120, 138, 83, 139, 77, 140, 76, 141, 76, 142, 75, 143, 65, 143, 64, 142, 65, 141, 65, 140, 63, 139, 63, 138, 50, 137, 50, 136, 51, 135, 51, 134, 52, 133, 46, 132, 46, 131, 44, 130, 39, 129, 29, 128, 28, 127, 24, 126, 21, 125, 21, 124, 20, 123, 18, 122, 13, 121, 9, 120, 8, 119, 7, 118, 7, 117, 5, 116, 5, 115, 5, 114, 5, 113, 4, 112, 4, 111, 3, 110, 3, 109, 4, 108, 2, 107, 2, 106, 2, 105, 3, 104, 3, 103, 3, 102, 4, 101, 4, 100, 3, 99, 3, 98, 0, 97, 2, 96, 1, 95, -1, 94, 0, 93, -1, 92, -1, 91, -1, 90, 0, 89, 2, 88, 2, 87, 3, 86, 3, 85, 3, 84, 5, 83, 6, 82, 7, 81, 8, 80, 9, 79, 9, 78, 11, 77, 13, 76, 13, 75, 13, 74, 14, 73, 14, 72, 14, 71, 15, 70, 14, 69, 14, 68, 14, 67, 14, 66, 14, 65, 15, 64, 16, 63, 17, 62, 17, 61, 18, 60, 19, 59, 20, 58, 20, 57, 21, 56, 22, 55, 22, 54, 23, 53, 23, 52, 24, 51, 24, 50, 25, 49, 25, 48, 25, 47, 26, 46, 25, 45, 25, 44, 50, 43, 49, 42, 49, 41, 49, 40, 49, 39, 49, 38, 49, 37, 50, 36, 50, 35, 50, 34, 51, 33, 51, 32, 51, 31, 52, 30, 52, 29, 52, 28, 52, 27, 52, 26, 52, 25, 51, 24, 52, 23, 57, 22, 56, 21, 57, 20, 57, 19, 57, 18, 60, 18],
    30: [85, 27, 87, 28, 89, 29, 90, 30, 91, 31, 93, 32, 95, 33, 96, 34, 98, 35, 123, 36, 126, 37, 125, 38, 126, 39, 127, 40, 128, 41, 128, 42, 128, 43, 129, 44, 129, 45, 130, 46, 130, 47, 130, 48, 130, 49, 130, 50, 131, 51, 131, 52, 132, 53, 132, 54, 133, 55, 133, 56, 133, 57, 132, 58, 132, 59, 132, 60, 133, 61, 133, 62, 134, 63, 135, 64, 135, 65, 136, 66, 137, 67, 138, 68, 138, 69, 139, 70, 139, 71, 139, 72, 139, 73, 140, 74, 139, 75, 139, 76, 139, 77, 139, 78, 138, 79, 138, 80, 137, 81, 137, 82, 135, 83, 135, 84, 135, 85, 135, 86, 134, 87, 134, 88, 134, 89, 135, 90, 135, 91, 135, 92, 135, 93, 135, 94, 135, 95, 135, 96, 135, 97, 135, 98, 135, 99, 135, 100, 135, 101, 135, 102, 135, 103, 135, 104, 135, 105, 139, 106, 138, 107, 137, 108, 142, 109, 142, 110, 143, 111, 143, 112, 144, 113, 144, 114, 142, 115, 140, 116, 139, 117, 139, 118, 138, 119, 137, 120, 134, 121, 133, 122, 133, 123, 133, 124, 128, 125, 127, 126, 124, 127, 122, 128, 114, 129, 111, 130, 110, 131, 106, 132, 104, 133, 101, 134, 99, 135, 98, 136, 95, 137, 90, 138, 74, 139, 70, 140, 68, 141, 64, 141, 65, 140, 66, 139, 54, 138, 54, 137, 54, 136, 55, 135, 55, 134, 52, 133, 50, 132, 50, 131, 50, 130, 51, 129, 52, 128, 51, 127, 41, 126, 41, 125, 41, 124, 42, 123, 42, 122, 42, 121, 42, 120, 40, 119, 15, 118, 16, 117, 16, 116, 17, 115, 17, 114, 17, 113, 14, 112, 13, 111, 13, 110, 13, 109, 14, 108, 15, 107, 18, 106, 21, 105, 27, 104, 27, 103, 28, 102, 28, 101, 28, 100, 28, 99, 28, 98, 28, 97, 28, 96, 28, 95, 28, 94, 28, 93, 28, 92, 28, 91, 28, 90, 28, 89, 28, 88, 28, 87, 28, 86, 28, 85, 28, 84, 27, 83, 25, 82, 24, 81, 23, 80, 23, 79, 23, 78, 30, 77, 34, 76, 36, 75, 36, 74, 35, 73, 34, 72, 33, 71, 33, 70, 32, 69, 32, 68, 32, 67, 31, 66, 31, 65, 31, 64, 31, 63, 31, 62, 31, 61, 32, 60, 33, 59, 34, 58, 36, 57, 40, 56, 41, 55, 41, 54, 41, 53, 41, 52, 41, 51, 41, 50, 39, 49, 39, 48, 39, 47, 39, 46, 41, 45, 51, 44, 54, 43, 56, 42, 70, 41, 71, 40, 72, 39, 72, 38, 73, 37, 73, 36, 74, 35, 74, 34, 74, 33, 75, 32, 75, 31, 76, 30, 77, 29, 80, 28, 81, 27, 85, 27],
    31: [[577, 3, 593, 4, 614, 5, 628, 6, 635, 7, 644, 8, 650, 9, 660, 10, 665, 11, 851, 12, 852, 13, 853, 14, 855, 15, 857, 16, 858, 17, 860, 18, 862, 19, 864, 20, 866, 21, 867, 22, 869, 23, 871, 24, 873, 25, 875, 26, 877, 27, 879, 28, 880, 29, 881, 30, 880, 31, 879, 32, 877, 33, 877, 34, 877, 35, 877, 36, 877, 37, 877, 38, 877, 39, 877, 40, 877, 41, 879, 42, 881, 43, 881, 44, 881, 45, 881, 46, 881, 47, 881, 48, 881, 49, 881, 50, 881, 51, 881, 52, 881, 53, 881, 54, 881, 55, 881, 56, 881, 57, 881, 58, 881, 59, 879, 60, 877, 61, 877, 62, 877, 63, 877, 64, 877, 65, 877, 66, 877, 67, 877, 68, 877, 69, 945, 70, 946, 71, 948, 72, 949, 73, 951, 74, 953, 75, 955, 76, 956, 77, 958, 78, 960, 79, 962, 80, 964, 81, 966, 82, 968, 83, 969, 84, 972, 85, 973, 86, 974, 87, 974, 88, 974, 89, 972, 90, 971, 91, 970, 92, 970, 93, 970, 94, 970, 95, 970, 96, 970, 97, 970, 98, 972, 99, 973, 100, 975, 101, 975, 102, 975, 103, 975, 104, 975, 105, 975, 106, 975, 107, 975, 108, 975, 109, 975, 110, 975, 111, 975, 112, 975, 113, 975, 114, 975, 115, 975, 116, 975, 117, 974, 118, 972, 119, 970, 120, 971, 121, 971, 122, 971, 123, 971, 124, 971, 125, 971, 126, 971, 127, 971, 128, 971, 129, 971, 130, 971, 131, 971, 132, 971, 133, 971, 134, 971, 135, 971, 136, 971, 137, 976, 138, 977, 139, 980, 140, 981, 141, 981, 142, 984, 143, 985, 144, 985, 145, 988, 146, 989, 147, 989, 148, 992, 149, 993, 150, 993, 151, 996, 152, 997, 153, 997, 154, 1000, 155, 1001, 156, 1001, 157, 1003, 158, 1004, 159, 1005, 160, 1007, 161, 1008, 162, 1009, 163, 1010, 164, 1012, 165, 1012, 166, 1013, 167, 1015, 168, 1016, 169, 1016, 170, 1017, 171, 1019, 172, 1019, 173, 1020, 174, 1022, 175, 1023, 176, 1023, 177, 1024, 178, 1026, 179, 1027, 180, 1027, 181, 1029, 182, 1030, 183, 1030, 184, 1032, 185, 1033, 186, 1034, 187, 1034, 188, 1036, 189, 1037, 190, 1037, 191, 1037, 192, 1039, 193, 1040, 194, 1040, 195, 1041, 196, 1043, 197, 1044, 198, 1044, 199, 1045, 200, 1046, 201, 1047, 202, 1047, 203, 1048, 204, 1049, 205, 1050, 206, 1050, 207, 1052, 208, 1053, 209, 1053, 210, 1053, 211, 1054, 212, 1055, 213, 1056, 214, 1056, 215, 1057, 216, 1058, 217, 1059, 218, 1059, 219, 1060, 220, 1061, 221, 1062, 222, 1062, 223, 1062, 224, 1064, 225, 1064, 226, 1065, 227, 1065, 228, 1066, 229, 1067, 230, 1067, 231, 1067, 232, 1069, 233, 1069, 234, 1070, 235, 1070, 236, 1070, 237, 1071, 238, 1072, 239, 1072, 240, 1072, 241, 1074, 242, 1074, 243, 1075, 244, 1075, 245, 1075, 246, 1076, 247, 1076, 248, 1077, 249, 1077, 250, 1077, 251, 1078, 252, 1079, 253, 1079, 254, 1079, 255, 1080, 256, 1081, 257, 1081, 258, 1081, 259, 1081, 260, 1082, 261, 1083, 262, 1083, 263, 1083, 264, 1084, 265, 1084, 266, 1085, 267, 1086, 268, 1086, 269, 1086, 270, 1086, 271, 1088, 272, 1088, 273, 1088, 274, 1088, 275, 1088, 276, 1089, 277, 1089, 278, 1089, 279, 1089, 280, 1090, 281, 1091, 282, 1091, 283, 1090, 284, 1091, 285, 1092, 286, 1092, 287, 1092, 288, 1092, 289, 1092, 290, 1093, 291, 1093, 292, 1093, 293, 1093, 294, 1094, 295, 1094, 296, 1094, 297, 1094, 298, 1094, 299, 1095, 300, 1095, 301, 1095, 302, 1095, 303, 1095, 304, 1095, 305, 1096, 306, 1096, 307, 1095, 308, 1096, 309, 1096, 310, 1097, 311, 1097, 312, 1096, 313, 1097, 314, 1097, 315, 1097, 316, 1097, 317, 1097, 318, 1097, 319, 1097, 320, 1097, 321, 1097, 322, 1097, 323, 1097, 324, 1098, 325, 1098, 326, 1097, 327, 1097, 328, 1098, 329, 1098, 330, 1098, 331, 1098, 332, 1097, 333, 1098, 334, 1098, 335, 1098, 336, 1098, 337, 1098, 338, 1098, 339, 1098, 340, 1071, 340, 1071, 339, 1071, 338, 1070, 337, 1070, 336, 1069, 335, 1069, 334, 1069, 333, 1068, 332, 1068, 331, 1067, 330, 1067, 329, 1066, 328, 1066, 327, 1066, 326, 1065, 325, 1065, 324, 1064, 323, 1064, 322, 1063, 321, 1063, 320, 1062, 319, 1062, 318, 1061, 317, 1061, 316, 1060, 315, 1060, 314, 1059, 313, 1059, 312, 1058, 311, 1058, 310, 1057, 309, 1057, 308, 1056, 307, 1056, 306, 1055, 305, 1055, 304, 1054, 303, 1053, 302, 1053, 301, 1052, 300, 1052, 299, 1051, 298, 1050, 297, 1050, 296, 1049, 295, 1049, 294, 1048, 293, 1047, 292, 1047, 291, 1046, 290, 1045, 289, 1045, 288, 1044, 287, 1043, 286, 1042, 285, 1042, 284, 1041, 283, 1040, 282, 1040, 281, 1039, 280, 1038, 279, 1037, 278, 1037, 277, 1036, 276, 1035, 275, 1034, 274, 1034, 273, 1033, 272, 1032, 271, 1031, 270, 1030, 269, 1030, 268, 1029, 267, 1028, 266, 1027, 265, 1026, 264, 1025, 263, 1024, 262, 1024, 261, 1023, 260, 1022, 259, 1021, 258, 1020, 257, 1019, 256, 1018, 255, 1017, 254, 1016, 253, 1015, 252, 1014, 251, 1013, 250, 1013, 249, 1011, 248, 1011, 247, 1010, 246, 1009, 245, 1008, 244, 1007, 243, 1006, 242, 1005, 241, 1003, 240, 1002, 239, 1001, 238, 1000, 237, 999, 236, 998, 235, 997, 234, 996, 233, 995, 232, 993, 231, 992, 230, 991, 229, 990, 228, 989, 227, 988, 226, 987, 225, 985, 224, 984, 223, 983, 222, 982, 221, 980, 220, 979, 219, 978, 218, 976, 217, 975, 216, 974, 215, 972, 214, 971, 213, 941, 212, 939, 211, 937, 210, 935, 209, 934, 208, 932, 207, 930, 206, 929, 205, 927, 204, 925, 203, 923, 202, 921, 201, 919, 200, 917, 199, 916, 198, 915, 197, 915, 196, 915, 195, 915, 194, 915, 193, 915, 192, 915, 191, 915, 190, 915, 189, 915, 188, 915, 187, 915, 186, 915, 185, 914, 184, 913, 183, 907, 182, 906, 181, 905, 180, 904, 179, 904, 178, 904, 177, 904, 176, 904, 175, 904, 174, 904, 173, 903, 172, 901, 171, 899, 170, 898, 169, 896, 168, 895, 167, 893, 166, 892, 165, 890, 164, 888, 163, 886, 162, 885, 161, 874, 160, 873, 159, 872, 158, 871, 157, 871, 156, 870, 155, 847, 154, 845, 153, 843, 152, 842, 151, 840, 150, 838, 149, 836, 148, 835, 147, 833, 146, 831, 145, 829, 144, 827, 143, 825, 142, 824, 141, 822, 140, 822, 139, 822, 138, 822, 137, 822, 136, 822, 135, 822, 134, 822, 133, 822, 132, 822, 131, 822, 130, 821, 129, 819, 128, 817, 127, 814, 126, 812, 125, 809, 124, 806, 123, 803, 122, 801, 121, 798, 120, 795, 119, 792, 118, 789, 117, 786, 116, 783, 115, 779, 114, 776, 113, 773, 112, 769, 111, 765, 110, 762, 109, 759, 108, 756, 107, 752, 106, 748, 105, 744, 104, 740, 103, 736, 102, 732, 101, 728, 100, 724, 99, 719, 98, 714, 97, 709, 96, 704, 95, 699, 94, 693, 93, 688, 92, 680, 91, 675, 90, 670, 89, 662, 88, 655, 87, 645, 86, 637, 85, 629, 84, 615, 83, 604, 82, 579, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 554, 12, 554, 11, 554, 10, 554, 9, 554, 8, 554, 7, 554, 6, 554, 5, 554, 4, 556, 3, 577, 3], [551, 3, 554, 4, 554, 5, 554, 6, 554, 7, 554, 8, 554, 9, 554, 10, 554, 11, 554, 12, 554, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 544, 81, 519, 82, 508, 83, 494, 84, 485, 85, 478, 86, 468, 87, 461, 88, 453, 89, 447, 90, 441, 91, 435, 92, 430, 93, 423, 94, 419, 95, 414, 96, 408, 97, 404, 98, 399, 99, 395, 100, 390, 101, 386, 102, 382, 103, 378, 104, 375, 105, 371, 106, 367, 107, 363, 108, 359, 109, 356, 110, 353, 111, 349, 112, 346, 113, 343, 114, 340, 115, 337, 116, 334, 117, 331, 118, 328, 119, 325, 120, 322, 121, 319, 122, 317, 123, 315, 124, 314, 125, 314, 126, 314, 127, 314, 128, 314, 129, 314, 130, 314, 131, 314, 132, 314, 133, 314, 134, 313, 135, 311, 136, 309, 137, 307, 138, 305, 139, 303, 140, 302, 141, 300, 142, 298, 143, 296, 144, 295, 145, 293, 146, 291, 147, 289, 148, 266, 149, 265, 150, 264, 151, 263, 152, 252, 153, 251, 154, 249, 155, 247, 156, 246, 157, 244, 158, 242, 159, 240, 160, 239, 161, 237, 162, 235, 163, 234, 164, 233, 165, 233, 166, 233, 167, 233, 168, 233, 169, 233, 170, 233, 171, 232, 172, 230, 173, 229, 174, 223, 175, 222, 176, 222, 177, 222, 178, 222, 179, 222, 180, 222, 181, 222, 182, 222, 183, 222, 184, 222, 185, 222, 186, 222, 187, 221, 188, 221, 189, 220, 190, 219, 191, 217, 192, 215, 193, 213, 194, 211, 195, 209, 196, 207, 197, 206, 198, 204, 199, 202, 200, 200, 201, 198, 202, 196, 203, 164, 204, 162, 205, 161, 206, 160, 207, 158, 208, 157, 209, 155, 210, 154, 211, 153, 212, 151, 213, 150, 214, 149, 215, 147, 216, 146, 217, 145, 218, 144, 219, 142, 220, 141, 221, 140, 222, 139, 223, 137, 224, 136, 225, 135, 226, 134, 227, 133, 228, 132, 229, 130, 230, 129, 231, 128, 232, 127, 233, 126, 234, 125, 235, 123, 236, 122, 237, 121, 238, 120, 239, 119, 240, 118, 241, 117, 242, 116, 243, 115, 244, 114, 245, 113, 246, 112, 247, 111, 248, 110, 249, 109, 250, 108, 251, 107, 252, 106, 253, 105, 254, 104, 255, 103, 256, 102, 257, 102, 258, 101, 259, 100, 260, 99, 261, 98, 262, 97, 263, 96, 264, 95, 265, 95, 266, 94, 267, 93, 268, 92, 269, 91, 270, 90, 271, 90, 272, 89, 273, 88, 274, 87, 275, 87, 276, 86, 277, 85, 278, 84, 279, 84, 280, 83, 281, 82, 282, 82, 283, 81, 284, 80, 285, 79, 286, 79, 287, 78, 288, 77, 289, 77, 290, 76, 291, 75, 292, 75, 293, 74, 294, 73, 295, 73, 296, 72, 297, 72, 298, 71, 299, 70, 300, 70, 301, 69, 302, 69, 303, 68, 304, 68, 305, 67, 306, 66, 307, 66, 308, 65, 309, 65, 310, 64, 311, 64, 312, 63, 313, 63, 314, 62, 315, 62, 316, 61, 317, 61, 318, 60, 319, 60, 320, 59, 321, 59, 322, 58, 323, 58, 324, 57, 325, 57, 326, 56, 327, 56, 328, 56, 329, 55, 330, 55, 331, 54, 332, 54, 333, 54, 334, 53, 335, 53, 336, 52, 337, 52, 338, 52, 339, 51, 340, 24, 340, 24, 339, 25, 338, 25, 337, 25, 336, 24, 335, 25, 334, 25, 333, 25, 332, 25, 331, 25, 330, 25, 329, 25, 328, 25, 327, 25, 326, 25, 325, 25, 324, 26, 323, 25, 322, 25, 321, 25, 320, 26, 319, 26, 318, 26, 317, 25, 316, 26, 315, 26, 314, 26, 313, 26, 312, 26, 311, 26, 310, 27, 309, 27, 308, 27, 307, 27, 306, 27, 305, 28, 304, 28, 303, 28, 302, 28, 301, 28, 300, 29, 299, 29, 298, 28, 297, 28, 296, 29, 295, 30, 294, 30, 293, 29, 292, 30, 291, 30, 290, 31, 289, 31, 288, 31, 287, 31, 286, 32, 285, 32, 284, 32, 283, 32, 282, 32, 281, 33, 280, 33, 279, 33, 278, 33, 277, 34, 276, 35, 275, 35, 274, 35, 273, 35, 272, 36, 271, 37, 270, 36, 269, 37, 268, 38, 267, 39, 266, 39, 265, 39, 264, 39, 263, 40, 262, 40, 261, 41, 260, 41, 259, 41, 258, 42, 257, 43, 256, 43, 255, 43, 254, 44, 253, 44, 252, 45, 251, 46, 250, 46, 249, 46, 248, 47, 247, 48, 246, 48, 245, 48, 244, 48, 243, 49, 242, 50, 241, 50, 240, 51, 239, 51, 238, 53, 237, 53, 236, 53, 235, 53, 234, 54, 233, 55, 232, 55, 231, 56, 230, 57, 229, 58, 228, 58, 227, 58, 226, 59, 225, 60, 224, 61, 223, 61, 222, 61, 221, 63, 220, 64, 219, 64, 218, 64, 217, 65, 216, 66, 215, 67, 214, 67, 213, 68, 212, 69, 211, 70, 210, 70, 209, 71, 208, 72, 207, 73, 206, 73, 205, 74, 204, 76, 203, 76, 202, 76, 201, 77, 200, 79, 199, 79, 198, 80, 197, 81, 196, 82, 195, 82, 194, 83, 193, 85, 192, 85, 191, 86, 190, 87, 189, 89, 188, 89, 187, 90, 186, 91, 185, 92, 184, 93, 183, 94, 182, 96, 181, 96, 180, 97, 179, 98, 178, 99, 177, 100, 176, 100, 175, 102, 174, 103, 173, 104, 172, 105, 171, 106, 170, 107, 169, 108, 168, 110, 167, 110, 166, 111, 165, 112, 164, 114, 163, 115, 162, 116, 161, 118, 160, 118, 159, 119, 158, 121, 157, 122, 156, 123, 155, 125, 154, 126, 153, 127, 152, 129, 151, 130, 150, 131, 149, 133, 148, 134, 147, 134, 146, 137, 145, 138, 144, 139, 143, 141, 142, 142, 141, 143, 140, 145, 139, 146, 138, 148, 137, 149, 136, 150, 135, 150, 134, 151, 133, 154, 132, 155, 131, 155, 130, 158, 129, 159, 128, 160, 127, 163, 126, 166, 125, 166, 124, 166, 123, 166, 122, 166, 121, 166, 120, 166, 119, 166, 118, 166, 117, 166, 116, 166, 115, 166, 114, 166, 113, 166, 112, 166, 111, 167, 110, 166, 109, 164, 108, 163, 107, 162, 106, 162, 105, 162, 104, 162, 103, 162, 102, 162, 101, 162, 100, 162, 99, 162, 98, 162, 97, 162, 96, 162, 95, 162, 94, 162, 93, 162, 92, 162, 91, 164, 90, 166, 89, 167, 88, 167, 87, 167, 86, 167, 85, 167, 84, 167, 83, 167, 82, 166, 81, 165, 80, 164, 79, 163, 78, 163, 77, 164, 76, 166, 75, 168, 74, 170, 73, 172, 72, 174, 71, 176, 70, 178, 69, 179, 68, 181, 67, 183, 66, 185, 65, 187, 64, 189, 63, 191, 62, 192, 61, 194, 60, 259, 59, 259, 58, 259, 57, 259, 56, 259, 55, 259, 54, 258, 53, 256, 52, 256, 51, 255, 50, 255, 49, 255, 48, 255, 47, 255, 46, 255, 45, 255, 44, 255, 43, 255, 42, 255, 41, 255, 40, 255, 39, 255, 38, 255, 37, 255, 36, 257, 35, 259, 34, 260, 33, 260, 32, 260, 31, 260, 30, 260, 29, 260, 28, 260, 27, 259, 26, 257, 25, 256, 24, 256, 23, 256, 22, 257, 21, 259, 20, 261, 19, 263, 18, 265, 17, 267, 16, 269, 15, 271, 14, 273, 13, 275, 12, 276, 11, 278, 10, 280, 9, 282, 8, 283, 7, 285, 6, 509, 5, 530, 4, 546, 3, 551, 3], [1098, 341, 1098, 342, 1098, 343, 1098, 344, 1099, 345, 1098, 346, 1098, 347, 1098, 348, 1098, 349, 1098, 350, 1098, 351, 1098, 352, 1098, 353, 1098, 354, 1098, 355, 1098, 356, 1098, 357, 1098, 358, 1098, 359, 1098, 360, 1097, 361, 1097, 362, 1097, 363, 1098, 364, 1097, 365, 1097, 366, 1097, 367, 1097, 368, 1097, 369, 1097, 370, 1096, 371, 1096, 372, 1096, 373, 1096, 374, 1096, 375, 1095, 376, 1095, 377, 1096, 378, 1095, 379, 1095, 380, 1094, 381, 1095, 382, 1095, 383, 1094, 384, 1094, 385, 1093, 386, 1094, 387, 1094, 388, 1093, 389, 1093, 390, 1092, 391, 1092, 392, 1092, 393, 1092, 394, 1091, 395, 1091, 396, 1091, 397, 1091, 398, 1091, 399, 1090, 400, 1090, 401, 1090, 402, 1090, 403, 1090, 404, 1090, 405, 1090, 406, 1090, 407, 1090, 408, 1090, 409, 1090, 410, 1090, 411, 1090, 412, 1090, 413, 1089, 414, 1089, 415, 1089, 416, 1089, 417, 1090, 418, 1090, 419, 1090, 420, 1090, 421, 1090, 422, 1090, 423, 1089, 424, 1089, 425, 1089, 426, 1089, 427, 1089, 428, 1089, 429, 1089, 430, 1089, 431, 1089, 432, 1088, 433, 1088, 434, 1088, 435, 1088, 436, 1088, 437, 1087, 438, 1087, 439, 1087, 440, 1087, 441, 1087, 442, 1087, 443, 1086, 444, 1086, 445, 1086, 446, 1086, 447, 1085, 448, 1085, 449, 1085, 450, 1085, 451, 1084, 452, 1084, 453, 1084, 454, 1084, 455, 1083, 456, 1083, 457, 1083, 458, 1082, 459, 1082, 460, 1082, 461, 1081, 462, 1081, 463, 1081, 464, 1081, 465, 1080, 466, 1080, 467, 1079, 468, 1079, 469, 1079, 470, 1078, 471, 1078, 472, 1078, 473, 1077, 474, 1077, 475, 1076, 476, 1076, 477, 1076, 478, 1075, 479, 1075, 480, 1074, 481, 1074, 482, 1074, 483, 1073, 484, 1073, 485, 1072, 486, 1072, 487, 1071, 488, 1071, 489, 1070, 490, 1070, 491, 1069, 492, 1069, 493, 1068, 494, 1068, 495, 1067, 496, 1067, 497, 1066, 498, 1066, 499, 1065, 500, 1064, 501, 1064, 502, 1063, 503, 1063, 504, 1062, 505, 1062, 506, 1061, 507, 1061, 508, 1060, 509, 1059, 510, 1059, 511, 1059, 512, 1059, 513, 1059, 514, 1059, 515, 1059, 516, 1059, 517, 1059, 518, 1058, 519, 1058, 520, 1057, 521, 1056, 522, 1055, 523, 1055, 524, 1054, 525, 1053, 526, 1052, 527, 1051, 528, 1050, 529, 1046, 530, 1045, 531, 1044, 532, 1043, 533, 1042, 534, 1042, 535, 1041, 536, 1040, 537, 1039, 538, 1038, 539, 1037, 540, 1037, 541, 1036, 542, 1035, 543, 1034, 544, 1033, 545, 1032, 546, 1032, 547, 1031, 548, 1030, 549, 1029, 550, 1028, 551, 1027, 552, 1026, 553, 1025, 554, 1024, 555, 1023, 556, 1022, 557, 1021, 558, 1020, 559, 1019, 560, 1018, 561, 1017, 562, 1016, 563, 1016, 564, 1015, 565, 1013, 566, 1012, 567, 1011, 568, 1010, 569, 1010, 570, 1010, 571, 1010, 572, 1010, 573, 1010, 574, 1010, 575, 1009, 576, 1008, 577, 1007, 578, 1005, 579, 1004, 580, 1002, 581, 1001, 582, 999, 583, 997, 584, 996, 585, 994, 586, 993, 587, 991, 588, 990, 589, 988, 590, 986, 591, 985, 592, 984, 593, 963, 594, 962, 595, 961, 596, 961, 597, 960, 598, 959, 599, 958, 600, 949, 601, 947, 602, 946, 603, 944, 604, 943, 605, 942, 606, 940, 607, 939, 608, 937, 609, 936, 610, 935, 611, 934, 612, 932, 613, 931, 614, 930, 615, 928, 616, 928, 617, 928, 618, 928, 619, 928, 620, 928, 621, 928, 622, 927, 623, 926, 624, 924, 625, 920, 626, 918, 627, 917, 628, 917, 629, 917, 630, 917, 631, 917, 632, 917, 633, 917, 634, 917, 635, 917, 636, 917, 637, 917, 638, 917, 639, 917, 640, 917, 641, 916, 642, 914, 643, 913, 644, 911, 645, 910, 646, 908, 647, 906, 648, 905, 649, 903, 650, 902, 651, 900, 652, 899, 653, 897, 654, 896, 655, 894, 656, 892, 657, 891, 658, 891, 659, 861, 660, 858, 661, 855, 662, 853, 663, 850, 664, 848, 665, 845, 666, 843, 667, 840, 668, 837, 669, 834, 670, 832, 671, 829, 672, 825, 673, 822, 674, 819, 675, 816, 676, 813, 677, 810, 678, 807, 679, 803, 680, 800, 681, 796, 682, 793, 683, 789, 684, 786, 685, 786, 686, 786, 687, 786, 688, 784, 689, 780, 690, 776, 691, 773, 692, 754, 693, 749, 694, 745, 695, 740, 696, 735, 697, 730, 698, 725, 699, 720, 700, 714, 701, 708, 702, 703, 703, 696, 704, 689, 705, 683, 706, 675, 707, 667, 708, 658, 709, 648, 710, 637, 711, 626, 712, 625, 713, 624, 714, 617, 715, 609, 715, 554, 714, 554, 713, 554, 712, 554, 711, 554, 710, 554, 709, 554, 708, 554, 707, 554, 706, 554, 705, 554, 704, 554, 703, 554, 702, 554, 701, 554, 700, 554, 699, 554, 698, 554, 697, 554, 696, 554, 695, 554, 694, 554, 693, 554, 692, 554, 691, 554, 690, 554, 689, 554, 688, 554, 687, 554, 686, 554, 685, 554, 684, 554, 683, 554, 682, 554, 681, 554, 680, 554, 679, 554, 678, 554, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 594, 632, 604, 631, 627, 630, 643, 629, 650, 628, 672, 627, 678, 626, 685, 625, 691, 624, 698, 623, 704, 622, 711, 621, 712, 620, 719, 619, 725, 618, 731, 617, 732, 616, 738, 615, 745, 614, 746, 613, 752, 612, 758, 611, 759, 610, 765, 609, 771, 608, 772, 607, 778, 606, 779, 605, 784, 604, 785, 603, 791, 602, 797, 601, 798, 600, 803, 599, 804, 598, 809, 597, 810, 596, 811, 595, 817, 594, 822, 593, 823, 592, 830, 591, 831, 590, 832, 589, 836, 588, 837, 587, 842, 586, 843, 585, 845, 584, 850, 583, 851, 582, 856, 581, 857, 580, 861, 579, 862, 578, 862, 577, 862, 576, 862, 575, 862, 574, 862, 573, 862, 572, 862, 571, 862, 570, 862, 569, 862, 568, 862, 567, 859, 566, 858, 565, 858, 564, 858, 563, 858, 562, 858, 561, 858, 560, 858, 559, 858, 558, 858, 557, 858, 556, 858, 555, 858, 554, 858, 553, 858, 552, 858, 551, 858, 550, 858, 549, 859, 548, 861, 547, 862, 546, 862, 545, 862, 544, 862, 543, 862, 542, 862, 541, 862, 540, 862, 539, 861, 538, 859, 537, 858, 536, 859, 535, 860, 534, 861, 533, 863, 532, 864, 531, 866, 530, 868, 529, 869, 528, 871, 527, 872, 526, 874, 525, 876, 524, 877, 523, 879, 522, 880, 521, 882, 520, 883, 519, 885, 518, 886, 517, 888, 516, 889, 515, 948, 514, 949, 513, 951, 512, 953, 511, 954, 510, 955, 509, 955, 508, 955, 507, 955, 506, 955, 505, 955, 504, 955, 503, 955, 502, 954, 501, 952, 500, 951, 499, 951, 498, 951, 497, 951, 496, 951, 495, 951, 494, 951, 493, 951, 492, 951, 491, 951, 490, 951, 489, 951, 488, 951, 487, 951, 486, 951, 485, 951, 484, 953, 483, 954, 482, 955, 481, 955, 480, 955, 479, 955, 478, 955, 477, 955, 476, 956, 475, 955, 474, 953, 473, 952, 472, 951, 471, 951, 470, 952, 469, 954, 468, 955, 467, 957, 466, 959, 465, 960, 464, 962, 463, 963, 462, 965, 461, 967, 460, 968, 459, 970, 458, 971, 457, 973, 456, 974, 455, 976, 454, 977, 453, 978, 452, 980, 451, 982, 450, 1034, 449, 1035, 448, 1035, 447, 1036, 446, 1037, 445, 1038, 444, 1038, 443, 1038, 442, 1039, 441, 1039, 440, 1041, 439, 1042, 438, 1042, 437, 1042, 436, 1043, 435, 1044, 434, 1045, 433, 1045, 432, 1046, 431, 1046, 430, 1046, 429, 1047, 428, 1048, 427, 1048, 426, 1048, 425, 1049, 424, 1050, 423, 1051, 422, 1051, 421, 1051, 420, 1052, 419, 1052, 418, 1053, 417, 1054, 416, 1054, 415, 1054, 414, 1055, 413, 1056, 412, 1056, 411, 1056, 410, 1056, 409, 1057, 408, 1058, 407, 1058, 406, 1058, 405, 1058, 404, 1059, 403, 1059, 402, 1060, 401, 1061, 400, 1061, 399, 1061, 398, 1062, 397, 1062, 396, 1062, 395, 1063, 394, 1063, 393, 1063, 392, 1063, 391, 1063, 390, 1064, 389, 1065, 388, 1065, 387, 1065, 386, 1065, 385, 1066, 384, 1066, 383, 1066, 382, 1067, 381, 1067, 380, 1067, 379, 1067, 378, 1067, 377, 1068, 376, 1068, 375, 1068, 374, 1069, 373, 1069, 372, 1069, 371, 1069, 370, 1069, 369, 1069, 368, 1070, 367, 1070, 366, 1070, 365, 1070, 364, 1070, 363, 1070, 362, 1070, 361, 1071, 360, 1071, 359, 1071, 358, 1071, 357, 1071, 356, 1071, 355, 1071, 354, 1071, 353, 1071, 352, 1071, 351, 1071, 350, 1071, 349, 1071, 348, 1071, 347, 1071, 346, 1071, 345, 1071, 344, 1071, 343, 1071, 342, 1071, 341, 1098, 341], [51, 341, 51, 342, 51, 343, 51, 344, 52, 345, 52, 346, 52, 347, 51, 348, 51, 349, 51, 350, 51, 351, 51, 352, 51, 353, 51, 354, 51, 355, 51, 356, 52, 357, 52, 358, 52, 359, 52, 360, 52, 361, 52, 362, 52, 363, 53, 364, 53, 365, 53, 366, 53, 367, 53, 368, 53, 369, 54, 370, 54, 371, 54, 372, 54, 373, 54, 374, 55, 375, 55, 376, 56, 377, 56, 378, 56, 379, 56, 380, 56, 381, 57, 382, 57, 383, 57, 384, 58, 385, 58, 386, 58, 387, 58, 388, 59, 389, 59, 390, 60, 391, 60, 392, 60, 393, 60, 394, 60, 395, 61, 396, 61, 397, 61, 398, 61, 399, 62, 400, 63, 401, 63, 402, 64, 403, 64, 404, 64, 405, 64, 406, 65, 407, 66, 408, 66, 409, 66, 410, 67, 411, 67, 412, 68, 413, 68, 414, 69, 415, 69, 416, 70, 417, 70, 418, 71, 419, 72, 420, 72, 421, 72, 422, 73, 423, 74, 424, 74, 425, 74, 426, 75, 427, 76, 428, 76, 429, 77, 430, 77, 431, 77, 432, 78, 433, 79, 434, 80, 435, 80, 436, 81, 437, 81, 438, 82, 439, 83, 440, 84, 441, 84, 442, 85, 443, 85, 444, 86, 445, 87, 446, 87, 447, 139, 448, 140, 449, 142, 450, 143, 451, 144, 452, 146, 453, 148, 454, 149, 455, 150, 456, 152, 457, 154, 458, 155, 459, 157, 460, 158, 461, 160, 462, 162, 463, 163, 464, 165, 465, 166, 466, 168, 467, 169, 468, 169, 469, 168, 470, 166, 471, 165, 472, 165, 473, 165, 474, 165, 475, 165, 476, 165, 477, 165, 478, 166, 479, 167, 480, 168, 481, 170, 482, 169, 483, 169, 484, 169, 485, 170, 486, 170, 487, 170, 488, 170, 489, 170, 490, 170, 491, 170, 492, 170, 493, 170, 494, 170, 495, 170, 496, 169, 497, 168, 498, 167, 499, 166, 500, 166, 501, 166, 502, 166, 503, 166, 504, 166, 505, 166, 506, 166, 507, 166, 508, 169, 509, 170, 510, 172, 511, 173, 512, 232, 513, 233, 514, 235, 515, 236, 516, 237, 517, 239, 518, 240, 519, 242, 520, 244, 521, 245, 522, 247, 523, 248, 524, 250, 525, 252, 526, 253, 527, 255, 528, 256, 529, 258, 530, 259, 531, 261, 532, 262, 533, 262, 534, 261, 535, 259, 536, 258, 537, 258, 538, 258, 539, 258, 540, 258, 541, 258, 542, 258, 543, 258, 544, 260, 545, 262, 546, 262, 547, 263, 548, 263, 549, 263, 550, 263, 551, 263, 552, 263, 553, 263, 554, 263, 555, 263, 556, 263, 557, 263, 558, 263, 559, 263, 560, 263, 561, 263, 562, 262, 563, 261, 564, 258, 565, 258, 566, 259, 567, 259, 568, 259, 569, 259, 570, 259, 571, 259, 572, 259, 573, 259, 574, 259, 575, 259, 576, 259, 577, 259, 578, 261, 579, 266, 580, 267, 581, 272, 582, 273, 583, 278, 584, 279, 585, 280, 586, 285, 587, 286, 588, 291, 589, 292, 590, 298, 591, 299, 592, 300, 593, 306, 594, 312, 595, 313, 596, 313, 597, 319, 598, 320, 599, 325, 600, 326, 601, 331, 602, 337, 603, 338, 604, 344, 605, 345, 606, 351, 607, 352, 608, 358, 609, 364, 610, 365, 611, 370, 612, 376, 613, 377, 614, 385, 615, 390, 616, 392, 617, 397, 618, 404, 619, 410, 620, 417, 621, 419, 622, 425, 623, 431, 624, 438, 625, 445, 626, 451, 627, 471, 628, 480, 629, 496, 630, 519, 631, 529, 632, 551, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 554, 677, 554, 678, 554, 679, 554, 680, 554, 681, 554, 682, 554, 683, 554, 684, 554, 685, 554, 686, 554, 687, 554, 688, 554, 689, 554, 690, 554, 691, 554, 692, 554, 693, 554, 694, 554, 695, 554, 696, 554, 697, 554, 698, 554, 699, 554, 700, 554, 701, 554, 702, 554, 703, 554, 704, 554, 705, 554, 706, 554, 707, 554, 708, 554, 709, 554, 710, 554, 711, 554, 712, 554, 713, 554, 714, 513, 715, 506, 715, 498, 714, 498, 713, 493, 712, 483, 711, 473, 710, 463, 709, 456, 708, 448, 707, 440, 706, 433, 705, 426, 704, 420, 703, 414, 702, 408, 701, 403, 700, 398, 699, 392, 698, 387, 697, 381, 696, 377, 695, 373, 694, 368, 693, 350, 692, 346, 691, 342, 690, 338, 689, 337, 688, 337, 687, 337, 686, 336, 685, 333, 684, 330, 683, 326, 682, 323, 681, 319, 680, 316, 679, 313, 678, 309, 677, 306, 676, 303, 675, 300, 674, 298, 673, 295, 672, 292, 671, 289, 670, 286, 669, 283, 668, 280, 667, 278, 666, 275, 665, 272, 664, 270, 663, 267, 662, 264, 661, 262, 660, 259, 659, 257, 658, 255, 657, 229, 656, 228, 655, 227, 654, 225, 653, 223, 652, 222, 651, 220, 650, 219, 649, 217, 648, 216, 647, 214, 646, 213, 645, 211, 644, 210, 643, 208, 642, 206, 641, 205, 640, 204, 639, 204, 638, 203, 637, 203, 636, 203, 635, 203, 634, 203, 633, 203, 632, 203, 631, 203, 630, 203, 629, 203, 628, 203, 627, 203, 626, 202, 625, 200, 624, 196, 623, 195, 622, 194, 621, 192, 620, 192, 619, 192, 618, 192, 617, 192, 616, 192, 615, 192, 614, 192, 613, 190, 612, 189, 611, 187, 610, 186, 609, 185, 608, 183, 607, 182, 606, 180, 605, 179, 604, 178, 603, 176, 602, 175, 601, 173, 600, 172, 599, 163, 598, 162, 597, 161, 596, 160, 595, 159, 594, 159, 593, 157, 592, 137, 591, 136, 590, 134, 589, 133, 588, 131, 587, 130, 586, 128, 585, 127, 584, 125, 583, 123, 582, 122, 581, 120, 580, 119, 579, 117, 578, 115, 577, 114, 576, 112, 575, 111, 574, 111, 573, 111, 572, 111, 571, 111, 570, 111, 569, 110, 568, 110, 567, 109, 566, 108, 565, 107, 564, 106, 563, 105, 562, 104, 561, 103, 560, 102, 559, 101, 558, 100, 557, 99, 556, 98, 555, 97, 554, 97, 553, 96, 552, 95, 551, 94, 550, 93, 549, 92, 548, 91, 547, 90, 546, 89, 545, 88, 544, 88, 543, 87, 542, 86, 541, 85, 540, 84, 539, 84, 538, 83, 537, 82, 536, 81, 535, 80, 534, 80, 533, 79, 532, 78, 531, 77, 530, 72, 529, 71, 528, 70, 527, 69, 526, 69, 525, 68, 524, 67, 523, 66, 522, 66, 521, 65, 520, 64, 519, 64, 518, 63, 517, 63, 516, 63, 515, 63, 514, 63, 513, 64, 512, 64, 511, 63, 510, 63, 509, 62, 508, 62, 507, 61, 506, 60, 505, 60, 504, 59, 503, 59, 502, 58, 501, 57, 500, 57, 499, 56, 498, 56, 497, 55, 496, 55, 495, 54, 494, 54, 493, 53, 492, 53, 491, 52, 490, 52, 489, 51, 488, 51, 487, 50, 486, 50, 485, 49, 484, 49, 483, 49, 482, 48, 481, 48, 480, 47, 479, 47, 478, 47, 477, 46, 476, 46, 475, 45, 474, 45, 473, 45, 472, 44, 471, 44, 470, 43, 469, 43, 468, 43, 467, 42, 466, 42, 465, 42, 464, 41, 463, 41, 462, 41, 461, 40, 460, 40, 459, 40, 458, 40, 457, 39, 456, 39, 455, 39, 454, 38, 453, 38, 452, 38, 451, 38, 450, 37, 449, 37, 448, 37, 447, 37, 446, 37, 445, 36, 444, 36, 443, 36, 442, 36, 441, 35, 440, 35, 439, 35, 438, 35, 437, 35, 436, 35, 435, 35, 434, 34, 433, 34, 432, 34, 431, 34, 430, 34, 429, 33, 428, 33, 427, 33, 426, 33, 425, 33, 424, 33, 423, 33, 422, 33, 421, 33, 420, 33, 419, 33, 418, 33, 417, 33, 416, 33, 415, 33, 414, 33, 413, 32, 412, 32, 411, 32, 410, 32, 409, 32, 408, 32, 407, 32, 406, 32, 405, 32, 404, 32, 403, 33, 402, 33, 401, 33, 400, 32, 399, 31, 398, 31, 397, 32, 396, 31, 395, 31, 394, 30, 393, 30, 392, 30, 391, 30, 390, 29, 389, 29, 388, 29, 387, 29, 386, 29, 385, 28, 384, 28, 383, 28, 382, 28, 381, 28, 380, 27, 379, 27, 378, 27, 377, 27, 376, 27, 375, 26, 374, 26, 373, 27, 372, 27, 371, 26, 370, 26, 369, 26, 368, 26, 367, 26, 366, 25, 365, 25, 364, 25, 363, 25, 362, 25, 361, 25, 360, 24, 359, 25, 358, 25, 357, 25, 356, 24, 355, 24, 354, 25, 353, 25, 352, 25, 351, 24, 350, 24, 349, 25, 348, 25, 347, 24, 346, 24, 345, 24, 344, 25, 343, 25, 342, 24, 341, 51, 341]],
    32: [[556, 13, 558, 14, 599, 15, 601, 16, 602, 17, 639, 18, 645, 19, 648, 20, 650, 21, 666, 22, 692, 23, 695, 24, 696, 25, 701, 26, 723, 27, 725, 28, 726, 29, 755, 30, 758, 31, 760, 32, 763, 33, 764, 34, 766, 35, 767, 36, 772, 37, 775, 38, 778, 39, 780, 40, 783, 41, 785, 42, 787, 43, 802, 44, 803, 45, 804, 46, 805, 47, 806, 48, 807, 49, 824, 50, 827, 51, 829, 52, 843, 53, 845, 54, 847, 55, 848, 56, 848, 57, 849, 58, 855, 59, 856, 60, 857, 61, 859, 62, 860, 63, 861, 64, 862, 65, 866, 66, 873, 67, 875, 68, 877, 69, 878, 70, 879, 71, 879, 72, 880, 73, 889, 74, 900, 75, 902, 76, 903, 77, 905, 78, 906, 79, 908, 80, 909, 81, 911, 82, 913, 83, 914, 84, 915, 85, 916, 86, 917, 87, 917, 88, 918, 89, 918, 90, 919, 91, 920, 92, 921, 93, 921, 94, 921, 95, 922, 96, 923, 97, 923, 98, 924, 99, 924, 100, 925, 101, 925, 102, 926, 103, 927, 104, 952, 105, 953, 106, 955, 107, 956, 108, 957, 109, 959, 110, 960, 111, 961, 112, 963, 113, 964, 114, 966, 115, 968, 116, 968, 117, 969, 118, 970, 119, 970, 120, 971, 121, 972, 122, 972, 123, 973, 124, 973, 125, 974, 126, 974, 127, 975, 128, 976, 129, 976, 130, 977, 131, 978, 132, 978, 133, 979, 134, 980, 135, 980, 136, 980, 137, 981, 138, 981, 139, 987, 140, 989, 141, 990, 142, 991, 143, 991, 144, 992, 145, 992, 146, 993, 147, 993, 148, 994, 149, 994, 150, 995, 151, 995, 152, 996, 153, 996, 154, 997, 155, 998, 156, 999, 157, 1000, 158, 1001, 159, 1002, 160, 1003, 161, 1003, 162, 1003, 163, 1004, 164, 1004, 165, 1005, 166, 1006, 167, 1007, 168, 1009, 169, 1016, 170, 1017, 171, 1018, 172, 1019, 173, 1019, 174, 1019, 175, 1020, 176, 1020, 177, 1020, 178, 1020, 179, 1020, 180, 1021, 181, 1022, 182, 1023, 183, 1024, 184, 1026, 185, 1028, 186, 1029, 187, 1029, 188, 1030, 189, 1030, 190, 1031, 191, 1032, 192, 1033, 193, 1034, 194, 1035, 195, 1036, 196, 1037, 197, 1037, 198, 1038, 199, 1039, 200, 1040, 201, 1040, 202, 1041, 203, 1041, 204, 1042, 205, 1042, 206, 1042, 207, 1043, 208, 1043, 209, 1043, 210, 1044, 211, 1045, 212, 1045, 213, 1045, 214, 1045, 215, 1045, 216, 1045, 217, 1045, 218, 1045, 219, 1045, 220, 1047, 221, 1048, 222, 1050, 223, 1051, 224, 1052, 225, 1053, 226, 1054, 227, 1055, 228, 1055, 229, 1056, 230, 1056, 231, 1057, 232, 1057, 233, 1058, 234, 1058, 235, 1059, 236, 1059, 237, 1059, 238, 1060, 239, 1061, 240, 1062, 241, 1062, 242, 1063, 243, 1064, 244, 1065, 245, 1065, 246, 1065, 247, 1066, 248, 1066, 249, 1066, 250, 1066, 251, 1066, 252, 1066, 253, 1066, 254, 1067, 255, 1067, 256, 1068, 257, 1068, 258, 1068, 259, 1069, 260, 1069, 261, 1069, 262, 1070, 263, 1070, 264, 1071, 265, 1072, 266, 1072, 267, 1072, 268, 1072, 269, 1073, 270, 1075, 271, 1075, 272, 1076, 273, 1076, 274, 1077, 275, 1077, 276, 1078, 277, 1078, 278, 1078, 279, 1078, 280, 1078, 281, 1078, 282, 1078, 283, 1078, 284, 1078, 285, 1078, 286, 1079, 287, 1079, 288, 1080, 289, 1089, 290, 1089, 291, 1089, 292, 1088, 293, 1088, 294, 1088, 295, 1087, 296, 1086, 297, 1085, 298, 1084, 299, 1083, 300, 1083, 301, 1082, 302, 1082, 303, 1083, 304, 1083, 305, 1083, 306, 1085, 307, 1087, 308, 1088, 309, 1089, 310, 1089, 311, 1090, 312, 1090, 313, 1090, 314, 1090, 315, 1091, 316, 1091, 317, 1091, 318, 1091, 319, 1091, 320, 1091, 321, 1091, 322, 1091, 323, 1090, 324, 1090, 325, 1089, 326, 1088, 327, 1086, 328, 1086, 329, 1086, 330, 1087, 331, 1087, 332, 1088, 333, 1088, 334, 1089, 335, 1089, 336, 1089, 337, 1102, 338, 1102, 339, 1102, 340, 1101, 341, 1037, 341, 1037, 340, 1036, 339, 1036, 338, 1036, 337, 1036, 336, 1036, 335, 1036, 334, 1036, 333, 1037, 332, 1037, 331, 1037, 330, 1034, 329, 1033, 328, 1032, 327, 1032, 326, 1032, 325, 1032, 324, 1032, 323, 1032, 322, 1032, 321, 1032, 320, 1030, 319, 1029, 318, 1028, 317, 1027, 316, 1027, 315, 1027, 314, 1027, 313, 1026, 312, 1026, 311, 1026, 310, 1026, 309, 1026, 308, 1026, 307, 1027, 306, 1028, 305, 1028, 304, 1028, 303, 1029, 302, 1028, 301, 1026, 300, 1026, 299, 1026, 298, 1026, 297, 1027, 296, 1027, 295, 1027, 294, 1027, 293, 1027, 292, 1027, 291, 1028, 290, 1028, 289, 1028, 288, 1024, 287, 1021, 286, 1020, 285, 1020, 284, 1020, 283, 1018, 282, 1017, 281, 1017, 280, 1016, 279, 1016, 278, 1014, 277, 1014, 276, 1013, 275, 1013, 274, 1013, 273, 1013, 272, 1013, 271, 1013, 270, 1013, 269, 1013, 268, 1011, 267, 1010, 266, 1010, 265, 1010, 264, 1009, 263, 1009, 262, 1009, 261, 1009, 260, 1009, 259, 1009, 258, 1010, 257, 993, 256, 992, 255, 991, 254, 991, 253, 992, 252, 997, 251, 989, 250, 987, 249, 987, 248, 986, 247, 985, 246, 984, 245, 983, 244, 982, 243, 981, 242, 981, 241, 980, 240, 980, 239, 980, 238, 979, 237, 977, 236, 976, 235, 975, 234, 974, 233, 974, 232, 974, 231, 975, 230, 975, 229, 974, 228, 974, 227, 974, 226, 969, 225, 968, 224, 967, 223, 968, 222, 966, 221, 964, 220, 963, 219, 962, 218, 962, 217, 963, 216, 968, 215, 969, 214, 973, 213, 973, 212, 961, 211, 961, 210, 956, 209, 956, 208, 954, 207, 945, 206, 943, 205, 940, 204, 938, 203, 937, 202, 936, 201, 936, 200, 936, 199, 936, 198, 936, 197, 936, 196, 937, 195, 937, 194, 938, 193, 936, 192, 932, 191, 928, 190, 927, 189, 926, 188, 926, 187, 922, 186, 921, 185, 920, 184, 920, 183, 920, 182, 920, 181, 920, 180, 920, 179, 920, 178, 920, 177, 920, 176, 920, 175, 920, 174, 920, 173, 920, 172, 919, 171, 919, 170, 919, 169, 919, 168, 919, 167, 919, 166, 919, 165, 919, 164, 919, 163, 919, 162, 919, 161, 919, 160, 919, 159, 919, 158, 919, 157, 871, 156, 869, 155, 868, 154, 868, 153, 868, 152, 868, 151, 868, 150, 868, 149, 868, 148, 868, 147, 866, 146, 864, 145, 862, 144, 862, 143, 859, 142, 858, 141, 858, 140, 857, 139, 857, 138, 856, 137, 856, 136, 854, 135, 854, 134, 854, 133, 853, 132, 852, 131, 841, 130, 838, 129, 835, 128, 834, 127, 829, 126, 828, 125, 827, 124, 818, 123, 815, 122, 815, 121, 807, 120, 805, 119, 804, 118, 803, 117, 803, 116, 798, 115, 795, 114, 793, 113, 792, 112, 792, 111, 790, 110, 776, 109, 748, 108, 746, 107, 745, 106, 743, 105, 741, 104, 716, 103, 715, 102, 715, 101, 707, 100, 705, 99, 702, 98, 677, 97, 674, 96, 674, 95, 669, 94, 666, 93, 665, 92, 622, 91, 621, 90, 615, 89, 611, 88, 554, 87, 554, 86, 554, 85, 554, 84, 554, 83, 554, 82, 554, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 556, 13], [495, 11, 497, 12, 554, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 554, 81, 554, 82, 554, 83, 554, 84, 554, 85, 554, 86, 554, 87, 470, 88, 469, 89, 467, 90, 463, 91, 432, 92, 431, 93, 429, 94, 420, 95, 415, 96, 414, 97, 412, 98, 394, 99, 393, 100, 393, 101, 392, 102, 391, 103, 389, 104, 389, 105, 387, 106, 386, 107, 384, 108, 379, 109, 376, 110, 373, 111, 369, 112, 367, 113, 364, 114, 338, 115, 331, 116, 324, 117, 323, 118, 323, 119, 324, 120, 324, 121, 323, 122, 323, 123, 322, 124, 319, 125, 316, 126, 307, 127, 308, 128, 308, 129, 308, 130, 308, 131, 314, 132, 307, 133, 306, 134, 305, 135, 304, 136, 300, 137, 298, 138, 296, 139, 289, 140, 285, 141, 277, 142, 275, 143, 274, 144, 274, 145, 274, 146, 272, 147, 222, 148, 222, 149, 222, 150, 222, 151, 222, 152, 222, 153, 222, 154, 222, 155, 222, 156, 222, 157, 222, 158, 222, 159, 222, 160, 222, 161, 222, 162, 222, 163, 222, 164, 222, 165, 222, 166, 221, 167, 222, 168, 222, 169, 222, 170, 222, 171, 222, 172, 222, 173, 222, 174, 222, 175, 222, 176, 220, 177, 219, 178, 207, 179, 207, 180, 207, 181, 205, 182, 203, 183, 202, 184, 201, 185, 198, 186, 189, 187, 189, 188, 189, 189, 188, 190, 187, 191, 186, 192, 184, 193, 183, 194, 183, 195, 183, 196, 183, 197, 183, 198, 183, 199, 182, 200, 181, 201, 178, 202, 178, 203, 170, 204, 170, 205, 169, 206, 169, 207, 170, 208, 170, 209, 170, 210, 170, 211, 170, 212, 168, 213, 165, 214, 165, 215, 163, 216, 147, 217, 146, 218, 146, 219, 146, 220, 146, 221, 146, 222, 146, 223, 145, 224, 145, 225, 143, 226, 144, 227, 145, 228, 145, 229, 144, 230, 143, 231, 141, 232, 141, 233, 140, 234, 140, 235, 137, 236, 132, 237, 127, 238, 128, 239, 128, 240, 128, 241, 128, 242, 128, 243, 128, 244, 128, 245, 128, 246, 128, 247, 126, 248, 126, 249, 125, 250, 125, 251, 124, 252, 124, 253, 125, 254, 125, 255, 125, 256, 125, 257, 125, 258, 125, 259, 125, 260, 124, 261, 123, 262, 122, 263, 120, 264, 116, 265, 117, 266, 118, 267, 119, 268, 119, 269, 119, 270, 119, 271, 119, 272, 119, 273, 119, 274, 119, 275, 118, 276, 116, 277, 116, 278, 115, 279, 115, 280, 114, 281, 114, 282, 113, 283, 113, 284, 112, 285, 112, 286, 111, 287, 109, 288, 105, 289, 105, 290, 105, 291, 104, 292, 103, 293, 103, 294, 103, 295, 104, 296, 104, 297, 103, 298, 102, 299, 102, 300, 101, 301, 101, 302, 100, 303, 95, 304, 95, 305, 95, 306, 95, 307, 95, 308, 96, 309, 97, 310, 97, 311, 98, 312, 98, 313, 98, 314, 97, 315, 97, 316, 97, 317, 97, 318, 97, 319, 96, 320, 96, 321, 94, 322, 92, 323, 91, 324, 90, 325, 90, 326, 90, 327, 90, 328, 90, 329, 90, 330, 90, 331, 89, 332, 89, 333, 87, 334, 86, 335, 85, 336, 86, 337, 86, 338, 86, 339, 86, 340, 86, 341, 27, 341, 27, 340, 27, 339, 27, 338, 27, 337, 27, 336, 27, 335, 27, 334, 28, 333, 28, 332, 29, 331, 30, 330, 30, 329, 31, 328, 32, 327, 33, 326, 33, 325, 33, 324, 33, 323, 33, 322, 33, 321, 34, 320, 34, 319, 34, 318, 34, 317, 34, 316, 34, 315, 34, 314, 34, 313, 34, 312, 34, 311, 34, 310, 34, 309, 35, 308, 35, 307, 35, 306, 34, 305, 32, 304, 31, 303, 30, 302, 30, 301, 29, 300, 31, 299, 34, 298, 40, 297, 39, 296, 38, 295, 38, 294, 37, 293, 36, 292, 36, 291, 35, 290, 34, 289, 34, 288, 34, 287, 33, 286, 33, 285, 33, 284, 33, 283, 33, 282, 43, 281, 43, 280, 43, 279, 43, 278, 43, 277, 43, 276, 44, 275, 44, 274, 45, 273, 45, 272, 46, 271, 47, 270, 47, 269, 47, 268, 48, 267, 48, 266, 48, 265, 49, 264, 49, 263, 50, 262, 50, 261, 51, 260, 51, 259, 52, 258, 52, 257, 52, 256, 53, 255, 53, 254, 54, 253, 54, 252, 55, 251, 56, 250, 56, 249, 57, 248, 58, 247, 58, 246, 58, 245, 59, 244, 59, 243, 60, 242, 61, 241, 62, 240, 63, 239, 63, 238, 63, 237, 63, 236, 63, 235, 63, 234, 63, 233, 63, 232, 64, 231, 64, 230, 64, 229, 65, 228, 65, 227, 66, 226, 66, 225, 67, 224, 68, 223, 69, 222, 70, 221, 71, 220, 73, 219, 74, 218, 75, 217, 76, 216, 76, 215, 77, 214, 78, 213, 79, 212, 80, 211, 82, 210, 83, 209, 83, 208, 84, 207, 84, 206, 85, 205, 85, 204, 85, 203, 85, 202, 86, 201, 86, 200, 86, 199, 87, 198, 87, 197, 87, 196, 87, 195, 88, 194, 88, 193, 89, 192, 89, 191, 90, 190, 90, 189, 91, 188, 92, 187, 93, 186, 94, 185, 96, 184, 97, 183, 98, 182, 99, 181, 99, 180, 100, 179, 101, 178, 102, 177, 103, 176, 104, 175, 105, 174, 107, 173, 108, 172, 108, 171, 108, 170, 109, 169, 110, 168, 111, 167, 112, 166, 113, 165, 114, 164, 116, 163, 116, 162, 117, 161, 117, 160, 118, 159, 118, 158, 119, 157, 120, 156, 121, 155, 122, 154, 123, 153, 124, 152, 125, 151, 126, 150, 127, 149, 128, 148, 130, 147, 132, 146, 134, 145, 136, 144, 136, 143, 136, 142, 137, 141, 138, 140, 138, 139, 139, 138, 140, 137, 141, 136, 142, 135, 144, 134, 146, 133, 148, 132, 149, 131, 149, 130, 150, 129, 150, 128, 151, 127, 152, 126, 152, 125, 154, 124, 156, 123, 162, 122, 164, 121, 165, 120, 165, 119, 166, 118, 166, 117, 167, 116, 167, 115, 168, 114, 169, 113, 169, 112, 171, 111, 173, 110, 173, 109, 174, 108, 175, 107, 177, 106, 178, 105, 179, 104, 181, 103, 182, 102, 184, 101, 185, 100, 186, 99, 188, 98, 189, 97, 214, 96, 215, 95, 216, 94, 216, 93, 217, 92, 218, 91, 218, 90, 219, 89, 220, 88, 220, 87, 221, 86, 222, 85, 223, 84, 223, 83, 224, 82, 225, 81, 226, 80, 228, 79, 228, 78, 228, 77, 228, 76, 229, 75, 230, 74, 232, 73, 234, 72, 236, 71, 237, 70, 239, 69, 240, 68, 242, 67, 255, 66, 260, 65, 264, 64, 266, 63, 268, 62, 268, 61, 268, 60, 269, 59, 270, 58, 271, 57, 272, 56, 274, 55, 277, 54, 291, 53, 293, 52, 301, 51, 303, 50, 307, 49, 308, 48, 310, 47, 311, 46, 313, 45, 314, 44, 316, 43, 318, 42, 324, 41, 332, 40, 334, 39, 335, 38, 337, 37, 343, 36, 345, 35, 347, 34, 348, 33, 350, 32, 352, 31, 371, 30, 372, 29, 374, 28, 383, 27, 386, 26, 387, 25, 389, 24, 391, 23, 394, 22, 396, 21, 401, 20, 416, 19, 418, 18, 424, 17, 441, 16, 441, 15, 443, 14, 444, 13, 448, 12, 480, 11, 495, 11], [1101, 342, 1101, 343, 1100, 344, 1100, 345, 1099, 346, 1099, 347, 1098, 348, 1098, 349, 1097, 350, 1096, 351, 1095, 352, 1094, 353, 1094, 354, 1094, 355, 1093, 356, 1093, 357, 1093, 358, 1092, 359, 1091, 360, 1091, 361, 1092, 362, 1093, 363, 1095, 364, 1098, 365, 1098, 366, 1097, 367, 1096, 368, 1092, 369, 1092, 370, 1092, 371, 1092, 372, 1092, 373, 1092, 374, 1093, 375, 1093, 376, 1093, 377, 1093, 378, 1093, 379, 1093, 380, 1093, 381, 1093, 382, 1094, 383, 1094, 384, 1095, 385, 1095, 386, 1096, 387, 1097, 388, 1098, 389, 1098, 390, 1099, 391, 1099, 392, 1099, 393, 1099, 394, 1099, 395, 1099, 396, 1099, 397, 1099, 398, 1099, 399, 1099, 400, 1099, 401, 1099, 402, 1099, 403, 1098, 404, 1098, 405, 1096, 406, 1096, 407, 1093, 408, 1093, 409, 1093, 410, 1092, 411, 1092, 412, 1091, 413, 1090, 414, 1089, 415, 1088, 416, 1087, 417, 1086, 418, 1085, 419, 1084, 420, 1084, 421, 1084, 422, 1084, 423, 1083, 424, 1084, 425, 1085, 426, 1085, 427, 1086, 428, 1086, 429, 1086, 430, 1086, 431, 1086, 432, 1086, 433, 1084, 434, 1084, 435, 1084, 436, 1084, 437, 1083, 438, 1082, 439, 1081, 440, 1082, 441, 1082, 442, 1082, 443, 1083, 444, 1082, 445, 1082, 446, 1082, 447, 1081, 448, 1079, 449, 1080, 450, 1079, 451, 1079, 452, 1078, 453, 1078, 454, 1078, 455, 1078, 456, 1078, 457, 1079, 458, 1080, 459, 1080, 460, 1080, 461, 1080, 462, 1080, 463, 1080, 464, 1079, 465, 1079, 466, 1078, 467, 1078, 468, 1077, 469, 1075, 470, 1074, 471, 1074, 472, 1073, 473, 1073, 474, 1072, 475, 1072, 476, 1071, 477, 1070, 478, 1068, 479, 1068, 480, 1066, 481, 1062, 482, 1062, 483, 1063, 484, 1064, 485, 1064, 486, 1065, 487, 1066, 488, 1066, 489, 1066, 490, 1067, 491, 1067, 492, 1068, 493, 1068, 494, 1068, 495, 1067, 496, 1067, 497, 1067, 498, 1066, 499, 1066, 500, 1065, 501, 1065, 502, 1064, 503, 1063, 504, 1063, 505, 1063, 506, 1063, 507, 1062, 508, 1061, 509, 1060, 510, 1060, 511, 1060, 512, 1059, 513, 1057, 514, 1057, 515, 1056, 516, 1055, 517, 1054, 518, 1053, 519, 1045, 520, 1045, 521, 1046, 522, 1048, 523, 1048, 524, 1049, 525, 1049, 526, 1049, 527, 1049, 528, 1049, 529, 1049, 530, 1048, 531, 1043, 532, 1043, 533, 1040, 534, 1034, 535, 1032, 536, 1031, 537, 1025, 538, 1024, 539, 1023, 540, 1020, 541, 1020, 542, 1020, 543, 1021, 544, 1021, 545, 1021, 546, 1021, 547, 1021, 548, 1021, 549, 1020, 550, 1020, 551, 1020, 552, 1020, 553, 1020, 554, 1021, 555, 1021, 556, 1021, 557, 1021, 558, 1021, 559, 1021, 560, 1019, 561, 1019, 562, 1016, 563, 1016, 564, 1016, 565, 1015, 566, 1015, 567, 1015, 568, 1015, 569, 1015, 570, 1014, 571, 1012, 572, 1011, 573, 1009, 574, 1003, 575, 1003, 576, 1003, 577, 1001, 578, 998, 579, 998, 580, 997, 581, 994, 582, 990, 583, 990, 584, 990, 585, 990, 586, 990, 587, 990, 588, 990, 589, 990, 590, 990, 591, 990, 592, 990, 593, 990, 594, 990, 595, 989, 596, 938, 597, 938, 598, 938, 599, 938, 600, 938, 601, 938, 602, 938, 603, 938, 604, 938, 605, 938, 606, 938, 607, 938, 608, 938, 609, 938, 610, 938, 611, 938, 612, 938, 613, 938, 614, 938, 615, 938, 616, 938, 617, 939, 618, 939, 619, 939, 620, 938, 621, 938, 622, 938, 623, 938, 624, 938, 625, 937, 626, 935, 627, 914, 628, 913, 629, 911, 630, 910, 631, 908, 632, 914, 633, 914, 634, 914, 635, 914, 636, 913, 637, 896, 638, 888, 639, 888, 640, 888, 641, 888, 642, 889, 643, 889, 644, 888, 645, 887, 646, 885, 647, 880, 648, 880, 649, 880, 650, 879, 651, 878, 652, 877, 653, 874, 654, 873, 655, 870, 656, 868, 657, 867, 658, 859, 659, 858, 660, 857, 661, 859, 662, 860, 663, 860, 664, 860, 665, 860, 666, 859, 667, 858, 668, 831, 669, 829, 670, 826, 671, 823, 672, 820, 673, 815, 674, 810, 675, 821, 676, 821, 677, 821, 678, 821, 679, 820, 680, 811, 681, 795, 682, 790, 683, 785, 684, 776, 685, 776, 686, 775, 687, 774, 688, 766, 689, 757, 690, 756, 691, 755, 692, 754, 693, 749, 694, 749, 695, 744, 696, 740, 697, 732, 698, 729, 699, 723, 700, 722, 701, 710, 702, 707, 703, 724, 704, 725, 705, 726, 706, 726, 707, 726, 708, 725, 709, 724, 710, 723, 711, 680, 712, 679, 713, 678, 714, 678, 715, 676, 716, 670, 717, 667, 718, 622, 719, 621, 720, 608, 721, 607, 722, 603, 722, 599, 721, 577, 720, 565, 719, 563, 718, 564, 717, 564, 716, 575, 715, 600, 714, 556, 713, 554, 712, 554, 711, 554, 710, 554, 709, 554, 708, 554, 707, 554, 706, 554, 705, 554, 704, 554, 703, 554, 702, 554, 701, 554, 700, 554, 699, 554, 698, 554, 697, 554, 696, 554, 695, 554, 694, 554, 693, 554, 692, 554, 691, 554, 690, 554, 689, 554, 688, 554, 687, 554, 686, 554, 685, 554, 684, 554, 683, 554, 682, 554, 681, 554, 680, 554, 679, 554, 678, 554, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 554, 632, 554, 631, 554, 630, 554, 629, 563, 628, 583, 627, 584, 626, 662, 625, 663, 624, 665, 623, 667, 622, 670, 621, 674, 620, 690, 619, 693, 618, 695, 617, 701, 616, 731, 615, 731, 614, 732, 613, 733, 612, 733, 611, 734, 610, 735, 609, 737, 608, 746, 607, 750, 606, 760, 605, 761, 604, 765, 603, 768, 602, 769, 601, 770, 600, 772, 599, 773, 598, 774, 597, 776, 596, 778, 595, 782, 594, 804, 593, 805, 592, 806, 591, 808, 590, 816, 589, 817, 588, 819, 587, 820, 586, 821, 585, 823, 584, 825, 583, 830, 582, 830, 581, 831, 580, 832, 579, 833, 578, 835, 577, 837, 576, 848, 575, 854, 574, 857, 573, 866, 572, 867, 571, 868, 570, 869, 569, 871, 568, 883, 567, 884, 566, 885, 565, 885, 564, 886, 563, 886, 562, 887, 561, 888, 560, 888, 559, 889, 558, 890, 557, 891, 556, 892, 555, 894, 554, 896, 553, 897, 552, 899, 551, 900, 550, 901, 549, 903, 548, 904, 547, 905, 546, 907, 545, 929, 544, 931, 543, 932, 542, 932, 541, 933, 540, 934, 539, 935, 538, 935, 537, 936, 536, 937, 535, 937, 534, 938, 533, 939, 532, 939, 531, 940, 530, 940, 529, 941, 528, 941, 527, 943, 526, 944, 525, 945, 524, 947, 523, 948, 522, 950, 521, 951, 520, 953, 519, 954, 518, 955, 517, 957, 516, 958, 515, 960, 514, 964, 513, 965, 512, 965, 511, 966, 510, 966, 509, 967, 508, 968, 507, 968, 506, 969, 505, 969, 504, 970, 503, 970, 502, 971, 501, 971, 500, 972, 499, 972, 498, 973, 497, 975, 496, 978, 495, 980, 494, 981, 493, 981, 492, 982, 491, 983, 490, 984, 489, 985, 488, 986, 487, 986, 486, 986, 485, 986, 484, 987, 483, 987, 482, 988, 481, 988, 480, 989, 479, 990, 478, 990, 477, 991, 476, 992, 475, 993, 474, 994, 473, 995, 472, 995, 471, 996, 470, 996, 469, 997, 468, 997, 467, 997, 466, 997, 465, 997, 464, 997, 463, 997, 462, 997, 461, 998, 460, 998, 459, 999, 458, 1000, 457, 1001, 456, 1003, 455, 1004, 454, 1005, 453, 1005, 452, 1006, 451, 1006, 450, 1007, 449, 1007, 448, 1008, 447, 1009, 446, 1009, 445, 1010, 444, 1010, 443, 1011, 442, 1011, 441, 1012, 440, 1012, 439, 1012, 438, 1013, 437, 1013, 436, 1013, 435, 1014, 434, 1014, 433, 1014, 432, 1014, 431, 1014, 430, 1014, 429, 1015, 428, 1015, 427, 1015, 426, 1015, 425, 1016, 424, 1016, 423, 1017, 422, 1017, 421, 1018, 420, 1019, 419, 1020, 418, 1020, 417, 1020, 416, 1020, 415, 1020, 414, 1020, 413, 1020, 412, 1021, 411, 1021, 410, 1022, 409, 1023, 408, 1023, 407, 1023, 406, 1023, 405, 1023, 404, 1024, 403, 1024, 402, 1024, 401, 1025, 400, 1025, 399, 1025, 398, 1025, 397, 1026, 396, 1027, 395, 1027, 394, 1029, 393, 1030, 392, 1031, 391, 1031, 390, 1031, 389, 1031, 388, 1031, 387, 1031, 386, 1031, 385, 1031, 384, 1031, 383, 1031, 382, 1031, 381, 1031, 380, 1032, 379, 1032, 378, 1033, 377, 1034, 376, 1035, 375, 1035, 374, 1036, 373, 1036, 372, 1036, 371, 1036, 370, 1036, 369, 1036, 368, 1036, 367, 1037, 366, 1037, 365, 1037, 364, 1038, 363, 1038, 362, 1039, 361, 1039, 360, 1040, 359, 1040, 358, 1040, 357, 1040, 356, 1040, 355, 1040, 354, 1039, 353, 1039, 352, 1039, 351, 1039, 350, 1039, 349, 1039, 348, 1039, 347, 1039, 346, 1039, 345, 1039, 344, 1039, 343, 1038, 342, 1101, 342], [86, 342, 86, 343, 86, 344, 86, 345, 86, 346, 85, 347, 85, 348, 85, 349, 85, 350, 85, 351, 86, 352, 86, 353, 86, 354, 85, 355, 85, 356, 85, 357, 85, 358, 85, 359, 85, 360, 85, 361, 85, 362, 85, 363, 85, 364, 85, 365, 86, 366, 86, 367, 87, 368, 87, 369, 88, 370, 89, 371, 89, 372, 90, 373, 90, 374, 91, 375, 91, 376, 92, 377, 92, 378, 92, 379, 92, 380, 92, 381, 92, 382, 92, 383, 92, 384, 92, 385, 92, 386, 92, 387, 93, 388, 93, 389, 94, 390, 95, 391, 95, 392, 96, 393, 96, 394, 96, 395, 276, 396, 276, 397, 96, 398, 96, 399, 96, 400, 97, 401, 97, 402, 97, 403, 97, 404, 97, 405, 97, 406, 97, 407, 97, 408, 96, 409, 96, 410, 96, 411, 97, 412, 98, 413, 98, 414, 99, 415, 100, 416, 100, 417, 101, 418, 101, 419, 102, 420, 105, 421, 106, 422, 108, 423, 109, 424, 110, 425, 110, 426, 111, 427, 112, 428, 113, 429, 113, 430, 114, 431, 115, 432, 116, 433, 116, 434, 116, 435, 117, 436, 117, 437, 117, 438, 117, 439, 116, 440, 117, 441, 117, 442, 118, 443, 119, 444, 119, 445, 120, 446, 120, 447, 121, 448, 122, 449, 122, 450, 123, 451, 124, 452, 124, 453, 125, 454, 128, 455, 130, 456, 131, 457, 132, 458, 133, 459, 133, 460, 134, 461, 135, 462, 136, 463, 137, 464, 138, 465, 139, 466, 140, 467, 140, 468, 141, 469, 141, 470, 142, 471, 142, 472, 142, 473, 142, 474, 142, 475, 143, 476, 143, 477, 145, 478, 145, 479, 146, 480, 147, 481, 147, 482, 147, 483, 147, 484, 147, 485, 148, 486, 148, 487, 149, 488, 149, 489, 149, 490, 150, 491, 150, 492, 151, 493, 151, 494, 152, 495, 153, 496, 153, 497, 154, 498, 155, 499, 158, 500, 159, 501, 161, 502, 166, 503, 168, 504, 169, 505, 169, 506, 170, 507, 171, 508, 172, 509, 173, 510, 175, 511, 176, 512, 177, 513, 178, 514, 179, 515, 180, 516, 180, 517, 181, 518, 182, 519, 183, 520, 185, 521, 185, 522, 186, 523, 187, 524, 187, 525, 188, 526, 189, 527, 189, 528, 190, 529, 190, 530, 191, 531, 192, 532, 192, 533, 193, 534, 193, 535, 194, 536, 195, 537, 195, 538, 196, 539, 222, 540, 224, 541, 226, 542, 227, 543, 228, 544, 229, 545, 231, 546, 232, 547, 233, 548, 235, 549, 237, 550, 238, 551, 239, 552, 240, 553, 240, 554, 241, 555, 242, 556, 243, 557, 244, 558, 246, 559, 252, 560, 253, 561, 255, 562, 255, 563, 257, 564, 269, 565, 273, 566, 274, 567, 275, 568, 276, 569, 282, 570, 287, 571, 288, 572, 295, 573, 299, 574, 300, 575, 301, 576, 302, 577, 303, 578, 303, 579, 304, 580, 305, 581, 306, 582, 307, 583, 308, 584, 309, 585, 310, 586, 310, 587, 311, 588, 322, 589, 324, 590, 325, 591, 327, 592, 328, 593, 329, 594, 329, 595, 331, 596, 332, 597, 333, 598, 340, 599, 357, 600, 360, 601, 361, 602, 371, 603, 372, 604, 374, 605, 374, 606, 383, 607, 385, 608, 386, 609, 395, 610, 399, 611, 415, 612, 418, 613, 419, 614, 433, 615, 435, 616, 450, 617, 452, 618, 455, 619, 458, 620, 475, 621, 476, 622, 477, 623, 481, 624, 484, 625, 550, 626, 553, 627, 554, 628, 554, 629, 554, 630, 554, 631, 554, 632, 554, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 554, 677, 554, 678, 554, 679, 554, 680, 554, 681, 554, 682, 554, 683, 554, 684, 554, 685, 554, 686, 554, 687, 554, 688, 554, 689, 554, 690, 554, 691, 554, 692, 554, 693, 554, 694, 554, 695, 554, 696, 554, 697, 554, 698, 554, 699, 554, 700, 554, 701, 554, 702, 554, 703, 554, 704, 554, 705, 554, 706, 554, 707, 554, 708, 554, 709, 554, 710, 549, 711, 548, 712, 547, 713, 527, 713, 469, 712, 467, 711, 467, 710, 468, 709, 468, 708, 469, 707, 477, 706, 476, 705, 471, 704, 453, 703, 386, 702, 383, 701, 373, 700, 373, 699, 374, 698, 381, 697, 382, 696, 385, 695, 374, 694, 369, 693, 363, 692, 361, 691, 356, 690, 355, 689, 344, 688, 343, 687, 336, 686, 332, 685, 330, 684, 328, 683, 317, 682, 317, 681, 308, 680, 306, 679, 306, 678, 306, 677, 307, 676, 315, 675, 313, 674, 311, 673, 311, 672, 307, 671, 305, 670, 305, 669, 304, 668, 284, 667, 277, 666, 275, 665, 274, 664, 271, 663, 270, 662, 268, 661, 268, 660, 267, 659, 268, 658, 268, 657, 255, 656, 254, 655, 224, 654, 222, 653, 222, 652, 222, 651, 222, 650, 223, 649, 224, 648, 224, 647, 226, 646, 236, 645, 236, 644, 241, 643, 241, 642, 240, 641, 211, 640, 209, 639, 208, 638, 203, 637, 201, 636, 200, 635, 199, 634, 198, 633, 197, 632, 196, 631, 195, 630, 195, 629, 195, 628, 196, 627, 196, 626, 197, 625, 197, 624, 192, 623, 190, 622, 189, 621, 189, 620, 189, 619, 189, 618, 189, 617, 189, 616, 189, 615, 189, 614, 189, 613, 189, 612, 189, 611, 189, 610, 189, 609, 189, 608, 189, 607, 189, 606, 189, 605, 189, 604, 189, 603, 189, 602, 189, 601, 189, 600, 189, 599, 189, 598, 189, 597, 189, 596, 189, 595, 189, 594, 189, 593, 140, 592, 139, 591, 138, 590, 138, 589, 138, 588, 138, 587, 135, 586, 136, 585, 135, 584, 131, 583, 130, 582, 128, 581, 126, 580, 125, 579, 125, 578, 125, 577, 123, 576, 122, 575, 121, 574, 120, 573, 120, 572, 119, 571, 119, 570, 118, 569, 118, 568, 119, 567, 119, 566, 111, 565, 109, 564, 107, 563, 107, 562, 105, 561, 104, 560, 102, 559, 100, 558, 99, 557, 98, 556, 97, 555, 97, 554, 97, 553, 95, 552, 94, 551, 94, 550, 93, 549, 93, 548, 92, 547, 92, 546, 92, 545, 90, 544, 85, 543, 84, 542, 84, 541, 84, 540, 81, 539, 81, 538, 81, 537, 81, 536, 81, 535, 80, 534, 78, 533, 77, 532, 77, 531, 76, 530, 76, 529, 76, 528, 70, 527, 69, 526, 69, 525, 69, 524, 76, 523, 67, 522, 65, 521, 64, 520, 64, 519, 64, 518, 65, 517, 72, 516, 71, 515, 65, 514, 65, 513, 62, 512, 57, 511, 56, 510, 55, 509, 54, 508, 53, 507, 52, 506, 51, 505, 49, 504, 48, 503, 48, 502, 48, 501, 46, 500, 46, 499, 46, 498, 46, 497, 44, 496, 43, 495, 43, 494, 42, 493, 42, 492, 41, 491, 41, 490, 41, 489, 40, 488, 41, 487, 40, 486, 39, 485, 39, 484, 38, 483, 38, 482, 38, 481, 39, 480, 39, 479, 38, 478, 38, 477, 38, 476, 38, 475, 38, 474, 38, 473, 38, 472, 37, 471, 36, 470, 35, 469, 35, 468, 35, 467, 35, 466, 35, 465, 35, 464, 36, 463, 36, 462, 36, 461, 36, 460, 37, 459, 38, 458, 39, 457, 39, 456, 38, 455, 38, 454, 37, 453, 37, 452, 37, 451, 38, 450, 38, 449, 37, 448, 35, 447, 35, 446, 35, 445, 35, 444, 35, 443, 35, 442, 35, 441, 35, 440, 35, 439, 26, 438, 24, 437, 22, 436, 15, 435, 15, 434, 14, 433, 14, 432, 14, 431, 14, 430, 14, 429, 14, 428, 13, 427, 12, 426, 11, 425, 11, 424, 11, 423, 11, 422, 11, 421, 11, 420, 10, 419, 10, 418, 11, 417, 11, 416, 10, 415, 9, 414, 9, 413, 9, 412, 9, 411, 9, 410, 9, 409, 9, 408, 10, 407, 10, 406, 10, 405, 10, 404, 11, 403, 11, 402, 11, 401, 12, 400, 13, 399, 14, 398, 15, 397, 16, 396, 18, 395, 19, 394, 20, 393, 21, 392, 22, 391, 23, 390, 23, 389, 24, 388, 27, 387, 27, 386, 26, 385, 26, 384, 26, 383, 26, 382, 26, 381, 26, 380, 26, 379, 25, 378, 18, 377, 18, 376, 18, 375, 18, 374, 18, 373, 19, 372, 24, 371, 24, 370, 23, 369, 23, 368, 26, 367, 26, 366, 27, 365, 27, 364, 28, 363, 29, 362, 30, 361, 30, 360, 30, 359, 29, 358, 28, 357, 27, 356, 27, 355, 26, 354, 25, 353, 24, 352, 23, 351, 23, 350, 22, 349, 22, 348, 22, 347, 22, 346, 21, 345, 21, 344, 27, 343, 27, 342, 86, 342]],
    33: [[622, 4, 633, 5, 654, 6, 655, 7, 665, 8, 666, 9, 666, 10, 687, 11, 688, 12, 688, 13, 697, 14, 698, 15, 698, 16, 708, 17, 709, 18, 729, 19, 730, 20, 740, 21, 741, 22, 741, 23, 742, 24, 761, 25, 762, 26, 762, 27, 763, 28, 780, 29, 781, 30, 781, 31, 782, 32, 782, 33, 782, 34, 783, 35, 856, 36, 856, 37, 857, 38, 857, 39, 858, 40, 859, 41, 859, 42, 861, 43, 863, 44, 864, 45, 866, 46, 868, 47, 870, 48, 871, 49, 873, 50, 875, 51, 876, 52, 878, 53, 880, 54, 881, 55, 883, 56, 884, 57, 886, 58, 888, 59, 890, 60, 893, 61, 897, 62, 899, 63, 901, 64, 902, 65, 904, 66, 907, 67, 909, 68, 910, 69, 913, 70, 915, 71, 917, 72, 919, 73, 921, 74, 923, 75, 926, 76, 928, 77, 930, 78, 932, 79, 933, 80, 934, 81, 934, 82, 935, 83, 937, 84, 937, 85, 938, 86, 939, 87, 941, 88, 948, 89, 949, 90, 951, 91, 953, 92, 955, 93, 957, 94, 957, 95, 956, 96, 956, 97, 956, 98, 956, 99, 955, 100, 955, 101, 955, 102, 955, 103, 955, 104, 955, 105, 955, 106, 955, 107, 955, 108, 955, 109, 955, 110, 955, 111, 955, 112, 956, 113, 956, 114, 955, 115, 954, 116, 953, 117, 952, 118, 951, 119, 946, 120, 947, 121, 947, 122, 948, 123, 948, 124, 948, 125, 949, 126, 953, 127, 954, 128, 954, 129, 955, 130, 955, 131, 955, 132, 962, 133, 963, 134, 963, 135, 964, 136, 964, 137, 964, 138, 965, 139, 965, 140, 966, 141, 966, 142, 967, 143, 967, 144, 968, 145, 968, 146, 969, 147, 969, 148, 969, 149, 970, 150, 975, 151, 976, 152, 976, 153, 977, 154, 977, 155, 977, 156, 978, 157, 983, 158, 984, 159, 984, 160, 985, 161, 985, 162, 985, 163, 986, 164, 986, 165, 987, 166, 987, 167, 991, 168, 992, 169, 992, 170, 993, 171, 993, 172, 993, 173, 994, 174, 994, 175, 996, 176, 997, 177, 997, 178, 998, 179, 998, 180, 998, 181, 1004, 182, 1005, 183, 1005, 184, 1006, 185, 1006, 186, 1006, 187, 1007, 188, 1007, 189, 1008, 190, 1008, 191, 1012, 192, 1013, 193, 1013, 194, 1014, 195, 1014, 196, 1014, 197, 1015, 198, 1015, 199, 1016, 200, 1016, 201, 1019, 202, 1020, 203, 1020, 204, 1021, 205, 1021, 206, 1021, 207, 1022, 208, 1022, 209, 1023, 210, 1023, 211, 1024, 212, 1024, 213, 1024, 214, 1024, 215, 1024, 216, 1024, 217, 1024, 218, 1028, 219, 1029, 220, 1029, 221, 1030, 222, 1030, 223, 1030, 224, 1031, 225, 1031, 226, 1036, 227, 1037, 228, 1037, 229, 1038, 230, 1038, 231, 1038, 232, 1039, 233, 1039, 234, 1040, 235, 1042, 236, 1043, 237, 1043, 238, 1044, 239, 1044, 240, 1044, 241, 1045, 242, 1045, 243, 1046, 244, 1046, 245, 1047, 246, 1047, 247, 1048, 248, 1048, 249, 1049, 250, 1049, 251, 1049, 252, 1050, 253, 1050, 254, 1051, 255, 1051, 256, 1052, 257, 1052, 258, 1052, 259, 1052, 260, 1052, 261, 1052, 262, 1052, 263, 1052, 264, 1052, 265, 1052, 266, 1053, 267, 1053, 268, 1053, 269, 1053, 270, 1054, 271, 1054, 272, 1055, 273, 1055, 274, 1056, 275, 1056, 276, 1056, 277, 1056, 278, 1056, 279, 1056, 280, 1056, 281, 1057, 282, 1057, 283, 1057, 284, 1058, 285, 1058, 286, 1059, 287, 1059, 288, 1060, 289, 1060, 290, 1060, 291, 1060, 292, 1060, 293, 1060, 294, 1060, 295, 1060, 296, 1060, 297, 1060, 298, 1060, 299, 1060, 300, 1061, 301, 1061, 302, 1061, 303, 1061, 304, 1060, 305, 1060, 306, 1060, 307, 1060, 308, 1060, 309, 1060, 310, 1060, 311, 1060, 312, 1060, 313, 1060, 314, 1060, 315, 1060, 316, 1060, 317, 1060, 318, 1060, 319, 1060, 320, 1060, 321, 1060, 322, 1060, 323, 1060, 324, 1060, 325, 1060, 326, 1060, 327, 1060, 328, 1060, 329, 1060, 330, 1060, 331, 1060, 332, 1060, 333, 1060, 334, 1060, 335, 1060, 336, 1060, 337, 1060, 338, 1061, 339, 1061, 340, 1040, 340, 1040, 339, 1039, 338, 1038, 337, 1037, 336, 1037, 335, 1037, 334, 1037, 333, 1037, 332, 1037, 331, 1037, 330, 1037, 329, 1037, 328, 1037, 327, 1037, 326, 1036, 325, 1036, 324, 1036, 323, 1036, 322, 1036, 321, 1037, 320, 1037, 319, 1036, 318, 1035, 317, 1034, 316, 1034, 315, 1034, 314, 1034, 313, 1034, 312, 1034, 311, 1031, 310, 1030, 309, 1029, 308, 1028, 307, 1028, 306, 1028, 305, 1028, 304, 1028, 303, 1023, 302, 1022, 301, 1021, 300, 1020, 299, 1020, 298, 1020, 297, 1017, 296, 1016, 295, 1015, 294, 1014, 293, 1014, 292, 1014, 291, 1014, 290, 1014, 289, 1014, 288, 1014, 287, 1014, 286, 1014, 285, 1013, 284, 1012, 283, 1011, 282, 1011, 281, 1011, 280, 1011, 279, 1011, 278, 1011, 277, 1011, 276, 1007, 275, 1006, 274, 1005, 273, 1004, 272, 1004, 271, 1004, 270, 1004, 269, 1004, 268, 1004, 267, 1004, 266, 999, 265, 998, 264, 997, 263, 996, 262, 996, 261, 996, 260, 991, 259, 990, 258, 989, 257, 988, 256, 988, 255, 988, 254, 988, 253, 988, 252, 986, 251, 985, 250, 984, 249, 983, 248, 983, 247, 983, 246, 983, 245, 983, 244, 983, 243, 983, 242, 978, 241, 977, 240, 976, 239, 975, 238, 975, 237, 975, 236, 975, 235, 970, 234, 969, 233, 968, 232, 967, 231, 967, 230, 967, 229, 967, 228, 962, 227, 961, 226, 960, 225, 959, 224, 959, 223, 959, 222, 959, 221, 959, 220, 959, 219, 959, 218, 959, 217, 957, 216, 956, 215, 955, 214, 954, 213, 954, 212, 954, 211, 948, 210, 947, 209, 946, 208, 945, 207, 945, 206, 945, 205, 945, 204, 941, 203, 940, 202, 939, 201, 938, 200, 931, 199, 928, 198, 927, 197, 926, 196, 925, 195, 925, 194, 925, 193, 925, 192, 925, 191, 925, 190, 925, 189, 925, 188, 925, 187, 925, 186, 925, 185, 925, 184, 925, 183, 924, 182, 924, 181, 924, 180, 923, 179, 923, 178, 923, 177, 923, 176, 923, 175, 923, 174, 924, 173, 925, 172, 925, 171, 925, 170, 925, 169, 925, 168, 925, 167, 925, 166, 925, 165, 925, 164, 925, 163, 925, 162, 925, 161, 925, 160, 925, 159, 925, 158, 925, 157, 925, 156, 925, 155, 925, 154, 925, 153, 925, 152, 850, 151, 847, 150, 846, 149, 845, 148, 844, 147, 844, 146, 844, 145, 839, 144, 838, 143, 837, 142, 836, 141, 831, 140, 830, 139, 829, 138, 828, 137, 821, 136, 820, 135, 819, 134, 818, 133, 818, 132, 818, 131, 818, 130, 818, 129, 811, 128, 810, 127, 809, 126, 808, 125, 800, 124, 799, 123, 798, 122, 797, 121, 797, 120, 782, 119, 781, 118, 780, 117, 779, 116, 779, 115, 779, 114, 779, 113, 766, 112, 765, 111, 764, 110, 763, 109, 745, 108, 744, 107, 743, 106, 742, 105, 735, 104, 714, 103, 713, 102, 712, 101, 703, 100, 702, 99, 701, 98, 692, 97, 691, 96, 690, 95, 671, 94, 670, 93, 669, 92, 660, 91, 659, 90, 576, 89, 575, 88, 555, 87, 554, 86, 554, 85, 554, 84, 554, 83, 554, 82, 554, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 554, 12, 554, 11, 554, 10, 555, 9, 555, 8, 556, 7, 556, 6, 557, 5, 557, 4, 622, 4], [540, 4, 541, 5, 550, 6, 551, 7, 551, 8, 552, 9, 552, 10, 552, 11, 553, 12, 553, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 554, 81, 554, 82, 554, 83, 554, 84, 554, 85, 554, 86, 554, 87, 553, 88, 551, 89, 469, 90, 467, 91, 460, 92, 459, 93, 457, 94, 440, 95, 439, 96, 437, 97, 428, 98, 427, 99, 425, 100, 419, 101, 418, 102, 416, 103, 396, 104, 390, 105, 389, 106, 388, 107, 386, 108, 370, 109, 369, 110, 368, 111, 366, 112, 351, 113, 351, 114, 351, 115, 351, 116, 350, 117, 349, 118, 347, 119, 333, 120, 333, 121, 332, 122, 331, 123, 329, 124, 324, 125, 323, 126, 322, 127, 320, 128, 314, 129, 314, 130, 314, 131, 314, 132, 314, 133, 313, 134, 312, 135, 310, 136, 304, 137, 303, 138, 302, 139, 300, 140, 296, 141, 296, 142, 296, 143, 296, 144, 295, 145, 295, 146, 294, 147, 292, 148, 289, 149, 220, 150, 220, 151, 220, 152, 220, 153, 220, 154, 220, 155, 220, 156, 220, 157, 220, 158, 220, 159, 220, 160, 220, 161, 220, 162, 220, 163, 220, 164, 220, 165, 221, 166, 221, 167, 222, 168, 222, 169, 222, 170, 222, 171, 222, 172, 222, 173, 222, 174, 221, 175, 221, 176, 220, 177, 220, 178, 220, 179, 220, 180, 220, 181, 220, 182, 220, 183, 220, 184, 220, 185, 220, 186, 220, 187, 220, 188, 219, 189, 219, 190, 218, 191, 216, 192, 213, 193, 204, 194, 203, 195, 202, 196, 200, 197, 194, 198, 194, 199, 193, 200, 192, 201, 190, 202, 186, 203, 186, 204, 186, 205, 186, 206, 185, 207, 184, 208, 182, 209, 178, 210, 178, 211, 178, 212, 177, 213, 177, 214, 176, 215, 174, 216, 172, 217, 172, 218, 172, 219, 172, 220, 172, 221, 171, 222, 170, 223, 168, 224, 165, 225, 165, 226, 165, 227, 164, 228, 163, 229, 161, 230, 158, 231, 158, 232, 158, 233, 158, 234, 157, 235, 156, 236, 154, 237, 153, 238, 153, 239, 153, 240, 152, 241, 152, 242, 151, 243, 149, 244, 146, 245, 146, 246, 145, 247, 144, 248, 142, 249, 139, 250, 139, 251, 139, 252, 139, 253, 139, 254, 139, 255, 138, 256, 137, 257, 135, 258, 134, 259, 133, 260, 132, 261, 130, 262, 127, 263, 127, 264, 127, 265, 127, 266, 127, 267, 127, 268, 126, 269, 125, 270, 123, 271, 119, 272, 119, 273, 119, 274, 119, 275, 119, 276, 118, 277, 117, 278, 115, 279, 113, 280, 113, 281, 113, 282, 113, 283, 113, 284, 113, 285, 112, 286, 111, 287, 109, 288, 106, 289, 106, 290, 106, 291, 106, 292, 106, 293, 106, 294, 106, 295, 105, 296, 104, 297, 102, 298, 100, 299, 100, 300, 100, 301, 100, 302, 100, 303, 100, 304, 99, 305, 98, 306, 96, 307, 96, 308, 96, 309, 96, 310, 96, 311, 96, 312, 96, 313, 96, 314, 95, 315, 95, 316, 94, 317, 92, 318, 91, 319, 91, 320, 91, 321, 91, 322, 91, 323, 91, 324, 91, 325, 90, 326, 89, 327, 88, 328, 88, 329, 88, 330, 88, 331, 88, 332, 88, 333, 87, 334, 87, 335, 86, 336, 85, 337, 85, 338, 85, 339, 85, 340, 61, 340, 61, 339, 62, 338, 62, 337, 62, 336, 62, 335, 62, 334, 62, 333, 62, 332, 62, 331, 62, 330, 62, 329, 63, 328, 63, 327, 64, 326, 63, 325, 63, 324, 63, 323, 63, 322, 63, 321, 63, 320, 64, 319, 64, 318, 64, 317, 64, 316, 64, 315, 64, 314, 64, 313, 64, 312, 64, 311, 64, 310, 65, 309, 65, 308, 66, 307, 66, 306, 67, 305, 67, 304, 68, 303, 68, 302, 68, 301, 68, 300, 69, 299, 69, 298, 69, 297, 69, 296, 70, 295, 70, 294, 70, 293, 70, 292, 70, 291, 70, 290, 70, 289, 70, 288, 70, 287, 70, 286, 70, 285, 70, 284, 71, 283, 71, 282, 72, 281, 72, 280, 72, 279, 72, 278, 72, 277, 72, 276, 72, 275, 72, 274, 73, 273, 73, 272, 74, 271, 74, 270, 75, 269, 75, 268, 75, 267, 75, 266, 75, 265, 75, 264, 76, 263, 76, 262, 77, 261, 77, 260, 78, 259, 78, 258, 78, 257, 78, 256, 78, 255, 79, 254, 79, 253, 80, 252, 80, 251, 81, 250, 81, 249, 82, 248, 82, 247, 83, 246, 83, 245, 84, 244, 84, 243, 85, 242, 85, 241, 86, 240, 86, 239, 87, 238, 87, 237, 87, 236, 87, 235, 87, 234, 88, 233, 88, 232, 89, 231, 89, 230, 90, 229, 90, 228, 91, 227, 91, 226, 92, 225, 92, 224, 94, 223, 95, 222, 95, 221, 96, 220, 96, 219, 97, 218, 97, 217, 98, 216, 98, 215, 101, 214, 101, 213, 102, 212, 102, 211, 103, 210, 103, 209, 104, 208, 104, 207, 105, 206, 105, 205, 107, 204, 108, 203, 108, 202, 109, 201, 109, 200, 110, 199, 110, 198, 111, 197, 111, 196, 116, 195, 116, 194, 117, 193, 117, 192, 118, 191, 118, 190, 119, 189, 119, 188, 122, 187, 123, 186, 123, 185, 124, 184, 124, 183, 125, 182, 125, 181, 126, 180, 126, 179, 130, 178, 130, 177, 131, 176, 131, 175, 134, 174, 135, 173, 135, 172, 136, 171, 136, 170, 137, 169, 137, 168, 138, 167, 138, 166, 143, 165, 144, 164, 144, 163, 145, 162, 145, 161, 147, 160, 148, 159, 148, 158, 149, 157, 149, 156, 150, 155, 150, 154, 154, 153, 155, 152, 155, 151, 156, 150, 156, 149, 157, 148, 157, 147, 162, 146, 162, 145, 163, 144, 163, 143, 164, 142, 164, 141, 167, 140, 167, 139, 168, 138, 168, 137, 169, 136, 169, 135, 170, 134, 170, 133, 175, 132, 176, 131, 176, 130, 177, 129, 177, 128, 178, 127, 178, 126, 183, 125, 184, 124, 184, 123, 185, 122, 185, 121, 186, 120, 186, 119, 194, 118, 195, 117, 192, 116, 191, 115, 190, 114, 189, 113, 188, 112, 187, 111, 186, 110, 187, 109, 187, 108, 187, 107, 187, 106, 187, 105, 187, 104, 187, 103, 187, 102, 187, 101, 187, 100, 187, 99, 187, 98, 187, 97, 187, 96, 187, 95, 186, 94, 186, 93, 186, 92, 186, 91, 186, 90, 189, 89, 191, 88, 193, 87, 194, 86, 201, 85, 203, 84, 204, 83, 205, 82, 206, 81, 207, 80, 208, 79, 208, 78, 209, 77, 210, 76, 211, 75, 214, 74, 216, 73, 218, 72, 221, 71, 223, 70, 225, 69, 227, 68, 229, 67, 231, 66, 233, 65, 235, 64, 237, 63, 239, 62, 241, 61, 243, 60, 245, 59, 248, 58, 252, 57, 254, 56, 256, 55, 258, 54, 259, 53, 260, 52, 262, 51, 264, 50, 266, 49, 267, 48, 269, 47, 271, 46, 272, 45, 274, 44, 276, 43, 277, 42, 279, 41, 281, 40, 282, 39, 283, 38, 283, 37, 284, 36, 285, 35, 285, 34, 349, 33, 350, 32, 350, 31, 351, 30, 351, 29, 371, 28, 371, 27, 372, 26, 372, 25, 391, 24, 391, 23, 392, 22, 392, 21, 402, 20, 402, 19, 421, 18, 421, 17, 432, 16, 433, 15, 433, 14, 442, 13, 443, 12, 443, 11, 462, 10, 463, 9, 463, 8, 473, 7, 473, 6, 495, 5, 495, 4, 540, 4], [1061, 341, 1061, 342, 1061, 343, 1061, 344, 1061, 345, 1061, 346, 1061, 347, 1061, 348, 1061, 349, 1060, 350, 1060, 351, 1060, 352, 1060, 353, 1060, 354, 1060, 355, 1060, 356, 1060, 357, 1060, 358, 1060, 359, 1060, 360, 1060, 361, 1060, 362, 1060, 363, 1060, 364, 1061, 365, 1061, 366, 1061, 367, 1061, 368, 1061, 369, 1061, 370, 1061, 371, 1061, 372, 1061, 373, 1061, 374, 1061, 375, 1061, 376, 1061, 377, 1061, 378, 1061, 379, 1062, 380, 1062, 381, 1062, 382, 1062, 383, 1061, 384, 1061, 385, 1061, 386, 1061, 387, 1061, 388, 1061, 389, 1061, 390, 1061, 391, 1061, 392, 1061, 393, 1061, 394, 1061, 395, 1061, 396, 1061, 397, 1061, 398, 1061, 399, 1061, 400, 1061, 401, 1061, 402, 1061, 403, 1061, 404, 1061, 405, 1061, 406, 1061, 407, 1061, 408, 1061, 409, 1061, 410, 1061, 411, 1061, 412, 1061, 413, 1061, 414, 1061, 415, 1061, 416, 1061, 417, 1061, 418, 1061, 419, 1061, 420, 1061, 421, 1061, 422, 1062, 423, 1062, 424, 1062, 425, 1062, 426, 1062, 427, 1062, 428, 1061, 429, 1061, 430, 1061, 431, 1061, 432, 1061, 433, 1061, 434, 1061, 435, 1061, 436, 1061, 437, 1061, 438, 1060, 439, 1059, 440, 1057, 441, 1057, 442, 1057, 443, 1057, 444, 1057, 445, 1057, 446, 1057, 447, 1056, 448, 1055, 449, 1053, 450, 1052, 451, 1052, 452, 1052, 453, 1052, 454, 1051, 455, 1051, 456, 1050, 457, 1048, 458, 1047, 459, 1047, 460, 1047, 461, 1047, 462, 1047, 463, 1046, 464, 1046, 465, 1045, 466, 1043, 467, 1041, 468, 1041, 469, 1041, 470, 1041, 471, 1041, 472, 1041, 473, 1041, 474, 1041, 475, 1040, 476, 1039, 477, 1037, 478, 1033, 479, 1033, 480, 1033, 481, 1033, 482, 1033, 483, 1033, 484, 1032, 485, 1031, 486, 1029, 487, 1029, 488, 1029, 489, 1029, 490, 1029, 491, 1029, 492, 1029, 493, 1029, 494, 1028, 495, 1027, 496, 1025, 497, 1021, 498, 1021, 499, 1021, 500, 1021, 501, 1021, 502, 1020, 503, 1019, 504, 1017, 505, 1014, 506, 1014, 507, 1014, 508, 1014, 509, 1013, 510, 1013, 511, 1012, 512, 1010, 513, 1006, 514, 1006, 515, 1006, 516, 1005, 517, 1005, 518, 1004, 519, 1002, 520, 998, 521, 998, 522, 998, 523, 998, 524, 998, 525, 997, 526, 996, 527, 994, 528, 991, 529, 991, 530, 991, 531, 991, 532, 991, 533, 991, 534, 990, 535, 989, 536, 987, 537, 986, 538, 986, 539, 986, 540, 985, 541, 984, 542, 982, 543, 978, 544, 978, 545, 978, 546, 977, 547, 977, 548, 976, 549, 974, 550, 969, 551, 969, 552, 968, 553, 967, 554, 965, 555, 961, 556, 961, 557, 961, 558, 961, 559, 961, 560, 960, 561, 959, 562, 957, 563, 953, 564, 953, 565, 953, 566, 952, 567, 952, 568, 951, 569, 949, 570, 946, 571, 876, 572, 876, 573, 876, 574, 876, 575, 876, 576, 876, 577, 876, 578, 876, 579, 876, 580, 876, 581, 876, 582, 876, 583, 876, 584, 876, 585, 876, 586, 876, 587, 876, 588, 876, 589, 876, 590, 876, 591, 876, 592, 877, 593, 877, 594, 878, 595, 878, 596, 878, 597, 878, 598, 878, 599, 878, 600, 878, 601, 877, 602, 877, 603, 876, 604, 876, 605, 876, 606, 876, 607, 876, 608, 876, 609, 876, 610, 876, 611, 876, 612, 876, 613, 876, 614, 876, 615, 875, 616, 875, 617, 874, 618, 872, 619, 869, 620, 858, 621, 856, 622, 850, 623, 849, 624, 848, 625, 846, 626, 841, 627, 840, 628, 839, 629, 837, 630, 831, 631, 830, 632, 830, 633, 829, 634, 827, 635, 820, 636, 819, 637, 818, 638, 816, 639, 807, 640, 805, 641, 799, 642, 798, 643, 797, 644, 795, 645, 786, 646, 784, 647, 775, 648, 773, 649, 766, 650, 765, 651, 764, 652, 762, 653, 752, 654, 744, 655, 743, 656, 741, 657, 730, 658, 722, 659, 722, 660, 721, 661, 719, 662, 712, 663, 711, 664, 709, 665, 691, 666, 690, 667, 688, 668, 680, 669, 679, 670, 677, 671, 659, 672, 657, 673, 617, 674, 615, 675, 578, 676, 576, 677, 570, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 554, 632, 554, 631, 554, 630, 554, 629, 554, 628, 554, 627, 554, 626, 554, 625, 554, 624, 554, 623, 554, 622, 554, 621, 554, 620, 554, 619, 554, 618, 554, 617, 554, 616, 554, 615, 554, 614, 554, 613, 554, 612, 554, 611, 554, 610, 554, 609, 554, 608, 554, 607, 554, 606, 554, 605, 554, 604, 554, 603, 554, 602, 554, 601, 554, 600, 554, 599, 554, 598, 554, 597, 554, 596, 554, 595, 554, 594, 562, 593, 562, 592, 582, 591, 582, 590, 633, 589, 643, 588, 683, 587, 684, 586, 684, 585, 693, 584, 694, 583, 694, 582, 714, 581, 715, 580, 715, 579, 725, 578, 725, 577, 726, 576, 726, 575, 737, 574, 747, 573, 748, 572, 748, 571, 758, 570, 768, 569, 768, 568, 769, 567, 769, 566, 780, 565, 780, 564, 791, 563, 791, 562, 800, 561, 800, 560, 801, 559, 801, 558, 812, 557, 812, 556, 822, 555, 822, 554, 823, 553, 823, 552, 831, 551, 832, 550, 832, 549, 833, 548, 833, 547, 841, 546, 841, 545, 842, 544, 842, 543, 851, 542, 851, 541, 852, 540, 852, 539, 854, 538, 855, 537, 855, 536, 856, 535, 856, 534, 856, 533, 856, 532, 856, 531, 856, 530, 856, 529, 856, 528, 856, 527, 856, 526, 856, 525, 856, 524, 856, 523, 856, 522, 856, 521, 856, 520, 856, 519, 857, 518, 857, 517, 858, 516, 859, 515, 860, 514, 860, 513, 861, 512, 861, 511, 862, 510, 862, 509, 863, 508, 863, 507, 864, 506, 865, 505, 865, 504, 933, 503, 933, 502, 933, 501, 933, 500, 933, 499, 933, 498, 933, 497, 933, 496, 933, 495, 933, 494, 933, 493, 933, 492, 933, 491, 933, 490, 933, 489, 933, 488, 933, 487, 933, 486, 933, 485, 933, 484, 933, 483, 933, 482, 933, 481, 933, 480, 933, 479, 933, 478, 933, 477, 933, 476, 933, 475, 933, 474, 933, 473, 933, 472, 933, 471, 934, 470, 934, 469, 935, 468, 936, 467, 937, 466, 937, 465, 938, 464, 938, 463, 939, 462, 939, 461, 940, 460, 940, 459, 941, 458, 942, 457, 942, 456, 983, 455, 983, 454, 986, 453, 987, 452, 987, 451, 988, 450, 988, 449, 989, 448, 989, 447, 990, 446, 990, 445, 995, 444, 995, 443, 996, 442, 996, 441, 997, 440, 997, 439, 998, 438, 998, 437, 1003, 436, 1004, 435, 1004, 434, 1005, 433, 1005, 432, 1006, 431, 1006, 430, 1010, 429, 1010, 428, 1011, 427, 1011, 426, 1012, 425, 1012, 424, 1013, 423, 1013, 422, 1018, 421, 1018, 420, 1019, 419, 1019, 418, 1020, 417, 1020, 416, 1020, 415, 1020, 414, 1021, 413, 1021, 412, 1022, 411, 1022, 410, 1023, 409, 1023, 408, 1024, 407, 1024, 406, 1025, 405, 1025, 404, 1029, 403, 1030, 402, 1030, 401, 1031, 400, 1031, 399, 1032, 398, 1032, 397, 1033, 396, 1033, 395, 1034, 394, 1035, 393, 1035, 392, 1036, 391, 1036, 390, 1037, 389, 1037, 388, 1038, 387, 1038, 386, 1039, 385, 1039, 384, 1040, 383, 1041, 382, 1041, 381, 1041, 380, 1041, 379, 1041, 378, 1040, 377, 1040, 376, 1040, 375, 1040, 374, 1040, 373, 1041, 372, 1041, 371, 1041, 370, 1041, 369, 1041, 368, 1041, 367, 1041, 366, 1041, 365, 1041, 364, 1040, 363, 1040, 362, 1040, 361, 1040, 360, 1041, 359, 1041, 358, 1041, 357, 1041, 356, 1041, 355, 1041, 354, 1041, 353, 1041, 352, 1041, 351, 1041, 350, 1041, 349, 1041, 348, 1041, 347, 1041, 346, 1041, 345, 1041, 344, 1041, 343, 1040, 342, 1040, 341, 1061, 341], [85, 341, 85, 342, 85, 343, 85, 344, 85, 345, 85, 346, 85, 347, 86, 348, 86, 349, 86, 350, 86, 351, 86, 352, 86, 353, 85, 354, 85, 355, 85, 356, 85, 357, 85, 358, 85, 359, 85, 360, 85, 361, 85, 362, 85, 363, 84, 364, 83, 365, 82, 366, 82, 367, 82, 368, 82, 369, 82, 370, 82, 371, 83, 372, 83, 373, 83, 374, 83, 375, 83, 376, 84, 377, 84, 378, 84, 379, 84, 380, 84, 381, 84, 382, 84, 383, 84, 384, 84, 385, 84, 386, 84, 387, 84, 388, 85, 389, 85, 390, 85, 391, 86, 392, 86, 393, 87, 394, 87, 395, 87, 396, 87, 397, 88, 398, 88, 399, 88, 400, 89, 401, 89, 402, 90, 403, 90, 404, 92, 405, 93, 406, 93, 407, 94, 408, 94, 409, 94, 410, 95, 411, 95, 412, 98, 413, 99, 414, 99, 415, 100, 416, 100, 417, 100, 418, 101, 419, 101, 420, 102, 421, 105, 422, 106, 423, 106, 424, 107, 425, 107, 426, 107, 427, 108, 428, 108, 429, 112, 430, 113, 431, 113, 432, 114, 433, 114, 434, 114, 435, 115, 436, 119, 437, 120, 438, 120, 439, 121, 440, 121, 441, 121, 442, 122, 443, 122, 444, 126, 445, 127, 446, 127, 447, 128, 448, 128, 449, 128, 450, 129, 451, 129, 452, 130, 453, 132, 454, 171, 455, 172, 456, 172, 457, 173, 458, 174, 459, 174, 460, 175, 461, 175, 462, 176, 463, 177, 464, 177, 465, 178, 466, 178, 467, 179, 468, 179, 469, 180, 470, 180, 471, 180, 472, 180, 473, 180, 474, 180, 475, 180, 476, 180, 477, 181, 478, 180, 479, 180, 480, 180, 481, 180, 482, 180, 483, 180, 484, 180, 485, 181, 486, 181, 487, 182, 488, 182, 489, 182, 490, 182, 491, 181, 492, 181, 493, 180, 494, 180, 495, 180, 496, 180, 497, 180, 498, 180, 499, 181, 500, 181, 501, 181, 502, 181, 503, 180, 504, 180, 505, 246, 506, 247, 507, 247, 508, 248, 509, 249, 510, 249, 511, 250, 512, 250, 513, 251, 514, 252, 515, 252, 516, 253, 517, 253, 518, 254, 519, 254, 520, 255, 521, 255, 522, 255, 523, 255, 524, 255, 525, 255, 526, 255, 527, 255, 528, 256, 529, 256, 530, 255, 531, 255, 532, 255, 533, 255, 534, 255, 535, 255, 536, 256, 537, 257, 538, 259, 539, 260, 540, 260, 541, 261, 542, 261, 543, 261, 544, 268, 545, 269, 546, 269, 547, 290, 548, 291, 549, 291, 550, 292, 551, 300, 552, 301, 553, 311, 554, 312, 555, 312, 556, 313, 557, 313, 558, 313, 559, 321, 560, 322, 561, 332, 562, 333, 563, 333, 564, 342, 565, 343, 566, 343, 567, 353, 568, 354, 569, 364, 570, 365, 571, 365, 572, 366, 573, 383, 574, 384, 575, 384, 576, 385, 577, 404, 578, 405, 579, 405, 580, 406, 581, 415, 582, 416, 583, 416, 584, 448, 585, 449, 586, 449, 587, 479, 588, 512, 589, 513, 590, 513, 591, 522, 592, 554, 593, 554, 594, 554, 595, 554, 596, 554, 597, 554, 598, 554, 599, 554, 600, 554, 601, 554, 602, 554, 603, 554, 604, 554, 605, 554, 606, 554, 607, 554, 608, 554, 609, 554, 610, 554, 611, 554, 612, 554, 613, 554, 614, 554, 615, 554, 616, 554, 617, 554, 618, 554, 619, 554, 620, 554, 621, 554, 622, 554, 623, 554, 624, 554, 625, 554, 626, 554, 627, 554, 628, 554, 629, 554, 630, 554, 631, 554, 632, 554, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 545, 677, 539, 677, 528, 676, 496, 675, 485, 674, 484, 673, 453, 672, 452, 671, 451, 670, 432, 669, 421, 668, 420, 667, 419, 666, 410, 665, 409, 664, 408, 663, 407, 662, 388, 661, 387, 660, 386, 659, 385, 658, 367, 657, 366, 656, 365, 655, 364, 654, 359, 653, 358, 652, 348, 651, 347, 650, 346, 649, 337, 648, 336, 647, 335, 646, 327, 645, 326, 644, 316, 643, 315, 642, 314, 641, 313, 640, 313, 639, 313, 638, 306, 637, 305, 636, 295, 635, 294, 634, 293, 633, 292, 632, 274, 631, 273, 630, 272, 629, 263, 628, 262, 627, 261, 626, 260, 625, 260, 624, 260, 623, 241, 622, 238, 621, 237, 620, 236, 619, 235, 618, 235, 617, 235, 616, 235, 615, 235, 614, 235, 613, 235, 612, 235, 611, 235, 610, 235, 609, 235, 608, 235, 607, 235, 606, 234, 605, 234, 604, 234, 603, 233, 602, 233, 601, 233, 600, 233, 599, 233, 598, 233, 597, 234, 596, 235, 595, 235, 594, 235, 593, 235, 592, 235, 591, 235, 590, 235, 589, 235, 588, 235, 587, 235, 586, 235, 585, 235, 584, 235, 583, 235, 582, 235, 581, 235, 580, 235, 579, 235, 578, 235, 577, 235, 576, 235, 575, 235, 574, 235, 573, 235, 572, 166, 571, 163, 570, 162, 569, 161, 568, 160, 567, 160, 566, 160, 565, 160, 564, 157, 563, 156, 562, 155, 561, 154, 560, 154, 559, 154, 558, 154, 557, 154, 556, 151, 555, 150, 554, 149, 553, 148, 552, 148, 551, 143, 550, 142, 549, 141, 548, 140, 547, 140, 546, 140, 545, 140, 544, 135, 543, 134, 542, 133, 541, 132, 540, 132, 539, 132, 538, 127, 537, 126, 536, 125, 535, 124, 534, 124, 533, 124, 532, 124, 531, 124, 530, 124, 529, 121, 528, 120, 527, 119, 526, 118, 525, 118, 524, 118, 523, 118, 522, 118, 521, 114, 520, 113, 519, 112, 518, 111, 517, 111, 516, 111, 515, 111, 514, 107, 513, 106, 512, 105, 511, 104, 510, 104, 509, 104, 508, 104, 507, 104, 506, 100, 505, 99, 504, 98, 503, 97, 502, 97, 501, 97, 500, 97, 499, 97, 498, 97, 497, 93, 496, 92, 495, 91, 494, 90, 493, 90, 492, 90, 491, 90, 490, 90, 489, 87, 488, 86, 487, 85, 486, 84, 485, 84, 484, 84, 483, 84, 482, 84, 481, 84, 480, 84, 479, 81, 478, 80, 477, 79, 476, 78, 475, 78, 474, 78, 473, 78, 472, 78, 471, 78, 470, 78, 469, 78, 468, 77, 467, 76, 466, 75, 465, 74, 464, 74, 463, 74, 462, 74, 461, 74, 460, 74, 459, 72, 458, 71, 457, 70, 456, 69, 455, 69, 454, 69, 453, 69, 452, 69, 451, 69, 450, 69, 449, 69, 448, 69, 447, 69, 446, 69, 445, 68, 444, 68, 443, 68, 442, 68, 441, 68, 440, 67, 439, 66, 438, 66, 437, 66, 436, 66, 435, 66, 434, 66, 433, 66, 432, 66, 431, 66, 430, 66, 429, 66, 428, 65, 427, 65, 426, 65, 425, 65, 424, 64, 423, 64, 422, 64, 421, 64, 420, 64, 419, 64, 418, 64, 417, 64, 416, 64, 415, 64, 414, 64, 413, 63, 412, 63, 411, 63, 410, 63, 409, 63, 408, 64, 407, 64, 406, 64, 405, 64, 404, 64, 403, 64, 402, 64, 401, 63, 400, 62, 399, 62, 398, 62, 397, 62, 396, 62, 395, 62, 394, 62, 393, 62, 392, 62, 391, 62, 390, 62, 389, 61, 388, 61, 387, 61, 386, 61, 385, 61, 384, 62, 383, 62, 382, 62, 381, 62, 380, 62, 379, 62, 378, 62, 377, 62, 376, 62, 375, 61, 374, 61, 373, 61, 372, 61, 371, 62, 370, 62, 369, 62, 368, 62, 367, 62, 366, 62, 365, 62, 364, 62, 363, 62, 362, 62, 361, 62, 360, 62, 359, 62, 358, 62, 357, 62, 356, 62, 355, 62, 354, 62, 353, 62, 352, 62, 351, 62, 350, 62, 349, 62, 348, 62, 347, 62, 346, 62, 345, 61, 344, 61, 343, 61, 342, 61, 341, 85, 341]],
    34: [85, 5, 86, 6, 87, 7, 87, 8, 87, 9, 87, 10, 87, 11, 88, 12, 88, 13, 88, 14, 88, 15, 88, 16, 88, 17, 89, 18, 89, 19, 90, 20, 91, 21, 103, 22, 105, 23, 106, 24, 106, 25, 106, 26, 106, 27, 106, 28, 106, 29, 106, 30, 106, 31, 106, 32, 106, 33, 106, 34, 106, 35, 106, 36, 106, 37, 106, 38, 106, 39, 106, 40, 106, 41, 106, 42, 107, 43, 107, 44, 108, 45, 109, 46, 109, 47, 109, 48, 107, 49, 106, 50, 106, 51, 106, 52, 106, 53, 106, 54, 106, 55, 107, 56, 107, 57, 107, 58, 107, 59, 107, 60, 107, 61, 107, 62, 107, 63, 107, 64, 107, 65, 108, 66, 108, 67, 110, 68, 111, 69, 113, 70, 115, 71, 116, 72, 118, 73, 119, 74, 121, 75, 122, 76, 124, 77, 125, 78, 125, 79, 124, 80, 124, 81, 124, 82, 123, 83, 121, 84, 120, 85, 120, 86, 120, 87, 120, 88, 119, 89, 119, 90, 119, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 121, 97, 121, 98, 122, 99, 122, 100, 122, 101, 122, 102, 122, 103, 122, 104, 122, 105, 122, 106, 122, 107, 122, 108, 122, 109, 120, 110, 118, 111, 118, 112, 116, 113, 110, 114, 104, 115, 103, 116, 104, 117, 104, 118, 103, 119, 102, 120, 102, 121, 103, 122, 102, 123, 100, 124, 61, 127, 63, 128, 64, 129, 65, 130, 64, 131, 67, 132, 67, 133, 67, 134, 67, 135, 61, 136, 59, 137, 57, 138, 53, 138, 51, 137, 50, 136, 49, 135, 49, 134, 49, 133, 48, 132, 48, 131, 49, 130, 51, 129, 53, 128, 55, 127, 96, 124, 94, 123, 72, 122, 71, 121, 65, 120, 39, 119, 28, 118, 27, 117, 19, 116, 18, 115, 17, 114, 15, 113, 15, 112, 15, 111, 15, 110, 15, 109, 18, 108, 18, 107, 17, 106, 17, 105, 17, 104, 17, 103, 17, 102, 17, 101, 17, 100, 17, 99, 17, 98, 17, 97, 19, 96, 21, 95, 21, 94, 21, 93, 21, 92, 22, 91, 23, 90, 25, 89, 35, 88, 35, 87, 35, 86, 33, 85, 32, 84, 31, 83, 31, 82, 31, 81, 32, 80, 34, 79, 36, 78, 37, 77, 38, 76, 40, 75, 42, 74, 43, 73, 43, 72, 43, 71, 43, 70, 43, 69, 43, 68, 43, 67, 43, 66, 43, 65, 43, 64, 43, 63, 43, 62, 43, 61, 43, 60, 43, 59, 43, 58, 43, 57, 43, 56, 36, 55, 34, 54, 33, 53, 34, 52, 35, 51, 36, 50, 35, 49, 36, 48, 37, 47, 38, 46, 39, 45, 39, 44, 39, 43, 41, 42, 42, 41, 42, 40, 42, 39, 43, 38, 44, 37, 45, 36, 46, 35, 46, 34, 47, 33, 48, 32, 49, 31, 48, 30, 49, 29, 50, 28, 50, 27, 50, 26, 50, 25, 50, 24, 50, 23, 51, 22, 51, 21, 50, 20, 50, 19, 50, 18, 51, 17, 51, 16, 53, 15, 78, 14, 78, 13, 79, 12, 79, 11, 78, 10, 78, 9, 78, 8, 78, 7, 79, 6, 80, 5, 85, 5],
    35: [79, 10, 80, 11, 81, 12, 81, 13, 81, 14, 81, 15, 82, 16, 81, 17, 82, 18, 82, 19, 82, 20, 82, 21, 82, 22, 82, 23, 82, 24, 83, 25, 83, 26, 83, 27, 83, 28, 83, 29, 83, 30, 104, 31, 105, 32, 105, 33, 105, 34, 105, 35, 104, 36, 104, 37, 104, 38, 104, 39, 104, 40, 104, 41, 104, 42, 104, 43, 104, 44, 104, 45, 104, 46, 104, 47, 104, 48, 104, 49, 104, 50, 104, 51, 104, 52, 104, 53, 104, 54, 104, 55, 104, 56, 105, 57, 109, 58, 110, 59, 110, 60, 110, 61, 110, 62, 110, 63, 110, 64, 110, 65, 110, 66, 110, 67, 113, 68, 113, 69, 113, 70, 113, 71, 113, 72, 113, 73, 113, 74, 113, 75, 113, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 120, 83, 120, 84, 120, 85, 120, 86, 120, 87, 120, 88, 120, 89, 120, 90, 120, 91, 120, 92, 120, 93, 122, 94, 123, 95, 125, 96, 125, 97, 125, 98, 124, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 123, 110, 123, 111, 123, 112, 127, 113, 127, 114, 128, 115, 128, 116, 127, 117, 126, 118, 125, 119, 125, 120, 125, 121, 121, 122, 120, 123, 121, 124, 121, 125, 122, 126, 122, 127, 122, 128, 118, 129, 116, 130, 115, 131, 113, 132, 112, 133, 112, 134, 111, 135, 99, 136, 99, 137, 98, 138, 98, 139, 95, 140, 93, 140, 90, 139, 90, 138, 90, 137, 83, 136, 68, 135, 56, 134, 54, 133, 54, 132, 54, 131, 48, 130, 46, 129, 45, 128, 38, 127, 35, 126, 34, 125, 33, 124, 33, 123, 32, 122, 32, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 30, 110, 30, 109, 29, 108, 27, 107, 27, 106, 28, 105, 28, 104, 26, 103, 26, 102, 26, 101, 26, 100, 30, 99, 30, 98, 30, 97, 30, 96, 30, 95, 30, 94, 30, 93, 30, 92, 30, 91, 30, 90, 30, 89, 30, 88, 29, 87, 27, 86, 26, 85, 26, 84, 25, 83, 26, 82, 29, 81, 34, 80, 36, 79, 40, 78, 39, 77, 38, 76, 38, 75, 38, 74, 38, 73, 38, 72, 38, 71, 38, 70, 38, 69, 38, 68, 38, 67, 38, 66, 38, 65, 38, 64, 38, 63, 38, 62, 38, 61, 38, 60, 38, 59, 38, 58, 38, 57, 38, 56, 39, 55, 41, 54, 43, 53, 44, 52, 44, 51, 45, 50, 45, 49, 46, 48, 47, 47, 48, 46, 49, 45, 50, 44, 51, 43, 52, 42, 53, 41, 55, 40, 58, 39, 59, 38, 62, 37, 62, 36, 62, 35, 62, 34, 63, 33, 63, 32, 63, 31, 63, 30, 63, 29, 64, 28, 64, 27, 64, 26, 64, 25, 64, 24, 64, 23, 65, 22, 65, 21, 65, 20, 65, 19, 65, 18, 66, 17, 66, 16, 66, 15, 66, 14, 66, 13, 66, 12, 67, 11, 69, 10, 79, 10],
    36: [63, 22, 65, 23, 65, 24, 66, 25, 66, 26, 66, 27, 66, 28, 66, 29, 67, 30, 67, 31, 67, 32, 67, 33, 67, 34, 67, 35, 104, 36, 106, 37, 112, 38, 113, 39, 114, 40, 115, 41, 115, 42, 116, 43, 118, 44, 118, 45, 118, 46, 118, 47, 118, 48, 118, 49, 118, 50, 118, 51, 118, 52, 118, 53, 123, 54, 123, 55, 123, 56, 123, 57, 125, 58, 125, 59, 126, 60, 127, 61, 126, 62, 127, 63, 127, 64, 127, 65, 127, 66, 128, 67, 127, 68, 128, 69, 128, 70, 128, 71, 127, 72, 128, 73, 127, 74, 128, 75, 128, 76, 127, 77, 127, 78, 126, 79, 126, 80, 124, 81, 124, 82, 124, 83, 121, 84, 120, 85, 119, 86, 116, 87, 121, 88, 123, 89, 125, 90, 127, 91, 128, 92, 129, 93, 129, 94, 130, 95, 130, 96, 134, 97, 135, 98, 135, 99, 135, 100, 134, 101, 130, 102, 130, 103, 129, 104, 129, 105, 128, 106, 128, 107, 127, 108, 127, 109, 127, 110, 127, 111, 127, 112, 127, 113, 127, 114, 127, 115, 127, 116, 127, 117, 127, 118, 127, 119, 127, 120, 127, 121, 126, 122, 126, 123, 126, 124, 126, 125, 126, 126, 126, 127, 127, 128, 129, 129, 130, 130, 130, 131, 127, 132, 126, 133, 112, 134, 112, 135, 112, 136, 112, 137, 111, 138, 110, 139, 108, 140, 98, 140, 95, 139, 94, 138, 93, 137, 68, 136, 67, 135, 64, 134, 56, 133, 54, 132, 53, 131, 50, 130, 48, 129, 49, 128, 48, 127, 48, 126, 51, 125, 52, 124, 56, 123, 53, 122, 49, 121, 44, 120, 40, 119, 39, 118, 35, 117, 34, 116, 33, 115, 31, 114, 26, 113, 25, 112, 24, 111, 24, 110, 23, 109, 23, 108, 23, 107, 22, 106, 22, 105, 25, 104, 29, 103, 32, 102, 32, 101, 32, 100, 32, 99, 32, 98, 32, 97, 32, 96, 11, 95, 10, 94, 9, 93, 8, 92, 8, 91, 7, 90, 7, 89, 6, 88, 6, 87, 6, 86, 7, 85, 7, 84, 8, 83, 8, 82, 10, 81, 10, 80, 10, 79, 11, 78, 11, 77, 12, 76, 13, 75, 15, 74, 17, 73, 17, 72, 17, 71, 18, 70, 17, 69, 18, 68, 24, 67, 25, 66, 26, 65, 26, 64, 27, 63, 28, 62, 29, 61, 30, 60, 31, 59, 33, 58, 34, 57, 35, 56, 35, 55, 36, 54, 37, 53, 37, 52, 37, 51, 38, 50, 38, 49, 38, 48, 38, 47, 38, 46, 38, 45, 39, 44, 38, 43, 38, 42, 38, 41, 38, 40, 39, 39, 40, 38, 41, 37, 41, 36, 42, 35, 43, 34, 46, 33, 51, 32, 51, 31, 51, 30, 51, 29, 52, 28, 52, 27, 52, 26, 52, 25, 53, 24, 53, 23, 54, 22, 63, 22],
    38: [88, 33, 88, 34, 89, 35, 89, 36, 90, 37, 91, 38, 91, 39, 92, 40, 92, 41, 93, 42, 94, 43, 94, 44, 95, 45, 95, 46, 96, 47, 109, 48, 109, 49, 110, 50, 111, 51, 111, 52, 112, 53, 113, 54, 113, 55, 114, 56, 115, 57, 115, 58, 116, 59, 117, 60, 117, 61, 119, 62, 120, 63, 120, 64, 120, 65, 121, 66, 121, 67, 122, 68, 123, 69, 124, 70, 124, 71, 125, 72, 126, 73, 127, 74, 128, 75, 128, 76, 128, 77, 128, 78, 128, 79, 126, 80, 126, 81, 126, 82, 126, 83, 126, 84, 126, 85, 125, 86, 125, 87, 125, 88, 125, 89, 125, 90, 125, 91, 125, 92, 125, 93, 125, 94, 125, 95, 125, 96, 125, 97, 125, 98, 125, 99, 127, 100, 128, 101, 130, 102, 130, 103, 129, 104, 127, 105, 127, 106, 126, 107, 124, 108, 124, 109, 124, 110, 124, 111, 124, 112, 124, 113, 124, 114, 124, 115, 124, 116, 124, 117, 124, 118, 124, 119, 124, 120, 124, 121, 124, 122, 124, 123, 124, 124, 124, 125, 124, 126, 124, 127, 124, 128, 124, 129, 124, 130, 123, 131, 92, 132, 78, 133, 76, 134, 74, 135, 62, 136, 60, 137, 51, 137, 47, 136, 46, 135, 45, 134, 42, 133, 37, 132, 35, 131, 34, 130, 33, 129, 33, 128, 34, 127, 34, 126, 35, 125, 35, 124, 35, 123, 35, 122, 35, 121, 35, 120, 35, 119, 35, 118, 35, 117, 35, 116, 35, 115, 35, 114, 35, 113, 34, 112, 28, 111, 27, 110, 25, 109, 19, 108, 19, 107, 18, 106, 17, 105, 17, 104, 16, 103, 16, 102, 17, 101, 20, 100, 20, 99, 20, 98, 20, 97, 20, 96, 20, 95, 20, 94, 20, 93, 20, 92, 20, 91, 20, 90, 20, 89, 20, 88, 20, 87, 20, 86, 20, 85, 20, 84, 20, 83, 20, 82, 20, 81, 20, 80, 20, 79, 20, 78, 20, 77, 20, 76, 20, 75, 20, 74, 20, 73, 20, 72, 20, 71, 17, 70, 16, 69, 15, 68, 16, 67, 17, 66, 18, 65, 19, 64, 20, 63, 21, 62, 23, 61, 24, 60, 25, 59, 26, 58, 27, 57, 28, 56, 29, 55, 31, 54, 32, 53, 33, 52, 33, 51, 33, 50, 34, 49, 36, 48, 44, 47, 49, 46, 51, 45, 52, 44, 56, 43, 62, 42, 63, 41, 64, 40, 66, 39, 72, 38, 74, 37, 78, 36, 80, 35, 81, 34, 84, 33, 88, 33],
    39: [75, 9, 76, 10, 77, 11, 78, 12, 79, 13, 80, 14, 82, 15, 83, 16, 84, 17, 86, 18, 88, 19, 91, 20, 94, 21, 96, 22, 98, 23, 100, 24, 101, 25, 103, 26, 104, 27, 104, 28, 105, 29, 106, 30, 106, 31, 106, 32, 107, 33, 107, 34, 107, 35, 106, 36, 106, 37, 106, 38, 105, 39, 104, 40, 103, 41, 103, 42, 101, 43, 101, 44, 101, 45, 101, 46, 101, 47, 101, 48, 101, 49, 101, 50, 101, 51, 110, 52, 113, 53, 114, 54, 114, 55, 113, 56, 113, 57, 113, 58, 112, 59, 111, 60, 108, 61, 106, 62, 105, 63, 105, 64, 104, 65, 103, 66, 102, 67, 102, 68, 101, 69, 101, 70, 101, 71, 101, 72, 106, 73, 108, 74, 109, 75, 111, 76, 111, 77, 112, 78, 112, 79, 112, 80, 111, 81, 110, 82, 110, 83, 110, 84, 110, 85, 110, 86, 112, 87, 114, 88, 115, 89, 116, 90, 117, 91, 118, 92, 118, 93, 119, 94, 119, 95, 119, 96, 119, 97, 119, 98, 119, 99, 119, 100, 119, 101, 118, 102, 118, 103, 118, 104, 118, 105, 118, 106, 118, 107, 118, 108, 119, 109, 121, 110, 122, 111, 123, 112, 124, 113, 123, 114, 124, 115, 123, 116, 123, 117, 123, 118, 122, 119, 121, 120, 121, 121, 120, 122, 120, 123, 119, 124, 120, 125, 119, 126, 116, 127, 116, 128, 115, 129, 112, 130, 108, 131, 98, 132, 97, 133, 97, 134, 91, 135, 86, 135, 85, 134, 46, 133, 43, 132, 41, 131, 39, 130, 38, 129, 37, 128, 38, 127, 38, 126, 39, 125, 38, 124, 34, 123, 33, 122, 32, 121, 31, 120, 31, 119, 32, 118, 36, 117, 35, 116, 34, 115, 33, 114, 33, 113, 33, 112, 34, 111, 36, 110, 38, 109, 40, 108, 31, 107, 29, 106, 29, 105, 28, 104, 28, 103, 29, 102, 29, 101, 29, 100, 27, 99, 27, 98, 26, 97, 26, 96, 27, 95, 28, 94, 33, 93, 33, 92, 33, 91, 33, 90, 33, 89, 34, 88, 33, 87, 32, 86, 31, 85, 32, 84, 33, 83, 34, 82, 35, 81, 36, 80, 37, 79, 37, 78, 38, 77, 39, 76, 40, 75, 41, 74, 42, 73, 39, 72, 38, 71, 38, 70, 38, 69, 38, 68, 39, 67, 39, 66, 38, 65, 37, 64, 37, 63, 37, 62, 37, 61, 37, 60, 36, 59, 34, 58, 33, 57, 33, 56, 33, 55, 33, 54, 33, 53, 33, 52, 35, 51, 37, 50, 41, 49, 41, 48, 41, 47, 41, 46, 42, 45, 42, 44, 42, 43, 41, 42, 39, 41, 39, 40, 38, 39, 38, 38, 38, 37, 37, 36, 37, 35, 37, 34, 37, 33, 37, 32, 38, 31, 38, 30, 39, 29, 39, 28, 40, 27, 41, 26, 43, 25, 44, 24, 46, 23, 48, 22, 50, 21, 53, 20, 55, 19, 57, 18, 59, 17, 61, 16, 63, 15, 64, 14, 65, 13, 66, 12, 67, 11, 69, 10, 70, 9, 75, 9],
    40: [302, 99, 305, 100, 307, 101, 310, 102, 312, 103, 313, 104, 315, 105, 316, 106, 316, 107, 316, 108, 317, 109, 318, 110, 318, 111, 318, 112, 318, 113, 317, 114, 316, 115, 315, 116, 314, 117, 313, 118, 317, 119, 342, 120, 343, 121, 345, 122, 351, 123, 353, 124, 353, 125, 358, 126, 359, 127, 359, 128, 361, 129, 362, 130, 384, 131, 386, 132, 389, 133, 391, 134, 391, 135, 392, 136, 392, 137, 393, 138, 394, 139, 394, 140, 394, 141, 394, 142, 393, 143, 393, 144, 390, 145, 389, 146, 390, 147, 390, 148, 391, 149, 392, 150, 392, 151, 392, 152, 393, 153, 393, 154, 392, 155, 391, 156, 391, 157, 395, 158, 396, 159, 397, 160, 397, 161, 398, 162, 399, 163, 401, 164, 410, 165, 414, 166, 420, 167, 422, 168, 423, 169, 424, 170, 424, 171, 424, 172, 429, 173, 431, 174, 433, 175, 437, 176, 436, 177, 436, 178, 437, 179, 437, 180, 438, 181, 439, 182, 441, 183, 440, 184, 440, 185, 440, 186, 441, 187, 442, 188, 442, 189, 445, 190, 444, 191, 444, 192, 443, 193, 443, 194, 442, 195, 442, 196, 444, 197, 446, 198, 444, 199, 444, 200, 446, 201, 447, 202, 448, 203, 447, 204, 447, 205, 448, 206, 449, 207, 449, 208, 449, 209, 450, 210, 450, 211, 456, 212, 456, 213, 458, 214, 458, 215, 458, 216, 462, 217, 463, 218, 464, 219, 465, 220, 464, 221, 464, 222, 464, 223, 464, 224, 464, 225, 466, 226, 467, 227, 467, 228, 467, 229, 467, 230, 467, 231, 468, 232, 468, 233, 469, 234, 469, 235, 468, 236, 466, 237, 465, 238, 463, 239, 462, 240, 434, 241, 433, 242, 433, 243, 402, 244, 406, 245, 412, 246, 412, 247, 413, 248, 402, 249, 402, 250, 402, 251, 400, 252, 399, 253, 398, 254, 397, 255, 396, 256, 394, 257, 393, 258, 392, 259, 391, 260, 389, 261, 388, 262, 387, 263, 385, 264, 384, 265, 382, 266, 381, 267, 381, 268, 382, 269, 382, 270, 383, 271, 383, 272, 384, 273, 385, 274, 386, 275, 386, 276, 387, 277, 387, 278, 387, 279, 388, 280, 388, 281, 388, 282, 388, 283, 389, 284, 389, 285, 389, 286, 390, 287, 390, 288, 391, 289, 391, 290, 392, 291, 393, 292, 394, 293, 395, 294, 395, 295, 396, 296, 397, 297, 398, 298, 399, 299, 399, 300, 400, 301, 400, 302, 401, 303, 401, 304, 401, 305, 401, 306, 401, 307, 401, 308, 401, 309, 401, 310, 402, 311, 403, 312, 404, 313, 405, 314, 406, 315, 408, 316, 408, 317, 409, 318, 409, 319, 409, 320, 409, 321, 409, 322, 409, 323, 409, 324, 409, 325, 408, 326, 408, 327, 407, 328, 406, 329, 406, 330, 406, 331, 405, 332, 405, 333, 404, 334, 403, 335, 402, 336, 402, 337, 403, 338, 403, 339, 404, 340, 404, 341, 404, 342, 405, 343, 404, 344, 408, 345, 412, 346, 414, 347, 414, 348, 414, 349, 414, 350, 414, 351, 415, 352, 415, 353, 415, 354, 416, 355, 415, 356, 415, 357, 414, 358, 413, 359, 411, 360, 410, 361, 410, 362, 410, 363, 410, 364, 412, 365, 412, 366, 412, 367, 414, 368, 415, 369, 415, 370, 415, 371, 415, 372, 415, 373, 415, 374, 416, 375, 415, 376, 415, 377, 414, 378, 414, 379, 413, 380, 412, 381, 412, 382, 410, 383, 409, 384, 407, 385, 406, 386, 404, 387, 397, 388, 397, 389, 397, 390, 397, 391, 396, 392, 395, 393, 394, 394, 393, 395, 390, 396, 390, 397, 390, 398, 390, 399, 390, 400, 389, 401, 389, 402, 388, 403, 388, 404, 388, 405, 388, 406, 387, 407, 386, 408, 385, 409, 384, 410, 379, 411, 361, 412, 355, 413, 352, 414, 350, 415, 347, 416, 311, 417, 302, 418, 312, 419, 312, 420, 301, 421, 300, 422, 295, 423, 293, 424, 292, 425, 283, 426, 283, 427, 279, 428, 278, 429, 271, 430, 270, 431, 258, 432, 252, 433, 249, 434, 233, 435, 238, 436, 237, 437, 221, 437, 218, 436, 215, 435, 211, 434, 204, 433, 195, 432, 189, 431, 185, 430, 179, 429, 177, 428, 172, 427, 170, 426, 169, 425, 169, 424, 169, 423, 155, 422, 151, 421, 147, 420, 144, 419, 143, 418, 135, 417, 132, 416, 130, 415, 125, 414, 123, 413, 118, 412, 116, 411, 115, 410, 114, 409, 114, 408, 113, 407, 110, 406, 108, 405, 108, 404, 104, 403, 102, 402, 100, 401, 98, 400, 95, 399, 92, 398, 82, 397, 81, 396, 80, 395, 80, 394, 70, 393, 70, 392, 70, 391, 70, 390, 71, 389, 68, 388, 68, 387, 68, 386, 66, 385, 66, 384, 49, 383, 49, 382, 49, 381, 49, 380, 47, 379, 47, 378, 48, 377, 46, 376, 40, 375, 41, 374, 33, 373, 33, 372, 34, 371, 30, 370, 27, 369, 27, 368, 28, 367, 27, 366, 28, 365, 27, 364, 21, 363, 22, 362, 22, 361, 22, 360, 22, 359, 19, 358, 19, 357, 20, 356, 20, 355, 19, 354, 19, 353, 18, 352, 18, 351, 18, 350, 14, 349, 13, 348, 12, 347, 12, 346, 12, 345, 12, 344, 12, 343, 11, 342, 11, 341, 9, 340, 9, 339, 10, 338, 8, 337, 7, 336, 9, 335, 8, 334, 7, 333, 8, 332, 7, 331, 6, 330, 6, 329, 6, 328, 7, 327, 8, 326, 8, 325, 9, 324, 9, 323, 12, 322, 7, 321, 7, 320, 6, 319, 7, 318, 6, 317, 7, 316, 7, 315, 6, 314, 8, 313, 8, 312, 9, 311, 10, 310, 10, 309, 11, 308, 9, 307, 9, 306, 10, 305, 11, 304, 11, 303, 12, 302, 10, 301, 11, 300, 12, 299, 12, 298, 13, 297, 10, 296, 11, 295, 13, 294, 11, 293, 11, 292, 12, 291, 13, 290, 13, 289, 13, 288, 15, 287, 16, 286, 16, 285, 15, 284, 16, 283, 17, 282, 17, 281, 18, 280, 20, 279, 20, 278, 18, 277, 20, 276, 19, 275, 19, 274, 19, 273, 20, 272, 21, 271, 21, 270, 21, 269, 22, 268, 22, 267, 25, 266, 25, 265, 24, 264, 24, 263, 28, 262, 28, 261, 29, 260, 29, 259, 31, 258, 32, 257, 35, 256, 34, 255, 39, 254, 39, 253, 40, 252, 41, 251, 42, 250, 43, 249, 46, 248, 44, 247, 42, 246, 41, 245, 41, 244, 41, 243, 40, 242, 40, 241, 41, 240, 41, 239, 39, 238, 38, 237, 38, 236, 37, 235, 37, 234, 38, 233, 38, 232, 36, 231, 36, 230, 35, 229, 35, 228, 35, 227, 35, 226, 36, 225, 35, 224, 36, 223, 37, 222, 41, 221, 41, 220, 41, 219, 48, 218, 49, 217, 50, 216, 51, 215, 53, 214, 73, 213, 72, 212, 73, 211, 72, 210, 73, 209, 76, 208, 80, 207, 81, 206, 82, 205, 83, 204, 83, 203, 82, 202, 81, 201, 86, 200, 86, 199, 85, 198, 84, 197, 91, 196, 91, 195, 92, 194, 91, 193, 94, 192, 94, 191, 95, 190, 96, 189, 96, 188, 96, 187, 98, 186, 98, 185, 97, 184, 98, 183, 98, 182, 99, 181, 98, 180, 97, 179, 97, 178, 97, 177, 97, 176, 97, 175, 97, 174, 97, 173, 97, 172, 97, 171, 97, 170, 97, 169, 97, 168, 98, 167, 98, 166, 100, 165, 101, 164, 102, 163, 105, 162, 105, 161, 106, 160, 107, 159, 114, 158, 114, 157, 114, 156, 115, 155, 115, 154, 116, 153, 153, 152, 158, 151, 158, 150, 158, 149, 163, 148, 171, 147, 173, 146, 174, 145, 174, 144, 175, 143, 176, 142, 177, 141, 179, 140, 181, 139, 182, 138, 184, 137, 185, 136, 184, 135, 184, 134, 185, 133, 185, 132, 187, 131, 189, 130, 193, 129, 199, 128, 200, 127, 204, 126, 208, 125, 210, 124, 213, 123, 231, 122, 231, 121, 231, 120, 240, 119, 238, 118, 237, 117, 237, 116, 236, 115, 236, 114, 236, 113, 236, 112, 237, 111, 238, 110, 238, 109, 238, 108, 242, 107, 243, 106, 245, 105, 249, 104, 289, 103, 291, 102, 292, 101, 296, 100, 299, 99, 302, 99],
    41: [78, 44, 80, 45, 80, 46, 80, 47, 80, 48, 80, 49, 81, 50, 81, 51, 82, 52, 82, 53, 83, 54, 83, 55, 84, 56, 85, 57, 85, 58, 86, 59, 86, 60, 86, 61, 86, 62, 84, 63, 78, 64, 78, 65, 80, 66, 81, 67, 81, 68, 108, 69, 123, 70, 124, 71, 125, 72, 125, 73, 125, 74, 126, 75, 125, 76, 125, 77, 125, 78, 125, 79, 125, 80, 125, 81, 125, 82, 126, 83, 127, 84, 122, 85, 122, 86, 121, 87, 121, 88, 121, 89, 121, 90, 122, 91, 122, 92, 122, 93, 121, 94, 118, 95, 119, 96, 119, 97, 119, 98, 119, 99, 119, 100, 120, 101, 125, 102, 128, 103, 129, 104, 130, 105, 131, 106, 131, 107, 132, 108, 131, 109, 131, 110, 131, 111, 131, 112, 132, 113, 133, 114, 133, 115, 134, 116, 134, 117, 135, 118, 135, 119, 135, 120, 134, 121, 134, 122, 124, 123, 133, 124, 136, 125, 136, 126, 98, 127, 99, 128, 101, 129, 100, 130, 100, 131, 101, 132, 100, 133, 101, 134, 97, 135, 78, 136, 78, 137, 79, 138, 66, 139, 68, 140, 53, 141, 50, 141, 50, 140, 52, 139, 51, 138, 52, 137, 54, 136, 54, 135, 37, 134, 36, 133, 28, 132, 29, 131, 28, 130, 29, 129, 29, 128, 27, 127, 29, 126, 28, 125, 20, 124, 20, 123, 32, 122, 31, 121, 33, 120, 34, 119, 35, 118, 35, 117, 34, 116, 16, 115, 17, 114, 18, 113, 21, 112, 21, 111, 20, 110, 21, 109, 22, 108, 24, 107, 26, 106, 25, 105, 25, 104, 25, 103, 24, 102, 25, 101, 25, 100, 17, 99, 10, 98, 8, 97, 10, 96, 11, 95, 16, 94, 11, 93, 11, 92, 11, 91, 11, 90, 11, 89, 9, 88, 9, 87, 10, 86, 11, 85, 11, 84, 11, 83, 11, 82, 11, 81, 12, 80, 12, 79, 13, 78, 14, 77, 15, 76, 59, 75, 60, 74, 60, 73, 64, 72, 63, 71, 63, 70, 63, 69, 63, 68, 64, 67, 65, 66, 64, 65, 65, 64, 65, 63, 66, 62, 66, 61, 67, 60, 67, 59, 67, 58, 68, 57, 68, 56, 68, 55, 68, 54, 68, 53, 68, 52, 69, 51, 69, 50, 69, 49, 70, 48, 71, 47, 72, 46, 72, 45, 73, 44, 78, 44],
    42: [214, 182, 348, 122, 522, 98, 754, 108, 986, 192, 1138, 344, 1162, 378, 1160, 622, 988, 752, 766, 850, 574, 862, 252, 822, 70, 704, 6, 592, 10, 370, 100, 250, 180, 200, 220, 240, 130, 316, 56, 428, 64, 586, 152, 682, 308, 776, 494, 808, 680, 810, 858, 768, 950, 714, 1074, 594, 1104, 508, 1078, 360, 974, 266, 852, 186, 640, 146, 468, 152, 336, 176, 262, 222],
    43: [[169, 664, 170, 583, 203, 563, 212, 567, 213, 570, 213, 600, 215, 602, 227, 595, 257, 607, 308, 624, 386, 642, 461, 652, 509, 655, 524, 654, 527, 648, 542, 647, 572, 648, 576, 654, 579, 655, 639, 652, 717, 641, 780, 627, 858, 601, 876, 593, 879, 593, 888, 599, 891, 599, 891, 566, 893, 563, 899, 560, 929, 576, 934, 581, 934, 668, 926, 674, 922, 667, 921, 657, 918, 655, 917, 652, 911, 652, 902, 649, 881, 660, 878, 663, 872, 664, 848, 676, 839, 677, 833, 681, 826, 681, 824, 684, 800, 690, 797, 692, 797, 704, 791, 706, 785, 706, 782, 703, 781, 697, 778, 697, 760, 703, 754, 703, 751, 705, 733, 708, 724, 707, 712, 712, 703, 712, 697, 715, 691, 714, 685, 716, 682, 715, 679, 717, 661, 719, 658, 718, 634, 723, 631, 721, 628, 723, 613, 724, 613, 733, 611, 736, 602, 736, 597, 725, 555, 727, 501, 725, 499, 734, 497, 736, 488, 736, 486, 724, 462, 723, 459, 721, 441, 718, 438, 719, 417, 715, 405, 715, 390, 711, 384, 712, 378, 710, 376, 707, 364, 708, 355, 705, 340, 703, 319, 696, 318, 702, 315, 705, 312, 707, 309, 705, 306, 706, 303, 704, 301, 692, 298, 690, 274, 683, 274, 680, 267, 681, 261, 677, 255, 677, 246, 674, 240, 671, 238, 668, 223, 663, 202, 651, 187, 655, 186, 658, 183, 660, 183, 666, 180, 669, 175, 669], [1, 390, 4, 429, 9, 444, 15, 442, 21, 444, 22, 447, 16, 462, 19, 471, 25, 471, 27, 469, 30, 470, 41, 500, 50, 518, 48, 530, 50, 539, 52, 542, 55, 543, 58, 542, 60, 536, 63, 537, 83, 564, 92, 570, 100, 579, 99, 618, 101, 624, 105, 624, 108, 626, 114, 624, 116, 621, 117, 609, 120, 610, 129, 607, 131, 604, 134, 604, 137, 601, 140, 602, 140, 599, 143, 598, 143, 525, 135, 521, 126, 524, 123, 523, 114, 517, 105, 508, 102, 507, 80, 478, 72, 464, 68, 461, 52, 424, 44, 397, 42, 382, 45, 381, 47, 378, 47, 357, 41, 354, 50, 327, 55, 321, 70, 294, 86, 271, 89, 270, 123, 236, 140, 222, 164, 206, 170, 204, 188, 191, 188, 185, 190, 182, 196, 179, 197, 113, 195, 110, 162, 91, 156, 96, 154, 99, 155, 129, 153, 141, 132, 153, 96, 181, 72, 205, 60, 220, 44, 244, 33, 268, 26, 289, 19, 319, 13, 322, 3, 346], [225, 125, 226, 59, 234, 52, 246, 58, 270, 74, 273, 74, 336, 51, 372, 42, 450, 29, 516, 23, 582, 23, 594, 25, 612, 25, 678, 33, 735, 44, 762, 51, 810, 67, 846, 83, 868, 69, 869, 71, 871, 68, 880, 63, 889, 69, 890, 78, 889, 138, 880, 143, 877, 142, 876, 145, 862, 154, 856, 156, 847, 151, 841, 152, 826, 143, 823, 143, 817, 138, 781, 127, 736, 117, 719, 115, 713, 112, 707, 112, 703, 109, 696, 110, 684, 106, 666, 105, 660, 102, 645, 102, 633, 100, 627, 97, 620, 99, 583, 97, 574, 101, 526, 101, 517, 97, 499, 97, 487, 99, 484, 96, 481, 98, 469, 97, 463, 100, 445, 103, 438, 102, 435, 104, 414, 106, 408, 109, 321, 126, 273, 142, 267, 141, 261, 144, 252, 142, 246, 137, 243, 137, 238, 131, 232, 130, 226, 126], [917, 130, 919, 139, 920, 190, 923, 192, 924, 190, 928, 194, 927, 200, 929, 203, 933, 202, 934, 205, 946, 212, 952, 218, 955, 218, 956, 221, 960, 222, 963, 224, 964, 227, 973, 232, 993, 253, 1008, 266, 1009, 269, 1015, 273, 1016, 276, 1025, 285, 1025, 288, 1048, 321, 1054, 336, 1054, 326, 1056, 325, 1059, 337, 1059, 343, 1056, 343, 1059, 353, 1052, 358, 1052, 376, 1057, 384, 1055, 396, 1056, 402, 1053, 405, 1054, 408, 1051, 417, 1048, 420, 1043, 436, 1036, 451, 1023, 474, 1001, 502, 992, 511, 980, 521, 968, 518, 962, 521, 961, 524, 961, 593, 968, 601, 970, 598, 972, 601, 971, 603, 975, 604, 977, 601, 982, 607, 988, 604, 990, 605, 992, 621, 995, 623, 1001, 623, 1004, 621, 1005, 576, 1039, 537, 1043, 543, 1046, 543, 1050, 538, 1052, 532, 1050, 517, 1061, 496, 1069, 472, 1071, 469, 1074, 471, 1080, 471, 1082, 468, 1083, 462, 1078, 444, 1090, 444, 1092, 442, 1092, 436, 1096, 427, 1099, 397, 1099, 352, 1088, 325, 1080, 318, 1074, 291, 1068, 273, 1052, 237, 1042, 222, 1024, 201, 1003, 181, 961, 149, 960, 107, 954, 102, 951, 103, 918, 122, 918, 128]],
    44: [79, 10, 80, 11, 81, 12, 81, 13, 81, 14, 81, 15, 82, 16, 81, 17, 82, 18, 82, 19, 82, 20, 82, 21, 82, 22, 82, 23, 82, 24, 83, 25, 83, 26, 83, 27, 83, 28, 83, 29, 83, 30, 104, 31, 105, 32, 105, 33, 105, 34, 105, 35, 104, 36, 104, 37, 104, 38, 104, 39, 104, 40, 104, 41, 104, 42, 104, 43, 104, 44, 104, 45, 104, 46, 104, 47, 104, 48, 104, 49, 104, 50, 104, 51, 104, 52, 104, 53, 104, 54, 104, 55, 104, 56, 105, 57, 109, 58, 110, 59, 110, 60, 110, 61, 110, 62, 110, 63, 110, 64, 110, 65, 110, 66, 110, 67, 113, 68, 113, 69, 113, 70, 113, 71, 113, 72, 113, 73, 113, 74, 113, 75, 113, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 120, 83, 120, 84, 120, 85, 120, 86, 120, 87, 120, 88, 120, 89, 120, 90, 120, 91, 120, 92, 120, 93, 122, 94, 123, 95, 125, 96, 125, 97, 125, 98, 124, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 123, 110, 123, 111, 123, 112, 127, 113, 127, 114, 128, 115, 128, 116, 127, 117, 126, 118, 125, 119, 125, 120, 125, 121, 121, 122, 120, 123, 121, 124, 121, 125, 122, 126, 122, 127, 122, 128, 118, 129, 116, 130, 115, 131, 113, 132, 112, 133, 112, 134, 111, 135, 99, 136, 99, 137, 98, 138, 98, 139, 95, 140, 93, 140, 90, 139, 90, 138, 90, 137, 83, 136, 68, 135, 56, 134, 54, 133, 54, 132, 54, 131, 48, 130, 46, 129, 45, 128, 38, 127, 35, 126, 34, 125, 33, 124, 33, 123, 32, 122, 32, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 30, 110, 30, 109, 29, 108, 27, 107, 27, 106, 28, 105, 28, 104, 26, 103, 26, 102, 26, 101, 26, 100, 30, 99, 30, 98, 30, 97, 30, 96, 30, 95, 30, 94, 30, 93, 30, 92, 30, 91, 30, 90, 30, 89, 30, 88, 29, 87, 27, 86, 26, 85, 26, 84, 25, 83, 26, 82, 29, 81, 34, 80, 36, 79, 40, 78, 39, 77, 38, 76, 38, 75, 38, 74, 38, 73, 38, 72, 38, 71, 38, 70, 38, 69, 38, 68, 38, 67, 38, 66, 38, 65, 38, 64, 38, 63, 38, 62, 38, 61, 38, 60, 38, 59, 38, 58, 38, 57, 38, 56, 39, 55, 41, 54, 43, 53, 44, 52, 44, 51, 45, 50, 45, 49, 46, 48, 47, 47, 48, 46, 49, 45, 50, 44, 51, 43, 52, 42, 53, 41, 55, 40, 58, 39, 59, 38, 62, 37, 62, 36, 62, 35, 62, 34, 63, 33, 63, 32, 63, 31, 63, 30, 63, 29, 64, 28, 64, 27, 64, 26, 64, 25, 64, 24, 64, 23, 65, 22, 65, 21, 65, 20, 65, 19, 65, 18, 66, 17, 66, 16, 66, 15, 66, 14, 66, 13, 66, 12, 67, 11, 69, 10, 79, 10],
    45: [79, 20, 82, 21, 84, 22, 86, 23, 87, 24, 89, 25, 90, 26, 91, 27, 92, 28, 93, 29, 94, 30, 94, 31, 95, 32, 96, 33, 96, 34, 97, 35, 97, 36, 98, 37, 98, 38, 99, 39, 99, 40, 99, 41, 99, 42, 100, 43, 100, 44, 100, 45, 100, 46, 100, 47, 101, 48, 101, 49, 101, 50, 101, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 113, 57, 114, 58, 115, 59, 115, 60, 115, 61, 115, 62, 115, 63, 115, 64, 115, 65, 115, 66, 115, 67, 115, 68, 115, 69, 115, 70, 115, 71, 115, 72, 115, 73, 115, 74, 115, 75, 115, 76, 115, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 114, 84, 114, 85, 114, 86, 114, 87, 114, 88, 114, 89, 114, 90, 118, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 119, 97, 120, 98, 121, 99, 122, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 122, 107, 121, 108, 121, 109, 122, 110, 123, 111, 124, 112, 124, 113, 125, 114, 125, 115, 125, 116, 124, 117, 123, 118, 123, 119, 123, 120, 123, 121, 125, 122, 124, 123, 122, 124, 121, 125, 120, 126, 120, 127, 120, 128, 119, 129, 119, 130, 119, 131, 116, 132, 115, 133, 107, 134, 69, 134, 66, 133, 64, 132, 64, 131, 64, 130, 65, 129, 66, 128, 58, 127, 54, 126, 35, 125, 31, 124, 31, 123, 31, 122, 32, 121, 33, 120, 33, 119, 34, 118, 34, 117, 34, 116, 34, 115, 34, 114, 33, 113, 32, 112, 31, 111, 31, 110, 30, 109, 29, 108, 29, 107, 29, 106, 28, 105, 24, 104, 22, 103, 22, 102, 22, 101, 23, 100, 24, 99, 25, 98, 25, 97, 25, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 26, 87, 28, 86, 39, 85, 39, 84, 39, 83, 39, 82, 39, 81, 39, 80, 39, 79, 39, 78, 39, 77, 39, 76, 40, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 42, 67, 41, 66, 41, 65, 41, 64, 41, 63, 41, 62, 41, 61, 41, 60, 41, 59, 41, 58, 41, 57, 41, 56, 41, 55, 41, 54, 41, 53, 42, 52, 42, 51, 42, 50, 42, 49, 42, 48, 42, 47, 43, 46, 43, 45, 43, 44, 43, 43, 44, 42, 44, 41, 44, 40, 45, 39, 45, 38, 45, 37, 46, 36, 46, 35, 47, 34, 47, 33, 48, 32, 49, 31, 50, 30, 51, 29, 52, 28, 53, 27, 54, 26, 55, 25, 56, 24, 58, 23, 60, 22, 62, 21, 64, 20, 79, 20],
    46: [4, 108, 27, 79, 52, 51, 79, 59, 114, 77, 142, 84, 135, 111, 105, 132, 56, 140, 20, 126]
};
config.village["buildingPoly"][0] = {
    19: [231, 252, 300, 289, 315, 317, 357, 345, 313, 395, 295, 356, 214, 350, 163, 317],
    20: [368, 407, 424, 434, 510, 434, 516, 457, 452, 482, 381, 539, 329, 516, 318, 455],
    21: [157, 340, 203, 366, 280, 376, 299, 407, 281, 441, 189, 451, 135, 442],
    22: [136, 461, 193, 469, 278, 462, 285, 517, 255, 516, 154, 562],
    23: [377, 388, 413, 347, 467, 329, 499, 350, 511, 382, 527, 395, 512, 423, 435, 423],
    24: [298, 243, 415, 207, 455, 244, 482, 264, 491, 282, 436, 297, 387, 321, 349, 298, 339, 266],
    25: [434, 203, 578, 190, 580, 220, 559, 241, 488, 250, 463, 221],
    26: [605, 194, 721, 216, 706, 299, 621, 274, 514, 282, 506, 261, 568, 254, 597, 229],
    27: [533, 312, 601, 305, 677, 321, 686, 361, 666, 383, 629, 366, 566, 378, 538, 347],
    28: [743, 220, 849, 268, 779, 287, 739, 317, 721, 310, 733, 261, 730, 229],
    29: [881, 297, 925, 348, 850, 380, 812, 385, 787, 348, 768, 336, 799, 316, 848, 308],
    30: [936, 365, 968, 440, 824, 442, 819, 402, 872, 390],
    31: [964, 455, 937, 532, 860, 489, 817, 489, 827, 456, 884, 461],
    32: [703, 394, 748, 360, 778, 400, 788, 454, 770, 490, 707, 532, 664, 501, 706, 483, 728, 442, 723, 414],
    33: [520, 115, 335, 132, 197, 179, 90, 260, 39, 341, 29, 448, 41, 571, 120, 655, 246, 747, 358, 794, 545, 810, 664, 810, 847, 766, 997, 679, 1104, 593, 1116, 455, 1081, 344, 993, 246, 843, 181, 709, 136, 525, 115, 524, 169, 701, 182, 877, 237, 1001, 326, 1050, 418, 1053, 524, 992, 627, 846, 722, 703, 764, 556, 765, 386, 757, 261, 711, 145, 626, 89, 553, 77, 418, 117, 329, 199, 246, 280, 200, 421, 166, 521, 169],
    34: [920, 547, 829, 614, 777, 568, 741, 553, 780, 531, 808, 508, 847, 506, 878, 528],
    35: [539, 484, 572, 498, 616, 502, 666, 549, 607, 553, 509, 571, 431, 555, 469, 532, 487, 507],
    36: [295, 534, 356, 570, 342, 597, 300, 615, 265, 640, 211, 659, 146, 599, 186, 567, 249, 542],
    37: [259, 682, 331, 652, 341, 634, 386, 615, 396, 582, 438, 597, 442, 650, 467, 697, 456, 738, 399, 749],
    38: [594, 589, 663, 583, 713, 569, 726, 579, 722, 616, 690, 652, 632, 660, 598, 632],
    39: [748, 593, 815, 658, 855, 672, 725, 740, 703, 714, 684, 668, 713, 665, 742, 635],
    40: [461, 599, 513, 607, 569, 597, 577, 641, 608, 671, 656, 677, 680, 710, 491, 731, 490, 687, 465, 644],
    42: [1116, 755, 1150, 788, 1150, 794, 1151, 802, 1054, 828, 1001, 754, 1065, 746],
    43: [975, 760, 1035, 840, 1002, 849, 928, 850, 900, 835, 885, 812, 910, 786]
};
config.village["resPoly"] = {
    "11115": {
        "1": [276, 329, 282, 320, 291, 313, 295, 307, 301, 303, 328, 297, 333, 285, 339, 281, 345, 280, 357, 270, 378, 264, 396, 264, 408, 268, 414, 272, 435, 290, 439, 305, 433, 329, 426, 347, 430, 356, 427, 365, 416, 380, 407, 386, 405, 389, 399, 392, 388, 381, 383, 378, 380, 379, 379, 374, 376, 372, 367, 378, 361, 378, 355, 372, 354, 369, 345, 361, 333, 343, 327, 340, 318, 348, 318, 351, 310, 363, 303, 368, 301, 362, 296, 356, 287, 353, 284, 350, 278, 338, 277, 332],
        "10": [687, 410, 695, 434, 707, 446, 709, 452, 721, 462, 763, 475, 784, 476, 787, 474, 790, 476, 796, 475, 808, 468, 813, 453, 819, 449, 827, 440, 829, 428, 841, 423, 853, 414, 856, 414, 859, 412, 862, 406, 858, 400, 834, 392, 822, 392, 810, 387, 792, 384, 780, 380, 774, 381, 753, 379, 729, 391, 723, 392, 708, 401, 690, 406, 688, 409],
        "11": [809, 455, 810, 458, 825, 458, 846, 467, 852, 472, 857, 484, 869, 489, 884, 487, 899, 492, 941, 492, 953, 500, 962, 500, 968, 502, 977, 508, 992, 511, 1004, 508, 1013, 502, 1019, 500, 1023, 494, 1026, 493, 1039, 472, 1034, 463, 1040, 442, 1038, 430, 1027, 420, 1023, 414, 1023, 408, 997, 384, 991, 383, 973, 375, 967, 376, 958, 372, 952, 372, 943, 368, 937, 368, 919, 361, 907, 360, 898, 354, 892, 353, 883, 357, 879, 366, 876, 369, 874, 381, 875, 384, 872, 393, 860, 403, 859, 409, 847, 415, 843, 420, 828, 427, 826, 430, 826, 436, 818, 448, 812, 452],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [522, 581, 523, 575, 530, 566, 536, 562, 554, 555, 560, 556, 575, 553, 593, 556, 605, 555, 620, 560, 626, 565, 638, 570, 659, 585, 659, 591, 669, 606, 666, 624, 650, 645, 644, 649, 608, 648, 599, 645, 593, 645, 575, 649, 566, 655, 560, 653, 548, 643, 540, 625, 529, 615, 527, 606, 529, 600, 524, 591, 523, 582],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [538, 675, 541, 693, 552, 704, 557, 713, 563, 719, 581, 727, 611, 735, 629, 735, 638, 731, 640, 719, 637, 710, 643, 706, 655, 705, 664, 698, 670, 699, 676, 697, 680, 688, 689, 683, 691, 680, 691, 674, 689, 671, 677, 664, 668, 656, 653, 650, 641, 646, 614, 647, 596, 643, 569, 650, 561, 658, 549, 662, 543, 666, 540, 672],
        "18": [614, 559, 623, 557, 659, 558, 695, 570, 701, 570, 710, 574, 719, 574, 737, 581, 763, 604, 765, 607, 764, 610, 767, 613, 779, 616, 788, 623, 792, 632, 805, 647, 806, 653, 804, 659, 793, 670, 790, 671, 773, 689, 764, 694, 743, 695, 737, 697, 722, 697, 710, 694, 695, 698, 686, 698, 683, 696, 680, 697, 677, 695, 677, 692, 680, 687, 689, 681, 688, 672, 682, 667, 676, 665, 667, 656, 649, 651, 646, 649, 645, 646, 650, 642, 650, 639, 659, 632, 665, 623, 664, 620, 667, 608, 665, 602, 658, 593, 658, 587, 637, 571, 625, 566, 616, 560],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 705, 380, 706, 383, 714, 379, 717, 380, 717, 383, 720, 384, 721, 381, 731, 372, 729, 366, 731, 360, 738, 352, 741, 351, 743, 357, 740, 363, 746, 365, 745, 368, 747, 370, 750, 368, 751, 365, 756, 362, 760, 356, 768, 351, 768, 348, 765, 346, 772, 340, 769, 331, 770, 328, 773, 329, 778, 323, 781, 322, 783, 319, 778, 313, 779, 310, 782, 310, 787, 302, 793, 298, 794, 295, 791, 292, 782, 287, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 790, 280, 791, 283, 794, 284, 804, 276, 804, 273, 796, 265, 797, 261, 795, 258, 786, 253, 785, 250, 776, 243, 779, 241, 780, 238, 786, 234, 787, 231, 778, 225, 775, 225, 769, 229, 766, 235, 757, 232, 752, 224, 747, 229, 744, 228, 743, 225, 737, 221, 731, 221, 725, 224, 721, 233, 721, 237, 713, 243, 713, 240, 717, 235, 714, 226, 711, 225, 710, 228, 707, 230, 698, 227, 695, 229, 692, 235, 686, 233, 683, 234, 675, 241, 672, 238, 677, 233, 675, 230, 677, 227, 676, 224, 667, 222, 664, 225, 664, 231, 661, 233, 652, 232, 649, 235, 648, 238, 651, 239, 650, 241, 641, 237, 635, 237, 633, 231, 639, 232, 641, 235, 651, 228, 650, 225, 644, 220, 638, 220, 632, 224, 628, 236, 625, 237, 616, 234, 613, 232, 611, 226, 609, 227, 605, 236, 610, 244, 616, 246, 617, 249, 620, 250, 621, 247, 630, 244, 631, 247, 634, 249, 625, 250, 620, 255, 620, 258, 611, 258, 605, 262, 607, 268, 613, 271, 614, 274, 617, 274, 618, 271, 624, 268, 626, 270, 623, 276, 615, 283, 603, 287],
        "4": [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404],
        "5": [456, 322, 460, 334, 456, 346, 459, 358, 470, 369, 479, 390, 488, 397, 509, 406, 521, 406, 527, 404, 539, 406, 563, 401, 564, 398, 573, 395, 575, 392, 572, 386, 551, 367, 548, 358, 544, 352, 543, 349, 545, 337, 554, 322, 552, 316, 546, 311, 528, 305, 522, 305, 513, 302, 507, 304, 501, 303, 492, 305, 480, 305, 474, 307, 462, 315, 457, 321],
        "6": [541, 346, 542, 352, 551, 370, 572, 389, 572, 392, 563, 397, 562, 400, 564, 403, 570, 405, 609, 402, 618, 399, 624, 395, 640, 378, 643, 377, 649, 371, 655, 359, 653, 353, 640, 338, 636, 329, 627, 323, 615, 321, 606, 313, 597, 311, 591, 307, 570, 307, 567, 305, 561, 305, 543, 309, 543, 312, 551, 319, 550, 325, 544, 334, 543, 343],
        "7": [755, 379, 769, 367, 775, 364, 776, 358, 773, 355, 774, 352, 772, 346, 774, 340, 788, 329, 809, 321, 836, 325, 857, 332, 863, 336, 893, 346, 898, 351, 897, 354, 888, 355, 882, 360, 876, 378, 876, 390, 871, 396, 862, 402, 835, 393, 823, 392, 805, 386, 796, 386, 781, 382, 757, 380],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "3339": {
        "1": [276, 332, 277, 344, 280, 350, 285, 356, 291, 357, 306, 369, 312, 372, 327, 372, 339, 377, 360, 378, 369, 383, 372, 383, 378, 389, 390, 394, 411, 384, 419, 376, 419, 373, 429, 361, 429, 355, 425, 349, 434, 325, 438, 301, 434, 289, 431, 288, 421, 277, 418, 276, 412, 270, 400, 265, 379, 263, 373, 267, 361, 268, 347, 279, 338, 281, 333, 286, 330, 295, 324, 298, 303, 302, 297, 305, 277, 328, 277, 331],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 632, 311, 637, 316, 643, 317, 652, 324, 659, 318, 657, 315, 658, 312, 661, 312, 667, 317, 670, 322, 669, 328, 671, 331, 677, 333, 677, 336, 680, 338, 676, 341, 678, 347, 676, 350, 669, 346, 657, 349, 658, 358, 656, 364, 660, 369, 663, 369, 659, 374, 653, 375, 647, 379, 646, 382, 657, 399, 660, 398, 660, 395, 666, 395, 669, 393, 673, 387, 673, 382, 678, 385, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 707, 383, 715, 378, 720, 369, 726, 365, 740, 351, 755, 363, 766, 348, 766, 344, 772, 340, 769, 331, 770, 328, 773, 329, 783, 319, 778, 313, 779, 310, 782, 310, 783, 307, 787, 302, 793, 298, 794, 295, 782, 287, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 790, 280, 791, 283, 794, 284, 804, 276, 804, 273, 796, 265, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 607, 229, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        "4": [198, 369, 202, 381, 198, 393, 201, 405, 213, 416, 222, 437, 228, 443, 255, 453, 270, 450, 279, 452, 297, 448, 309, 450, 330, 450, 360, 445, 366, 441, 381, 424, 387, 421, 394, 413, 396, 404, 396, 401, 388, 392, 379, 389, 361, 377, 340, 377, 322, 370, 304, 370, 295, 368, 271, 352, 265, 350, 244, 349, 238, 351, 223, 351, 214, 354, 205, 360, 199, 368],
        "5": [443, 329, 449, 320, 461, 312, 470, 309, 497, 308, 500, 306, 512, 310, 518, 310, 527, 314, 539, 311, 566, 311, 575, 315, 579, 321, 578, 324, 570, 331, 561, 334, 555, 346, 546, 351, 538, 360, 537, 363, 542, 372, 543, 381, 549, 390, 549, 393, 544, 405, 529, 410, 517, 408, 499, 411, 493, 409, 475, 402, 466, 393, 461, 381, 456, 384, 451, 380, 450, 374, 453, 372, 454, 369, 448, 365, 444, 353, 448, 341, 445, 332],
        "6": [543, 362, 547, 368, 553, 368, 558, 373, 549, 380, 550, 383, 553, 385, 574, 387, 586, 395, 595, 398, 604, 396, 625, 396, 631, 394, 636, 390, 635, 384, 646, 374, 650, 362, 665, 351, 668, 345, 666, 342, 669, 339, 669, 336, 663, 331, 645, 326, 585, 325, 579, 327, 567, 335, 570, 340, 568, 346, 559, 348, 550, 353, 547, 355, 544, 361],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "33546": {
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544]
    },
    "3447": {
        "1": [231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 293, 351, 293, 357, 299, 360, 308, 360, 308, 365, 317, 370, 331, 366, 331, 363, 337, 362, 339, 357, 342, 359, 357, 361, 369, 365, 372, 363, 381, 362, 387, 365, 387, 368, 390, 369, 399, 367, 402, 368, 407, 373, 416, 373, 419, 372, 420, 369, 429, 369, 424, 361, 433, 361, 439, 353, 445, 358, 448, 358, 450, 352, 462, 353, 465, 350, 465, 347, 477, 343, 479, 340, 473, 339, 474, 330, 471, 328, 472, 326, 481, 329, 483, 323, 480, 320, 474, 318, 469, 312, 472, 308, 470, 305, 452, 289, 446, 288, 437, 294, 434, 293, 428, 287, 405, 251, 399, 249, 391, 257, 388, 258, 382, 267, 379, 268, 370, 256, 358, 244, 349, 238, 346, 239, 327, 256, 327, 259, 318, 270, 312, 270, 307, 276, 304, 276, 295, 291, 289, 294, 288, 297, 282, 301, 279, 299, 270, 307, 267, 307, 258, 313, 252, 315, 246, 324, 234, 331],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246],
        "3": [597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229],
        "4": [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        "5": [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        "6": [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "3456": {
        "1": [225, 350, 231, 349, 229, 358, 231, 360, 237, 359, 243, 354, 248, 345, 257, 339, 263, 333, 264, 330, 273, 327, 276, 328, 278, 331, 278, 337, 284, 349, 287, 352, 296, 355, 304, 366, 310, 362, 316, 353, 317, 347, 328, 338, 339, 350, 343, 359, 360, 377, 363, 378, 371, 372, 377, 372, 383, 376, 402, 396, 408, 396, 414, 400, 413, 397, 422, 396, 425, 393, 431, 392, 432, 390, 426, 388, 429, 386, 427, 383, 428, 380, 425, 378, 426, 376, 432, 379, 435, 378, 436, 372, 430, 368, 427, 368, 422, 362, 423, 359, 426, 358, 423, 356, 422, 353, 434, 357, 438, 349, 441, 348, 443, 354, 446, 356, 449, 355, 449, 346, 452, 344, 457, 350, 460, 351, 468, 346, 469, 340, 472, 342, 478, 342, 477, 336, 471, 332, 467, 323, 467, 317, 473, 317, 472, 311, 478, 310, 470, 303, 476, 301, 464, 299, 458, 294, 452, 292, 443, 286, 439, 280, 438, 274, 429, 262, 414, 250, 409, 241, 403, 235, 381, 220, 372, 226, 370, 232, 364, 241, 358, 246, 348, 264, 342, 270, 339, 276, 330, 281, 322, 290, 319, 299, 295, 282, 290, 288, 287, 289, 286, 292, 277, 299, 272, 308, 260, 320, 251, 323, 241, 338, 238, 338, 234, 344, 228, 348],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        "4": [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404],
        "5": [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        "6": [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "3546": {
        "1": [231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 292, 354, 293, 357, 299, 360, 301, 363, 298, 366, 310, 366, 319, 371, 331, 371, 334, 368, 343, 367, 338, 358, 344, 358, 350, 361, 356, 361, 368, 365, 371, 363, 380, 362, 386, 364, 386, 367, 389, 369, 401, 367, 406, 372, 418, 373, 422, 369, 428, 369, 429, 367, 423, 362, 426, 360, 435, 360, 438, 354, 447, 359, 449, 353, 452, 351, 455, 353, 461, 353, 464, 351, 464, 348, 479, 341, 474, 340, 474, 331, 471, 326, 480, 329, 482, 327, 482, 324, 481, 321, 475, 319, 472, 316, 470, 310, 473, 309, 468, 303, 450, 288, 447, 287, 435, 294, 426, 285, 406, 252, 400, 248, 380, 268, 374, 263, 368, 254, 359, 245, 347, 238, 328, 255, 326, 261, 319, 269, 313, 270, 308, 275, 305, 276, 298, 284, 296, 290, 293, 293, 290, 293, 286, 299, 283, 301, 277, 301, 262, 311, 253, 314, 247, 323, 235, 331],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        "4": [190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406],
        "5": [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        "6": [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "3547": {
        "4": [190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406]
    },
    "4347": {
        "1": [231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 293, 351, 293, 357, 299, 360, 308, 360, 308, 365, 317, 370, 331, 366, 331, 363, 337, 362, 339, 357, 342, 359, 357, 361, 369, 365, 372, 363, 381, 362, 387, 365, 387, 368, 390, 369, 399, 367, 402, 368, 407, 373, 416, 373, 419, 372, 420, 369, 429, 369, 424, 361, 433, 361, 439, 353, 445, 358, 448, 358, 450, 352, 462, 353, 465, 350, 465, 347, 477, 343, 479, 340, 473, 339, 474, 330, 471, 328, 472, 326, 481, 329, 483, 323, 480, 320, 474, 318, 469, 312, 472, 308, 470, 305, 452, 289, 446, 288, 437, 294, 434, 293, 428, 287, 405, 251, 399, 249, 391, 257, 388, 258, 382, 267, 379, 268, 370, 256, 358, 244, 349, 238, 346, 239, 327, 256, 327, 259, 318, 270, 312, 270, 307, 276, 304, 276, 295, 291, 289, 294, 288, 297, 282, 301, 279, 299, 270, 307, 267, 307, 258, 313, 252, 315, 246, 324, 234, 331],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246],
        "3": [597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229],
        "4": [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        "5": [452, 410, 454, 407, 463, 401, 469, 400, 469, 397, 478, 391, 476, 388, 473, 389, 472, 392, 469, 391, 458, 384, 458, 381, 462, 375, 462, 369, 456, 366, 454, 363, 460, 354, 463, 352, 469, 354, 472, 352, 465, 344, 465, 341, 474, 335, 472, 329, 473, 326, 476, 324, 477, 315, 483, 310, 495, 313, 501, 310, 503, 304, 507, 299, 510, 302, 512, 311, 515, 311, 518, 302, 524, 301, 530, 304, 531, 307, 529, 310, 531, 313, 529, 316, 526, 317, 526, 320, 532, 323, 535, 320, 540, 321, 540, 318, 534, 316, 534, 313, 537, 307, 543, 304, 552, 309, 558, 308, 564, 310, 570, 315, 568, 321, 562, 324, 572, 339, 563, 345, 559, 351, 556, 351, 555, 357, 552, 360, 556, 366, 555, 372, 561, 377, 562, 380, 556, 388, 565, 385, 574, 391, 577, 391, 589, 383, 595, 382, 598, 383, 606, 391, 601, 396, 598, 396, 597, 401, 589, 406, 588, 409, 585, 410, 581, 407, 578, 407, 576, 409, 576, 412, 574, 413, 571, 413, 569, 404, 554, 409, 554, 412, 551, 412, 550, 409, 544, 407, 540, 401, 537, 401, 536, 407, 533, 407, 533, 402, 527, 401, 525, 398, 526, 395, 523, 394, 521, 396, 521, 402, 519, 405, 510, 409, 509, 412, 506, 411, 505, 408, 499, 407, 496, 408, 494, 414, 491, 413, 488, 407, 482, 406, 477, 415, 480, 421, 478, 424, 472, 427, 463, 419, 462, 416, 456, 414, 453, 411],
        "6": [546, 359, 548, 365, 557, 372, 556, 375, 553, 376, 551, 379, 551, 382, 554, 384, 560, 386, 575, 386, 584, 392, 590, 394, 605, 396, 626, 396, 635, 393, 636, 390, 634, 384, 645, 375, 648, 363, 665, 351, 667, 348, 665, 342, 667, 336, 659, 329, 650, 327, 635, 325, 587, 325, 581, 327, 570, 335, 571, 344, 553, 352, 547, 358],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "4356": {
        "1": [225, 350, 231, 346, 238, 337, 241, 337, 248, 325, 260, 320, 274, 305, 274, 302, 286, 292, 287, 289, 295, 282, 316, 298, 319, 297, 319, 294, 326, 285, 332, 279, 338, 276, 341, 270, 347, 264, 358, 246, 370, 232, 374, 223, 377, 223, 382, 219, 409, 240, 416, 252, 434, 267, 438, 273, 441, 282, 444, 285, 447, 286, 453, 292, 465, 298, 474, 300, 473, 303, 470, 304, 479, 308, 478, 310, 475, 311, 475, 314, 473, 316, 467, 319, 469, 328, 476, 336, 476, 342, 470, 340, 468, 342, 469, 345, 463, 348, 451, 344, 451, 353, 448, 355, 445, 355, 442, 349, 439, 348, 436, 354, 433, 355, 427, 355, 424, 352, 422, 353, 426, 359, 423, 360, 423, 363, 435, 371, 436, 377, 430, 379, 424, 376, 428, 380, 427, 383, 430, 389, 433, 390, 432, 392, 423, 396, 423, 399, 417, 397, 417, 400, 414, 401, 408, 396, 399, 392, 378, 372, 372, 371, 363, 378, 360, 377, 343, 360, 341, 354, 332, 342, 326, 339, 322, 344, 319, 345, 317, 351, 306, 365, 303, 365, 302, 362, 296, 356, 287, 353, 284, 350, 279, 341, 277, 329, 274, 327, 265, 330, 258, 339, 249, 345, 244, 354, 238, 359, 232, 360, 229, 355, 231, 352, 229, 350, 226, 351],
        "10": [661, 425, 663, 422, 669, 419, 702, 408, 709, 400, 721, 396, 726, 391, 732, 390, 768, 389, 771, 387, 777, 390, 789, 388, 816, 391, 837, 396, 846, 403, 844, 421, 827, 434, 820, 455, 818, 458, 812, 460, 811, 472, 805, 473, 802, 476, 772, 478, 751, 474, 742, 477, 727, 477, 712, 472, 709, 469, 703, 473, 697, 472, 691, 469, 689, 466, 697, 466, 698, 463, 695, 460, 680, 455, 672, 447, 677, 438, 677, 435, 671, 430, 662, 426],
        "11": [834, 468, 836, 474, 842, 479, 848, 480, 854, 486, 860, 486, 875, 493, 881, 491, 887, 492, 893, 489, 920, 493, 935, 491, 959, 484, 1001, 479, 1008, 470, 1035, 458, 1050, 448, 1050, 445, 1048, 442, 1042, 440, 1027, 438, 1024, 426, 1017, 418, 1008, 417, 1002, 413, 996, 413, 990, 407, 978, 409, 969, 408, 966, 406, 961, 397, 952, 393, 940, 393, 931, 396, 919, 396, 913, 394, 907, 397, 889, 396, 883, 398, 874, 410, 872, 422, 864, 430, 858, 434, 855, 434, 844, 442, 842, 457, 835, 466],
        "12": [166, 611, 166, 620, 169, 621, 181, 620, 184, 622, 187, 621, 196, 623, 201, 619, 204, 619, 205, 622, 203, 625, 206, 627, 215, 625, 224, 630, 233, 630, 235, 628, 244, 627, 246, 625, 237, 618, 238, 615, 247, 617, 259, 616, 264, 625, 270, 627, 279, 621, 282, 615, 297, 619, 306, 617, 318, 619, 319, 617, 313, 614, 307, 608, 308, 602, 310, 600, 322, 598, 328, 600, 328, 597, 319, 591, 319, 585, 324, 580, 333, 582, 344, 577, 336, 569, 321, 564, 312, 555, 306, 552, 297, 544, 291, 548, 276, 538, 267, 526, 259, 511, 256, 508, 253, 508, 235, 524, 220, 531, 212, 539, 209, 545, 204, 566, 198, 575, 195, 577, 193, 583, 187, 592, 177, 603, 171, 606, 169, 609],
        "13": [332, 540, 338, 531, 341, 531, 352, 525, 351, 519, 357, 514, 360, 509, 366, 505, 375, 507, 379, 501, 391, 495, 392, 489, 395, 487, 395, 481, 383, 490, 374, 487, 371, 481, 377, 476, 386, 474, 387, 472, 385, 469, 391, 464, 394, 466, 396, 472, 402, 474, 407, 471, 409, 474, 411, 480, 408, 486, 412, 492, 411, 495, 408, 496, 412, 502, 418, 501, 424, 503, 436, 497, 439, 491, 433, 487, 436, 481, 435, 472, 430, 467, 433, 458, 436, 455, 439, 455, 447, 467, 443, 472, 451, 484, 451, 487, 456, 492, 465, 491, 468, 494, 469, 503, 464, 508, 467, 509, 469, 506, 472, 507, 475, 516, 470, 521, 464, 517, 458, 519, 456, 522, 447, 527, 447, 533, 450, 536, 456, 533, 462, 537, 471, 532, 480, 531, 481, 528, 490, 523, 493, 523, 499, 516, 505, 517, 508, 519, 513, 531, 518, 537, 519, 543, 522, 545, 528, 554, 522, 560, 516, 562, 515, 559, 512, 558, 510, 555, 513, 550, 504, 553, 502, 556, 496, 555, 487, 562, 483, 557, 477, 555, 471, 557, 462, 550, 460, 553, 457, 554, 456, 560, 450, 563, 444, 558, 447, 549, 446, 546, 443, 548, 440, 547, 437, 553, 428, 558, 422, 557, 414, 564, 412, 567, 412, 573, 406, 575, 406, 578, 404, 580, 389, 584, 382, 577, 384, 574, 393, 568, 396, 570, 399, 569, 399, 563, 396, 562, 384, 571, 381, 569, 378, 570, 376, 573, 367, 577, 365, 580, 360, 576, 357, 576, 349, 583, 346, 583, 340, 578, 342, 569, 344, 566, 347, 565, 353, 570, 356, 568, 357, 562, 351, 562, 345, 557, 344, 554, 352, 547, 364, 552, 367, 550, 364, 547, 364, 541, 358, 539, 349, 543, 347, 546, 344, 547, 341, 552, 338, 550, 337, 544, 334, 543],
        "14": [522, 581, 523, 575, 530, 566, 536, 562, 554, 555, 560, 556, 575, 553, 593, 556, 605, 555, 620, 560, 626, 565, 638, 570, 659, 585, 659, 591, 669, 606, 666, 624, 650, 645, 644, 649, 608, 648, 599, 645, 593, 645, 575, 649, 566, 655, 560, 653, 548, 643, 540, 625, 529, 615, 527, 606, 529, 600, 524, 591, 523, 582],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [538, 675, 541, 693, 552, 704, 557, 713, 563, 719, 581, 727, 611, 735, 629, 735, 638, 731, 640, 719, 637, 710, 643, 706, 655, 705, 664, 698, 670, 699, 676, 697, 680, 688, 689, 683, 691, 680, 691, 674, 689, 671, 677, 664, 668, 656, 653, 650, 641, 646, 614, 647, 596, 643, 569, 650, 561, 658, 549, 662, 543, 666, 540, 672],
        "18": [614, 559, 623, 557, 659, 558, 695, 570, 701, 570, 710, 574, 719, 574, 737, 581, 763, 604, 765, 607, 764, 610, 767, 613, 779, 616, 788, 623, 792, 632, 805, 647, 806, 653, 804, 659, 793, 670, 790, 671, 773, 689, 764, 694, 743, 695, 737, 697, 722, 697, 710, 694, 695, 698, 686, 698, 683, 696, 680, 697, 677, 695, 677, 692, 680, 687, 689, 681, 688, 672, 682, 667, 676, 665, 667, 656, 649, 651, 646, 649, 645, 646, 650, 642, 650, 639, 659, 632, 665, 623, 664, 620, 667, 608, 665, 602, 658, 593, 658, 587, 637, 571, 625, 566, 616, 560],
        "2": [451, 228, 463, 242, 469, 246, 472, 247, 481, 241, 482, 244, 474, 251, 480, 255, 483, 261, 483, 264, 480, 267, 478, 273, 475, 276, 466, 272, 460, 274, 455, 279, 456, 282, 461, 286, 458, 292, 461, 294, 473, 293, 476, 295, 482, 291, 488, 292, 489, 298, 500, 304, 502, 298, 508, 294, 511, 294, 517, 298, 526, 296, 535, 300, 538, 299, 543, 295, 536, 283, 541, 278, 539, 275, 541, 272, 538, 266, 547, 269, 550, 272, 552, 281, 544, 288, 548, 294, 554, 297, 557, 294, 569, 292, 578, 297, 587, 293, 593, 293, 611, 299, 623, 294, 626, 292, 626, 289, 629, 289, 633, 294, 638, 290, 639, 287, 642, 286, 642, 283, 637, 277, 631, 273, 633, 270, 629, 255, 617, 247, 605, 249, 603, 246, 616, 236, 616, 227, 613, 224, 607, 224, 603, 230, 589, 238, 586, 238, 583, 236, 583, 233, 589, 230, 589, 227, 586, 224, 577, 221, 568, 228, 559, 226, 553, 214, 550, 217, 546, 229, 552, 233, 549, 235, 543, 234, 537, 238, 534, 233, 528, 228, 522, 227, 514, 234, 511, 243, 496, 238, 498, 232, 490, 225, 484, 222, 472, 226, 469, 223, 460, 221, 452, 227],
        "3": [649, 283, 652, 280, 673, 272, 688, 262, 697, 259, 706, 261, 712, 257, 730, 256, 760, 262, 770, 277, 772, 283, 781, 290, 782, 302, 776, 311, 767, 317, 755, 319, 754, 322, 769, 335, 769, 341, 754, 347, 727, 347, 703, 341, 688, 335, 676, 328, 656, 301, 650, 286],
        "4": [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 214, 425, 217, 425, 218, 421, 224, 416, 236, 425, 254, 446, 257, 446, 263, 437, 269, 434, 270, 431, 276, 427, 282, 432, 292, 447, 294, 453, 303, 455, 309, 452, 315, 453, 319, 447, 322, 446, 313, 443, 312, 441, 315, 441, 319, 438, 325, 438, 326, 441, 332, 442, 344, 442, 350, 438, 356, 437, 355, 434, 347, 426, 368, 433, 380, 432, 382, 435, 385, 433, 394, 432, 397, 434, 403, 433, 402, 431, 399, 430, 399, 427, 402, 426, 399, 425, 398, 422, 404, 422, 413, 425, 416, 423, 419, 424, 422, 423, 423, 420, 421, 414, 427, 413, 422, 408, 418, 412, 416, 409, 417, 407, 420, 407, 410, 398, 401, 394, 390, 382, 378, 372, 372, 371, 363, 378, 360, 376, 343, 359, 341, 353, 329, 338, 318, 346, 317, 352, 304, 366, 295, 354, 289, 353, 283, 348, 281, 342, 278, 339, 276, 327, 273, 326, 264, 330, 260, 336, 248, 345, 241, 357, 229, 360, 221, 371, 215, 374, 209, 382, 200, 387, 191, 395, 188, 394, 185, 396, 180, 402, 177, 400, 174, 402],
        "5": [438, 372, 440, 369, 446, 366, 455, 365, 455, 359, 450, 354, 450, 351, 452, 348, 461, 344, 467, 347, 473, 346, 476, 348, 481, 354, 480, 357, 482, 366, 485, 367, 488, 364, 491, 364, 491, 358, 500, 352, 500, 346, 502, 343, 497, 340, 499, 334, 498, 331, 500, 328, 495, 323, 495, 314, 489, 315, 480, 307, 481, 304, 487, 300, 493, 298, 499, 300, 501, 297, 507, 294, 513, 294, 519, 297, 525, 295, 534, 299, 546, 296, 558, 303, 561, 302, 570, 309, 570, 312, 567, 312, 562, 317, 562, 323, 556, 326, 569, 344, 569, 347, 566, 349, 570, 355, 566, 361, 566, 367, 563, 373, 575, 389, 568, 399, 565, 397, 562, 398, 560, 401, 552, 398, 551, 400, 559, 412, 550, 421, 543, 414, 546, 408, 543, 405, 537, 405, 533, 400, 524, 405, 524, 411, 521, 414, 512, 411, 511, 417, 508, 416, 507, 413, 489, 405, 484, 409, 478, 405, 484, 393, 484, 390, 481, 387, 478, 387, 476, 390, 477, 393, 471, 403, 468, 400, 468, 397, 465, 398, 462, 395, 465, 390, 464, 387, 461, 386, 459, 383, 450, 381, 441, 375],
        "6": [554, 326, 568, 344, 567, 347, 564, 349, 568, 355, 562, 373, 565, 379, 573, 387, 573, 393, 568, 399, 566, 405, 566, 411, 569, 414, 575, 412, 576, 409, 573, 403, 575, 401, 578, 402, 580, 405, 583, 405, 585, 402, 588, 401, 590, 403, 589, 406, 597, 414, 600, 414, 601, 408, 604, 406, 604, 397, 598, 393, 595, 395, 592, 394, 584, 387, 599, 380, 608, 388, 607, 394, 613, 396, 619, 401, 633, 390, 633, 387, 638, 382, 637, 379, 639, 376, 642, 378, 645, 376, 646, 385, 652, 387, 654, 390, 652, 396, 657, 400, 660, 402, 661, 399, 667, 396, 668, 393, 661, 384, 655, 381, 654, 375, 663, 372, 663, 381, 666, 381, 668, 383, 668, 386, 671, 387, 676, 379, 677, 370, 673, 364, 675, 358, 681, 353, 681, 350, 678, 341, 676, 338, 673, 337, 672, 340, 666, 345, 663, 345, 667, 339, 658, 334, 653, 325, 653, 322, 650, 319, 646, 324, 644, 330, 641, 326, 641, 320, 635, 317, 632, 318, 631, 315, 622, 309, 615, 309, 612, 310, 605, 318, 596, 322, 595, 325, 597, 331, 600, 330, 609, 332, 608, 329, 610, 326, 613, 325, 619, 330, 622, 330, 627, 338, 632, 336, 631, 333, 628, 331, 630, 325, 629, 322, 620, 325, 611, 318, 611, 315, 616, 310, 617, 304, 611, 299, 602, 299, 590, 291, 578, 297, 566, 291, 557, 296, 556, 299, 571, 309, 571, 312, 565, 312, 562, 314, 561, 323, 555, 325],
        "7": [781, 336, 784, 354, 804, 378, 828, 388, 846, 393, 876, 394, 882, 389, 883, 377, 880, 371, 882, 368, 888, 366, 900, 366, 901, 375, 904, 378, 913, 382, 934, 387, 952, 387, 958, 385, 961, 383, 964, 374, 959, 362, 947, 354, 920, 353, 922, 347, 914, 338, 896, 324, 894, 315, 889, 306, 883, 300, 877, 297, 859, 292, 832, 290, 811, 294, 802, 298, 799, 301, 798, 307, 799, 310, 805, 315, 804, 318, 786, 326, 782, 335],
        "8": [144, 491, 151, 482, 160, 478, 165, 472, 170, 469, 180, 454, 186, 451, 187, 448, 193, 448, 199, 442, 204, 433, 213, 426, 223, 415, 241, 429, 252, 444, 255, 446, 261, 445, 263, 451, 262, 463, 252, 472, 251, 478, 245, 487, 243, 493, 249, 511, 236, 524, 221, 532, 212, 540, 210, 543, 207, 561, 200, 573, 194, 579, 193, 585, 190, 586, 187, 580, 181, 579, 189, 570, 187, 567, 187, 561, 172, 560, 171, 557, 174, 555, 174, 552, 168, 550, 162, 551, 160, 549, 163, 547, 169, 538, 190, 525, 190, 520, 192, 517, 190, 515, 184, 515, 178, 511, 174, 505, 168, 506, 168, 503, 156, 502, 153, 500, 154, 497, 152, 494, 146, 493],
        "9": [242, 493, 248, 508, 257, 509, 269, 530, 272, 533, 278, 533, 281, 531, 284, 534, 279, 539, 280, 541, 292, 544, 295, 543, 298, 538, 301, 538, 304, 541, 319, 536, 322, 534, 322, 531, 324, 529, 336, 530, 339, 529, 339, 526, 345, 527, 345, 524, 353, 519, 350, 517, 348, 511, 369, 511, 372, 508, 375, 509, 375, 506, 361, 492, 361, 489, 364, 487, 365, 481, 368, 479, 380, 479, 383, 477, 392, 476, 390, 473, 384, 471, 383, 468, 386, 469, 386, 466, 371, 458, 365, 449, 356, 440, 350, 437, 345, 442, 324, 451, 314, 462, 305, 465, 302, 463, 294, 451, 284, 433, 275, 427, 261, 440, 260, 443, 263, 452, 263, 461, 252, 472, 244, 490]
    },
    "4437": {
        "1": [267, 340, 269, 337, 278, 331, 277, 328, 271, 326, 272, 323, 278, 319, 278, 316, 273, 312, 277, 300, 280, 301, 282, 307, 285, 307, 287, 301, 293, 298, 295, 295, 294, 292, 296, 289, 305, 285, 308, 286, 311, 280, 314, 279, 316, 282, 325, 283, 331, 282, 333, 279, 330, 278, 327, 281, 324, 280, 323, 275, 320, 276, 317, 273, 320, 268, 319, 265, 322, 262, 325, 260, 331, 262, 333, 265, 342, 269, 344, 267, 350, 266, 356, 270, 358, 268, 349, 262, 350, 259, 356, 255, 362, 254, 371, 260, 380, 263, 385, 252, 388, 250, 392, 255, 394, 252, 397, 252, 394, 247, 400, 242, 409, 246, 407, 251, 408, 254, 411, 255, 412, 249, 418, 245, 430, 245, 427, 243, 433, 237, 439, 238, 441, 240, 440, 246, 442, 249, 448, 250, 455, 245, 459, 254, 458, 257, 452, 262, 449, 262, 448, 265, 451, 266, 460, 263, 466, 267, 468, 270, 467, 273, 470, 282, 482, 290, 471, 301, 472, 304, 478, 310, 476, 313, 470, 316, 467, 321, 467, 324, 464, 326, 470, 327, 476, 332, 476, 335, 475, 338, 469, 340, 472, 349, 471, 361, 466, 366, 460, 369, 461, 372, 464, 370, 469, 382, 465, 387, 464, 393, 457, 399, 469, 407, 468, 410, 458, 418, 456, 415, 450, 412, 447, 406, 444, 407, 441, 405, 435, 407, 435, 413, 432, 411, 428, 403, 425, 404, 418, 397, 413, 397, 414, 402, 417, 403, 415, 397, 410, 395, 409, 392, 403, 392, 400, 390, 395, 382, 386, 378, 380, 372, 374, 370, 365, 374, 359, 373, 357, 363, 354, 363, 349, 357, 346, 359, 340, 359, 337, 358, 332, 352, 320, 350, 299, 357, 291, 351, 293, 345, 292, 342, 280, 346, 279, 349, 276, 348, 275, 345, 272, 345, 270, 343],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [181, 560, 181, 566, 195, 587, 194, 590, 199, 602, 217, 611, 217, 614, 214, 617, 217, 620, 226, 620, 229, 619, 229, 616, 232, 615, 241, 617, 243, 623, 242, 626, 247, 635, 256, 638, 271, 636, 286, 630, 313, 613, 316, 613, 320, 617, 327, 606, 342, 596, 364, 575, 363, 569, 357, 564, 348, 563, 339, 557, 333, 557, 321, 547, 309, 545, 304, 539, 283, 541, 262, 540, 247, 549, 238, 549, 226, 553, 217, 558, 196, 555, 184, 558],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 676, 529, 665, 528, 660, 525, 661, 522, 658, 525, 655, 525, 649, 528, 647, 532, 638, 542, 633, 544, 635, 547, 634, 556, 640, 559, 640, 561, 646, 567, 647, 571, 652, 572, 650, 570, 647, 573, 644, 576, 643, 579, 646, 588, 641, 586, 638, 590, 633, 605, 633, 607, 630, 612, 642, 617, 637, 622, 649, 617, 654, 611, 652, 616, 658, 616, 661, 610, 663, 607, 669, 604, 671, 610, 677, 610, 683, 607, 689, 608, 692, 617, 693, 623, 698, 623, 701, 617, 704, 616, 707, 613, 708, 613, 705, 608, 708, 605, 708, 604, 710, 610, 710, 616, 715, 614, 721, 611, 722, 608, 726, 598, 719, 597, 713, 595, 715, 596, 718, 588, 719, 587, 722, 584, 722, 582, 719, 576, 719, 569, 725, 566, 731, 560, 733, 560, 736, 557, 737, 547, 729, 546, 723, 543, 722, 537, 724, 537, 727, 534, 726, 535, 723, 529, 721, 530, 718, 533, 716, 531, 713, 534, 703, 531, 702, 528, 703, 527, 706, 524, 705, 524, 702, 518, 701, 516, 695, 525, 689, 531, 690, 537, 687, 533, 681, 530, 682, 529, 685, 526, 685, 525, 682, 519, 679],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246],
        "3": [597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229],
        "4": [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        "5": [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        "6": [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "4446": {
        "1": [271, 323, 271, 326, 274, 326, 277, 329, 278, 338, 283, 344, 292, 341, 293, 347, 291, 350, 301, 359, 304, 359, 305, 356, 317, 350, 317, 347, 328, 338, 342, 353, 343, 359, 349, 357, 354, 363, 357, 363, 359, 365, 356, 369, 358, 371, 367, 374, 370, 373, 372, 370, 378, 372, 387, 380, 390, 381, 401, 393, 407, 395, 415, 402, 421, 401, 430, 404, 434, 413, 436, 411, 435, 408, 440, 405, 448, 408, 449, 411, 455, 414, 458, 418, 468, 410, 468, 407, 465, 404, 456, 399, 458, 396, 464, 393, 465, 387, 469, 382, 464, 370, 463, 373, 460, 373, 460, 370, 465, 367, 466, 364, 472, 358, 469, 340, 475, 338, 476, 332, 464, 326, 467, 324, 469, 316, 477, 312, 477, 309, 471, 303, 475, 295, 481, 293, 482, 290, 470, 282, 467, 273, 468, 270, 463, 265, 460, 263, 451, 266, 448, 265, 449, 262, 455, 260, 459, 255, 454, 243, 452, 249, 449, 251, 446, 249, 443, 250, 438, 245, 441, 244, 442, 241, 439, 238, 433, 237, 428, 242, 430, 245, 427, 247, 421, 245, 415, 247, 412, 250, 411, 256, 408, 257, 407, 251, 409, 246, 400, 242, 395, 247, 396, 250, 399, 251, 393, 254, 390, 254, 388, 251, 385, 253, 383, 262, 381, 264, 372, 261, 363, 254, 351, 258, 349, 261, 351, 264, 360, 268, 355, 271, 350, 266, 347, 268, 344, 267, 342, 269, 328, 261, 322, 262, 319, 265, 321, 270, 318, 271, 318, 274, 324, 276, 322, 279, 325, 281, 331, 279, 331, 282, 316, 283, 315, 280, 312, 279, 310, 285, 304, 285, 295, 290, 294, 293, 297, 295, 298, 298, 292, 298, 286, 302, 285, 308, 282, 307, 279, 301, 277, 302, 273, 311, 278, 318, 276, 321, 273, 322],
        "10": [662, 422, 668, 417, 677, 415, 680, 409, 686, 407, 690, 398, 695, 392, 706, 385, 712, 388, 722, 400, 717, 405, 720, 408, 720, 414, 726, 418, 729, 416, 731, 410, 740, 408, 748, 400, 757, 396, 769, 387, 775, 381, 778, 375, 784, 371, 785, 368, 791, 363, 800, 369, 817, 399, 825, 408, 831, 411, 840, 419, 849, 421, 858, 427, 873, 427, 873, 433, 874, 436, 877, 438, 877, 441, 872, 456, 863, 457, 857, 460, 842, 459, 842, 462, 836, 467, 832, 473, 826, 475, 814, 473, 811, 479, 808, 480, 793, 476, 802, 470, 799, 468, 793, 470, 781, 470, 780, 464, 777, 465, 775, 463, 780, 458, 778, 456, 766, 464, 745, 471, 739, 471, 737, 467, 731, 465, 728, 462, 722, 466, 710, 464, 709, 459, 706, 458, 710, 452, 708, 450, 702, 451, 693, 445, 693, 442, 689, 437, 680, 439, 677, 437, 674, 438, 669, 436, 671, 432, 669, 429, 666, 430, 663, 428, 663, 425],
        "11": [845, 415, 851, 411, 860, 409, 865, 403, 886, 389, 889, 389, 898, 383, 904, 377, 913, 362, 931, 348, 943, 362, 943, 368, 945, 371, 948, 373, 951, 370, 954, 372, 968, 396, 977, 405, 983, 407, 989, 412, 995, 408, 1001, 414, 1010, 419, 1021, 430, 1036, 434, 1039, 437, 1036, 442, 1030, 444, 1024, 442, 1016, 448, 1016, 454, 1022, 459, 1022, 461, 1013, 464, 1007, 462, 1005, 464, 1011, 473, 1008, 476, 1014, 480, 1012, 482, 1003, 479, 1000, 479, 998, 482, 995, 482, 986, 478, 980, 478, 977, 481, 978, 484, 967, 491, 961, 487, 959, 481, 956, 479, 947, 480, 941, 477, 935, 479, 929, 478, 927, 476, 927, 472, 925, 469, 922, 466, 916, 465, 914, 468, 923, 480, 911, 480, 905, 484, 899, 483, 894, 487, 888, 485, 879, 486, 877, 483, 874, 485, 865, 485, 863, 479, 857, 481, 854, 479, 848, 480, 858, 472, 879, 462, 880, 459, 878, 457, 878, 448, 881, 445, 882, 439, 877, 434, 877, 428, 883, 423, 886, 423, 886, 420, 877, 421, 877, 418, 875, 416, 857, 415, 848, 417],
        "12": [181, 560, 181, 566, 195, 587, 194, 590, 199, 602, 217, 611, 217, 614, 214, 617, 217, 620, 226, 620, 229, 619, 229, 616, 232, 615, 241, 617, 243, 623, 242, 626, 247, 635, 256, 638, 271, 636, 286, 630, 313, 613, 316, 613, 320, 617, 327, 606, 342, 596, 364, 575, 363, 569, 357, 564, 348, 563, 339, 557, 333, 557, 321, 547, 309, 545, 304, 539, 283, 541, 262, 540, 247, 549, 238, 549, 226, 553, 217, 558, 196, 555, 184, 558],
        "13": [304, 539, 328, 523, 344, 508, 353, 508, 356, 506, 374, 512, 383, 512, 395, 509, 407, 511, 413, 508, 422, 508, 440, 513, 444, 519, 440, 528, 443, 531, 445, 537, 440, 549, 419, 560, 392, 568, 377, 568, 365, 575, 364, 569, 358, 564, 346, 561, 340, 557, 334, 557, 320, 546, 311, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 553, 500, 556, 503, 557, 504, 554, 510, 552, 509, 555, 512, 557, 506, 559, 497, 565, 497, 568, 503, 572, 506, 572, 505, 576, 507, 578, 507, 584, 513, 588, 513, 591, 519, 592, 522, 590, 527, 593, 527, 596, 523, 599, 528, 603, 526, 610, 522, 610, 522, 603, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 506, 626, 510, 632, 513, 632, 512, 636, 515, 636, 519, 633, 522, 635, 522, 638, 519, 640, 522, 646, 528, 647, 532, 638, 547, 633, 552, 638, 560, 641, 561, 647, 567, 647, 568, 650, 571, 652, 572, 650, 570, 648, 572, 645, 575, 643, 581, 646, 587, 642, 588, 639, 586, 637, 589, 634, 601, 632, 604, 633, 607, 631, 609, 634, 618, 629, 618, 626, 624, 623, 626, 620, 622, 614, 622, 605, 618, 600, 623, 596, 617, 590, 623, 585, 613, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 559, 610, 556, 617, 550, 617, 547, 608, 540, 599, 546, 598, 549, 600, 552, 598, 553, 594, 554, 590, 548, 581, 545, 576, 550, 577, 553, 575, 555, 569, 552, 563, 555, 560, 558, 560, 561, 565, 564, 566, 567, 563, 566, 557, 569, 554, 569, 554, 563, 551, 561, 545, 561, 537, 550, 532, 558, 530, 560, 527, 560, 524, 559, 522, 556, 524, 553, 521, 550, 512, 550, 513, 547, 511, 544, 505, 540, 496, 542, 494, 545],
        "15": [695, 524, 695, 533, 698, 542, 703, 548, 706, 548, 706, 551, 709, 553, 733, 560, 735, 563, 737, 560, 740, 561, 741, 564, 746, 560, 752, 560, 791, 573, 800, 578, 811, 587, 817, 589, 826, 589, 838, 597, 853, 597, 871, 590, 884, 579, 896, 561, 891, 552, 897, 534, 894, 516, 868, 494, 853, 490, 844, 491, 835, 489, 832, 492, 814, 492, 781, 500, 772, 504, 757, 504, 751, 502, 730, 503, 718, 501, 703, 506, 703, 518, 697, 522],
        "16": [323, 635, 335, 635, 338, 637, 341, 646, 340, 649, 331, 653, 332, 655, 344, 656, 347, 659, 359, 664, 360, 667, 351, 670, 347, 673, 363, 671, 378, 679, 381, 679, 387, 683, 399, 687, 402, 690, 420, 695, 420, 698, 417, 700, 417, 703, 429, 699, 450, 700, 455, 703, 455, 709, 491, 705, 497, 702, 508, 691, 511, 691, 520, 683, 529, 679, 531, 676, 527, 670, 518, 667, 520, 661, 511, 659, 512, 653, 518, 650, 510, 645, 503, 636, 510, 627, 511, 624, 509, 615, 512, 609, 518, 604, 520, 598, 519, 595, 513, 594, 504, 589, 492, 578, 490, 572, 484, 567, 475, 565, 463, 559, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 434, 569, 428, 572, 419, 582, 419, 585, 417, 587, 405, 589, 399, 594, 395, 600, 392, 600, 383, 608, 380, 605, 375, 610, 369, 612, 361, 620, 337, 624, 333, 629, 327, 632],
        "17": [516, 676, 529, 665, 528, 660, 525, 661, 522, 658, 525, 655, 525, 649, 528, 647, 532, 638, 542, 633, 544, 635, 547, 634, 556, 640, 559, 640, 561, 646, 567, 647, 571, 652, 572, 650, 570, 647, 573, 644, 576, 643, 579, 646, 588, 641, 586, 638, 590, 633, 605, 633, 607, 630, 612, 642, 617, 637, 622, 649, 617, 654, 611, 652, 616, 658, 616, 661, 610, 663, 607, 669, 604, 671, 610, 677, 610, 683, 607, 689, 608, 692, 617, 693, 623, 698, 623, 701, 617, 704, 616, 707, 613, 708, 613, 705, 608, 708, 605, 708, 604, 710, 610, 710, 616, 715, 614, 721, 611, 722, 608, 726, 598, 719, 597, 713, 595, 715, 596, 718, 588, 719, 587, 722, 584, 722, 582, 719, 576, 719, 569, 725, 566, 731, 560, 733, 560, 736, 557, 737, 547, 729, 546, 723, 543, 722, 537, 724, 537, 727, 534, 726, 535, 723, 529, 721, 530, 718, 533, 716, 531, 713, 534, 703, 531, 702, 528, 703, 527, 706, 524, 705, 524, 702, 518, 701, 516, 695, 525, 689, 531, 690, 537, 687, 533, 681, 530, 682, 529, 685, 526, 685, 525, 682, 519, 679],
        "18": [611, 685, 617, 683, 617, 668, 620, 665, 626, 663, 631, 657, 627, 633, 627, 621, 623, 612, 623, 603, 629, 595, 630, 586, 632, 583, 640, 578, 639, 575, 636, 573, 624, 571, 623, 568, 625, 565, 623, 562, 629, 559, 631, 556, 630, 550, 633, 547, 642, 549, 660, 557, 696, 562, 708, 569, 717, 572, 722, 578, 725, 579, 727, 585, 732, 590, 738, 592, 747, 592, 771, 601, 773, 604, 769, 610, 771, 616, 780, 618, 792, 618, 793, 621, 784, 625, 783, 628, 786, 634, 789, 636, 790, 645, 787, 650, 784, 650, 772, 658, 765, 667, 756, 670, 729, 687, 727, 690, 718, 692, 712, 697, 700, 701, 682, 703, 679, 705, 664, 704, 652, 699, 631, 699, 619, 691, 616, 692, 613, 690, 613, 687],
        "2": [468, 243, 489, 235, 495, 225, 492, 224, 489, 228, 492, 233, 500, 228, 515, 222, 524, 224, 533, 219, 551, 219, 560, 222, 572, 223, 578, 226, 577, 229, 583, 234, 587, 240, 587, 243, 599, 254, 599, 263, 591, 274, 579, 280, 582, 281, 581, 284, 579, 285, 574, 280, 571, 281, 573, 287, 579, 290, 587, 298, 588, 301, 574, 308, 541, 307, 507, 296, 505, 297, 505, 301, 503, 300, 500, 294, 491, 286, 485, 277, 476, 270, 474, 272, 472, 271, 471, 268, 474, 267, 475, 264, 469, 246],
        "3": [602, 289, 606, 295, 609, 295, 616, 301, 618, 307, 626, 314, 628, 311, 637, 311, 637, 315, 640, 315, 649, 320, 652, 323, 652, 326, 655, 327, 646, 333, 645, 336, 653, 342, 653, 347, 657, 351, 657, 354, 663, 362, 663, 368, 659, 374, 653, 375, 647, 379, 646, 382, 649, 385, 653, 394, 656, 395, 656, 398, 659, 399, 659, 396, 665, 395, 671, 390, 673, 387, 671, 384, 673, 382, 678, 385, 678, 391, 684, 392, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 380, 705, 380, 707, 383, 708, 381, 714, 379, 719, 373, 719, 370, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 771, 341, 769, 329, 775, 328, 775, 325, 783, 319, 778, 313, 779, 310, 782, 310, 783, 305, 793, 298, 794, 295, 788, 290, 782, 288, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 787, 279, 790, 281, 791, 284, 794, 284, 797, 279, 803, 277, 804, 274, 796, 265, 797, 262, 795, 259, 786, 253, 780, 246, 774, 243, 768, 246, 768, 243, 771, 238, 774, 238, 778, 242, 779, 239, 785, 236, 787, 233, 786, 230, 777, 225, 768, 230, 767, 236, 761, 232, 755, 231, 753, 225, 745, 230, 743, 225, 734, 220, 725, 225, 721, 233, 721, 237, 713, 244, 712, 242, 716, 237, 713, 225, 706, 230, 703, 228, 697, 228, 692, 236, 686, 233, 683, 234, 675, 242, 672, 239, 673, 236, 676, 234, 675, 228, 677, 226, 674, 223, 668, 222, 662, 227, 665, 229, 663, 232, 654, 232, 648, 236, 651, 241, 648, 241, 642, 237, 636, 238, 634, 229, 641, 235, 651, 228, 646, 222, 640, 220, 631, 225, 627, 237, 624, 237, 618, 233, 615, 235, 611, 227, 609, 228, 605, 237, 611, 245, 617, 247, 619, 250, 620, 248, 629, 243, 635, 251, 626, 249, 621, 254, 621, 258, 615, 257, 606, 262, 604, 265, 613, 271, 613, 274, 617, 274, 617, 271, 626, 269, 624, 275, 616, 283, 607, 285, 604, 288],
        "4": [173, 404, 175, 407, 187, 406, 188, 409, 195, 414, 194, 417, 188, 421, 199, 421, 198, 427, 201, 429, 204, 430, 219, 426, 219, 429, 212, 434, 222, 433, 224, 435, 222, 439, 229, 439, 238, 435, 238, 438, 231, 443, 239, 442, 241, 445, 250, 450, 253, 448, 257, 454, 266, 454, 272, 456, 273, 459, 276, 461, 279, 461, 282, 457, 294, 455, 297, 453, 303, 455, 306, 452, 315, 453, 316, 450, 322, 446, 310, 442, 316, 440, 317, 437, 332, 442, 338, 440, 344, 442, 350, 438, 356, 438, 358, 436, 347, 427, 349, 426, 364, 433, 379, 433, 382, 435, 385, 433, 388, 434, 394, 432, 397, 434, 403, 433, 402, 431, 399, 430, 400, 427, 403, 428, 402, 422, 396, 422, 399, 425, 406, 422, 409, 424, 418, 424, 421, 423, 423, 420, 418, 411, 415, 409, 416, 407, 419, 407, 421, 405, 409, 397, 403, 396, 380, 373, 374, 371, 368, 373, 363, 378, 360, 376, 342, 359, 341, 353, 329, 338, 318, 346, 315, 355, 304, 366, 294, 354, 285, 351, 281, 342, 278, 339, 277, 330, 275, 327, 265, 330, 261, 336, 249, 344, 242, 356, 227, 362, 224, 368, 215, 374, 210, 382, 201, 386, 193, 394, 187, 395, 179, 403, 176, 400, 174, 403],
        "5": [465, 372, 467, 378, 479, 383, 488, 391, 497, 391, 512, 396, 521, 405, 530, 411, 536, 409, 548, 409, 563, 403, 578, 403, 602, 393, 611, 393, 641, 383, 617, 383, 608, 381, 572, 382, 548, 374, 538, 362, 538, 347, 534, 341, 528, 338, 522, 332, 522, 329, 510, 335, 492, 340, 489, 339, 483, 343, 480, 346, 479, 355, 474, 361, 468, 365, 466, 371],
        "6": [523, 330, 527, 336, 536, 342, 538, 345, 539, 348, 537, 351, 537, 357, 541, 366, 550, 374, 556, 375, 562, 379, 568, 381, 604, 380, 616, 383, 634, 381, 640, 383, 655, 379, 658, 376, 658, 370, 654, 361, 656, 355, 644, 345, 642, 330, 639, 324, 633, 318, 627, 316, 615, 316, 609, 313, 600, 315, 591, 313, 576, 313, 564, 318, 558, 318, 552, 322, 534, 325, 525, 329],
        "7": [708, 386, 711, 387, 722, 399, 721, 402, 718, 404, 720, 407, 720, 413, 726, 418, 731, 410, 737, 409, 746, 403, 750, 398, 756, 396, 768, 388, 774, 382, 777, 376, 785, 369, 786, 366, 792, 362, 798, 366, 820, 402, 826, 408, 838, 416, 859, 409, 867, 401, 885, 389, 888, 389, 897, 383, 903, 378, 903, 375, 893, 363, 889, 354, 886, 351, 880, 349, 876, 337, 869, 328, 854, 317, 849, 311, 847, 305, 841, 299, 835, 297, 821, 284, 810, 291, 808, 297, 798, 309, 786, 330, 780, 335, 774, 343, 771, 343, 758, 358, 758, 364, 740, 351, 730, 362, 721, 369, 711, 384],
        "8": [153, 487, 156, 499, 160, 505, 174, 519, 174, 522, 171, 525, 173, 543, 171, 545, 168, 545, 168, 548, 170, 551, 174, 549, 174, 552, 179, 561, 182, 558, 194, 555, 218, 557, 227, 552, 239, 548, 248, 548, 263, 540, 281, 541, 284, 540, 284, 534, 296, 528, 299, 522, 297, 516, 290, 507, 278, 497, 278, 491, 242, 479, 233, 474, 221, 470, 212, 469, 200, 465, 188, 465, 176, 469, 170, 473, 167, 473, 161, 477, 155, 485],
        "9": [247, 468, 248, 474, 255, 481, 267, 487, 276, 489, 279, 492, 278, 495, 283, 501, 289, 505, 298, 517, 299, 526, 308, 525, 317, 529, 329, 522, 339, 511, 345, 508, 360, 506, 372, 511, 384, 511, 390, 509, 408, 510, 420, 506, 419, 503, 425, 499, 431, 502, 434, 499, 432, 496, 433, 493, 430, 491, 432, 488, 431, 485, 428, 483, 407, 482, 383, 468, 359, 462, 347, 461, 344, 463, 329, 463, 317, 465, 316, 468, 310, 471, 298, 471, 295, 469, 292, 470, 277, 467, 268, 467, 265, 469, 250, 467]
    },
    "4536": {
        "1": [267, 340, 278, 331, 276, 328, 273, 327, 272, 324, 278, 319, 273, 312, 278, 300, 281, 303, 283, 309, 285, 307, 285, 304, 291, 299, 297, 298, 298, 296, 295, 296, 292, 293, 286, 295, 284, 298, 281, 297, 274, 290, 274, 287, 277, 284, 286, 281, 296, 290, 302, 286, 308, 287, 311, 281, 314, 280, 317, 283, 326, 284, 332, 282, 332, 279, 321, 277, 318, 275, 320, 269, 319, 266, 321, 263, 330, 262, 342, 270, 345, 267, 351, 267, 357, 271, 360, 269, 351, 265, 349, 262, 350, 259, 362, 255, 371, 261, 380, 263, 382, 262, 385, 253, 388, 249, 391, 256, 396, 251, 394, 248, 400, 243, 409, 246, 407, 252, 410, 257, 411, 251, 414, 248, 420, 245, 429, 247, 428, 244, 432, 238, 438, 238, 441, 240, 442, 243, 440, 246, 442, 249, 448, 251, 451, 250, 455, 244, 459, 256, 457, 259, 448, 264, 449, 267, 458, 263, 464, 266, 467, 269, 469, 281, 475, 284, 481, 290, 481, 293, 478, 296, 475, 296, 471, 304, 477, 310, 478, 316, 481, 319, 483, 325, 482, 331, 486, 340, 485, 343, 479, 345, 476, 344, 472, 339, 472, 357, 469, 363, 463, 369, 469, 381, 465, 393, 456, 399, 464, 404, 468, 410, 460, 417, 457, 417, 455, 414, 452, 414, 448, 408, 442, 406, 439, 406, 435, 412, 432, 412, 428, 415, 425, 410, 422, 410, 417, 404, 413, 402, 411, 396, 412, 392, 418, 392, 420, 398, 419, 402, 416, 401, 414, 396, 409, 392, 406, 395, 395, 382, 389, 383, 388, 386, 377, 377, 377, 372, 374, 372, 369, 376, 360, 374, 357, 368, 359, 365, 353, 366, 355, 369, 353, 372, 350, 371, 349, 377, 346, 377, 344, 369, 338, 368, 332, 371, 330, 374, 327, 374, 318, 368, 315, 369, 303, 359, 297, 357, 295, 354, 288, 352, 291, 351, 290, 356, 285, 359, 285, 362, 282, 362, 280, 360, 281, 357, 279, 354, 276, 354, 275, 345, 269, 343],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        "4": [190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406],
        "5": [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        "6": [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "5346": {
        "1": [271, 324, 272, 327, 278, 329, 278, 338, 281, 341, 281, 344, 287, 342, 293, 343, 291, 352, 302, 360, 306, 356, 315, 351, 318, 346, 321, 345, 326, 339, 329, 339, 340, 351, 344, 359, 350, 358, 352, 361, 358, 364, 357, 367, 360, 373, 366, 375, 372, 371, 378, 372, 390, 382, 401, 394, 407, 396, 416, 403, 422, 401, 424, 403, 427, 403, 430, 405, 432, 411, 435, 413, 435, 407, 441, 405, 444, 407, 447, 406, 450, 412, 456, 415, 458, 418, 468, 410, 469, 407, 457, 399, 464, 393, 465, 387, 469, 382, 464, 370, 461, 372, 460, 369, 466, 366, 471, 361, 472, 349, 469, 340, 475, 338, 476, 332, 470, 327, 464, 326, 467, 324, 467, 321, 470, 316, 476, 313, 478, 310, 472, 304, 471, 301, 482, 290, 470, 282, 467, 273, 468, 270, 466, 267, 460, 263, 451, 266, 448, 265, 449, 262, 455, 260, 459, 254, 455, 245, 453, 245, 452, 248, 449, 250, 443, 250, 440, 244, 442, 241, 440, 238, 434, 237, 428, 241, 430, 244, 428, 246, 419, 244, 411, 251, 411, 254, 409, 255, 407, 249, 409, 247, 407, 244, 398, 244, 395, 246, 395, 249, 398, 251, 393, 254, 390, 254, 388, 251, 386, 251, 381, 263, 372, 261, 363, 254, 357, 254, 349, 261, 351, 264, 357, 267, 357, 270, 351, 266, 345, 266, 343, 269, 334, 266, 332, 263, 323, 261, 320, 264, 320, 270, 317, 272, 319, 275, 324, 277, 323, 280, 326, 281, 332, 278, 332, 281, 326, 283, 317, 282, 312, 279, 309, 285, 303, 285, 294, 291, 294, 297, 285, 303, 285, 306, 283, 308, 278, 299, 274, 308, 274, 314, 277, 315, 278, 318, 276, 321, 273, 322],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        "4": [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404],
        "5": [452, 410, 454, 407, 463, 401, 469, 400, 469, 397, 478, 391, 476, 388, 473, 389, 472, 392, 469, 391, 458, 384, 458, 381, 462, 375, 462, 369, 456, 366, 454, 363, 460, 354, 463, 352, 469, 354, 472, 352, 465, 344, 465, 341, 474, 335, 472, 329, 473, 326, 476, 324, 477, 315, 483, 310, 495, 313, 501, 310, 503, 304, 507, 299, 510, 302, 512, 311, 515, 311, 518, 302, 524, 301, 530, 304, 531, 307, 529, 310, 531, 313, 529, 316, 526, 317, 526, 320, 532, 323, 535, 320, 540, 321, 540, 318, 534, 316, 534, 313, 537, 307, 543, 304, 552, 309, 558, 308, 564, 310, 570, 315, 568, 321, 562, 324, 572, 339, 563, 345, 559, 351, 556, 351, 555, 357, 552, 360, 556, 366, 555, 372, 561, 377, 562, 380, 556, 388, 565, 385, 574, 391, 577, 391, 589, 383, 595, 382, 598, 383, 606, 391, 601, 396, 598, 396, 597, 401, 589, 406, 588, 409, 585, 410, 581, 407, 578, 407, 576, 409, 576, 412, 574, 413, 571, 413, 569, 404, 554, 409, 554, 412, 551, 412, 550, 409, 544, 407, 540, 401, 537, 401, 536, 407, 533, 407, 533, 402, 527, 401, 525, 398, 526, 395, 523, 394, 521, 396, 521, 402, 519, 405, 510, 409, 509, 412, 506, 411, 505, 408, 499, 407, 496, 408, 494, 414, 491, 413, 488, 407, 482, 406, 477, 415, 480, 421, 478, 424, 472, 427, 463, 419, 462, 416, 456, 414, 453, 411],
        "6": [546, 359, 548, 365, 557, 372, 556, 375, 553, 376, 551, 379, 551, 382, 554, 384, 560, 386, 575, 386, 584, 392, 590, 394, 605, 396, 626, 396, 635, 393, 636, 390, 634, 384, 645, 375, 648, 363, 665, 351, 667, 348, 665, 342, 667, 336, 659, 329, 650, 327, 635, 325, 587, 325, 581, 327, 570, 335, 571, 344, 553, 352, 547, 358],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    "5436": {
        "1": [267, 340, 269, 337, 278, 331, 277, 328, 271, 326, 272, 323, 278, 319, 278, 316, 273, 312, 277, 300, 280, 301, 282, 307, 285, 307, 287, 301, 293, 298, 295, 295, 294, 292, 296, 289, 305, 285, 308, 286, 311, 280, 314, 279, 316, 282, 325, 283, 331, 282, 333, 279, 330, 278, 327, 281, 324, 280, 323, 275, 320, 276, 317, 273, 320, 268, 319, 265, 322, 262, 325, 260, 331, 262, 333, 265, 342, 269, 344, 267, 350, 266, 356, 270, 358, 268, 349, 262, 350, 259, 356, 255, 362, 254, 371, 260, 380, 263, 385, 252, 388, 250, 392, 255, 394, 252, 397, 252, 394, 247, 400, 242, 409, 246, 407, 251, 408, 254, 411, 255, 412, 249, 418, 245, 430, 245, 427, 243, 433, 237, 439, 238, 441, 240, 440, 246, 442, 249, 448, 250, 455, 245, 459, 254, 458, 257, 452, 262, 449, 262, 448, 265, 451, 266, 460, 263, 466, 267, 468, 270, 467, 273, 470, 282, 482, 290, 471, 301, 472, 304, 478, 310, 476, 313, 470, 316, 467, 321, 467, 324, 464, 326, 470, 327, 476, 332, 476, 335, 475, 338, 469, 340, 472, 349, 471, 361, 466, 366, 460, 369, 461, 372, 464, 370, 469, 382, 465, 387, 464, 393, 457, 399, 469, 407, 468, 410, 458, 418, 456, 415, 450, 412, 447, 406, 444, 407, 441, 405, 435, 407, 435, 413, 432, 411, 428, 403, 425, 404, 418, 397, 413, 397, 414, 402, 417, 403, 415, 397, 410, 395, 409, 392, 403, 392, 400, 390, 395, 382, 386, 378, 380, 372, 374, 370, 365, 374, 359, 373, 357, 363, 354, 363, 349, 357, 346, 359, 340, 359, 337, 358, 332, 352, 320, 350, 299, 357, 291, 351, 293, 345, 292, 342, 280, 346, 279, 349, 276, 348, 275, 345, 272, 345, 270, 343],
        "10": [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        "11": [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1000, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        "12": [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        "13": [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        "14": [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        "15": [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        "16": [322, 635, 337, 636, 341, 645, 341, 648, 330, 655, 345, 657, 360, 666, 345, 673, 351, 674, 360, 671, 372, 675, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 418, 703, 436, 699, 454, 701, 454, 707, 456, 710, 483, 707, 495, 703, 501, 699, 509, 691, 512, 691, 520, 684, 529, 680, 532, 674, 518, 666, 519, 660, 510, 658, 513, 652, 517, 649, 514, 648, 503, 636, 511, 624, 509, 618, 510, 612, 519, 603, 520, 597, 503, 588, 491, 577, 492, 574, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 417, 587, 405, 589, 395, 599, 392, 599, 384, 607, 381, 606, 376, 609, 373, 608, 359, 620, 338, 623, 335, 625, 335, 628, 326, 632],
        "17": [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        "18": [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        "2": [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        "3": [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        "4": [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        "5": [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        "6": [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        "7": [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        "8": [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        "9": [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    }
};
config.village["imageSizes"] = [[117, 88], [0, 0], [0, 0], [0, 0], [0, 0], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], null, [151, 145], [151, 145], [151, 145], [156, 186], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [974, 668], [974, 668], [974, 668], [151, 145], [151, 145], [151, 145], null, [151, 145], [151, 145], [472, 444], [151, 145], [0, 0], [950, 682], [151, 145], [151, 145], [151, 140]];
config.village["animationOffset"] = {
    tribe1: {
        building13: {
            10: [73, -17],
            20: [76, -8],
            999: [79, -19]
        }
    },
    tribe2: {
        building13: {
            10: [72, -20],
            20: [81, -8],
            999: [81, -20]
        }
    },
    tribe3: {
        building13: {
            10: [65, -19],
            20: [79, -5],
            999: [79, -17]
        }
    }
};
config.village["svg"] = {
    location1_11115: [{
        paths: ["M 276, 329 L 282, 320 L 291, 313 L 295, 307 L 301, 303 L 328, 297 L 333, 285 L 339, 281 L 345, 280 L 357, 270 L 378, 264 L 396, 264 L 408, 268 L 414, 272 L 435, 290 L 439, 305 L 433, 329 L 426, 347 L 430, 356 L 427, 365 L 416, 380 L 407, 386 L 405, 389 L 399, 392 L 388, 381 L 383, 378 L 380, 379 L 379, 374 L 376, 372 L 367, 378 L 361, 378 L 355, 372 L 354, 369 L 345, 361 L 333, 343 L 327, 340 L 318, 348 L 318, 351 L 310, 363 L 303, 368 L 301, 362 L 296, 356 L 287, 353 L 284, 350 L 278, 338 L 277, 332 z"]
    }],
    location10_11115: [{
        paths: ["M 687, 410 L 695, 434 L 707, 446 L 709, 452 L 721, 462 L 763, 475 L 784, 476 L 787, 474 L 790, 476 L 796, 475 L 808, 468 L 813, 453 L 819, 449 L 827, 440 L 829, 428 L 841, 423 L 853, 414 L 856, 414 L 859, 412 L 862, 406 L 858, 400 L 834, 392 L 822, 392 L 810, 387 L 792, 384 L 780, 380 L 774, 381 L 753, 379 L 729, 391 L 723, 392 L 708, 401 L 690, 406 L 688, 409 z"]
    }],
    location11_11115: [{
        paths: ["M 809, 455 L 810, 458 L 825, 458 L 846, 467 L 852, 472 L 857, 484 L 869, 489 L 884, 487 L 899, 492 L 941, 492 L 953, 500 L 962, 500 L 968, 502 L 977, 508 L 992, 511 L 1004, 508 L 1013, 502 L 1019, 500 L 1023, 494 L 1026, 493 L 1039, 472 L 1034, 463 L 1040, 442 L 1038, 430 L 1027, 420 L 1023, 414 L 1023, 408 L 997, 384 L 991, 383 L 973, 375 L 967, 376 L 958, 372 L 952, 372 L 943, 368 L 937, 368 L 919, 361 L 907, 360 L 898, 354 L 892, 353 L 883, 357 L 879, 366 L 876, 369 L 874, 381 L 875, 384 L 872, 393 L 860, 403 L 859, 409 L 847, 415 L 843, 420 L 828, 427 L 826, 430 L 826, 436 L 818, 448 L 812, 452 z"]
    }],
    location12_11115: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_11115: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_11115: [{
        paths: ["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]
    }],
    location15_11115: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_11115: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_11115: [{
        paths: ["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]
    }],
    location18_11115: [{
        paths: ["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]
    }],
    location2_11115: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_11115: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 705, 380 L 706, 383 L 714, 379 L 717, 380 L 717, 383 L 720, 384 L 721, 381 L 731, 372 L 729, 366 L 731, 360 L 738, 352 L 741, 351 L 743, 357 L 740, 363 L 746, 365 L 745, 368 L 747, 370 L 750, 368 L 751, 365 L 756, 362 L 760, 356 L 768, 351 L 768, 348 L 765, 346 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 778, 323 L 781, 322 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 787, 302 L 793, 298 L 794, 295 L 791, 292 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 797, 261 L 795, 258 L 786, 253 L 785, 250 L 776, 243 L 779, 241 L 780, 238 L 786, 234 L 787, 231 L 778, 225 L 775, 225 L 769, 229 L 766, 235 L 757, 232 L 752, 224 L 747, 229 L 744, 228 L 743, 225 L 737, 221 L 731, 221 L 725, 224 L 721, 233 L 721, 237 L 713, 243 L 713, 240 L 717, 235 L 714, 226 L 711, 225 L 710, 228 L 707, 230 L 698, 227 L 695, 229 L 692, 235 L 686, 233 L 683, 234 L 675, 241 L 672, 238 L 677, 233 L 675, 230 L 677, 227 L 676, 224 L 667, 222 L 664, 225 L 664, 231 L 661, 233 L 652, 232 L 649, 235 L 648, 238 L 651, 239 L 650, 241 L 641, 237 L 635, 237 L 633, 231 L 639, 232 L 641, 235 L 651, 228 L 650, 225 L 644, 220 L 638, 220 L 632, 224 L 628, 236 L 625, 237 L 616, 234 L 613, 232 L 611, 226 L 609, 227 L 605, 236 L 610, 244 L 616, 246 L 617, 249 L 620, 250 L 621, 247 L 630, 244 L 631, 247 L 634, 249 L 625, 250 L 620, 255 L 620, 258 L 611, 258 L 605, 262 L 607, 268 L 613, 271 L 614, 274 L 617, 274 L 618, 271 L 624, 268 L 626, 270 L 623, 276 L 615, 283 L 603, 287 z"]
    }],
    location4_11115: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]
    }],
    location5_11115: [{
        paths: ["M 456, 322 L 460, 334 L 456, 346 L 459, 358 L 470, 369 L 479, 390 L 488, 397 L 509, 406 L 521, 406 L 527, 404 L 539, 406 L 563, 401 L 564, 398 L 573, 395 L 575, 392 L 572, 386 L 551, 367 L 548, 358 L 544, 352 L 543, 349 L 545, 337 L 554, 322 L 552, 316 L 546, 311 L 528, 305 L 522, 305 L 513, 302 L 507, 304 L 501, 303 L 492, 305 L 480, 305 L 474, 307 L 462, 315 L 457, 321 z"]
    }],
    location6_11115: [{
        paths: ["M 541, 346 L 542, 352 L 551, 370 L 572, 389 L 572, 392 L 563, 397 L 562, 400 L 564, 403 L 570, 405 L 609, 402 L 618, 399 L 624, 395 L 640, 378 L 643, 377 L 649, 371 L 655, 359 L 653, 353 L 640, 338 L 636, 329 L 627, 323 L 615, 321 L 606, 313 L 597, 311 L 591, 307 L 570, 307 L 567, 305 L 561, 305 L 543, 309 L 543, 312 L 551, 319 L 550, 325 L 544, 334 L 543, 343 z"]
    }],
    location7_11115: [{
        paths: ["M 755, 379 L 769, 367 L 775, 364 L 776, 358 L 773, 355 L 774, 352 L 772, 346 L 774, 340 L 788, 329 L 809, 321 L 836, 325 L 857, 332 L 863, 336 L 893, 346 L 898, 351 L 897, 354 L 888, 355 L 882, 360 L 876, 378 L 876, 390 L 871, 396 L 862, 402 L 835, 393 L 823, 392 L 805, 386 L 796, 386 L 781, 382 L 757, 380 z"]
    }],
    location8_11115: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_11115: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_3339: [{
        paths: ["M 276,332 L277,344 L280,350 L285,356 L291,357 L306,369 L312,372 L327,372 L339,377 L360,378 L369,383 L372,383 L378,389 L390,394 L411,384 L419,376 L419,373 L429,361 L429,355 L425,349 L434,325 L438,301 L434,289 L431,288 L421,277 L418,276 L412,270 L400,265 L379,263 L373,267 L361,268 L347,279 L338,281 L333,286 L330,295 L324,298 L303,302 L297,305 L277,328 L277,331 z"]
    }],
    location10_3339: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3339: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3339: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3339: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3339: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3339: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3339: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3339: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3339: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3339: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_3339: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 632, 311 L 637, 316 L 643, 317 L 652, 324 L 659, 318 L 657, 315 L 658, 312 L 661, 312 L 667, 317 L 670, 322 L 669, 328 L 671, 331 L 677, 333 L 677, 336 L 680, 338 L 676, 341 L 678, 347 L 676, 350 L 669, 346 L 657, 349 L 658, 358 L 656, 364 L 660, 369 L 663, 369 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 657, 399 L 660, 398 L 660, 395 L 666, 395 L 669, 393 L 673, 387 L 673, 382 L 678, 385 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 707, 383 L 715, 378 L 720, 369 L 726, 365 L 740, 351 L 755, 363 L 766, 348 L 766, 344 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 307 L 787, 302 L 793, 298 L 794, 295 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 607, 229 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_3339: [{
        paths: ["M 198, 369 L 202, 381 L 198, 393 L 201, 405 L 213, 416 L 222, 437 L 228, 443 L 255, 453 L 270, 450 L 279, 452 L 297, 448 L 309, 450 L 330, 450 L 360, 445 L 366, 441 L 381, 424 L 387, 421 L 394, 413 L 396, 404 L 396, 401 L 388, 392 L 379, 389 L 361, 377 L 340, 377 L 322, 370 L 304, 370 L 295, 368 L 271, 352 L 265, 350 L 244, 349 L 238, 351 L 223, 351 L 214, 354 L 205, 360 L 199, 368 z"]
    }],
    location5_3339: [{
        paths: ["M 443, 329 L 449, 320 L 461, 312 L 470, 309 L 497, 308 L 500, 306 L 512, 310 L 518, 310 L 527, 314 L 539, 311 L 566, 311 L 575, 315 L 579, 321 L 578, 324 L 570, 331 L 561, 334 L 555, 346 L 546, 351 L 538, 360 L 537, 363 L 542, 372 L 543, 381 L 549, 390 L 549, 393 L 544, 405 L 529, 410 L 517, 408 L 499, 411 L 493, 409 L 475, 402 L 466, 393 L 461, 381 L 456, 384 L 451, 380 L 450, 374 L 453, 372 L 454, 369 L 448, 365 L 444, 353 L 448, 341 L 445, 332 z"]
    }],
    location6_3339: [{
        paths: ["M 543, 362 L 547, 368 L 553, 368 L 558, 373 L 549, 380 L 550, 383 L 553, 385 L 574, 387 L 586, 395 L 595, 398 L 604, 396 L 625, 396 L 631, 394 L 636, 390 L 635, 384 L 646, 374 L 650, 362 L 665, 351 L 668, 345 L 666, 342 L 669, 339 L 669, 336 L 663, 331 L 645, 326 L 585, 325 L 579, 327 L 567, 335 L 570, 340 L 568, 346 L 559, 348 L 550, 353 L 547, 355 L 544, 361 z"]
    }],
    location7_3339: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3339: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3339: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location11_33546: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location14_33546: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location1_3447: [{
        paths: ["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]
    }],
    location10_3447: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3447: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3447: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3447: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3447: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3447: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3447: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3447: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3447: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3447: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]
    }],
    location3_3447: [{
        paths: ["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]
    }],
    location4_3447: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_3447: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_3447: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_3447: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3447: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3447: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_3456: [{
        paths: ["M 225, 350 L 231, 349 L 229, 358 L 231, 360 L 237, 359 L 243, 354 L 248, 345 L 257, 339 L 263, 333 L 264, 330 L 273, 327 L 276, 328 L 278, 331 L 278, 337 L 284, 349 L 287, 352 L 296, 355 L 304, 366 L 310, 362 L 316, 353 L 317, 347 L 328, 338 L 339, 350 L 343, 359 L 360, 377 L 363, 378 L 371, 372 L 377, 372 L 383, 376 L 402, 396 L 408, 396 L 414, 400 L 413, 397 L 422, 396 L 425, 393 L 431, 392 L 432, 390 L 426, 388 L 429, 386 L 427, 383 L 428, 380 L 425, 378 L 426, 376 L 432, 379 L 435, 378 L 436, 372 L 430, 368 L 427, 368 L 422, 362 L 423, 359 L 426, 358 L 423, 356 L 422, 353 L 434, 357 L 438, 349 L 441, 348 L 443, 354 L 446, 356 L 449, 355 L 449, 346 L 452, 344 L 457, 350 L 460, 351 L 468, 346 L 469, 340 L 472, 342 L 478, 342 L 477, 336 L 471, 332 L 467, 323 L 467, 317 L 473, 317 L 472, 311 L 478, 310 L 470, 303 L 476, 301 L 464, 299 L 458, 294 L 452, 292 L 443, 286 L 439, 280 L 438, 274 L 429, 262 L 414, 250 L 409, 241 L 403, 235 L 381, 220 L 372, 226 L 370, 232 L 364, 241 L 358, 246 L 348, 264 L 342, 270 L 339, 276 L 330, 281 L 322, 290 L 319, 299 L 295, 282 L 290, 288 L 287, 289 L 286, 292 L 277, 299 L 272, 308 L 260, 320 L 251, 323 L 241, 338 L 238, 338 L 234, 344 L 228, 348 z"]
    }],
    location10_3456: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3456: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3456: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3456: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3456: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3456: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3456: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3456: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3456: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3456: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_3456: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_3456: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]
    }],
    location5_3456: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_3456: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_3456: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3456: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3456: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_3546: [{
        paths: ["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 292, 354 L 293, 357 L 299, 360 L 301, 363 L 298, 366 L 310, 366 L 319, 371 L 331, 371 L 334, 368 L 343, 367 L 338, 358 L 344, 358 L 350, 361 L 356, 361 L 368, 365 L 371, 363 L 380, 362 L 386, 364 L 386, 367 L 389, 369 L 401, 367 L 406, 372 L 418, 373 L 422, 369 L 428, 369 L 429, 367 L 423, 362 L 426, 360 L 435, 360 L 438, 354 L 447, 359 L 449, 353 L 452, 351 L 455, 353 L 461, 353 L 464, 351 L 464, 348 L 479, 341 L 474, 340 L 474, 331 L 471, 326 L 480, 329 L 482, 327 L 482, 324 L 481, 321 L 475, 319 L 472, 316 L 470, 310 L 473, 309 L 468, 303 L 450, 288 L 447, 287 L 435, 294 L 426, 285 L 406, 252 L 400, 248 L 380, 268 L 374, 263 L 368, 254 L 359, 245 L 347, 238 L 328, 255 L 326, 261 L 319, 269 L 313, 270 L 308, 275 L 305, 276 L 298, 284 L 296, 290 L 293, 293 L 290, 293 L 286, 299 L 283, 301 L 277, 301 L 262, 311 L 253, 314 L 247, 323 L 235, 331 z"]
    }],
    location10_3546: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3546: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3546: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3546: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3546: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3546: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3546: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3546: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3546: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3546: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_3546: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_3546: [{
        paths: ["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]
    }],
    location5_3546: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_3546: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_3546: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3546: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3546: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location4_3547: [{
        paths: ["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]
    }],
    location1_4347: [{
        paths: ["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]
    }],
    location10_4347: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_4347: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_4347: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_4347: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_4347: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_4347: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4347: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4347: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_4347: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_4347: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]
    }],
    location3_4347: [{
        paths: ["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]
    }],
    location4_4347: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_4347: [{
        paths: ["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]
    }],
    location6_4347: [{
        paths: ["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]
    }],
    location7_4347: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_4347: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_4347: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_4356: [{
        paths: ["M 225, 350 L 231, 346 L 238, 337 L 241, 337 L 248, 325 L 260, 320 L 274, 305 L 274, 302 L 286, 292 L 287, 289 L 295, 282 L 316, 298 L 319, 297 L 319, 294 L 326, 285 L 332, 279 L 338, 276 L 341, 270 L 347, 264 L 358, 246 L 370, 232 L 374, 223 L 377, 223 L 382, 219 L 409, 240 L 416, 252 L 434, 267 L 438, 273 L 441, 282 L 444, 285 L 447, 286 L 453, 292 L 465, 298 L 474, 300 L 473, 303 L 470, 304 L 479, 308 L 478, 310 L 475, 311 L 475, 314 L 473, 316 L 467, 319 L 469, 328 L 476, 336 L 476, 342 L 470, 340 L 468, 342 L 469, 345 L 463, 348 L 451, 344 L 451, 353 L 448, 355 L 445, 355 L 442, 349 L 439, 348 L 436, 354 L 433, 355 L 427, 355 L 424, 352 L 422, 353 L 426, 359 L 423, 360 L 423, 363 L 435, 371 L 436, 377 L 430, 379 L 424, 376 L 428, 380 L 427, 383 L 430, 389 L 433, 390 L 432, 392 L 423, 396 L 423, 399 L 417, 397 L 417, 400 L 414, 401 L 408, 396 L 399, 392 L 378, 372 L 372, 371 L 363, 378 L 360, 377 L 343, 360 L 341, 354 L 332, 342 L 326, 339 L 322, 344 L 319, 345 L 317, 351 L 306, 365 L 303, 365 L 302, 362 L 296, 356 L 287, 353 L 284, 350 L 279, 341 L 277, 329 L 274, 327 L 265, 330 L 258, 339 L 249, 345 L 244, 354 L 238, 359 L 232, 360 L 229, 355 L 231, 352 L 229, 350 L 226, 351 z"]
    }],
    location10_4356: [{
        paths: ["M 661, 425 L 663, 422 L 669, 419 L 702, 408 L 709, 400 L 721, 396 L 726, 391 L 732, 390 L 768, 389 L 771, 387 L 777, 390 L 789, 388 L 816, 391 L 837, 396 L 846, 403 L 844, 421 L 827, 434 L 820, 455 L 818, 458 L 812, 460 L 811, 472 L 805, 473 L 802, 476 L 772, 478 L 751, 474 L 742, 477 L 727, 477 L 712, 472 L 709, 469 L 703, 473 L 697, 472 L 691, 469 L 689, 466 L 697, 466 L 698, 463 L 695, 460 L 680, 455 L 672, 447 L 677, 438 L 677, 435 L 671, 430 L 662, 426 z"]
    }],
    location11_4356: [{
        paths: ["M 834, 468 L 836, 474 L 842, 479 L 848, 480 L 854, 486 L 860, 486 L 875, 493 L 881, 491 L 887, 492 L 893, 489 L 920, 493 L 935, 491 L 959, 484 L 1001, 479 L 1008, 470 L 1035, 458 L 1050, 448 L 1050, 445 L 1048, 442 L 1042, 440 L 1027, 438 L 1024, 426 L 1017, 418 L 1008, 417 L 1002, 413 L 996, 413 L 990, 407 L 978, 409 L 969, 408 L 966, 406 L 961, 397 L 952, 393 L 940, 393 L 931, 396 L 919, 396 L 913, 394 L 907, 397 L 889, 396 L 883, 398 L 874, 410 L 872, 422 L 864, 430 L 858, 434 L 855, 434 L 844, 442 L 842, 457 L 835, 466 z"]
    }],
    location12_4356: [{
        paths: ["M 166, 611 L 166, 620 L 169, 621 L 181, 620 L 184, 622 L 187, 621 L 196, 623 L 201, 619 L 204, 619 L 205, 622 L 203, 625 L 206, 627 L 215, 625 L 224, 630 L 233, 630 L 235, 628 L 244, 627 L 246, 625 L 237, 618 L 238, 615 L 247, 617 L 259, 616 L 264, 625 L 270, 627 L 279, 621 L 282, 615 L 297, 619 L 306, 617 L 318, 619 L 319, 617 L 313, 614 L 307, 608 L 308, 602 L 310, 600 L 322, 598 L 328, 600 L 328, 597 L 319, 591 L 319, 585 L 324, 580 L 333, 582 L 344, 577 L 336, 569 L 321, 564 L 312, 555 L 306, 552 L 297, 544 L 291, 548 L 276, 538 L 267, 526 L 259, 511 L 256, 508 L 253, 508 L 235, 524 L 220, 531 L 212, 539 L 209, 545 L 204, 566 L 198, 575 L 195, 577 L 193, 583 L 187, 592 L 177, 603 L 171, 606 L 169, 609 z"]
    }],
    location13_4356: [{
        paths: ["M 332, 540 L 338, 531 L 341, 531 L 352, 525 L 351, 519 L 357, 514 L 360, 509 L 366, 505 L 375, 507 L 379, 501 L 391, 495 L 392, 489 L 395, 487 L 395, 481 L 383, 490 L 374, 487 L 371, 481 L 377, 476 L 386, 474 L 387, 472 L 385, 469 L 391, 464 L 394, 466 L 396, 472 L 402, 474 L 407, 471 L 409, 474 L 411, 480 L 408, 486 L 412, 492 L 411, 495 L 408, 496 L 412, 502 L 418, 501 L 424, 503 L 436, 497 L 439, 491 L 433, 487 L 436, 481 L 435, 472 L 430, 467 L 433, 458 L 436, 455 L 439, 455 L 447, 467 L 443, 472 L 451, 484 L 451, 487 L 456, 492 L 465, 491 L 468, 494 L 469, 503 L 464, 508 L 467, 509 L 469, 506 L 472, 507 L 475, 516 L 470, 521 L 464, 517 L 458, 519 L 456, 522 L 447, 527 L 447, 533 L 450, 536 L 456, 533 L 462, 537 L 471, 532 L 480, 531 L 481, 528 L 490, 523 L 493, 523 L 499, 516 L 505, 517 L 508, 519 L 513, 531 L 518, 537 L 519, 543 L 522, 545 L 528, 554 L 522, 560 L 516, 562 L 515, 559 L 512, 558 L 510, 555 L 513, 550 L 504, 553 L 502, 556 L 496, 555 L 487, 562 L 483, 557 L 477, 555 L 471, 557 L 462, 550 L 460, 553 L 457, 554 L 456, 560 L 450, 563 L 444, 558 L 447, 549 L 446, 546 L 443, 548 L 440, 547 L 437, 553 L 428, 558 L 422, 557 L 414, 564 L 412, 567 L 412, 573 L 406, 575 L 406, 578 L 404, 580 L 389, 584 L 382, 577 L 384, 574 L 393, 568 L 396, 570 L 399, 569 L 399, 563 L 396, 562 L 384, 571 L 381, 569 L 378, 570 L 376, 573 L 367, 577 L 365, 580 L 360, 576 L 357, 576 L 349, 583 L 346, 583 L 340, 578 L 342, 569 L 344, 566 L 347, 565 L 353, 570 L 356, 568 L 357, 562 L 351, 562 L 345, 557 L 344, 554 L 352, 547 L 364, 552 L 367, 550 L 364, 547 L 364, 541 L 358, 539 L 349, 543 L 347, 546 L 344, 547 L 341, 552 L 338, 550 L 337, 544 L 334, 543 z"]
    }],
    location14_4356: [{
        paths: ["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]
    }],
    location15_4356: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4356: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4356: [{
        paths: ["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]
    }],
    location18_4356: [{
        paths: ["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]
    }],
    location2_4356: [{
        paths: ["M 451, 228 L 463, 242 L 469, 246 L 472, 247 L 481, 241 L 482, 244 L 474, 251 L 480, 255 L 483, 261 L 483, 264 L 480, 267 L 478, 273 L 475, 276 L 466, 272 L 460, 274 L 455, 279 L 456, 282 L 461, 286 L 458, 292 L 461, 294 L 473, 293 L 476, 295 L 482, 291 L 488, 292 L 489, 298 L 500, 304 L 502, 298 L 508, 294 L 511, 294 L 517, 298 L 526, 296 L 535, 300 L 538, 299 L 543, 295 L 536, 283 L 541, 278 L 539, 275 L 541, 272 L 538, 266 L 547, 269 L 550, 272 L 552, 281 L 544, 288 L 548, 294 L 554, 297 L 557, 294 L 569, 292 L 578, 297 L 587, 293 L 593, 293 L 611, 299 L 623, 294 L 626, 292 L 626, 289 L 629, 289 L 633, 294 L 638, 290 L 639, 287 L 642, 286 L 642, 283 L 637, 277 L 631, 273 L 633, 270 L 629, 255 L 617, 247 L 605, 249 L 603, 246 L 616, 236 L 616, 227 L 613, 224 L 607, 224 L 603, 230 L 589, 238 L 586, 238 L 583, 236 L 583, 233 L 589, 230 L 589, 227 L 586, 224 L 577, 221 L 568, 228 L 559, 226 L 553, 214 L 550, 217 L 546, 229 L 552, 233 L 549, 235 L 543, 234 L 537, 238 L 534, 233 L 528, 228 L 522, 227 L 514, 234 L 511, 243 L 496, 238 L 498, 232 L 490, 225 L 484, 222 L 472, 226 L 469, 223 L 460, 221 L 452, 227 z"]
    }],
    location3_4356: [{
        paths: ["M 649, 283 L 652, 280 L 673, 272 L 688, 262 L 697, 259 L 706, 261 L 712, 257 L 730, 256 L 760, 262 L 770, 277 L 772, 283 L 781, 290 L 782, 302 L 776, 311 L 767, 317 L 755, 319 L 754, 322 L 769, 335 L 769, 341 L 754, 347 L 727, 347 L 703, 341 L 688, 335 L 676, 328 L 656, 301 L 650, 286 z"]
    }],
    location4_4356: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 214, 425 L 217, 425 L 218, 421 L 224, 416 L 236, 425 L 254, 446 L 257, 446 L 263, 437 L 269, 434 L 270, 431 L 276, 427 L 282, 432 L 292, 447 L 294, 453 L 303, 455 L 309, 452 L 315, 453 L 319, 447 L 322, 446 L 313, 443 L 312, 441 L 315, 441 L 319, 438 L 325, 438 L 326, 441 L 332, 442 L 344, 442 L 350, 438 L 356, 437 L 355, 434 L 347, 426 L 368, 433 L 380, 432 L 382, 435 L 385, 433 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 399, 427 L 402, 426 L 399, 425 L 398, 422 L 404, 422 L 413, 425 L 416, 423 L 419, 424 L 422, 423 L 423, 420 L 421, 414 L 427, 413 L 422, 408 L 418, 412 L 416, 409 L 417, 407 L 420, 407 L 410, 398 L 401, 394 L 390, 382 L 378, 372 L 372, 371 L 363, 378 L 360, 376 L 343, 359 L 341, 353 L 329, 338 L 318, 346 L 317, 352 L 304, 366 L 295, 354 L 289, 353 L 283, 348 L 281, 342 L 278, 339 L 276, 327 L 273, 326 L 264, 330 L 260, 336 L 248, 345 L 241, 357 L 229, 360 L 221, 371 L 215, 374 L 209, 382 L 200, 387 L 191, 395 L 188, 394 L 185, 396 L 180, 402 L 177, 400 L 174, 402 z"]
    }],
    location5_4356: [{
        paths: ["M 438, 372 L 440, 369 L 446, 366 L 455, 365 L 455, 359 L 450, 354 L 450, 351 L 452, 348 L 461, 344 L 467, 347 L 473, 346 L 476, 348 L 481, 354 L 480, 357 L 482, 366 L 485, 367 L 488, 364 L 491, 364 L 491, 358 L 500, 352 L 500, 346 L 502, 343 L 497, 340 L 499, 334 L 498, 331 L 500, 328 L 495, 323 L 495, 314 L 489, 315 L 480, 307 L 481, 304 L 487, 300 L 493, 298 L 499, 300 L 501, 297 L 507, 294 L 513, 294 L 519, 297 L 525, 295 L 534, 299 L 546, 296 L 558, 303 L 561, 302 L 570, 309 L 570, 312 L 567, 312 L 562, 317 L 562, 323 L 556, 326 L 569, 344 L 569, 347 L 566, 349 L 570, 355 L 566, 361 L 566, 367 L 563, 373 L 575, 389 L 568, 399 L 565, 397 L 562, 398 L 560, 401 L 552, 398 L 551, 400 L 559, 412 L 550, 421 L 543, 414 L 546, 408 L 543, 405 L 537, 405 L 533, 400 L 524, 405 L 524, 411 L 521, 414 L 512, 411 L 511, 417 L 508, 416 L 507, 413 L 489, 405 L 484, 409 L 478, 405 L 484, 393 L 484, 390 L 481, 387 L 478, 387 L 476, 390 L 477, 393 L 471, 403 L 468, 400 L 468, 397 L 465, 398 L 462, 395 L 465, 390 L 464, 387 L 461, 386 L 459, 383 L 450, 381 L 441, 375 z"]
    }],
    location6_4356: [{
        paths: ["M 554, 326 L 568, 344 L 567, 347 L 564, 349 L 568, 355 L 562, 373 L 565, 379 L 573, 387 L 573, 393 L 568, 399 L 566, 405 L 566, 411 L 569, 414 L 575, 412 L 576, 409 L 573, 403 L 575, 401 L 578, 402 L 580, 405 L 583, 405 L 585, 402 L 588, 401 L 590, 403 L 589, 406 L 597, 414 L 600, 414 L 601, 408 L 604, 406 L 604, 397 L 598, 393 L 595, 395 L 592, 394 L 584, 387 L 599, 380 L 608, 388 L 607, 394 L 613, 396 L 619, 401 L 633, 390 L 633, 387 L 638, 382 L 637, 379 L 639, 376 L 642, 378 L 645, 376 L 646, 385 L 652, 387 L 654, 390 L 652, 396 L 657, 400 L 660, 402 L 661, 399 L 667, 396 L 668, 393 L 661, 384 L 655, 381 L 654, 375 L 663, 372 L 663, 381 L 666, 381 L 668, 383 L 668, 386 L 671, 387 L 676, 379 L 677, 370 L 673, 364 L 675, 358 L 681, 353 L 681, 350 L 678, 341 L 676, 338 L 673, 337 L 672, 340 L 666, 345 L 663, 345 L 667, 339 L 658, 334 L 653, 325 L 653, 322 L 650, 319 L 646, 324 L 644, 330 L 641, 326 L 641, 320 L 635, 317 L 632, 318 L 631, 315 L 622, 309 L 615, 309 L 612, 310 L 605, 318 L 596, 322 L 595, 325 L 597, 331 L 600, 330 L 609, 332 L 608, 329 L 610, 326 L 613, 325 L 619, 330 L 622, 330 L 627, 338 L 632, 336 L 631, 333 L 628, 331 L 630, 325 L 629, 322 L 620, 325 L 611, 318 L 611, 315 L 616, 310 L 617, 304 L 611, 299 L 602, 299 L 590, 291 L 578, 297 L 566, 291 L 557, 296 L 556, 299 L 571, 309 L 571, 312 L 565, 312 L 562, 314 L 561, 323 L 555, 325 z"]
    }],
    location7_4356: [{
        paths: ["M 781, 336 L 784, 354 L 804, 378 L 828, 388 L 846, 393 L 876, 394 L 882, 389 L 883, 377 L 880, 371 L 882, 368 L 888, 366 L 900, 366 L 901, 375 L 904, 378 L 913, 382 L 934, 387 L 952, 387 L 958, 385 L 961, 383 L 964, 374 L 959, 362 L 947, 354 L 920, 353 L 922, 347 L 914, 338 L 896, 324 L 894, 315 L 889, 306 L 883, 300 L 877, 297 L 859, 292 L 832, 290 L 811, 294 L 802, 298 L 799, 301 L 798, 307 L 799, 310 L 805, 315 L 804, 318 L 786, 326 L 782, 335 z"]
    }],
    location8_4356: [{
        paths: ["M 144, 491 L 151, 482 L 160, 478 L 165, 472 L 170, 469 L 180, 454 L 186, 451 L 187, 448 L 193, 448 L 199, 442 L 204, 433 L 213, 426 L 223, 415 L 241, 429 L 252, 444 L 255, 446 L 261, 445 L 263, 451 L 262, 463 L 252, 472 L 251, 478 L 245, 487 L 243, 493 L 249, 511 L 236, 524 L 221, 532 L 212, 540 L 210, 543 L 207, 561 L 200, 573 L 194, 579 L 193, 585 L 190, 586 L 187, 580 L 181, 579 L 189, 570 L 187, 567 L 187, 561 L 172, 560 L 171, 557 L 174, 555 L 174, 552 L 168, 550 L 162, 551 L 160, 549 L 163, 547 L 169, 538 L 190, 525 L 190, 520 L 192, 517 L 190, 515 L 184, 515 L 178, 511 L 174, 505 L 168, 506 L 168, 503 L 156, 502 L 153, 500 L 154, 497 L 152, 494 L 146, 493 z"]
    }],
    location9_4356: [{
        paths: ["M 242, 493 L 248, 508 L 257, 509 L 269, 530 L 272, 533 L 278, 533 L 281, 531 L 284, 534 L 279, 539 L 280, 541 L 292, 544 L 295, 543 L 298, 538 L 301, 538 L 304, 541 L 319, 536 L 322, 534 L 322, 531 L 324, 529 L 336, 530 L 339, 529 L 339, 526 L 345, 527 L 345, 524 L 353, 519 L 350, 517 L 348, 511 L 369, 511 L 372, 508 L 375, 509 L 375, 506 L 361, 492 L 361, 489 L 364, 487 L 365, 481 L 368, 479 L 380, 479 L 383, 477 L 392, 476 L 390, 473 L 384, 471 L 383, 468 L 386, 469 L 386, 466 L 371, 458 L 365, 449 L 356, 440 L 350, 437 L 345, 442 L 324, 451 L 314, 462 L 305, 465 L 302, 463 L 294, 451 L 284, 433 L 275, 427 L 261, 440 L 260, 443 L 263, 452 L 263, 461 L 252, 472 L 244, 490 z"]
    }],
    location1_4437: [{
        paths: ["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]
    }],
    location10_4437: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_4437: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_4437: [{
        paths: ["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]
    }],
    location13_4437: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_4437: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_4437: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4437: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4437: [{
        paths: ["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]
    }],
    location18_4437: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_4437: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]
    }],
    location3_4437: [{
        paths: ["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]
    }],
    location4_4437: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_4437: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_4437: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_4437: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_4437: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_4437: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_4446: [{
        paths: ["M 271, 323 L 271, 326 L 274, 326 L 277, 329 L 278, 338 L 283, 344 L 292, 341 L 293, 347 L 291, 350 L 301, 359 L 304, 359 L 305, 356 L 317, 350 L 317, 347 L 328, 338 L 342, 353 L 343, 359 L 349, 357 L 354, 363 L 357, 363 L 359, 365 L 356, 369 L 358, 371 L 367, 374 L 370, 373 L 372, 370 L 378, 372 L 387, 380 L 390, 381 L 401, 393 L 407, 395 L 415, 402 L 421, 401 L 430, 404 L 434, 413 L 436, 411 L 435, 408 L 440, 405 L 448, 408 L 449, 411 L 455, 414 L 458, 418 L 468, 410 L 468, 407 L 465, 404 L 456, 399 L 458, 396 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 463, 373 L 460, 373 L 460, 370 L 465, 367 L 466, 364 L 472, 358 L 469, 340 L 475, 338 L 476, 332 L 464, 326 L 467, 324 L 469, 316 L 477, 312 L 477, 309 L 471, 303 L 475, 295 L 481, 293 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 463, 265 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 255 L 454, 243 L 452, 249 L 449, 251 L 446, 249 L 443, 250 L 438, 245 L 441, 244 L 442, 241 L 439, 238 L 433, 237 L 428, 242 L 430, 245 L 427, 247 L 421, 245 L 415, 247 L 412, 250 L 411, 256 L 408, 257 L 407, 251 L 409, 246 L 400, 242 L 395, 247 L 396, 250 L 399, 251 L 393, 254 L 390, 254 L 388, 251 L 385, 253 L 383, 262 L 381, 264 L 372, 261 L 363, 254 L 351, 258 L 349, 261 L 351, 264 L 360, 268 L 355, 271 L 350, 266 L 347, 268 L 344, 267 L 342, 269 L 328, 261 L 322, 262 L 319, 265 L 321, 270 L 318, 271 L 318, 274 L 324, 276 L 322, 279 L 325, 281 L 331, 279 L 331, 282 L 316, 283 L 315, 280 L 312, 279 L 310, 285 L 304, 285 L 295, 290 L 294, 293 L 297, 295 L 298, 298 L 292, 298 L 286, 302 L 285, 308 L 282, 307 L 279, 301 L 277, 302 L 273, 311 L 278, 318 L 276, 321 L 273, 322 z"]
    }],
    location10_4446: [{
        paths: ["M 662, 422 L 668, 417 L 677, 415 L 680, 409 L 686, 407 L 690, 398 L 695, 392 L 706, 385 L 712, 388 L 722, 400 L 717, 405 L 720, 408 L 720, 414 L 726, 418 L 729, 416 L 731, 410 L 740, 408 L 748, 400 L 757, 396 L 769, 387 L 775, 381 L 778, 375 L 784, 371 L 785, 368 L 791, 363 L 800, 369 L 817, 399 L 825, 408 L 831, 411 L 840, 419 L 849, 421 L 858, 427 L 873, 427 L 873, 433 L 874, 436 L 877, 438 L 877, 441 L 872, 456 L 863, 457 L 857, 460 L 842, 459 L 842, 462 L 836, 467 L 832, 473 L 826, 475 L 814, 473 L 811, 479 L 808, 480 L 793, 476 L 802, 470 L 799, 468 L 793, 470 L 781, 470 L 780, 464 L 777, 465 L 775, 463 L 780, 458 L 778, 456 L 766, 464 L 745, 471 L 739, 471 L 737, 467 L 731, 465 L 728, 462 L 722, 466 L 710, 464 L 709, 459 L 706, 458 L 710, 452 L 708, 450 L 702, 451 L 693, 445 L 693, 442 L 689, 437 L 680, 439 L 677, 437 L 674, 438 L 669, 436 L 671, 432 L 669, 429 L 666, 430 L 663, 428 L 663, 425 z"]
    }],
    location11_4446: [{
        paths: ["M 845, 415 L 851, 411 L 860, 409 L 865, 403 L 886, 389 L 889, 389 L 898, 383 L 904, 377 L 913, 362 L 931, 348 L 943, 362 L 943, 368 L 945, 371 L 948, 373 L 951, 370 L 954, 372 L 968, 396 L 977, 405 L 983, 407 L 989, 412 L 995, 408 L 1001, 414 L 1010, 419 L 1021, 430 L 1036, 434 L 1039, 437 L 1036, 442 L 1030, 444 L 1024, 442 L 1016, 448 L 1016, 454 L 1022, 459 L 1022, 461 L 1013, 464 L 1007, 462 L 1005, 464 L 1011, 473 L 1008, 476 L 1014, 480 L 1012, 482 L 1003, 479 L 1000, 479 L 998, 482 L 995, 482 L 986, 478 L 980, 478 L 977, 481 L 978, 484 L 967, 491 L 961, 487 L 959, 481 L 956, 479 L 947, 480 L 941, 477 L 935, 479 L 929, 478 L 927, 476 L 927, 472 L 925, 469 L 922, 466 L 916, 465 L 914, 468 L 923, 480 L 911, 480 L 905, 484 L 899, 483 L 894, 487 L 888, 485 L 879, 486 L 877, 483 L 874, 485 L 865, 485 L 863, 479 L 857, 481 L 854, 479 L 848, 480 L 858, 472 L 879, 462 L 880, 459 L 878, 457 L 878, 448 L 881, 445 L 882, 439 L 877, 434 L 877, 428 L 883, 423 L 886, 423 L 886, 420 L 877, 421 L 877, 418 L 875, 416 L 857, 415 L 848, 417 z"]
    }],
    location12_4446: [{
        paths: ["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]
    }],
    location13_4446: [{
        paths: ["M 304, 539 L 328, 523 L 344, 508 L 353, 508 L 356, 506 L 374, 512 L 383, 512 L 395, 509 L 407, 511 L 413, 508 L 422, 508 L 440, 513 L 444, 519 L 440, 528 L 443, 531 L 445, 537 L 440, 549 L 419, 560 L 392, 568 L 377, 568 L 365, 575 L 364, 569 L 358, 564 L 346, 561 L 340, 557 L 334, 557 L 320, 546 L 311, 546 L 305, 540 z"]
    }],
    location14_4446: [{
        paths: ["M 492, 546 L 494, 552 L 500, 553 L 500, 556 L 503, 557 L 504, 554 L 510, 552 L 509, 555 L 512, 557 L 506, 559 L 497, 565 L 497, 568 L 503, 572 L 506, 572 L 505, 576 L 507, 578 L 507, 584 L 513, 588 L 513, 591 L 519, 592 L 522, 590 L 527, 593 L 527, 596 L 523, 599 L 528, 603 L 526, 610 L 522, 610 L 522, 603 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 506, 626 L 510, 632 L 513, 632 L 512, 636 L 515, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 640 L 522, 646 L 528, 647 L 532, 638 L 547, 633 L 552, 638 L 560, 641 L 561, 647 L 567, 647 L 568, 650 L 571, 652 L 572, 650 L 570, 648 L 572, 645 L 575, 643 L 581, 646 L 587, 642 L 588, 639 L 586, 637 L 589, 634 L 601, 632 L 604, 633 L 607, 631 L 609, 634 L 618, 629 L 618, 626 L 624, 623 L 626, 620 L 622, 614 L 622, 605 L 618, 600 L 623, 596 L 617, 590 L 623, 585 L 613, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 559 L 610, 556 L 617, 550 L 617, 547 L 608, 540 L 599, 546 L 598, 549 L 600, 552 L 598, 553 L 594, 554 L 590, 548 L 581, 545 L 576, 550 L 577, 553 L 575, 555 L 569, 552 L 563, 555 L 560, 558 L 560, 561 L 565, 564 L 566, 567 L 563, 566 L 557, 569 L 554, 569 L 554, 563 L 551, 561 L 545, 561 L 537, 550 L 532, 558 L 530, 560 L 527, 560 L 524, 559 L 522, 556 L 524, 553 L 521, 550 L 512, 550 L 513, 547 L 511, 544 L 505, 540 L 496, 542 L 494, 545 z"]
    }],
    location15_4446: [{
        paths: ["M 695, 524 L 695, 533 L 698, 542 L 703, 548 L 706, 548 L 706, 551 L 709, 553 L 733, 560 L 735, 563 L 737, 560 L 740, 561 L 741, 564 L 746, 560 L 752, 560 L 791, 573 L 800, 578 L 811, 587 L 817, 589 L 826, 589 L 838, 597 L 853, 597 L 871, 590 L 884, 579 L 896, 561 L 891, 552 L 897, 534 L 894, 516 L 868, 494 L 853, 490 L 844, 491 L 835, 489 L 832, 492 L 814, 492 L 781, 500 L 772, 504 L 757, 504 L 751, 502 L 730, 503 L 718, 501 L 703, 506 L 703, 518 L 697, 522 z"]
    }],
    location16_4446: [{
        paths: ["M 323, 635 L 335, 635 L 338, 637 L 341, 646 L 340, 649 L 331, 653 L 332, 655 L 344, 656 L 347, 659 L 359, 664 L 360, 667 L 351, 670 L 347, 673 L 363, 671 L 378, 679 L 381, 679 L 387, 683 L 399, 687 L 402, 690 L 420, 695 L 420, 698 L 417, 700 L 417, 703 L 429, 699 L 450, 700 L 455, 703 L 455, 709 L 491, 705 L 497, 702 L 508, 691 L 511, 691 L 520, 683 L 529, 679 L 531, 676 L 527, 670 L 518, 667 L 520, 661 L 511, 659 L 512, 653 L 518, 650 L 510, 645 L 503, 636 L 510, 627 L 511, 624 L 509, 615 L 512, 609 L 518, 604 L 520, 598 L 519, 595 L 513, 594 L 504, 589 L 492, 578 L 490, 572 L 484, 567 L 475, 565 L 463, 559 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 434, 569 L 428, 572 L 419, 582 L 419, 585 L 417, 587 L 405, 589 L 399, 594 L 395, 600 L 392, 600 L 383, 608 L 380, 605 L 375, 610 L 369, 612 L 361, 620 L 337, 624 L 333, 629 L 327, 632 z"]
    }],
    location17_4446: [{
        paths: ["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]
    }],
    location18_4446: [{
        paths: ["M 611, 685 L 617, 683 L 617, 668 L 620, 665 L 626, 663 L 631, 657 L 627, 633 L 627, 621 L 623, 612 L 623, 603 L 629, 595 L 630, 586 L 632, 583 L 640, 578 L 639, 575 L 636, 573 L 624, 571 L 623, 568 L 625, 565 L 623, 562 L 629, 559 L 631, 556 L 630, 550 L 633, 547 L 642, 549 L 660, 557 L 696, 562 L 708, 569 L 717, 572 L 722, 578 L 725, 579 L 727, 585 L 732, 590 L 738, 592 L 747, 592 L 771, 601 L 773, 604 L 769, 610 L 771, 616 L 780, 618 L 792, 618 L 793, 621 L 784, 625 L 783, 628 L 786, 634 L 789, 636 L 790, 645 L 787, 650 L 784, 650 L 772, 658 L 765, 667 L 756, 670 L 729, 687 L 727, 690 L 718, 692 L 712, 697 L 700, 701 L 682, 703 L 679, 705 L 664, 704 L 652, 699 L 631, 699 L 619, 691 L 616, 692 L 613, 690 L 613, 687 z"]
    }],
    location2_4446: [{
        paths: ["M 468, 243 L 489, 235 L 495, 225 L 492, 224 L 489, 228 L 492, 233 L 500, 228 L 515, 222 L 524, 224 L 533, 219 L 551, 219 L 560, 222 L 572, 223 L 578, 226 L 577, 229 L 583, 234 L 587, 240 L 587, 243 L 599, 254 L 599, 263 L 591, 274 L 579, 280 L 582, 281 L 581, 284 L 579, 285 L 574, 280 L 571, 281 L 573, 287 L 579, 290 L 587, 298 L 588, 301 L 574, 308 L 541, 307 L 507, 296 L 505, 297 L 505, 301 L 503, 300 L 500, 294 L 491, 286 L 485, 277 L 476, 270 L 474, 272 L 472, 271 L 471, 268 L 474, 267 L 475, 264 L 469, 246 z"]
    }],
    location3_4446: [{
        paths: ["M 602, 289 L 606, 295 L 609, 295 L 616, 301 L 618, 307 L 626, 314 L 628, 311 L 637, 311 L 637, 315 L 640, 315 L 649, 320 L 652, 323 L 652, 326 L 655, 327 L 646, 333 L 645, 336 L 653, 342 L 653, 347 L 657, 351 L 657, 354 L 663, 362 L 663, 368 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 649, 385 L 653, 394 L 656, 395 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 671, 390 L 673, 387 L 671, 384 L 673, 382 L 678, 385 L 678, 391 L 684, 392 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 380 L 705, 380 L 707, 383 L 708, 381 L 714, 379 L 719, 373 L 719, 370 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 771, 341 L 769, 329 L 775, 328 L 775, 325 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 305 L 793, 298 L 794, 295 L 788, 290 L 782, 288 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 787, 279 L 790, 281 L 791, 284 L 794, 284 L 797, 279 L 803, 277 L 804, 274 L 796, 265 L 797, 262 L 795, 259 L 786, 253 L 780, 246 L 774, 243 L 768, 246 L 768, 243 L 771, 238 L 774, 238 L 778, 242 L 779, 239 L 785, 236 L 787, 233 L 786, 230 L 777, 225 L 768, 230 L 767, 236 L 761, 232 L 755, 231 L 753, 225 L 745, 230 L 743, 225 L 734, 220 L 725, 225 L 721, 233 L 721, 237 L 713, 244 L 712, 242 L 716, 237 L 713, 225 L 706, 230 L 703, 228 L 697, 228 L 692, 236 L 686, 233 L 683, 234 L 675, 242 L 672, 239 L 673, 236 L 676, 234 L 675, 228 L 677, 226 L 674, 223 L 668, 222 L 662, 227 L 665, 229 L 663, 232 L 654, 232 L 648, 236 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 229 L 641, 235 L 651, 228 L 646, 222 L 640, 220 L 631, 225 L 627, 237 L 624, 237 L 618, 233 L 615, 235 L 611, 227 L 609, 228 L 605, 237 L 611, 245 L 617, 247 L 619, 250 L 620, 248 L 629, 243 L 635, 251 L 626, 249 L 621, 254 L 621, 258 L 615, 257 L 606, 262 L 604, 265 L 613, 271 L 613, 274 L 617, 274 L 617, 271 L 626, 269 L 624, 275 L 616, 283 L 607, 285 L 604, 288 z"]
    }],
    location4_4446: [{
        paths: ["M 173, 404 L 175, 407 L 187, 406 L 188, 409 L 195, 414 L 194, 417 L 188, 421 L 199, 421 L 198, 427 L 201, 429 L 204, 430 L 219, 426 L 219, 429 L 212, 434 L 222, 433 L 224, 435 L 222, 439 L 229, 439 L 238, 435 L 238, 438 L 231, 443 L 239, 442 L 241, 445 L 250, 450 L 253, 448 L 257, 454 L 266, 454 L 272, 456 L 273, 459 L 276, 461 L 279, 461 L 282, 457 L 294, 455 L 297, 453 L 303, 455 L 306, 452 L 315, 453 L 316, 450 L 322, 446 L 310, 442 L 316, 440 L 317, 437 L 332, 442 L 338, 440 L 344, 442 L 350, 438 L 356, 438 L 358, 436 L 347, 427 L 349, 426 L 364, 433 L 379, 433 L 382, 435 L 385, 433 L 388, 434 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 400, 427 L 403, 428 L 402, 422 L 396, 422 L 399, 425 L 406, 422 L 409, 424 L 418, 424 L 421, 423 L 423, 420 L 418, 411 L 415, 409 L 416, 407 L 419, 407 L 421, 405 L 409, 397 L 403, 396 L 380, 373 L 374, 371 L 368, 373 L 363, 378 L 360, 376 L 342, 359 L 341, 353 L 329, 338 L 318, 346 L 315, 355 L 304, 366 L 294, 354 L 285, 351 L 281, 342 L 278, 339 L 277, 330 L 275, 327 L 265, 330 L 261, 336 L 249, 344 L 242, 356 L 227, 362 L 224, 368 L 215, 374 L 210, 382 L 201, 386 L 193, 394 L 187, 395 L 179, 403 L 176, 400 L 174, 403 z"]
    }],
    location5_4446: [{
        paths: ["M 465, 372 L 467, 378 L 479, 383 L 488, 391 L 497, 391 L 512, 396 L 521, 405 L 530, 411 L 536, 409 L 548, 409 L 563, 403 L 578, 403 L 602, 393 L 611, 393 L 641, 383 L 617, 383 L 608, 381 L 572, 382 L 548, 374 L 538, 362 L 538, 347 L 534, 341 L 528, 338 L 522, 332 L 522, 329 L 510, 335 L 492, 340 L 489, 339 L 483, 343 L 480, 346 L 479, 355 L 474, 361 L 468, 365 L 466, 371 z"]
    }],
    location6_4446: [{
        paths: ["M 523, 330 L 527, 336 L 536, 342 L 538, 345 L 539, 348 L 537, 351 L 537, 357 L 541, 366 L 550, 374 L 556, 375 L 562, 379 L 568, 381 L 604, 380 L 616, 383 L 634, 381 L 640, 383 L 655, 379 L 658, 376 L 658, 370 L 654, 361 L 656, 355 L 644, 345 L 642, 330 L 639, 324 L 633, 318 L 627, 316 L 615, 316 L 609, 313 L 600, 315 L 591, 313 L 576, 313 L 564, 318 L 558, 318 L 552, 322 L 534, 325 L 525, 329 z"]
    }],
    location7_4446: [{
        paths: ["M 708, 386 L 711, 387 L 722, 399 L 721, 402 L 718, 404 L 720, 407 L 720, 413 L 726, 418 L 731, 410 L 737, 409 L 746, 403 L 750, 398 L 756, 396 L 768, 388 L 774, 382 L 777, 376 L 785, 369 L 786, 366 L 792, 362 L 798, 366 L 820, 402 L 826, 408 L 838, 416 L 859, 409 L 867, 401 L 885, 389 L 888, 389 L 897, 383 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 886, 351 L 880, 349 L 876, 337 L 869, 328 L 854, 317 L 849, 311 L 847, 305 L 841, 299 L 835, 297 L 821, 284 L 810, 291 L 808, 297 L 798, 309 L 786, 330 L 780, 335 L 774, 343 L 771, 343 L 758, 358 L 758, 364 L 740, 351 L 730, 362 L 721, 369 L 711, 384 z"]
    }],
    location8_4446: [{
        paths: ["M 153, 487 L 156, 499 L 160, 505 L 174, 519 L 174, 522 L 171, 525 L 173, 543 L 171, 545 L 168, 545 L 168, 548 L 170, 551 L 174, 549 L 174, 552 L 179, 561 L 182, 558 L 194, 555 L 218, 557 L 227, 552 L 239, 548 L 248, 548 L 263, 540 L 281, 541 L 284, 540 L 284, 534 L 296, 528 L 299, 522 L 297, 516 L 290, 507 L 278, 497 L 278, 491 L 242, 479 L 233, 474 L 221, 470 L 212, 469 L 200, 465 L 188, 465 L 176, 469 L 170, 473 L 167, 473 L 161, 477 L 155, 485 z"]
    }],
    location9_4446: [{
        paths: ["M 247, 468 L 248, 474 L 255, 481 L 267, 487 L 276, 489 L 279, 492 L 278, 495 L 283, 501 L 289, 505 L 298, 517 L 299, 526 L 308, 525 L 317, 529 L 329, 522 L 339, 511 L 345, 508 L 360, 506 L 372, 511 L 384, 511 L 390, 509 L 408, 510 L 420, 506 L 419, 503 L 425, 499 L 431, 502 L 434, 499 L 432, 496 L 433, 493 L 430, 491 L 432, 488 L 431, 485 L 428, 483 L 407, 482 L 383, 468 L 359, 462 L 347, 461 L 344, 463 L 329, 463 L 317, 465 L 316, 468 L 310, 471 L 298, 471 L 295, 469 L 292, 470 L 277, 467 L 268, 467 L 265, 469 L 250, 467 z"]
    }],
    location1_4536: [{
        paths: ["M 267, 340 L 278, 331 L 276, 328 L 273, 327 L 272, 324 L 278, 319 L 273, 312 L 278, 300 L 281, 303 L 283, 309 L 285, 307 L 285, 304 L 291, 299 L 297, 298 L 298, 296 L 295, 296 L 292, 293 L 286, 295 L 284, 298 L 281, 297 L 274, 290 L 274, 287 L 277, 284 L 286, 281 L 296, 290 L 302, 286 L 308, 287 L 311, 281 L 314, 280 L 317, 283 L 326, 284 L 332, 282 L 332, 279 L 321, 277 L 318, 275 L 320, 269 L 319, 266 L 321, 263 L 330, 262 L 342, 270 L 345, 267 L 351, 267 L 357, 271 L 360, 269 L 351, 265 L 349, 262 L 350, 259 L 362, 255 L 371, 261 L 380, 263 L 382, 262 L 385, 253 L 388, 249 L 391, 256 L 396, 251 L 394, 248 L 400, 243 L 409, 246 L 407, 252 L 410, 257 L 411, 251 L 414, 248 L 420, 245 L 429, 247 L 428, 244 L 432, 238 L 438, 238 L 441, 240 L 442, 243 L 440, 246 L 442, 249 L 448, 251 L 451, 250 L 455, 244 L 459, 256 L 457, 259 L 448, 264 L 449, 267 L 458, 263 L 464, 266 L 467, 269 L 469, 281 L 475, 284 L 481, 290 L 481, 293 L 478, 296 L 475, 296 L 471, 304 L 477, 310 L 478, 316 L 481, 319 L 483, 325 L 482, 331 L 486, 340 L 485, 343 L 479, 345 L 476, 344 L 472, 339 L 472, 357 L 469, 363 L 463, 369 L 469, 381 L 465, 393 L 456, 399 L 464, 404 L 468, 410 L 460, 417 L 457, 417 L 455, 414 L 452, 414 L 448, 408 L 442, 406 L 439, 406 L 435, 412 L 432, 412 L 428, 415 L 425, 410 L 422, 410 L 417, 404 L 413, 402 L 411, 396 L 412, 392 L 418, 392 L 420, 398 L 419, 402 L 416, 401 L 414, 396 L 409, 392 L 406, 395 L 395, 382 L 389, 383 L 388, 386 L 377, 377 L 377, 372 L 374, 372 L 369, 376 L 360, 374 L 357, 368 L 359, 365 L 353, 366 L 355, 369 L 353, 372 L 350, 371 L 349, 377 L 346, 377 L 344, 369 L 338, 368 L 332, 371 L 330, 374 L 327, 374 L 318, 368 L 315, 369 L 303, 359 L 297, 357 L 295, 354 L 288, 352 L 291, 351 L 290, 356 L 285, 359 L 285, 362 L 282, 362 L 280, 360 L 281, 357 L 279, 354 L 276, 354 L 275, 345 L 269, 343 z"]
    }],
    location10_4536: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_4536: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_4536: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_4536: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_4536: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_4536: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4536: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4536: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_4536: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_4536: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_4536: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_4536: [{
        paths: ["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]
    }],
    location5_4536: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_4536: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_4536: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_4536: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_4536: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_5346: [{
        paths: ["M 271, 324 L 272, 327 L 278, 329 L 278, 338 L 281, 341 L 281, 344 L 287, 342 L 293, 343 L 291, 352 L 302, 360 L 306, 356 L 315, 351 L 318, 346 L 321, 345 L 326, 339 L 329, 339 L 340, 351 L 344, 359 L 350, 358 L 352, 361 L 358, 364 L 357, 367 L 360, 373 L 366, 375 L 372, 371 L 378, 372 L 390, 382 L 401, 394 L 407, 396 L 416, 403 L 422, 401 L 424, 403 L 427, 403 L 430, 405 L 432, 411 L 435, 413 L 435, 407 L 441, 405 L 444, 407 L 447, 406 L 450, 412 L 456, 415 L 458, 418 L 468, 410 L 469, 407 L 457, 399 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 461, 372 L 460, 369 L 466, 366 L 471, 361 L 472, 349 L 469, 340 L 475, 338 L 476, 332 L 470, 327 L 464, 326 L 467, 324 L 467, 321 L 470, 316 L 476, 313 L 478, 310 L 472, 304 L 471, 301 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 466, 267 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 254 L 455, 245 L 453, 245 L 452, 248 L 449, 250 L 443, 250 L 440, 244 L 442, 241 L 440, 238 L 434, 237 L 428, 241 L 430, 244 L 428, 246 L 419, 244 L 411, 251 L 411, 254 L 409, 255 L 407, 249 L 409, 247 L 407, 244 L 398, 244 L 395, 246 L 395, 249 L 398, 251 L 393, 254 L 390, 254 L 388, 251 L 386, 251 L 381, 263 L 372, 261 L 363, 254 L 357, 254 L 349, 261 L 351, 264 L 357, 267 L 357, 270 L 351, 266 L 345, 266 L 343, 269 L 334, 266 L 332, 263 L 323, 261 L 320, 264 L 320, 270 L 317, 272 L 319, 275 L 324, 277 L 323, 280 L 326, 281 L 332, 278 L 332, 281 L 326, 283 L 317, 282 L 312, 279 L 309, 285 L 303, 285 L 294, 291 L 294, 297 L 285, 303 L 285, 306 L 283, 308 L 278, 299 L 274, 308 L 274, 314 L 277, 315 L 278, 318 L 276, 321 L 273, 322 z"]
    }],
    location10_5346: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_5346: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_5346: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_5346: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_5346: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_5346: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_5346: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_5346: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_5346: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_5346: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_5346: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_5346: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]
    }],
    location5_5346: [{
        paths: ["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]
    }],
    location6_5346: [{
        paths: ["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]
    }],
    location7_5346: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_5346: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_5346: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_5436: [{
        paths: ["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]
    }],
    location10_5436: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_5436: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_5436: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_5436: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_5436: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_5436: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_5436: [{
        paths: ["M 322, 635 L 337, 636 L 341, 645 L 341, 648 L 330, 655 L 345, 657 L 360, 666 L 345, 673 L 351, 674 L 360, 671 L 372, 675 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 418, 703 L 436, 699 L 454, 701 L 454, 707 L 456, 710 L 483, 707 L 495, 703 L 501, 699 L 509, 691 L 512, 691 L 520, 684 L 529, 680 L 532, 674 L 518, 666 L 519, 660 L 510, 658 L 513, 652 L 517, 649 L 514, 648 L 503, 636 L 511, 624 L 509, 618 L 510, 612 L 519, 603 L 520, 597 L 503, 588 L 491, 577 L 492, 574 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 417, 587 L 405, 589 L 395, 599 L 392, 599 L 384, 607 L 381, 606 L 376, 609 L 373, 608 L 359, 620 L 338, 623 L 335, 625 L 335, 628 L 326, 632 z"]
    }],
    location17_5436: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_5436: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_5436: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_5436: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_5436: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_5436: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_5436: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_5436: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_5436: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_5436: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location19: [{
        paths: ["M 231, 252 L 300, 289 L 315, 317 L 357, 345 L 313, 395 L 295, 356 L 214, 350 L 163, 317 z"]
    }],
    location20: [{
        paths: ["M 368, 407 L 424, 434 L 510, 434 L 516, 457 L 452, 482 L 381, 539 L 329, 516 L 318, 455 z"]
    }],
    location21: [{
        paths: ["M 157, 340 L 203, 366 L 280, 376 L 299, 407 L 281, 441 L 189, 451 L 135, 442 z"]
    }],
    location22: [{
        paths: ["M 136, 461 L 193, 469 L 278, 462 L 285, 517 L 255, 516 L 154, 562 z"]
    }],
    location23: [{
        paths: ["M 377, 388 L 413, 347 L 467, 329 L 499, 350 L 511, 382 L 527, 395 L 512, 423 L 435, 423 z"]
    }],
    location24: [{
        paths: ["M 298, 243 L 415, 207 L 455, 244 L 482, 264 L 491, 282 L 436, 297 L 387, 321 L 349, 298 L 339, 266 z"]
    }],
    location25: [{
        paths: ["M 434, 203 L 578, 190 L 580, 220 L 559, 241 L 488, 250 L 463, 221 z"]
    }],
    location26: [{
        paths: ["M 605, 194 L 721, 216 L 706, 299 L 621, 274 L 514, 282 L 506, 261 L 568, 254 L 597, 229 z"]
    }],
    location27: [{
        paths: ["M 533, 312 L 601, 305 L 677, 321 L 686, 361 L 666, 383 L 629, 366 L 566, 378 L 538, 347 z"]
    }],
    location28: [{
        paths: ["M 743, 220 L 849, 268 L 779, 287 L 739, 317 L 721, 310 L 733, 261 L 730, 229 z"]
    }],
    location29: [{
        paths: ["M 881, 297 L 925, 348 L 850, 380 L 812, 385 L 787, 348 L 768, 336 L 799, 316 L 848, 308 z"]
    }],
    location30: [{
        paths: ["M 936, 365 L 968, 440 L 824, 442 L 819, 402 L 872, 390 z"]
    }],
    location31: [{
        paths: ["M 964, 455 L 937, 532 L 860, 489 L 817, 489 L 827, 456 L 884, 461 z"]
    }],
    location32: [{
        paths: ["M 703, 394 L 748, 360 L 778, 400 L 788, 454 L 770, 490 L 707, 532 L 664, 501 L 706, 483 L 728, 442 L 723, 414 z"]
    }],
    location33: [{
        paths: ["M 520, 115 L 335, 132 L 197, 179 L 90, 260 L 39, 341 L 29, 448 L 41, 571 L 120, 655 L 246, 747 L 358, 794 L 545, 810 L 664, 810 L 847, 766 L 997, 679 L 1104, 593 L 1116, 455 L 1081, 344 L 993, 246 L 843, 181 L 709, 136 L 525, 115 L 524, 169 L 701, 182 L 877, 237 L 1001, 326 L 1050, 418 L 1053, 524 L 992, 627 L 846, 722 L 703, 764 L 556, 765 L 386, 757 L 261, 711 L 145, 626 L 89, 553 L 77, 418 L 117, 329 L 199, 246 L 280, 200 L 421, 166 L 521, 169 z"]
    }],
    location34: [{
        paths: ["M 920, 547 L 829, 614 L 777, 568 L 741, 553 L 780, 531 L 808, 508 L 847, 506 L 878, 528 z"]
    }],
    location35: [{
        paths: ["M 539, 484 L 572, 498 L 616, 502 L 666, 549 L 607, 553 L 509, 571 L 431, 555 L 469, 532 L 487, 507 z"]
    }],
    location36: [{
        paths: ["M 295, 534 L 356, 570 L 342, 597 L 300, 615 L 265, 640 L 211, 659 L 146, 599 L 186, 567 L 249, 542 z"]
    }],
    location37: [{
        paths: ["M 259, 682 L 331, 652 L 341, 634 L 386, 615 L 396, 582 L 438, 597 L 442, 650 L 467, 697 L 456, 738 L 399, 749 z"]
    }],
    location38: [{
        paths: ["M 594, 589 L 663, 583 L 713, 569 L 726, 579 L 722, 616 L 690, 652 L 632, 660 L 598, 632 z"]
    }],
    location39: [{
        paths: ["M 748, 593 L 815, 658 L 855, 672 L 725, 740 L 703, 714 L 684, 668 L 713, 665 L 742, 635 z"]
    }],
    location40: [{
        paths: ["M 461, 599 L 513, 607 L 569, 597 L 577, 641 L 608, 671 L 656, 677 L 680, 710 L 491, 731 L 490, 687 L 465, 644 z"]
    }],
    location42: [{
        paths: ["M 1116, 755 L 1150, 788 L 1150, 794 L 1151, 802 L 1054, 828 L 1001, 754 L 1065, 746 z"]
    }],
    location43: [{
        paths: ["M 975, 760 L 1035, 840 L 1002, 849 L 928, 850 L 900, 835 L 885, 812 L 910, 786 z"]
    }],
    g31_15_normal: [{
        size: {
            h: 340,
            w: 1108
        },
        paths: ["M 1093.4251,339.95653 1091.5,309.5 l 0,-6 -1,0 0,-5 -1,0 0,-5 -1,0 0,-4 -1,0 0,-3 -1,0 c -0.7,-3.7 -1.3,-7.3 -2,-11 l -1,0 c -0.3,-3 -0.7,-6 -1,-9 l -1,0 0,-3 -1,0 0,-2 -1,0 c -0.7,-3 -1.3,-6 -2,-9 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 0,-3 -1,0 c -0.7,-2 -1.3,-4 -2,-6 l -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-3 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 c -0.3,-1 -0.7,-2 -1,-3 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1 -0.7,-2 -1,-3 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -4.7,-4.3 -9.3,-8.7 -14,-13 -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 c -1,-0.7 -2,-1.3 -3,-2 l 0,-3 c 2.8,-0.7 3.6,-1.9 6,-3 -0.2,-2.6 -0.1,-3.4 -1,-5 l -1,0 0,-15 c 2,-0.6 0.9,0.1 2,-1 l 1,0 c -0.8,-3.3 -12.7,-15.2 -16,-16 -0.8,-3.2 -3.8,-6.2 -7,-7 -1.2,-4.1 -1.7,-1.8 -4,-4 -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 0,-2 c -2.3,-1.7 -4.7,-3.3 -7,-5 -2,-2.3 -4,-4.7 -6,-7 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 -1,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -4.8,-2.7 -14.5,-0.5 -21,-1 -1.7,-0.3 -3.3,-0.7 -5,-1 0,0 -0.7,1.5 -3,1 l 0,-1 -4,0 0,1 -3,0 c -2.1,-0.1 -2,-1 -2,-1 -3.4,-0.9 -6.7,0.6 -9,1 -0.6,2 0.1,0.9 -1,2 l 0,1 -4,0 c -0.7,1 -1.3,2 -2,3 -1.7,0.3 -3.3,0.7 -5,1 -0.7,1 -1.3,2 -2,3 l -3,0 c -3.2,0.6 -4.6,1.7 -6,4 -4.2,-0.5 -7.7,-1.4 -11,-3 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -2,0 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 c -2.3,-0.3 -4.7,-0.7 -7,-1 l 0,-1 -5,0 0,-1 -3,0 0,-1 c -2.7,-0.3 -5.3,-0.7 -8,-1 l 0,-1 -4,0 0,-1 -4,0 0,-1 -4,0 0,-1 -3,0 0,-1 c -4.3,-0.7 -8.7,-1.3 -13,-2 l 0,-1 -3,0 0,-1 c -4,-0.3 -8,-0.7 -12,-1 -8,-2.4 -18.1,-3.6 -26,-6 -4.3,-0.3 -8.7,-0.7 -13,-1 l 0,-1 c -5,-0.3 -10,-0.7 -15,-1 -5.6,-1.7 -14.4,-2.3 -20,-4 l -12,0 0,-1 -14,0 0,-1 -15,0 0,-1 -19,0 0,-1 c -1.7,0.3 -3.3,0.7 -5,1 0,0 -0.6,-1.4 -3,-1 -0.2,0 -0.4,1.3 -2,1 -9.4,-1.7 -31.8,-2.6 -41,0 l -13,0 0,1 c -10,0.3 -20,0.7 -30,1 l 0,1 c -5.3,0.3 -10.7,0.7 -16,1 l 0,1 c -2.4,0.6 -2.7,-1.1 -4,-1 l 0,1 -7,0 0,1 -7,0 0,1 -7,0 0,1 -8,0 0,1 -4,0 0,1 -7,0 0,1 -6,0 0,1 -6,0 0,1 -6,0 0,1 -4,0 0,1 c -3.3,0.3 -6.7,0.7 -10,1 l 0,1 -4,0 0,1 -4,0 0,1 -4,0 0,1 c -3,0.3 -6,0.7 -9,1 l 0,1 -4,0 0,1 -6,0 0,1 -3,0 0,1 -4,0 0,1 -2,0 0,1 -5,0 0,1 -3,0 0,1 -5,0 0,1 -4,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -1.7,0.3 -3.3,0.7 -5,1 l 0,1 c -4.9,-0.4 -4.4,-1.2 -8,-3 l 0,-1 -5,0 c -0.7,-1 -1.3,-2 -2,-3 -1.7,-0.3 -3.3,-0.7 -5,-1 -0.7,-1 -1.3,-2 -2,-3 l -4,0 c -1,-1.3 -2,-2.7 -3,-4 -14.3,0.3 -28.7,0.7 -43,1 -3.1,3.7 -8.6,4.6 -10,10 -3.5,0.9 -9.3,7.4 -12,10 -0.3,0.7 -0.7,1.3 -1,2 -2.9,2.1 -4.9,1.9 -6,6 -4.2,1.1 -5.4,4.4 -8,7 -4.4,4.4 -9,8.1 -13,13 -1,0.3 -2,0.7 -3,1 -1.8,1.3 -3.4,4.3 -4,7 2.7,0.7 2.3,1.4 5,2 l 0,13 c -1,0.3 -2,0.7 -3,1 0.2,5.1 1.5,5.3 5,7 l 0,3 c -5.7,3 -11.3,6 -17,9 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -1,1.3 -2,2.7 -3,4 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -1,1.3 -2,2.7 -3,4 -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.7 -2.7,3.3 -4,5 l -2,0 c -3,3.3 -6,6.7 -9,10 -7,7 -14.1,12.9 -20,21 -2.3,2 -4.7,4 -7,6 l 0,2 c -1.7,1.3 -3.3,2.7 -5,4 l 0,2 c -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 -2,2 0,2 -1,0 0,2 -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,2 -1,0 c -0.3,1.3 -0.7,2.7 -1,4 l -1,0 0,3 -1,0 0,2 -1,0 0,2 -1,0 c -0.7,2 -1.3,4 -2,6 l -1,0 c -0.3,2 -0.7,4 -1,6 l -1,0 0,2 -1,0 0,3 -1,0 0,3 -1,0 0,4 -1,0 0,4 -1,0 0,3 -1,0 c -0.3,2.3 -0.7,4.7 -1,7 l -1,0 c -0.3,2.7 -0.7,5.3 -1,8 l -1,0 0,4 -1,0 0,5 -1,0 0,5 -1,0 0,6 -1,0 0,15 c 0,0.1 -1.4,0.8 -1,3 0,0 1.5,0.9 1,3 l -1,6.34004 -1.308263,3.37077 26.509534,0.20127 c 0.3,-1.7 -0.406991,-1.89111 -0.106991,-3.59111 L 51.5,336.5 l 0,-8 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-5 c 1.3,-0.7 2.7,-1.3 4,-2 l 0,-4 1,0 0,-6 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-4 c 1,-0.7 2,-1.3 3,-2 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 2,0 c 1.7,-3 3.3,-6 5,-9 l 1,0 0,-4 3,0 0,-2 3,0 c 1.1,-2.3 1.8,-3.8 4,-5 l 0,-4 c 5.9,-1.2 12.8,-9.1 15,-14 l 2,0 0,-2 4,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 2,0 0,-3 c 4.3,-0.6 3.4,-2.1 6,-4 l 0,-1 c 1,0.3 2,0.7 3,1 0,0 2.5,-2.7 3,-3 l 0,-3 3,0 0,-2 4,0 0,-2 3,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-3 c 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 3,-6 3,0 0,-1 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 2,-0.7 3,-1 0.7,-1 1.3,-2 2,-3 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 c 2.2,-1.4 1.4,0.4 3,-2 4.2,0.1 5.8,0.2 8,2 0.3,0.7 0.7,1.3 1,2 1.7,0.8 3,-1 3,-1 1,0.3 2,0.7 3,1 0.7,2.7 1.4,2.3 2,5 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 l 0,-3 c 3.3,-0.7 3.8,-1.9 8,-2 0.9,-1.1 -0.1,-0.2 1,-1 l 0,-14 c 0.6,-1.1 4.1,-1.3 5,-2 1.2,-1 0,-2.7 1,-4 l 1,0 0,-2 1,0 0,5 1,0 c 1.3,1.7 2.9,2.2 4,4 1.7,-0.3 3.3,-0.7 5,-1 l 0,-45 c -1,-0.3 -2,-0.7 -3,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1,-0.7 -2,-1.3 -3,-2 1.4,-5.4 5.6,-8.5 8,-13 l 2,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 c 0.9,2.6 -0.1,15 -1,16 l 0,6 c 0.2,0.4 5.2,3.2 6,4 1.3,1.7 2.7,3.3 4,5 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 l 0,1 c 1,0.3 2,0.7 3,1 1.1,1.1 0,0.4 2,1 0.8,-1.3 0.7,-1.2 2,-2 l 0,-13 c 2,0.3 4,0.7 6,1 l 0,2 2,0 0,3 c 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 0.8,-3.2 2.3,-3.8 5,-5 l 0,-1 c 1,0.3 2,0.7 3,1 l 0,-9 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 3,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 0,-1 4,0 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 l 1,0 0,-2 c 1,0.7 2,1.3 3,2 0.7,0.1 7.1,-1.5 8,-2 0.3,-0.7 0.7,-1.3 1,-2 2,-1 3.6,0.5 5,-1 0.3,-1 0.7,-2 1,-3 3.3,0.3 6.7,0.7 10,1 l 0,-1 3,0 0,-1 5,0 c 0.3,-1 0.7,-2 1,-3 1.1,-0.8 1.8,2 2,2 1,-0.3 2,-0.7 3,-1 l 0,-2 c 2,0.3 4,0.7 6,1 l 0,-1 2,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-3 c 1,0.8 1,1.2 2,2 l 0,1 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,0.3 2,0.7 3,1 l 0,-2 c 2,0.3 6.1,1.3 9,0 0.3,-0.7 0.7,-1.3 1,-2 l 8,0 c 6.2,-1.9 14.9,-3.2 21,-5 l 7,0 0,-1 c 4.3,-0.3 8.7,-0.7 13,-1 l 0,-1 c 0.9,0 3.6,1.9 6,1 l 0,-1 2,0 0,-1 9,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.7,0.3 3.3,0.7 5,1 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 10,2.2 13,1 0.3,-0.7 0.7,-1.3 1,-2 l 1,1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 c 1.7,-0.3 1.7,0.9 2,1 l 9,0 c 6.3,-0.3 12.7,-0.7 19,-1 l 12,0 c 0.3,-1 0.7,-2 1,-3 1,0.7 2,1.3 3,2 1,-0.6 -0.9,-0.8 1,-2 l 0,2 c 2.4,-0.6 2.2,-1.1 4,-2 l 0,2 7,0 0,1 52,0 c 5.9,1.7 16,-0.7 22,1 l 0,1 8,0 c 1.9,0.2 2,1 2,1 4.3,-0.3 8.7,-0.7 13,-1 l 0,2 c 16.2,3.2 36.7,3.7 51,9 l 6,0 0,1 9,0 0,1 6,0 0,1 4,0 0,1 c 2.7,0.9 7.8,1 9,0 l 10,0 3,6 7,0 0,1 3,0 0,1 4,0 0,1 c 1.2,0.2 1.8,-1.9 4,-1 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 2,0 0,1 c 1.7,0.5 1.8,-0.9 2,-1 3.8,-0.8 3.1,1.6 4,2 l 5,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 4,0 0,1 3,0 c 4,1.6 5.8,3 12,3 l 0,2 1,0 0,-1 1,0 c 1.6,0.4 1.3,1.6 2,2 l 2,0 0,1 3,0 0,1 2,0 0,1 3,0 0,1 3,0 0,1 3,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 c 2.6,1.3 4.5,3.4 8,4 l 0,8 c 4.4,0.3 4,1.5 8,2 l 0,3 c 2,-0.6 0.9,0.1 2,-1 l 1,0 0,3 c 2.7,-0.8 3.1,-1.6 5,-3 l 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,13 c 1.7,0.3 3.3,0.7 5,1 1.1,-1.3 2.7,-1.8 4,-3 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 0,-1 c 1,-0.7 2,-1.3 3,-2 l 0,-2 1,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-6 -1,0 c -1.7,-5.9 0.6,-14.3 1,-19 l 3,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 0,2 c 0.7,0.3 1.3,0.7 2,1 1.4,2.1 2.5,4.3 3,7 l 1,0 c -1.8,2.9 -5.7,5.7 -9,7 l 0,45 c 1.3,0.1 4,1 4,1 l 0,-1 2,0 0,-1 c 1,-0.3 2,-0.7 3,-1 0.3,-1.3 0.7,-2.7 1,-4 3.7,1 5.1,3.4 8,5 -0.1,3.9 -1,11.8 1,14 l 0,1 c 1.4,-0.8 2,-1 4,0 l 0,1 3,0 0,1 1,0 0,3 c 1,-0.3 2,-0.7 3,-1 0.3,1 0.7,2 1,3 l 2,0 c 0.6,-2 -0.1,-0.9 1,-2 3.1,-5.1 3.3,-0.8 7,-3 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.7 2.7,-1.3 4,-2 1.6,2.4 1.1,0.6 3,2 1,1.3 2,2.7 3,4 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 c 1.3,0.3 2.7,0.7 4,1 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 0,1 6,0 0,1 1,0 c 0.7,2 1.3,4 2,6 2.6,0.5 5.6,1.3 7,3 1.4,1.8 -1,1 2,3 l 0,2 c 3.5,1 5.7,3.8 8,6 0.3,0.7 0.7,1.3 1,2 1.3,0.3 2.7,0.7 4,1 l 0,1 1,0 c 1.9,2.3 -1.1,1.8 3,3 0.6,2.4 0.3,1.9 2,3 0.6,2 -0.1,0.9 1,2 l 0,-2 c 1,0.3 2,0.7 3,1 l 0,5 c 1.7,0.3 3.3,0.7 5,1 l 0,3 1,0 0,1 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,1.7 0.7,3.3 1,5 l 1,0 c 1.3,1.7 2.7,3.3 4,5 l 3,0 0,4 c 4.9,1.3 2.8,2.7 5,6 1,0.7 2,1.3 3,2 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.3,1.7 0.7,3.3 1,5 l 1,0 0,2 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 0,2 1,0 0,3 1.7116,3.41569 c 0.3,1.7 0.9135,3.15768 1.2135,4.85768 l 23.1423,-4e-5 z"]
    }, {
        size: {
            h: 420,
            w: 1108
        },
        offset: {
            y: 340
        },
        z: 43,
        paths: ["m 135.5,140.5 c 9,0 20.7,-0.9 28,1 3,-0.3 6,-0.7 9,-1 l 0,1 8,0 c 2.3,3.7 6,3.3 8,6 l 0,2 c 0.7,0.3 1.3,0.7 2,1 1.7,2 3.3,4 5,6 1,0.3 2,0.7 3,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 c 3,3.3 6,6.7 9,10 l 2,0 c 0.7,1 1.3,2 2,3 0.7,0.3 1.3,0.7 2,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 3.1,2.3 4.8,1.5 6,6 4,1 4.4,3.8 7,6 -0.3,0.6 -2,2 -2,2 l 0,15 c 3.2,0.8 2.9,1.2 3,5 -2.3,1.3 -4.7,2.7 -7,4 0.3,1 0.7,2 1,3 3.3,2 6.7,4 10,6 1.7,0.3 3.3,0.7 5,1 l 0,1 2,0 0,1 3,0 0,1 3,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 3,0 0,1 2,0 0,1 c 3.3,0.7 6.7,1.3 10,2 l 0,1 3,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 4,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 4,0 0,1 5,0 0,1 3,0 0,1 3,0 0,1 c 3,0.3 6,0.7 9,1 l 0,1 3,0 0,1 c 4.3,0.7 8.7,1.3 13,2 l 0,1 c 3,0.3 6,0.7 9,1 l 0,1 7,0 0,1 4,0 0,1 4,0 0,1 4,0 0,1 7,0 c 15.4,4.8 34.1,3.8 48,8 l 14,0 c 14.5,4.2 34,3.6 52,4 5.9,0.1 17,2.9 24,1 l 0,-1 c 3,0.3 6,0.7 9,1 l 9,0 0,-1 1,0 c 2.7,-0.3 3,1 3,1 l 13,0 0,-1 c 1,0.3 2,0.7 3,1 l 27,0 0,-1 19,0 0,-1 1,0 10,0 0,-1 10,0 0,-1 11,0 c 8.8,-2.6 20.5,-2.4 29,-5 8,-0.7 16,-1.3 24,-2 10,-3 22.2,-4.8 32,-8 3.7,-0.3 7.3,-0.7 11,-1 l 0,-1 4,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,-1 3,0 0,-1 3,0 0,-1 c 2.7,-0.3 5.3,-0.7 8,-1 l 0,-1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 3,-0.7 6,-1.3 9,-2 l 0,-1 2,0 0,-1 c 4.3,-1 8.7,-2 13,-3 l 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 0,-6 c -2,-0.7 -4,-1.3 -6,-2 l 0,-5 c 1,-0.3 2,-0.7 3,-1 l 0,-14 -1,0 c -0.8,-1.5 -0.7,-1.7 -1,-4 3.7,-3.3 7.3,-6.7 11,-10 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 2,-2 0,-2 1,0 c 0.7,-1 1.3,-2 2,-3 1,-0.3 2,-0.7 3,-1 4,-4.3 8,-8.7 12,-13 l 2,0 c 1,-1.7 2,-3.3 3,-5 l 2,0 c 4,-4.3 8,-8.7 12,-13 l 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 18,0 0,-1 7,0 0,1 1,0 0,-1 18,0 c 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 l 0,1 c 1.5,0.9 2.4,0.8 5,1 1.3,-5 6.8,-7.7 10,-11 4.3,-4.3 7.4,-9 11,-14 1,-0.7 2,-1.3 3,-2 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1,-0.7 2,-1.3 3,-2 0.7,-2 1.3,-4 2,-6 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 2,-2 0,-2 1,0 0,-2 1,0 0,-2 1,0 0,-2 2,-2 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 0,-3 1,0 0,-3 1,0 0,-3 1,0 0,-4 1,0 0,-3 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l 1,0 c 0.3,-3.3 0.7,-6.7 1,-10 l 1,0 0,-9 c 0.3,-3.3 0.7712,-7.26928 1.0712,-10.56928 l -1.4982,-5.05237 c -0.3,-1.3 -1.2655,-2.13071 -1.5654,-3.43071 l 24.6441,0.0712 0.3596,3.34829 c 0.4,4.4 4.1887,12.03292 3.9887,17.63292 -0.3,1 -0.7,2 -1,3 l 1,0 c 0.3,2 0.7,4 1,6 l 1,0 0,7 -1,0 c 0.3,2.7 0.7,5.3 1,8 l -2,0 c 2.8,7.1 4,13.5 4,24 l -3,0 c 1.3,4 2.7,8 4,12 -0.3,4 -0.7,8 -1,12 -3.8,0 -6.3,0.5 -9,1 0.9,4.9 2.7,10.5 4,15 -0.3,4 -0.7,8 -1,12 l -12,0 c -0.8,1.1 0.1,0.1 -1,1 -0.7,3.3 -1.3,6.7 -2,10 l 1,0 c 1,6.7 2,13.3 3,20 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1.7 -0.7,3.3 -1,5 -4.6,-0.4 -6.4,-1.9 -12,-2 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,3 -1,0 0,2 -1,0 c -0.6,2.1 1,3 1,3 0.7,5 1.3,10 2,15 l -1,0 c -1,4 -4.1,4.9 -6,8 -4.1,-0.8 -5.7,-3.1 -10,-4 -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.1 -1.1,3.7 -2,5 -0.7,0.3 -1.3,0.7 -2,1 -3.2,3.4 -4,5 -4,12 l 1,0 0,6 -1,0 0,2 -1,0 c -1.7,2 -3.3,4 -5,6 l -2,0 0,-1 c -1.7,-0.3 -3.3,-0.7 -5,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.5 -1.3,0.5 -2,1 -7.1,1.9 -5.2,15.1 -5,24 -4.5,1.1 -7.5,4.8 -12,6 l 0,2 c -2.8,-0.7 -2.2,-0.3 -3,-3 -3.4,-0.9 -1.9,-1.3 -4,-3 -3.7,5 -2.8,-0.9 -7,0 l 0,1 c -2,0.7 -4,1.3 -6,2 l 0,1 c -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -3,0.3 -6,0.7 -9,1 l 0,-1 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.7,-1 -1.3,-2 -2,-3 -1,-0.3 -2,-0.7 -3,-1 -0.4,7.3 -1,16.3 -1,25 l 0,8 1,0 0,7 -2,0 0,1 -2,0 0,1 c -0.7,0.3 -1.3,0.7 -2,1 l 0,13 c -1.1,1.1 -0.4,0 -1,2 -1,-0.3 -2,-0.7 -3,-1 l 0,1 c -2.7,1.2 -4.2,1.8 -5,5 l -4,0 c -0.3,1 -0.7,2 -1,3 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -1,0.3 -2,0.7 -3,1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1.8,-1.4 -2,-1.6 -5,-2 -1.9,2.1 -4.6,2.4 -7,4 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -3,0 0,1 -2,0 0,1 -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.6,0.4 -0.8,1.3 -2,2 0.6,3.1 1,6.7 1,11 -5.1,1 -6.8,4.3 -12,5 -1.1,-2.6 -6.5,-10.5 -12,-8 -0.7,1 -1.3,2 -2,3 l -2,0 0,1 -3,0 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 -5,0 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -2.3,0.3 -4.7,0.7 -7,1 -4.6,1.7 -9.7,4.7 -15,6 0.3,4 0.7,8 1,12 -3.1,0.7 -8.3,3.2 -10,2 -2.5,-0.7 -1.6,-0.5 -3,-2 l -1,0 0,-2 c -1.3,-1 -2.7,-2 -4,-3 -0.3,-0.7 -0.7,-1.3 -1,-2 l -3,0 c -1.1,0.9 -5.6,2.5 -8,2 l 0,-1 -4,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,1 -2,0 0,1 c -3.3,0.7 -6.7,1.3 -10,2 l 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -3.7,0.3 -7.3,0.7 -11,1 l 0,1 c -4,0.3 -8,0.7 -12,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,12 c -4.3,0.7 -8.7,1.3 -13,2 -0.7,-3.2 -1.5,-1.9 -2,-3 -0.3,-2.3 -0.7,-4.7 -1,-7 l -1,0 0,-1 -4,0 c -2.7,2.3 -9,0.8 -13,2 l 0,1 -7,0 0,1 -8,0 0,1 -8,0 0,1 -7,0 0,1 c -3,-0.3 -6,-0.7 -9,-1 l 0,1 -3,0 0,1 c -8,0.7 -16,1.3 -24,2 l 0,13 c -4,0.3 -8,0.7 -12,1 l 0,-1 -1,0 c -0.2,-4.9 -1.7,-6.1 -2,-11 -32.7,0.3 -65.3,0.7 -98,1 -1,3.7 -2,7.3 -3,11 l -11,0 c -0.7,-1.9 -1,-3.9 -1,-7 l -1,0 0,-6 c -6,-0.3 -12,-0.7 -18,-1 l 0,-1 c -7.7,-0.3 -15.3,-0.7 -23,-1 l 0,-1 -8,0 0,-1 -7,0 c -7.8,-2.3 -16.1,-2.9 -26,-3 -1.7,3.3 -3.3,6.7 -5,10 l -4,0 0,-1 -8,0 0,-12 -1,0 0,-1 c -6.3,-1 -12.7,-2 -19,-3 l 0,-1 -3,0 0,-1 -6,0 0,-1 c -3.3,-0.3 -6.7,-0.7 -10,-1 l 0,-1 -3,0 0,-1 -4,0 0,-1 -5,0 c -5.4,-1.7 -8.7,-3.8 -16,-4 l -6,9 -12,-3 c -0.1,-4.3 0.4,-7.9 1,-11 l -1,0 0,-1 c -5.6,-0.1 -8.1,-2.6 -12,-4 l -4,0 0,-1 -3,0 c -2.7,-1 -5.3,-2 -8,-3 -0.3,-1.7 -0.7,-3.3 -1,-5 l -3,0 c -0.7,-1 -1.3,-2 -2,-3 l -1,0 0,-2 c -0.6,-0.8 -2,-0.8 -3,-2 -1,0.3 -2,0.7 -3,1 l 0,1 -2,0 c -2.9,1.9 -0.4,3.2 -6,4 -1.5,-1.8 -2.7,-1.9 -6,-2 -2,2.3 -4,4.7 -6,7 l -5,0 c -1.4,-1.4 -5.6,-2.5 -8,-3 0.3,-4 0.7,-8 1,-12 l -1,0 0,-1 -3,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 -2,0 0,-1 -2,0 0,-1 c -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 -2,0 0,-1 -2,0 -2,-2 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2.5,-1.7 -4.4,-2.5 -8,-3 -1.6,2 -4,3.4 -7,4 l 0,-2 -1,0 0,3 c -2.4,0.5 -3.1,1.2 -5,2 l 0,-2 c -1.1,-1.1 -0.4,0 -1,-2 -1,0.3 -2,0.7 -3,1 l 0,-1 c -1.2,-0.9 -1.3,-2.5 -2,-3 -2.7,-1 -5.3,-2 -8,-3 l 0,-13 c -5.1,-2.5 -6.2,-3.2 -6,-11 1.5,-1.7 1,-5.8 1,-9 l 0,-22 c -5,0.5 -6.6,3.2 -10,5 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 l -7,0 0,1 -2,0 c -3.8,1.9 -4.1,3.6 -10,4 -1.7,-2 -4.4,-3 -6,-5 -3,0.7 -6,1.3 -9,2 -1.3,1.7 -2.7,3.3 -4,5 l -1,-1 c -2.4,-1 -3.2,-1.1 -4,-4 -1,-0.3 -2,-0.7 -3,-1 l 0,-1 -2,0 0,-1 c -1,0.3 -2,0.7 -3,1 l 0,-19 c -5.2,-3 -8.7,-10.3 -15,-12 l 0,1 -9,3 c -2.3,-2.7 -4.7,-5.3 -7,-8 0.3,-4.7 0.7,-9.3 1,-14 l -1,0 0,-2 c -1,-0.7 -2,-1.3 -3,-2 l 0,-1 c -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -1.9,-2.6 -3.8,-1.7 -5,-6 -4.3,1 -8.7,2 -13,3 -1.9,-3.3 -4.9,-4.8 -6,-9 l 1,0 0,-6 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.7 -0.7,-3.3 -1,-5 -4.7,0.3 -9.3,0.7 -14,1 -0.8,-3.2 -4.3,-6.3 -3,-11 l 1,0 0,-5 1,0 0,-2 1,0 0,-5 1,0 0,-5 1,0 c 0.9,-3.2 -1.8,-9.7 -3,-11 -1.9,2.1 -0.5,0 -3,1 -3.9,1.5 -6.9,1.4 -9,-2 l -1,0 0,-3 -1,0 0,-3 -1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 0,-3 1,0 c 0.7,-3 1.3,-6 2,-9 -3.7,0.3 -5.5,1.5 -8,-1 -1.1,-1.1 -0.4,0 -1,-2 -3.7,-4 2.4,-17.5 3,-22 l -2,0 c -1.8,-1.2 -1.1,-8 -1,-11 l 1,0 0,-4 1,0 c 0.7,-3 1.3,-6 2,-9 -0.7,-0.3 -1.3,-0.7 -2,-1 0.3,-1 0.7,-2 1,-3 -0.4,-1.4 -1.9,-6.1 -1,-9 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l -2,0 7.03178,-17.61653 0.647244,-3.61652 26.132415,0.40255 -1.710803,3.11334 L 49.8,2.5 c -0.3,2 0.1,4 -0.3,6 -4,10.7 -0.5,25.7 3,35 0.3,2.3 0.7,4.7 1,7 l 1,0 0,5 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,4 c 0.7,0.3 1.3,0.7 2,1 l 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,3 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,2 1,0 0,2 2,2 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 1,0 c 0.3,1 0.7,2 1,3 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 c 2.3,2 4.7,4 7,6 l 0,2 c 4.3,4 8.7,8 13,12 3.2,3.2 3.8,6.7 10,7 0.8,-1.2 0,0 1,-1 1,-1 -0.2,-0.3 1,-1 l 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.7,-1 1.3,-2 2,-3 3.6,-2 4.4,1.5 6,-4 z"]
    }]
};
var Travian = new (function Travian() {}
)();
Travian.app = {
    directives: {}
};
Travian.ServiceArr = [];
Travian.Service = {};
Travian.Interceptor = {};
Travian.Directive = {};
Travian.Filter = {};
Travian.txt = {};
Travian.locale = {};
Travian.htmlFilters = {};
Travian.datetimeFormats = {};
Travian.http = {};
Travian.tick = {};
Travian.Config = Travian.Config || {};
Travian.Globals = Travian.Globals || {};
var module = {
    exports: {}
};
Travian.htmlFilters.i18ndtshortTime = '<span i18ndt="{{_?_}}" format="shortTime"></span>';
Travian.htmlFilters.i18ndt = '<span i18ndt="{{_?_}}" format="mediumTime"></span>';
Travian.htmlFilters.i18ndtshort = '<span i18ndt="{{_?_}}" format="short"></span>';
Travian.htmlFilters.i18ndtdate = '<span i18ndt="{{_?_}}" format="shortDate"></span>';
Travian.htmlFilters.i18ndtMediumDate = '<span i18ndt="{{_?_}}" format="mediumDate"></span>';
Travian.htmlFilters.i18ndtHoursMinutes = '<span i18ndt="{{_?_}}" format="H:mm"></span>';
Travian.htmlFilters.i18ndtOffset = '<span i18ndt="{{_?_}}" format="mediumTime" fast-offset="true"></span>';
Travian.htmlFilters.countdown = '<span countdown="{{_?_}}" callback="{{_?_}}"></span>';
Travian.htmlFilters.daysCountdown = '<span countdown="{{_?_}}" dhms="true"></span>';
Travian.htmlFilters.bold = {
    tag: "b"
};
Travian.htmlFilters.r = "<br />";
Travian.htmlFilters.playerLink = '<player-link class="truncated" playerId="{{_?_}}" playerName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></player-link>';
Travian.htmlFilters.villageLink = '<village-link class="truncated" villageId="{{_?_}}" villageName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></village-link>';
Travian.htmlFilters.kingdomLink = '<kingdom-link class="truncated" kingdomId="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></kingdom-link>';
Travian.htmlFilters.troopLink = '<troop-link trooptype="{{_?_}}"></troop-link>';
Travian.htmlFilters.buildingLink = '<building-link building-type="{{_?_}}"></building-link>';
Travian.htmlFilters.icon = '<i class="icon {{_?_}}"></i>';
Travian.htmlFilters.windowLink = '<translate clickable="openWindow(\'_?_\', {}, null, true)" class="textLink">_?_</translate>';
Travian.htmlFilters.functionLink = '<translate clickable="{{_?_}}" class="textLink">_?_</translate>';
Travian.htmlFilters.linkStart = '<a clickable="{{_?_}}">';
Travian.htmlFilters.linkEnd = "</a>";
Travian.htmlFilters.coords = '<coordinates x="{{_?_}}" y="{{_?_}}"></coordinates>';
Travian.htmlFilters.plainCoords = '<coordinates x="{{_?_}}" y="{{_?_}}" nolink="true"></coordinates>';
Travian.htmlFilters.HHMMSS = "{{_?_|HHMMSS}}";
Travian.htmlFilters.HHMM = "{{_?_|HHMM}}";
Travian.htmlFilters.month = '{{_?_|date:"MMMM"}}';
Travian.htmlFilters.year = '{{_?_|date:"yyyy"}}';
Travian.htmlFilters.fromNow = '<span i18ndt="{{_?_}}" relative="from"></span>';
Travian.htmlFilters.truncate = '<span class="truncated">{{_?_}}</span>';
Travian.htmlFilters.percent = "{{_?_| bidiNumber:'percent':false:false}}";
Travian.htmlFilters.signedPercent = "{{_?_| bidiNumber:'percent':true:false}}";
Travian.htmlFilters.signed = "{{_?_| bidiNumber:'':true:false}}";
Travian.htmlFilters.ratio = '<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_"></span>';
Travian.htmlFilters.ratioStyled = '<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_:true"></span>';
Travian.htmlFilters.translate = '<translate options="{{::_?_}}">?</translate>';
Travian.htmlFilters["short"] = "{{::_?_|shortBigNumber:_?_}}";
Travian.datetimeFormats = {
    0: {
        fullDate: "EEEE, d. MMMM y",
        longDate: "d. MMMM y",
        medium: "dd.MM.yyyy HH:mm:ss",
        mediumDate: "dd.MM.yyyy",
        mediumTime: "HH:mm:ss",
        "short": "dd.MM.yy HH:mm",
        shortDate: "dd.MM.yy",
        shortTime: "HH:mm",
        veryShort: "dd.MM. | HH:mm"
    },
    1: {
        fullDate: "EEEE, MMMM d, y",
        longDate: "MMMM d, y",
        medium: "MM/dd/yyyy h:mm:ss a",
        mediumDate: "MM/dd/yyyy",
        mediumTime: "h:mm:ss a",
        "short": "M/d/yy h:mm a",
        shortDate: "M/d/yy",
        shortTime: "h:mm a",
        veryShort: "MM/dd | HH:mm"
    },
    2: {
        fullDate: "EEEE, d MMMM y",
        longDate: "d MMMM y",
        medium: "dd/MM/yyyy h:mm:ss a",
        mediumDate: "dd/MM/yyyy",
        mediumTime: "h:mm:ss a",
        "short": "dd/MM/yy h:mm a",
        shortDate: "dd/MM/yy",
        shortTime: "h:mm a",
        veryShort: "dd/MM | h:mm a"
    },
    3: {
        fullDate: "EEEE, y MMMM dd",
        longDate: "y MMMM d",
        medium: "yyyy/MM/dd HH:mm:ss",
        mediumDate: "yyyy/MM/dd",
        mediumTime: "HH:mm:ss",
        "short": "yyyy/MM/dd HH:mm",
        shortDate: "yyyy/MM/dd",
        shortTime: "HH:mm",
        veryShort: "MM/dd | HH:mm"
    }
};
String.prototype.trim = function(d) {
    var e = String(this);
    var b, a = 0, c = 0;
    e += "";
    if (!d) {
        b = " \n\r\t\f\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000"
    } else {
        d += "";
        b = d.replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g, "$1")
    }
    a = e.length;
    for (c = 0; c < a; c++) {
        if (b.indexOf(e.charAt(c)) === -1) {
            e = e.substring(c);
            break
        }
    }
    a = e.length;
    for (c = a - 1; c >= 0; c--) {
        if (b.indexOf(e.charAt(c)) === -1) {
            e = e.substring(0, c + 1);
            break
        }
    }
    return b.indexOf(e.charAt(0)) === -1 ? e : ""
}
;
function array_merge_recursive(d, c) {
    for (var b in c) {
        try {
            if (c[b].constructor == Object) {
                d[b] = array_merge_recursive(d[b], c[b])
            } else {
                d[b] = c[b]
            }
        } catch (a) {
            d[b] = c[b]
        }
    }
    return d
}
Number.prototype.toHHMMSS = function(b) {
    var c = Math.max(0, parseInt(this));
    var a = Math.floor(c / 3600);
    var d = Math.floor((c - (a * 3600)) / 60);
    var f = c - (a * 3600) - (d * 60);
    if (a < 10) {
        a = "0" + a
    }
    if (d < 10) {
        d = "0" + d
    }
    var e = a + ":" + d;
    if (!b) {
        if (f < 10) {
            f = "0" + f
        }
        e += ":" + f
    }
    return e
}
;
Number.prototype.toDHHMMSS = function() {
    var a = Travian.translate("daysShort", {
        x: Math.floor(this / 86400)
    });
    a += " " + Travian.translate("hoursShort", {
        x: ("0" + Math.floor(this / 3600) % 24).substr(-2)
    });
    a += " " + Travian.translate("minutesShort", {
        x: ("0" + Math.floor(this / 60) % 60).substr(-2)
    });
    a += " " + Travian.translate("secondsShort", {
        x: ("0" + Math.floor(this % 60)).substr(-2)
    });
    return a
}
;
Number.prototype.digitLength = function() {
    return (Math.floor(Math.log(this) / Math.LN10) + 1)
}
;
String.prototype.ucfirst = function() {
    var a = this.charAt(0).toUpperCase();
    return a + this.substr(1)
}
;
String.prototype.hashCode = function() {
    var c = 0, a, b;
    for (a = 0; a < this.length; a++) {
        b = this.charCodeAt(a);
        c = ((c << 5) - c) + b;
        c |= 0
    }
    return c
}
;
if (!Array.prototype.unique) {
    Object.defineProperty(Array.prototype, "unique", {
        value: function() {
            return this.filter(function(d, c, b) {
                return c == b.indexOf(d)
            })
        },
        enumerable: false
    })
}
var inArray = function(c, b) {
    var a;
    for (a = 0; a < c.length; a++) {
        if (c[a] == b) {
            return true
        }
    }
    return false
};
var keyValueToArray = function(e, c, d) {
    var a = [];
    for (var b in e) {
        var f = {};
        f[c] = b;
        f[d] = e[b];
        a.push(f)
    }
    return a
};
function uniqid(c) {
    if (typeof c === "undefined") {
        c = ""
    }
    var b;
    var a = function(d, e) {
        d = parseInt(d, 10).toString(16);
        if (e < d.length) {
            return d.slice(d.length - e)
        }
        if (e > d.length) {
            return Array(1 + (e - d.length)).join("0") + d
        }
        return d
    };
    if (!this.t5) {
        this.t5 = {}
    }
    if (!this.t5.uniqidSeed) {
        this.t5.uniqidSeed = Math.floor(Math.random() * 123456789)
    }
    this.t5.uniqidSeed++;
    b = c;
    b += a(parseInt(new Date().getTime() / 1000, 10), 8);
    b += a(this.t5.uniqidSeed, 5);
    return b
}
if (!Math.trunc) {
    Math.trunc = function(a) {
        a = +a;
        return (a - a % 1) || (!isFinite(a) || a === 0 ? a : a < 0 ? -0 : 0)
    }
}
;
// Input 0
function y() {
    return function() {}
}
function ba(a) {
    return function() {
        return a
    }
}
window.getClientId = function() {
    Travian.Ve || (Travian.Ve = ka());
    return Travian.Ve
}
;
window.xy2id = function(a, c) {
    return a + 16384 + 32768 * (c + 16384)
}
;
window.id2xy = function(a) {
    return 0 > a || null === a ? new V(0,0) : new V(a % 32768 - 16384,Math.floor(a / 32768) - 16384)
}
;
window.eliminateDuplicates = function(a) {
    for (var c = [], b = {}, f = 0; f < a.length; f++) {
        b.hasOwnProperty(a[f]) || (b[a[f]] = !0,
        c.push(a[f]))
    }
    return c
}
;
window.computedStyle = function(a, c) {
    var b = "";
    document.defaultView && document.defaultView.getComputedStyle ? b = document.defaultView.getComputedStyle(a, "").getPropertyValue(c) : a.currentStyle && (c = c.replace(/\-(\w)/g, function(a, b) {
        return b.toUpperCase()
    }),
    b = a.currentStyle[c]);
    return b
}
;
window.multiObserve = function(a, c, b) {
    for (var f = 0, g = 0; g < c.length; g++) {
        a.$observe(c[g], function(a) {
            "undefined" != typeof a && "" != a && f++;
            f >= c.length && b()
        })
    }
}
;
window.unitIdToNr = function(a) {
    return 1 + (a - 1) % 10
}
;
window.nrToUnitId = function(a, c) {
    return 10 * +(c - 1) + +a
}
;
window.getResourceAllocation = function(a) {
    return {
        wood: a.substring(0, 1),
        clay: a.substring(1, 2),
        iron: a.substring(2, 3),
        crop: a.substring(3)
    }
}
;
window.bytesToSize = function(a, c) {
    return 0 <= a && 1024 > a ? a + " B" : 1024 <= a && 1048576 > a ? (a / 1024).toFixed(c) + " KB" : 1048576 <= a && 1073741824 > a ? (a / 1048576).toFixed(c) + " MB" : 1073741824 <= a && 1099511627776 > a ? (a / 1073741824).toFixed(c) + " GB" : 1099511627776 <= a ? (a / 1099511627776).toFixed(c) + " TB" : a + " B"
}
;
window.getUrlVars = function() {
    var a = [];
    if (-1 == window.location.href.indexOf("?")) {
        return a
    }
    var c = window.location.href.slice(window.location.href.indexOf("?") + 1);
    0 <= c.indexOf("#") && (c = c.slice(0, c.indexOf("#")));
    for (var c = c.split("&"), b = 0, f = c.length; b < f; b++) {
        var g = c[b].split("=");
        1 == g.length && (g[1] = "");
        a[g[0]] = g[1]
    }
    return a
}
;
window.getUrlVar = function(a) {
    var c = getUrlVars();
    return "undefined" != typeof c[a] ? c[a] : null
}
;
window.getDirection = function() {
    return config.direction
}
;
window.getLanguage = function() {
    return config.language
}
;
window.getReadingDirectionFrom = function() {
    return "rtl" == config.direction ? "right" : "left"
}
;
window.getReadingDirectionTo = function() {
    return "rtl" == config.direction ? "left" : "right"
}
;
window.dirVal = function(a, c) {
    a = a || 1;
    return "ltr" == config.direction ? a : c || -a
}
;
window.console || (console = {
    log: y()
});
window.getUnitTribeAndUnitNumber = function(a) {
    a = String(a).split(",");
    var c = -1, b;
    if (1 == a.length) {
        var f = parseInt(a[0])
          , c = Math.floor((f - 1) / 10) + 1;
        b = (f - 1) % 10 + 1
    } else {
        2 == a.length && (c = parseInt(a[0]),
        b = parseInt(a[1]),
        f = 10 * (c - 1) + b)
    }
    return {
        tribeId: c,
        troopId: b,
        unitNumber: f,
        tribeName: {
            1: "roman",
            2: "teuton",
            3: "gaul",
            4: "nature",
            5: "natar"
        }[c]
    }
}
;
var ma = null
  , na = [];
window.doAngularApply = function() {
    Travian.rootScope.$$phase || Travian.rootScope.$apply(function() {
        for (var a = 0; a < na.length; a++) {
            na[a]()
        }
        na = []
    });
    ma = null
}
;
window.requestAngularApply = function(a) {
    null == ma && (ma = window.setTimeout(doAngularApply, 50));
    "function" == typeof a && na.push(a)
}
;
window.getAngularService = function(a) {
    return angular.element(document.body).injector().get(a)
}
;
window.digestScope = function(a) {
    a.$$phase || a.$digest()
}
;
window.hasLocalStorage = function() {
    try {
        return localStorage.setItem("localStorageCheck", "localStorageCheck"),
        localStorage.removeItem("localStorageCheck"),
        !0
    } catch (a) {
        return !1
    }
}
;
window.getLocale = function(a) {
    var c = {
        "default": "en_US",
        ae: "ar_AE",
        br: "pt_BR",
        cl: "es_CL",
        cs: "cs_CZ",
        cz: "cs_CZ",
        de: "de_DE",
        da: "da_DK",
        dk: "da_DK",
        ee: "et_EE",
        en: "en_US",
        es: "es_ES",
        et: "et_EE",
        fi: "fi_FI",
        fr: "fr_FR",
        gb: "en_GB",
        hu: "hu_HU",
        id: "id_ID",
        it: "it_IT",
        lt: "lt_LT",
        lv: "lv_LV",
        nl: "nl_NL",
        no: "no_NO",
        pl: "pl_PL",
        pt: "pt_PT",
        ro: "ro_RO",
        ru: "ru_RU",
        sk: "sk_SK",
        si: "sl_SI",
        sl: "sl_SI",
        se: "sv_SE",
        tr: "tr_TR",
        ua: "uk_UA",
        uk: "en_GB",
        us: "en_US"
    };
    return "undefined" != typeof c[a] ? c[a] : c["default"]
}
;
window.getLocaleLanguage = function(a) {
    return a.toLowerCase().split("_")[0]
}
;
window.getLocaleRegion = function(a) {
    return a.toLowerCase().split("_")[1]
}
;
window.changeLanguage = function(a) {
    "undefined" != typeof config.live && config.live ? $.getScript(Travian.Config.cdnPrefix + "lang/" + a + ".js?v=" + Travian.Config.apiVersion, function() {
        Travian.kg.set(a);
        $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "_quests_version" + Travian.Config.questVersion + ".js?v=" + Travian.Config.apiVersion, function() {
            Travian.rootScope.$broadcast("newTranslation")
        })
    }) : $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "/lang.js", function() {
        Travian.kg.set(a);
        $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "/quests_version" + Travian.Config.questVersion + ".js", function() {
            $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "/inGameHelp.js", function() {
                Travian.rootScope.$broadcast("newTranslation")
            })
        })
    })
}
;
window.escapeHtmlTags = function(a) {
    return a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
}
;
window.getOuterHeightWithMargin = function(a) {
    if (null == a || 0 == a.length) {
        return 0
    }
    for (var c = 0, b = 0; b < a.length; b++) {
        var f = a[b]
          , g = getComputedStyle(f)
          , c = c + (f.offsetHeight + parseInt(g.getPropertyValue("margin-top")) + parseInt(g.getPropertyValue("margin-bottom")))
    }
    return c
}
;
window.copyTextToClipboard = function(a) {
    var c = document.createElement("textarea");
    c.style.position = "fixed";
    c.style.top = 0;
    c.style.left = 0;
    c.style.width = "2em";
    c.style.height = "2em";
    c.style.padding = 0;
    c.style.border = "none";
    c.style.outline = "none";
    c.style.Pj = "none";
    c.style.background = "transparent";
    c.value = a;
    document.body.appendChild(c);
    c.select();
    try {
        document.execCommand("copy")
    } catch (b) {}
    document.body.removeChild(c)
}
;
window.getParent = function(a) {
    if (!a) {
        return angular.qg(this[0].parentNode)
    }
    a = [].slice.call(document.querySelectorAll(a));
    for (var c = this[0], b; "HTML" !== c.nodeName; ) {
        c = c.parentNode,
        -1 !== a.indexOf(c) && (b = c,
        c = document.documentElement)
    }
    return angular.qg(b)
}
;
window.countWatchers = function(a, c) {
    function b(e, c) {
        var f = 0;
        angular.forEach(["$scope", "$isolateScope"], function(a) {
            e.data() && e.data().hasOwnProperty(a) && angular.forEach(e.data()[a].Hj, function(a) {
                g.push(a);
                f++
            })
        });
        angular.forEach(e.children(), function(a) {
            f += b(angular.element(a), c + 1)
        });
        c == a && 0 < f && console.log("Depth " + c + ", watches: " + f + " scope: ", e);
        return f
    }
    void 0 === a && (a = -1);
    var f = null
      , f = c ? angular.element(document.getElementById(c)) : angular.element(document.getElementsByTagName("body"))
      , g = [];
    b(f, 0);
    var e = [];
    angular.forEach(g, function(a) {
        0 > e.indexOf(a) && e.push(a)
    });
    console.log(e.length)
}
;
window.getTotalElementHeight = function(a, c) {
    var b = $(a)
      , f = $(a).after("<div></div>").next();
    f.html(c.replace(/\n/g, "<br>") + ".");
    f.css("line-height", b.css("line-height"));
    f.css("width", b.css("width"));
    f.css("padding-left", b.css("padding-left"));
    f.css("padding-right", b.css("padding-right"));
    f.css("padding-top", b.css("padding-top"));
    f.css("padding-bottom", b.css("padding-bottom"));
    f.css("border-width", b.css("border-left-width"));
    f.css("border-style", b.css("border-left-style"));
    f.css("border-color", b.css("border-left-color"));
    f.css("box-sizing", b.css("box-sizing"));
    f.css("white-space", b.css("white-space"));
    f.css("visibility", "hidden");
    f.css("height", "auto");
    $.browser.msie && f.css("padding-right", parseInt(b.css("padding-right")) + 4 + "px");
    b = f.height();
    f.remove();
    return b
}
;
window.logJsErrorToBackend = function(a, c) {
    var b, f = {
        controller: "error",
        action: "logJavascriptError",
        params: {
            playerId: Travian.Player.data.playerId,
            error: angular.toJson({
                errorUrl: window.location.href,
                error: a,
                cause: c || ""
            })
        }
    };
    "undefined" == typeof config.SERVER_ENV && (config.SERVER_ENV = "devPHP");
    "devPHP" === config.SERVER_ENV ? b = config.devPHPUrl : "live" === config.SERVER_ENV && (b = config.liveUrl);
    var g = new XMLHttpRequest;
    g.open("POST", encodeURI(b + "?c=" + f.controller + "&a=" + f.action + "&t=" + (new Date).getTime()));
    g.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    g.send(JSON.stringify(f))
}
;
window.LOG_TYPE = {
    ERROR: "error",
    WARNING: "warning",
    INFO: "info",
    NOTICE: "notice",
    DEBUG: "debug"
};
window.logToBackend = function(a, c, b, f) {
    var g;
    "object" === typeof c && (Travian.Player && Travian.Player.data.playerId) && (c.playerId = Travian.Player.data.playerId);
    a = {
        controller: "logger",
        action: "logMessage",
        params: {
            message: a,
            prefix: f || "DEBUG",
            logType: b || window.LOG_TYPE.INFO,
            details: JSON.stringify(c)
        }
    };
    config.SERVER_ENV && "devPHP" !== config.SERVER_ENV ? "live" === config.SERVER_ENV && (g = config.liveUrl) : g = config.devPHPUrl;
    c = new XMLHttpRequest;
    c.open("POST", encodeURI(g + "?c=" + a.controller + "&a=" + a.action + "&t=" + Date.now()));
    c.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    c.send(JSON.stringify(a))
}
;
window.getCssStyle = function(a, c, b) {
    function f(a) {
        if (c) {
            if ("object" == typeof c) {
                for (var b = {}, e = 0; e < c.length; e++) {
                    b[c[e]] = a.style[c[e]]
                }
                return b
            }
            return a.style[c]
        }
        b = a.cssText || a.style.cssText;
        0 > b.indexOf(a.selectorText) && (b = a.selectorText + " { " + b + " }");
        return b
    }
    for (var g = window.document.styleSheets, e = 0, h = g.length; e < h; e++) {
        try {
            var m = g[e].cssRules || g[e].rules;
            if (m) {
                for (var l = 0, p = m.length; l < p; l++) {
                    if (b) {
                        if (!(m[l].type != CSSRule.IMPORT_RULE || 0 > m[l].cssText.indexOf(b + ".css"))) {
                            var n = m[l].styleSheet.cssRules;
                            if (n) {
                                for (var q = 0, r = n.length; q < r; q++) {
                                    if (n[q].selectorText == "." + a) {
                                        return f(n[q])
                                    }
                                }
                            }
                        }
                    } else {
                        if (m[l].selectorText == "." + a) {
                            return f(m[l])
                        }
                    }
                }
            }
        } catch (t) {
            if ("SecurityError" !== t.name) {
                throw t;
            }
        }
    }
}
;
window.whichAnimationEventAvailable = null;
window.whichAnimationEvent = function() {
    if (window.whichAnimationEventAvailable) {
        return window.whichAnimationEventAvailable
    }
    var a, c = document.createElement("fakeelement"), b = {
        animation: "animationend",
        OAnimation: "oAnimationEnd",
        MozAnimation: "animationend",
        WebkitAnimation: "webkitAnimationEnd"
    };
    for (a in b) {
        if (void 0 !== c.style[a]) {
            return window.whichAnimationEventAvailable = b[a],
            b[a]
        }
    }
    return !1
}
;
var oa = [];
window.delayUntilAnimationFinish = function(a, c, b) {
    Settings.get(Travian.Player.data.playerId).getSetting("disableAnimations") ? c() : oa[b] = a.$on("animationFinished", function(a, b) {
        if (oa[b]) {
            oa[b](),
            delete oa[b],
            c()
        } else {
            return !1
        }
    })
}
;
window.snakeToCamel = function(a, c) {
    return (c ? a.toLowerCase() : a).replace(/([-_][a-z])/g, function(a) {
        return a.toUpperCase().replace(/[-_]/, "")
    })
}
;
window.digitsToChars = function(a, c) {
    return String(a).split("").reduce(function(a, f) {
        return a + String.fromCharCode(97 + Number(f) * (c || 1))
    }, "")
}
;
String.prototype.trim = function(a) {
    var c = String(this)
      , b = 0
      , f = 0
      , c = c + "";
    a = a ? (a + "").replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g, "$1") : " \n\r\t\f\x0B\u00a0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000";
    b = c.length;
    for (f = 0; f < b; f++) {
        if (-1 === a.indexOf(c.charAt(f))) {
            c = c.substring(f);
            break
        }
    }
    b = c.length;
    for (f = b - 1; 0 <= f; f--) {
        if (-1 === a.indexOf(c.charAt(f))) {
            c = c.substring(0, f + 1);
            break
        }
    }
    return -1 === a.indexOf(c.charAt(0)) ? c : ""
}
;
function pa(a, c) {
    var b = Math.max(0, parseInt(a))
      , f = Math.floor(b / 3600)
      , g = Math.floor((b - 3600 * f) / 60)
      , b = b - 3600 * f - 60 * g;
    10 > f && (f = "0" + f);
    10 > g && (g = "0" + g);
    f = f + ":" + g;
    c || (10 > b && (b = "0" + b),
    f += ":" + b);
    return f
}
function qa(a) {
    var c = Travian.translate("daysShort", {
        x: Math.floor(a / 86400)
    })
      , c = c + (" " + Travian.translate("hoursShort", {
        x: ("0" + Math.floor(a / 3600) % 24).substr(-2)
    }))
      , c = c + (" " + Travian.translate("minutesShort", {
        x: ("0" + Math.floor(a / 60) % 60).substr(-2)
    }));
    return c += " " + Travian.translate("secondsShort", {
        x: ("0" + Math.floor(a % 60)).substr(-2)
    })
}
Array.prototype.unique || Object.defineProperty(Array.prototype, "unique", {
    value: function() {
        return this.filter(function(a, c, b) {
            return c == b.indexOf(a)
        })
    },
    enumerable: !1
});
function ra(a, c) {
    var b;
    for (b = 0; b < a.length; b++) {
        if (a[b] == c) {
            return !0
        }
    }
    return !1
}
function ka(a) {
    function c(a, c) {
        a = parseInt(a, 10).toString(16);
        return c < a.length ? a.slice(a.length - c) : c > a.length ? Array(1 + (c - a.length)).join("0") + a : a
    }
    "undefined" === typeof a && (a = "");
    this.t5 || (this.t5 = {});
    this.t5.ne || (this.t5.ne = Math.floor(123456789 * Math.random()));
    this.t5.ne++;
    a += c(parseInt((new Date).getTime() / 1E3, 10), 8);
    return a += c(this.t5.ne, 5)
}
Math.me || (Math.me = function(a) {
    a = +a;
    return a - a % 1 || (isFinite(a) && 0 !== a ? 0 > a ? -0 : 0 : a)
}
);
var Travian = new (y());
Travian.app = {
    Ze: {}
};
Travian.ServiceArr = [];
Travian.Service = {};
Travian.Interceptor = {};
Travian.Directive = {};
Travian.Filter = {};
Travian.txt = {};
Travian.locale = {};
Travian.htmlFilters = {};
Travian.datetimeFormats = {};
Travian.http = {};
Travian.tick = {};
Travian.Config = Travian.Config || {};
Travian.Globals = Travian.Globals || {};
config.village = {};
config.village.locationPos = [{
    x: null,
    y: null
}, {
    x: 381,
    y: 307,
    z: 1
}, {
    x: 518,
    y: 238,
    z: 1
}, {
    x: 691,
    y: 269,
    z: 1
}, {
    x: 272,
    y: 370,
    z: 1
}, {
    x: 508,
    y: 351,
    z: 1
}, {
    x: 602,
    y: 336,
    z: 1
}, {
    x: 803,
    y: 329,
    z: 1
}, {
    x: 199,
    y: 485,
    z: 1
}, {
    x: 312,
    y: 472,
    z: 1
}, {
    x: 739,
    y: 394,
    z: 1
}, {
    x: 918,
    y: 405,
    z: 1
}, {
    x: 253,
    y: 564,
    z: 1
}, {
    x: 376,
    y: 513,
    z: 1
}, {
    x: 548,
    y: 568
}, {
    x: 795,
    y: 502,
    z: 1
}, {
    x: 433,
    y: 605,
    z: 1
}, {
    x: 559,
    y: 666,
    z: 1
}, {
    x: 680,
    y: 604,
    z: 1
}, {
    x: 260,
    y: 362,
    z: 5
}, {
    x: 383,
    y: 510,
    z: 7
}, {
    x: 190,
    y: 443,
    z: 6
}, {
    x: 181,
    y: 557,
    z: 7
}, {
    x: 451,
    y: 421,
    z: 6
}, {
    x: 402,
    y: 311,
    z: 3
}, {
    x: 519,
    y: 256,
    z: 2
}, {
    x: 658,
    y: 278,
    z: 3
}, {
    x: 608,
    y: 381,
    z: 5
}, {
    x: 789,
    y: 292,
    z: 4
}, {
    x: 848,
    y: 384,
    z: 5
}, {
    x: 951,
    y: 432,
    z: 6
}, {
    x: 964,
    y: 561,
    z: 7
}, {
    x: 726,
    y: 526,
    z: 6
}, {
    x: 509,
    y: 756,
    z: 1,
    z2: 43
}, {
    x: 859,
    y: 622,
    z: 8
}, {
    x: 542,
    y: 572,
    z: 8
}, {
    x: 266,
    y: 622,
    z: 8
}, {
    x: 392,
    y: 689,
    z: 9
}, {
    x: 663,
    y: 652,
    z: 9
}, {
    x: 772,
    y: 710,
    z: 10
}, {
    x: 535,
    y: 688,
    z: 10
}, {
    x: 60,
    y: 471,
    z: 1
}, {
    x: 1083,
    y: 821,
    z: 44
}, {
    x: 952,
    y: 860,
    z: 45
}];
config.village.worldWonderPos = {
    x: 533,
    y: 598,
    z: 6
};
config.village.buildingPoly = {
    0: [66, 12, 75, 13, 82, 14, 84, 15, 86, 16, 87, 17, 89, 18, 90, 19, 91, 20, 94, 21, 95, 22, 95, 23, 95, 24, 96, 25, 96, 26, 97, 27, 98, 28, 98, 29, 99, 30, 100, 31, 101, 32, 101, 33, 101, 34, 101, 35, 101, 36, 101, 37, 101, 38, 101, 39, 101, 40, 101, 41, 101, 42, 101, 43, 101, 44, 101, 45, 100, 46, 100, 47, 100, 48, 100, 49, 100, 50, 100, 51, 100, 52, 100, 53, 99, 54, 99, 55, 99, 56, 99, 57, 98, 58, 98, 59, 98, 60, 97, 61, 96, 62, 96, 63, 94, 64, 93, 65, 92, 66, 90, 67, 89, 68, 88, 69, 87, 70, 85, 71, 82, 72, 80, 73, 76, 74, 67, 75, 63, 75, 43, 74, 39, 73, 37, 72, 34, 71, 32, 70, 30, 69, 29, 68, 27, 67, 26, 66, 25, 65, 24, 64, 23, 63, 22, 62, 21, 61, 21, 60, 20, 59, 19, 58, 19, 57, 18, 56, 18, 55, 18, 54, 17, 53, 17, 52, 16, 51, 16, 50, 15, 49, 15, 48, 15, 47, 15, 46, 15, 45, 15, 44, 15, 43, 15, 42, 15, 41, 16, 40, 16, 39, 16, 38, 16, 37, 17, 36, 17, 35, 17, 34, 18, 33, 19, 32, 19, 31, 19, 30, 19, 29, 19, 28, 20, 27, 21, 26, 23, 25, 23, 24, 24, 23, 26, 22, 27, 21, 28, 20, 30, 19, 33, 18, 35, 17, 37, 16, 40, 15, 46, 14, 50, 13, 56, 12, 66, 12],
    1: [33, 1, 34, 2, 36, 3, 36, 4, 36, 5, 36, 6, 70, 7, 109, 8, 110, 9, 112, 10, 112, 11, 112, 12, 112, 13, 112, 14, 111, 15, 110, 16, 110, 17, 107, 18, 107, 19, 108, 20, 116, 21, 118, 22, 119, 23, 119, 24, 119, 25, 119, 26, 119, 27, 118, 28, 118, 29, 116, 30, 117, 31, 118, 32, 118, 33, 118, 34, 117, 35, 111, 36, 111, 37, 112, 38, 112, 39, 112, 40, 113, 41, 113, 42, 113, 43, 114, 44, 114, 45, 113, 46, 112, 47, 111, 48, 113, 49, 114, 50, 114, 51, 114, 52, 114, 53, 113, 54, 113, 55, 113, 56, 112, 57, 111, 58, 111, 59, 108, 60, 110, 61, 111, 62, 111, 63, 111, 64, 111, 65, 110, 66, 103, 67, 103, 68, 103, 69, 103, 70, 102, 71, 102, 72, 101, 73, 106, 74, 108, 75, 109, 76, 116, 77, 117, 78, 119, 79, 119, 80, 119, 81, 119, 82, 119, 83, 118, 84, 117, 85, 117, 86, 114, 87, 116, 88, 117, 89, 117, 90, 117, 91, 117, 92, 117, 93, 115, 94, 112, 95, 112, 96, 112, 97, 112, 98, 111, 99, 111, 100, 109, 101, 111, 102, 112, 103, 112, 104, 112, 105, 111, 106, 110, 107, 61, 107, 19, 106, 18, 105, 17, 104, 17, 103, 6, 102, 5, 101, 4, 100, 4, 99, 4, 98, 5, 97, 5, 96, 2, 95, 1, 94, 1, 93, 1, 92, 1, 91, 1, 90, 2, 89, 3, 88, 5, 87, 7, 86, 6, 85, 5, 84, 6, 83, 6, 82, 7, 81, 7, 80, 7, 79, 7, 78, 6, 77, 6, 76, 6, 75, 5, 74, 6, 73, 6, 72, 5, 71, 4, 70, 2, 69, 1, 68, 1, 67, 1, 66, 1, 65, 1, 64, 2, 63, 3, 62, 5, 61, 6, 60, 6, 59, 6, 58, 6, 57, 4, 56, 3, 55, 2, 54, 3, 53, 3, 52, 4, 51, 4, 50, 4, 49, 4, 48, 5, 47, 5, 46, 5, 45, 6, 44, 6, 43, 7, 42, 7, 41, 9, 40, 8, 39, 7, 38, 7, 37, 8, 36, 6, 35, 5, 34, 4, 33, 5, 32, 5, 31, 6, 30, 6, 29, 6, 28, 6, 27, 7, 26, 7, 25, 7, 24, 8, 23, 8, 22, 9, 21, 9, 20, 13, 19, 13, 18, 14, 17, 14, 16, 15, 15, 15, 14, 27, 13, 27, 12, 26, 11, 25, 10, 23, 9, 22, 8, 22, 7, 22, 6, 22, 5, 22, 4, 23, 3, 24, 2, 26, 1, 33, 1],
    2: [70, 3, 72, 4, 72, 5, 74, 6, 79, 7, 80, 8, 83, 9, 86, 10, 87, 11, 87, 12, 86, 13, 86, 14, 87, 15, 89, 16, 89, 17, 89, 18, 89, 19, 91, 20, 94, 21, 95, 22, 94, 23, 94, 24, 95, 25, 95, 26, 98, 27, 100, 28, 101, 29, 103, 30, 104, 31, 105, 32, 105, 33, 105, 34, 106, 35, 107, 36, 109, 37, 111, 38, 113, 39, 115, 40, 118, 41, 117, 42, 117, 43, 117, 44, 119, 45, 119, 46, 117, 47, 115, 48, 113, 49, 112, 50, 110, 51, 109, 52, 109, 53, 108, 54, 108, 55, 105, 56, 105, 57, 105, 58, 105, 59, 105, 60, 107, 61, 106, 62, 106, 63, 106, 64, 104, 65, 102, 66, 100, 67, 101, 68, 101, 69, 89, 70, 81, 71, 66, 72, 43, 73, 44, 74, 42, 74, 40, 73, 38, 72, 32, 71, 29, 70, 26, 69, 21, 68, 20, 67, 19, 66, 19, 65, 18, 64, 17, 63, 16, 62, 16, 61, 14, 60, 13, 59, 12, 58, 11, 57, 11, 56, 10, 55, 9, 54, 8, 53, 8, 52, 8, 51, 9, 50, 12, 49, 13, 48, 17, 47, 18, 46, 20, 45, 21, 44, 21, 43, 21, 42, 20, 41, 20, 40, 23, 39, 26, 38, 17, 37, 16, 36, 16, 35, 16, 34, 18, 33, 18, 32, 20, 31, 28, 30, 28, 29, 15, 28, 12, 27, 7, 26, 3, 25, 2, 24, 1, 23, 1, 22, 1, 21, 2, 20, 2, 19, 3, 18, 5, 17, 7, 16, 8, 15, 10, 14, 41, 13, 42, 12, 43, 11, 44, 10, 45, 9, 47, 8, 50, 7, 53, 6, 61, 5, 64, 4, 66, 3, 70, 3],
    3: [70, 1, 70, 2, 71, 3, 71, 4, 72, 5, 73, 6, 73, 7, 74, 8, 74, 9, 74, 10, 74, 11, 74, 12, 75, 13, 75, 14, 76, 15, 76, 16, 77, 17, 77, 18, 78, 19, 79, 20, 79, 21, 81, 22, 82, 23, 82, 24, 83, 25, 83, 26, 84, 27, 85, 28, 96, 29, 97, 30, 98, 31, 99, 32, 100, 33, 101, 34, 102, 35, 103, 36, 104, 37, 104, 38, 105, 39, 107, 40, 108, 41, 110, 42, 111, 43, 112, 44, 113, 45, 113, 46, 114, 47, 114, 48, 115, 49, 116, 50, 117, 51, 117, 52, 117, 53, 117, 54, 117, 55, 116, 56, 115, 57, 116, 58, 116, 59, 115, 60, 115, 61, 114, 62, 114, 63, 114, 64, 114, 65, 116, 66, 116, 67, 117, 68, 117, 69, 117, 70, 118, 71, 118, 72, 119, 73, 118, 74, 118, 75, 118, 76, 118, 77, 118, 78, 116, 79, 114, 80, 112, 81, 112, 82, 112, 83, 111, 84, 110, 85, 108, 86, 107, 87, 107, 88, 108, 89, 73, 90, 73, 91, 34, 92, 31, 92, 29, 91, 28, 90, 28, 89, 15, 88, 15, 87, 13, 86, 11, 85, 9, 84, 9, 83, 7, 82, 6, 81, 5, 80, 4, 79, 5, 78, 5, 77, 6, 76, 6, 75, 6, 74, 4, 73, 4, 72, 4, 71, 4, 70, 5, 69, 1, 68, 1, 67, 0, 66, 1, 65, 1, 64, 1, 63, 2, 62, 3, 61, 2, 60, 0, 59, 0, 58, 0, 57, 3, 56, 8, 55, 8, 54, 9, 53, 12, 52, 5, 51, 6, 50, 7, 49, 7, 48, 8, 47, 9, 46, 9, 45, 8, 44, 9, 43, 9, 42, 9, 41, 10, 40, 10, 39, 10, 38, 11, 37, 12, 36, 13, 35, 14, 34, 15, 33, 17, 32, 18, 31, 18, 30, 19, 29, 19, 28, 20, 27, 20, 26, 20, 25, 21, 24, 21, 23, 22, 22, 23, 21, 25, 20, 26, 19, 27, 18, 28, 17, 28, 16, 29, 15, 30, 14, 31, 13, 31, 12, 32, 11, 33, 10, 33, 9, 34, 8, 35, 7, 36, 6, 38, 5, 39, 4, 40, 3, 41, 2, 42, 1, 70, 1],
    4: [83, 3, 83, 4, 84, 5, 87, 6, 88, 7, 90, 8, 91, 9, 92, 10, 94, 11, 95, 12, 96, 13, 97, 14, 98, 15, 98, 16, 99, 17, 99, 18, 100, 19, 100, 20, 101, 21, 101, 22, 102, 23, 102, 24, 103, 25, 103, 26, 103, 27, 104, 28, 104, 29, 108, 30, 108, 31, 108, 32, 109, 33, 109, 34, 110, 35, 110, 36, 111, 37, 111, 38, 112, 39, 113, 40, 113, 41, 114, 42, 114, 43, 115, 44, 116, 45, 117, 46, 117, 47, 119, 48, 119, 49, 119, 50, 119, 51, 119, 52, 118, 53, 118, 54, 118, 55, 118, 56, 118, 57, 118, 58, 118, 59, 118, 60, 117, 61, 116, 62, 115, 63, 115, 64, 117, 65, 118, 66, 118, 67, 117, 68, 117, 69, 114, 70, 114, 71, 114, 72, 114, 73, 115, 74, 116, 75, 116, 76, 116, 77, 116, 78, 116, 79, 117, 80, 118, 81, 117, 82, 117, 83, 115, 84, 115, 85, 110, 86, 111, 87, 111, 88, 111, 89, 64, 90, 58, 90, 55, 89, 53, 88, 31, 87, 27, 86, 26, 85, 25, 84, 24, 83, 24, 82, 24, 81, 23, 80, 21, 79, 20, 78, 19, 77, 19, 76, 18, 75, 17, 74, 16, 73, 15, 72, 14, 71, 13, 70, 12, 69, 12, 68, 12, 67, 11, 66, 11, 65, 11, 64, 11, 63, 11, 62, 11, 61, 11, 60, 11, 59, 11, 58, 11, 57, 12, 56, 12, 55, 12, 54, 13, 53, 14, 52, 15, 51, 17, 50, 17, 49, 5, 48, 4, 47, 0, 46, 0, 45, 0, 44, 0, 43, 0, 42, 1, 41, 2, 40, 3, 39, 4, 38, 1, 37, 2, 36, 3, 35, 2, 34, 3, 33, 2, 32, 2, 31, 4, 30, 5, 29, 5, 28, 6, 27, 8, 26, 8, 25, 8, 24, 9, 23, 11, 22, 11, 21, 29, 20, 29, 19, 30, 18, 30, 17, 30, 16, 31, 15, 32, 14, 32, 13, 32, 12, 33, 11, 34, 10, 35, 9, 36, 8, 37, 7, 41, 6, 44, 5, 50, 4, 52, 3, 83, 3],
    5: [85, 18, 85, 19, 86, 20, 86, 21, 87, 22, 87, 23, 88, 24, 88, 25, 89, 26, 89, 27, 89, 28, 90, 29, 90, 30, 91, 31, 92, 32, 92, 33, 93, 34, 94, 35, 94, 36, 95, 37, 96, 38, 96, 39, 97, 40, 98, 41, 98, 42, 99, 43, 100, 44, 101, 45, 120, 46, 125, 47, 125, 48, 126, 49, 127, 50, 127, 51, 128, 52, 128, 53, 128, 54, 127, 55, 126, 56, 125, 57, 124, 58, 125, 59, 126, 60, 126, 61, 126, 62, 126, 63, 126, 64, 125, 65, 124, 66, 122, 67, 123, 68, 123, 69, 124, 70, 124, 71, 123, 72, 123, 73, 122, 74, 117, 75, 119, 76, 119, 77, 124, 78, 124, 79, 124, 80, 124, 81, 124, 82, 125, 83, 124, 84, 124, 85, 123, 86, 122, 87, 117, 88, 119, 89, 120, 90, 122, 91, 123, 92, 124, 93, 124, 94, 122, 95, 120, 96, 125, 97, 126, 98, 127, 99, 127, 100, 127, 101, 128, 102, 128, 103, 128, 104, 126, 105, 124, 106, 124, 107, 125, 108, 126, 109, 126, 110, 127, 111, 128, 112, 127, 113, 127, 114, 126, 115, 124, 116, 117, 117, 118, 118, 119, 119, 119, 120, 120, 121, 121, 122, 122, 123, 122, 124, 121, 125, 120, 126, 119, 127, 92, 128, 92, 129, 94, 130, 97, 131, 98, 132, 98, 133, 98, 134, 97, 135, 91, 136, 90, 137, 88, 138, 79, 139, 65, 140, 64, 141, 63, 142, 61, 143, 57, 143, 57, 142, 53, 141, 52, 140, 52, 139, 52, 138, 50, 137, 50, 136, 50, 135, 50, 134, 50, 133, 51, 132, 52, 131, 53, 130, 59, 129, 60, 128, 61, 127, 62, 126, 62, 125, 24, 124, 22, 123, 21, 122, 20, 121, 20, 120, 20, 119, 20, 118, 20, 117, 20, 116, 21, 115, 22, 114, 24, 113, 26, 112, 28, 111, 30, 110, 33, 109, 35, 108, 30, 107, 28, 106, 26, 105, 25, 104, 19, 103, 18, 102, 17, 101, 17, 100, 17, 99, 17, 98, 17, 97, 18, 96, 20, 95, 21, 94, 21, 93, 21, 92, 21, 91, 22, 90, 23, 89, 25, 88, 29, 87, 30, 86, 31, 85, 35, 84, 33, 83, 33, 82, 33, 81, 34, 80, 36, 79, 18, 78, 17, 77, 17, 76, 16, 75, 16, 74, 17, 73, 18, 72, 21, 71, 18, 70, 17, 69, 17, 68, 16, 67, 16, 66, 17, 65, 21, 64, 29, 63, 29, 62, 29, 61, 29, 60, 29, 59, 29, 58, 29, 57, 29, 56, 28, 55, 27, 54, 25, 53, 25, 52, 25, 51, 25, 50, 25, 49, 26, 48, 42, 47, 42, 46, 43, 45, 43, 44, 44, 43, 45, 42, 46, 41, 46, 40, 47, 39, 48, 38, 48, 37, 49, 36, 50, 35, 50, 34, 51, 33, 52, 32, 52, 31, 53, 30, 54, 29, 55, 28, 55, 27, 59, 26, 61, 25, 61, 24, 64, 23, 67, 22, 69, 21, 73, 20, 75, 19, 78, 18, 85, 18],
    6: [64, 23, 65, 24, 66, 25, 68, 26, 70, 27, 71, 28, 73, 29, 76, 30, 79, 31, 81, 32, 83, 33, 87, 34, 91, 35, 95, 36, 95, 37, 95, 38, 95, 39, 95, 40, 95, 41, 96, 42, 97, 43, 97, 44, 97, 45, 98, 46, 99, 47, 99, 48, 100, 49, 101, 50, 102, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 105, 57, 106, 58, 107, 59, 107, 60, 109, 61, 110, 62, 109, 63, 110, 64, 111, 65, 113, 66, 112, 67, 110, 68, 109, 69, 108, 70, 103, 71, 122, 72, 123, 73, 123, 74, 123, 75, 124, 76, 124, 77, 124, 78, 124, 79, 124, 80, 124, 81, 124, 82, 124, 83, 124, 84, 125, 85, 125, 86, 125, 87, 125, 88, 125, 89, 125, 90, 126, 91, 126, 92, 126, 93, 126, 94, 127, 95, 127, 96, 128, 97, 128, 98, 129, 99, 129, 100, 130, 101, 131, 102, 131, 103, 131, 104, 131, 105, 132, 106, 132, 107, 132, 108, 132, 109, 132, 110, 133, 111, 134, 112, 135, 113, 135, 114, 136, 115, 136, 116, 134, 117, 133, 118, 132, 119, 131, 120, 130, 121, 128, 122, 127, 123, 126, 124, 86, 125, 86, 126, 86, 127, 85, 128, 76, 129, 75, 130, 75, 131, 73, 132, 57, 133, 57, 134, 55, 135, 54, 136, 43, 137, 41, 137, 40, 136, 39, 135, 37, 134, 35, 133, 34, 132, 32, 131, 31, 130, 31, 129, 32, 128, 29, 127, 26, 126, 24, 125, 24, 124, 21, 123, 21, 122, 21, 121, 22, 120, 20, 119, 19, 118, 20, 117, 20, 116, 21, 115, 21, 114, 22, 113, 24, 112, 24, 111, 24, 110, 24, 109, 24, 108, 24, 107, 23, 106, 23, 105, 23, 104, 22, 103, 20, 102, 19, 101, 19, 100, 18, 99, 18, 98, 19, 97, 21, 96, 22, 95, 23, 94, 25, 93, 27, 92, 27, 91, 29, 90, 31, 89, 32, 88, 34, 87, 36, 86, 36, 85, 38, 84, 40, 83, 41, 82, 41, 81, 41, 80, 41, 79, 41, 78, 41, 77, 41, 76, 41, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 41, 67, 40, 66, 38, 65, 36, 64, 36, 63, 35, 62, 35, 61, 35, 60, 36, 59, 37, 58, 38, 57, 39, 56, 39, 55, 40, 54, 41, 53, 42, 52, 43, 51, 43, 50, 43, 49, 44, 48, 45, 47, 46, 46, 46, 45, 47, 44, 48, 43, 49, 42, 50, 41, 50, 40, 51, 39, 51, 38, 52, 37, 53, 36, 53, 35, 53, 34, 54, 33, 55, 32, 56, 31, 56, 30, 57, 29, 58, 28, 58, 27, 58, 26, 58, 25, 59, 24, 59, 23, 64, 23],
    7: [47, 33, 49, 34, 49, 35, 108, 36, 109, 37, 110, 38, 111, 39, 111, 40, 112, 41, 113, 42, 114, 43, 115, 44, 115, 45, 116, 46, 117, 47, 118, 48, 119, 49, 119, 50, 120, 51, 121, 52, 121, 53, 122, 54, 123, 55, 125, 56, 126, 57, 126, 58, 127, 59, 127, 60, 128, 61, 129, 62, 130, 63, 131, 64, 132, 65, 131, 66, 131, 67, 131, 68, 129, 69, 127, 70, 127, 71, 127, 72, 127, 73, 127, 74, 127, 75, 127, 76, 127, 77, 127, 78, 127, 79, 127, 80, 126, 81, 126, 82, 131, 83, 133, 84, 136, 85, 137, 86, 137, 87, 138, 88, 138, 89, 140, 90, 141, 91, 142, 92, 142, 93, 142, 94, 142, 95, 143, 96, 144, 97, 144, 98, 144, 99, 144, 100, 144, 101, 144, 102, 140, 103, 140, 104, 140, 105, 139, 106, 136, 107, 136, 108, 137, 109, 136, 110, 135, 111, 133, 112, 133, 113, 132, 114, 127, 115, 127, 116, 127, 117, 120, 118, 119, 119, 118, 120, 118, 121, 118, 122, 117, 123, 107, 124, 107, 125, 107, 126, 108, 127, 108, 128, 108, 129, 108, 130, 108, 131, 108, 132, 101, 133, 94, 134, 94, 135, 94, 136, 94, 137, 94, 138, 93, 139, 73, 139, 73, 138, 72, 137, 72, 136, 72, 135, 53, 134, 45, 133, 37, 132, 31, 131, 26, 130, 23, 129, 22, 128, 19, 127, 15, 126, 14, 125, 14, 124, 11, 123, 9, 122, 8, 121, 9, 120, 6, 119, 5, 118, 4, 117, 4, 116, 3, 115, 3, 114, 3, 113, 4, 112, 4, 111, 5, 110, 6, 109, 7, 108, 8, 107, 7, 106, 7, 105, 7, 104, 8, 103, 9, 102, 11, 101, 11, 100, 11, 99, 12, 98, 13, 97, 12, 96, 11, 95, 12, 94, 16, 93, 17, 92, 17, 91, 17, 90, 17, 89, 16, 88, 16, 87, 16, 86, 16, 85, 17, 84, 18, 83, 20, 82, 23, 81, 35, 80, 36, 79, 37, 78, 37, 77, 37, 76, 37, 75, 37, 74, 37, 73, 37, 72, 37, 71, 37, 70, 37, 69, 37, 68, 37, 67, 37, 66, 37, 65, 37, 64, 37, 63, 37, 62, 37, 61, 37, 60, 37, 59, 38, 58, 38, 57, 38, 56, 38, 55, 38, 54, 38, 53, 38, 52, 38, 51, 38, 50, 38, 49, 38, 48, 38, 47, 38, 46, 38, 45, 39, 44, 38, 43, 38, 42, 38, 41, 38, 40, 39, 39, 39, 38, 39, 37, 39, 36, 39, 35, 40, 34, 41, 33, 47, 33],
    8: [73, 2, 75, 3, 76, 4, 83, 5, 85, 6, 86, 7, 86, 8, 86, 9, 85, 10, 85, 11, 85, 12, 86, 13, 87, 14, 87, 15, 88, 16, 89, 17, 89, 18, 89, 19, 88, 20, 87, 21, 86, 22, 85, 23, 84, 24, 83, 25, 81, 26, 87, 27, 88, 28, 100, 29, 100, 30, 100, 31, 100, 32, 100, 33, 100, 34, 100, 35, 100, 36, 100, 37, 100, 38, 100, 39, 98, 40, 95, 41, 87, 42, 91, 43, 93, 44, 94, 45, 94, 46, 95, 47, 94, 48, 95, 49, 95, 50, 95, 51, 95, 52, 95, 53, 97, 54, 98, 55, 98, 56, 98, 57, 97, 58, 97, 59, 98, 60, 98, 61, 99, 62, 99, 63, 99, 64, 100, 65, 101, 66, 102, 67, 102, 68, 103, 69, 103, 70, 103, 71, 104, 72, 104, 73, 104, 74, 105, 75, 105, 76, 105, 77, 105, 78, 104, 79, 104, 80, 103, 81, 101, 82, 96, 83, 96, 84, 97, 85, 97, 86, 97, 87, 97, 88, 98, 89, 99, 90, 100, 91, 101, 92, 102, 93, 102, 94, 103, 95, 103, 96, 104, 97, 104, 98, 104, 99, 104, 100, 104, 101, 104, 102, 104, 103, 104, 104, 104, 105, 104, 106, 104, 107, 104, 108, 103, 109, 103, 110, 102, 111, 101, 112, 100, 113, 99, 114, 98, 115, 96, 116, 96, 117, 96, 118, 96, 119, 96, 120, 96, 121, 98, 122, 99, 123, 98, 124, 98, 125, 97, 126, 97, 127, 97, 128, 93, 129, 93, 130, 97, 131, 98, 132, 99, 133, 99, 134, 99, 135, 99, 136, 98, 137, 96, 138, 87, 139, 60, 140, 56, 140, 54, 139, 54, 138, 54, 137, 50, 136, 48, 135, 48, 134, 49, 133, 50, 132, 49, 131, 48, 130, 46, 129, 43, 128, 42, 127, 35, 126, 34, 125, 34, 124, 35, 123, 42, 122, 41, 121, 42, 120, 42, 119, 43, 118, 44, 117, 44, 116, 44, 115, 45, 114, 45, 113, 46, 112, 46, 111, 46, 110, 46, 109, 45, 108, 45, 107, 45, 106, 45, 105, 45, 104, 45, 103, 45, 102, 45, 101, 45, 100, 45, 99, 45, 98, 45, 97, 45, 96, 45, 95, 45, 94, 46, 93, 47, 92, 48, 91, 28, 90, 26, 89, 25, 88, 26, 87, 26, 86, 26, 85, 25, 84, 24, 83, 23, 82, 22, 81, 21, 80, 20, 79, 20, 78, 20, 77, 20, 76, 21, 75, 22, 74, 24, 73, 25, 72, 26, 71, 27, 70, 28, 69, 29, 68, 30, 67, 32, 66, 33, 65, 34, 64, 35, 63, 36, 62, 38, 61, 39, 60, 40, 59, 41, 58, 42, 57, 43, 56, 45, 55, 46, 54, 47, 53, 48, 52, 49, 51, 50, 50, 50, 49, 50, 48, 47, 47, 42, 46, 37, 45, 33, 44, 28, 43, 24, 42, 19, 41, 18, 40, 17, 39, 16, 38, 17, 37, 17, 36, 17, 35, 18, 34, 18, 33, 19, 32, 19, 31, 20, 30, 20, 29, 21, 28, 21, 27, 22, 26, 21, 25, 20, 24, 19, 23, 20, 22, 20, 21, 21, 20, 22, 19, 28, 18, 28, 17, 29, 16, 30, 15, 31, 14, 32, 13, 34, 12, 35, 11, 67, 10, 68, 9, 68, 8, 68, 7, 69, 6, 69, 5, 69, 4, 70, 3, 70, 2, 73, 2],
    9: [98, 17, 100, 18, 102, 19, 102, 20, 102, 21, 102, 22, 102, 23, 102, 24, 102, 25, 102, 26, 103, 27, 103, 28, 103, 29, 103, 30, 103, 31, 103, 32, 103, 33, 103, 34, 103, 35, 103, 36, 103, 37, 104, 38, 104, 39, 105, 40, 106, 41, 106, 42, 107, 43, 107, 44, 108, 45, 108, 46, 109, 47, 109, 48, 110, 49, 110, 50, 111, 51, 111, 52, 112, 53, 112, 54, 112, 55, 113, 56, 113, 57, 114, 58, 114, 59, 114, 60, 114, 61, 115, 62, 115, 63, 116, 64, 116, 65, 117, 66, 117, 67, 116, 68, 116, 69, 116, 70, 116, 71, 116, 72, 116, 73, 116, 74, 115, 75, 115, 76, 115, 77, 114, 78, 113, 79, 113, 80, 113, 81, 113, 82, 114, 83, 116, 84, 117, 85, 118, 86, 120, 87, 121, 88, 122, 89, 124, 90, 124, 91, 124, 92, 124, 93, 124, 94, 124, 95, 129, 96, 130, 97, 130, 98, 130, 99, 131, 100, 132, 101, 132, 102, 132, 103, 132, 104, 131, 105, 130, 106, 130, 107, 130, 108, 130, 109, 130, 110, 129, 111, 122, 112, 122, 113, 122, 114, 120, 115, 116, 116, 115, 117, 113, 118, 112, 119, 109, 120, 108, 121, 110, 122, 111, 123, 111, 124, 111, 125, 110, 126, 110, 127, 110, 128, 109, 129, 107, 130, 105, 131, 103, 132, 100, 133, 99, 134, 97, 135, 90, 135, 86, 134, 84, 133, 83, 132, 83, 131, 83, 130, 82, 129, 80, 128, 78, 127, 74, 126, 39, 125, 39, 124, 39, 123, 37, 122, 35, 121, 35, 120, 34, 119, 34, 118, 31, 117, 30, 116, 24, 115, 23, 114, 24, 113, 25, 112, 25, 111, 18, 110, 11, 109, 10, 108, 9, 107, 8, 106, 7, 105, 7, 104, 8, 103, 8, 102, 8, 101, 9, 100, 10, 99, 12, 98, 14, 97, 13, 96, 13, 95, 12, 94, 12, 93, 13, 92, 24, 91, 25, 90, 27, 89, 27, 88, 26, 87, 24, 86, 23, 85, 23, 84, 22, 83, 18, 82, 17, 81, 16, 80, 16, 79, 16, 78, 16, 77, 16, 76, 23, 75, 24, 74, 24, 73, 24, 72, 25, 71, 25, 70, 26, 69, 28, 68, 29, 67, 30, 66, 32, 65, 33, 64, 34, 63, 35, 62, 36, 61, 36, 60, 37, 59, 38, 58, 38, 57, 38, 56, 38, 55, 39, 54, 39, 53, 40, 52, 40, 51, 41, 50, 43, 49, 45, 48, 47, 47, 50, 46, 55, 45, 59, 44, 62, 43, 64, 42, 66, 41, 68, 40, 70, 39, 71, 38, 73, 37, 74, 36, 76, 35, 77, 34, 78, 33, 79, 32, 80, 31, 81, 30, 83, 29, 85, 28, 89, 27, 90, 26, 90, 25, 90, 24, 90, 23, 90, 22, 90, 21, 90, 20, 90, 19, 91, 18, 94, 17, 98, 17],
    10: [106, 32, 106, 33, 107, 34, 107, 35, 108, 36, 108, 37, 108, 38, 109, 39, 109, 40, 110, 41, 110, 42, 111, 43, 111, 44, 112, 45, 112, 46, 113, 47, 113, 48, 114, 49, 114, 50, 115, 51, 115, 52, 116, 53, 119, 54, 119, 55, 119, 56, 120, 57, 120, 58, 120, 59, 120, 60, 120, 61, 120, 62, 121, 63, 121, 64, 122, 65, 122, 66, 123, 67, 124, 68, 123, 69, 123, 70, 123, 71, 121, 72, 120, 73, 119, 74, 118, 75, 118, 76, 118, 77, 118, 78, 119, 79, 119, 80, 119, 81, 119, 82, 119, 83, 119, 84, 119, 85, 119, 86, 119, 87, 119, 88, 119, 89, 120, 90, 120, 91, 120, 92, 120, 93, 120, 94, 119, 95, 119, 96, 119, 97, 120, 98, 120, 99, 121, 100, 121, 101, 121, 102, 121, 103, 121, 104, 121, 105, 121, 106, 121, 107, 121, 108, 123, 109, 123, 110, 123, 111, 123, 112, 123, 113, 123, 114, 123, 115, 123, 116, 121, 117, 121, 118, 121, 119, 121, 120, 121, 121, 121, 122, 121, 123, 121, 124, 121, 125, 121, 126, 121, 127, 120, 128, 98, 129, 98, 130, 98, 131, 98, 132, 98, 133, 98, 134, 98, 135, 97, 136, 96, 137, 95, 138, 90, 139, 87, 139, 69, 138, 68, 137, 67, 136, 66, 135, 65, 134, 65, 133, 47, 132, 45, 131, 44, 130, 44, 129, 43, 128, 41, 127, 39, 126, 38, 125, 33, 124, 32, 123, 31, 122, 31, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 31, 110, 31, 109, 31, 108, 30, 107, 28, 106, 27, 105, 25, 104, 24, 103, 23, 102, 23, 101, 23, 100, 23, 99, 22, 98, 22, 97, 22, 96, 22, 95, 22, 94, 22, 93, 21, 92, 21, 91, 21, 90, 23, 89, 24, 88, 26, 87, 27, 86, 28, 85, 30, 84, 31, 83, 33, 82, 34, 81, 32, 80, 32, 79, 32, 78, 32, 77, 33, 76, 34, 75, 35, 74, 36, 73, 37, 72, 38, 71, 39, 70, 40, 69, 42, 68, 43, 67, 44, 66, 45, 65, 46, 64, 47, 63, 48, 62, 49, 61, 50, 60, 52, 59, 53, 58, 55, 57, 59, 56, 61, 55, 62, 54, 63, 53, 64, 52, 65, 51, 67, 50, 68, 49, 72, 48, 73, 47, 76, 46, 77, 45, 82, 44, 84, 43, 86, 42, 86, 41, 86, 40, 87, 39, 89, 38, 90, 37, 92, 36, 93, 35, 95, 34, 97, 33, 102, 32, 106, 32],
    11: [67, 18, 68, 19, 69, 20, 70, 21, 71, 22, 72, 23, 73, 24, 74, 25, 75, 26, 77, 27, 78, 28, 81, 29, 84, 30, 85, 31, 87, 32, 88, 33, 89, 34, 91, 35, 92, 36, 92, 37, 93, 38, 93, 39, 94, 40, 94, 41, 94, 42, 94, 43, 93, 44, 93, 45, 92, 46, 92, 47, 91, 48, 90, 49, 89, 50, 89, 51, 90, 52, 89, 53, 90, 54, 90, 55, 90, 56, 90, 57, 90, 58, 90, 59, 90, 60, 90, 61, 90, 62, 90, 63, 90, 64, 90, 65, 90, 66, 90, 67, 90, 68, 90, 69, 90, 70, 90, 71, 90, 72, 90, 73, 90, 74, 90, 75, 90, 76, 90, 77, 90, 78, 90, 79, 90, 80, 90, 81, 90, 82, 90, 83, 90, 84, 90, 85, 90, 86, 90, 87, 90, 88, 90, 89, 91, 90, 93, 91, 95, 92, 98, 93, 100, 94, 102, 95, 105, 96, 108, 97, 111, 98, 114, 99, 114, 100, 114, 101, 114, 102, 113, 103, 112, 104, 112, 105, 111, 106, 111, 107, 111, 108, 111, 109, 111, 110, 111, 111, 111, 112, 111, 113, 111, 114, 111, 115, 111, 116, 111, 117, 111, 118, 111, 119, 111, 120, 111, 121, 110, 122, 109, 123, 108, 124, 107, 125, 106, 126, 104, 127, 102, 128, 101, 129, 99, 130, 98, 131, 96, 132, 95, 133, 94, 134, 93, 135, 90, 136, 87, 137, 86, 138, 86, 139, 86, 140, 82, 141, 77, 142, 74, 142, 67, 141, 64, 140, 62, 139, 62, 138, 63, 137, 63, 136, 49, 135, 46, 134, 44, 133, 42, 132, 41, 131, 41, 130, 42, 129, 42, 128, 41, 127, 40, 126, 40, 125, 40, 124, 40, 123, 41, 122, 24, 121, 22, 120, 21, 119, 21, 118, 21, 117, 20, 116, 21, 115, 22, 114, 21, 113, 21, 112, 20, 111, 19, 110, 19, 109, 18, 108, 18, 107, 18, 106, 19, 105, 20, 104, 21, 103, 34, 102, 34, 101, 34, 100, 34, 99, 34, 98, 34, 97, 36, 96, 40, 95, 40, 94, 40, 93, 40, 92, 40, 91, 40, 90, 40, 89, 40, 88, 40, 87, 40, 86, 40, 85, 30, 84, 29, 83, 29, 82, 29, 81, 29, 80, 31, 79, 31, 78, 30, 77, 29, 76, 28, 75, 28, 74, 28, 73, 28, 72, 28, 71, 28, 70, 27, 69, 25, 68, 25, 67, 24, 66, 24, 65, 24, 64, 23, 63, 23, 62, 23, 61, 28, 60, 30, 59, 35, 58, 39, 57, 39, 56, 39, 55, 39, 54, 40, 53, 40, 52, 39, 51, 38, 50, 38, 49, 37, 48, 36, 47, 36, 46, 35, 45, 35, 44, 35, 43, 35, 42, 35, 41, 36, 40, 36, 39, 37, 38, 38, 37, 39, 36, 40, 35, 41, 34, 42, 33, 44, 32, 45, 31, 46, 30, 48, 29, 50, 28, 52, 27, 53, 26, 55, 25, 56, 24, 57, 23, 59, 22, 60, 21, 61, 20, 62, 19, 63, 18, 67, 18],
    13: [47, 34, 101, 35, 102, 36, 103, 37, 103, 38, 103, 39, 103, 40, 103, 41, 103, 42, 103, 43, 103, 44, 103, 45, 103, 46, 104, 47, 104, 48, 104, 49, 103, 50, 104, 51, 106, 52, 104, 53, 104, 54, 106, 55, 106, 56, 107, 57, 106, 58, 107, 59, 108, 60, 108, 61, 109, 62, 110, 63, 110, 64, 110, 65, 111, 66, 111, 67, 110, 68, 111, 69, 111, 70, 111, 71, 111, 72, 111, 73, 113, 74, 115, 75, 117, 76, 119, 77, 120, 78, 122, 79, 124, 80, 126, 81, 128, 82, 130, 83, 132, 84, 134, 85, 134, 86, 134, 87, 133, 88, 132, 89, 131, 90, 131, 91, 131, 92, 131, 93, 131, 94, 131, 95, 131, 96, 131, 97, 136, 98, 137, 99, 137, 100, 137, 101, 138, 102, 138, 103, 139, 104, 140, 105, 140, 106, 139, 107, 138, 108, 138, 109, 138, 110, 138, 111, 138, 112, 136, 113, 136, 114, 133, 115, 135, 116, 135, 117, 134, 118, 130, 119, 127, 120, 127, 121, 127, 122, 126, 123, 125, 124, 127, 125, 127, 126, 126, 127, 125, 128, 126, 129, 127, 130, 126, 131, 128, 132, 128, 133, 127, 134, 125, 135, 119, 136, 118, 137, 111, 138, 106, 139, 79, 139, 73, 138, 72, 137, 65, 136, 63, 135, 62, 134, 61, 133, 61, 132, 59, 131, 56, 130, 51, 129, 49, 128, 48, 127, 47, 126, 29, 125, 27, 124, 26, 123, 25, 122, 25, 121, 25, 120, 25, 119, 25, 118, 26, 117, 28, 116, 31, 115, 30, 114, 29, 113, 26, 112, 19, 111, 18, 110, 15, 109, 14, 108, 13, 107, 14, 106, 12, 105, 12, 104, 12, 103, 12, 102, 13, 101, 12, 100, 12, 99, 8, 98, 7, 97, 7, 96, 8, 95, 6, 94, 5, 93, 5, 92, 6, 91, 6, 90, 8, 89, 11, 88, 11, 87, 13, 86, 13, 85, 13, 84, 13, 83, 13, 82, 13, 81, 13, 80, 13, 79, 13, 78, 13, 77, 13, 76, 13, 75, 13, 74, 13, 73, 13, 72, 12, 71, 11, 70, 9, 69, 9, 68, 9, 67, 10, 66, 11, 65, 12, 64, 14, 63, 14, 62, 15, 61, 15, 60, 16, 59, 17, 58, 18, 57, 19, 56, 20, 55, 21, 54, 21, 53, 22, 52, 32, 51, 32, 50, 32, 49, 33, 48, 33, 47, 33, 46, 33, 45, 33, 44, 34, 43, 34, 42, 35, 41, 35, 40, 35, 39, 36, 38, 37, 37, 39, 36, 42, 35, 43, 34, 47, 34],
    14: [76, 23, 78, 24, 79, 25, 83, 26, 86, 27, 87, 28, 88, 29, 88, 30, 89, 31, 89, 32, 89, 33, 90, 34, 90, 35, 89, 36, 89, 37, 89, 38, 88, 39, 87, 40, 85, 41, 88, 42, 93, 43, 95, 44, 95, 45, 96, 46, 96, 47, 97, 48, 97, 49, 96, 50, 96, 51, 96, 52, 95, 53, 95, 54, 94, 55, 93, 56, 90, 57, 87, 58, 118, 59, 118, 60, 117, 61, 117, 62, 117, 63, 116, 64, 116, 65, 114, 66, 114, 67, 119, 68, 119, 69, 120, 70, 120, 71, 120, 72, 121, 73, 120, 74, 120, 75, 120, 76, 120, 77, 122, 78, 123, 79, 123, 80, 122, 81, 122, 82, 120, 83, 118, 84, 119, 85, 121, 86, 132, 87, 133, 88, 132, 89, 132, 90, 133, 91, 133, 92, 133, 93, 134, 94, 134, 95, 134, 96, 134, 97, 134, 98, 135, 99, 137, 100, 138, 101, 136, 102, 128, 103, 129, 104, 130, 105, 130, 106, 130, 107, 130, 108, 129, 109, 128, 110, 128, 111, 128, 112, 128, 113, 127, 114, 123, 115, 124, 116, 125, 117, 126, 118, 126, 119, 126, 120, 129, 121, 129, 122, 130, 123, 131, 124, 125, 125, 128, 126, 115, 127, 115, 128, 116, 129, 115, 130, 113, 131, 107, 132, 92, 133, 93, 134, 91, 135, 92, 136, 89, 137, 86, 138, 81, 139, 75, 139, 50, 138, 48, 137, 47, 136, 44, 135, 41, 134, 36, 133, 35, 132, 35, 131, 32, 130, 30, 129, 30, 128, 30, 127, 25, 126, 25, 125, 23, 124, 23, 123, 23, 122, 21, 121, 20, 120, 19, 119, 18, 118, 18, 117, 17, 116, 16, 115, 16, 114, 16, 113, 17, 112, 16, 111, 16, 110, 17, 109, 18, 108, 20, 107, 24, 106, 17, 105, 12, 104, 13, 103, 11, 102, 14, 101, 13, 100, 15, 99, 16, 98, 16, 97, 17, 96, 18, 95, 19, 94, 19, 93, 20, 92, 21, 91, 22, 90, 29, 89, 29, 88, 30, 87, 29, 86, 24, 85, 23, 84, 22, 83, 21, 82, 21, 81, 22, 80, 26, 79, 27, 78, 28, 77, 30, 76, 30, 75, 31, 74, 31, 73, 32, 72, 32, 71, 32, 70, 32, 69, 32, 68, 32, 67, 33, 66, 33, 65, 33, 64, 34, 63, 35, 62, 36, 61, 38, 60, 66, 59, 66, 58, 66, 57, 66, 56, 50, 55, 49, 54, 46, 53, 45, 52, 45, 51, 44, 50, 44, 49, 44, 48, 45, 47, 45, 46, 45, 45, 46, 44, 46, 43, 47, 42, 47, 41, 48, 40, 49, 39, 51, 38, 58, 37, 57, 36, 57, 35, 57, 34, 59, 33, 59, 32, 60, 31, 60, 30, 60, 29, 61, 28, 64, 27, 66, 26, 68, 25, 70, 24, 72, 23, 76, 23],
    15: [83, 14, 85, 15, 86, 16, 87, 17, 88, 18, 88, 19, 88, 20, 88, 21, 88, 22, 88, 23, 88, 24, 88, 25, 88, 26, 88, 27, 88, 28, 88, 29, 88, 30, 88, 31, 88, 32, 88, 33, 89, 34, 91, 35, 94, 36, 99, 37, 103, 38, 106, 39, 107, 40, 109, 41, 110, 42, 110, 43, 111, 44, 112, 45, 112, 46, 112, 47, 113, 48, 113, 49, 114, 50, 114, 51, 114, 52, 115, 53, 115, 54, 115, 55, 116, 56, 117, 57, 117, 58, 119, 59, 120, 60, 120, 61, 121, 62, 122, 63, 123, 64, 124, 65, 124, 66, 125, 67, 125, 68, 126, 69, 126, 70, 125, 71, 125, 72, 125, 73, 124, 74, 123, 75, 122, 76, 122, 77, 122, 78, 122, 79, 122, 80, 122, 81, 122, 82, 122, 83, 124, 84, 125, 85, 127, 86, 132, 87, 133, 88, 133, 89, 134, 90, 135, 91, 136, 92, 135, 93, 135, 94, 133, 95, 133, 96, 133, 97, 133, 98, 133, 99, 133, 100, 133, 101, 133, 102, 133, 103, 131, 104, 130, 105, 128, 106, 124, 107, 123, 108, 122, 109, 122, 110, 120, 111, 121, 112, 123, 113, 125, 114, 127, 115, 128, 116, 130, 117, 131, 118, 132, 119, 132, 120, 131, 121, 130, 122, 128, 123, 126, 124, 126, 125, 124, 126, 123, 127, 121, 128, 120, 129, 118, 130, 115, 131, 113, 132, 112, 133, 110, 134, 109, 135, 107, 136, 105, 137, 104, 138, 102, 139, 100, 140, 99, 141, 97, 142, 95, 143, 91, 143, 89, 142, 88, 141, 86, 140, 85, 139, 83, 138, 81, 137, 75, 136, 73, 135, 72, 134, 59, 133, 57, 132, 57, 131, 57, 130, 57, 129, 56, 128, 54, 127, 52, 126, 51, 125, 49, 124, 47, 123, 31, 122, 30, 121, 29, 120, 29, 119, 28, 118, 26, 117, 26, 116, 25, 115, 24, 114, 23, 113, 24, 112, 24, 111, 25, 110, 26, 109, 25, 108, 24, 107, 23, 106, 19, 105, 18, 104, 17, 103, 15, 102, 14, 101, 14, 100, 14, 99, 14, 98, 14, 97, 12, 96, 12, 95, 12, 94, 12, 93, 12, 92, 12, 91, 12, 90, 12, 89, 12, 88, 12, 87, 12, 86, 12, 85, 12, 84, 10, 83, 9, 82, 9, 81, 9, 80, 9, 79, 10, 78, 10, 77, 10, 76, 11, 75, 13, 74, 14, 73, 15, 72, 16, 71, 17, 70, 17, 69, 18, 68, 19, 67, 20, 66, 21, 65, 22, 64, 22, 63, 23, 62, 24, 61, 25, 60, 26, 59, 26, 58, 26, 57, 26, 56, 26, 55, 27, 54, 35, 53, 35, 52, 36, 51, 37, 50, 38, 49, 39, 48, 40, 47, 38, 46, 38, 45, 37, 44, 36, 43, 36, 42, 36, 41, 36, 40, 36, 39, 38, 38, 43, 37, 43, 36, 44, 35, 44, 34, 45, 33, 46, 32, 47, 31, 47, 30, 47, 29, 47, 28, 47, 27, 47, 26, 47, 25, 46, 24, 46, 23, 46, 22, 46, 21, 46, 20, 46, 19, 46, 18, 47, 17, 49, 16, 50, 15, 77, 14, 83, 14],
    16: [110, 1, 110, 2, 113, 3, 115, 4, 119, 5, 121, 6, 128, 7, 131, 8, 134, 9, 137, 10, 139, 11, 143, 12, 144, 13, 144, 14, 144, 15, 143, 16, 142, 17, 138, 18, 138, 19, 138, 20, 137, 21, 138, 22, 139, 23, 140, 24, 139, 25, 138, 26, 138, 27, 138, 28, 138, 29, 138, 30, 138, 31, 138, 32, 138, 33, 137, 34, 137, 35, 137, 36, 137, 37, 137, 38, 137, 39, 137, 40, 137, 41, 138, 42, 138, 43, 138, 44, 138, 45, 137, 46, 136, 47, 135, 48, 134, 49, 131, 50, 129, 51, 127, 52, 124, 53, 118, 54, 116, 55, 115, 56, 110, 57, 104, 58, 105, 59, 106, 60, 107, 61, 108, 62, 108, 63, 139, 64, 141, 65, 145, 66, 147, 67, 147, 68, 147, 69, 148, 70, 149, 71, 149, 72, 151, 73, 152, 74, 152, 75, 152, 76, 153, 77, 154, 78, 154, 79, 153, 80, 153, 81, 153, 82, 154, 83, 154, 84, 154, 85, 154, 86, 153, 87, 153, 88, 152, 89, 151, 90, 149, 91, 150, 92, 149, 93, 147, 94, 145, 95, 144, 96, 144, 97, 140, 98, 98, 99, 98, 100, 99, 101, 126, 102, 131, 103, 131, 104, 131, 105, 131, 106, 131, 107, 131, 108, 131, 109, 131, 110, 130, 111, 130, 112, 130, 113, 130, 114, 131, 115, 132, 116, 133, 117, 132, 118, 132, 119, 124, 120, 123, 121, 123, 122, 122, 123, 121, 124, 121, 125, 120, 126, 119, 127, 119, 128, 118, 129, 118, 130, 117, 131, 117, 132, 116, 133, 115, 134, 115, 135, 114, 136, 112, 137, 111, 138, 110, 139, 110, 140, 109, 141, 108, 142, 107, 143, 106, 144, 105, 145, 104, 146, 103, 147, 102, 148, 101, 149, 100, 150, 99, 151, 98, 152, 98, 153, 98, 154, 98, 155, 98, 156, 91, 157, 90, 158, 89, 159, 89, 160, 89, 161, 89, 162, 89, 163, 89, 164, 89, 165, 86, 166, 76, 167, 74, 168, 72, 169, 70, 170, 69, 171, 66, 172, 65, 173, 64, 174, 64, 175, 64, 176, 64, 177, 63, 178, 57, 178, 56, 177, 54, 176, 52, 175, 50, 174, 48, 173, 46, 172, 45, 171, 44, 170, 44, 169, 44, 168, 45, 167, 45, 166, 46, 165, 45, 164, 45, 163, 45, 162, 46, 161, 48, 160, 50, 159, 53, 158, 55, 157, 57, 156, 60, 155, 62, 154, 63, 153, 65, 152, 68, 151, 31, 150, 31, 149, 10, 148, 9, 147, 8, 146, 8, 145, 7, 144, 7, 143, 7, 142, 8, 141, 8, 140, 8, 139, 8, 138, 8, 137, 8, 136, 8, 135, 8, 134, 9, 133, 11, 132, 28, 131, 28, 130, 28, 129, 29, 128, 30, 127, 31, 126, 33, 125, 34, 124, 54, 123, 54, 122, 54, 121, 54, 120, 54, 119, 55, 118, 55, 117, 55, 116, 55, 115, 55, 114, 56, 113, 57, 112, 60, 111, 60, 110, 59, 109, 59, 108, 59, 107, 59, 106, 60, 105, 64, 104, 65, 103, 64, 102, 63, 101, 63, 100, 63, 99, 63, 98, 64, 97, 67, 96, 67, 95, 67, 94, 67, 93, 67, 92, 67, 91, 67, 90, 67, 89, 68, 88, 68, 87, 69, 86, 69, 85, 69, 84, 69, 83, 69, 82, 68, 81, 67, 80, 67, 79, 67, 78, 67, 77, 67, 76, 67, 75, 67, 74, 67, 73, 67, 72, 65, 71, 63, 70, 63, 69, 63, 68, 62, 67, 62, 66, 63, 65, 64, 64, 66, 63, 67, 62, 67, 61, 60, 60, 60, 59, 59, 58, 59, 57, 59, 56, 60, 55, 65, 54, 67, 53, 70, 52, 73, 51, 76, 50, 78, 49, 88, 48, 50, 47, 50, 46, 49, 45, 48, 44, 47, 43, 47, 42, 46, 41, 47, 40, 47, 39, 47, 38, 47, 37, 47, 36, 48, 35, 50, 34, 51, 33, 62, 32, 62, 31, 62, 30, 63, 29, 66, 28, 67, 27, 68, 26, 70, 25, 71, 24, 73, 23, 68, 22, 68, 21, 68, 20, 69, 19, 71, 18, 72, 17, 74, 16, 76, 15, 77, 14, 79, 13, 80, 12, 80, 11, 77, 10, 76, 9, 75, 8, 75, 7, 76, 6, 78, 5, 80, 4, 81, 3, 83, 2, 85, 1, 110, 1],
    17: [68, 40, 70, 41, 71, 42, 72, 43, 112, 44, 112, 45, 111, 46, 116, 47, 115, 48, 114, 49, 115, 50, 115, 51, 115, 52, 115, 53, 118, 54, 118, 55, 119, 56, 121, 57, 122, 58, 120, 59, 119, 60, 118, 61, 116, 62, 110, 63, 110, 64, 110, 65, 111, 66, 112, 67, 113, 68, 115, 69, 117, 70, 118, 71, 121, 72, 131, 73, 132, 74, 132, 75, 131, 76, 131, 77, 131, 78, 132, 79, 133, 80, 134, 81, 135, 82, 135, 83, 136, 84, 133, 85, 135, 86, 136, 87, 136, 88, 137, 89, 137, 90, 137, 91, 137, 92, 137, 93, 138, 94, 138, 95, 139, 96, 139, 97, 139, 98, 139, 99, 139, 100, 138, 101, 138, 102, 143, 103, 142, 104, 144, 105, 145, 106, 143, 107, 133, 108, 133, 109, 132, 110, 134, 111, 134, 112, 129, 113, 129, 114, 129, 115, 129, 116, 131, 117, 129, 118, 121, 119, 120, 120, 117, 121, 114, 122, 114, 123, 114, 124, 115, 125, 117, 126, 117, 127, 116, 128, 105, 129, 103, 130, 101, 131, 94, 132, 92, 133, 87, 134, 85, 135, 83, 136, 81, 137, 79, 138, 75, 138, 73, 137, 72, 136, 70, 135, 55, 134, 53, 133, 53, 132, 34, 131, 33, 130, 33, 129, 29, 128, 27, 127, 26, 126, 24, 125, 22, 124, 21, 123, 20, 122, 20, 121, 18, 120, 17, 119, 17, 118, 19, 117, 20, 116, 20, 115, 21, 114, 20, 113, 20, 112, 16, 111, 16, 110, 18, 109, 17, 108, 17, 107, 14, 106, 12, 105, 12, 104, 13, 103, 14, 102, 12, 101, 8, 100, 8, 99, 9, 98, 8, 97, 8, 96, 9, 95, 11, 94, 13, 93, 13, 92, 13, 91, 13, 90, 13, 89, 13, 88, 13, 87, 13, 86, 13, 85, 13, 84, 13, 83, 13, 82, 13, 81, 13, 80, 13, 79, 13, 78, 13, 77, 13, 76, 13, 75, 13, 74, 19, 73, 19, 72, 20, 71, 23, 70, 24, 69, 26, 68, 29, 67, 29, 66, 29, 65, 29, 64, 29, 63, 29, 62, 29, 61, 30, 60, 30, 59, 30, 58, 30, 57, 31, 56, 31, 55, 32, 54, 33, 53, 33, 52, 36, 51, 36, 50, 38, 49, 45, 48, 48, 47, 51, 46, 53, 45, 55, 44, 56, 43, 58, 42, 60, 41, 62, 40, 68, 40],
    18: [111, 12, 111, 13, 123, 14, 127, 15, 127, 16, 126, 17, 126, 18, 126, 19, 126, 20, 126, 21, 124, 22, 126, 23, 125, 24, 125, 25, 125, 26, 125, 27, 125, 28, 125, 29, 123, 30, 125, 31, 125, 32, 125, 33, 125, 34, 125, 35, 125, 36, 125, 37, 123, 38, 125, 39, 126, 40, 126, 41, 126, 42, 126, 43, 126, 44, 126, 45, 127, 46, 121, 47, 120, 48, 112, 49, 110, 50, 110, 51, 110, 52, 110, 53, 110, 54, 110, 55, 111, 56, 111, 57, 111, 58, 111, 59, 111, 60, 111, 61, 111, 62, 111, 63, 111, 64, 111, 65, 111, 66, 111, 67, 111, 68, 111, 69, 111, 70, 111, 71, 111, 72, 111, 73, 112, 74, 113, 75, 113, 76, 114, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 115, 84, 116, 85, 117, 86, 117, 87, 117, 88, 117, 89, 117, 90, 117, 91, 118, 92, 118, 93, 118, 94, 120, 95, 121, 96, 121, 97, 120, 98, 123, 99, 124, 100, 125, 101, 126, 102, 126, 103, 126, 104, 126, 105, 126, 106, 127, 107, 127, 108, 127, 109, 126, 110, 127, 111, 127, 112, 127, 113, 127, 114, 125, 115, 125, 116, 125, 117, 124, 118, 123, 119, 123, 120, 124, 121, 124, 122, 124, 123, 125, 124, 124, 125, 126, 126, 126, 127, 125, 128, 125, 129, 125, 130, 121, 131, 121, 132, 121, 133, 120, 134, 116, 135, 115, 136, 114, 137, 110, 138, 101, 138, 65, 137, 64, 136, 64, 135, 57, 134, 50, 133, 49, 132, 47, 131, 45, 130, 44, 129, 42, 128, 39, 127, 38, 126, 37, 125, 36, 124, 36, 123, 34, 122, 33, 121, 31, 120, 30, 119, 27, 118, 26, 117, 24, 116, 24, 115, 24, 114, 23, 113, 23, 112, 22, 111, 21, 110, 21, 109, 22, 108, 22, 107, 21, 106, 21, 105, 21, 104, 22, 103, 21, 102, 21, 101, 21, 100, 22, 99, 23, 98, 22, 97, 21, 96, 21, 95, 21, 94, 21, 93, 24, 92, 24, 91, 24, 90, 24, 89, 27, 88, 27, 87, 32, 86, 32, 85, 31, 84, 30, 83, 29, 82, 29, 81, 28, 80, 28, 79, 28, 78, 28, 77, 28, 76, 28, 75, 28, 74, 28, 73, 28, 72, 28, 71, 29, 70, 29, 69, 30, 68, 30, 67, 31, 66, 31, 65, 32, 64, 32, 63, 33, 62, 34, 61, 34, 60, 35, 59, 36, 58, 36, 57, 37, 56, 38, 55, 38, 54, 39, 53, 39, 52, 40, 51, 40, 50, 41, 49, 41, 48, 41, 47, 41, 46, 41, 45, 41, 44, 41, 43, 40, 42, 40, 41, 41, 40, 41, 39, 42, 38, 42, 37, 43, 36, 44, 35, 44, 34, 44, 33, 45, 32, 46, 31, 50, 30, 52, 29, 59, 28, 59, 27, 60, 26, 60, 25, 60, 24, 60, 23, 61, 22, 64, 21, 106, 20, 106, 19, 106, 18, 106, 17, 106, 16, 105, 15, 105, 14, 105, 13, 106, 12, 111, 12],
    19: [59, 26, 59, 27, 59, 28, 60, 29, 61, 30, 62, 31, 65, 32, 64, 33, 63, 34, 63, 35, 63, 36, 63, 37, 63, 38, 63, 39, 62, 40, 62, 41, 62, 42, 62, 43, 61, 44, 61, 45, 61, 46, 60, 47, 60, 48, 59, 49, 59, 50, 59, 51, 80, 52, 80, 53, 82, 54, 83, 55, 88, 56, 87, 57, 85, 58, 80, 59, 109, 60, 109, 61, 111, 62, 112, 63, 117, 64, 116, 65, 117, 66, 115, 67, 109, 68, 109, 69, 109, 70, 109, 71, 110, 72, 111, 73, 112, 74, 114, 75, 115, 76, 116, 77, 117, 78, 118, 79, 119, 80, 120, 81, 122, 82, 123, 83, 123, 84, 124, 85, 124, 86, 124, 87, 124, 88, 124, 89, 124, 90, 124, 91, 125, 92, 125, 93, 125, 94, 125, 95, 125, 96, 125, 97, 126, 98, 127, 99, 129, 100, 130, 101, 131, 102, 131, 103, 132, 104, 132, 105, 134, 106, 134, 107, 134, 108, 135, 109, 135, 110, 135, 111, 135, 112, 135, 113, 135, 114, 136, 115, 134, 116, 134, 117, 134, 118, 134, 119, 132, 120, 132, 121, 131, 122, 130, 123, 130, 124, 127, 125, 126, 126, 125, 127, 120, 128, 117, 129, 112, 130, 110, 131, 73, 132, 73, 133, 72, 134, 72, 135, 62, 135, 62, 134, 62, 133, 63, 132, 60, 131, 50, 130, 50, 129, 50, 128, 51, 127, 51, 126, 28, 125, 24, 124, 22, 123, 21, 122, 21, 121, 19, 120, 17, 119, 15, 118, 15, 117, 13, 116, 13, 115, 12, 114, 12, 113, 10, 112, 10, 111, 11, 110, 12, 109, 12, 108, 14, 107, 14, 106, 16, 105, 18, 104, 20, 103, 20, 102, 20, 101, 20, 100, 20, 99, 20, 98, 20, 97, 20, 96, 20, 95, 19, 94, 18, 93, 18, 92, 18, 91, 19, 90, 20, 89, 20, 88, 21, 87, 22, 86, 22, 85, 23, 84, 24, 83, 25, 82, 25, 81, 26, 80, 27, 79, 27, 78, 28, 77, 29, 76, 55, 75, 55, 74, 55, 73, 55, 72, 55, 71, 55, 70, 55, 69, 55, 68, 55, 67, 55, 66, 55, 65, 55, 64, 55, 63, 55, 62, 55, 61, 55, 60, 55, 59, 55, 58, 55, 57, 55, 56, 55, 55, 52, 54, 52, 53, 51, 52, 51, 51, 50, 50, 50, 49, 49, 48, 49, 47, 48, 46, 48, 45, 48, 44, 49, 43, 49, 42, 50, 41, 50, 40, 50, 39, 50, 38, 51, 37, 51, 36, 51, 35, 51, 34, 51, 33, 51, 32, 51, 31, 54, 30, 55, 29, 55, 28, 55, 27, 56, 26, 59, 26],
    20: [61, 36, 63, 37, 64, 38, 66, 39, 67, 40, 69, 41, 70, 42, 72, 43, 74, 44, 76, 45, 78, 46, 109, 47, 108, 48, 107, 49, 108, 50, 109, 51, 109, 52, 108, 53, 109, 54, 110, 55, 110, 56, 116, 57, 116, 58, 116, 59, 116, 60, 116, 61, 114, 62, 115, 63, 115, 64, 114, 65, 115, 66, 115, 67, 116, 68, 117, 69, 117, 70, 117, 71, 118, 72, 118, 73, 118, 74, 119, 75, 119, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 118, 83, 117, 84, 117, 85, 117, 86, 117, 87, 117, 88, 117, 89, 117, 90, 117, 91, 116, 92, 116, 93, 116, 94, 116, 95, 116, 96, 116, 97, 116, 98, 116, 99, 116, 100, 116, 101, 116, 102, 116, 103, 117, 104, 117, 105, 117, 106, 117, 107, 117, 108, 117, 109, 117, 110, 117, 111, 117, 112, 120, 113, 123, 114, 124, 115, 125, 116, 124, 117, 123, 118, 124, 119, 128, 120, 129, 121, 129, 122, 129, 123, 128, 124, 124, 125, 122, 126, 121, 127, 121, 128, 119, 129, 116, 130, 115, 131, 111, 132, 109, 133, 106, 134, 104, 135, 102, 136, 99, 137, 94, 138, 92, 138, 89, 137, 86, 136, 86, 135, 83, 134, 55, 133, 52, 132, 52, 131, 53, 130, 52, 129, 54, 128, 53, 127, 43, 126, 43, 125, 43, 124, 43, 123, 43, 122, 43, 121, 43, 120, 43, 119, 42, 118, 16, 117, 16, 116, 16, 115, 16, 114, 17, 113, 17, 112, 17, 111, 13, 110, 13, 109, 13, 108, 13, 107, 14, 106, 18, 105, 19, 104, 22, 103, 28, 102, 28, 101, 29, 100, 29, 99, 29, 98, 29, 97, 29, 96, 29, 95, 29, 94, 29, 93, 29, 92, 29, 91, 29, 90, 29, 89, 29, 88, 29, 87, 29, 86, 29, 85, 29, 84, 29, 83, 29, 82, 29, 81, 29, 80, 26, 79, 25, 78, 24, 77, 23, 76, 23, 75, 26, 74, 33, 73, 37, 72, 37, 71, 37, 70, 36, 69, 35, 68, 35, 67, 34, 66, 33, 65, 33, 64, 33, 63, 32, 62, 32, 61, 32, 60, 32, 59, 32, 58, 32, 57, 33, 56, 34, 55, 35, 54, 36, 53, 39, 52, 41, 51, 42, 50, 42, 49, 43, 48, 43, 47, 43, 46, 42, 45, 41, 44, 40, 43, 40, 42, 40, 41, 41, 40, 53, 39, 54, 38, 60, 37, 58, 36, 61, 36],
    21: [89, 21, 90, 22, 90, 23, 90, 24, 90, 25, 90, 26, 90, 27, 90, 28, 90, 29, 91, 30, 91, 31, 91, 32, 91, 33, 91, 34, 91, 35, 91, 36, 91, 37, 92, 38, 92, 39, 92, 40, 92, 41, 93, 42, 95, 43, 98, 44, 101, 45, 102, 46, 102, 47, 106, 48, 109, 49, 111, 50, 113, 51, 116, 52, 117, 53, 119, 54, 120, 55, 121, 56, 122, 57, 123, 58, 124, 59, 125, 60, 126, 61, 127, 62, 128, 63, 129, 64, 130, 65, 131, 66, 132, 67, 133, 68, 134, 69, 135, 70, 136, 71, 136, 72, 135, 73, 132, 74, 132, 75, 132, 76, 133, 77, 132, 78, 132, 79, 132, 80, 132, 81, 132, 82, 132, 83, 132, 84, 132, 85, 132, 86, 132, 87, 132, 88, 133, 89, 132, 90, 133, 91, 133, 92, 133, 93, 133, 94, 133, 95, 135, 96, 135, 97, 136, 98, 137, 99, 136, 100, 134, 101, 131, 102, 129, 103, 126, 104, 125, 105, 124, 106, 126, 107, 127, 108, 127, 109, 126, 110, 126, 111, 127, 112, 128, 113, 128, 114, 125, 115, 113, 116, 111, 117, 109, 118, 108, 119, 108, 120, 106, 121, 104, 122, 104, 123, 114, 124, 113, 125, 112, 126, 99, 127, 102, 128, 102, 129, 102, 130, 103, 131, 100, 132, 100, 133, 100, 134, 97, 135, 97, 136, 96, 137, 89, 138, 84, 138, 82, 137, 78, 136, 77, 135, 75, 134, 73, 133, 72, 132, 72, 131, 69, 130, 68, 129, 60, 128, 58, 127, 49, 126, 48, 125, 46, 124, 46, 123, 47, 122, 47, 121, 38, 120, 36, 119, 36, 118, 21, 117, 16, 116, 17, 115, 10, 114, 9, 113, 9, 112, 10, 111, 11, 110, 7, 109, 4, 108, 2, 107, 2, 106, 3, 105, 3, 104, 4, 103, 5, 102, 5, 101, 5, 100, 5, 99, 4, 98, 4, 97, 4, 96, 5, 95, 6, 94, 6, 93, 7, 92, 13, 91, 16, 90, 18, 89, 18, 88, 17, 87, 17, 86, 17, 85, 17, 84, 17, 83, 17, 82, 17, 81, 17, 80, 17, 79, 17, 78, 18, 77, 18, 76, 18, 75, 18, 74, 17, 73, 16, 72, 14, 71, 12, 70, 11, 69, 11, 68, 12, 67, 13, 66, 14, 65, 14, 64, 15, 63, 16, 62, 16, 61, 17, 60, 18, 59, 18, 58, 19, 57, 20, 56, 21, 55, 21, 54, 22, 53, 22, 52, 23, 51, 23, 50, 23, 49, 23, 48, 23, 47, 27, 46, 27, 45, 28, 44, 29, 43, 29, 42, 30, 41, 31, 40, 32, 39, 32, 38, 33, 37, 34, 36, 71, 35, 72, 34, 73, 33, 80, 32, 81, 31, 81, 30, 81, 29, 81, 28, 81, 27, 81, 26, 81, 25, 81, 24, 81, 23, 82, 22, 83, 21, 89, 21],
    22: [55, 14, 56, 15, 56, 16, 56, 17, 56, 18, 55, 19, 55, 20, 55, 21, 54, 22, 54, 23, 54, 24, 53, 25, 53, 26, 54, 27, 55, 28, 57, 29, 58, 30, 60, 31, 61, 32, 63, 33, 64, 34, 68, 35, 70, 36, 72, 37, 73, 38, 73, 39, 74, 40, 76, 41, 101, 42, 102, 43, 103, 44, 103, 45, 103, 46, 102, 47, 102, 48, 102, 49, 101, 50, 101, 51, 100, 52, 100, 53, 101, 54, 120, 55, 120, 56, 121, 57, 121, 58, 121, 59, 121, 60, 122, 61, 121, 62, 122, 63, 122, 64, 122, 65, 122, 66, 122, 67, 122, 68, 122, 69, 123, 70, 123, 71, 123, 72, 123, 73, 123, 74, 123, 75, 124, 76, 124, 77, 124, 78, 123, 79, 123, 80, 124, 81, 124, 82, 125, 83, 125, 84, 125, 85, 126, 86, 126, 87, 126, 88, 126, 89, 126, 90, 126, 91, 126, 92, 127, 93, 127, 94, 126, 95, 126, 96, 126, 97, 125, 98, 124, 99, 124, 100, 124, 101, 124, 102, 125, 103, 125, 104, 125, 105, 124, 106, 128, 107, 129, 108, 129, 109, 129, 110, 129, 111, 129, 112, 129, 113, 129, 114, 129, 115, 129, 116, 129, 117, 129, 118, 130, 119, 129, 120, 127, 121, 124, 122, 132, 123, 132, 124, 132, 125, 131, 126, 129, 127, 127, 128, 125, 129, 124, 130, 122, 131, 120, 132, 116, 133, 117, 134, 117, 135, 116, 136, 102, 137, 100, 138, 60, 138, 59, 137, 58, 136, 58, 135, 56, 134, 58, 133, 58, 132, 58, 131, 57, 130, 56, 129, 55, 128, 49, 127, 48, 126, 41, 125, 41, 124, 41, 123, 39, 122, 38, 121, 38, 120, 35, 119, 33, 118, 33, 117, 33, 116, 45, 115, 44, 114, 44, 113, 44, 112, 43, 111, 41, 110, 16, 109, 14, 108, 13, 107, 13, 106, 13, 105, 13, 104, 15, 103, 16, 102, 14, 101, 13, 100, 13, 99, 12, 98, 13, 97, 15, 96, 15, 95, 15, 94, 16, 93, 16, 92, 17, 91, 20, 90, 20, 89, 19, 88, 18, 87, 18, 86, 19, 85, 19, 84, 19, 83, 19, 82, 20, 81, 22, 80, 22, 79, 32, 78, 32, 77, 32, 76, 32, 75, 32, 74, 33, 73, 33, 72, 33, 71, 29, 70, 27, 69, 26, 68, 26, 67, 27, 66, 28, 65, 28, 64, 28, 63, 29, 62, 29, 61, 30, 60, 30, 59, 30, 58, 31, 57, 31, 56, 32, 55, 32, 54, 32, 53, 33, 52, 33, 51, 34, 50, 34, 49, 35, 48, 35, 47, 35, 46, 36, 45, 36, 44, 37, 43, 37, 42, 38, 41, 38, 40, 39, 39, 39, 38, 39, 37, 40, 36, 40, 35, 41, 34, 40, 33, 39, 32, 39, 31, 39, 30, 40, 29, 40, 28, 41, 27, 42, 26, 43, 25, 42, 24, 41, 23, 40, 22, 39, 21, 39, 20, 40, 19, 42, 18, 48, 17, 48, 16, 49, 15, 50, 14, 55, 14],
    23: [100, 18, 110, 19, 113, 20, 113, 21, 117, 22, 119, 23, 119, 24, 120, 25, 121, 26, 121, 27, 122, 28, 122, 29, 122, 30, 131, 31, 131, 32, 133, 33, 134, 34, 134, 35, 136, 36, 136, 37, 137, 38, 137, 39, 137, 40, 136, 41, 137, 42, 138, 43, 138, 44, 137, 45, 137, 46, 138, 47, 138, 48, 138, 49, 138, 50, 138, 51, 137, 52, 137, 53, 136, 54, 136, 55, 134, 56, 133, 57, 132, 58, 113, 59, 123, 60, 125, 61, 125, 62, 126, 63, 129, 64, 129, 65, 132, 66, 132, 67, 133, 68, 133, 69, 134, 70, 134, 71, 135, 72, 135, 73, 135, 74, 135, 75, 134, 76, 134, 77, 133, 78, 133, 79, 131, 80, 131, 81, 127, 82, 121, 83, 121, 84, 117, 85, 110, 86, 123, 87, 123, 88, 125, 89, 125, 90, 125, 91, 124, 92, 125, 93, 125, 94, 126, 95, 126, 96, 126, 97, 126, 98, 126, 99, 125, 100, 117, 101, 117, 102, 118, 103, 126, 104, 126, 105, 132, 106, 132, 107, 135, 108, 136, 109, 136, 110, 137, 111, 137, 112, 142, 113, 142, 114, 141, 115, 146, 116, 141, 117, 141, 118, 111, 119, 114, 120, 113, 121, 98, 122, 96, 123, 93, 124, 91, 125, 88, 126, 88, 127, 88, 128, 93, 129, 93, 130, 94, 131, 97, 132, 97, 133, 91, 134, 85, 135, 84, 136, 84, 137, 84, 138, 82, 139, 81, 140, 80, 141, 74, 141, 71, 140, 70, 139, 69, 138, 68, 137, 68, 136, 68, 135, 68, 134, 68, 133, 39, 132, 35, 131, 34, 130, 29, 129, 29, 128, 28, 127, 27, 126, 27, 125, 27, 124, 29, 123, 29, 122, 21, 121, 18, 120, 17, 119, 18, 118, 16, 117, 12, 116, 11, 115, 11, 114, 11, 113, 14, 112, 14, 111, 9, 110, 7, 109, 8, 108, 8, 107, 10, 106, 10, 105, 11, 104, 12, 103, 20, 102, 20, 101, 20, 100, 20, 99, 21, 98, 21, 97, 22, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 28, 87, 31, 86, 32, 85, 34, 84, 32, 83, 31, 82, 22, 81, 21, 80, 20, 79, 18, 78, 16, 77, 16, 76, 15, 75, 15, 74, 14, 73, 14, 72, 14, 71, 15, 70, 14, 69, 14, 68, 15, 67, 16, 66, 17, 65, 20, 64, 20, 63, 21, 62, 22, 61, 23, 60, 24, 59, 25, 58, 27, 57, 33, 56, 54, 55, 54, 54, 54, 53, 55, 52, 55, 51, 55, 50, 56, 49, 56, 48, 57, 47, 58, 46, 59, 45, 60, 44, 63, 43, 68, 42, 68, 41, 67, 40, 67, 39, 67, 38, 67, 37, 68, 36, 68, 35, 70, 34, 70, 33, 71, 32, 74, 31, 75, 30, 76, 29, 76, 28, 76, 27, 76, 26, 79, 25, 79, 24, 81, 23, 87, 22, 88, 21, 91, 20, 91, 19, 98, 18, 100, 18],
    24: [61, 26, 62, 27, 63, 28, 63, 29, 63, 30, 63, 31, 62, 32, 63, 33, 65, 34, 68, 35, 70, 36, 73, 37, 75, 38, 78, 39, 81, 40, 118, 41, 118, 42, 118, 43, 117, 44, 133, 45, 133, 46, 132, 47, 130, 48, 128, 49, 133, 50, 132, 51, 130, 52, 127, 53, 117, 54, 117, 55, 117, 56, 117, 57, 117, 58, 117, 59, 117, 60, 117, 61, 117, 62, 117, 63, 117, 64, 117, 65, 117, 66, 117, 67, 117, 68, 117, 69, 118, 70, 120, 71, 121, 72, 121, 73, 121, 74, 121, 75, 120, 76, 120, 77, 121, 78, 120, 79, 120, 80, 119, 81, 117, 82, 117, 83, 117, 84, 118, 85, 118, 86, 123, 87, 124, 88, 124, 89, 125, 90, 125, 91, 125, 92, 126, 93, 127, 94, 127, 95, 128, 96, 129, 97, 129, 98, 129, 99, 127, 100, 127, 101, 127, 102, 127, 103, 127, 104, 127, 105, 127, 106, 127, 107, 127, 108, 127, 109, 128, 110, 130, 111, 131, 112, 132, 113, 133, 114, 135, 115, 135, 116, 134, 117, 134, 118, 134, 119, 133, 120, 130, 121, 130, 122, 129, 123, 125, 124, 126, 125, 125, 126, 119, 127, 119, 128, 117, 129, 115, 130, 114, 131, 112, 132, 108, 133, 106, 134, 106, 135, 105, 136, 95, 137, 88, 138, 86, 138, 75, 137, 64, 136, 62, 135, 62, 134, 56, 133, 53, 132, 53, 131, 47, 130, 39, 129, 32, 128, 32, 127, 26, 126, 25, 125, 24, 124, 19, 123, 18, 122, 16, 121, 16, 120, 15, 119, 14, 118, 14, 117, 15, 116, 17, 115, 16, 114, 15, 113, 15, 112, 16, 111, 16, 110, 18, 109, 17, 108, 19, 107, 16, 106, 15, 105, 15, 104, 15, 103, 15, 102, 15, 101, 14, 100, 14, 99, 17, 98, 18, 97, 17, 96, 18, 95, 20, 94, 28, 93, 30, 92, 30, 91, 31, 90, 33, 89, 38, 88, 38, 87, 38, 86, 37, 85, 37, 84, 37, 83, 37, 82, 37, 81, 37, 80, 37, 79, 37, 78, 37, 77, 37, 76, 36, 75, 33, 74, 32, 73, 31, 72, 31, 71, 31, 70, 32, 69, 32, 68, 32, 67, 32, 66, 32, 65, 33, 64, 35, 63, 38, 62, 38, 61, 39, 60, 40, 59, 41, 58, 41, 57, 42, 56, 43, 55, 43, 54, 44, 53, 45, 52, 45, 51, 46, 50, 46, 49, 47, 48, 48, 47, 48, 46, 49, 45, 50, 44, 50, 43, 51, 42, 51, 41, 52, 40, 52, 39, 53, 38, 54, 37, 54, 36, 55, 35, 56, 34, 56, 33, 56, 32, 56, 31, 55, 30, 55, 29, 55, 28, 56, 27, 58, 26, 61, 26],
    25: [106, 2, 106, 3, 106, 4, 106, 5, 110, 6, 113, 7, 116, 8, 117, 9, 112, 10, 115, 11, 117, 12, 112, 13, 106, 14, 106, 15, 106, 16, 106, 17, 106, 18, 107, 19, 107, 20, 108, 21, 109, 22, 110, 23, 112, 24, 114, 25, 116, 26, 117, 27, 119, 28, 120, 29, 120, 30, 121, 31, 122, 32, 122, 33, 122, 34, 122, 35, 122, 36, 122, 37, 122, 38, 122, 39, 122, 40, 122, 41, 121, 42, 120, 43, 119, 44, 118, 45, 118, 46, 118, 47, 118, 48, 120, 49, 135, 50, 135, 51, 135, 52, 133, 53, 138, 54, 139, 55, 139, 56, 140, 57, 142, 58, 138, 59, 131, 60, 131, 61, 131, 62, 131, 63, 131, 64, 131, 65, 131, 66, 131, 67, 131, 68, 131, 69, 131, 70, 118, 71, 118, 72, 118, 73, 118, 74, 118, 75, 118, 76, 118, 77, 118, 78, 118, 79, 118, 80, 118, 81, 118, 82, 118, 83, 118, 84, 118, 85, 118, 86, 118, 87, 118, 88, 118, 89, 118, 90, 118, 91, 118, 92, 118, 93, 118, 94, 118, 95, 118, 96, 118, 97, 124, 98, 125, 99, 125, 100, 125, 101, 128, 102, 129, 103, 129, 104, 129, 105, 128, 106, 128, 107, 128, 108, 127, 109, 123, 110, 126, 111, 129, 112, 129, 113, 129, 114, 128, 115, 128, 116, 119, 117, 118, 118, 116, 119, 108, 120, 108, 121, 106, 122, 106, 123, 107, 124, 106, 125, 105, 126, 102, 127, 102, 128, 101, 129, 101, 130, 102, 131, 101, 132, 97, 133, 95, 134, 93, 135, 91, 136, 92, 137, 92, 138, 90, 139, 75, 140, 75, 141, 74, 142, 62, 142, 52, 141, 48, 140, 47, 139, 47, 138, 46, 137, 42, 136, 41, 135, 40, 134, 39, 133, 40, 132, 35, 131, 34, 130, 34, 129, 32, 128, 31, 127, 27, 126, 26, 125, 26, 124, 26, 123, 27, 122, 26, 121, 25, 120, 25, 119, 27, 118, 30, 117, 29, 116, 25, 115, 24, 114, 23, 113, 23, 112, 22, 111, 22, 110, 22, 109, 22, 108, 22, 107, 22, 106, 23, 105, 24, 104, 25, 103, 30, 102, 30, 101, 30, 100, 31, 99, 31, 98, 30, 97, 29, 96, 28, 95, 26, 94, 25, 93, 25, 92, 25, 91, 25, 90, 24, 89, 24, 88, 24, 87, 25, 86, 25, 85, 25, 84, 25, 83, 26, 82, 26, 81, 26, 80, 27, 79, 27, 78, 28, 77, 29, 76, 29, 75, 30, 74, 30, 73, 31, 72, 31, 71, 32, 70, 32, 69, 33, 68, 33, 67, 34, 66, 34, 65, 34, 64, 34, 63, 35, 62, 35, 61, 35, 60, 34, 59, 34, 58, 34, 57, 35, 56, 35, 55, 35, 54, 36, 53, 36, 52, 37, 51, 38, 50, 39, 49, 40, 48, 41, 47, 43, 46, 45, 45, 45, 44, 45, 43, 45, 42, 45, 41, 46, 40, 46, 39, 46, 38, 46, 37, 46, 36, 46, 35, 46, 34, 46, 33, 46, 32, 46, 31, 46, 30, 45, 29, 45, 28, 91, 27, 93, 26, 95, 25, 97, 24, 98, 23, 100, 22, 100, 21, 101, 20, 101, 19, 103, 18, 103, 17, 103, 16, 103, 15, 103, 14, 103, 13, 103, 12, 103, 11, 103, 10, 103, 9, 103, 8, 103, 7, 103, 6, 103, 5, 103, 4, 102, 3, 103, 2, 106, 2],
    26: [70, 1, 70, 2, 69, 3, 69, 4, 73, 5, 80, 6, 82, 7, 110, 8, 110, 9, 110, 10, 110, 11, 113, 12, 118, 13, 121, 14, 118, 15, 116, 16, 120, 17, 121, 18, 118, 19, 110, 20, 110, 21, 110, 22, 110, 23, 110, 24, 111, 25, 111, 26, 112, 27, 113, 28, 114, 29, 115, 30, 116, 31, 118, 32, 120, 33, 121, 34, 123, 35, 124, 36, 125, 37, 126, 38, 126, 39, 127, 40, 127, 41, 127, 42, 127, 43, 128, 44, 127, 45, 127, 46, 127, 47, 126, 48, 126, 49, 126, 50, 126, 51, 124, 52, 124, 53, 123, 54, 123, 55, 123, 56, 123, 57, 123, 58, 123, 59, 123, 60, 123, 61, 123, 62, 123, 63, 123, 64, 123, 65, 123, 66, 123, 67, 123, 68, 123, 69, 123, 70, 123, 71, 123, 72, 123, 73, 123, 74, 123, 75, 123, 76, 123, 77, 123, 78, 123, 79, 123, 80, 123, 81, 123, 82, 123, 83, 123, 84, 123, 85, 123, 86, 123, 87, 123, 88, 123, 89, 123, 90, 123, 91, 123, 92, 123, 93, 123, 94, 123, 95, 123, 96, 123, 97, 123, 98, 123, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 124, 110, 124, 111, 124, 112, 124, 113, 124, 114, 124, 115, 123, 116, 122, 117, 120, 118, 117, 119, 117, 120, 118, 121, 115, 122, 111, 123, 113, 124, 113, 125, 116, 126, 116, 127, 115, 128, 113, 129, 105, 130, 94, 131, 95, 132, 95, 133, 95, 134, 95, 135, 95, 136, 94, 137, 93, 138, 91, 139, 90, 140, 92, 141, 91, 142, 90, 143, 86, 144, 83, 144, 81, 143, 81, 142, 80, 141, 80, 140, 81, 139, 79, 138, 42, 137, 38, 136, 36, 135, 34, 134, 33, 133, 32, 132, 31, 131, 30, 130, 30, 129, 30, 128, 30, 127, 30, 126, 30, 125, 30, 124, 30, 123, 31, 122, 31, 121, 32, 120, 33, 119, 33, 118, 33, 117, 33, 116, 31, 115, 31, 114, 30, 113, 28, 112, 26, 111, 24, 110, 24, 109, 24, 108, 23, 107, 22, 106, 15, 105, 13, 104, 11, 103, 10, 102, 10, 101, 10, 100, 10, 99, 10, 98, 10, 97, 11, 96, 11, 95, 11, 94, 11, 93, 11, 92, 11, 91, 11, 90, 11, 89, 11, 88, 11, 87, 11, 86, 11, 85, 12, 84, 15, 83, 15, 82, 15, 81, 15, 80, 15, 79, 15, 78, 15, 77, 15, 76, 15, 75, 15, 74, 15, 73, 15, 72, 15, 71, 15, 70, 15, 69, 15, 68, 15, 67, 15, 66, 15, 65, 15, 64, 15, 63, 15, 62, 15, 61, 15, 60, 15, 59, 15, 58, 15, 57, 15, 56, 15, 55, 15, 54, 14, 53, 13, 52, 12, 51, 11, 50, 10, 49, 10, 48, 10, 47, 9, 46, 9, 45, 9, 44, 10, 43, 10, 42, 11, 41, 11, 40, 12, 39, 13, 38, 14, 37, 16, 36, 18, 35, 19, 34, 21, 33, 23, 32, 24, 31, 25, 30, 25, 29, 26, 28, 27, 27, 28, 26, 28, 25, 28, 24, 28, 23, 28, 22, 28, 21, 28, 20, 28, 19, 28, 18, 28, 17, 28, 16, 28, 15, 28, 14, 28, 13, 28, 12, 28, 11, 66, 10, 66, 9, 66, 8, 66, 7, 66, 6, 66, 5, 66, 4, 66, 3, 65, 2, 65, 1, 70, 1],
    27: [79, 20, 82, 21, 84, 22, 86, 23, 87, 24, 89, 25, 90, 26, 91, 27, 92, 28, 93, 29, 94, 30, 94, 31, 95, 32, 96, 33, 96, 34, 97, 35, 97, 36, 98, 37, 98, 38, 99, 39, 99, 40, 99, 41, 99, 42, 100, 43, 100, 44, 100, 45, 100, 46, 100, 47, 101, 48, 101, 49, 101, 50, 101, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 113, 57, 114, 58, 115, 59, 115, 60, 115, 61, 115, 62, 115, 63, 115, 64, 115, 65, 115, 66, 115, 67, 115, 68, 115, 69, 115, 70, 115, 71, 115, 72, 115, 73, 115, 74, 115, 75, 115, 76, 115, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 114, 84, 114, 85, 114, 86, 114, 87, 114, 88, 114, 89, 114, 90, 118, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 119, 97, 120, 98, 121, 99, 122, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 122, 107, 121, 108, 121, 109, 122, 110, 123, 111, 124, 112, 124, 113, 125, 114, 125, 115, 125, 116, 124, 117, 123, 118, 123, 119, 123, 120, 123, 121, 125, 122, 124, 123, 122, 124, 121, 125, 120, 126, 120, 127, 120, 128, 119, 129, 119, 130, 119, 131, 116, 132, 115, 133, 107, 134, 69, 134, 66, 133, 64, 132, 64, 131, 64, 130, 65, 129, 66, 128, 58, 127, 54, 126, 35, 125, 31, 124, 31, 123, 31, 122, 32, 121, 33, 120, 33, 119, 34, 118, 34, 117, 34, 116, 34, 115, 34, 114, 33, 113, 32, 112, 31, 111, 31, 110, 30, 109, 29, 108, 29, 107, 29, 106, 28, 105, 24, 104, 22, 103, 22, 102, 22, 101, 23, 100, 24, 99, 25, 98, 25, 97, 25, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 26, 87, 28, 86, 39, 85, 39, 84, 39, 83, 39, 82, 39, 81, 39, 80, 39, 79, 39, 78, 39, 77, 39, 76, 40, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 42, 67, 41, 66, 41, 65, 41, 64, 41, 63, 41, 62, 41, 61, 41, 60, 41, 59, 41, 58, 41, 57, 41, 56, 41, 55, 41, 54, 41, 53, 42, 52, 42, 51, 42, 50, 42, 49, 42, 48, 42, 47, 43, 46, 43, 45, 43, 44, 43, 43, 44, 42, 44, 41, 44, 40, 45, 39, 45, 38, 45, 37, 46, 36, 46, 35, 47, 34, 47, 33, 48, 32, 49, 31, 50, 30, 51, 29, 52, 28, 53, 27, 54, 26, 55, 25, 56, 24, 58, 23, 60, 22, 62, 21, 64, 20, 79, 20],
    28: [74, 12, 76, 13, 77, 14, 77, 15, 77, 16, 77, 17, 77, 18, 78, 19, 78, 20, 78, 21, 78, 22, 78, 23, 78, 24, 78, 25, 78, 26, 78, 27, 78, 28, 79, 29, 79, 30, 79, 31, 79, 32, 79, 33, 79, 34, 79, 35, 79, 36, 80, 37, 88, 38, 89, 39, 88, 40, 91, 41, 93, 42, 91, 43, 92, 44, 94, 45, 95, 46, 96, 47, 96, 48, 97, 49, 98, 50, 98, 51, 97, 52, 98, 53, 98, 54, 96, 55, 97, 56, 97, 57, 98, 58, 98, 59, 99, 60, 100, 61, 101, 62, 101, 63, 102, 64, 102, 65, 103, 66, 103, 67, 103, 68, 103, 69, 104, 70, 104, 71, 103, 72, 104, 73, 107, 74, 109, 75, 112, 76, 113, 77, 117, 78, 119, 79, 120, 80, 120, 81, 121, 82, 122, 83, 122, 84, 123, 85, 124, 86, 125, 87, 125, 88, 126, 89, 126, 90, 127, 91, 128, 92, 129, 93, 129, 94, 131, 95, 131, 96, 132, 97, 134, 98, 135, 99, 135, 100, 136, 101, 136, 102, 134, 103, 129, 104, 129, 105, 129, 106, 129, 107, 129, 108, 129, 109, 129, 110, 129, 111, 129, 112, 129, 113, 133, 114, 134, 115, 135, 116, 135, 117, 136, 118, 138, 119, 138, 120, 138, 121, 137, 122, 137, 123, 135, 124, 132, 125, 128, 126, 127, 127, 126, 128, 127, 129, 128, 130, 126, 131, 124, 132, 124, 133, 122, 134, 118, 135, 118, 136, 116, 137, 112, 138, 74, 139, 73, 140, 71, 140, 55, 139, 54, 138, 55, 137, 56, 136, 43, 135, 43, 134, 36, 133, 33, 132, 28, 131, 25, 130, 23, 129, 22, 128, 22, 127, 18, 126, 16, 125, 13, 124, 11, 123, 11, 122, 11, 121, 11, 120, 11, 119, 12, 118, 12, 117, 13, 116, 13, 115, 13, 114, 11, 113, 10, 112, 10, 111, 10, 110, 11, 109, 19, 108, 22, 107, 23, 106, 23, 105, 23, 104, 23, 103, 23, 102, 23, 101, 23, 100, 23, 99, 23, 98, 23, 97, 23, 96, 23, 95, 23, 94, 23, 93, 23, 92, 23, 91, 22, 90, 21, 89, 21, 88, 19, 87, 19, 86, 18, 85, 18, 84, 18, 83, 19, 82, 19, 81, 19, 80, 20, 79, 20, 78, 21, 77, 22, 76, 22, 75, 22, 74, 23, 73, 25, 72, 25, 71, 26, 70, 25, 69, 25, 68, 26, 67, 26, 66, 26, 65, 26, 64, 26, 63, 27, 62, 28, 61, 28, 60, 29, 59, 30, 58, 31, 57, 31, 56, 28, 55, 28, 54, 29, 53, 30, 52, 31, 51, 32, 50, 32, 49, 34, 48, 36, 47, 37, 46, 62, 45, 63, 44, 64, 43, 65, 42, 65, 41, 65, 40, 65, 39, 65, 38, 65, 37, 65, 36, 65, 35, 66, 34, 65, 33, 65, 32, 66, 31, 66, 30, 66, 29, 66, 28, 66, 27, 66, 26, 66, 25, 66, 24, 66, 23, 66, 22, 66, 21, 66, 20, 66, 19, 66, 18, 66, 17, 66, 16, 66, 15, 67, 14, 67, 13, 69, 12, 74, 12],
    29: [60, 18, 61, 19, 60, 20, 61, 21, 62, 22, 60, 23, 67, 24, 67, 25, 67, 26, 66, 27, 110, 28, 114, 29, 112, 30, 115, 31, 111, 32, 110, 33, 111, 34, 112, 35, 112, 36, 113, 37, 113, 38, 114, 39, 115, 40, 116, 41, 116, 42, 117, 43, 118, 44, 119, 45, 119, 46, 120, 47, 121, 48, 121, 49, 121, 50, 121, 51, 122, 52, 122, 53, 122, 54, 123, 55, 123, 56, 123, 57, 123, 58, 124, 59, 124, 60, 128, 61, 126, 62, 125, 63, 127, 64, 124, 65, 127, 66, 129, 67, 129, 68, 130, 69, 132, 70, 135, 71, 138, 72, 141, 73, 142, 74, 142, 75, 144, 76, 145, 77, 147, 78, 147, 79, 147, 80, 148, 81, 147, 82, 147, 83, 148, 84, 148, 85, 150, 86, 149, 87, 149, 88, 149, 89, 149, 90, 147, 91, 147, 92, 146, 93, 145, 94, 144, 95, 142, 96, 140, 97, 137, 98, 137, 99, 137, 100, 137, 101, 139, 102, 141, 103, 142, 104, 143, 105, 144, 106, 143, 107, 145, 108, 145, 109, 147, 110, 147, 111, 147, 112, 148, 113, 148, 114, 149, 115, 149, 116, 148, 117, 148, 118, 148, 119, 149, 120, 147, 121, 147, 122, 146, 123, 147, 124, 145, 125, 145, 126, 145, 127, 144, 128, 142, 129, 142, 130, 140, 131, 139, 132, 137, 133, 137, 134, 131, 135, 128, 136, 123, 137, 120, 138, 83, 139, 77, 140, 76, 141, 76, 142, 75, 143, 65, 143, 64, 142, 65, 141, 65, 140, 63, 139, 63, 138, 50, 137, 50, 136, 51, 135, 51, 134, 52, 133, 46, 132, 46, 131, 44, 130, 39, 129, 29, 128, 28, 127, 24, 126, 21, 125, 21, 124, 20, 123, 18, 122, 13, 121, 9, 120, 8, 119, 7, 118, 7, 117, 5, 116, 5, 115, 5, 114, 5, 113, 4, 112, 4, 111, 3, 110, 3, 109, 4, 108, 2, 107, 2, 106, 2, 105, 3, 104, 3, 103, 3, 102, 4, 101, 4, 100, 3, 99, 3, 98, 0, 97, 2, 96, 1, 95, -1, 94, 0, 93, -1, 92, -1, 91, -1, 90, 0, 89, 2, 88, 2, 87, 3, 86, 3, 85, 3, 84, 5, 83, 6, 82, 7, 81, 8, 80, 9, 79, 9, 78, 11, 77, 13, 76, 13, 75, 13, 74, 14, 73, 14, 72, 14, 71, 15, 70, 14, 69, 14, 68, 14, 67, 14, 66, 14, 65, 15, 64, 16, 63, 17, 62, 17, 61, 18, 60, 19, 59, 20, 58, 20, 57, 21, 56, 22, 55, 22, 54, 23, 53, 23, 52, 24, 51, 24, 50, 25, 49, 25, 48, 25, 47, 26, 46, 25, 45, 25, 44, 50, 43, 49, 42, 49, 41, 49, 40, 49, 39, 49, 38, 49, 37, 50, 36, 50, 35, 50, 34, 51, 33, 51, 32, 51, 31, 52, 30, 52, 29, 52, 28, 52, 27, 52, 26, 52, 25, 51, 24, 52, 23, 57, 22, 56, 21, 57, 20, 57, 19, 57, 18, 60, 18],
    30: [85, 27, 87, 28, 89, 29, 90, 30, 91, 31, 93, 32, 95, 33, 96, 34, 98, 35, 123, 36, 126, 37, 125, 38, 126, 39, 127, 40, 128, 41, 128, 42, 128, 43, 129, 44, 129, 45, 130, 46, 130, 47, 130, 48, 130, 49, 130, 50, 131, 51, 131, 52, 132, 53, 132, 54, 133, 55, 133, 56, 133, 57, 132, 58, 132, 59, 132, 60, 133, 61, 133, 62, 134, 63, 135, 64, 135, 65, 136, 66, 137, 67, 138, 68, 138, 69, 139, 70, 139, 71, 139, 72, 139, 73, 140, 74, 139, 75, 139, 76, 139, 77, 139, 78, 138, 79, 138, 80, 137, 81, 137, 82, 135, 83, 135, 84, 135, 85, 135, 86, 134, 87, 134, 88, 134, 89, 135, 90, 135, 91, 135, 92, 135, 93, 135, 94, 135, 95, 135, 96, 135, 97, 135, 98, 135, 99, 135, 100, 135, 101, 135, 102, 135, 103, 135, 104, 135, 105, 139, 106, 138, 107, 137, 108, 142, 109, 142, 110, 143, 111, 143, 112, 144, 113, 144, 114, 142, 115, 140, 116, 139, 117, 139, 118, 138, 119, 137, 120, 134, 121, 133, 122, 133, 123, 133, 124, 128, 125, 127, 126, 124, 127, 122, 128, 114, 129, 111, 130, 110, 131, 106, 132, 104, 133, 101, 134, 99, 135, 98, 136, 95, 137, 90, 138, 74, 139, 70, 140, 68, 141, 64, 141, 65, 140, 66, 139, 54, 138, 54, 137, 54, 136, 55, 135, 55, 134, 52, 133, 50, 132, 50, 131, 50, 130, 51, 129, 52, 128, 51, 127, 41, 126, 41, 125, 41, 124, 42, 123, 42, 122, 42, 121, 42, 120, 40, 119, 15, 118, 16, 117, 16, 116, 17, 115, 17, 114, 17, 113, 14, 112, 13, 111, 13, 110, 13, 109, 14, 108, 15, 107, 18, 106, 21, 105, 27, 104, 27, 103, 28, 102, 28, 101, 28, 100, 28, 99, 28, 98, 28, 97, 28, 96, 28, 95, 28, 94, 28, 93, 28, 92, 28, 91, 28, 90, 28, 89, 28, 88, 28, 87, 28, 86, 28, 85, 28, 84, 27, 83, 25, 82, 24, 81, 23, 80, 23, 79, 23, 78, 30, 77, 34, 76, 36, 75, 36, 74, 35, 73, 34, 72, 33, 71, 33, 70, 32, 69, 32, 68, 32, 67, 31, 66, 31, 65, 31, 64, 31, 63, 31, 62, 31, 61, 32, 60, 33, 59, 34, 58, 36, 57, 40, 56, 41, 55, 41, 54, 41, 53, 41, 52, 41, 51, 41, 50, 39, 49, 39, 48, 39, 47, 39, 46, 41, 45, 51, 44, 54, 43, 56, 42, 70, 41, 71, 40, 72, 39, 72, 38, 73, 37, 73, 36, 74, 35, 74, 34, 74, 33, 75, 32, 75, 31, 76, 30, 77, 29, 80, 28, 81, 27, 85, 27],
    31: [[577, 3, 593, 4, 614, 5, 628, 6, 635, 7, 644, 8, 650, 9, 660, 10, 665, 11, 851, 12, 852, 13, 853, 14, 855, 15, 857, 16, 858, 17, 860, 18, 862, 19, 864, 20, 866, 21, 867, 22, 869, 23, 871, 24, 873, 25, 875, 26, 877, 27, 879, 28, 880, 29, 881, 30, 880, 31, 879, 32, 877, 33, 877, 34, 877, 35, 877, 36, 877, 37, 877, 38, 877, 39, 877, 40, 877, 41, 879, 42, 881, 43, 881, 44, 881, 45, 881, 46, 881, 47, 881, 48, 881, 49, 881, 50, 881, 51, 881, 52, 881, 53, 881, 54, 881, 55, 881, 56, 881, 57, 881, 58, 881, 59, 879, 60, 877, 61, 877, 62, 877, 63, 877, 64, 877, 65, 877, 66, 877, 67, 877, 68, 877, 69, 945, 70, 946, 71, 948, 72, 949, 73, 951, 74, 953, 75, 955, 76, 956, 77, 958, 78, 960, 79, 962, 80, 964, 81, 966, 82, 968, 83, 969, 84, 972, 85, 973, 86, 974, 87, 974, 88, 974, 89, 972, 90, 971, 91, 970, 92, 970, 93, 970, 94, 970, 95, 970, 96, 970, 97, 970, 98, 972, 99, 973, 100, 975, 101, 975, 102, 975, 103, 975, 104, 975, 105, 975, 106, 975, 107, 975, 108, 975, 109, 975, 110, 975, 111, 975, 112, 975, 113, 975, 114, 975, 115, 975, 116, 975, 117, 974, 118, 972, 119, 970, 120, 971, 121, 971, 122, 971, 123, 971, 124, 971, 125, 971, 126, 971, 127, 971, 128, 971, 129, 971, 130, 971, 131, 971, 132, 971, 133, 971, 134, 971, 135, 971, 136, 971, 137, 976, 138, 977, 139, 980, 140, 981, 141, 981, 142, 984, 143, 985, 144, 985, 145, 988, 146, 989, 147, 989, 148, 992, 149, 993, 150, 993, 151, 996, 152, 997, 153, 997, 154, 1E3, 155, 1001, 156, 1001, 157, 1003, 158, 1004, 159, 1005, 160, 1007, 161, 1008, 162, 1009, 163, 1010, 164, 1012, 165, 1012, 166, 1013, 167, 1015, 168, 1016, 169, 1016, 170, 1017, 171, 1019, 172, 1019, 173, 1020, 174, 1022, 175, 1023, 176, 1023, 177, 1024, 178, 1026, 179, 1027, 180, 1027, 181, 1029, 182, 1030, 183, 1030, 184, 1032, 185, 1033, 186, 1034, 187, 1034, 188, 1036, 189, 1037, 190, 1037, 191, 1037, 192, 1039, 193, 1040, 194, 1040, 195, 1041, 196, 1043, 197, 1044, 198, 1044, 199, 1045, 200, 1046, 201, 1047, 202, 1047, 203, 1048, 204, 1049, 205, 1050, 206, 1050, 207, 1052, 208, 1053, 209, 1053, 210, 1053, 211, 1054, 212, 1055, 213, 1056, 214, 1056, 215, 1057, 216, 1058, 217, 1059, 218, 1059, 219, 1060, 220, 1061, 221, 1062, 222, 1062, 223, 1062, 224, 1064, 225, 1064, 226, 1065, 227, 1065, 228, 1066, 229, 1067, 230, 1067, 231, 1067, 232, 1069, 233, 1069, 234, 1070, 235, 1070, 236, 1070, 237, 1071, 238, 1072, 239, 1072, 240, 1072, 241, 1074, 242, 1074, 243, 1075, 244, 1075, 245, 1075, 246, 1076, 247, 1076, 248, 1077, 249, 1077, 250, 1077, 251, 1078, 252, 1079, 253, 1079, 254, 1079, 255, 1080, 256, 1081, 257, 1081, 258, 1081, 259, 1081, 260, 1082, 261, 1083, 262, 1083, 263, 1083, 264, 1084, 265, 1084, 266, 1085, 267, 1086, 268, 1086, 269, 1086, 270, 1086, 271, 1088, 272, 1088, 273, 1088, 274, 1088, 275, 1088, 276, 1089, 277, 1089, 278, 1089, 279, 1089, 280, 1090, 281, 1091, 282, 1091, 283, 1090, 284, 1091, 285, 1092, 286, 1092, 287, 1092, 288, 1092, 289, 1092, 290, 1093, 291, 1093, 292, 1093, 293, 1093, 294, 1094, 295, 1094, 296, 1094, 297, 1094, 298, 1094, 299, 1095, 300, 1095, 301, 1095, 302, 1095, 303, 1095, 304, 1095, 305, 1096, 306, 1096, 307, 1095, 308, 1096, 309, 1096, 310, 1097, 311, 1097, 312, 1096, 313, 1097, 314, 1097, 315, 1097, 316, 1097, 317, 1097, 318, 1097, 319, 1097, 320, 1097, 321, 1097, 322, 1097, 323, 1097, 324, 1098, 325, 1098, 326, 1097, 327, 1097, 328, 1098, 329, 1098, 330, 1098, 331, 1098, 332, 1097, 333, 1098, 334, 1098, 335, 1098, 336, 1098, 337, 1098, 338, 1098, 339, 1098, 340, 1071, 340, 1071, 339, 1071, 338, 1070, 337, 1070, 336, 1069, 335, 1069, 334, 1069, 333, 1068, 332, 1068, 331, 1067, 330, 1067, 329, 1066, 328, 1066, 327, 1066, 326, 1065, 325, 1065, 324, 1064, 323, 1064, 322, 1063, 321, 1063, 320, 1062, 319, 1062, 318, 1061, 317, 1061, 316, 1060, 315, 1060, 314, 1059, 313, 1059, 312, 1058, 311, 1058, 310, 1057, 309, 1057, 308, 1056, 307, 1056, 306, 1055, 305, 1055, 304, 1054, 303, 1053, 302, 1053, 301, 1052, 300, 1052, 299, 1051, 298, 1050, 297, 1050, 296, 1049, 295, 1049, 294, 1048, 293, 1047, 292, 1047, 291, 1046, 290, 1045, 289, 1045, 288, 1044, 287, 1043, 286, 1042, 285, 1042, 284, 1041, 283, 1040, 282, 1040, 281, 1039, 280, 1038, 279, 1037, 278, 1037, 277, 1036, 276, 1035, 275, 1034, 274, 1034, 273, 1033, 272, 1032, 271, 1031, 270, 1030, 269, 1030, 268, 1029, 267, 1028, 266, 1027, 265, 1026, 264, 1025, 263, 1024, 262, 1024, 261, 1023, 260, 1022, 259, 1021, 258, 1020, 257, 1019, 256, 1018, 255, 1017, 254, 1016, 253, 1015, 252, 1014, 251, 1013, 250, 1013, 249, 1011, 248, 1011, 247, 1010, 246, 1009, 245, 1008, 244, 1007, 243, 1006, 242, 1005, 241, 1003, 240, 1002, 239, 1001, 238, 1E3, 237, 999, 236, 998, 235, 997, 234, 996, 233, 995, 232, 993, 231, 992, 230, 991, 229, 990, 228, 989, 227, 988, 226, 987, 225, 985, 224, 984, 223, 983, 222, 982, 221, 980, 220, 979, 219, 978, 218, 976, 217, 975, 216, 974, 215, 972, 214, 971, 213, 941, 212, 939, 211, 937, 210, 935, 209, 934, 208, 932, 207, 930, 206, 929, 205, 927, 204, 925, 203, 923, 202, 921, 201, 919, 200, 917, 199, 916, 198, 915, 197, 915, 196, 915, 195, 915, 194, 915, 193, 915, 192, 915, 191, 915, 190, 915, 189, 915, 188, 915, 187, 915, 186, 915, 185, 914, 184, 913, 183, 907, 182, 906, 181, 905, 180, 904, 179, 904, 178, 904, 177, 904, 176, 904, 175, 904, 174, 904, 173, 903, 172, 901, 171, 899, 170, 898, 169, 896, 168, 895, 167, 893, 166, 892, 165, 890, 164, 888, 163, 886, 162, 885, 161, 874, 160, 873, 159, 872, 158, 871, 157, 871, 156, 870, 155, 847, 154, 845, 153, 843, 152, 842, 151, 840, 150, 838, 149, 836, 148, 835, 147, 833, 146, 831, 145, 829, 144, 827, 143, 825, 142, 824, 141, 822, 140, 822, 139, 822, 138, 822, 137, 822, 136, 822, 135, 822, 134, 822, 133, 822, 132, 822, 131, 822, 130, 821, 129, 819, 128, 817, 127, 814, 126, 812, 125, 809, 124, 806, 123, 803, 122, 801, 121, 798, 120, 795, 119, 792, 118, 789, 117, 786, 116, 783, 115, 779, 114, 776, 113, 773, 112, 769, 111, 765, 110, 762, 109, 759, 108, 756, 107, 752, 106, 748, 105, 744, 104, 740, 103, 736, 102, 732, 101, 728, 100, 724, 99, 719, 98, 714, 97, 709, 96, 704, 95, 699, 94, 693, 93, 688, 92, 680, 91, 675, 90, 670, 89, 662, 88, 655, 87, 645, 86, 637, 85, 629, 84, 615, 83, 604, 82, 579, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 554, 12, 554, 11, 554, 10, 554, 9, 554, 8, 554, 7, 554, 6, 554, 5, 554, 4, 556, 3, 577, 3], [551, 3, 554, 4, 554, 5, 554, 6, 554, 7, 554, 8, 554, 9, 554, 10, 554, 11, 554, 12, 554, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 544, 81, 519, 82, 508, 83, 494, 84, 485, 85, 478, 86, 468, 87, 461, 88, 453, 89, 447, 90, 441, 91, 435, 92, 430, 93, 423, 94, 419, 95, 414, 96, 408, 97, 404, 98, 399, 99, 395, 100, 390, 101, 386, 102, 382, 103, 378, 104, 375, 105, 371, 106, 367, 107, 363, 108, 359, 109, 356, 110, 353, 111, 349, 112, 346, 113, 343, 114, 340, 115, 337, 116, 334, 117, 331, 118, 328, 119, 325, 120, 322, 121, 319, 122, 317, 123, 315, 124, 314, 125, 314, 126, 314, 127, 314, 128, 314, 129, 314, 130, 314, 131, 314, 132, 314, 133, 314, 134, 313, 135, 311, 136, 309, 137, 307, 138, 305, 139, 303, 140, 302, 141, 300, 142, 298, 143, 296, 144, 295, 145, 293, 146, 291, 147, 289, 148, 266, 149, 265, 150, 264, 151, 263, 152, 252, 153, 251, 154, 249, 155, 247, 156, 246, 157, 244, 158, 242, 159, 240, 160, 239, 161, 237, 162, 235, 163, 234, 164, 233, 165, 233, 166, 233, 167, 233, 168, 233, 169, 233, 170, 233, 171, 232, 172, 230, 173, 229, 174, 223, 175, 222, 176, 222, 177, 222, 178, 222, 179, 222, 180, 222, 181, 222, 182, 222, 183, 222, 184, 222, 185, 222, 186, 222, 187, 221, 188, 221, 189, 220, 190, 219, 191, 217, 192, 215, 193, 213, 194, 211, 195, 209, 196, 207, 197, 206, 198, 204, 199, 202, 200, 200, 201, 198, 202, 196, 203, 164, 204, 162, 205, 161, 206, 160, 207, 158, 208, 157, 209, 155, 210, 154, 211, 153, 212, 151, 213, 150, 214, 149, 215, 147, 216, 146, 217, 145, 218, 144, 219, 142, 220, 141, 221, 140, 222, 139, 223, 137, 224, 136, 225, 135, 226, 134, 227, 133, 228, 132, 229, 130, 230, 129, 231, 128, 232, 127, 233, 126, 234, 125, 235, 123, 236, 122, 237, 121, 238, 120, 239, 119, 240, 118, 241, 117, 242, 116, 243, 115, 244, 114, 245, 113, 246, 112, 247, 111, 248, 110, 249, 109, 250, 108, 251, 107, 252, 106, 253, 105, 254, 104, 255, 103, 256, 102, 257, 102, 258, 101, 259, 100, 260, 99, 261, 98, 262, 97, 263, 96, 264, 95, 265, 95, 266, 94, 267, 93, 268, 92, 269, 91, 270, 90, 271, 90, 272, 89, 273, 88, 274, 87, 275, 87, 276, 86, 277, 85, 278, 84, 279, 84, 280, 83, 281, 82, 282, 82, 283, 81, 284, 80, 285, 79, 286, 79, 287, 78, 288, 77, 289, 77, 290, 76, 291, 75, 292, 75, 293, 74, 294, 73, 295, 73, 296, 72, 297, 72, 298, 71, 299, 70, 300, 70, 301, 69, 302, 69, 303, 68, 304, 68, 305, 67, 306, 66, 307, 66, 308, 65, 309, 65, 310, 64, 311, 64, 312, 63, 313, 63, 314, 62, 315, 62, 316, 61, 317, 61, 318, 60, 319, 60, 320, 59, 321, 59, 322, 58, 323, 58, 324, 57, 325, 57, 326, 56, 327, 56, 328, 56, 329, 55, 330, 55, 331, 54, 332, 54, 333, 54, 334, 53, 335, 53, 336, 52, 337, 52, 338, 52, 339, 51, 340, 24, 340, 24, 339, 25, 338, 25, 337, 25, 336, 24, 335, 25, 334, 25, 333, 25, 332, 25, 331, 25, 330, 25, 329, 25, 328, 25, 327, 25, 326, 25, 325, 25, 324, 26, 323, 25, 322, 25, 321, 25, 320, 26, 319, 26, 318, 26, 317, 25, 316, 26, 315, 26, 314, 26, 313, 26, 312, 26, 311, 26, 310, 27, 309, 27, 308, 27, 307, 27, 306, 27, 305, 28, 304, 28, 303, 28, 302, 28, 301, 28, 300, 29, 299, 29, 298, 28, 297, 28, 296, 29, 295, 30, 294, 30, 293, 29, 292, 30, 291, 30, 290, 31, 289, 31, 288, 31, 287, 31, 286, 32, 285, 32, 284, 32, 283, 32, 282, 32, 281, 33, 280, 33, 279, 33, 278, 33, 277, 34, 276, 35, 275, 35, 274, 35, 273, 35, 272, 36, 271, 37, 270, 36, 269, 37, 268, 38, 267, 39, 266, 39, 265, 39, 264, 39, 263, 40, 262, 40, 261, 41, 260, 41, 259, 41, 258, 42, 257, 43, 256, 43, 255, 43, 254, 44, 253, 44, 252, 45, 251, 46, 250, 46, 249, 46, 248, 47, 247, 48, 246, 48, 245, 48, 244, 48, 243, 49, 242, 50, 241, 50, 240, 51, 239, 51, 238, 53, 237, 53, 236, 53, 235, 53, 234, 54, 233, 55, 232, 55, 231, 56, 230, 57, 229, 58, 228, 58, 227, 58, 226, 59, 225, 60, 224, 61, 223, 61, 222, 61, 221, 63, 220, 64, 219, 64, 218, 64, 217, 65, 216, 66, 215, 67, 214, 67, 213, 68, 212, 69, 211, 70, 210, 70, 209, 71, 208, 72, 207, 73, 206, 73, 205, 74, 204, 76, 203, 76, 202, 76, 201, 77, 200, 79, 199, 79, 198, 80, 197, 81, 196, 82, 195, 82, 194, 83, 193, 85, 192, 85, 191, 86, 190, 87, 189, 89, 188, 89, 187, 90, 186, 91, 185, 92, 184, 93, 183, 94, 182, 96, 181, 96, 180, 97, 179, 98, 178, 99, 177, 100, 176, 100, 175, 102, 174, 103, 173, 104, 172, 105, 171, 106, 170, 107, 169, 108, 168, 110, 167, 110, 166, 111, 165, 112, 164, 114, 163, 115, 162, 116, 161, 118, 160, 118, 159, 119, 158, 121, 157, 122, 156, 123, 155, 125, 154, 126, 153, 127, 152, 129, 151, 130, 150, 131, 149, 133, 148, 134, 147, 134, 146, 137, 145, 138, 144, 139, 143, 141, 142, 142, 141, 143, 140, 145, 139, 146, 138, 148, 137, 149, 136, 150, 135, 150, 134, 151, 133, 154, 132, 155, 131, 155, 130, 158, 129, 159, 128, 160, 127, 163, 126, 166, 125, 166, 124, 166, 123, 166, 122, 166, 121, 166, 120, 166, 119, 166, 118, 166, 117, 166, 116, 166, 115, 166, 114, 166, 113, 166, 112, 166, 111, 167, 110, 166, 109, 164, 108, 163, 107, 162, 106, 162, 105, 162, 104, 162, 103, 162, 102, 162, 101, 162, 100, 162, 99, 162, 98, 162, 97, 162, 96, 162, 95, 162, 94, 162, 93, 162, 92, 162, 91, 164, 90, 166, 89, 167, 88, 167, 87, 167, 86, 167, 85, 167, 84, 167, 83, 167, 82, 166, 81, 165, 80, 164, 79, 163, 78, 163, 77, 164, 76, 166, 75, 168, 74, 170, 73, 172, 72, 174, 71, 176, 70, 178, 69, 179, 68, 181, 67, 183, 66, 185, 65, 187, 64, 189, 63, 191, 62, 192, 61, 194, 60, 259, 59, 259, 58, 259, 57, 259, 56, 259, 55, 259, 54, 258, 53, 256, 52, 256, 51, 255, 50, 255, 49, 255, 48, 255, 47, 255, 46, 255, 45, 255, 44, 255, 43, 255, 42, 255, 41, 255, 40, 255, 39, 255, 38, 255, 37, 255, 36, 257, 35, 259, 34, 260, 33, 260, 32, 260, 31, 260, 30, 260, 29, 260, 28, 260, 27, 259, 26, 257, 25, 256, 24, 256, 23, 256, 22, 257, 21, 259, 20, 261, 19, 263, 18, 265, 17, 267, 16, 269, 15, 271, 14, 273, 13, 275, 12, 276, 11, 278, 10, 280, 9, 282, 8, 283, 7, 285, 6, 509, 5, 530, 4, 546, 3, 551, 3], [1098, 341, 1098, 342, 1098, 343, 1098, 344, 1099, 345, 1098, 346, 1098, 347, 1098, 348, 1098, 349, 1098, 350, 1098, 351, 1098, 352, 1098, 353, 1098, 354, 1098, 355, 1098, 356, 1098, 357, 1098, 358, 1098, 359, 1098, 360, 1097, 361, 1097, 362, 1097, 363, 1098, 364, 1097, 365, 1097, 366, 1097, 367, 1097, 368, 1097, 369, 1097, 370, 1096, 371, 1096, 372, 1096, 373, 1096, 374, 1096, 375, 1095, 376, 1095, 377, 1096, 378, 1095, 379, 1095, 380, 1094, 381, 1095, 382, 1095, 383, 1094, 384, 1094, 385, 1093, 386, 1094, 387, 1094, 388, 1093, 389, 1093, 390, 1092, 391, 1092, 392, 1092, 393, 1092, 394, 1091, 395, 1091, 396, 1091, 397, 1091, 398, 1091, 399, 1090, 400, 1090, 401, 1090, 402, 1090, 403, 1090, 404, 1090, 405, 1090, 406, 1090, 407, 1090, 408, 1090, 409, 1090, 410, 1090, 411, 1090, 412, 1090, 413, 1089, 414, 1089, 415, 1089, 416, 1089, 417, 1090, 418, 1090, 419, 1090, 420, 1090, 421, 1090, 422, 1090, 423, 1089, 424, 1089, 425, 1089, 426, 1089, 427, 1089, 428, 1089, 429, 1089, 430, 1089, 431, 1089, 432, 1088, 433, 1088, 434, 1088, 435, 1088, 436, 1088, 437, 1087, 438, 1087, 439, 1087, 440, 1087, 441, 1087, 442, 1087, 443, 1086, 444, 1086, 445, 1086, 446, 1086, 447, 1085, 448, 1085, 449, 1085, 450, 1085, 451, 1084, 452, 1084, 453, 1084, 454, 1084, 455, 1083, 456, 1083, 457, 1083, 458, 1082, 459, 1082, 460, 1082, 461, 1081, 462, 1081, 463, 1081, 464, 1081, 465, 1080, 466, 1080, 467, 1079, 468, 1079, 469, 1079, 470, 1078, 471, 1078, 472, 1078, 473, 1077, 474, 1077, 475, 1076, 476, 1076, 477, 1076, 478, 1075, 479, 1075, 480, 1074, 481, 1074, 482, 1074, 483, 1073, 484, 1073, 485, 1072, 486, 1072, 487, 1071, 488, 1071, 489, 1070, 490, 1070, 491, 1069, 492, 1069, 493, 1068, 494, 1068, 495, 1067, 496, 1067, 497, 1066, 498, 1066, 499, 1065, 500, 1064, 501, 1064, 502, 1063, 503, 1063, 504, 1062, 505, 1062, 506, 1061, 507, 1061, 508, 1060, 509, 1059, 510, 1059, 511, 1059, 512, 1059, 513, 1059, 514, 1059, 515, 1059, 516, 1059, 517, 1059, 518, 1058, 519, 1058, 520, 1057, 521, 1056, 522, 1055, 523, 1055, 524, 1054, 525, 1053, 526, 1052, 527, 1051, 528, 1050, 529, 1046, 530, 1045, 531, 1044, 532, 1043, 533, 1042, 534, 1042, 535, 1041, 536, 1040, 537, 1039, 538, 1038, 539, 1037, 540, 1037, 541, 1036, 542, 1035, 543, 1034, 544, 1033, 545, 1032, 546, 1032, 547, 1031, 548, 1030, 549, 1029, 550, 1028, 551, 1027, 552, 1026, 553, 1025, 554, 1024, 555, 1023, 556, 1022, 557, 1021, 558, 1020, 559, 1019, 560, 1018, 561, 1017, 562, 1016, 563, 1016, 564, 1015, 565, 1013, 566, 1012, 567, 1011, 568, 1010, 569, 1010, 570, 1010, 571, 1010, 572, 1010, 573, 1010, 574, 1010, 575, 1009, 576, 1008, 577, 1007, 578, 1005, 579, 1004, 580, 1002, 581, 1001, 582, 999, 583, 997, 584, 996, 585, 994, 586, 993, 587, 991, 588, 990, 589, 988, 590, 986, 591, 985, 592, 984, 593, 963, 594, 962, 595, 961, 596, 961, 597, 960, 598, 959, 599, 958, 600, 949, 601, 947, 602, 946, 603, 944, 604, 943, 605, 942, 606, 940, 607, 939, 608, 937, 609, 936, 610, 935, 611, 934, 612, 932, 613, 931, 614, 930, 615, 928, 616, 928, 617, 928, 618, 928, 619, 928, 620, 928, 621, 928, 622, 927, 623, 926, 624, 924, 625, 920, 626, 918, 627, 917, 628, 917, 629, 917, 630, 917, 631, 917, 632, 917, 633, 917, 634, 917, 635, 917, 636, 917, 637, 917, 638, 917, 639, 917, 640, 917, 641, 916, 642, 914, 643, 913, 644, 911, 645, 910, 646, 908, 647, 906, 648, 905, 649, 903, 650, 902, 651, 900, 652, 899, 653, 897, 654, 896, 655, 894, 656, 892, 657, 891, 658, 891, 659, 861, 660, 858, 661, 855, 662, 853, 663, 850, 664, 848, 665, 845, 666, 843, 667, 840, 668, 837, 669, 834, 670, 832, 671, 829, 672, 825, 673, 822, 674, 819, 675, 816, 676, 813, 677, 810, 678, 807, 679, 803, 680, 800, 681, 796, 682, 793, 683, 789, 684, 786, 685, 786, 686, 786, 687, 786, 688, 784, 689, 780, 690, 776, 691, 773, 692, 754, 693, 749, 694, 745, 695, 740, 696, 735, 697, 730, 698, 725, 699, 720, 700, 714, 701, 708, 702, 703, 703, 696, 704, 689, 705, 683, 706, 675, 707, 667, 708, 658, 709, 648, 710, 637, 711, 626, 712, 625, 713, 624, 714, 617, 715, 609, 715, 554, 714, 554, 713, 554, 712, 554, 711, 554, 710, 554, 709, 554, 708, 554, 707, 554, 706, 554, 705, 554, 704, 554, 703, 554, 702, 554, 701, 554, 700, 554, 699, 554, 698, 554, 697, 554, 696, 554, 695, 554, 694, 554, 693, 554, 692, 554, 691, 554, 690, 554, 689, 554, 688, 554, 687, 554, 686, 554, 685, 554, 684, 554, 683, 554, 682, 554, 681, 554, 680, 554, 679, 554, 678, 554, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 594, 632, 604, 631, 627, 630, 643, 629, 650, 628, 672, 627, 678, 626, 685, 625, 691, 624, 698, 623, 704, 622, 711, 621, 712, 620, 719, 619, 725, 618, 731, 617, 732, 616, 738, 615, 745, 614, 746, 613, 752, 612, 758, 611, 759, 610, 765, 609, 771, 608, 772, 607, 778, 606, 779, 605, 784, 604, 785, 603, 791, 602, 797, 601, 798, 600, 803, 599, 804, 598, 809, 597, 810, 596, 811, 595, 817, 594, 822, 593, 823, 592, 830, 591, 831, 590, 832, 589, 836, 588, 837, 587, 842, 586, 843, 585, 845, 584, 850, 583, 851, 582, 856, 581, 857, 580, 861, 579, 862, 578, 862, 577, 862, 576, 862, 575, 862, 574, 862, 573, 862, 572, 862, 571, 862, 570, 862, 569, 862, 568, 862, 567, 859, 566, 858, 565, 858, 564, 858, 563, 858, 562, 858, 561, 858, 560, 858, 559, 858, 558, 858, 557, 858, 556, 858, 555, 858, 554, 858, 553, 858, 552, 858, 551, 858, 550, 858, 549, 859, 548, 861, 547, 862, 546, 862, 545, 862, 544, 862, 543, 862, 542, 862, 541, 862, 540, 862, 539, 861, 538, 859, 537, 858, 536, 859, 535, 860, 534, 861, 533, 863, 532, 864, 531, 866, 530, 868, 529, 869, 528, 871, 527, 872, 526, 874, 525, 876, 524, 877, 523, 879, 522, 880, 521, 882, 520, 883, 519, 885, 518, 886, 517, 888, 516, 889, 515, 948, 514, 949, 513, 951, 512, 953, 511, 954, 510, 955, 509, 955, 508, 955, 507, 955, 506, 955, 505, 955, 504, 955, 503, 955, 502, 954, 501, 952, 500, 951, 499, 951, 498, 951, 497, 951, 496, 951, 495, 951, 494, 951, 493, 951, 492, 951, 491, 951, 490, 951, 489, 951, 488, 951, 487, 951, 486, 951, 485, 951, 484, 953, 483, 954, 482, 955, 481, 955, 480, 955, 479, 955, 478, 955, 477, 955, 476, 956, 475, 955, 474, 953, 473, 952, 472, 951, 471, 951, 470, 952, 469, 954, 468, 955, 467, 957, 466, 959, 465, 960, 464, 962, 463, 963, 462, 965, 461, 967, 460, 968, 459, 970, 458, 971, 457, 973, 456, 974, 455, 976, 454, 977, 453, 978, 452, 980, 451, 982, 450, 1034, 449, 1035, 448, 1035, 447, 1036, 446, 1037, 445, 1038, 444, 1038, 443, 1038, 442, 1039, 441, 1039, 440, 1041, 439, 1042, 438, 1042, 437, 1042, 436, 1043, 435, 1044, 434, 1045, 433, 1045, 432, 1046, 431, 1046, 430, 1046, 429, 1047, 428, 1048, 427, 1048, 426, 1048, 425, 1049, 424, 1050, 423, 1051, 422, 1051, 421, 1051, 420, 1052, 419, 1052, 418, 1053, 417, 1054, 416, 1054, 415, 1054, 414, 1055, 413, 1056, 412, 1056, 411, 1056, 410, 1056, 409, 1057, 408, 1058, 407, 1058, 406, 1058, 405, 1058, 404, 1059, 403, 1059, 402, 1060, 401, 1061, 400, 1061, 399, 1061, 398, 1062, 397, 1062, 396, 1062, 395, 1063, 394, 1063, 393, 1063, 392, 1063, 391, 1063, 390, 1064, 389, 1065, 388, 1065, 387, 1065, 386, 1065, 385, 1066, 384, 1066, 383, 1066, 382, 1067, 381, 1067, 380, 1067, 379, 1067, 378, 1067, 377, 1068, 376, 1068, 375, 1068, 374, 1069, 373, 1069, 372, 1069, 371, 1069, 370, 1069, 369, 1069, 368, 1070, 367, 1070, 366, 1070, 365, 1070, 364, 1070, 363, 1070, 362, 1070, 361, 1071, 360, 1071, 359, 1071, 358, 1071, 357, 1071, 356, 1071, 355, 1071, 354, 1071, 353, 1071, 352, 1071, 351, 1071, 350, 1071, 349, 1071, 348, 1071, 347, 1071, 346, 1071, 345, 1071, 344, 1071, 343, 1071, 342, 1071, 341, 1098, 341], [51, 341, 51, 342, 51, 343, 51, 344, 52, 345, 52, 346, 52, 347, 51, 348, 51, 349, 51, 350, 51, 351, 51, 352, 51, 353, 51, 354, 51, 355, 51, 356, 52, 357, 52, 358, 52, 359, 52, 360, 52, 361, 52, 362, 52, 363, 53, 364, 53, 365, 53, 366, 53, 367, 53, 368, 53, 369, 54, 370, 54, 371, 54, 372, 54, 373, 54, 374, 55, 375, 55, 376, 56, 377, 56, 378, 56, 379, 56, 380, 56, 381, 57, 382, 57, 383, 57, 384, 58, 385, 58, 386, 58, 387, 58, 388, 59, 389, 59, 390, 60, 391, 60, 392, 60, 393, 60, 394, 60, 395, 61, 396, 61, 397, 61, 398, 61, 399, 62, 400, 63, 401, 63, 402, 64, 403, 64, 404, 64, 405, 64, 406, 65, 407, 66, 408, 66, 409, 66, 410, 67, 411, 67, 412, 68, 413, 68, 414, 69, 415, 69, 416, 70, 417, 70, 418, 71, 419, 72, 420, 72, 421, 72, 422, 73, 423, 74, 424, 74, 425, 74, 426, 75, 427, 76, 428, 76, 429, 77, 430, 77, 431, 77, 432, 78, 433, 79, 434, 80, 435, 80, 436, 81, 437, 81, 438, 82, 439, 83, 440, 84, 441, 84, 442, 85, 443, 85, 444, 86, 445, 87, 446, 87, 447, 139, 448, 140, 449, 142, 450, 143, 451, 144, 452, 146, 453, 148, 454, 149, 455, 150, 456, 152, 457, 154, 458, 155, 459, 157, 460, 158, 461, 160, 462, 162, 463, 163, 464, 165, 465, 166, 466, 168, 467, 169, 468, 169, 469, 168, 470, 166, 471, 165, 472, 165, 473, 165, 474, 165, 475, 165, 476, 165, 477, 165, 478, 166, 479, 167, 480, 168, 481, 170, 482, 169, 483, 169, 484, 169, 485, 170, 486, 170, 487, 170, 488, 170, 489, 170, 490, 170, 491, 170, 492, 170, 493, 170, 494, 170, 495, 170, 496, 169, 497, 168, 498, 167, 499, 166, 500, 166, 501, 166, 502, 166, 503, 166, 504, 166, 505, 166, 506, 166, 507, 166, 508, 169, 509, 170, 510, 172, 511, 173, 512, 232, 513, 233, 514, 235, 515, 236, 516, 237, 517, 239, 518, 240, 519, 242, 520, 244, 521, 245, 522, 247, 523, 248, 524, 250, 525, 252, 526, 253, 527, 255, 528, 256, 529, 258, 530, 259, 531, 261, 532, 262, 533, 262, 534, 261, 535, 259, 536, 258, 537, 258, 538, 258, 539, 258, 540, 258, 541, 258, 542, 258, 543, 258, 544, 260, 545, 262, 546, 262, 547, 263, 548, 263, 549, 263, 550, 263, 551, 263, 552, 263, 553, 263, 554, 263, 555, 263, 556, 263, 557, 263, 558, 263, 559, 263, 560, 263, 561, 263, 562, 262, 563, 261, 564, 258, 565, 258, 566, 259, 567, 259, 568, 259, 569, 259, 570, 259, 571, 259, 572, 259, 573, 259, 574, 259, 575, 259, 576, 259, 577, 259, 578, 261, 579, 266, 580, 267, 581, 272, 582, 273, 583, 278, 584, 279, 585, 280, 586, 285, 587, 286, 588, 291, 589, 292, 590, 298, 591, 299, 592, 300, 593, 306, 594, 312, 595, 313, 596, 313, 597, 319, 598, 320, 599, 325, 600, 326, 601, 331, 602, 337, 603, 338, 604, 344, 605, 345, 606, 351, 607, 352, 608, 358, 609, 364, 610, 365, 611, 370, 612, 376, 613, 377, 614, 385, 615, 390, 616, 392, 617, 397, 618, 404, 619, 410, 620, 417, 621, 419, 622, 425, 623, 431, 624, 438, 625, 445, 626, 451, 627, 471, 628, 480, 629, 496, 630, 519, 631, 529, 632, 551, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 554, 677, 554, 678, 554, 679, 554, 680, 554, 681, 554, 682, 554, 683, 554, 684, 554, 685, 554, 686, 554, 687, 554, 688, 554, 689, 554, 690, 554, 691, 554, 692, 554, 693, 554, 694, 554, 695, 554, 696, 554, 697, 554, 698, 554, 699, 554, 700, 554, 701, 554, 702, 554, 703, 554, 704, 554, 705, 554, 706, 554, 707, 554, 708, 554, 709, 554, 710, 554, 711, 554, 712, 554, 713, 554, 714, 513, 715, 506, 715, 498, 714, 498, 713, 493, 712, 483, 711, 473, 710, 463, 709, 456, 708, 448, 707, 440, 706, 433, 705, 426, 704, 420, 703, 414, 702, 408, 701, 403, 700, 398, 699, 392, 698, 387, 697, 381, 696, 377, 695, 373, 694, 368, 693, 350, 692, 346, 691, 342, 690, 338, 689, 337, 688, 337, 687, 337, 686, 336, 685, 333, 684, 330, 683, 326, 682, 323, 681, 319, 680, 316, 679, 313, 678, 309, 677, 306, 676, 303, 675, 300, 674, 298, 673, 295, 672, 292, 671, 289, 670, 286, 669, 283, 668, 280, 667, 278, 666, 275, 665, 272, 664, 270, 663, 267, 662, 264, 661, 262, 660, 259, 659, 257, 658, 255, 657, 229, 656, 228, 655, 227, 654, 225, 653, 223, 652, 222, 651, 220, 650, 219, 649, 217, 648, 216, 647, 214, 646, 213, 645, 211, 644, 210, 643, 208, 642, 206, 641, 205, 640, 204, 639, 204, 638, 203, 637, 203, 636, 203, 635, 203, 634, 203, 633, 203, 632, 203, 631, 203, 630, 203, 629, 203, 628, 203, 627, 203, 626, 202, 625, 200, 624, 196, 623, 195, 622, 194, 621, 192, 620, 192, 619, 192, 618, 192, 617, 192, 616, 192, 615, 192, 614, 192, 613, 190, 612, 189, 611, 187, 610, 186, 609, 185, 608, 183, 607, 182, 606, 180, 605, 179, 604, 178, 603, 176, 602, 175, 601, 173, 600, 172, 599, 163, 598, 162, 597, 161, 596, 160, 595, 159, 594, 159, 593, 157, 592, 137, 591, 136, 590, 134, 589, 133, 588, 131, 587, 130, 586, 128, 585, 127, 584, 125, 583, 123, 582, 122, 581, 120, 580, 119, 579, 117, 578, 115, 577, 114, 576, 112, 575, 111, 574, 111, 573, 111, 572, 111, 571, 111, 570, 111, 569, 110, 568, 110, 567, 109, 566, 108, 565, 107, 564, 106, 563, 105, 562, 104, 561, 103, 560, 102, 559, 101, 558, 100, 557, 99, 556, 98, 555, 97, 554, 97, 553, 96, 552, 95, 551, 94, 550, 93, 549, 92, 548, 91, 547, 90, 546, 89, 545, 88, 544, 88, 543, 87, 542, 86, 541, 85, 540, 84, 539, 84, 538, 83, 537, 82, 536, 81, 535, 80, 534, 80, 533, 79, 532, 78, 531, 77, 530, 72, 529, 71, 528, 70, 527, 69, 526, 69, 525, 68, 524, 67, 523, 66, 522, 66, 521, 65, 520, 64, 519, 64, 518, 63, 517, 63, 516, 63, 515, 63, 514, 63, 513, 64, 512, 64, 511, 63, 510, 63, 509, 62, 508, 62, 507, 61, 506, 60, 505, 60, 504, 59, 503, 59, 502, 58, 501, 57, 500, 57, 499, 56, 498, 56, 497, 55, 496, 55, 495, 54, 494, 54, 493, 53, 492, 53, 491, 52, 490, 52, 489, 51, 488, 51, 487, 50, 486, 50, 485, 49, 484, 49, 483, 49, 482, 48, 481, 48, 480, 47, 479, 47, 478, 47, 477, 46, 476, 46, 475, 45, 474, 45, 473, 45, 472, 44, 471, 44, 470, 43, 469, 43, 468, 43, 467, 42, 466, 42, 465, 42, 464, 41, 463, 41, 462, 41, 461, 40, 460, 40, 459, 40, 458, 40, 457, 39, 456, 39, 455, 39, 454, 38, 453, 38, 452, 38, 451, 38, 450, 37, 449, 37, 448, 37, 447, 37, 446, 37, 445, 36, 444, 36, 443, 36, 442, 36, 441, 35, 440, 35, 439, 35, 438, 35, 437, 35, 436, 35, 435, 35, 434, 34, 433, 34, 432, 34, 431, 34, 430, 34, 429, 33, 428, 33, 427, 33, 426, 33, 425, 33, 424, 33, 423, 33, 422, 33, 421, 33, 420, 33, 419, 33, 418, 33, 417, 33, 416, 33, 415, 33, 414, 33, 413, 32, 412, 32, 411, 32, 410, 32, 409, 32, 408, 32, 407, 32, 406, 32, 405, 32, 404, 32, 403, 33, 402, 33, 401, 33, 400, 32, 399, 31, 398, 31, 397, 32, 396, 31, 395, 31, 394, 30, 393, 30, 392, 30, 391, 30, 390, 29, 389, 29, 388, 29, 387, 29, 386, 29, 385, 28, 384, 28, 383, 28, 382, 28, 381, 28, 380, 27, 379, 27, 378, 27, 377, 27, 376, 27, 375, 26, 374, 26, 373, 27, 372, 27, 371, 26, 370, 26, 369, 26, 368, 26, 367, 26, 366, 25, 365, 25, 364, 25, 363, 25, 362, 25, 361, 25, 360, 24, 359, 25, 358, 25, 357, 25, 356, 24, 355, 24, 354, 25, 353, 25, 352, 25, 351, 24, 350, 24, 349, 25, 348, 25, 347, 24, 346, 24, 345, 24, 344, 25, 343, 25, 342, 24, 341, 51, 341]],
    32: [[556, 13, 558, 14, 599, 15, 601, 16, 602, 17, 639, 18, 645, 19, 648, 20, 650, 21, 666, 22, 692, 23, 695, 24, 696, 25, 701, 26, 723, 27, 725, 28, 726, 29, 755, 30, 758, 31, 760, 32, 763, 33, 764, 34, 766, 35, 767, 36, 772, 37, 775, 38, 778, 39, 780, 40, 783, 41, 785, 42, 787, 43, 802, 44, 803, 45, 804, 46, 805, 47, 806, 48, 807, 49, 824, 50, 827, 51, 829, 52, 843, 53, 845, 54, 847, 55, 848, 56, 848, 57, 849, 58, 855, 59, 856, 60, 857, 61, 859, 62, 860, 63, 861, 64, 862, 65, 866, 66, 873, 67, 875, 68, 877, 69, 878, 70, 879, 71, 879, 72, 880, 73, 889, 74, 900, 75, 902, 76, 903, 77, 905, 78, 906, 79, 908, 80, 909, 81, 911, 82, 913, 83, 914, 84, 915, 85, 916, 86, 917, 87, 917, 88, 918, 89, 918, 90, 919, 91, 920, 92, 921, 93, 921, 94, 921, 95, 922, 96, 923, 97, 923, 98, 924, 99, 924, 100, 925, 101, 925, 102, 926, 103, 927, 104, 952, 105, 953, 106, 955, 107, 956, 108, 957, 109, 959, 110, 960, 111, 961, 112, 963, 113, 964, 114, 966, 115, 968, 116, 968, 117, 969, 118, 970, 119, 970, 120, 971, 121, 972, 122, 972, 123, 973, 124, 973, 125, 974, 126, 974, 127, 975, 128, 976, 129, 976, 130, 977, 131, 978, 132, 978, 133, 979, 134, 980, 135, 980, 136, 980, 137, 981, 138, 981, 139, 987, 140, 989, 141, 990, 142, 991, 143, 991, 144, 992, 145, 992, 146, 993, 147, 993, 148, 994, 149, 994, 150, 995, 151, 995, 152, 996, 153, 996, 154, 997, 155, 998, 156, 999, 157, 1E3, 158, 1001, 159, 1002, 160, 1003, 161, 1003, 162, 1003, 163, 1004, 164, 1004, 165, 1005, 166, 1006, 167, 1007, 168, 1009, 169, 1016, 170, 1017, 171, 1018, 172, 1019, 173, 1019, 174, 1019, 175, 1020, 176, 1020, 177, 1020, 178, 1020, 179, 1020, 180, 1021, 181, 1022, 182, 1023, 183, 1024, 184, 1026, 185, 1028, 186, 1029, 187, 1029, 188, 1030, 189, 1030, 190, 1031, 191, 1032, 192, 1033, 193, 1034, 194, 1035, 195, 1036, 196, 1037, 197, 1037, 198, 1038, 199, 1039, 200, 1040, 201, 1040, 202, 1041, 203, 1041, 204, 1042, 205, 1042, 206, 1042, 207, 1043, 208, 1043, 209, 1043, 210, 1044, 211, 1045, 212, 1045, 213, 1045, 214, 1045, 215, 1045, 216, 1045, 217, 1045, 218, 1045, 219, 1045, 220, 1047, 221, 1048, 222, 1050, 223, 1051, 224, 1052, 225, 1053, 226, 1054, 227, 1055, 228, 1055, 229, 1056, 230, 1056, 231, 1057, 232, 1057, 233, 1058, 234, 1058, 235, 1059, 236, 1059, 237, 1059, 238, 1060, 239, 1061, 240, 1062, 241, 1062, 242, 1063, 243, 1064, 244, 1065, 245, 1065, 246, 1065, 247, 1066, 248, 1066, 249, 1066, 250, 1066, 251, 1066, 252, 1066, 253, 1066, 254, 1067, 255, 1067, 256, 1068, 257, 1068, 258, 1068, 259, 1069, 260, 1069, 261, 1069, 262, 1070, 263, 1070, 264, 1071, 265, 1072, 266, 1072, 267, 1072, 268, 1072, 269, 1073, 270, 1075, 271, 1075, 272, 1076, 273, 1076, 274, 1077, 275, 1077, 276, 1078, 277, 1078, 278, 1078, 279, 1078, 280, 1078, 281, 1078, 282, 1078, 283, 1078, 284, 1078, 285, 1078, 286, 1079, 287, 1079, 288, 1080, 289, 1089, 290, 1089, 291, 1089, 292, 1088, 293, 1088, 294, 1088, 295, 1087, 296, 1086, 297, 1085, 298, 1084, 299, 1083, 300, 1083, 301, 1082, 302, 1082, 303, 1083, 304, 1083, 305, 1083, 306, 1085, 307, 1087, 308, 1088, 309, 1089, 310, 1089, 311, 1090, 312, 1090, 313, 1090, 314, 1090, 315, 1091, 316, 1091, 317, 1091, 318, 1091, 319, 1091, 320, 1091, 321, 1091, 322, 1091, 323, 1090, 324, 1090, 325, 1089, 326, 1088, 327, 1086, 328, 1086, 329, 1086, 330, 1087, 331, 1087, 332, 1088, 333, 1088, 334, 1089, 335, 1089, 336, 1089, 337, 1102, 338, 1102, 339, 1102, 340, 1101, 341, 1037, 341, 1037, 340, 1036, 339, 1036, 338, 1036, 337, 1036, 336, 1036, 335, 1036, 334, 1036, 333, 1037, 332, 1037, 331, 1037, 330, 1034, 329, 1033, 328, 1032, 327, 1032, 326, 1032, 325, 1032, 324, 1032, 323, 1032, 322, 1032, 321, 1032, 320, 1030, 319, 1029, 318, 1028, 317, 1027, 316, 1027, 315, 1027, 314, 1027, 313, 1026, 312, 1026, 311, 1026, 310, 1026, 309, 1026, 308, 1026, 307, 1027, 306, 1028, 305, 1028, 304, 1028, 303, 1029, 302, 1028, 301, 1026, 300, 1026, 299, 1026, 298, 1026, 297, 1027, 296, 1027, 295, 1027, 294, 1027, 293, 1027, 292, 1027, 291, 1028, 290, 1028, 289, 1028, 288, 1024, 287, 1021, 286, 1020, 285, 1020, 284, 1020, 283, 1018, 282, 1017, 281, 1017, 280, 1016, 279, 1016, 278, 1014, 277, 1014, 276, 1013, 275, 1013, 274, 1013, 273, 1013, 272, 1013, 271, 1013, 270, 1013, 269, 1013, 268, 1011, 267, 1010, 266, 1010, 265, 1010, 264, 1009, 263, 1009, 262, 1009, 261, 1009, 260, 1009, 259, 1009, 258, 1010, 257, 993, 256, 992, 255, 991, 254, 991, 253, 992, 252, 997, 251, 989, 250, 987, 249, 987, 248, 986, 247, 985, 246, 984, 245, 983, 244, 982, 243, 981, 242, 981, 241, 980, 240, 980, 239, 980, 238, 979, 237, 977, 236, 976, 235, 975, 234, 974, 233, 974, 232, 974, 231, 975, 230, 975, 229, 974, 228, 974, 227, 974, 226, 969, 225, 968, 224, 967, 223, 968, 222, 966, 221, 964, 220, 963, 219, 962, 218, 962, 217, 963, 216, 968, 215, 969, 214, 973, 213, 973, 212, 961, 211, 961, 210, 956, 209, 956, 208, 954, 207, 945, 206, 943, 205, 940, 204, 938, 203, 937, 202, 936, 201, 936, 200, 936, 199, 936, 198, 936, 197, 936, 196, 937, 195, 937, 194, 938, 193, 936, 192, 932, 191, 928, 190, 927, 189, 926, 188, 926, 187, 922, 186, 921, 185, 920, 184, 920, 183, 920, 182, 920, 181, 920, 180, 920, 179, 920, 178, 920, 177, 920, 176, 920, 175, 920, 174, 920, 173, 920, 172, 919, 171, 919, 170, 919, 169, 919, 168, 919, 167, 919, 166, 919, 165, 919, 164, 919, 163, 919, 162, 919, 161, 919, 160, 919, 159, 919, 158, 919, 157, 871, 156, 869, 155, 868, 154, 868, 153, 868, 152, 868, 151, 868, 150, 868, 149, 868, 148, 868, 147, 866, 146, 864, 145, 862, 144, 862, 143, 859, 142, 858, 141, 858, 140, 857, 139, 857, 138, 856, 137, 856, 136, 854, 135, 854, 134, 854, 133, 853, 132, 852, 131, 841, 130, 838, 129, 835, 128, 834, 127, 829, 126, 828, 125, 827, 124, 818, 123, 815, 122, 815, 121, 807, 120, 805, 119, 804, 118, 803, 117, 803, 116, 798, 115, 795, 114, 793, 113, 792, 112, 792, 111, 790, 110, 776, 109, 748, 108, 746, 107, 745, 106, 743, 105, 741, 104, 716, 103, 715, 102, 715, 101, 707, 100, 705, 99, 702, 98, 677, 97, 674, 96, 674, 95, 669, 94, 666, 93, 665, 92, 622, 91, 621, 90, 615, 89, 611, 88, 554, 87, 554, 86, 554, 85, 554, 84, 554, 83, 554, 82, 554, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 556, 13], [495, 11, 497, 12, 554, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 554, 81, 554, 82, 554, 83, 554, 84, 554, 85, 554, 86, 554, 87, 470, 88, 469, 89, 467, 90, 463, 91, 432, 92, 431, 93, 429, 94, 420, 95, 415, 96, 414, 97, 412, 98, 394, 99, 393, 100, 393, 101, 392, 102, 391, 103, 389, 104, 389, 105, 387, 106, 386, 107, 384, 108, 379, 109, 376, 110, 373, 111, 369, 112, 367, 113, 364, 114, 338, 115, 331, 116, 324, 117, 323, 118, 323, 119, 324, 120, 324, 121, 323, 122, 323, 123, 322, 124, 319, 125, 316, 126, 307, 127, 308, 128, 308, 129, 308, 130, 308, 131, 314, 132, 307, 133, 306, 134, 305, 135, 304, 136, 300, 137, 298, 138, 296, 139, 289, 140, 285, 141, 277, 142, 275, 143, 274, 144, 274, 145, 274, 146, 272, 147, 222, 148, 222, 149, 222, 150, 222, 151, 222, 152, 222, 153, 222, 154, 222, 155, 222, 156, 222, 157, 222, 158, 222, 159, 222, 160, 222, 161, 222, 162, 222, 163, 222, 164, 222, 165, 222, 166, 221, 167, 222, 168, 222, 169, 222, 170, 222, 171, 222, 172, 222, 173, 222, 174, 222, 175, 222, 176, 220, 177, 219, 178, 207, 179, 207, 180, 207, 181, 205, 182, 203, 183, 202, 184, 201, 185, 198, 186, 189, 187, 189, 188, 189, 189, 188, 190, 187, 191, 186, 192, 184, 193, 183, 194, 183, 195, 183, 196, 183, 197, 183, 198, 183, 199, 182, 200, 181, 201, 178, 202, 178, 203, 170, 204, 170, 205, 169, 206, 169, 207, 170, 208, 170, 209, 170, 210, 170, 211, 170, 212, 168, 213, 165, 214, 165, 215, 163, 216, 147, 217, 146, 218, 146, 219, 146, 220, 146, 221, 146, 222, 146, 223, 145, 224, 145, 225, 143, 226, 144, 227, 145, 228, 145, 229, 144, 230, 143, 231, 141, 232, 141, 233, 140, 234, 140, 235, 137, 236, 132, 237, 127, 238, 128, 239, 128, 240, 128, 241, 128, 242, 128, 243, 128, 244, 128, 245, 128, 246, 128, 247, 126, 248, 126, 249, 125, 250, 125, 251, 124, 252, 124, 253, 125, 254, 125, 255, 125, 256, 125, 257, 125, 258, 125, 259, 125, 260, 124, 261, 123, 262, 122, 263, 120, 264, 116, 265, 117, 266, 118, 267, 119, 268, 119, 269, 119, 270, 119, 271, 119, 272, 119, 273, 119, 274, 119, 275, 118, 276, 116, 277, 116, 278, 115, 279, 115, 280, 114, 281, 114, 282, 113, 283, 113, 284, 112, 285, 112, 286, 111, 287, 109, 288, 105, 289, 105, 290, 105, 291, 104, 292, 103, 293, 103, 294, 103, 295, 104, 296, 104, 297, 103, 298, 102, 299, 102, 300, 101, 301, 101, 302, 100, 303, 95, 304, 95, 305, 95, 306, 95, 307, 95, 308, 96, 309, 97, 310, 97, 311, 98, 312, 98, 313, 98, 314, 97, 315, 97, 316, 97, 317, 97, 318, 97, 319, 96, 320, 96, 321, 94, 322, 92, 323, 91, 324, 90, 325, 90, 326, 90, 327, 90, 328, 90, 329, 90, 330, 90, 331, 89, 332, 89, 333, 87, 334, 86, 335, 85, 336, 86, 337, 86, 338, 86, 339, 86, 340, 86, 341, 27, 341, 27, 340, 27, 339, 27, 338, 27, 337, 27, 336, 27, 335, 27, 334, 28, 333, 28, 332, 29, 331, 30, 330, 30, 329, 31, 328, 32, 327, 33, 326, 33, 325, 33, 324, 33, 323, 33, 322, 33, 321, 34, 320, 34, 319, 34, 318, 34, 317, 34, 316, 34, 315, 34, 314, 34, 313, 34, 312, 34, 311, 34, 310, 34, 309, 35, 308, 35, 307, 35, 306, 34, 305, 32, 304, 31, 303, 30, 302, 30, 301, 29, 300, 31, 299, 34, 298, 40, 297, 39, 296, 38, 295, 38, 294, 37, 293, 36, 292, 36, 291, 35, 290, 34, 289, 34, 288, 34, 287, 33, 286, 33, 285, 33, 284, 33, 283, 33, 282, 43, 281, 43, 280, 43, 279, 43, 278, 43, 277, 43, 276, 44, 275, 44, 274, 45, 273, 45, 272, 46, 271, 47, 270, 47, 269, 47, 268, 48, 267, 48, 266, 48, 265, 49, 264, 49, 263, 50, 262, 50, 261, 51, 260, 51, 259, 52, 258, 52, 257, 52, 256, 53, 255, 53, 254, 54, 253, 54, 252, 55, 251, 56, 250, 56, 249, 57, 248, 58, 247, 58, 246, 58, 245, 59, 244, 59, 243, 60, 242, 61, 241, 62, 240, 63, 239, 63, 238, 63, 237, 63, 236, 63, 235, 63, 234, 63, 233, 63, 232, 64, 231, 64, 230, 64, 229, 65, 228, 65, 227, 66, 226, 66, 225, 67, 224, 68, 223, 69, 222, 70, 221, 71, 220, 73, 219, 74, 218, 75, 217, 76, 216, 76, 215, 77, 214, 78, 213, 79, 212, 80, 211, 82, 210, 83, 209, 83, 208, 84, 207, 84, 206, 85, 205, 85, 204, 85, 203, 85, 202, 86, 201, 86, 200, 86, 199, 87, 198, 87, 197, 87, 196, 87, 195, 88, 194, 88, 193, 89, 192, 89, 191, 90, 190, 90, 189, 91, 188, 92, 187, 93, 186, 94, 185, 96, 184, 97, 183, 98, 182, 99, 181, 99, 180, 100, 179, 101, 178, 102, 177, 103, 176, 104, 175, 105, 174, 107, 173, 108, 172, 108, 171, 108, 170, 109, 169, 110, 168, 111, 167, 112, 166, 113, 165, 114, 164, 116, 163, 116, 162, 117, 161, 117, 160, 118, 159, 118, 158, 119, 157, 120, 156, 121, 155, 122, 154, 123, 153, 124, 152, 125, 151, 126, 150, 127, 149, 128, 148, 130, 147, 132, 146, 134, 145, 136, 144, 136, 143, 136, 142, 137, 141, 138, 140, 138, 139, 139, 138, 140, 137, 141, 136, 142, 135, 144, 134, 146, 133, 148, 132, 149, 131, 149, 130, 150, 129, 150, 128, 151, 127, 152, 126, 152, 125, 154, 124, 156, 123, 162, 122, 164, 121, 165, 120, 165, 119, 166, 118, 166, 117, 167, 116, 167, 115, 168, 114, 169, 113, 169, 112, 171, 111, 173, 110, 173, 109, 174, 108, 175, 107, 177, 106, 178, 105, 179, 104, 181, 103, 182, 102, 184, 101, 185, 100, 186, 99, 188, 98, 189, 97, 214, 96, 215, 95, 216, 94, 216, 93, 217, 92, 218, 91, 218, 90, 219, 89, 220, 88, 220, 87, 221, 86, 222, 85, 223, 84, 223, 83, 224, 82, 225, 81, 226, 80, 228, 79, 228, 78, 228, 77, 228, 76, 229, 75, 230, 74, 232, 73, 234, 72, 236, 71, 237, 70, 239, 69, 240, 68, 242, 67, 255, 66, 260, 65, 264, 64, 266, 63, 268, 62, 268, 61, 268, 60, 269, 59, 270, 58, 271, 57, 272, 56, 274, 55, 277, 54, 291, 53, 293, 52, 301, 51, 303, 50, 307, 49, 308, 48, 310, 47, 311, 46, 313, 45, 314, 44, 316, 43, 318, 42, 324, 41, 332, 40, 334, 39, 335, 38, 337, 37, 343, 36, 345, 35, 347, 34, 348, 33, 350, 32, 352, 31, 371, 30, 372, 29, 374, 28, 383, 27, 386, 26, 387, 25, 389, 24, 391, 23, 394, 22, 396, 21, 401, 20, 416, 19, 418, 18, 424, 17, 441, 16, 441, 15, 443, 14, 444, 13, 448, 12, 480, 11, 495, 11], [1101, 342, 1101, 343, 1100, 344, 1100, 345, 1099, 346, 1099, 347, 1098, 348, 1098, 349, 1097, 350, 1096, 351, 1095, 352, 1094, 353, 1094, 354, 1094, 355, 1093, 356, 1093, 357, 1093, 358, 1092, 359, 1091, 360, 1091, 361, 1092, 362, 1093, 363, 1095, 364, 1098, 365, 1098, 366, 1097, 367, 1096, 368, 1092, 369, 1092, 370, 1092, 371, 1092, 372, 1092, 373, 1092, 374, 1093, 375, 1093, 376, 1093, 377, 1093, 378, 1093, 379, 1093, 380, 1093, 381, 1093, 382, 1094, 383, 1094, 384, 1095, 385, 1095, 386, 1096, 387, 1097, 388, 1098, 389, 1098, 390, 1099, 391, 1099, 392, 1099, 393, 1099, 394, 1099, 395, 1099, 396, 1099, 397, 1099, 398, 1099, 399, 1099, 400, 1099, 401, 1099, 402, 1099, 403, 1098, 404, 1098, 405, 1096, 406, 1096, 407, 1093, 408, 1093, 409, 1093, 410, 1092, 411, 1092, 412, 1091, 413, 1090, 414, 1089, 415, 1088, 416, 1087, 417, 1086, 418, 1085, 419, 1084, 420, 1084, 421, 1084, 422, 1084, 423, 1083, 424, 1084, 425, 1085, 426, 1085, 427, 1086, 428, 1086, 429, 1086, 430, 1086, 431, 1086, 432, 1086, 433, 1084, 434, 1084, 435, 1084, 436, 1084, 437, 1083, 438, 1082, 439, 1081, 440, 1082, 441, 1082, 442, 1082, 443, 1083, 444, 1082, 445, 1082, 446, 1082, 447, 1081, 448, 1079, 449, 1080, 450, 1079, 451, 1079, 452, 1078, 453, 1078, 454, 1078, 455, 1078, 456, 1078, 457, 1079, 458, 1080, 459, 1080, 460, 1080, 461, 1080, 462, 1080, 463, 1080, 464, 1079, 465, 1079, 466, 1078, 467, 1078, 468, 1077, 469, 1075, 470, 1074, 471, 1074, 472, 1073, 473, 1073, 474, 1072, 475, 1072, 476, 1071, 477, 1070, 478, 1068, 479, 1068, 480, 1066, 481, 1062, 482, 1062, 483, 1063, 484, 1064, 485, 1064, 486, 1065, 487, 1066, 488, 1066, 489, 1066, 490, 1067, 491, 1067, 492, 1068, 493, 1068, 494, 1068, 495, 1067, 496, 1067, 497, 1067, 498, 1066, 499, 1066, 500, 1065, 501, 1065, 502, 1064, 503, 1063, 504, 1063, 505, 1063, 506, 1063, 507, 1062, 508, 1061, 509, 1060, 510, 1060, 511, 1060, 512, 1059, 513, 1057, 514, 1057, 515, 1056, 516, 1055, 517, 1054, 518, 1053, 519, 1045, 520, 1045, 521, 1046, 522, 1048, 523, 1048, 524, 1049, 525, 1049, 526, 1049, 527, 1049, 528, 1049, 529, 1049, 530, 1048, 531, 1043, 532, 1043, 533, 1040, 534, 1034, 535, 1032, 536, 1031, 537, 1025, 538, 1024, 539, 1023, 540, 1020, 541, 1020, 542, 1020, 543, 1021, 544, 1021, 545, 1021, 546, 1021, 547, 1021, 548, 1021, 549, 1020, 550, 1020, 551, 1020, 552, 1020, 553, 1020, 554, 1021, 555, 1021, 556, 1021, 557, 1021, 558, 1021, 559, 1021, 560, 1019, 561, 1019, 562, 1016, 563, 1016, 564, 1016, 565, 1015, 566, 1015, 567, 1015, 568, 1015, 569, 1015, 570, 1014, 571, 1012, 572, 1011, 573, 1009, 574, 1003, 575, 1003, 576, 1003, 577, 1001, 578, 998, 579, 998, 580, 997, 581, 994, 582, 990, 583, 990, 584, 990, 585, 990, 586, 990, 587, 990, 588, 990, 589, 990, 590, 990, 591, 990, 592, 990, 593, 990, 594, 990, 595, 989, 596, 938, 597, 938, 598, 938, 599, 938, 600, 938, 601, 938, 602, 938, 603, 938, 604, 938, 605, 938, 606, 938, 607, 938, 608, 938, 609, 938, 610, 938, 611, 938, 612, 938, 613, 938, 614, 938, 615, 938, 616, 938, 617, 939, 618, 939, 619, 939, 620, 938, 621, 938, 622, 938, 623, 938, 624, 938, 625, 937, 626, 935, 627, 914, 628, 913, 629, 911, 630, 910, 631, 908, 632, 914, 633, 914, 634, 914, 635, 914, 636, 913, 637, 896, 638, 888, 639, 888, 640, 888, 641, 888, 642, 889, 643, 889, 644, 888, 645, 887, 646, 885, 647, 880, 648, 880, 649, 880, 650, 879, 651, 878, 652, 877, 653, 874, 654, 873, 655, 870, 656, 868, 657, 867, 658, 859, 659, 858, 660, 857, 661, 859, 662, 860, 663, 860, 664, 860, 665, 860, 666, 859, 667, 858, 668, 831, 669, 829, 670, 826, 671, 823, 672, 820, 673, 815, 674, 810, 675, 821, 676, 821, 677, 821, 678, 821, 679, 820, 680, 811, 681, 795, 682, 790, 683, 785, 684, 776, 685, 776, 686, 775, 687, 774, 688, 766, 689, 757, 690, 756, 691, 755, 692, 754, 693, 749, 694, 749, 695, 744, 696, 740, 697, 732, 698, 729, 699, 723, 700, 722, 701, 710, 702, 707, 703, 724, 704, 725, 705, 726, 706, 726, 707, 726, 708, 725, 709, 724, 710, 723, 711, 680, 712, 679, 713, 678, 714, 678, 715, 676, 716, 670, 717, 667, 718, 622, 719, 621, 720, 608, 721, 607, 722, 603, 722, 599, 721, 577, 720, 565, 719, 563, 718, 564, 717, 564, 716, 575, 715, 600, 714, 556, 713, 554, 712, 554, 711, 554, 710, 554, 709, 554, 708, 554, 707, 554, 706, 554, 705, 554, 704, 554, 703, 554, 702, 554, 701, 554, 700, 554, 699, 554, 698, 554, 697, 554, 696, 554, 695, 554, 694, 554, 693, 554, 692, 554, 691, 554, 690, 554, 689, 554, 688, 554, 687, 554, 686, 554, 685, 554, 684, 554, 683, 554, 682, 554, 681, 554, 680, 554, 679, 554, 678, 554, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 554, 632, 554, 631, 554, 630, 554, 629, 563, 628, 583, 627, 584, 626, 662, 625, 663, 624, 665, 623, 667, 622, 670, 621, 674, 620, 690, 619, 693, 618, 695, 617, 701, 616, 731, 615, 731, 614, 732, 613, 733, 612, 733, 611, 734, 610, 735, 609, 737, 608, 746, 607, 750, 606, 760, 605, 761, 604, 765, 603, 768, 602, 769, 601, 770, 600, 772, 599, 773, 598, 774, 597, 776, 596, 778, 595, 782, 594, 804, 593, 805, 592, 806, 591, 808, 590, 816, 589, 817, 588, 819, 587, 820, 586, 821, 585, 823, 584, 825, 583, 830, 582, 830, 581, 831, 580, 832, 579, 833, 578, 835, 577, 837, 576, 848, 575, 854, 574, 857, 573, 866, 572, 867, 571, 868, 570, 869, 569, 871, 568, 883, 567, 884, 566, 885, 565, 885, 564, 886, 563, 886, 562, 887, 561, 888, 560, 888, 559, 889, 558, 890, 557, 891, 556, 892, 555, 894, 554, 896, 553, 897, 552, 899, 551, 900, 550, 901, 549, 903, 548, 904, 547, 905, 546, 907, 545, 929, 544, 931, 543, 932, 542, 932, 541, 933, 540, 934, 539, 935, 538, 935, 537, 936, 536, 937, 535, 937, 534, 938, 533, 939, 532, 939, 531, 940, 530, 940, 529, 941, 528, 941, 527, 943, 526, 944, 525, 945, 524, 947, 523, 948, 522, 950, 521, 951, 520, 953, 519, 954, 518, 955, 517, 957, 516, 958, 515, 960, 514, 964, 513, 965, 512, 965, 511, 966, 510, 966, 509, 967, 508, 968, 507, 968, 506, 969, 505, 969, 504, 970, 503, 970, 502, 971, 501, 971, 500, 972, 499, 972, 498, 973, 497, 975, 496, 978, 495, 980, 494, 981, 493, 981, 492, 982, 491, 983, 490, 984, 489, 985, 488, 986, 487, 986, 486, 986, 485, 986, 484, 987, 483, 987, 482, 988, 481, 988, 480, 989, 479, 990, 478, 990, 477, 991, 476, 992, 475, 993, 474, 994, 473, 995, 472, 995, 471, 996, 470, 996, 469, 997, 468, 997, 467, 997, 466, 997, 465, 997, 464, 997, 463, 997, 462, 997, 461, 998, 460, 998, 459, 999, 458, 1E3, 457, 1001, 456, 1003, 455, 1004, 454, 1005, 453, 1005, 452, 1006, 451, 1006, 450, 1007, 449, 1007, 448, 1008, 447, 1009, 446, 1009, 445, 1010, 444, 1010, 443, 1011, 442, 1011, 441, 1012, 440, 1012, 439, 1012, 438, 1013, 437, 1013, 436, 1013, 435, 1014, 434, 1014, 433, 1014, 432, 1014, 431, 1014, 430, 1014, 429, 1015, 428, 1015, 427, 1015, 426, 1015, 425, 1016, 424, 1016, 423, 1017, 422, 1017, 421, 1018, 420, 1019, 419, 1020, 418, 1020, 417, 1020, 416, 1020, 415, 1020, 414, 1020, 413, 1020, 412, 1021, 411, 1021, 410, 1022, 409, 1023, 408, 1023, 407, 1023, 406, 1023, 405, 1023, 404, 1024, 403, 1024, 402, 1024, 401, 1025, 400, 1025, 399, 1025, 398, 1025, 397, 1026, 396, 1027, 395, 1027, 394, 1029, 393, 1030, 392, 1031, 391, 1031, 390, 1031, 389, 1031, 388, 1031, 387, 1031, 386, 1031, 385, 1031, 384, 1031, 383, 1031, 382, 1031, 381, 1031, 380, 1032, 379, 1032, 378, 1033, 377, 1034, 376, 1035, 375, 1035, 374, 1036, 373, 1036, 372, 1036, 371, 1036, 370, 1036, 369, 1036, 368, 1036, 367, 1037, 366, 1037, 365, 1037, 364, 1038, 363, 1038, 362, 1039, 361, 1039, 360, 1040, 359, 1040, 358, 1040, 357, 1040, 356, 1040, 355, 1040, 354, 1039, 353, 1039, 352, 1039, 351, 1039, 350, 1039, 349, 1039, 348, 1039, 347, 1039, 346, 1039, 345, 1039, 344, 1039, 343, 1038, 342, 1101, 342], [86, 342, 86, 343, 86, 344, 86, 345, 86, 346, 85, 347, 85, 348, 85, 349, 85, 350, 85, 351, 86, 352, 86, 353, 86, 354, 85, 355, 85, 356, 85, 357, 85, 358, 85, 359, 85, 360, 85, 361, 85, 362, 85, 363, 85, 364, 85, 365, 86, 366, 86, 367, 87, 368, 87, 369, 88, 370, 89, 371, 89, 372, 90, 373, 90, 374, 91, 375, 91, 376, 92, 377, 92, 378, 92, 379, 92, 380, 92, 381, 92, 382, 92, 383, 92, 384, 92, 385, 92, 386, 92, 387, 93, 388, 93, 389, 94, 390, 95, 391, 95, 392, 96, 393, 96, 394, 96, 395, 276, 396, 276, 397, 96, 398, 96, 399, 96, 400, 97, 401, 97, 402, 97, 403, 97, 404, 97, 405, 97, 406, 97, 407, 97, 408, 96, 409, 96, 410, 96, 411, 97, 412, 98, 413, 98, 414, 99, 415, 100, 416, 100, 417, 101, 418, 101, 419, 102, 420, 105, 421, 106, 422, 108, 423, 109, 424, 110, 425, 110, 426, 111, 427, 112, 428, 113, 429, 113, 430, 114, 431, 115, 432, 116, 433, 116, 434, 116, 435, 117, 436, 117, 437, 117, 438, 117, 439, 116, 440, 117, 441, 117, 442, 118, 443, 119, 444, 119, 445, 120, 446, 120, 447, 121, 448, 122, 449, 122, 450, 123, 451, 124, 452, 124, 453, 125, 454, 128, 455, 130, 456, 131, 457, 132, 458, 133, 459, 133, 460, 134, 461, 135, 462, 136, 463, 137, 464, 138, 465, 139, 466, 140, 467, 140, 468, 141, 469, 141, 470, 142, 471, 142, 472, 142, 473, 142, 474, 142, 475, 143, 476, 143, 477, 145, 478, 145, 479, 146, 480, 147, 481, 147, 482, 147, 483, 147, 484, 147, 485, 148, 486, 148, 487, 149, 488, 149, 489, 149, 490, 150, 491, 150, 492, 151, 493, 151, 494, 152, 495, 153, 496, 153, 497, 154, 498, 155, 499, 158, 500, 159, 501, 161, 502, 166, 503, 168, 504, 169, 505, 169, 506, 170, 507, 171, 508, 172, 509, 173, 510, 175, 511, 176, 512, 177, 513, 178, 514, 179, 515, 180, 516, 180, 517, 181, 518, 182, 519, 183, 520, 185, 521, 185, 522, 186, 523, 187, 524, 187, 525, 188, 526, 189, 527, 189, 528, 190, 529, 190, 530, 191, 531, 192, 532, 192, 533, 193, 534, 193, 535, 194, 536, 195, 537, 195, 538, 196, 539, 222, 540, 224, 541, 226, 542, 227, 543, 228, 544, 229, 545, 231, 546, 232, 547, 233, 548, 235, 549, 237, 550, 238, 551, 239, 552, 240, 553, 240, 554, 241, 555, 242, 556, 243, 557, 244, 558, 246, 559, 252, 560, 253, 561, 255, 562, 255, 563, 257, 564, 269, 565, 273, 566, 274, 567, 275, 568, 276, 569, 282, 570, 287, 571, 288, 572, 295, 573, 299, 574, 300, 575, 301, 576, 302, 577, 303, 578, 303, 579, 304, 580, 305, 581, 306, 582, 307, 583, 308, 584, 309, 585, 310, 586, 310, 587, 311, 588, 322, 589, 324, 590, 325, 591, 327, 592, 328, 593, 329, 594, 329, 595, 331, 596, 332, 597, 333, 598, 340, 599, 357, 600, 360, 601, 361, 602, 371, 603, 372, 604, 374, 605, 374, 606, 383, 607, 385, 608, 386, 609, 395, 610, 399, 611, 415, 612, 418, 613, 419, 614, 433, 615, 435, 616, 450, 617, 452, 618, 455, 619, 458, 620, 475, 621, 476, 622, 477, 623, 481, 624, 484, 625, 550, 626, 553, 627, 554, 628, 554, 629, 554, 630, 554, 631, 554, 632, 554, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 554, 677, 554, 678, 554, 679, 554, 680, 554, 681, 554, 682, 554, 683, 554, 684, 554, 685, 554, 686, 554, 687, 554, 688, 554, 689, 554, 690, 554, 691, 554, 692, 554, 693, 554, 694, 554, 695, 554, 696, 554, 697, 554, 698, 554, 699, 554, 700, 554, 701, 554, 702, 554, 703, 554, 704, 554, 705, 554, 706, 554, 707, 554, 708, 554, 709, 554, 710, 549, 711, 548, 712, 547, 713, 527, 713, 469, 712, 467, 711, 467, 710, 468, 709, 468, 708, 469, 707, 477, 706, 476, 705, 471, 704, 453, 703, 386, 702, 383, 701, 373, 700, 373, 699, 374, 698, 381, 697, 382, 696, 385, 695, 374, 694, 369, 693, 363, 692, 361, 691, 356, 690, 355, 689, 344, 688, 343, 687, 336, 686, 332, 685, 330, 684, 328, 683, 317, 682, 317, 681, 308, 680, 306, 679, 306, 678, 306, 677, 307, 676, 315, 675, 313, 674, 311, 673, 311, 672, 307, 671, 305, 670, 305, 669, 304, 668, 284, 667, 277, 666, 275, 665, 274, 664, 271, 663, 270, 662, 268, 661, 268, 660, 267, 659, 268, 658, 268, 657, 255, 656, 254, 655, 224, 654, 222, 653, 222, 652, 222, 651, 222, 650, 223, 649, 224, 648, 224, 647, 226, 646, 236, 645, 236, 644, 241, 643, 241, 642, 240, 641, 211, 640, 209, 639, 208, 638, 203, 637, 201, 636, 200, 635, 199, 634, 198, 633, 197, 632, 196, 631, 195, 630, 195, 629, 195, 628, 196, 627, 196, 626, 197, 625, 197, 624, 192, 623, 190, 622, 189, 621, 189, 620, 189, 619, 189, 618, 189, 617, 189, 616, 189, 615, 189, 614, 189, 613, 189, 612, 189, 611, 189, 610, 189, 609, 189, 608, 189, 607, 189, 606, 189, 605, 189, 604, 189, 603, 189, 602, 189, 601, 189, 600, 189, 599, 189, 598, 189, 597, 189, 596, 189, 595, 189, 594, 189, 593, 140, 592, 139, 591, 138, 590, 138, 589, 138, 588, 138, 587, 135, 586, 136, 585, 135, 584, 131, 583, 130, 582, 128, 581, 126, 580, 125, 579, 125, 578, 125, 577, 123, 576, 122, 575, 121, 574, 120, 573, 120, 572, 119, 571, 119, 570, 118, 569, 118, 568, 119, 567, 119, 566, 111, 565, 109, 564, 107, 563, 107, 562, 105, 561, 104, 560, 102, 559, 100, 558, 99, 557, 98, 556, 97, 555, 97, 554, 97, 553, 95, 552, 94, 551, 94, 550, 93, 549, 93, 548, 92, 547, 92, 546, 92, 545, 90, 544, 85, 543, 84, 542, 84, 541, 84, 540, 81, 539, 81, 538, 81, 537, 81, 536, 81, 535, 80, 534, 78, 533, 77, 532, 77, 531, 76, 530, 76, 529, 76, 528, 70, 527, 69, 526, 69, 525, 69, 524, 76, 523, 67, 522, 65, 521, 64, 520, 64, 519, 64, 518, 65, 517, 72, 516, 71, 515, 65, 514, 65, 513, 62, 512, 57, 511, 56, 510, 55, 509, 54, 508, 53, 507, 52, 506, 51, 505, 49, 504, 48, 503, 48, 502, 48, 501, 46, 500, 46, 499, 46, 498, 46, 497, 44, 496, 43, 495, 43, 494, 42, 493, 42, 492, 41, 491, 41, 490, 41, 489, 40, 488, 41, 487, 40, 486, 39, 485, 39, 484, 38, 483, 38, 482, 38, 481, 39, 480, 39, 479, 38, 478, 38, 477, 38, 476, 38, 475, 38, 474, 38, 473, 38, 472, 37, 471, 36, 470, 35, 469, 35, 468, 35, 467, 35, 466, 35, 465, 35, 464, 36, 463, 36, 462, 36, 461, 36, 460, 37, 459, 38, 458, 39, 457, 39, 456, 38, 455, 38, 454, 37, 453, 37, 452, 37, 451, 38, 450, 38, 449, 37, 448, 35, 447, 35, 446, 35, 445, 35, 444, 35, 443, 35, 442, 35, 441, 35, 440, 35, 439, 26, 438, 24, 437, 22, 436, 15, 435, 15, 434, 14, 433, 14, 432, 14, 431, 14, 430, 14, 429, 14, 428, 13, 427, 12, 426, 11, 425, 11, 424, 11, 423, 11, 422, 11, 421, 11, 420, 10, 419, 10, 418, 11, 417, 11, 416, 10, 415, 9, 414, 9, 413, 9, 412, 9, 411, 9, 410, 9, 409, 9, 408, 10, 407, 10, 406, 10, 405, 10, 404, 11, 403, 11, 402, 11, 401, 12, 400, 13, 399, 14, 398, 15, 397, 16, 396, 18, 395, 19, 394, 20, 393, 21, 392, 22, 391, 23, 390, 23, 389, 24, 388, 27, 387, 27, 386, 26, 385, 26, 384, 26, 383, 26, 382, 26, 381, 26, 380, 26, 379, 25, 378, 18, 377, 18, 376, 18, 375, 18, 374, 18, 373, 19, 372, 24, 371, 24, 370, 23, 369, 23, 368, 26, 367, 26, 366, 27, 365, 27, 364, 28, 363, 29, 362, 30, 361, 30, 360, 30, 359, 29, 358, 28, 357, 27, 356, 27, 355, 26, 354, 25, 353, 24, 352, 23, 351, 23, 350, 22, 349, 22, 348, 22, 347, 22, 346, 21, 345, 21, 344, 27, 343, 27, 342, 86, 342]],
    33: [[622, 4, 633, 5, 654, 6, 655, 7, 665, 8, 666, 9, 666, 10, 687, 11, 688, 12, 688, 13, 697, 14, 698, 15, 698, 16, 708, 17, 709, 18, 729, 19, 730, 20, 740, 21, 741, 22, 741, 23, 742, 24, 761, 25, 762, 26, 762, 27, 763, 28, 780, 29, 781, 30, 781, 31, 782, 32, 782, 33, 782, 34, 783, 35, 856, 36, 856, 37, 857, 38, 857, 39, 858, 40, 859, 41, 859, 42, 861, 43, 863, 44, 864, 45, 866, 46, 868, 47, 870, 48, 871, 49, 873, 50, 875, 51, 876, 52, 878, 53, 880, 54, 881, 55, 883, 56, 884, 57, 886, 58, 888, 59, 890, 60, 893, 61, 897, 62, 899, 63, 901, 64, 902, 65, 904, 66, 907, 67, 909, 68, 910, 69, 913, 70, 915, 71, 917, 72, 919, 73, 921, 74, 923, 75, 926, 76, 928, 77, 930, 78, 932, 79, 933, 80, 934, 81, 934, 82, 935, 83, 937, 84, 937, 85, 938, 86, 939, 87, 941, 88, 948, 89, 949, 90, 951, 91, 953, 92, 955, 93, 957, 94, 957, 95, 956, 96, 956, 97, 956, 98, 956, 99, 955, 100, 955, 101, 955, 102, 955, 103, 955, 104, 955, 105, 955, 106, 955, 107, 955, 108, 955, 109, 955, 110, 955, 111, 955, 112, 956, 113, 956, 114, 955, 115, 954, 116, 953, 117, 952, 118, 951, 119, 946, 120, 947, 121, 947, 122, 948, 123, 948, 124, 948, 125, 949, 126, 953, 127, 954, 128, 954, 129, 955, 130, 955, 131, 955, 132, 962, 133, 963, 134, 963, 135, 964, 136, 964, 137, 964, 138, 965, 139, 965, 140, 966, 141, 966, 142, 967, 143, 967, 144, 968, 145, 968, 146, 969, 147, 969, 148, 969, 149, 970, 150, 975, 151, 976, 152, 976, 153, 977, 154, 977, 155, 977, 156, 978, 157, 983, 158, 984, 159, 984, 160, 985, 161, 985, 162, 985, 163, 986, 164, 986, 165, 987, 166, 987, 167, 991, 168, 992, 169, 992, 170, 993, 171, 993, 172, 993, 173, 994, 174, 994, 175, 996, 176, 997, 177, 997, 178, 998, 179, 998, 180, 998, 181, 1004, 182, 1005, 183, 1005, 184, 1006, 185, 1006, 186, 1006, 187, 1007, 188, 1007, 189, 1008, 190, 1008, 191, 1012, 192, 1013, 193, 1013, 194, 1014, 195, 1014, 196, 1014, 197, 1015, 198, 1015, 199, 1016, 200, 1016, 201, 1019, 202, 1020, 203, 1020, 204, 1021, 205, 1021, 206, 1021, 207, 1022, 208, 1022, 209, 1023, 210, 1023, 211, 1024, 212, 1024, 213, 1024, 214, 1024, 215, 1024, 216, 1024, 217, 1024, 218, 1028, 219, 1029, 220, 1029, 221, 1030, 222, 1030, 223, 1030, 224, 1031, 225, 1031, 226, 1036, 227, 1037, 228, 1037, 229, 1038, 230, 1038, 231, 1038, 232, 1039, 233, 1039, 234, 1040, 235, 1042, 236, 1043, 237, 1043, 238, 1044, 239, 1044, 240, 1044, 241, 1045, 242, 1045, 243, 1046, 244, 1046, 245, 1047, 246, 1047, 247, 1048, 248, 1048, 249, 1049, 250, 1049, 251, 1049, 252, 1050, 253, 1050, 254, 1051, 255, 1051, 256, 1052, 257, 1052, 258, 1052, 259, 1052, 260, 1052, 261, 1052, 262, 1052, 263, 1052, 264, 1052, 265, 1052, 266, 1053, 267, 1053, 268, 1053, 269, 1053, 270, 1054, 271, 1054, 272, 1055, 273, 1055, 274, 1056, 275, 1056, 276, 1056, 277, 1056, 278, 1056, 279, 1056, 280, 1056, 281, 1057, 282, 1057, 283, 1057, 284, 1058, 285, 1058, 286, 1059, 287, 1059, 288, 1060, 289, 1060, 290, 1060, 291, 1060, 292, 1060, 293, 1060, 294, 1060, 295, 1060, 296, 1060, 297, 1060, 298, 1060, 299, 1060, 300, 1061, 301, 1061, 302, 1061, 303, 1061, 304, 1060, 305, 1060, 306, 1060, 307, 1060, 308, 1060, 309, 1060, 310, 1060, 311, 1060, 312, 1060, 313, 1060, 314, 1060, 315, 1060, 316, 1060, 317, 1060, 318, 1060, 319, 1060, 320, 1060, 321, 1060, 322, 1060, 323, 1060, 324, 1060, 325, 1060, 326, 1060, 327, 1060, 328, 1060, 329, 1060, 330, 1060, 331, 1060, 332, 1060, 333, 1060, 334, 1060, 335, 1060, 336, 1060, 337, 1060, 338, 1061, 339, 1061, 340, 1040, 340, 1040, 339, 1039, 338, 1038, 337, 1037, 336, 1037, 335, 1037, 334, 1037, 333, 1037, 332, 1037, 331, 1037, 330, 1037, 329, 1037, 328, 1037, 327, 1037, 326, 1036, 325, 1036, 324, 1036, 323, 1036, 322, 1036, 321, 1037, 320, 1037, 319, 1036, 318, 1035, 317, 1034, 316, 1034, 315, 1034, 314, 1034, 313, 1034, 312, 1034, 311, 1031, 310, 1030, 309, 1029, 308, 1028, 307, 1028, 306, 1028, 305, 1028, 304, 1028, 303, 1023, 302, 1022, 301, 1021, 300, 1020, 299, 1020, 298, 1020, 297, 1017, 296, 1016, 295, 1015, 294, 1014, 293, 1014, 292, 1014, 291, 1014, 290, 1014, 289, 1014, 288, 1014, 287, 1014, 286, 1014, 285, 1013, 284, 1012, 283, 1011, 282, 1011, 281, 1011, 280, 1011, 279, 1011, 278, 1011, 277, 1011, 276, 1007, 275, 1006, 274, 1005, 273, 1004, 272, 1004, 271, 1004, 270, 1004, 269, 1004, 268, 1004, 267, 1004, 266, 999, 265, 998, 264, 997, 263, 996, 262, 996, 261, 996, 260, 991, 259, 990, 258, 989, 257, 988, 256, 988, 255, 988, 254, 988, 253, 988, 252, 986, 251, 985, 250, 984, 249, 983, 248, 983, 247, 983, 246, 983, 245, 983, 244, 983, 243, 983, 242, 978, 241, 977, 240, 976, 239, 975, 238, 975, 237, 975, 236, 975, 235, 970, 234, 969, 233, 968, 232, 967, 231, 967, 230, 967, 229, 967, 228, 962, 227, 961, 226, 960, 225, 959, 224, 959, 223, 959, 222, 959, 221, 959, 220, 959, 219, 959, 218, 959, 217, 957, 216, 956, 215, 955, 214, 954, 213, 954, 212, 954, 211, 948, 210, 947, 209, 946, 208, 945, 207, 945, 206, 945, 205, 945, 204, 941, 203, 940, 202, 939, 201, 938, 200, 931, 199, 928, 198, 927, 197, 926, 196, 925, 195, 925, 194, 925, 193, 925, 192, 925, 191, 925, 190, 925, 189, 925, 188, 925, 187, 925, 186, 925, 185, 925, 184, 925, 183, 924, 182, 924, 181, 924, 180, 923, 179, 923, 178, 923, 177, 923, 176, 923, 175, 923, 174, 924, 173, 925, 172, 925, 171, 925, 170, 925, 169, 925, 168, 925, 167, 925, 166, 925, 165, 925, 164, 925, 163, 925, 162, 925, 161, 925, 160, 925, 159, 925, 158, 925, 157, 925, 156, 925, 155, 925, 154, 925, 153, 925, 152, 850, 151, 847, 150, 846, 149, 845, 148, 844, 147, 844, 146, 844, 145, 839, 144, 838, 143, 837, 142, 836, 141, 831, 140, 830, 139, 829, 138, 828, 137, 821, 136, 820, 135, 819, 134, 818, 133, 818, 132, 818, 131, 818, 130, 818, 129, 811, 128, 810, 127, 809, 126, 808, 125, 800, 124, 799, 123, 798, 122, 797, 121, 797, 120, 782, 119, 781, 118, 780, 117, 779, 116, 779, 115, 779, 114, 779, 113, 766, 112, 765, 111, 764, 110, 763, 109, 745, 108, 744, 107, 743, 106, 742, 105, 735, 104, 714, 103, 713, 102, 712, 101, 703, 100, 702, 99, 701, 98, 692, 97, 691, 96, 690, 95, 671, 94, 670, 93, 669, 92, 660, 91, 659, 90, 576, 89, 575, 88, 555, 87, 554, 86, 554, 85, 554, 84, 554, 83, 554, 82, 554, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 554, 12, 554, 11, 554, 10, 555, 9, 555, 8, 556, 7, 556, 6, 557, 5, 557, 4, 622, 4], [540, 4, 541, 5, 550, 6, 551, 7, 551, 8, 552, 9, 552, 10, 552, 11, 553, 12, 553, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 554, 81, 554, 82, 554, 83, 554, 84, 554, 85, 554, 86, 554, 87, 553, 88, 551, 89, 469, 90, 467, 91, 460, 92, 459, 93, 457, 94, 440, 95, 439, 96, 437, 97, 428, 98, 427, 99, 425, 100, 419, 101, 418, 102, 416, 103, 396, 104, 390, 105, 389, 106, 388, 107, 386, 108, 370, 109, 369, 110, 368, 111, 366, 112, 351, 113, 351, 114, 351, 115, 351, 116, 350, 117, 349, 118, 347, 119, 333, 120, 333, 121, 332, 122, 331, 123, 329, 124, 324, 125, 323, 126, 322, 127, 320, 128, 314, 129, 314, 130, 314, 131, 314, 132, 314, 133, 313, 134, 312, 135, 310, 136, 304, 137, 303, 138, 302, 139, 300, 140, 296, 141, 296, 142, 296, 143, 296, 144, 295, 145, 295, 146, 294, 147, 292, 148, 289, 149, 220, 150, 220, 151, 220, 152, 220, 153, 220, 154, 220, 155, 220, 156, 220, 157, 220, 158, 220, 159, 220, 160, 220, 161, 220, 162, 220, 163, 220, 164, 220, 165, 221, 166, 221, 167, 222, 168, 222, 169, 222, 170, 222, 171, 222, 172, 222, 173, 222, 174, 221, 175, 221, 176, 220, 177, 220, 178, 220, 179, 220, 180, 220, 181, 220, 182, 220, 183, 220, 184, 220, 185, 220, 186, 220, 187, 220, 188, 219, 189, 219, 190, 218, 191, 216, 192, 213, 193, 204, 194, 203, 195, 202, 196, 200, 197, 194, 198, 194, 199, 193, 200, 192, 201, 190, 202, 186, 203, 186, 204, 186, 205, 186, 206, 185, 207, 184, 208, 182, 209, 178, 210, 178, 211, 178, 212, 177, 213, 177, 214, 176, 215, 174, 216, 172, 217, 172, 218, 172, 219, 172, 220, 172, 221, 171, 222, 170, 223, 168, 224, 165, 225, 165, 226, 165, 227, 164, 228, 163, 229, 161, 230, 158, 231, 158, 232, 158, 233, 158, 234, 157, 235, 156, 236, 154, 237, 153, 238, 153, 239, 153, 240, 152, 241, 152, 242, 151, 243, 149, 244, 146, 245, 146, 246, 145, 247, 144, 248, 142, 249, 139, 250, 139, 251, 139, 252, 139, 253, 139, 254, 139, 255, 138, 256, 137, 257, 135, 258, 134, 259, 133, 260, 132, 261, 130, 262, 127, 263, 127, 264, 127, 265, 127, 266, 127, 267, 127, 268, 126, 269, 125, 270, 123, 271, 119, 272, 119, 273, 119, 274, 119, 275, 119, 276, 118, 277, 117, 278, 115, 279, 113, 280, 113, 281, 113, 282, 113, 283, 113, 284, 113, 285, 112, 286, 111, 287, 109, 288, 106, 289, 106, 290, 106, 291, 106, 292, 106, 293, 106, 294, 106, 295, 105, 296, 104, 297, 102, 298, 100, 299, 100, 300, 100, 301, 100, 302, 100, 303, 100, 304, 99, 305, 98, 306, 96, 307, 96, 308, 96, 309, 96, 310, 96, 311, 96, 312, 96, 313, 96, 314, 95, 315, 95, 316, 94, 317, 92, 318, 91, 319, 91, 320, 91, 321, 91, 322, 91, 323, 91, 324, 91, 325, 90, 326, 89, 327, 88, 328, 88, 329, 88, 330, 88, 331, 88, 332, 88, 333, 87, 334, 87, 335, 86, 336, 85, 337, 85, 338, 85, 339, 85, 340, 61, 340, 61, 339, 62, 338, 62, 337, 62, 336, 62, 335, 62, 334, 62, 333, 62, 332, 62, 331, 62, 330, 62, 329, 63, 328, 63, 327, 64, 326, 63, 325, 63, 324, 63, 323, 63, 322, 63, 321, 63, 320, 64, 319, 64, 318, 64, 317, 64, 316, 64, 315, 64, 314, 64, 313, 64, 312, 64, 311, 64, 310, 65, 309, 65, 308, 66, 307, 66, 306, 67, 305, 67, 304, 68, 303, 68, 302, 68, 301, 68, 300, 69, 299, 69, 298, 69, 297, 69, 296, 70, 295, 70, 294, 70, 293, 70, 292, 70, 291, 70, 290, 70, 289, 70, 288, 70, 287, 70, 286, 70, 285, 70, 284, 71, 283, 71, 282, 72, 281, 72, 280, 72, 279, 72, 278, 72, 277, 72, 276, 72, 275, 72, 274, 73, 273, 73, 272, 74, 271, 74, 270, 75, 269, 75, 268, 75, 267, 75, 266, 75, 265, 75, 264, 76, 263, 76, 262, 77, 261, 77, 260, 78, 259, 78, 258, 78, 257, 78, 256, 78, 255, 79, 254, 79, 253, 80, 252, 80, 251, 81, 250, 81, 249, 82, 248, 82, 247, 83, 246, 83, 245, 84, 244, 84, 243, 85, 242, 85, 241, 86, 240, 86, 239, 87, 238, 87, 237, 87, 236, 87, 235, 87, 234, 88, 233, 88, 232, 89, 231, 89, 230, 90, 229, 90, 228, 91, 227, 91, 226, 92, 225, 92, 224, 94, 223, 95, 222, 95, 221, 96, 220, 96, 219, 97, 218, 97, 217, 98, 216, 98, 215, 101, 214, 101, 213, 102, 212, 102, 211, 103, 210, 103, 209, 104, 208, 104, 207, 105, 206, 105, 205, 107, 204, 108, 203, 108, 202, 109, 201, 109, 200, 110, 199, 110, 198, 111, 197, 111, 196, 116, 195, 116, 194, 117, 193, 117, 192, 118, 191, 118, 190, 119, 189, 119, 188, 122, 187, 123, 186, 123, 185, 124, 184, 124, 183, 125, 182, 125, 181, 126, 180, 126, 179, 130, 178, 130, 177, 131, 176, 131, 175, 134, 174, 135, 173, 135, 172, 136, 171, 136, 170, 137, 169, 137, 168, 138, 167, 138, 166, 143, 165, 144, 164, 144, 163, 145, 162, 145, 161, 147, 160, 148, 159, 148, 158, 149, 157, 149, 156, 150, 155, 150, 154, 154, 153, 155, 152, 155, 151, 156, 150, 156, 149, 157, 148, 157, 147, 162, 146, 162, 145, 163, 144, 163, 143, 164, 142, 164, 141, 167, 140, 167, 139, 168, 138, 168, 137, 169, 136, 169, 135, 170, 134, 170, 133, 175, 132, 176, 131, 176, 130, 177, 129, 177, 128, 178, 127, 178, 126, 183, 125, 184, 124, 184, 123, 185, 122, 185, 121, 186, 120, 186, 119, 194, 118, 195, 117, 192, 116, 191, 115, 190, 114, 189, 113, 188, 112, 187, 111, 186, 110, 187, 109, 187, 108, 187, 107, 187, 106, 187, 105, 187, 104, 187, 103, 187, 102, 187, 101, 187, 100, 187, 99, 187, 98, 187, 97, 187, 96, 187, 95, 186, 94, 186, 93, 186, 92, 186, 91, 186, 90, 189, 89, 191, 88, 193, 87, 194, 86, 201, 85, 203, 84, 204, 83, 205, 82, 206, 81, 207, 80, 208, 79, 208, 78, 209, 77, 210, 76, 211, 75, 214, 74, 216, 73, 218, 72, 221, 71, 223, 70, 225, 69, 227, 68, 229, 67, 231, 66, 233, 65, 235, 64, 237, 63, 239, 62, 241, 61, 243, 60, 245, 59, 248, 58, 252, 57, 254, 56, 256, 55, 258, 54, 259, 53, 260, 52, 262, 51, 264, 50, 266, 49, 267, 48, 269, 47, 271, 46, 272, 45, 274, 44, 276, 43, 277, 42, 279, 41, 281, 40, 282, 39, 283, 38, 283, 37, 284, 36, 285, 35, 285, 34, 349, 33, 350, 32, 350, 31, 351, 30, 351, 29, 371, 28, 371, 27, 372, 26, 372, 25, 391, 24, 391, 23, 392, 22, 392, 21, 402, 20, 402, 19, 421, 18, 421, 17, 432, 16, 433, 15, 433, 14, 442, 13, 443, 12, 443, 11, 462, 10, 463, 9, 463, 8, 473, 7, 473, 6, 495, 5, 495, 4, 540, 4], [1061, 341, 1061, 342, 1061, 343, 1061, 344, 1061, 345, 1061, 346, 1061, 347, 1061, 348, 1061, 349, 1060, 350, 1060, 351, 1060, 352, 1060, 353, 1060, 354, 1060, 355, 1060, 356, 1060, 357, 1060, 358, 1060, 359, 1060, 360, 1060, 361, 1060, 362, 1060, 363, 1060, 364, 1061, 365, 1061, 366, 1061, 367, 1061, 368, 1061, 369, 1061, 370, 1061, 371, 1061, 372, 1061, 373, 1061, 374, 1061, 375, 1061, 376, 1061, 377, 1061, 378, 1061, 379, 1062, 380, 1062, 381, 1062, 382, 1062, 383, 1061, 384, 1061, 385, 1061, 386, 1061, 387, 1061, 388, 1061, 389, 1061, 390, 1061, 391, 1061, 392, 1061, 393, 1061, 394, 1061, 395, 1061, 396, 1061, 397, 1061, 398, 1061, 399, 1061, 400, 1061, 401, 1061, 402, 1061, 403, 1061, 404, 1061, 405, 1061, 406, 1061, 407, 1061, 408, 1061, 409, 1061, 410, 1061, 411, 1061, 412, 1061, 413, 1061, 414, 1061, 415, 1061, 416, 1061, 417, 1061, 418, 1061, 419, 1061, 420, 1061, 421, 1061, 422, 1062, 423, 1062, 424, 1062, 425, 1062, 426, 1062, 427, 1062, 428, 1061, 429, 1061, 430, 1061, 431, 1061, 432, 1061, 433, 1061, 434, 1061, 435, 1061, 436, 1061, 437, 1061, 438, 1060, 439, 1059, 440, 1057, 441, 1057, 442, 1057, 443, 1057, 444, 1057, 445, 1057, 446, 1057, 447, 1056, 448, 1055, 449, 1053, 450, 1052, 451, 1052, 452, 1052, 453, 1052, 454, 1051, 455, 1051, 456, 1050, 457, 1048, 458, 1047, 459, 1047, 460, 1047, 461, 1047, 462, 1047, 463, 1046, 464, 1046, 465, 1045, 466, 1043, 467, 1041, 468, 1041, 469, 1041, 470, 1041, 471, 1041, 472, 1041, 473, 1041, 474, 1041, 475, 1040, 476, 1039, 477, 1037, 478, 1033, 479, 1033, 480, 1033, 481, 1033, 482, 1033, 483, 1033, 484, 1032, 485, 1031, 486, 1029, 487, 1029, 488, 1029, 489, 1029, 490, 1029, 491, 1029, 492, 1029, 493, 1029, 494, 1028, 495, 1027, 496, 1025, 497, 1021, 498, 1021, 499, 1021, 500, 1021, 501, 1021, 502, 1020, 503, 1019, 504, 1017, 505, 1014, 506, 1014, 507, 1014, 508, 1014, 509, 1013, 510, 1013, 511, 1012, 512, 1010, 513, 1006, 514, 1006, 515, 1006, 516, 1005, 517, 1005, 518, 1004, 519, 1002, 520, 998, 521, 998, 522, 998, 523, 998, 524, 998, 525, 997, 526, 996, 527, 994, 528, 991, 529, 991, 530, 991, 531, 991, 532, 991, 533, 991, 534, 990, 535, 989, 536, 987, 537, 986, 538, 986, 539, 986, 540, 985, 541, 984, 542, 982, 543, 978, 544, 978, 545, 978, 546, 977, 547, 977, 548, 976, 549, 974, 550, 969, 551, 969, 552, 968, 553, 967, 554, 965, 555, 961, 556, 961, 557, 961, 558, 961, 559, 961, 560, 960, 561, 959, 562, 957, 563, 953, 564, 953, 565, 953, 566, 952, 567, 952, 568, 951, 569, 949, 570, 946, 571, 876, 572, 876, 573, 876, 574, 876, 575, 876, 576, 876, 577, 876, 578, 876, 579, 876, 580, 876, 581, 876, 582, 876, 583, 876, 584, 876, 585, 876, 586, 876, 587, 876, 588, 876, 589, 876, 590, 876, 591, 876, 592, 877, 593, 877, 594, 878, 595, 878, 596, 878, 597, 878, 598, 878, 599, 878, 600, 878, 601, 877, 602, 877, 603, 876, 604, 876, 605, 876, 606, 876, 607, 876, 608, 876, 609, 876, 610, 876, 611, 876, 612, 876, 613, 876, 614, 876, 615, 875, 616, 875, 617, 874, 618, 872, 619, 869, 620, 858, 621, 856, 622, 850, 623, 849, 624, 848, 625, 846, 626, 841, 627, 840, 628, 839, 629, 837, 630, 831, 631, 830, 632, 830, 633, 829, 634, 827, 635, 820, 636, 819, 637, 818, 638, 816, 639, 807, 640, 805, 641, 799, 642, 798, 643, 797, 644, 795, 645, 786, 646, 784, 647, 775, 648, 773, 649, 766, 650, 765, 651, 764, 652, 762, 653, 752, 654, 744, 655, 743, 656, 741, 657, 730, 658, 722, 659, 722, 660, 721, 661, 719, 662, 712, 663, 711, 664, 709, 665, 691, 666, 690, 667, 688, 668, 680, 669, 679, 670, 677, 671, 659, 672, 657, 673, 617, 674, 615, 675, 578, 676, 576, 677, 570, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 554, 632, 554, 631, 554, 630, 554, 629, 554, 628, 554, 627, 554, 626, 554, 625, 554, 624, 554, 623, 554, 622, 554, 621, 554, 620, 554, 619, 554, 618, 554, 617, 554, 616, 554, 615, 554, 614, 554, 613, 554, 612, 554, 611, 554, 610, 554, 609, 554, 608, 554, 607, 554, 606, 554, 605, 554, 604, 554, 603, 554, 602, 554, 601, 554, 600, 554, 599, 554, 598, 554, 597, 554, 596, 554, 595, 554, 594, 562, 593, 562, 592, 582, 591, 582, 590, 633, 589, 643, 588, 683, 587, 684, 586, 684, 585, 693, 584, 694, 583, 694, 582, 714, 581, 715, 580, 715, 579, 725, 578, 725, 577, 726, 576, 726, 575, 737, 574, 747, 573, 748, 572, 748, 571, 758, 570, 768, 569, 768, 568, 769, 567, 769, 566, 780, 565, 780, 564, 791, 563, 791, 562, 800, 561, 800, 560, 801, 559, 801, 558, 812, 557, 812, 556, 822, 555, 822, 554, 823, 553, 823, 552, 831, 551, 832, 550, 832, 549, 833, 548, 833, 547, 841, 546, 841, 545, 842, 544, 842, 543, 851, 542, 851, 541, 852, 540, 852, 539, 854, 538, 855, 537, 855, 536, 856, 535, 856, 534, 856, 533, 856, 532, 856, 531, 856, 530, 856, 529, 856, 528, 856, 527, 856, 526, 856, 525, 856, 524, 856, 523, 856, 522, 856, 521, 856, 520, 856, 519, 857, 518, 857, 517, 858, 516, 859, 515, 860, 514, 860, 513, 861, 512, 861, 511, 862, 510, 862, 509, 863, 508, 863, 507, 864, 506, 865, 505, 865, 504, 933, 503, 933, 502, 933, 501, 933, 500, 933, 499, 933, 498, 933, 497, 933, 496, 933, 495, 933, 494, 933, 493, 933, 492, 933, 491, 933, 490, 933, 489, 933, 488, 933, 487, 933, 486, 933, 485, 933, 484, 933, 483, 933, 482, 933, 481, 933, 480, 933, 479, 933, 478, 933, 477, 933, 476, 933, 475, 933, 474, 933, 473, 933, 472, 933, 471, 934, 470, 934, 469, 935, 468, 936, 467, 937, 466, 937, 465, 938, 464, 938, 463, 939, 462, 939, 461, 940, 460, 940, 459, 941, 458, 942, 457, 942, 456, 983, 455, 983, 454, 986, 453, 987, 452, 987, 451, 988, 450, 988, 449, 989, 448, 989, 447, 990, 446, 990, 445, 995, 444, 995, 443, 996, 442, 996, 441, 997, 440, 997, 439, 998, 438, 998, 437, 1003, 436, 1004, 435, 1004, 434, 1005, 433, 1005, 432, 1006, 431, 1006, 430, 1010, 429, 1010, 428, 1011, 427, 1011, 426, 1012, 425, 1012, 424, 1013, 423, 1013, 422, 1018, 421, 1018, 420, 1019, 419, 1019, 418, 1020, 417, 1020, 416, 1020, 415, 1020, 414, 1021, 413, 1021, 412, 1022, 411, 1022, 410, 1023, 409, 1023, 408, 1024, 407, 1024, 406, 1025, 405, 1025, 404, 1029, 403, 1030, 402, 1030, 401, 1031, 400, 1031, 399, 1032, 398, 1032, 397, 1033, 396, 1033, 395, 1034, 394, 1035, 393, 1035, 392, 1036, 391, 1036, 390, 1037, 389, 1037, 388, 1038, 387, 1038, 386, 1039, 385, 1039, 384, 1040, 383, 1041, 382, 1041, 381, 1041, 380, 1041, 379, 1041, 378, 1040, 377, 1040, 376, 1040, 375, 1040, 374, 1040, 373, 1041, 372, 1041, 371, 1041, 370, 1041, 369, 1041, 368, 1041, 367, 1041, 366, 1041, 365, 1041, 364, 1040, 363, 1040, 362, 1040, 361, 1040, 360, 1041, 359, 1041, 358, 1041, 357, 1041, 356, 1041, 355, 1041, 354, 1041, 353, 1041, 352, 1041, 351, 1041, 350, 1041, 349, 1041, 348, 1041, 347, 1041, 346, 1041, 345, 1041, 344, 1041, 343, 1040, 342, 1040, 341, 1061, 341], [85, 341, 85, 342, 85, 343, 85, 344, 85, 345, 85, 346, 85, 347, 86, 348, 86, 349, 86, 350, 86, 351, 86, 352, 86, 353, 85, 354, 85, 355, 85, 356, 85, 357, 85, 358, 85, 359, 85, 360, 85, 361, 85, 362, 85, 363, 84, 364, 83, 365, 82, 366, 82, 367, 82, 368, 82, 369, 82, 370, 82, 371, 83, 372, 83, 373, 83, 374, 83, 375, 83, 376, 84, 377, 84, 378, 84, 379, 84, 380, 84, 381, 84, 382, 84, 383, 84, 384, 84, 385, 84, 386, 84, 387, 84, 388, 85, 389, 85, 390, 85, 391, 86, 392, 86, 393, 87, 394, 87, 395, 87, 396, 87, 397, 88, 398, 88, 399, 88, 400, 89, 401, 89, 402, 90, 403, 90, 404, 92, 405, 93, 406, 93, 407, 94, 408, 94, 409, 94, 410, 95, 411, 95, 412, 98, 413, 99, 414, 99, 415, 100, 416, 100, 417, 100, 418, 101, 419, 101, 420, 102, 421, 105, 422, 106, 423, 106, 424, 107, 425, 107, 426, 107, 427, 108, 428, 108, 429, 112, 430, 113, 431, 113, 432, 114, 433, 114, 434, 114, 435, 115, 436, 119, 437, 120, 438, 120, 439, 121, 440, 121, 441, 121, 442, 122, 443, 122, 444, 126, 445, 127, 446, 127, 447, 128, 448, 128, 449, 128, 450, 129, 451, 129, 452, 130, 453, 132, 454, 171, 455, 172, 456, 172, 457, 173, 458, 174, 459, 174, 460, 175, 461, 175, 462, 176, 463, 177, 464, 177, 465, 178, 466, 178, 467, 179, 468, 179, 469, 180, 470, 180, 471, 180, 472, 180, 473, 180, 474, 180, 475, 180, 476, 180, 477, 181, 478, 180, 479, 180, 480, 180, 481, 180, 482, 180, 483, 180, 484, 180, 485, 181, 486, 181, 487, 182, 488, 182, 489, 182, 490, 182, 491, 181, 492, 181, 493, 180, 494, 180, 495, 180, 496, 180, 497, 180, 498, 180, 499, 181, 500, 181, 501, 181, 502, 181, 503, 180, 504, 180, 505, 246, 506, 247, 507, 247, 508, 248, 509, 249, 510, 249, 511, 250, 512, 250, 513, 251, 514, 252, 515, 252, 516, 253, 517, 253, 518, 254, 519, 254, 520, 255, 521, 255, 522, 255, 523, 255, 524, 255, 525, 255, 526, 255, 527, 255, 528, 256, 529, 256, 530, 255, 531, 255, 532, 255, 533, 255, 534, 255, 535, 255, 536, 256, 537, 257, 538, 259, 539, 260, 540, 260, 541, 261, 542, 261, 543, 261, 544, 268, 545, 269, 546, 269, 547, 290, 548, 291, 549, 291, 550, 292, 551, 300, 552, 301, 553, 311, 554, 312, 555, 312, 556, 313, 557, 313, 558, 313, 559, 321, 560, 322, 561, 332, 562, 333, 563, 333, 564, 342, 565, 343, 566, 343, 567, 353, 568, 354, 569, 364, 570, 365, 571, 365, 572, 366, 573, 383, 574, 384, 575, 384, 576, 385, 577, 404, 578, 405, 579, 405, 580, 406, 581, 415, 582, 416, 583, 416, 584, 448, 585, 449, 586, 449, 587, 479, 588, 512, 589, 513, 590, 513, 591, 522, 592, 554, 593, 554, 594, 554, 595, 554, 596, 554, 597, 554, 598, 554, 599, 554, 600, 554, 601, 554, 602, 554, 603, 554, 604, 554, 605, 554, 606, 554, 607, 554, 608, 554, 609, 554, 610, 554, 611, 554, 612, 554, 613, 554, 614, 554, 615, 554, 616, 554, 617, 554, 618, 554, 619, 554, 620, 554, 621, 554, 622, 554, 623, 554, 624, 554, 625, 554, 626, 554, 627, 554, 628, 554, 629, 554, 630, 554, 631, 554, 632, 554, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 545, 677, 539, 677, 528, 676, 496, 675, 485, 674, 484, 673, 453, 672, 452, 671, 451, 670, 432, 669, 421, 668, 420, 667, 419, 666, 410, 665, 409, 664, 408, 663, 407, 662, 388, 661, 387, 660, 386, 659, 385, 658, 367, 657, 366, 656, 365, 655, 364, 654, 359, 653, 358, 652, 348, 651, 347, 650, 346, 649, 337, 648, 336, 647, 335, 646, 327, 645, 326, 644, 316, 643, 315, 642, 314, 641, 313, 640, 313, 639, 313, 638, 306, 637, 305, 636, 295, 635, 294, 634, 293, 633, 292, 632, 274, 631, 273, 630, 272, 629, 263, 628, 262, 627, 261, 626, 260, 625, 260, 624, 260, 623, 241, 622, 238, 621, 237, 620, 236, 619, 235, 618, 235, 617, 235, 616, 235, 615, 235, 614, 235, 613, 235, 612, 235, 611, 235, 610, 235, 609, 235, 608, 235, 607, 235, 606, 234, 605, 234, 604, 234, 603, 233, 602, 233, 601, 233, 600, 233, 599, 233, 598, 233, 597, 234, 596, 235, 595, 235, 594, 235, 593, 235, 592, 235, 591, 235, 590, 235, 589, 235, 588, 235, 587, 235, 586, 235, 585, 235, 584, 235, 583, 235, 582, 235, 581, 235, 580, 235, 579, 235, 578, 235, 577, 235, 576, 235, 575, 235, 574, 235, 573, 235, 572, 166, 571, 163, 570, 162, 569, 161, 568, 160, 567, 160, 566, 160, 565, 160, 564, 157, 563, 156, 562, 155, 561, 154, 560, 154, 559, 154, 558, 154, 557, 154, 556, 151, 555, 150, 554, 149, 553, 148, 552, 148, 551, 143, 550, 142, 549, 141, 548, 140, 547, 140, 546, 140, 545, 140, 544, 135, 543, 134, 542, 133, 541, 132, 540, 132, 539, 132, 538, 127, 537, 126, 536, 125, 535, 124, 534, 124, 533, 124, 532, 124, 531, 124, 530, 124, 529, 121, 528, 120, 527, 119, 526, 118, 525, 118, 524, 118, 523, 118, 522, 118, 521, 114, 520, 113, 519, 112, 518, 111, 517, 111, 516, 111, 515, 111, 514, 107, 513, 106, 512, 105, 511, 104, 510, 104, 509, 104, 508, 104, 507, 104, 506, 100, 505, 99, 504, 98, 503, 97, 502, 97, 501, 97, 500, 97, 499, 97, 498, 97, 497, 93, 496, 92, 495, 91, 494, 90, 493, 90, 492, 90, 491, 90, 490, 90, 489, 87, 488, 86, 487, 85, 486, 84, 485, 84, 484, 84, 483, 84, 482, 84, 481, 84, 480, 84, 479, 81, 478, 80, 477, 79, 476, 78, 475, 78, 474, 78, 473, 78, 472, 78, 471, 78, 470, 78, 469, 78, 468, 77, 467, 76, 466, 75, 465, 74, 464, 74, 463, 74, 462, 74, 461, 74, 460, 74, 459, 72, 458, 71, 457, 70, 456, 69, 455, 69, 454, 69, 453, 69, 452, 69, 451, 69, 450, 69, 449, 69, 448, 69, 447, 69, 446, 69, 445, 68, 444, 68, 443, 68, 442, 68, 441, 68, 440, 67, 439, 66, 438, 66, 437, 66, 436, 66, 435, 66, 434, 66, 433, 66, 432, 66, 431, 66, 430, 66, 429, 66, 428, 65, 427, 65, 426, 65, 425, 65, 424, 64, 423, 64, 422, 64, 421, 64, 420, 64, 419, 64, 418, 64, 417, 64, 416, 64, 415, 64, 414, 64, 413, 63, 412, 63, 411, 63, 410, 63, 409, 63, 408, 64, 407, 64, 406, 64, 405, 64, 404, 64, 403, 64, 402, 64, 401, 63, 400, 62, 399, 62, 398, 62, 397, 62, 396, 62, 395, 62, 394, 62, 393, 62, 392, 62, 391, 62, 390, 62, 389, 61, 388, 61, 387, 61, 386, 61, 385, 61, 384, 62, 383, 62, 382, 62, 381, 62, 380, 62, 379, 62, 378, 62, 377, 62, 376, 62, 375, 61, 374, 61, 373, 61, 372, 61, 371, 62, 370, 62, 369, 62, 368, 62, 367, 62, 366, 62, 365, 62, 364, 62, 363, 62, 362, 62, 361, 62, 360, 62, 359, 62, 358, 62, 357, 62, 356, 62, 355, 62, 354, 62, 353, 62, 352, 62, 351, 62, 350, 62, 349, 62, 348, 62, 347, 62, 346, 62, 345, 61, 344, 61, 343, 61, 342, 61, 341, 85, 341]],
    34: [85, 5, 86, 6, 87, 7, 87, 8, 87, 9, 87, 10, 87, 11, 88, 12, 88, 13, 88, 14, 88, 15, 88, 16, 88, 17, 89, 18, 89, 19, 90, 20, 91, 21, 103, 22, 105, 23, 106, 24, 106, 25, 106, 26, 106, 27, 106, 28, 106, 29, 106, 30, 106, 31, 106, 32, 106, 33, 106, 34, 106, 35, 106, 36, 106, 37, 106, 38, 106, 39, 106, 40, 106, 41, 106, 42, 107, 43, 107, 44, 108, 45, 109, 46, 109, 47, 109, 48, 107, 49, 106, 50, 106, 51, 106, 52, 106, 53, 106, 54, 106, 55, 107, 56, 107, 57, 107, 58, 107, 59, 107, 60, 107, 61, 107, 62, 107, 63, 107, 64, 107, 65, 108, 66, 108, 67, 110, 68, 111, 69, 113, 70, 115, 71, 116, 72, 118, 73, 119, 74, 121, 75, 122, 76, 124, 77, 125, 78, 125, 79, 124, 80, 124, 81, 124, 82, 123, 83, 121, 84, 120, 85, 120, 86, 120, 87, 120, 88, 119, 89, 119, 90, 119, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 121, 97, 121, 98, 122, 99, 122, 100, 122, 101, 122, 102, 122, 103, 122, 104, 122, 105, 122, 106, 122, 107, 122, 108, 122, 109, 120, 110, 118, 111, 118, 112, 116, 113, 110, 114, 104, 115, 103, 116, 104, 117, 104, 118, 103, 119, 102, 120, 102, 121, 103, 122, 102, 123, 100, 124, 61, 127, 63, 128, 64, 129, 65, 130, 64, 131, 67, 132, 67, 133, 67, 134, 67, 135, 61, 136, 59, 137, 57, 138, 53, 138, 51, 137, 50, 136, 49, 135, 49, 134, 49, 133, 48, 132, 48, 131, 49, 130, 51, 129, 53, 128, 55, 127, 96, 124, 94, 123, 72, 122, 71, 121, 65, 120, 39, 119, 28, 118, 27, 117, 19, 116, 18, 115, 17, 114, 15, 113, 15, 112, 15, 111, 15, 110, 15, 109, 18, 108, 18, 107, 17, 106, 17, 105, 17, 104, 17, 103, 17, 102, 17, 101, 17, 100, 17, 99, 17, 98, 17, 97, 19, 96, 21, 95, 21, 94, 21, 93, 21, 92, 22, 91, 23, 90, 25, 89, 35, 88, 35, 87, 35, 86, 33, 85, 32, 84, 31, 83, 31, 82, 31, 81, 32, 80, 34, 79, 36, 78, 37, 77, 38, 76, 40, 75, 42, 74, 43, 73, 43, 72, 43, 71, 43, 70, 43, 69, 43, 68, 43, 67, 43, 66, 43, 65, 43, 64, 43, 63, 43, 62, 43, 61, 43, 60, 43, 59, 43, 58, 43, 57, 43, 56, 36, 55, 34, 54, 33, 53, 34, 52, 35, 51, 36, 50, 35, 49, 36, 48, 37, 47, 38, 46, 39, 45, 39, 44, 39, 43, 41, 42, 42, 41, 42, 40, 42, 39, 43, 38, 44, 37, 45, 36, 46, 35, 46, 34, 47, 33, 48, 32, 49, 31, 48, 30, 49, 29, 50, 28, 50, 27, 50, 26, 50, 25, 50, 24, 50, 23, 51, 22, 51, 21, 50, 20, 50, 19, 50, 18, 51, 17, 51, 16, 53, 15, 78, 14, 78, 13, 79, 12, 79, 11, 78, 10, 78, 9, 78, 8, 78, 7, 79, 6, 80, 5, 85, 5],
    35: [79, 10, 80, 11, 81, 12, 81, 13, 81, 14, 81, 15, 82, 16, 81, 17, 82, 18, 82, 19, 82, 20, 82, 21, 82, 22, 82, 23, 82, 24, 83, 25, 83, 26, 83, 27, 83, 28, 83, 29, 83, 30, 104, 31, 105, 32, 105, 33, 105, 34, 105, 35, 104, 36, 104, 37, 104, 38, 104, 39, 104, 40, 104, 41, 104, 42, 104, 43, 104, 44, 104, 45, 104, 46, 104, 47, 104, 48, 104, 49, 104, 50, 104, 51, 104, 52, 104, 53, 104, 54, 104, 55, 104, 56, 105, 57, 109, 58, 110, 59, 110, 60, 110, 61, 110, 62, 110, 63, 110, 64, 110, 65, 110, 66, 110, 67, 113, 68, 113, 69, 113, 70, 113, 71, 113, 72, 113, 73, 113, 74, 113, 75, 113, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 120, 83, 120, 84, 120, 85, 120, 86, 120, 87, 120, 88, 120, 89, 120, 90, 120, 91, 120, 92, 120, 93, 122, 94, 123, 95, 125, 96, 125, 97, 125, 98, 124, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 123, 110, 123, 111, 123, 112, 127, 113, 127, 114, 128, 115, 128, 116, 127, 117, 126, 118, 125, 119, 125, 120, 125, 121, 121, 122, 120, 123, 121, 124, 121, 125, 122, 126, 122, 127, 122, 128, 118, 129, 116, 130, 115, 131, 113, 132, 112, 133, 112, 134, 111, 135, 99, 136, 99, 137, 98, 138, 98, 139, 95, 140, 93, 140, 90, 139, 90, 138, 90, 137, 83, 136, 68, 135, 56, 134, 54, 133, 54, 132, 54, 131, 48, 130, 46, 129, 45, 128, 38, 127, 35, 126, 34, 125, 33, 124, 33, 123, 32, 122, 32, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 30, 110, 30, 109, 29, 108, 27, 107, 27, 106, 28, 105, 28, 104, 26, 103, 26, 102, 26, 101, 26, 100, 30, 99, 30, 98, 30, 97, 30, 96, 30, 95, 30, 94, 30, 93, 30, 92, 30, 91, 30, 90, 30, 89, 30, 88, 29, 87, 27, 86, 26, 85, 26, 84, 25, 83, 26, 82, 29, 81, 34, 80, 36, 79, 40, 78, 39, 77, 38, 76, 38, 75, 38, 74, 38, 73, 38, 72, 38, 71, 38, 70, 38, 69, 38, 68, 38, 67, 38, 66, 38, 65, 38, 64, 38, 63, 38, 62, 38, 61, 38, 60, 38, 59, 38, 58, 38, 57, 38, 56, 39, 55, 41, 54, 43, 53, 44, 52, 44, 51, 45, 50, 45, 49, 46, 48, 47, 47, 48, 46, 49, 45, 50, 44, 51, 43, 52, 42, 53, 41, 55, 40, 58, 39, 59, 38, 62, 37, 62, 36, 62, 35, 62, 34, 63, 33, 63, 32, 63, 31, 63, 30, 63, 29, 64, 28, 64, 27, 64, 26, 64, 25, 64, 24, 64, 23, 65, 22, 65, 21, 65, 20, 65, 19, 65, 18, 66, 17, 66, 16, 66, 15, 66, 14, 66, 13, 66, 12, 67, 11, 69, 10, 79, 10],
    36: [63, 22, 65, 23, 65, 24, 66, 25, 66, 26, 66, 27, 66, 28, 66, 29, 67, 30, 67, 31, 67, 32, 67, 33, 67, 34, 67, 35, 104, 36, 106, 37, 112, 38, 113, 39, 114, 40, 115, 41, 115, 42, 116, 43, 118, 44, 118, 45, 118, 46, 118, 47, 118, 48, 118, 49, 118, 50, 118, 51, 118, 52, 118, 53, 123, 54, 123, 55, 123, 56, 123, 57, 125, 58, 125, 59, 126, 60, 127, 61, 126, 62, 127, 63, 127, 64, 127, 65, 127, 66, 128, 67, 127, 68, 128, 69, 128, 70, 128, 71, 127, 72, 128, 73, 127, 74, 128, 75, 128, 76, 127, 77, 127, 78, 126, 79, 126, 80, 124, 81, 124, 82, 124, 83, 121, 84, 120, 85, 119, 86, 116, 87, 121, 88, 123, 89, 125, 90, 127, 91, 128, 92, 129, 93, 129, 94, 130, 95, 130, 96, 134, 97, 135, 98, 135, 99, 135, 100, 134, 101, 130, 102, 130, 103, 129, 104, 129, 105, 128, 106, 128, 107, 127, 108, 127, 109, 127, 110, 127, 111, 127, 112, 127, 113, 127, 114, 127, 115, 127, 116, 127, 117, 127, 118, 127, 119, 127, 120, 127, 121, 126, 122, 126, 123, 126, 124, 126, 125, 126, 126, 126, 127, 127, 128, 129, 129, 130, 130, 130, 131, 127, 132, 126, 133, 112, 134, 112, 135, 112, 136, 112, 137, 111, 138, 110, 139, 108, 140, 98, 140, 95, 139, 94, 138, 93, 137, 68, 136, 67, 135, 64, 134, 56, 133, 54, 132, 53, 131, 50, 130, 48, 129, 49, 128, 48, 127, 48, 126, 51, 125, 52, 124, 56, 123, 53, 122, 49, 121, 44, 120, 40, 119, 39, 118, 35, 117, 34, 116, 33, 115, 31, 114, 26, 113, 25, 112, 24, 111, 24, 110, 23, 109, 23, 108, 23, 107, 22, 106, 22, 105, 25, 104, 29, 103, 32, 102, 32, 101, 32, 100, 32, 99, 32, 98, 32, 97, 32, 96, 11, 95, 10, 94, 9, 93, 8, 92, 8, 91, 7, 90, 7, 89, 6, 88, 6, 87, 6, 86, 7, 85, 7, 84, 8, 83, 8, 82, 10, 81, 10, 80, 10, 79, 11, 78, 11, 77, 12, 76, 13, 75, 15, 74, 17, 73, 17, 72, 17, 71, 18, 70, 17, 69, 18, 68, 24, 67, 25, 66, 26, 65, 26, 64, 27, 63, 28, 62, 29, 61, 30, 60, 31, 59, 33, 58, 34, 57, 35, 56, 35, 55, 36, 54, 37, 53, 37, 52, 37, 51, 38, 50, 38, 49, 38, 48, 38, 47, 38, 46, 38, 45, 39, 44, 38, 43, 38, 42, 38, 41, 38, 40, 39, 39, 40, 38, 41, 37, 41, 36, 42, 35, 43, 34, 46, 33, 51, 32, 51, 31, 51, 30, 51, 29, 52, 28, 52, 27, 52, 26, 52, 25, 53, 24, 53, 23, 54, 22, 63, 22],
    38: [88, 33, 88, 34, 89, 35, 89, 36, 90, 37, 91, 38, 91, 39, 92, 40, 92, 41, 93, 42, 94, 43, 94, 44, 95, 45, 95, 46, 96, 47, 109, 48, 109, 49, 110, 50, 111, 51, 111, 52, 112, 53, 113, 54, 113, 55, 114, 56, 115, 57, 115, 58, 116, 59, 117, 60, 117, 61, 119, 62, 120, 63, 120, 64, 120, 65, 121, 66, 121, 67, 122, 68, 123, 69, 124, 70, 124, 71, 125, 72, 126, 73, 127, 74, 128, 75, 128, 76, 128, 77, 128, 78, 128, 79, 126, 80, 126, 81, 126, 82, 126, 83, 126, 84, 126, 85, 125, 86, 125, 87, 125, 88, 125, 89, 125, 90, 125, 91, 125, 92, 125, 93, 125, 94, 125, 95, 125, 96, 125, 97, 125, 98, 125, 99, 127, 100, 128, 101, 130, 102, 130, 103, 129, 104, 127, 105, 127, 106, 126, 107, 124, 108, 124, 109, 124, 110, 124, 111, 124, 112, 124, 113, 124, 114, 124, 115, 124, 116, 124, 117, 124, 118, 124, 119, 124, 120, 124, 121, 124, 122, 124, 123, 124, 124, 124, 125, 124, 126, 124, 127, 124, 128, 124, 129, 124, 130, 123, 131, 92, 132, 78, 133, 76, 134, 74, 135, 62, 136, 60, 137, 51, 137, 47, 136, 46, 135, 45, 134, 42, 133, 37, 132, 35, 131, 34, 130, 33, 129, 33, 128, 34, 127, 34, 126, 35, 125, 35, 124, 35, 123, 35, 122, 35, 121, 35, 120, 35, 119, 35, 118, 35, 117, 35, 116, 35, 115, 35, 114, 35, 113, 34, 112, 28, 111, 27, 110, 25, 109, 19, 108, 19, 107, 18, 106, 17, 105, 17, 104, 16, 103, 16, 102, 17, 101, 20, 100, 20, 99, 20, 98, 20, 97, 20, 96, 20, 95, 20, 94, 20, 93, 20, 92, 20, 91, 20, 90, 20, 89, 20, 88, 20, 87, 20, 86, 20, 85, 20, 84, 20, 83, 20, 82, 20, 81, 20, 80, 20, 79, 20, 78, 20, 77, 20, 76, 20, 75, 20, 74, 20, 73, 20, 72, 20, 71, 17, 70, 16, 69, 15, 68, 16, 67, 17, 66, 18, 65, 19, 64, 20, 63, 21, 62, 23, 61, 24, 60, 25, 59, 26, 58, 27, 57, 28, 56, 29, 55, 31, 54, 32, 53, 33, 52, 33, 51, 33, 50, 34, 49, 36, 48, 44, 47, 49, 46, 51, 45, 52, 44, 56, 43, 62, 42, 63, 41, 64, 40, 66, 39, 72, 38, 74, 37, 78, 36, 80, 35, 81, 34, 84, 33, 88, 33],
    39: [75, 9, 76, 10, 77, 11, 78, 12, 79, 13, 80, 14, 82, 15, 83, 16, 84, 17, 86, 18, 88, 19, 91, 20, 94, 21, 96, 22, 98, 23, 100, 24, 101, 25, 103, 26, 104, 27, 104, 28, 105, 29, 106, 30, 106, 31, 106, 32, 107, 33, 107, 34, 107, 35, 106, 36, 106, 37, 106, 38, 105, 39, 104, 40, 103, 41, 103, 42, 101, 43, 101, 44, 101, 45, 101, 46, 101, 47, 101, 48, 101, 49, 101, 50, 101, 51, 110, 52, 113, 53, 114, 54, 114, 55, 113, 56, 113, 57, 113, 58, 112, 59, 111, 60, 108, 61, 106, 62, 105, 63, 105, 64, 104, 65, 103, 66, 102, 67, 102, 68, 101, 69, 101, 70, 101, 71, 101, 72, 106, 73, 108, 74, 109, 75, 111, 76, 111, 77, 112, 78, 112, 79, 112, 80, 111, 81, 110, 82, 110, 83, 110, 84, 110, 85, 110, 86, 112, 87, 114, 88, 115, 89, 116, 90, 117, 91, 118, 92, 118, 93, 119, 94, 119, 95, 119, 96, 119, 97, 119, 98, 119, 99, 119, 100, 119, 101, 118, 102, 118, 103, 118, 104, 118, 105, 118, 106, 118, 107, 118, 108, 119, 109, 121, 110, 122, 111, 123, 112, 124, 113, 123, 114, 124, 115, 123, 116, 123, 117, 123, 118, 122, 119, 121, 120, 121, 121, 120, 122, 120, 123, 119, 124, 120, 125, 119, 126, 116, 127, 116, 128, 115, 129, 112, 130, 108, 131, 98, 132, 97, 133, 97, 134, 91, 135, 86, 135, 85, 134, 46, 133, 43, 132, 41, 131, 39, 130, 38, 129, 37, 128, 38, 127, 38, 126, 39, 125, 38, 124, 34, 123, 33, 122, 32, 121, 31, 120, 31, 119, 32, 118, 36, 117, 35, 116, 34, 115, 33, 114, 33, 113, 33, 112, 34, 111, 36, 110, 38, 109, 40, 108, 31, 107, 29, 106, 29, 105, 28, 104, 28, 103, 29, 102, 29, 101, 29, 100, 27, 99, 27, 98, 26, 97, 26, 96, 27, 95, 28, 94, 33, 93, 33, 92, 33, 91, 33, 90, 33, 89, 34, 88, 33, 87, 32, 86, 31, 85, 32, 84, 33, 83, 34, 82, 35, 81, 36, 80, 37, 79, 37, 78, 38, 77, 39, 76, 40, 75, 41, 74, 42, 73, 39, 72, 38, 71, 38, 70, 38, 69, 38, 68, 39, 67, 39, 66, 38, 65, 37, 64, 37, 63, 37, 62, 37, 61, 37, 60, 36, 59, 34, 58, 33, 57, 33, 56, 33, 55, 33, 54, 33, 53, 33, 52, 35, 51, 37, 50, 41, 49, 41, 48, 41, 47, 41, 46, 42, 45, 42, 44, 42, 43, 41, 42, 39, 41, 39, 40, 38, 39, 38, 38, 38, 37, 37, 36, 37, 35, 37, 34, 37, 33, 37, 32, 38, 31, 38, 30, 39, 29, 39, 28, 40, 27, 41, 26, 43, 25, 44, 24, 46, 23, 48, 22, 50, 21, 53, 20, 55, 19, 57, 18, 59, 17, 61, 16, 63, 15, 64, 14, 65, 13, 66, 12, 67, 11, 69, 10, 70, 9, 75, 9],
    40: [302, 99, 305, 100, 307, 101, 310, 102, 312, 103, 313, 104, 315, 105, 316, 106, 316, 107, 316, 108, 317, 109, 318, 110, 318, 111, 318, 112, 318, 113, 317, 114, 316, 115, 315, 116, 314, 117, 313, 118, 317, 119, 342, 120, 343, 121, 345, 122, 351, 123, 353, 124, 353, 125, 358, 126, 359, 127, 359, 128, 361, 129, 362, 130, 384, 131, 386, 132, 389, 133, 391, 134, 391, 135, 392, 136, 392, 137, 393, 138, 394, 139, 394, 140, 394, 141, 394, 142, 393, 143, 393, 144, 390, 145, 389, 146, 390, 147, 390, 148, 391, 149, 392, 150, 392, 151, 392, 152, 393, 153, 393, 154, 392, 155, 391, 156, 391, 157, 395, 158, 396, 159, 397, 160, 397, 161, 398, 162, 399, 163, 401, 164, 410, 165, 414, 166, 420, 167, 422, 168, 423, 169, 424, 170, 424, 171, 424, 172, 429, 173, 431, 174, 433, 175, 437, 176, 436, 177, 436, 178, 437, 179, 437, 180, 438, 181, 439, 182, 441, 183, 440, 184, 440, 185, 440, 186, 441, 187, 442, 188, 442, 189, 445, 190, 444, 191, 444, 192, 443, 193, 443, 194, 442, 195, 442, 196, 444, 197, 446, 198, 444, 199, 444, 200, 446, 201, 447, 202, 448, 203, 447, 204, 447, 205, 448, 206, 449, 207, 449, 208, 449, 209, 450, 210, 450, 211, 456, 212, 456, 213, 458, 214, 458, 215, 458, 216, 462, 217, 463, 218, 464, 219, 465, 220, 464, 221, 464, 222, 464, 223, 464, 224, 464, 225, 466, 226, 467, 227, 467, 228, 467, 229, 467, 230, 467, 231, 468, 232, 468, 233, 469, 234, 469, 235, 468, 236, 466, 237, 465, 238, 463, 239, 462, 240, 434, 241, 433, 242, 433, 243, 402, 244, 406, 245, 412, 246, 412, 247, 413, 248, 402, 249, 402, 250, 402, 251, 400, 252, 399, 253, 398, 254, 397, 255, 396, 256, 394, 257, 393, 258, 392, 259, 391, 260, 389, 261, 388, 262, 387, 263, 385, 264, 384, 265, 382, 266, 381, 267, 381, 268, 382, 269, 382, 270, 383, 271, 383, 272, 384, 273, 385, 274, 386, 275, 386, 276, 387, 277, 387, 278, 387, 279, 388, 280, 388, 281, 388, 282, 388, 283, 389, 284, 389, 285, 389, 286, 390, 287, 390, 288, 391, 289, 391, 290, 392, 291, 393, 292, 394, 293, 395, 294, 395, 295, 396, 296, 397, 297, 398, 298, 399, 299, 399, 300, 400, 301, 400, 302, 401, 303, 401, 304, 401, 305, 401, 306, 401, 307, 401, 308, 401, 309, 401, 310, 402, 311, 403, 312, 404, 313, 405, 314, 406, 315, 408, 316, 408, 317, 409, 318, 409, 319, 409, 320, 409, 321, 409, 322, 409, 323, 409, 324, 409, 325, 408, 326, 408, 327, 407, 328, 406, 329, 406, 330, 406, 331, 405, 332, 405, 333, 404, 334, 403, 335, 402, 336, 402, 337, 403, 338, 403, 339, 404, 340, 404, 341, 404, 342, 405, 343, 404, 344, 408, 345, 412, 346, 414, 347, 414, 348, 414, 349, 414, 350, 414, 351, 415, 352, 415, 353, 415, 354, 416, 355, 415, 356, 415, 357, 414, 358, 413, 359, 411, 360, 410, 361, 410, 362, 410, 363, 410, 364, 412, 365, 412, 366, 412, 367, 414, 368, 415, 369, 415, 370, 415, 371, 415, 372, 415, 373, 415, 374, 416, 375, 415, 376, 415, 377, 414, 378, 414, 379, 413, 380, 412, 381, 412, 382, 410, 383, 409, 384, 407, 385, 406, 386, 404, 387, 397, 388, 397, 389, 397, 390, 397, 391, 396, 392, 395, 393, 394, 394, 393, 395, 390, 396, 390, 397, 390, 398, 390, 399, 390, 400, 389, 401, 389, 402, 388, 403, 388, 404, 388, 405, 388, 406, 387, 407, 386, 408, 385, 409, 384, 410, 379, 411, 361, 412, 355, 413, 352, 414, 350, 415, 347, 416, 311, 417, 302, 418, 312, 419, 312, 420, 301, 421, 300, 422, 295, 423, 293, 424, 292, 425, 283, 426, 283, 427, 279, 428, 278, 429, 271, 430, 270, 431, 258, 432, 252, 433, 249, 434, 233, 435, 238, 436, 237, 437, 221, 437, 218, 436, 215, 435, 211, 434, 204, 433, 195, 432, 189, 431, 185, 430, 179, 429, 177, 428, 172, 427, 170, 426, 169, 425, 169, 424, 169, 423, 155, 422, 151, 421, 147, 420, 144, 419, 143, 418, 135, 417, 132, 416, 130, 415, 125, 414, 123, 413, 118, 412, 116, 411, 115, 410, 114, 409, 114, 408, 113, 407, 110, 406, 108, 405, 108, 404, 104, 403, 102, 402, 100, 401, 98, 400, 95, 399, 92, 398, 82, 397, 81, 396, 80, 395, 80, 394, 70, 393, 70, 392, 70, 391, 70, 390, 71, 389, 68, 388, 68, 387, 68, 386, 66, 385, 66, 384, 49, 383, 49, 382, 49, 381, 49, 380, 47, 379, 47, 378, 48, 377, 46, 376, 40, 375, 41, 374, 33, 373, 33, 372, 34, 371, 30, 370, 27, 369, 27, 368, 28, 367, 27, 366, 28, 365, 27, 364, 21, 363, 22, 362, 22, 361, 22, 360, 22, 359, 19, 358, 19, 357, 20, 356, 20, 355, 19, 354, 19, 353, 18, 352, 18, 351, 18, 350, 14, 349, 13, 348, 12, 347, 12, 346, 12, 345, 12, 344, 12, 343, 11, 342, 11, 341, 9, 340, 9, 339, 10, 338, 8, 337, 7, 336, 9, 335, 8, 334, 7, 333, 8, 332, 7, 331, 6, 330, 6, 329, 6, 328, 7, 327, 8, 326, 8, 325, 9, 324, 9, 323, 12, 322, 7, 321, 7, 320, 6, 319, 7, 318, 6, 317, 7, 316, 7, 315, 6, 314, 8, 313, 8, 312, 9, 311, 10, 310, 10, 309, 11, 308, 9, 307, 9, 306, 10, 305, 11, 304, 11, 303, 12, 302, 10, 301, 11, 300, 12, 299, 12, 298, 13, 297, 10, 296, 11, 295, 13, 294, 11, 293, 11, 292, 12, 291, 13, 290, 13, 289, 13, 288, 15, 287, 16, 286, 16, 285, 15, 284, 16, 283, 17, 282, 17, 281, 18, 280, 20, 279, 20, 278, 18, 277, 20, 276, 19, 275, 19, 274, 19, 273, 20, 272, 21, 271, 21, 270, 21, 269, 22, 268, 22, 267, 25, 266, 25, 265, 24, 264, 24, 263, 28, 262, 28, 261, 29, 260, 29, 259, 31, 258, 32, 257, 35, 256, 34, 255, 39, 254, 39, 253, 40, 252, 41, 251, 42, 250, 43, 249, 46, 248, 44, 247, 42, 246, 41, 245, 41, 244, 41, 243, 40, 242, 40, 241, 41, 240, 41, 239, 39, 238, 38, 237, 38, 236, 37, 235, 37, 234, 38, 233, 38, 232, 36, 231, 36, 230, 35, 229, 35, 228, 35, 227, 35, 226, 36, 225, 35, 224, 36, 223, 37, 222, 41, 221, 41, 220, 41, 219, 48, 218, 49, 217, 50, 216, 51, 215, 53, 214, 73, 213, 72, 212, 73, 211, 72, 210, 73, 209, 76, 208, 80, 207, 81, 206, 82, 205, 83, 204, 83, 203, 82, 202, 81, 201, 86, 200, 86, 199, 85, 198, 84, 197, 91, 196, 91, 195, 92, 194, 91, 193, 94, 192, 94, 191, 95, 190, 96, 189, 96, 188, 96, 187, 98, 186, 98, 185, 97, 184, 98, 183, 98, 182, 99, 181, 98, 180, 97, 179, 97, 178, 97, 177, 97, 176, 97, 175, 97, 174, 97, 173, 97, 172, 97, 171, 97, 170, 97, 169, 97, 168, 98, 167, 98, 166, 100, 165, 101, 164, 102, 163, 105, 162, 105, 161, 106, 160, 107, 159, 114, 158, 114, 157, 114, 156, 115, 155, 115, 154, 116, 153, 153, 152, 158, 151, 158, 150, 158, 149, 163, 148, 171, 147, 173, 146, 174, 145, 174, 144, 175, 143, 176, 142, 177, 141, 179, 140, 181, 139, 182, 138, 184, 137, 185, 136, 184, 135, 184, 134, 185, 133, 185, 132, 187, 131, 189, 130, 193, 129, 199, 128, 200, 127, 204, 126, 208, 125, 210, 124, 213, 123, 231, 122, 231, 121, 231, 120, 240, 119, 238, 118, 237, 117, 237, 116, 236, 115, 236, 114, 236, 113, 236, 112, 237, 111, 238, 110, 238, 109, 238, 108, 242, 107, 243, 106, 245, 105, 249, 104, 289, 103, 291, 102, 292, 101, 296, 100, 299, 99, 302, 99],
    41: [78, 44, 80, 45, 80, 46, 80, 47, 80, 48, 80, 49, 81, 50, 81, 51, 82, 52, 82, 53, 83, 54, 83, 55, 84, 56, 85, 57, 85, 58, 86, 59, 86, 60, 86, 61, 86, 62, 84, 63, 78, 64, 78, 65, 80, 66, 81, 67, 81, 68, 108, 69, 123, 70, 124, 71, 125, 72, 125, 73, 125, 74, 126, 75, 125, 76, 125, 77, 125, 78, 125, 79, 125, 80, 125, 81, 125, 82, 126, 83, 127, 84, 122, 85, 122, 86, 121, 87, 121, 88, 121, 89, 121, 90, 122, 91, 122, 92, 122, 93, 121, 94, 118, 95, 119, 96, 119, 97, 119, 98, 119, 99, 119, 100, 120, 101, 125, 102, 128, 103, 129, 104, 130, 105, 131, 106, 131, 107, 132, 108, 131, 109, 131, 110, 131, 111, 131, 112, 132, 113, 133, 114, 133, 115, 134, 116, 134, 117, 135, 118, 135, 119, 135, 120, 134, 121, 134, 122, 124, 123, 133, 124, 136, 125, 136, 126, 98, 127, 99, 128, 101, 129, 100, 130, 100, 131, 101, 132, 100, 133, 101, 134, 97, 135, 78, 136, 78, 137, 79, 138, 66, 139, 68, 140, 53, 141, 50, 141, 50, 140, 52, 139, 51, 138, 52, 137, 54, 136, 54, 135, 37, 134, 36, 133, 28, 132, 29, 131, 28, 130, 29, 129, 29, 128, 27, 127, 29, 126, 28, 125, 20, 124, 20, 123, 32, 122, 31, 121, 33, 120, 34, 119, 35, 118, 35, 117, 34, 116, 16, 115, 17, 114, 18, 113, 21, 112, 21, 111, 20, 110, 21, 109, 22, 108, 24, 107, 26, 106, 25, 105, 25, 104, 25, 103, 24, 102, 25, 101, 25, 100, 17, 99, 10, 98, 8, 97, 10, 96, 11, 95, 16, 94, 11, 93, 11, 92, 11, 91, 11, 90, 11, 89, 9, 88, 9, 87, 10, 86, 11, 85, 11, 84, 11, 83, 11, 82, 11, 81, 12, 80, 12, 79, 13, 78, 14, 77, 15, 76, 59, 75, 60, 74, 60, 73, 64, 72, 63, 71, 63, 70, 63, 69, 63, 68, 64, 67, 65, 66, 64, 65, 65, 64, 65, 63, 66, 62, 66, 61, 67, 60, 67, 59, 67, 58, 68, 57, 68, 56, 68, 55, 68, 54, 68, 53, 68, 52, 69, 51, 69, 50, 69, 49, 70, 48, 71, 47, 72, 46, 72, 45, 73, 44, 78, 44],
    42: [214, 182, 348, 122, 522, 98, 754, 108, 986, 192, 1138, 344, 1162, 378, 1160, 622, 988, 752, 766, 850, 574, 862, 252, 822, 70, 704, 6, 592, 10, 370, 100, 250, 180, 200, 220, 240, 130, 316, 56, 428, 64, 586, 152, 682, 308, 776, 494, 808, 680, 810, 858, 768, 950, 714, 1074, 594, 1104, 508, 1078, 360, 974, 266, 852, 186, 640, 146, 468, 152, 336, 176, 262, 222],
    43: [[169, 664, 170, 583, 203, 563, 212, 567, 213, 570, 213, 600, 215, 602, 227, 595, 257, 607, 308, 624, 386, 642, 461, 652, 509, 655, 524, 654, 527, 648, 542, 647, 572, 648, 576, 654, 579, 655, 639, 652, 717, 641, 780, 627, 858, 601, 876, 593, 879, 593, 888, 599, 891, 599, 891, 566, 893, 563, 899, 560, 929, 576, 934, 581, 934, 668, 926, 674, 922, 667, 921, 657, 918, 655, 917, 652, 911, 652, 902, 649, 881, 660, 878, 663, 872, 664, 848, 676, 839, 677, 833, 681, 826, 681, 824, 684, 800, 690, 797, 692, 797, 704, 791, 706, 785, 706, 782, 703, 781, 697, 778, 697, 760, 703, 754, 703, 751, 705, 733, 708, 724, 707, 712, 712, 703, 712, 697, 715, 691, 714, 685, 716, 682, 715, 679, 717, 661, 719, 658, 718, 634, 723, 631, 721, 628, 723, 613, 724, 613, 733, 611, 736, 602, 736, 597, 725, 555, 727, 501, 725, 499, 734, 497, 736, 488, 736, 486, 724, 462, 723, 459, 721, 441, 718, 438, 719, 417, 715, 405, 715, 390, 711, 384, 712, 378, 710, 376, 707, 364, 708, 355, 705, 340, 703, 319, 696, 318, 702, 315, 705, 312, 707, 309, 705, 306, 706, 303, 704, 301, 692, 298, 690, 274, 683, 274, 680, 267, 681, 261, 677, 255, 677, 246, 674, 240, 671, 238, 668, 223, 663, 202, 651, 187, 655, 186, 658, 183, 660, 183, 666, 180, 669, 175, 669], [1, 390, 4, 429, 9, 444, 15, 442, 21, 444, 22, 447, 16, 462, 19, 471, 25, 471, 27, 469, 30, 470, 41, 500, 50, 518, 48, 530, 50, 539, 52, 542, 55, 543, 58, 542, 60, 536, 63, 537, 83, 564, 92, 570, 100, 579, 99, 618, 101, 624, 105, 624, 108, 626, 114, 624, 116, 621, 117, 609, 120, 610, 129, 607, 131, 604, 134, 604, 137, 601, 140, 602, 140, 599, 143, 598, 143, 525, 135, 521, 126, 524, 123, 523, 114, 517, 105, 508, 102, 507, 80, 478, 72, 464, 68, 461, 52, 424, 44, 397, 42, 382, 45, 381, 47, 378, 47, 357, 41, 354, 50, 327, 55, 321, 70, 294, 86, 271, 89, 270, 123, 236, 140, 222, 164, 206, 170, 204, 188, 191, 188, 185, 190, 182, 196, 179, 197, 113, 195, 110, 162, 91, 156, 96, 154, 99, 155, 129, 153, 141, 132, 153, 96, 181, 72, 205, 60, 220, 44, 244, 33, 268, 26, 289, 19, 319, 13, 322, 3, 346], [225, 125, 226, 59, 234, 52, 246, 58, 270, 74, 273, 74, 336, 51, 372, 42, 450, 29, 516, 23, 582, 23, 594, 25, 612, 25, 678, 33, 735, 44, 762, 51, 810, 67, 846, 83, 868, 69, 869, 71, 871, 68, 880, 63, 889, 69, 890, 78, 889, 138, 880, 143, 877, 142, 876, 145, 862, 154, 856, 156, 847, 151, 841, 152, 826, 143, 823, 143, 817, 138, 781, 127, 736, 117, 719, 115, 713, 112, 707, 112, 703, 109, 696, 110, 684, 106, 666, 105, 660, 102, 645, 102, 633, 100, 627, 97, 620, 99, 583, 97, 574, 101, 526, 101, 517, 97, 499, 97, 487, 99, 484, 96, 481, 98, 469, 97, 463, 100, 445, 103, 438, 102, 435, 104, 414, 106, 408, 109, 321, 126, 273, 142, 267, 141, 261, 144, 252, 142, 246, 137, 243, 137, 238, 131, 232, 130, 226, 126], [917, 130, 919, 139, 920, 190, 923, 192, 924, 190, 928, 194, 927, 200, 929, 203, 933, 202, 934, 205, 946, 212, 952, 218, 955, 218, 956, 221, 960, 222, 963, 224, 964, 227, 973, 232, 993, 253, 1008, 266, 1009, 269, 1015, 273, 1016, 276, 1025, 285, 1025, 288, 1048, 321, 1054, 336, 1054, 326, 1056, 325, 1059, 337, 1059, 343, 1056, 343, 1059, 353, 1052, 358, 1052, 376, 1057, 384, 1055, 396, 1056, 402, 1053, 405, 1054, 408, 1051, 417, 1048, 420, 1043, 436, 1036, 451, 1023, 474, 1001, 502, 992, 511, 980, 521, 968, 518, 962, 521, 961, 524, 961, 593, 968, 601, 970, 598, 972, 601, 971, 603, 975, 604, 977, 601, 982, 607, 988, 604, 990, 605, 992, 621, 995, 623, 1001, 623, 1004, 621, 1005, 576, 1039, 537, 1043, 543, 1046, 543, 1050, 538, 1052, 532, 1050, 517, 1061, 496, 1069, 472, 1071, 469, 1074, 471, 1080, 471, 1082, 468, 1083, 462, 1078, 444, 1090, 444, 1092, 442, 1092, 436, 1096, 427, 1099, 397, 1099, 352, 1088, 325, 1080, 318, 1074, 291, 1068, 273, 1052, 237, 1042, 222, 1024, 201, 1003, 181, 961, 149, 960, 107, 954, 102, 951, 103, 918, 122, 918, 128]],
    44: [79, 10, 80, 11, 81, 12, 81, 13, 81, 14, 81, 15, 82, 16, 81, 17, 82, 18, 82, 19, 82, 20, 82, 21, 82, 22, 82, 23, 82, 24, 83, 25, 83, 26, 83, 27, 83, 28, 83, 29, 83, 30, 104, 31, 105, 32, 105, 33, 105, 34, 105, 35, 104, 36, 104, 37, 104, 38, 104, 39, 104, 40, 104, 41, 104, 42, 104, 43, 104, 44, 104, 45, 104, 46, 104, 47, 104, 48, 104, 49, 104, 50, 104, 51, 104, 52, 104, 53, 104, 54, 104, 55, 104, 56, 105, 57, 109, 58, 110, 59, 110, 60, 110, 61, 110, 62, 110, 63, 110, 64, 110, 65, 110, 66, 110, 67, 113, 68, 113, 69, 113, 70, 113, 71, 113, 72, 113, 73, 113, 74, 113, 75, 113, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 120, 83, 120, 84, 120, 85, 120, 86, 120, 87, 120, 88, 120, 89, 120, 90, 120, 91, 120, 92, 120, 93, 122, 94, 123, 95, 125, 96, 125, 97, 125, 98, 124, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 123, 110, 123, 111, 123, 112, 127, 113, 127, 114, 128, 115, 128, 116, 127, 117, 126, 118, 125, 119, 125, 120, 125, 121, 121, 122, 120, 123, 121, 124, 121, 125, 122, 126, 122, 127, 122, 128, 118, 129, 116, 130, 115, 131, 113, 132, 112, 133, 112, 134, 111, 135, 99, 136, 99, 137, 98, 138, 98, 139, 95, 140, 93, 140, 90, 139, 90, 138, 90, 137, 83, 136, 68, 135, 56, 134, 54, 133, 54, 132, 54, 131, 48, 130, 46, 129, 45, 128, 38, 127, 35, 126, 34, 125, 33, 124, 33, 123, 32, 122, 32, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 30, 110, 30, 109, 29, 108, 27, 107, 27, 106, 28, 105, 28, 104, 26, 103, 26, 102, 26, 101, 26, 100, 30, 99, 30, 98, 30, 97, 30, 96, 30, 95, 30, 94, 30, 93, 30, 92, 30, 91, 30, 90, 30, 89, 30, 88, 29, 87, 27, 86, 26, 85, 26, 84, 25, 83, 26, 82, 29, 81, 34, 80, 36, 79, 40, 78, 39, 77, 38, 76, 38, 75, 38, 74, 38, 73, 38, 72, 38, 71, 38, 70, 38, 69, 38, 68, 38, 67, 38, 66, 38, 65, 38, 64, 38, 63, 38, 62, 38, 61, 38, 60, 38, 59, 38, 58, 38, 57, 38, 56, 39, 55, 41, 54, 43, 53, 44, 52, 44, 51, 45, 50, 45, 49, 46, 48, 47, 47, 48, 46, 49, 45, 50, 44, 51, 43, 52, 42, 53, 41, 55, 40, 58, 39, 59, 38, 62, 37, 62, 36, 62, 35, 62, 34, 63, 33, 63, 32, 63, 31, 63, 30, 63, 29, 64, 28, 64, 27, 64, 26, 64, 25, 64, 24, 64, 23, 65, 22, 65, 21, 65, 20, 65, 19, 65, 18, 66, 17, 66, 16, 66, 15, 66, 14, 66, 13, 66, 12, 67, 11, 69, 10, 79, 10],
    45: [79, 20, 82, 21, 84, 22, 86, 23, 87, 24, 89, 25, 90, 26, 91, 27, 92, 28, 93, 29, 94, 30, 94, 31, 95, 32, 96, 33, 96, 34, 97, 35, 97, 36, 98, 37, 98, 38, 99, 39, 99, 40, 99, 41, 99, 42, 100, 43, 100, 44, 100, 45, 100, 46, 100, 47, 101, 48, 101, 49, 101, 50, 101, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 113, 57, 114, 58, 115, 59, 115, 60, 115, 61, 115, 62, 115, 63, 115, 64, 115, 65, 115, 66, 115, 67, 115, 68, 115, 69, 115, 70, 115, 71, 115, 72, 115, 73, 115, 74, 115, 75, 115, 76, 115, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 114, 84, 114, 85, 114, 86, 114, 87, 114, 88, 114, 89, 114, 90, 118, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 119, 97, 120, 98, 121, 99, 122, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 122, 107, 121, 108, 121, 109, 122, 110, 123, 111, 124, 112, 124, 113, 125, 114, 125, 115, 125, 116, 124, 117, 123, 118, 123, 119, 123, 120, 123, 121, 125, 122, 124, 123, 122, 124, 121, 125, 120, 126, 120, 127, 120, 128, 119, 129, 119, 130, 119, 131, 116, 132, 115, 133, 107, 134, 69, 134, 66, 133, 64, 132, 64, 131, 64, 130, 65, 129, 66, 128, 58, 127, 54, 126, 35, 125, 31, 124, 31, 123, 31, 122, 32, 121, 33, 120, 33, 119, 34, 118, 34, 117, 34, 116, 34, 115, 34, 114, 33, 113, 32, 112, 31, 111, 31, 110, 30, 109, 29, 108, 29, 107, 29, 106, 28, 105, 24, 104, 22, 103, 22, 102, 22, 101, 23, 100, 24, 99, 25, 98, 25, 97, 25, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 26, 87, 28, 86, 39, 85, 39, 84, 39, 83, 39, 82, 39, 81, 39, 80, 39, 79, 39, 78, 39, 77, 39, 76, 40, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 42, 67, 41, 66, 41, 65, 41, 64, 41, 63, 41, 62, 41, 61, 41, 60, 41, 59, 41, 58, 41, 57, 41, 56, 41, 55, 41, 54, 41, 53, 42, 52, 42, 51, 42, 50, 42, 49, 42, 48, 42, 47, 43, 46, 43, 45, 43, 44, 43, 43, 44, 42, 44, 41, 44, 40, 45, 39, 45, 38, 45, 37, 46, 36, 46, 35, 47, 34, 47, 33, 48, 32, 49, 31, 50, 30, 51, 29, 52, 28, 53, 27, 54, 26, 55, 25, 56, 24, 58, 23, 60, 22, 62, 21, 64, 20, 79, 20],
    46: [4, 108, 27, 79, 52, 51, 79, 59, 114, 77, 142, 84, 135, 111, 105, 132, 56, 140, 20, 126]
};
config.village.buildingPoly[0] = {
    19: [231, 252, 300, 289, 315, 317, 357, 345, 313, 395, 295, 356, 214, 350, 163, 317],
    20: [368, 407, 424, 434, 510, 434, 516, 457, 452, 482, 381, 539, 329, 516, 318, 455],
    21: [157, 340, 203, 366, 280, 376, 299, 407, 281, 441, 189, 451, 135, 442],
    22: [136, 461, 193, 469, 278, 462, 285, 517, 255, 516, 154, 562],
    23: [377, 388, 413, 347, 467, 329, 499, 350, 511, 382, 527, 395, 512, 423, 435, 423],
    24: [298, 243, 415, 207, 455, 244, 482, 264, 491, 282, 436, 297, 387, 321, 349, 298, 339, 266],
    25: [434, 203, 578, 190, 580, 220, 559, 241, 488, 250, 463, 221],
    26: [605, 194, 721, 216, 706, 299, 621, 274, 514, 282, 506, 261, 568, 254, 597, 229],
    27: [533, 312, 601, 305, 677, 321, 686, 361, 666, 383, 629, 366, 566, 378, 538, 347],
    28: [743, 220, 849, 268, 779, 287, 739, 317, 721, 310, 733, 261, 730, 229],
    29: [881, 297, 925, 348, 850, 380, 812, 385, 787, 348, 768, 336, 799, 316, 848, 308],
    30: [936, 365, 968, 440, 824, 442, 819, 402, 872, 390],
    31: [964, 455, 937, 532, 860, 489, 817, 489, 827, 456, 884, 461],
    32: [703, 394, 748, 360, 778, 400, 788, 454, 770, 490, 707, 532, 664, 501, 706, 483, 728, 442, 723, 414],
    33: [520, 115, 335, 132, 197, 179, 90, 260, 39, 341, 29, 448, 41, 571, 120, 655, 246, 747, 358, 794, 545, 810, 664, 810, 847, 766, 997, 679, 1104, 593, 1116, 455, 1081, 344, 993, 246, 843, 181, 709, 136, 525, 115, 524, 169, 701, 182, 877, 237, 1001, 326, 1050, 418, 1053, 524, 992, 627, 846, 722, 703, 764, 556, 765, 386, 757, 261, 711, 145, 626, 89, 553, 77, 418, 117, 329, 199, 246, 280, 200, 421, 166, 521, 169],
    34: [920, 547, 829, 614, 777, 568, 741, 553, 780, 531, 808, 508, 847, 506, 878, 528],
    35: [539, 484, 572, 498, 616, 502, 666, 549, 607, 553, 509, 571, 431, 555, 469, 532, 487, 507],
    36: [295, 534, 356, 570, 342, 597, 300, 615, 265, 640, 211, 659, 146, 599, 186, 567, 249, 542],
    37: [259, 682, 331, 652, 341, 634, 386, 615, 396, 582, 438, 597, 442, 650, 467, 697, 456, 738, 399, 749],
    38: [594, 589, 663, 583, 713, 569, 726, 579, 722, 616, 690, 652, 632, 660, 598, 632],
    39: [748, 593, 815, 658, 855, 672, 725, 740, 703, 714, 684, 668, 713, 665, 742, 635],
    40: [461, 599, 513, 607, 569, 597, 577, 641, 608, 671, 656, 677, 680, 710, 491, 731, 490, 687, 465, 644],
    42: [1116, 755, 1150, 788, 1150, 794, 1151, 802, 1054, 828, 1001, 754, 1065, 746],
    43: [975, 760, 1035, 840, 1002, 849, 928, 850, 900, 835, 885, 812, 910, 786]
};
config.village.resPoly = {
    11115: {
        1: [276, 329, 282, 320, 291, 313, 295, 307, 301, 303, 328, 297, 333, 285, 339, 281, 345, 280, 357, 270, 378, 264, 396, 264, 408, 268, 414, 272, 435, 290, 439, 305, 433, 329, 426, 347, 430, 356, 427, 365, 416, 380, 407, 386, 405, 389, 399, 392, 388, 381, 383, 378, 380, 379, 379, 374, 376, 372, 367, 378, 361, 378, 355, 372, 354, 369, 345, 361, 333, 343, 327, 340, 318, 348, 318, 351, 310, 363, 303, 368, 301, 362, 296, 356, 287, 353, 284, 350, 278, 338, 277, 332],
        10: [687, 410, 695, 434, 707, 446, 709, 452, 721, 462, 763, 475, 784, 476, 787, 474, 790, 476, 796, 475, 808, 468, 813, 453, 819, 449, 827, 440, 829, 428, 841, 423, 853, 414, 856, 414, 859, 412, 862, 406, 858, 400, 834, 392, 822, 392, 810, 387, 792, 384, 780, 380, 774, 381, 753, 379, 729, 391, 723, 392, 708, 401, 690, 406, 688, 409],
        11: [809, 455, 810, 458, 825, 458, 846, 467, 852, 472, 857, 484, 869, 489, 884, 487, 899, 492, 941, 492, 953, 500, 962, 500, 968, 502, 977, 508, 992, 511, 1004, 508, 1013, 502, 1019, 500, 1023, 494, 1026, 493, 1039, 472, 1034, 463, 1040, 442, 1038, 430, 1027, 420, 1023, 414, 1023, 408, 997, 384, 991, 383, 973, 375, 967, 376, 958, 372, 952, 372, 943, 368, 937, 368, 919, 361, 907, 360, 898, 354, 892, 353, 883, 357, 879, 366, 876, 369, 874, 381, 875, 384, 872, 393, 860, 403, 859, 409, 847, 415, 843, 420, 828, 427, 826, 430, 826, 436, 818, 448, 812, 452],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [522, 581, 523, 575, 530, 566, 536, 562, 554, 555, 560, 556, 575, 553, 593, 556, 605, 555, 620, 560, 626, 565, 638, 570, 659, 585, 659, 591, 669, 606, 666, 624, 650, 645, 644, 649, 608, 648, 599, 645, 593, 645, 575, 649, 566, 655, 560, 653, 548, 643, 540, 625, 529, 615, 527, 606, 529, 600, 524, 591, 523, 582],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [538, 675, 541, 693, 552, 704, 557, 713, 563, 719, 581, 727, 611, 735, 629, 735, 638, 731, 640, 719, 637, 710, 643, 706, 655, 705, 664, 698, 670, 699, 676, 697, 680, 688, 689, 683, 691, 680, 691, 674, 689, 671, 677, 664, 668, 656, 653, 650, 641, 646, 614, 647, 596, 643, 569, 650, 561, 658, 549, 662, 543, 666, 540, 672],
        18: [614, 559, 623, 557, 659, 558, 695, 570, 701, 570, 710, 574, 719, 574, 737, 581, 763, 604, 765, 607, 764, 610, 767, 613, 779, 616, 788, 623, 792, 632, 805, 647, 806, 653, 804, 659, 793, 670, 790, 671, 773, 689, 764, 694, 743, 695, 737, 697, 722, 697, 710, 694, 695, 698, 686, 698, 683, 696, 680, 697, 677, 695, 677, 692, 680, 687, 689, 681, 688, 672, 682, 667, 676, 665, 667, 656, 649, 651, 646, 649, 645, 646, 650, 642, 650, 639, 659, 632, 665, 623, 664, 620, 667, 608, 665, 602, 658, 593, 658, 587, 637, 571, 625, 566, 616, 560],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 705, 380, 706, 383, 714, 379, 717, 380, 717, 383, 720, 384, 721, 381, 731, 372, 729, 366, 731, 360, 738, 352, 741, 351, 743, 357, 740, 363, 746, 365, 745, 368, 747, 370, 750, 368, 751, 365, 756, 362, 760, 356, 768, 351, 768, 348, 765, 346, 772, 340, 769, 331, 770, 328, 773, 329, 778, 323, 781, 322, 783, 319, 778, 313, 779, 310, 782, 310, 787, 302, 793, 298, 794, 295, 791, 292, 782, 287, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 790, 280, 791, 283, 794, 284, 804, 276, 804, 273, 796, 265, 797, 261, 795, 258, 786, 253, 785, 250, 776, 243, 779, 241, 780, 238, 786, 234, 787, 231, 778, 225, 775, 225, 769, 229, 766, 235, 757, 232, 752, 224, 747, 229, 744, 228, 743, 225, 737, 221, 731, 221, 725, 224, 721, 233, 721, 237, 713, 243, 713, 240, 717, 235, 714, 226, 711, 225, 710, 228, 707, 230, 698, 227, 695, 229, 692, 235, 686, 233, 683, 234, 675, 241, 672, 238, 677, 233, 675, 230, 677, 227, 676, 224, 667, 222, 664, 225, 664, 231, 661, 233, 652, 232, 649, 235, 648, 238, 651, 239, 650, 241, 641, 237, 635, 237, 633, 231, 639, 232, 641, 235, 651, 228, 650, 225, 644, 220, 638, 220, 632, 224, 628, 236, 625, 237, 616, 234, 613, 232, 611, 226, 609, 227, 605, 236, 610, 244, 616, 246, 617, 249, 620, 250, 621, 247, 630, 244, 631, 247, 634, 249, 625, 250, 620, 255, 620, 258, 611, 258, 605, 262, 607, 268, 613, 271, 614, 274, 617, 274, 618, 271, 624, 268, 626, 270, 623, 276, 615, 283, 603, 287],
        4: [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404],
        5: [456, 322, 460, 334, 456, 346, 459, 358, 470, 369, 479, 390, 488, 397, 509, 406, 521, 406, 527, 404, 539, 406, 563, 401, 564, 398, 573, 395, 575, 392, 572, 386, 551, 367, 548, 358, 544, 352, 543, 349, 545, 337, 554, 322, 552, 316, 546, 311, 528, 305, 522, 305, 513, 302, 507, 304, 501, 303, 492, 305, 480, 305, 474, 307, 462, 315, 457, 321],
        6: [541, 346, 542, 352, 551, 370, 572, 389, 572, 392, 563, 397, 562, 400, 564, 403, 570, 405, 609, 402, 618, 399, 624, 395, 640, 378, 643, 377, 649, 371, 655, 359, 653, 353, 640, 338, 636, 329, 627, 323, 615, 321, 606, 313, 597, 311, 591, 307, 570, 307, 567, 305, 561, 305, 543, 309, 543, 312, 551, 319, 550, 325, 544, 334, 543, 343],
        7: [755, 379, 769, 367, 775, 364, 776, 358, 773, 355, 774, 352, 772, 346, 774, 340, 788, 329, 809, 321, 836, 325, 857, 332, 863, 336, 893, 346, 898, 351, 897, 354, 888, 355, 882, 360, 876, 378, 876, 390, 871, 396, 862, 402, 835, 393, 823, 392, 805, 386, 796, 386, 781, 382, 757, 380],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    3339: {
        1: [276, 332, 277, 344, 280, 350, 285, 356, 291, 357, 306, 369, 312, 372, 327, 372, 339, 377, 360, 378, 369, 383, 372, 383, 378, 389, 390, 394, 411, 384, 419, 376, 419, 373, 429, 361, 429, 355, 425, 349, 434, 325, 438, 301, 434, 289, 431, 288, 421, 277, 418, 276, 412, 270, 400, 265, 379, 263, 373, 267, 361, 268, 347, 279, 338, 281, 333, 286, 330, 295, 324, 298, 303, 302, 297, 305, 277, 328, 277, 331],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 632, 311, 637, 316, 643, 317, 652, 324, 659, 318, 657, 315, 658, 312, 661, 312, 667, 317, 670, 322, 669, 328, 671, 331, 677, 333, 677, 336, 680, 338, 676, 341, 678, 347, 676, 350, 669, 346, 657, 349, 658, 358, 656, 364, 660, 369, 663, 369, 659, 374, 653, 375, 647, 379, 646, 382, 657, 399, 660, 398, 660, 395, 666, 395, 669, 393, 673, 387, 673, 382, 678, 385, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 707, 383, 715, 378, 720, 369, 726, 365, 740, 351, 755, 363, 766, 348, 766, 344, 772, 340, 769, 331, 770, 328, 773, 329, 783, 319, 778, 313, 779, 310, 782, 310, 783, 307, 787, 302, 793, 298, 794, 295, 782, 287, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 790, 280, 791, 283, 794, 284, 804, 276, 804, 273, 796, 265, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 607, 229, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        4: [198, 369, 202, 381, 198, 393, 201, 405, 213, 416, 222, 437, 228, 443, 255, 453, 270, 450, 279, 452, 297, 448, 309, 450, 330, 450, 360, 445, 366, 441, 381, 424, 387, 421, 394, 413, 396, 404, 396, 401, 388, 392, 379, 389, 361, 377, 340, 377, 322, 370, 304, 370, 295, 368, 271, 352, 265, 350, 244, 349, 238, 351, 223, 351, 214, 354, 205, 360, 199, 368],
        5: [443, 329, 449, 320, 461, 312, 470, 309, 497, 308, 500, 306, 512, 310, 518, 310, 527, 314, 539, 311, 566, 311, 575, 315, 579, 321, 578, 324, 570, 331, 561, 334, 555, 346, 546, 351, 538, 360, 537, 363, 542, 372, 543, 381, 549, 390, 549, 393, 544, 405, 529, 410, 517, 408, 499, 411, 493, 409, 475, 402, 466, 393, 461, 381, 456, 384, 451, 380, 450, 374, 453, 372, 454, 369, 448, 365, 444, 353, 448, 341, 445, 332],
        6: [543, 362, 547, 368, 553, 368, 558, 373, 549, 380, 550, 383, 553, 385, 574, 387, 586, 395, 595, 398, 604, 396, 625, 396, 631, 394, 636, 390, 635, 384, 646, 374, 650, 362, 665, 351, 668, 345, 666, 342, 669, 339, 669, 336, 663, 331, 645, 326, 585, 325, 579, 327, 567, 335, 570, 340, 568, 346, 559, 348, 550, 353, 547, 355, 544, 361],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    33546: {
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544]
    },
    3447: {
        1: [231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 293, 351, 293, 357, 299, 360, 308, 360, 308, 365, 317, 370, 331, 366, 331, 363, 337, 362, 339, 357, 342, 359, 357, 361, 369, 365, 372, 363, 381, 362, 387, 365, 387, 368, 390, 369, 399, 367, 402, 368, 407, 373, 416, 373, 419, 372, 420, 369, 429, 369, 424, 361, 433, 361, 439, 353, 445, 358, 448, 358, 450, 352, 462, 353, 465, 350, 465, 347, 477, 343, 479, 340, 473, 339, 474, 330, 471, 328, 472, 326, 481, 329, 483, 323, 480, 320, 474, 318, 469, 312, 472, 308, 470, 305, 452, 289, 446, 288, 437, 294, 434, 293, 428, 287, 405, 251, 399, 249, 391, 257, 388, 258, 382, 267, 379, 268, 370, 256, 358, 244, 349, 238, 346, 239, 327, 256, 327, 259, 318, 270, 312, 270, 307, 276, 304, 276, 295, 291, 289, 294, 288, 297, 282, 301, 279, 299, 270, 307, 267, 307, 258, 313, 252, 315, 246, 324, 234, 331],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246],
        3: [597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229],
        4: [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        5: [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        6: [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    3456: {
        1: [225, 350, 231, 349, 229, 358, 231, 360, 237, 359, 243, 354, 248, 345, 257, 339, 263, 333, 264, 330, 273, 327, 276, 328, 278, 331, 278, 337, 284, 349, 287, 352, 296, 355, 304, 366, 310, 362, 316, 353, 317, 347, 328, 338, 339, 350, 343, 359, 360, 377, 363, 378, 371, 372, 377, 372, 383, 376, 402, 396, 408, 396, 414, 400, 413, 397, 422, 396, 425, 393, 431, 392, 432, 390, 426, 388, 429, 386, 427, 383, 428, 380, 425, 378, 426, 376, 432, 379, 435, 378, 436, 372, 430, 368, 427, 368, 422, 362, 423, 359, 426, 358, 423, 356, 422, 353, 434, 357, 438, 349, 441, 348, 443, 354, 446, 356, 449, 355, 449, 346, 452, 344, 457, 350, 460, 351, 468, 346, 469, 340, 472, 342, 478, 342, 477, 336, 471, 332, 467, 323, 467, 317, 473, 317, 472, 311, 478, 310, 470, 303, 476, 301, 464, 299, 458, 294, 452, 292, 443, 286, 439, 280, 438, 274, 429, 262, 414, 250, 409, 241, 403, 235, 381, 220, 372, 226, 370, 232, 364, 241, 358, 246, 348, 264, 342, 270, 339, 276, 330, 281, 322, 290, 319, 299, 295, 282, 290, 288, 287, 289, 286, 292, 277, 299, 272, 308, 260, 320, 251, 323, 241, 338, 238, 338, 234, 344, 228, 348],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        4: [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404],
        5: [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        6: [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    3546: {
        1: [231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 292, 354, 293, 357, 299, 360, 301, 363, 298, 366, 310, 366, 319, 371, 331, 371, 334, 368, 343, 367, 338, 358, 344, 358, 350, 361, 356, 361, 368, 365, 371, 363, 380, 362, 386, 364, 386, 367, 389, 369, 401, 367, 406, 372, 418, 373, 422, 369, 428, 369, 429, 367, 423, 362, 426, 360, 435, 360, 438, 354, 447, 359, 449, 353, 452, 351, 455, 353, 461, 353, 464, 351, 464, 348, 479, 341, 474, 340, 474, 331, 471, 326, 480, 329, 482, 327, 482, 324, 481, 321, 475, 319, 472, 316, 470, 310, 473, 309, 468, 303, 450, 288, 447, 287, 435, 294, 426, 285, 406, 252, 400, 248, 380, 268, 374, 263, 368, 254, 359, 245, 347, 238, 328, 255, 326, 261, 319, 269, 313, 270, 308, 275, 305, 276, 298, 284, 296, 290, 293, 293, 290, 293, 286, 299, 283, 301, 277, 301, 262, 311, 253, 314, 247, 323, 235, 331],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        4: [190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406],
        5: [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        6: [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    3547: {
        4: [190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406]
    },
    4347: {
        1: [231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 293, 351, 293, 357, 299, 360, 308, 360, 308, 365, 317, 370, 331, 366, 331, 363, 337, 362, 339, 357, 342, 359, 357, 361, 369, 365, 372, 363, 381, 362, 387, 365, 387, 368, 390, 369, 399, 367, 402, 368, 407, 373, 416, 373, 419, 372, 420, 369, 429, 369, 424, 361, 433, 361, 439, 353, 445, 358, 448, 358, 450, 352, 462, 353, 465, 350, 465, 347, 477, 343, 479, 340, 473, 339, 474, 330, 471, 328, 472, 326, 481, 329, 483, 323, 480, 320, 474, 318, 469, 312, 472, 308, 470, 305, 452, 289, 446, 288, 437, 294, 434, 293, 428, 287, 405, 251, 399, 249, 391, 257, 388, 258, 382, 267, 379, 268, 370, 256, 358, 244, 349, 238, 346, 239, 327, 256, 327, 259, 318, 270, 312, 270, 307, 276, 304, 276, 295, 291, 289, 294, 288, 297, 282, 301, 279, 299, 270, 307, 267, 307, 258, 313, 252, 315, 246, 324, 234, 331],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246],
        3: [597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229],
        4: [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        5: [452, 410, 454, 407, 463, 401, 469, 400, 469, 397, 478, 391, 476, 388, 473, 389, 472, 392, 469, 391, 458, 384, 458, 381, 462, 375, 462, 369, 456, 366, 454, 363, 460, 354, 463, 352, 469, 354, 472, 352, 465, 344, 465, 341, 474, 335, 472, 329, 473, 326, 476, 324, 477, 315, 483, 310, 495, 313, 501, 310, 503, 304, 507, 299, 510, 302, 512, 311, 515, 311, 518, 302, 524, 301, 530, 304, 531, 307, 529, 310, 531, 313, 529, 316, 526, 317, 526, 320, 532, 323, 535, 320, 540, 321, 540, 318, 534, 316, 534, 313, 537, 307, 543, 304, 552, 309, 558, 308, 564, 310, 570, 315, 568, 321, 562, 324, 572, 339, 563, 345, 559, 351, 556, 351, 555, 357, 552, 360, 556, 366, 555, 372, 561, 377, 562, 380, 556, 388, 565, 385, 574, 391, 577, 391, 589, 383, 595, 382, 598, 383, 606, 391, 601, 396, 598, 396, 597, 401, 589, 406, 588, 409, 585, 410, 581, 407, 578, 407, 576, 409, 576, 412, 574, 413, 571, 413, 569, 404, 554, 409, 554, 412, 551, 412, 550, 409, 544, 407, 540, 401, 537, 401, 536, 407, 533, 407, 533, 402, 527, 401, 525, 398, 526, 395, 523, 394, 521, 396, 521, 402, 519, 405, 510, 409, 509, 412, 506, 411, 505, 408, 499, 407, 496, 408, 494, 414, 491, 413, 488, 407, 482, 406, 477, 415, 480, 421, 478, 424, 472, 427, 463, 419, 462, 416, 456, 414, 453, 411],
        6: [546, 359, 548, 365, 557, 372, 556, 375, 553, 376, 551, 379, 551, 382, 554, 384, 560, 386, 575, 386, 584, 392, 590, 394, 605, 396, 626, 396, 635, 393, 636, 390, 634, 384, 645, 375, 648, 363, 665, 351, 667, 348, 665, 342, 667, 336, 659, 329, 650, 327, 635, 325, 587, 325, 581, 327, 570, 335, 571, 344, 553, 352, 547, 358],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    4356: {
        1: [225, 350, 231, 346, 238, 337, 241, 337, 248, 325, 260, 320, 274, 305, 274, 302, 286, 292, 287, 289, 295, 282, 316, 298, 319, 297, 319, 294, 326, 285, 332, 279, 338, 276, 341, 270, 347, 264, 358, 246, 370, 232, 374, 223, 377, 223, 382, 219, 409, 240, 416, 252, 434, 267, 438, 273, 441, 282, 444, 285, 447, 286, 453, 292, 465, 298, 474, 300, 473, 303, 470, 304, 479, 308, 478, 310, 475, 311, 475, 314, 473, 316, 467, 319, 469, 328, 476, 336, 476, 342, 470, 340, 468, 342, 469, 345, 463, 348, 451, 344, 451, 353, 448, 355, 445, 355, 442, 349, 439, 348, 436, 354, 433, 355, 427, 355, 424, 352, 422, 353, 426, 359, 423, 360, 423, 363, 435, 371, 436, 377, 430, 379, 424, 376, 428, 380, 427, 383, 430, 389, 433, 390, 432, 392, 423, 396, 423, 399, 417, 397, 417, 400, 414, 401, 408, 396, 399, 392, 378, 372, 372, 371, 363, 378, 360, 377, 343, 360, 341, 354, 332, 342, 326, 339, 322, 344, 319, 345, 317, 351, 306, 365, 303, 365, 302, 362, 296, 356, 287, 353, 284, 350, 279, 341, 277, 329, 274, 327, 265, 330, 258, 339, 249, 345, 244, 354, 238, 359, 232, 360, 229, 355, 231, 352, 229, 350, 226, 351],
        10: [661, 425, 663, 422, 669, 419, 702, 408, 709, 400, 721, 396, 726, 391, 732, 390, 768, 389, 771, 387, 777, 390, 789, 388, 816, 391, 837, 396, 846, 403, 844, 421, 827, 434, 820, 455, 818, 458, 812, 460, 811, 472, 805, 473, 802, 476, 772, 478, 751, 474, 742, 477, 727, 477, 712, 472, 709, 469, 703, 473, 697, 472, 691, 469, 689, 466, 697, 466, 698, 463, 695, 460, 680, 455, 672, 447, 677, 438, 677, 435, 671, 430, 662, 426],
        11: [834, 468, 836, 474, 842, 479, 848, 480, 854, 486, 860, 486, 875, 493, 881, 491, 887, 492, 893, 489, 920, 493, 935, 491, 959, 484, 1001, 479, 1008, 470, 1035, 458, 1050, 448, 1050, 445, 1048, 442, 1042, 440, 1027, 438, 1024, 426, 1017, 418, 1008, 417, 1002, 413, 996, 413, 990, 407, 978, 409, 969, 408, 966, 406, 961, 397, 952, 393, 940, 393, 931, 396, 919, 396, 913, 394, 907, 397, 889, 396, 883, 398, 874, 410, 872, 422, 864, 430, 858, 434, 855, 434, 844, 442, 842, 457, 835, 466],
        12: [166, 611, 166, 620, 169, 621, 181, 620, 184, 622, 187, 621, 196, 623, 201, 619, 204, 619, 205, 622, 203, 625, 206, 627, 215, 625, 224, 630, 233, 630, 235, 628, 244, 627, 246, 625, 237, 618, 238, 615, 247, 617, 259, 616, 264, 625, 270, 627, 279, 621, 282, 615, 297, 619, 306, 617, 318, 619, 319, 617, 313, 614, 307, 608, 308, 602, 310, 600, 322, 598, 328, 600, 328, 597, 319, 591, 319, 585, 324, 580, 333, 582, 344, 577, 336, 569, 321, 564, 312, 555, 306, 552, 297, 544, 291, 548, 276, 538, 267, 526, 259, 511, 256, 508, 253, 508, 235, 524, 220, 531, 212, 539, 209, 545, 204, 566, 198, 575, 195, 577, 193, 583, 187, 592, 177, 603, 171, 606, 169, 609],
        13: [332, 540, 338, 531, 341, 531, 352, 525, 351, 519, 357, 514, 360, 509, 366, 505, 375, 507, 379, 501, 391, 495, 392, 489, 395, 487, 395, 481, 383, 490, 374, 487, 371, 481, 377, 476, 386, 474, 387, 472, 385, 469, 391, 464, 394, 466, 396, 472, 402, 474, 407, 471, 409, 474, 411, 480, 408, 486, 412, 492, 411, 495, 408, 496, 412, 502, 418, 501, 424, 503, 436, 497, 439, 491, 433, 487, 436, 481, 435, 472, 430, 467, 433, 458, 436, 455, 439, 455, 447, 467, 443, 472, 451, 484, 451, 487, 456, 492, 465, 491, 468, 494, 469, 503, 464, 508, 467, 509, 469, 506, 472, 507, 475, 516, 470, 521, 464, 517, 458, 519, 456, 522, 447, 527, 447, 533, 450, 536, 456, 533, 462, 537, 471, 532, 480, 531, 481, 528, 490, 523, 493, 523, 499, 516, 505, 517, 508, 519, 513, 531, 518, 537, 519, 543, 522, 545, 528, 554, 522, 560, 516, 562, 515, 559, 512, 558, 510, 555, 513, 550, 504, 553, 502, 556, 496, 555, 487, 562, 483, 557, 477, 555, 471, 557, 462, 550, 460, 553, 457, 554, 456, 560, 450, 563, 444, 558, 447, 549, 446, 546, 443, 548, 440, 547, 437, 553, 428, 558, 422, 557, 414, 564, 412, 567, 412, 573, 406, 575, 406, 578, 404, 580, 389, 584, 382, 577, 384, 574, 393, 568, 396, 570, 399, 569, 399, 563, 396, 562, 384, 571, 381, 569, 378, 570, 376, 573, 367, 577, 365, 580, 360, 576, 357, 576, 349, 583, 346, 583, 340, 578, 342, 569, 344, 566, 347, 565, 353, 570, 356, 568, 357, 562, 351, 562, 345, 557, 344, 554, 352, 547, 364, 552, 367, 550, 364, 547, 364, 541, 358, 539, 349, 543, 347, 546, 344, 547, 341, 552, 338, 550, 337, 544, 334, 543],
        14: [522, 581, 523, 575, 530, 566, 536, 562, 554, 555, 560, 556, 575, 553, 593, 556, 605, 555, 620, 560, 626, 565, 638, 570, 659, 585, 659, 591, 669, 606, 666, 624, 650, 645, 644, 649, 608, 648, 599, 645, 593, 645, 575, 649, 566, 655, 560, 653, 548, 643, 540, 625, 529, 615, 527, 606, 529, 600, 524, 591, 523, 582],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [538, 675, 541, 693, 552, 704, 557, 713, 563, 719, 581, 727, 611, 735, 629, 735, 638, 731, 640, 719, 637, 710, 643, 706, 655, 705, 664, 698, 670, 699, 676, 697, 680, 688, 689, 683, 691, 680, 691, 674, 689, 671, 677, 664, 668, 656, 653, 650, 641, 646, 614, 647, 596, 643, 569, 650, 561, 658, 549, 662, 543, 666, 540, 672],
        18: [614, 559, 623, 557, 659, 558, 695, 570, 701, 570, 710, 574, 719, 574, 737, 581, 763, 604, 765, 607, 764, 610, 767, 613, 779, 616, 788, 623, 792, 632, 805, 647, 806, 653, 804, 659, 793, 670, 790, 671, 773, 689, 764, 694, 743, 695, 737, 697, 722, 697, 710, 694, 695, 698, 686, 698, 683, 696, 680, 697, 677, 695, 677, 692, 680, 687, 689, 681, 688, 672, 682, 667, 676, 665, 667, 656, 649, 651, 646, 649, 645, 646, 650, 642, 650, 639, 659, 632, 665, 623, 664, 620, 667, 608, 665, 602, 658, 593, 658, 587, 637, 571, 625, 566, 616, 560],
        2: [451, 228, 463, 242, 469, 246, 472, 247, 481, 241, 482, 244, 474, 251, 480, 255, 483, 261, 483, 264, 480, 267, 478, 273, 475, 276, 466, 272, 460, 274, 455, 279, 456, 282, 461, 286, 458, 292, 461, 294, 473, 293, 476, 295, 482, 291, 488, 292, 489, 298, 500, 304, 502, 298, 508, 294, 511, 294, 517, 298, 526, 296, 535, 300, 538, 299, 543, 295, 536, 283, 541, 278, 539, 275, 541, 272, 538, 266, 547, 269, 550, 272, 552, 281, 544, 288, 548, 294, 554, 297, 557, 294, 569, 292, 578, 297, 587, 293, 593, 293, 611, 299, 623, 294, 626, 292, 626, 289, 629, 289, 633, 294, 638, 290, 639, 287, 642, 286, 642, 283, 637, 277, 631, 273, 633, 270, 629, 255, 617, 247, 605, 249, 603, 246, 616, 236, 616, 227, 613, 224, 607, 224, 603, 230, 589, 238, 586, 238, 583, 236, 583, 233, 589, 230, 589, 227, 586, 224, 577, 221, 568, 228, 559, 226, 553, 214, 550, 217, 546, 229, 552, 233, 549, 235, 543, 234, 537, 238, 534, 233, 528, 228, 522, 227, 514, 234, 511, 243, 496, 238, 498, 232, 490, 225, 484, 222, 472, 226, 469, 223, 460, 221, 452, 227],
        3: [649, 283, 652, 280, 673, 272, 688, 262, 697, 259, 706, 261, 712, 257, 730, 256, 760, 262, 770, 277, 772, 283, 781, 290, 782, 302, 776, 311, 767, 317, 755, 319, 754, 322, 769, 335, 769, 341, 754, 347, 727, 347, 703, 341, 688, 335, 676, 328, 656, 301, 650, 286],
        4: [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 214, 425, 217, 425, 218, 421, 224, 416, 236, 425, 254, 446, 257, 446, 263, 437, 269, 434, 270, 431, 276, 427, 282, 432, 292, 447, 294, 453, 303, 455, 309, 452, 315, 453, 319, 447, 322, 446, 313, 443, 312, 441, 315, 441, 319, 438, 325, 438, 326, 441, 332, 442, 344, 442, 350, 438, 356, 437, 355, 434, 347, 426, 368, 433, 380, 432, 382, 435, 385, 433, 394, 432, 397, 434, 403, 433, 402, 431, 399, 430, 399, 427, 402, 426, 399, 425, 398, 422, 404, 422, 413, 425, 416, 423, 419, 424, 422, 423, 423, 420, 421, 414, 427, 413, 422, 408, 418, 412, 416, 409, 417, 407, 420, 407, 410, 398, 401, 394, 390, 382, 378, 372, 372, 371, 363, 378, 360, 376, 343, 359, 341, 353, 329, 338, 318, 346, 317, 352, 304, 366, 295, 354, 289, 353, 283, 348, 281, 342, 278, 339, 276, 327, 273, 326, 264, 330, 260, 336, 248, 345, 241, 357, 229, 360, 221, 371, 215, 374, 209, 382, 200, 387, 191, 395, 188, 394, 185, 396, 180, 402, 177, 400, 174, 402],
        5: [438, 372, 440, 369, 446, 366, 455, 365, 455, 359, 450, 354, 450, 351, 452, 348, 461, 344, 467, 347, 473, 346, 476, 348, 481, 354, 480, 357, 482, 366, 485, 367, 488, 364, 491, 364, 491, 358, 500, 352, 500, 346, 502, 343, 497, 340, 499, 334, 498, 331, 500, 328, 495, 323, 495, 314, 489, 315, 480, 307, 481, 304, 487, 300, 493, 298, 499, 300, 501, 297, 507, 294, 513, 294, 519, 297, 525, 295, 534, 299, 546, 296, 558, 303, 561, 302, 570, 309, 570, 312, 567, 312, 562, 317, 562, 323, 556, 326, 569, 344, 569, 347, 566, 349, 570, 355, 566, 361, 566, 367, 563, 373, 575, 389, 568, 399, 565, 397, 562, 398, 560, 401, 552, 398, 551, 400, 559, 412, 550, 421, 543, 414, 546, 408, 543, 405, 537, 405, 533, 400, 524, 405, 524, 411, 521, 414, 512, 411, 511, 417, 508, 416, 507, 413, 489, 405, 484, 409, 478, 405, 484, 393, 484, 390, 481, 387, 478, 387, 476, 390, 477, 393, 471, 403, 468, 400, 468, 397, 465, 398, 462, 395, 465, 390, 464, 387, 461, 386, 459, 383, 450, 381, 441, 375],
        6: [554, 326, 568, 344, 567, 347, 564, 349, 568, 355, 562, 373, 565, 379, 573, 387, 573, 393, 568, 399, 566, 405, 566, 411, 569, 414, 575, 412, 576, 409, 573, 403, 575, 401, 578, 402, 580, 405, 583, 405, 585, 402, 588, 401, 590, 403, 589, 406, 597, 414, 600, 414, 601, 408, 604, 406, 604, 397, 598, 393, 595, 395, 592, 394, 584, 387, 599, 380, 608, 388, 607, 394, 613, 396, 619, 401, 633, 390, 633, 387, 638, 382, 637, 379, 639, 376, 642, 378, 645, 376, 646, 385, 652, 387, 654, 390, 652, 396, 657, 400, 660, 402, 661, 399, 667, 396, 668, 393, 661, 384, 655, 381, 654, 375, 663, 372, 663, 381, 666, 381, 668, 383, 668, 386, 671, 387, 676, 379, 677, 370, 673, 364, 675, 358, 681, 353, 681, 350, 678, 341, 676, 338, 673, 337, 672, 340, 666, 345, 663, 345, 667, 339, 658, 334, 653, 325, 653, 322, 650, 319, 646, 324, 644, 330, 641, 326, 641, 320, 635, 317, 632, 318, 631, 315, 622, 309, 615, 309, 612, 310, 605, 318, 596, 322, 595, 325, 597, 331, 600, 330, 609, 332, 608, 329, 610, 326, 613, 325, 619, 330, 622, 330, 627, 338, 632, 336, 631, 333, 628, 331, 630, 325, 629, 322, 620, 325, 611, 318, 611, 315, 616, 310, 617, 304, 611, 299, 602, 299, 590, 291, 578, 297, 566, 291, 557, 296, 556, 299, 571, 309, 571, 312, 565, 312, 562, 314, 561, 323, 555, 325],
        7: [781, 336, 784, 354, 804, 378, 828, 388, 846, 393, 876, 394, 882, 389, 883, 377, 880, 371, 882, 368, 888, 366, 900, 366, 901, 375, 904, 378, 913, 382, 934, 387, 952, 387, 958, 385, 961, 383, 964, 374, 959, 362, 947, 354, 920, 353, 922, 347, 914, 338, 896, 324, 894, 315, 889, 306, 883, 300, 877, 297, 859, 292, 832, 290, 811, 294, 802, 298, 799, 301, 798, 307, 799, 310, 805, 315, 804, 318, 786, 326, 782, 335],
        8: [144, 491, 151, 482, 160, 478, 165, 472, 170, 469, 180, 454, 186, 451, 187, 448, 193, 448, 199, 442, 204, 433, 213, 426, 223, 415, 241, 429, 252, 444, 255, 446, 261, 445, 263, 451, 262, 463, 252, 472, 251, 478, 245, 487, 243, 493, 249, 511, 236, 524, 221, 532, 212, 540, 210, 543, 207, 561, 200, 573, 194, 579, 193, 585, 190, 586, 187, 580, 181, 579, 189, 570, 187, 567, 187, 561, 172, 560, 171, 557, 174, 555, 174, 552, 168, 550, 162, 551, 160, 549, 163, 547, 169, 538, 190, 525, 190, 520, 192, 517, 190, 515, 184, 515, 178, 511, 174, 505, 168, 506, 168, 503, 156, 502, 153, 500, 154, 497, 152, 494, 146, 493],
        9: [242, 493, 248, 508, 257, 509, 269, 530, 272, 533, 278, 533, 281, 531, 284, 534, 279, 539, 280, 541, 292, 544, 295, 543, 298, 538, 301, 538, 304, 541, 319, 536, 322, 534, 322, 531, 324, 529, 336, 530, 339, 529, 339, 526, 345, 527, 345, 524, 353, 519, 350, 517, 348, 511, 369, 511, 372, 508, 375, 509, 375, 506, 361, 492, 361, 489, 364, 487, 365, 481, 368, 479, 380, 479, 383, 477, 392, 476, 390, 473, 384, 471, 383, 468, 386, 469, 386, 466, 371, 458, 365, 449, 356, 440, 350, 437, 345, 442, 324, 451, 314, 462, 305, 465, 302, 463, 294, 451, 284, 433, 275, 427, 261, 440, 260, 443, 263, 452, 263, 461, 252, 472, 244, 490]
    },
    4437: {
        1: [267, 340, 269, 337, 278, 331, 277, 328, 271, 326, 272, 323, 278, 319, 278, 316, 273, 312, 277, 300, 280, 301, 282, 307, 285, 307, 287, 301, 293, 298, 295, 295, 294, 292, 296, 289, 305, 285, 308, 286, 311, 280, 314, 279, 316, 282, 325, 283, 331, 282, 333, 279, 330, 278, 327, 281, 324, 280, 323, 275, 320, 276, 317, 273, 320, 268, 319, 265, 322, 262, 325, 260, 331, 262, 333, 265, 342, 269, 344, 267, 350, 266, 356, 270, 358, 268, 349, 262, 350, 259, 356, 255, 362, 254, 371, 260, 380, 263, 385, 252, 388, 250, 392, 255, 394, 252, 397, 252, 394, 247, 400, 242, 409, 246, 407, 251, 408, 254, 411, 255, 412, 249, 418, 245, 430, 245, 427, 243, 433, 237, 439, 238, 441, 240, 440, 246, 442, 249, 448, 250, 455, 245, 459, 254, 458, 257, 452, 262, 449, 262, 448, 265, 451, 266, 460, 263, 466, 267, 468, 270, 467, 273, 470, 282, 482, 290, 471, 301, 472, 304, 478, 310, 476, 313, 470, 316, 467, 321, 467, 324, 464, 326, 470, 327, 476, 332, 476, 335, 475, 338, 469, 340, 472, 349, 471, 361, 466, 366, 460, 369, 461, 372, 464, 370, 469, 382, 465, 387, 464, 393, 457, 399, 469, 407, 468, 410, 458, 418, 456, 415, 450, 412, 447, 406, 444, 407, 441, 405, 435, 407, 435, 413, 432, 411, 428, 403, 425, 404, 418, 397, 413, 397, 414, 402, 417, 403, 415, 397, 410, 395, 409, 392, 403, 392, 400, 390, 395, 382, 386, 378, 380, 372, 374, 370, 365, 374, 359, 373, 357, 363, 354, 363, 349, 357, 346, 359, 340, 359, 337, 358, 332, 352, 320, 350, 299, 357, 291, 351, 293, 345, 292, 342, 280, 346, 279, 349, 276, 348, 275, 345, 272, 345, 270, 343],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [181, 560, 181, 566, 195, 587, 194, 590, 199, 602, 217, 611, 217, 614, 214, 617, 217, 620, 226, 620, 229, 619, 229, 616, 232, 615, 241, 617, 243, 623, 242, 626, 247, 635, 256, 638, 271, 636, 286, 630, 313, 613, 316, 613, 320, 617, 327, 606, 342, 596, 364, 575, 363, 569, 357, 564, 348, 563, 339, 557, 333, 557, 321, 547, 309, 545, 304, 539, 283, 541, 262, 540, 247, 549, 238, 549, 226, 553, 217, 558, 196, 555, 184, 558],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 676, 529, 665, 528, 660, 525, 661, 522, 658, 525, 655, 525, 649, 528, 647, 532, 638, 542, 633, 544, 635, 547, 634, 556, 640, 559, 640, 561, 646, 567, 647, 571, 652, 572, 650, 570, 647, 573, 644, 576, 643, 579, 646, 588, 641, 586, 638, 590, 633, 605, 633, 607, 630, 612, 642, 617, 637, 622, 649, 617, 654, 611, 652, 616, 658, 616, 661, 610, 663, 607, 669, 604, 671, 610, 677, 610, 683, 607, 689, 608, 692, 617, 693, 623, 698, 623, 701, 617, 704, 616, 707, 613, 708, 613, 705, 608, 708, 605, 708, 604, 710, 610, 710, 616, 715, 614, 721, 611, 722, 608, 726, 598, 719, 597, 713, 595, 715, 596, 718, 588, 719, 587, 722, 584, 722, 582, 719, 576, 719, 569, 725, 566, 731, 560, 733, 560, 736, 557, 737, 547, 729, 546, 723, 543, 722, 537, 724, 537, 727, 534, 726, 535, 723, 529, 721, 530, 718, 533, 716, 531, 713, 534, 703, 531, 702, 528, 703, 527, 706, 524, 705, 524, 702, 518, 701, 516, 695, 525, 689, 531, 690, 537, 687, 533, 681, 530, 682, 529, 685, 526, 685, 525, 682, 519, 679],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246],
        3: [597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229],
        4: [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        5: [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        6: [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    4446: {
        1: [271, 323, 271, 326, 274, 326, 277, 329, 278, 338, 283, 344, 292, 341, 293, 347, 291, 350, 301, 359, 304, 359, 305, 356, 317, 350, 317, 347, 328, 338, 342, 353, 343, 359, 349, 357, 354, 363, 357, 363, 359, 365, 356, 369, 358, 371, 367, 374, 370, 373, 372, 370, 378, 372, 387, 380, 390, 381, 401, 393, 407, 395, 415, 402, 421, 401, 430, 404, 434, 413, 436, 411, 435, 408, 440, 405, 448, 408, 449, 411, 455, 414, 458, 418, 468, 410, 468, 407, 465, 404, 456, 399, 458, 396, 464, 393, 465, 387, 469, 382, 464, 370, 463, 373, 460, 373, 460, 370, 465, 367, 466, 364, 472, 358, 469, 340, 475, 338, 476, 332, 464, 326, 467, 324, 469, 316, 477, 312, 477, 309, 471, 303, 475, 295, 481, 293, 482, 290, 470, 282, 467, 273, 468, 270, 463, 265, 460, 263, 451, 266, 448, 265, 449, 262, 455, 260, 459, 255, 454, 243, 452, 249, 449, 251, 446, 249, 443, 250, 438, 245, 441, 244, 442, 241, 439, 238, 433, 237, 428, 242, 430, 245, 427, 247, 421, 245, 415, 247, 412, 250, 411, 256, 408, 257, 407, 251, 409, 246, 400, 242, 395, 247, 396, 250, 399, 251, 393, 254, 390, 254, 388, 251, 385, 253, 383, 262, 381, 264, 372, 261, 363, 254, 351, 258, 349, 261, 351, 264, 360, 268, 355, 271, 350, 266, 347, 268, 344, 267, 342, 269, 328, 261, 322, 262, 319, 265, 321, 270, 318, 271, 318, 274, 324, 276, 322, 279, 325, 281, 331, 279, 331, 282, 316, 283, 315, 280, 312, 279, 310, 285, 304, 285, 295, 290, 294, 293, 297, 295, 298, 298, 292, 298, 286, 302, 285, 308, 282, 307, 279, 301, 277, 302, 273, 311, 278, 318, 276, 321, 273, 322],
        10: [662, 422, 668, 417, 677, 415, 680, 409, 686, 407, 690, 398, 695, 392, 706, 385, 712, 388, 722, 400, 717, 405, 720, 408, 720, 414, 726, 418, 729, 416, 731, 410, 740, 408, 748, 400, 757, 396, 769, 387, 775, 381, 778, 375, 784, 371, 785, 368, 791, 363, 800, 369, 817, 399, 825, 408, 831, 411, 840, 419, 849, 421, 858, 427, 873, 427, 873, 433, 874, 436, 877, 438, 877, 441, 872, 456, 863, 457, 857, 460, 842, 459, 842, 462, 836, 467, 832, 473, 826, 475, 814, 473, 811, 479, 808, 480, 793, 476, 802, 470, 799, 468, 793, 470, 781, 470, 780, 464, 777, 465, 775, 463, 780, 458, 778, 456, 766, 464, 745, 471, 739, 471, 737, 467, 731, 465, 728, 462, 722, 466, 710, 464, 709, 459, 706, 458, 710, 452, 708, 450, 702, 451, 693, 445, 693, 442, 689, 437, 680, 439, 677, 437, 674, 438, 669, 436, 671, 432, 669, 429, 666, 430, 663, 428, 663, 425],
        11: [845, 415, 851, 411, 860, 409, 865, 403, 886, 389, 889, 389, 898, 383, 904, 377, 913, 362, 931, 348, 943, 362, 943, 368, 945, 371, 948, 373, 951, 370, 954, 372, 968, 396, 977, 405, 983, 407, 989, 412, 995, 408, 1001, 414, 1010, 419, 1021, 430, 1036, 434, 1039, 437, 1036, 442, 1030, 444, 1024, 442, 1016, 448, 1016, 454, 1022, 459, 1022, 461, 1013, 464, 1007, 462, 1005, 464, 1011, 473, 1008, 476, 1014, 480, 1012, 482, 1003, 479, 1E3, 479, 998, 482, 995, 482, 986, 478, 980, 478, 977, 481, 978, 484, 967, 491, 961, 487, 959, 481, 956, 479, 947, 480, 941, 477, 935, 479, 929, 478, 927, 476, 927, 472, 925, 469, 922, 466, 916, 465, 914, 468, 923, 480, 911, 480, 905, 484, 899, 483, 894, 487, 888, 485, 879, 486, 877, 483, 874, 485, 865, 485, 863, 479, 857, 481, 854, 479, 848, 480, 858, 472, 879, 462, 880, 459, 878, 457, 878, 448, 881, 445, 882, 439, 877, 434, 877, 428, 883, 423, 886, 423, 886, 420, 877, 421, 877, 418, 875, 416, 857, 415, 848, 417],
        12: [181, 560, 181, 566, 195, 587, 194, 590, 199, 602, 217, 611, 217, 614, 214, 617, 217, 620, 226, 620, 229, 619, 229, 616, 232, 615, 241, 617, 243, 623, 242, 626, 247, 635, 256, 638, 271, 636, 286, 630, 313, 613, 316, 613, 320, 617, 327, 606, 342, 596, 364, 575, 363, 569, 357, 564, 348, 563, 339, 557, 333, 557, 321, 547, 309, 545, 304, 539, 283, 541, 262, 540, 247, 549, 238, 549, 226, 553, 217, 558, 196, 555, 184, 558],
        13: [304, 539, 328, 523, 344, 508, 353, 508, 356, 506, 374, 512, 383, 512, 395, 509, 407, 511, 413, 508, 422, 508, 440, 513, 444, 519, 440, 528, 443, 531, 445, 537, 440, 549, 419, 560, 392, 568, 377, 568, 365, 575, 364, 569, 358, 564, 346, 561, 340, 557, 334, 557, 320, 546, 311, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 553, 500, 556, 503, 557, 504, 554, 510, 552, 509, 555, 512, 557, 506, 559, 497, 565, 497, 568, 503, 572, 506, 572, 505, 576, 507, 578, 507, 584, 513, 588, 513, 591, 519, 592, 522, 590, 527, 593, 527, 596, 523, 599, 528, 603, 526, 610, 522, 610, 522, 603, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 506, 626, 510, 632, 513, 632, 512, 636, 515, 636, 519, 633, 522, 635, 522, 638, 519, 640, 522, 646, 528, 647, 532, 638, 547, 633, 552, 638, 560, 641, 561, 647, 567, 647, 568, 650, 571, 652, 572, 650, 570, 648, 572, 645, 575, 643, 581, 646, 587, 642, 588, 639, 586, 637, 589, 634, 601, 632, 604, 633, 607, 631, 609, 634, 618, 629, 618, 626, 624, 623, 626, 620, 622, 614, 622, 605, 618, 600, 623, 596, 617, 590, 623, 585, 613, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 559, 610, 556, 617, 550, 617, 547, 608, 540, 599, 546, 598, 549, 600, 552, 598, 553, 594, 554, 590, 548, 581, 545, 576, 550, 577, 553, 575, 555, 569, 552, 563, 555, 560, 558, 560, 561, 565, 564, 566, 567, 563, 566, 557, 569, 554, 569, 554, 563, 551, 561, 545, 561, 537, 550, 532, 558, 530, 560, 527, 560, 524, 559, 522, 556, 524, 553, 521, 550, 512, 550, 513, 547, 511, 544, 505, 540, 496, 542, 494, 545],
        15: [695, 524, 695, 533, 698, 542, 703, 548, 706, 548, 706, 551, 709, 553, 733, 560, 735, 563, 737, 560, 740, 561, 741, 564, 746, 560, 752, 560, 791, 573, 800, 578, 811, 587, 817, 589, 826, 589, 838, 597, 853, 597, 871, 590, 884, 579, 896, 561, 891, 552, 897, 534, 894, 516, 868, 494, 853, 490, 844, 491, 835, 489, 832, 492, 814, 492, 781, 500, 772, 504, 757, 504, 751, 502, 730, 503, 718, 501, 703, 506, 703, 518, 697, 522],
        16: [323, 635, 335, 635, 338, 637, 341, 646, 340, 649, 331, 653, 332, 655, 344, 656, 347, 659, 359, 664, 360, 667, 351, 670, 347, 673, 363, 671, 378, 679, 381, 679, 387, 683, 399, 687, 402, 690, 420, 695, 420, 698, 417, 700, 417, 703, 429, 699, 450, 700, 455, 703, 455, 709, 491, 705, 497, 702, 508, 691, 511, 691, 520, 683, 529, 679, 531, 676, 527, 670, 518, 667, 520, 661, 511, 659, 512, 653, 518, 650, 510, 645, 503, 636, 510, 627, 511, 624, 509, 615, 512, 609, 518, 604, 520, 598, 519, 595, 513, 594, 504, 589, 492, 578, 490, 572, 484, 567, 475, 565, 463, 559, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 434, 569, 428, 572, 419, 582, 419, 585, 417, 587, 405, 589, 399, 594, 395, 600, 392, 600, 383, 608, 380, 605, 375, 610, 369, 612, 361, 620, 337, 624, 333, 629, 327, 632],
        17: [516, 676, 529, 665, 528, 660, 525, 661, 522, 658, 525, 655, 525, 649, 528, 647, 532, 638, 542, 633, 544, 635, 547, 634, 556, 640, 559, 640, 561, 646, 567, 647, 571, 652, 572, 650, 570, 647, 573, 644, 576, 643, 579, 646, 588, 641, 586, 638, 590, 633, 605, 633, 607, 630, 612, 642, 617, 637, 622, 649, 617, 654, 611, 652, 616, 658, 616, 661, 610, 663, 607, 669, 604, 671, 610, 677, 610, 683, 607, 689, 608, 692, 617, 693, 623, 698, 623, 701, 617, 704, 616, 707, 613, 708, 613, 705, 608, 708, 605, 708, 604, 710, 610, 710, 616, 715, 614, 721, 611, 722, 608, 726, 598, 719, 597, 713, 595, 715, 596, 718, 588, 719, 587, 722, 584, 722, 582, 719, 576, 719, 569, 725, 566, 731, 560, 733, 560, 736, 557, 737, 547, 729, 546, 723, 543, 722, 537, 724, 537, 727, 534, 726, 535, 723, 529, 721, 530, 718, 533, 716, 531, 713, 534, 703, 531, 702, 528, 703, 527, 706, 524, 705, 524, 702, 518, 701, 516, 695, 525, 689, 531, 690, 537, 687, 533, 681, 530, 682, 529, 685, 526, 685, 525, 682, 519, 679],
        18: [611, 685, 617, 683, 617, 668, 620, 665, 626, 663, 631, 657, 627, 633, 627, 621, 623, 612, 623, 603, 629, 595, 630, 586, 632, 583, 640, 578, 639, 575, 636, 573, 624, 571, 623, 568, 625, 565, 623, 562, 629, 559, 631, 556, 630, 550, 633, 547, 642, 549, 660, 557, 696, 562, 708, 569, 717, 572, 722, 578, 725, 579, 727, 585, 732, 590, 738, 592, 747, 592, 771, 601, 773, 604, 769, 610, 771, 616, 780, 618, 792, 618, 793, 621, 784, 625, 783, 628, 786, 634, 789, 636, 790, 645, 787, 650, 784, 650, 772, 658, 765, 667, 756, 670, 729, 687, 727, 690, 718, 692, 712, 697, 700, 701, 682, 703, 679, 705, 664, 704, 652, 699, 631, 699, 619, 691, 616, 692, 613, 690, 613, 687],
        2: [468, 243, 489, 235, 495, 225, 492, 224, 489, 228, 492, 233, 500, 228, 515, 222, 524, 224, 533, 219, 551, 219, 560, 222, 572, 223, 578, 226, 577, 229, 583, 234, 587, 240, 587, 243, 599, 254, 599, 263, 591, 274, 579, 280, 582, 281, 581, 284, 579, 285, 574, 280, 571, 281, 573, 287, 579, 290, 587, 298, 588, 301, 574, 308, 541, 307, 507, 296, 505, 297, 505, 301, 503, 300, 500, 294, 491, 286, 485, 277, 476, 270, 474, 272, 472, 271, 471, 268, 474, 267, 475, 264, 469, 246],
        3: [602, 289, 606, 295, 609, 295, 616, 301, 618, 307, 626, 314, 628, 311, 637, 311, 637, 315, 640, 315, 649, 320, 652, 323, 652, 326, 655, 327, 646, 333, 645, 336, 653, 342, 653, 347, 657, 351, 657, 354, 663, 362, 663, 368, 659, 374, 653, 375, 647, 379, 646, 382, 649, 385, 653, 394, 656, 395, 656, 398, 659, 399, 659, 396, 665, 395, 671, 390, 673, 387, 671, 384, 673, 382, 678, 385, 678, 391, 684, 392, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 380, 705, 380, 707, 383, 708, 381, 714, 379, 719, 373, 719, 370, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 771, 341, 769, 329, 775, 328, 775, 325, 783, 319, 778, 313, 779, 310, 782, 310, 783, 305, 793, 298, 794, 295, 788, 290, 782, 288, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 787, 279, 790, 281, 791, 284, 794, 284, 797, 279, 803, 277, 804, 274, 796, 265, 797, 262, 795, 259, 786, 253, 780, 246, 774, 243, 768, 246, 768, 243, 771, 238, 774, 238, 778, 242, 779, 239, 785, 236, 787, 233, 786, 230, 777, 225, 768, 230, 767, 236, 761, 232, 755, 231, 753, 225, 745, 230, 743, 225, 734, 220, 725, 225, 721, 233, 721, 237, 713, 244, 712, 242, 716, 237, 713, 225, 706, 230, 703, 228, 697, 228, 692, 236, 686, 233, 683, 234, 675, 242, 672, 239, 673, 236, 676, 234, 675, 228, 677, 226, 674, 223, 668, 222, 662, 227, 665, 229, 663, 232, 654, 232, 648, 236, 651, 241, 648, 241, 642, 237, 636, 238, 634, 229, 641, 235, 651, 228, 646, 222, 640, 220, 631, 225, 627, 237, 624, 237, 618, 233, 615, 235, 611, 227, 609, 228, 605, 237, 611, 245, 617, 247, 619, 250, 620, 248, 629, 243, 635, 251, 626, 249, 621, 254, 621, 258, 615, 257, 606, 262, 604, 265, 613, 271, 613, 274, 617, 274, 617, 271, 626, 269, 624, 275, 616, 283, 607, 285, 604, 288],
        4: [173, 404, 175, 407, 187, 406, 188, 409, 195, 414, 194, 417, 188, 421, 199, 421, 198, 427, 201, 429, 204, 430, 219, 426, 219, 429, 212, 434, 222, 433, 224, 435, 222, 439, 229, 439, 238, 435, 238, 438, 231, 443, 239, 442, 241, 445, 250, 450, 253, 448, 257, 454, 266, 454, 272, 456, 273, 459, 276, 461, 279, 461, 282, 457, 294, 455, 297, 453, 303, 455, 306, 452, 315, 453, 316, 450, 322, 446, 310, 442, 316, 440, 317, 437, 332, 442, 338, 440, 344, 442, 350, 438, 356, 438, 358, 436, 347, 427, 349, 426, 364, 433, 379, 433, 382, 435, 385, 433, 388, 434, 394, 432, 397, 434, 403, 433, 402, 431, 399, 430, 400, 427, 403, 428, 402, 422, 396, 422, 399, 425, 406, 422, 409, 424, 418, 424, 421, 423, 423, 420, 418, 411, 415, 409, 416, 407, 419, 407, 421, 405, 409, 397, 403, 396, 380, 373, 374, 371, 368, 373, 363, 378, 360, 376, 342, 359, 341, 353, 329, 338, 318, 346, 315, 355, 304, 366, 294, 354, 285, 351, 281, 342, 278, 339, 277, 330, 275, 327, 265, 330, 261, 336, 249, 344, 242, 356, 227, 362, 224, 368, 215, 374, 210, 382, 201, 386, 193, 394, 187, 395, 179, 403, 176, 400, 174, 403],
        5: [465, 372, 467, 378, 479, 383, 488, 391, 497, 391, 512, 396, 521, 405, 530, 411, 536, 409, 548, 409, 563, 403, 578, 403, 602, 393, 611, 393, 641, 383, 617, 383, 608, 381, 572, 382, 548, 374, 538, 362, 538, 347, 534, 341, 528, 338, 522, 332, 522, 329, 510, 335, 492, 340, 489, 339, 483, 343, 480, 346, 479, 355, 474, 361, 468, 365, 466, 371],
        6: [523, 330, 527, 336, 536, 342, 538, 345, 539, 348, 537, 351, 537, 357, 541, 366, 550, 374, 556, 375, 562, 379, 568, 381, 604, 380, 616, 383, 634, 381, 640, 383, 655, 379, 658, 376, 658, 370, 654, 361, 656, 355, 644, 345, 642, 330, 639, 324, 633, 318, 627, 316, 615, 316, 609, 313, 600, 315, 591, 313, 576, 313, 564, 318, 558, 318, 552, 322, 534, 325, 525, 329],
        7: [708, 386, 711, 387, 722, 399, 721, 402, 718, 404, 720, 407, 720, 413, 726, 418, 731, 410, 737, 409, 746, 403, 750, 398, 756, 396, 768, 388, 774, 382, 777, 376, 785, 369, 786, 366, 792, 362, 798, 366, 820, 402, 826, 408, 838, 416, 859, 409, 867, 401, 885, 389, 888, 389, 897, 383, 903, 378, 903, 375, 893, 363, 889, 354, 886, 351, 880, 349, 876, 337, 869, 328, 854, 317, 849, 311, 847, 305, 841, 299, 835, 297, 821, 284, 810, 291, 808, 297, 798, 309, 786, 330, 780, 335, 774, 343, 771, 343, 758, 358, 758, 364, 740, 351, 730, 362, 721, 369, 711, 384],
        8: [153, 487, 156, 499, 160, 505, 174, 519, 174, 522, 171, 525, 173, 543, 171, 545, 168, 545, 168, 548, 170, 551, 174, 549, 174, 552, 179, 561, 182, 558, 194, 555, 218, 557, 227, 552, 239, 548, 248, 548, 263, 540, 281, 541, 284, 540, 284, 534, 296, 528, 299, 522, 297, 516, 290, 507, 278, 497, 278, 491, 242, 479, 233, 474, 221, 470, 212, 469, 200, 465, 188, 465, 176, 469, 170, 473, 167, 473, 161, 477, 155, 485],
        9: [247, 468, 248, 474, 255, 481, 267, 487, 276, 489, 279, 492, 278, 495, 283, 501, 289, 505, 298, 517, 299, 526, 308, 525, 317, 529, 329, 522, 339, 511, 345, 508, 360, 506, 372, 511, 384, 511, 390, 509, 408, 510, 420, 506, 419, 503, 425, 499, 431, 502, 434, 499, 432, 496, 433, 493, 430, 491, 432, 488, 431, 485, 428, 483, 407, 482, 383, 468, 359, 462, 347, 461, 344, 463, 329, 463, 317, 465, 316, 468, 310, 471, 298, 471, 295, 469, 292, 470, 277, 467, 268, 467, 265, 469, 250, 467]
    },
    4536: {
        1: [267, 340, 278, 331, 276, 328, 273, 327, 272, 324, 278, 319, 273, 312, 278, 300, 281, 303, 283, 309, 285, 307, 285, 304, 291, 299, 297, 298, 298, 296, 295, 296, 292, 293, 286, 295, 284, 298, 281, 297, 274, 290, 274, 287, 277, 284, 286, 281, 296, 290, 302, 286, 308, 287, 311, 281, 314, 280, 317, 283, 326, 284, 332, 282, 332, 279, 321, 277, 318, 275, 320, 269, 319, 266, 321, 263, 330, 262, 342, 270, 345, 267, 351, 267, 357, 271, 360, 269, 351, 265, 349, 262, 350, 259, 362, 255, 371, 261, 380, 263, 382, 262, 385, 253, 388, 249, 391, 256, 396, 251, 394, 248, 400, 243, 409, 246, 407, 252, 410, 257, 411, 251, 414, 248, 420, 245, 429, 247, 428, 244, 432, 238, 438, 238, 441, 240, 442, 243, 440, 246, 442, 249, 448, 251, 451, 250, 455, 244, 459, 256, 457, 259, 448, 264, 449, 267, 458, 263, 464, 266, 467, 269, 469, 281, 475, 284, 481, 290, 481, 293, 478, 296, 475, 296, 471, 304, 477, 310, 478, 316, 481, 319, 483, 325, 482, 331, 486, 340, 485, 343, 479, 345, 476, 344, 472, 339, 472, 357, 469, 363, 463, 369, 469, 381, 465, 393, 456, 399, 464, 404, 468, 410, 460, 417, 457, 417, 455, 414, 452, 414, 448, 408, 442, 406, 439, 406, 435, 412, 432, 412, 428, 415, 425, 410, 422, 410, 417, 404, 413, 402, 411, 396, 412, 392, 418, 392, 420, 398, 419, 402, 416, 401, 414, 396, 409, 392, 406, 395, 395, 382, 389, 383, 388, 386, 377, 377, 377, 372, 374, 372, 369, 376, 360, 374, 357, 368, 359, 365, 353, 366, 355, 369, 353, 372, 350, 371, 349, 377, 346, 377, 344, 369, 338, 368, 332, 371, 330, 374, 327, 374, 318, 368, 315, 369, 303, 359, 297, 357, 295, 354, 288, 352, 291, 351, 290, 356, 285, 359, 285, 362, 282, 362, 280, 360, 281, 357, 279, 354, 276, 354, 275, 345, 269, 343],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        4: [190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406],
        5: [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        6: [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    5346: {
        1: [271, 324, 272, 327, 278, 329, 278, 338, 281, 341, 281, 344, 287, 342, 293, 343, 291, 352, 302, 360, 306, 356, 315, 351, 318, 346, 321, 345, 326, 339, 329, 339, 340, 351, 344, 359, 350, 358, 352, 361, 358, 364, 357, 367, 360, 373, 366, 375, 372, 371, 378, 372, 390, 382, 401, 394, 407, 396, 416, 403, 422, 401, 424, 403, 427, 403, 430, 405, 432, 411, 435, 413, 435, 407, 441, 405, 444, 407, 447, 406, 450, 412, 456, 415, 458, 418, 468, 410, 469, 407, 457, 399, 464, 393, 465, 387, 469, 382, 464, 370, 461, 372, 460, 369, 466, 366, 471, 361, 472, 349, 469, 340, 475, 338, 476, 332, 470, 327, 464, 326, 467, 324, 467, 321, 470, 316, 476, 313, 478, 310, 472, 304, 471, 301, 482, 290, 470, 282, 467, 273, 468, 270, 466, 267, 460, 263, 451, 266, 448, 265, 449, 262, 455, 260, 459, 254, 455, 245, 453, 245, 452, 248, 449, 250, 443, 250, 440, 244, 442, 241, 440, 238, 434, 237, 428, 241, 430, 244, 428, 246, 419, 244, 411, 251, 411, 254, 409, 255, 407, 249, 409, 247, 407, 244, 398, 244, 395, 246, 395, 249, 398, 251, 393, 254, 390, 254, 388, 251, 386, 251, 381, 263, 372, 261, 363, 254, 357, 254, 349, 261, 351, 264, 357, 267, 357, 270, 351, 266, 345, 266, 343, 269, 334, 266, 332, 263, 323, 261, 320, 264, 320, 270, 317, 272, 319, 275, 324, 277, 323, 280, 326, 281, 332, 278, 332, 281, 326, 283, 317, 282, 312, 279, 309, 285, 303, 285, 294, 291, 294, 297, 285, 303, 285, 306, 283, 308, 278, 299, 274, 308, 274, 314, 277, 315, 278, 318, 276, 321, 273, 322],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        4: [173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404],
        5: [452, 410, 454, 407, 463, 401, 469, 400, 469, 397, 478, 391, 476, 388, 473, 389, 472, 392, 469, 391, 458, 384, 458, 381, 462, 375, 462, 369, 456, 366, 454, 363, 460, 354, 463, 352, 469, 354, 472, 352, 465, 344, 465, 341, 474, 335, 472, 329, 473, 326, 476, 324, 477, 315, 483, 310, 495, 313, 501, 310, 503, 304, 507, 299, 510, 302, 512, 311, 515, 311, 518, 302, 524, 301, 530, 304, 531, 307, 529, 310, 531, 313, 529, 316, 526, 317, 526, 320, 532, 323, 535, 320, 540, 321, 540, 318, 534, 316, 534, 313, 537, 307, 543, 304, 552, 309, 558, 308, 564, 310, 570, 315, 568, 321, 562, 324, 572, 339, 563, 345, 559, 351, 556, 351, 555, 357, 552, 360, 556, 366, 555, 372, 561, 377, 562, 380, 556, 388, 565, 385, 574, 391, 577, 391, 589, 383, 595, 382, 598, 383, 606, 391, 601, 396, 598, 396, 597, 401, 589, 406, 588, 409, 585, 410, 581, 407, 578, 407, 576, 409, 576, 412, 574, 413, 571, 413, 569, 404, 554, 409, 554, 412, 551, 412, 550, 409, 544, 407, 540, 401, 537, 401, 536, 407, 533, 407, 533, 402, 527, 401, 525, 398, 526, 395, 523, 394, 521, 396, 521, 402, 519, 405, 510, 409, 509, 412, 506, 411, 505, 408, 499, 407, 496, 408, 494, 414, 491, 413, 488, 407, 482, 406, 477, 415, 480, 421, 478, 424, 472, 427, 463, 419, 462, 416, 456, 414, 453, 411],
        6: [546, 359, 548, 365, 557, 372, 556, 375, 553, 376, 551, 379, 551, 382, 554, 384, 560, 386, 575, 386, 584, 392, 590, 394, 605, 396, 626, 396, 635, 393, 636, 390, 634, 384, 645, 375, 648, 363, 665, 351, 667, 348, 665, 342, 667, 336, 659, 329, 650, 327, 635, 325, 587, 325, 581, 327, 570, 335, 571, 344, 553, 352, 547, 358],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    },
    5436: {
        1: [267, 340, 269, 337, 278, 331, 277, 328, 271, 326, 272, 323, 278, 319, 278, 316, 273, 312, 277, 300, 280, 301, 282, 307, 285, 307, 287, 301, 293, 298, 295, 295, 294, 292, 296, 289, 305, 285, 308, 286, 311, 280, 314, 279, 316, 282, 325, 283, 331, 282, 333, 279, 330, 278, 327, 281, 324, 280, 323, 275, 320, 276, 317, 273, 320, 268, 319, 265, 322, 262, 325, 260, 331, 262, 333, 265, 342, 269, 344, 267, 350, 266, 356, 270, 358, 268, 349, 262, 350, 259, 356, 255, 362, 254, 371, 260, 380, 263, 385, 252, 388, 250, 392, 255, 394, 252, 397, 252, 394, 247, 400, 242, 409, 246, 407, 251, 408, 254, 411, 255, 412, 249, 418, 245, 430, 245, 427, 243, 433, 237, 439, 238, 441, 240, 440, 246, 442, 249, 448, 250, 455, 245, 459, 254, 458, 257, 452, 262, 449, 262, 448, 265, 451, 266, 460, 263, 466, 267, 468, 270, 467, 273, 470, 282, 482, 290, 471, 301, 472, 304, 478, 310, 476, 313, 470, 316, 467, 321, 467, 324, 464, 326, 470, 327, 476, 332, 476, 335, 475, 338, 469, 340, 472, 349, 471, 361, 466, 366, 460, 369, 461, 372, 464, 370, 469, 382, 465, 387, 464, 393, 457, 399, 469, 407, 468, 410, 458, 418, 456, 415, 450, 412, 447, 406, 444, 407, 441, 405, 435, 407, 435, 413, 432, 411, 428, 403, 425, 404, 418, 397, 413, 397, 414, 402, 417, 403, 415, 397, 410, 395, 409, 392, 403, 392, 400, 390, 395, 382, 386, 378, 380, 372, 374, 370, 365, 374, 359, 373, 357, 363, 354, 363, 349, 357, 346, 359, 340, 359, 337, 358, 332, 352, 320, 350, 299, 357, 291, 351, 293, 345, 292, 342, 280, 346, 279, 349, 276, 348, 275, 345, 272, 345, 270, 343],
        10: [663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419],
        11: [845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414],
        12: [180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564],
        13: [304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540],
        14: [492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544],
        15: [692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510],
        16: [322, 635, 337, 636, 341, 645, 341, 648, 330, 655, 345, 657, 360, 666, 345, 673, 351, 674, 360, 671, 372, 675, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 418, 703, 436, 699, 454, 701, 454, 707, 456, 710, 483, 707, 495, 703, 501, 699, 509, 691, 512, 691, 520, 684, 529, 680, 532, 674, 518, 666, 519, 660, 510, 658, 513, 652, 517, 649, 514, 648, 503, 636, 511, 624, 509, 618, 510, 612, 519, 603, 520, 597, 503, 588, 491, 577, 492, 574, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 417, 587, 405, 589, 395, 599, 392, 599, 384, 607, 381, 606, 376, 609, 373, 608, 359, 620, 338, 623, 335, 625, 335, 628, 326, 632],
        17: [516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698],
        18: [609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688],
        2: [467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245],
        3: [602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287],
        4: [179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412],
        5: [464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376],
        6: [523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329],
        7: [708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383],
        8: [153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489],
        9: [246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]
    }
};
config.village.imageSizes = [[117, 88], [0, 0], [0, 0], [0, 0], [0, 0], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], null, [151, 145], [151, 145], [151, 145], [156, 186], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [974, 668], [974, 668], [974, 668], [151, 145], [151, 145], [151, 145], null, [151, 145], [151, 145], [472, 444], [151, 145], [0, 0], [950, 682], [151, 145], [151, 145], [151, 140]];
config.village.animationOffset = {
    tribe1: {
        building13: {
            10: [73, -17],
            20: [76, -8],
            999: [79, -19]
        }
    },
    tribe2: {
        building13: {
            10: [72, -20],
            20: [81, -8],
            999: [81, -20]
        }
    },
    tribe3: {
        building13: {
            10: [65, -19],
            20: [79, -5],
            999: [79, -17]
        }
    }
};
config.village.svg = {
    location1_11115: [{
        paths: ["M 276, 329 L 282, 320 L 291, 313 L 295, 307 L 301, 303 L 328, 297 L 333, 285 L 339, 281 L 345, 280 L 357, 270 L 378, 264 L 396, 264 L 408, 268 L 414, 272 L 435, 290 L 439, 305 L 433, 329 L 426, 347 L 430, 356 L 427, 365 L 416, 380 L 407, 386 L 405, 389 L 399, 392 L 388, 381 L 383, 378 L 380, 379 L 379, 374 L 376, 372 L 367, 378 L 361, 378 L 355, 372 L 354, 369 L 345, 361 L 333, 343 L 327, 340 L 318, 348 L 318, 351 L 310, 363 L 303, 368 L 301, 362 L 296, 356 L 287, 353 L 284, 350 L 278, 338 L 277, 332 z"]
    }],
    location10_11115: [{
        paths: ["M 687, 410 L 695, 434 L 707, 446 L 709, 452 L 721, 462 L 763, 475 L 784, 476 L 787, 474 L 790, 476 L 796, 475 L 808, 468 L 813, 453 L 819, 449 L 827, 440 L 829, 428 L 841, 423 L 853, 414 L 856, 414 L 859, 412 L 862, 406 L 858, 400 L 834, 392 L 822, 392 L 810, 387 L 792, 384 L 780, 380 L 774, 381 L 753, 379 L 729, 391 L 723, 392 L 708, 401 L 690, 406 L 688, 409 z"]
    }],
    location11_11115: [{
        paths: ["M 809, 455 L 810, 458 L 825, 458 L 846, 467 L 852, 472 L 857, 484 L 869, 489 L 884, 487 L 899, 492 L 941, 492 L 953, 500 L 962, 500 L 968, 502 L 977, 508 L 992, 511 L 1004, 508 L 1013, 502 L 1019, 500 L 1023, 494 L 1026, 493 L 1039, 472 L 1034, 463 L 1040, 442 L 1038, 430 L 1027, 420 L 1023, 414 L 1023, 408 L 997, 384 L 991, 383 L 973, 375 L 967, 376 L 958, 372 L 952, 372 L 943, 368 L 937, 368 L 919, 361 L 907, 360 L 898, 354 L 892, 353 L 883, 357 L 879, 366 L 876, 369 L 874, 381 L 875, 384 L 872, 393 L 860, 403 L 859, 409 L 847, 415 L 843, 420 L 828, 427 L 826, 430 L 826, 436 L 818, 448 L 812, 452 z"]
    }],
    location12_11115: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_11115: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_11115: [{
        paths: ["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]
    }],
    location15_11115: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_11115: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_11115: [{
        paths: ["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]
    }],
    location18_11115: [{
        paths: ["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]
    }],
    location2_11115: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_11115: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 705, 380 L 706, 383 L 714, 379 L 717, 380 L 717, 383 L 720, 384 L 721, 381 L 731, 372 L 729, 366 L 731, 360 L 738, 352 L 741, 351 L 743, 357 L 740, 363 L 746, 365 L 745, 368 L 747, 370 L 750, 368 L 751, 365 L 756, 362 L 760, 356 L 768, 351 L 768, 348 L 765, 346 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 778, 323 L 781, 322 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 787, 302 L 793, 298 L 794, 295 L 791, 292 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 797, 261 L 795, 258 L 786, 253 L 785, 250 L 776, 243 L 779, 241 L 780, 238 L 786, 234 L 787, 231 L 778, 225 L 775, 225 L 769, 229 L 766, 235 L 757, 232 L 752, 224 L 747, 229 L 744, 228 L 743, 225 L 737, 221 L 731, 221 L 725, 224 L 721, 233 L 721, 237 L 713, 243 L 713, 240 L 717, 235 L 714, 226 L 711, 225 L 710, 228 L 707, 230 L 698, 227 L 695, 229 L 692, 235 L 686, 233 L 683, 234 L 675, 241 L 672, 238 L 677, 233 L 675, 230 L 677, 227 L 676, 224 L 667, 222 L 664, 225 L 664, 231 L 661, 233 L 652, 232 L 649, 235 L 648, 238 L 651, 239 L 650, 241 L 641, 237 L 635, 237 L 633, 231 L 639, 232 L 641, 235 L 651, 228 L 650, 225 L 644, 220 L 638, 220 L 632, 224 L 628, 236 L 625, 237 L 616, 234 L 613, 232 L 611, 226 L 609, 227 L 605, 236 L 610, 244 L 616, 246 L 617, 249 L 620, 250 L 621, 247 L 630, 244 L 631, 247 L 634, 249 L 625, 250 L 620, 255 L 620, 258 L 611, 258 L 605, 262 L 607, 268 L 613, 271 L 614, 274 L 617, 274 L 618, 271 L 624, 268 L 626, 270 L 623, 276 L 615, 283 L 603, 287 z"]
    }],
    location4_11115: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]
    }],
    location5_11115: [{
        paths: ["M 456, 322 L 460, 334 L 456, 346 L 459, 358 L 470, 369 L 479, 390 L 488, 397 L 509, 406 L 521, 406 L 527, 404 L 539, 406 L 563, 401 L 564, 398 L 573, 395 L 575, 392 L 572, 386 L 551, 367 L 548, 358 L 544, 352 L 543, 349 L 545, 337 L 554, 322 L 552, 316 L 546, 311 L 528, 305 L 522, 305 L 513, 302 L 507, 304 L 501, 303 L 492, 305 L 480, 305 L 474, 307 L 462, 315 L 457, 321 z"]
    }],
    location6_11115: [{
        paths: ["M 541, 346 L 542, 352 L 551, 370 L 572, 389 L 572, 392 L 563, 397 L 562, 400 L 564, 403 L 570, 405 L 609, 402 L 618, 399 L 624, 395 L 640, 378 L 643, 377 L 649, 371 L 655, 359 L 653, 353 L 640, 338 L 636, 329 L 627, 323 L 615, 321 L 606, 313 L 597, 311 L 591, 307 L 570, 307 L 567, 305 L 561, 305 L 543, 309 L 543, 312 L 551, 319 L 550, 325 L 544, 334 L 543, 343 z"]
    }],
    location7_11115: [{
        paths: ["M 755, 379 L 769, 367 L 775, 364 L 776, 358 L 773, 355 L 774, 352 L 772, 346 L 774, 340 L 788, 329 L 809, 321 L 836, 325 L 857, 332 L 863, 336 L 893, 346 L 898, 351 L 897, 354 L 888, 355 L 882, 360 L 876, 378 L 876, 390 L 871, 396 L 862, 402 L 835, 393 L 823, 392 L 805, 386 L 796, 386 L 781, 382 L 757, 380 z"]
    }],
    location8_11115: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_11115: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_3339: [{
        paths: ["M 276,332 L277,344 L280,350 L285,356 L291,357 L306,369 L312,372 L327,372 L339,377 L360,378 L369,383 L372,383 L378,389 L390,394 L411,384 L419,376 L419,373 L429,361 L429,355 L425,349 L434,325 L438,301 L434,289 L431,288 L421,277 L418,276 L412,270 L400,265 L379,263 L373,267 L361,268 L347,279 L338,281 L333,286 L330,295 L324,298 L303,302 L297,305 L277,328 L277,331 z"]
    }],
    location10_3339: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3339: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3339: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3339: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3339: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3339: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3339: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3339: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3339: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3339: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_3339: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 632, 311 L 637, 316 L 643, 317 L 652, 324 L 659, 318 L 657, 315 L 658, 312 L 661, 312 L 667, 317 L 670, 322 L 669, 328 L 671, 331 L 677, 333 L 677, 336 L 680, 338 L 676, 341 L 678, 347 L 676, 350 L 669, 346 L 657, 349 L 658, 358 L 656, 364 L 660, 369 L 663, 369 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 657, 399 L 660, 398 L 660, 395 L 666, 395 L 669, 393 L 673, 387 L 673, 382 L 678, 385 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 707, 383 L 715, 378 L 720, 369 L 726, 365 L 740, 351 L 755, 363 L 766, 348 L 766, 344 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 307 L 787, 302 L 793, 298 L 794, 295 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 607, 229 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_3339: [{
        paths: ["M 198, 369 L 202, 381 L 198, 393 L 201, 405 L 213, 416 L 222, 437 L 228, 443 L 255, 453 L 270, 450 L 279, 452 L 297, 448 L 309, 450 L 330, 450 L 360, 445 L 366, 441 L 381, 424 L 387, 421 L 394, 413 L 396, 404 L 396, 401 L 388, 392 L 379, 389 L 361, 377 L 340, 377 L 322, 370 L 304, 370 L 295, 368 L 271, 352 L 265, 350 L 244, 349 L 238, 351 L 223, 351 L 214, 354 L 205, 360 L 199, 368 z"]
    }],
    location5_3339: [{
        paths: ["M 443, 329 L 449, 320 L 461, 312 L 470, 309 L 497, 308 L 500, 306 L 512, 310 L 518, 310 L 527, 314 L 539, 311 L 566, 311 L 575, 315 L 579, 321 L 578, 324 L 570, 331 L 561, 334 L 555, 346 L 546, 351 L 538, 360 L 537, 363 L 542, 372 L 543, 381 L 549, 390 L 549, 393 L 544, 405 L 529, 410 L 517, 408 L 499, 411 L 493, 409 L 475, 402 L 466, 393 L 461, 381 L 456, 384 L 451, 380 L 450, 374 L 453, 372 L 454, 369 L 448, 365 L 444, 353 L 448, 341 L 445, 332 z"]
    }],
    location6_3339: [{
        paths: ["M 543, 362 L 547, 368 L 553, 368 L 558, 373 L 549, 380 L 550, 383 L 553, 385 L 574, 387 L 586, 395 L 595, 398 L 604, 396 L 625, 396 L 631, 394 L 636, 390 L 635, 384 L 646, 374 L 650, 362 L 665, 351 L 668, 345 L 666, 342 L 669, 339 L 669, 336 L 663, 331 L 645, 326 L 585, 325 L 579, 327 L 567, 335 L 570, 340 L 568, 346 L 559, 348 L 550, 353 L 547, 355 L 544, 361 z"]
    }],
    location7_3339: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3339: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3339: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location11_33546: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location14_33546: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location1_3447: [{
        paths: ["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]
    }],
    location10_3447: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3447: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3447: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3447: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3447: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3447: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3447: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3447: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3447: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3447: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]
    }],
    location3_3447: [{
        paths: ["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]
    }],
    location4_3447: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_3447: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_3447: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_3447: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3447: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3447: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_3456: [{
        paths: ["M 225, 350 L 231, 349 L 229, 358 L 231, 360 L 237, 359 L 243, 354 L 248, 345 L 257, 339 L 263, 333 L 264, 330 L 273, 327 L 276, 328 L 278, 331 L 278, 337 L 284, 349 L 287, 352 L 296, 355 L 304, 366 L 310, 362 L 316, 353 L 317, 347 L 328, 338 L 339, 350 L 343, 359 L 360, 377 L 363, 378 L 371, 372 L 377, 372 L 383, 376 L 402, 396 L 408, 396 L 414, 400 L 413, 397 L 422, 396 L 425, 393 L 431, 392 L 432, 390 L 426, 388 L 429, 386 L 427, 383 L 428, 380 L 425, 378 L 426, 376 L 432, 379 L 435, 378 L 436, 372 L 430, 368 L 427, 368 L 422, 362 L 423, 359 L 426, 358 L 423, 356 L 422, 353 L 434, 357 L 438, 349 L 441, 348 L 443, 354 L 446, 356 L 449, 355 L 449, 346 L 452, 344 L 457, 350 L 460, 351 L 468, 346 L 469, 340 L 472, 342 L 478, 342 L 477, 336 L 471, 332 L 467, 323 L 467, 317 L 473, 317 L 472, 311 L 478, 310 L 470, 303 L 476, 301 L 464, 299 L 458, 294 L 452, 292 L 443, 286 L 439, 280 L 438, 274 L 429, 262 L 414, 250 L 409, 241 L 403, 235 L 381, 220 L 372, 226 L 370, 232 L 364, 241 L 358, 246 L 348, 264 L 342, 270 L 339, 276 L 330, 281 L 322, 290 L 319, 299 L 295, 282 L 290, 288 L 287, 289 L 286, 292 L 277, 299 L 272, 308 L 260, 320 L 251, 323 L 241, 338 L 238, 338 L 234, 344 L 228, 348 z"]
    }],
    location10_3456: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3456: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3456: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3456: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3456: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3456: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3456: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3456: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3456: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3456: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_3456: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_3456: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]
    }],
    location5_3456: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_3456: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_3456: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3456: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3456: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_3546: [{
        paths: ["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 292, 354 L 293, 357 L 299, 360 L 301, 363 L 298, 366 L 310, 366 L 319, 371 L 331, 371 L 334, 368 L 343, 367 L 338, 358 L 344, 358 L 350, 361 L 356, 361 L 368, 365 L 371, 363 L 380, 362 L 386, 364 L 386, 367 L 389, 369 L 401, 367 L 406, 372 L 418, 373 L 422, 369 L 428, 369 L 429, 367 L 423, 362 L 426, 360 L 435, 360 L 438, 354 L 447, 359 L 449, 353 L 452, 351 L 455, 353 L 461, 353 L 464, 351 L 464, 348 L 479, 341 L 474, 340 L 474, 331 L 471, 326 L 480, 329 L 482, 327 L 482, 324 L 481, 321 L 475, 319 L 472, 316 L 470, 310 L 473, 309 L 468, 303 L 450, 288 L 447, 287 L 435, 294 L 426, 285 L 406, 252 L 400, 248 L 380, 268 L 374, 263 L 368, 254 L 359, 245 L 347, 238 L 328, 255 L 326, 261 L 319, 269 L 313, 270 L 308, 275 L 305, 276 L 298, 284 L 296, 290 L 293, 293 L 290, 293 L 286, 299 L 283, 301 L 277, 301 L 262, 311 L 253, 314 L 247, 323 L 235, 331 z"]
    }],
    location10_3546: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_3546: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_3546: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_3546: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_3546: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_3546: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_3546: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_3546: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_3546: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_3546: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_3546: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_3546: [{
        paths: ["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]
    }],
    location5_3546: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_3546: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_3546: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_3546: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_3546: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location4_3547: [{
        paths: ["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]
    }],
    location1_4347: [{
        paths: ["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]
    }],
    location10_4347: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_4347: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_4347: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_4347: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_4347: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_4347: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4347: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4347: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_4347: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_4347: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]
    }],
    location3_4347: [{
        paths: ["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]
    }],
    location4_4347: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_4347: [{
        paths: ["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]
    }],
    location6_4347: [{
        paths: ["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]
    }],
    location7_4347: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_4347: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_4347: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_4356: [{
        paths: ["M 225, 350 L 231, 346 L 238, 337 L 241, 337 L 248, 325 L 260, 320 L 274, 305 L 274, 302 L 286, 292 L 287, 289 L 295, 282 L 316, 298 L 319, 297 L 319, 294 L 326, 285 L 332, 279 L 338, 276 L 341, 270 L 347, 264 L 358, 246 L 370, 232 L 374, 223 L 377, 223 L 382, 219 L 409, 240 L 416, 252 L 434, 267 L 438, 273 L 441, 282 L 444, 285 L 447, 286 L 453, 292 L 465, 298 L 474, 300 L 473, 303 L 470, 304 L 479, 308 L 478, 310 L 475, 311 L 475, 314 L 473, 316 L 467, 319 L 469, 328 L 476, 336 L 476, 342 L 470, 340 L 468, 342 L 469, 345 L 463, 348 L 451, 344 L 451, 353 L 448, 355 L 445, 355 L 442, 349 L 439, 348 L 436, 354 L 433, 355 L 427, 355 L 424, 352 L 422, 353 L 426, 359 L 423, 360 L 423, 363 L 435, 371 L 436, 377 L 430, 379 L 424, 376 L 428, 380 L 427, 383 L 430, 389 L 433, 390 L 432, 392 L 423, 396 L 423, 399 L 417, 397 L 417, 400 L 414, 401 L 408, 396 L 399, 392 L 378, 372 L 372, 371 L 363, 378 L 360, 377 L 343, 360 L 341, 354 L 332, 342 L 326, 339 L 322, 344 L 319, 345 L 317, 351 L 306, 365 L 303, 365 L 302, 362 L 296, 356 L 287, 353 L 284, 350 L 279, 341 L 277, 329 L 274, 327 L 265, 330 L 258, 339 L 249, 345 L 244, 354 L 238, 359 L 232, 360 L 229, 355 L 231, 352 L 229, 350 L 226, 351 z"]
    }],
    location10_4356: [{
        paths: ["M 661, 425 L 663, 422 L 669, 419 L 702, 408 L 709, 400 L 721, 396 L 726, 391 L 732, 390 L 768, 389 L 771, 387 L 777, 390 L 789, 388 L 816, 391 L 837, 396 L 846, 403 L 844, 421 L 827, 434 L 820, 455 L 818, 458 L 812, 460 L 811, 472 L 805, 473 L 802, 476 L 772, 478 L 751, 474 L 742, 477 L 727, 477 L 712, 472 L 709, 469 L 703, 473 L 697, 472 L 691, 469 L 689, 466 L 697, 466 L 698, 463 L 695, 460 L 680, 455 L 672, 447 L 677, 438 L 677, 435 L 671, 430 L 662, 426 z"]
    }],
    location11_4356: [{
        paths: ["M 834, 468 L 836, 474 L 842, 479 L 848, 480 L 854, 486 L 860, 486 L 875, 493 L 881, 491 L 887, 492 L 893, 489 L 920, 493 L 935, 491 L 959, 484 L 1001, 479 L 1008, 470 L 1035, 458 L 1050, 448 L 1050, 445 L 1048, 442 L 1042, 440 L 1027, 438 L 1024, 426 L 1017, 418 L 1008, 417 L 1002, 413 L 996, 413 L 990, 407 L 978, 409 L 969, 408 L 966, 406 L 961, 397 L 952, 393 L 940, 393 L 931, 396 L 919, 396 L 913, 394 L 907, 397 L 889, 396 L 883, 398 L 874, 410 L 872, 422 L 864, 430 L 858, 434 L 855, 434 L 844, 442 L 842, 457 L 835, 466 z"]
    }],
    location12_4356: [{
        paths: ["M 166, 611 L 166, 620 L 169, 621 L 181, 620 L 184, 622 L 187, 621 L 196, 623 L 201, 619 L 204, 619 L 205, 622 L 203, 625 L 206, 627 L 215, 625 L 224, 630 L 233, 630 L 235, 628 L 244, 627 L 246, 625 L 237, 618 L 238, 615 L 247, 617 L 259, 616 L 264, 625 L 270, 627 L 279, 621 L 282, 615 L 297, 619 L 306, 617 L 318, 619 L 319, 617 L 313, 614 L 307, 608 L 308, 602 L 310, 600 L 322, 598 L 328, 600 L 328, 597 L 319, 591 L 319, 585 L 324, 580 L 333, 582 L 344, 577 L 336, 569 L 321, 564 L 312, 555 L 306, 552 L 297, 544 L 291, 548 L 276, 538 L 267, 526 L 259, 511 L 256, 508 L 253, 508 L 235, 524 L 220, 531 L 212, 539 L 209, 545 L 204, 566 L 198, 575 L 195, 577 L 193, 583 L 187, 592 L 177, 603 L 171, 606 L 169, 609 z"]
    }],
    location13_4356: [{
        paths: ["M 332, 540 L 338, 531 L 341, 531 L 352, 525 L 351, 519 L 357, 514 L 360, 509 L 366, 505 L 375, 507 L 379, 501 L 391, 495 L 392, 489 L 395, 487 L 395, 481 L 383, 490 L 374, 487 L 371, 481 L 377, 476 L 386, 474 L 387, 472 L 385, 469 L 391, 464 L 394, 466 L 396, 472 L 402, 474 L 407, 471 L 409, 474 L 411, 480 L 408, 486 L 412, 492 L 411, 495 L 408, 496 L 412, 502 L 418, 501 L 424, 503 L 436, 497 L 439, 491 L 433, 487 L 436, 481 L 435, 472 L 430, 467 L 433, 458 L 436, 455 L 439, 455 L 447, 467 L 443, 472 L 451, 484 L 451, 487 L 456, 492 L 465, 491 L 468, 494 L 469, 503 L 464, 508 L 467, 509 L 469, 506 L 472, 507 L 475, 516 L 470, 521 L 464, 517 L 458, 519 L 456, 522 L 447, 527 L 447, 533 L 450, 536 L 456, 533 L 462, 537 L 471, 532 L 480, 531 L 481, 528 L 490, 523 L 493, 523 L 499, 516 L 505, 517 L 508, 519 L 513, 531 L 518, 537 L 519, 543 L 522, 545 L 528, 554 L 522, 560 L 516, 562 L 515, 559 L 512, 558 L 510, 555 L 513, 550 L 504, 553 L 502, 556 L 496, 555 L 487, 562 L 483, 557 L 477, 555 L 471, 557 L 462, 550 L 460, 553 L 457, 554 L 456, 560 L 450, 563 L 444, 558 L 447, 549 L 446, 546 L 443, 548 L 440, 547 L 437, 553 L 428, 558 L 422, 557 L 414, 564 L 412, 567 L 412, 573 L 406, 575 L 406, 578 L 404, 580 L 389, 584 L 382, 577 L 384, 574 L 393, 568 L 396, 570 L 399, 569 L 399, 563 L 396, 562 L 384, 571 L 381, 569 L 378, 570 L 376, 573 L 367, 577 L 365, 580 L 360, 576 L 357, 576 L 349, 583 L 346, 583 L 340, 578 L 342, 569 L 344, 566 L 347, 565 L 353, 570 L 356, 568 L 357, 562 L 351, 562 L 345, 557 L 344, 554 L 352, 547 L 364, 552 L 367, 550 L 364, 547 L 364, 541 L 358, 539 L 349, 543 L 347, 546 L 344, 547 L 341, 552 L 338, 550 L 337, 544 L 334, 543 z"]
    }],
    location14_4356: [{
        paths: ["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]
    }],
    location15_4356: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4356: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4356: [{
        paths: ["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]
    }],
    location18_4356: [{
        paths: ["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]
    }],
    location2_4356: [{
        paths: ["M 451, 228 L 463, 242 L 469, 246 L 472, 247 L 481, 241 L 482, 244 L 474, 251 L 480, 255 L 483, 261 L 483, 264 L 480, 267 L 478, 273 L 475, 276 L 466, 272 L 460, 274 L 455, 279 L 456, 282 L 461, 286 L 458, 292 L 461, 294 L 473, 293 L 476, 295 L 482, 291 L 488, 292 L 489, 298 L 500, 304 L 502, 298 L 508, 294 L 511, 294 L 517, 298 L 526, 296 L 535, 300 L 538, 299 L 543, 295 L 536, 283 L 541, 278 L 539, 275 L 541, 272 L 538, 266 L 547, 269 L 550, 272 L 552, 281 L 544, 288 L 548, 294 L 554, 297 L 557, 294 L 569, 292 L 578, 297 L 587, 293 L 593, 293 L 611, 299 L 623, 294 L 626, 292 L 626, 289 L 629, 289 L 633, 294 L 638, 290 L 639, 287 L 642, 286 L 642, 283 L 637, 277 L 631, 273 L 633, 270 L 629, 255 L 617, 247 L 605, 249 L 603, 246 L 616, 236 L 616, 227 L 613, 224 L 607, 224 L 603, 230 L 589, 238 L 586, 238 L 583, 236 L 583, 233 L 589, 230 L 589, 227 L 586, 224 L 577, 221 L 568, 228 L 559, 226 L 553, 214 L 550, 217 L 546, 229 L 552, 233 L 549, 235 L 543, 234 L 537, 238 L 534, 233 L 528, 228 L 522, 227 L 514, 234 L 511, 243 L 496, 238 L 498, 232 L 490, 225 L 484, 222 L 472, 226 L 469, 223 L 460, 221 L 452, 227 z"]
    }],
    location3_4356: [{
        paths: ["M 649, 283 L 652, 280 L 673, 272 L 688, 262 L 697, 259 L 706, 261 L 712, 257 L 730, 256 L 760, 262 L 770, 277 L 772, 283 L 781, 290 L 782, 302 L 776, 311 L 767, 317 L 755, 319 L 754, 322 L 769, 335 L 769, 341 L 754, 347 L 727, 347 L 703, 341 L 688, 335 L 676, 328 L 656, 301 L 650, 286 z"]
    }],
    location4_4356: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 214, 425 L 217, 425 L 218, 421 L 224, 416 L 236, 425 L 254, 446 L 257, 446 L 263, 437 L 269, 434 L 270, 431 L 276, 427 L 282, 432 L 292, 447 L 294, 453 L 303, 455 L 309, 452 L 315, 453 L 319, 447 L 322, 446 L 313, 443 L 312, 441 L 315, 441 L 319, 438 L 325, 438 L 326, 441 L 332, 442 L 344, 442 L 350, 438 L 356, 437 L 355, 434 L 347, 426 L 368, 433 L 380, 432 L 382, 435 L 385, 433 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 399, 427 L 402, 426 L 399, 425 L 398, 422 L 404, 422 L 413, 425 L 416, 423 L 419, 424 L 422, 423 L 423, 420 L 421, 414 L 427, 413 L 422, 408 L 418, 412 L 416, 409 L 417, 407 L 420, 407 L 410, 398 L 401, 394 L 390, 382 L 378, 372 L 372, 371 L 363, 378 L 360, 376 L 343, 359 L 341, 353 L 329, 338 L 318, 346 L 317, 352 L 304, 366 L 295, 354 L 289, 353 L 283, 348 L 281, 342 L 278, 339 L 276, 327 L 273, 326 L 264, 330 L 260, 336 L 248, 345 L 241, 357 L 229, 360 L 221, 371 L 215, 374 L 209, 382 L 200, 387 L 191, 395 L 188, 394 L 185, 396 L 180, 402 L 177, 400 L 174, 402 z"]
    }],
    location5_4356: [{
        paths: ["M 438, 372 L 440, 369 L 446, 366 L 455, 365 L 455, 359 L 450, 354 L 450, 351 L 452, 348 L 461, 344 L 467, 347 L 473, 346 L 476, 348 L 481, 354 L 480, 357 L 482, 366 L 485, 367 L 488, 364 L 491, 364 L 491, 358 L 500, 352 L 500, 346 L 502, 343 L 497, 340 L 499, 334 L 498, 331 L 500, 328 L 495, 323 L 495, 314 L 489, 315 L 480, 307 L 481, 304 L 487, 300 L 493, 298 L 499, 300 L 501, 297 L 507, 294 L 513, 294 L 519, 297 L 525, 295 L 534, 299 L 546, 296 L 558, 303 L 561, 302 L 570, 309 L 570, 312 L 567, 312 L 562, 317 L 562, 323 L 556, 326 L 569, 344 L 569, 347 L 566, 349 L 570, 355 L 566, 361 L 566, 367 L 563, 373 L 575, 389 L 568, 399 L 565, 397 L 562, 398 L 560, 401 L 552, 398 L 551, 400 L 559, 412 L 550, 421 L 543, 414 L 546, 408 L 543, 405 L 537, 405 L 533, 400 L 524, 405 L 524, 411 L 521, 414 L 512, 411 L 511, 417 L 508, 416 L 507, 413 L 489, 405 L 484, 409 L 478, 405 L 484, 393 L 484, 390 L 481, 387 L 478, 387 L 476, 390 L 477, 393 L 471, 403 L 468, 400 L 468, 397 L 465, 398 L 462, 395 L 465, 390 L 464, 387 L 461, 386 L 459, 383 L 450, 381 L 441, 375 z"]
    }],
    location6_4356: [{
        paths: ["M 554, 326 L 568, 344 L 567, 347 L 564, 349 L 568, 355 L 562, 373 L 565, 379 L 573, 387 L 573, 393 L 568, 399 L 566, 405 L 566, 411 L 569, 414 L 575, 412 L 576, 409 L 573, 403 L 575, 401 L 578, 402 L 580, 405 L 583, 405 L 585, 402 L 588, 401 L 590, 403 L 589, 406 L 597, 414 L 600, 414 L 601, 408 L 604, 406 L 604, 397 L 598, 393 L 595, 395 L 592, 394 L 584, 387 L 599, 380 L 608, 388 L 607, 394 L 613, 396 L 619, 401 L 633, 390 L 633, 387 L 638, 382 L 637, 379 L 639, 376 L 642, 378 L 645, 376 L 646, 385 L 652, 387 L 654, 390 L 652, 396 L 657, 400 L 660, 402 L 661, 399 L 667, 396 L 668, 393 L 661, 384 L 655, 381 L 654, 375 L 663, 372 L 663, 381 L 666, 381 L 668, 383 L 668, 386 L 671, 387 L 676, 379 L 677, 370 L 673, 364 L 675, 358 L 681, 353 L 681, 350 L 678, 341 L 676, 338 L 673, 337 L 672, 340 L 666, 345 L 663, 345 L 667, 339 L 658, 334 L 653, 325 L 653, 322 L 650, 319 L 646, 324 L 644, 330 L 641, 326 L 641, 320 L 635, 317 L 632, 318 L 631, 315 L 622, 309 L 615, 309 L 612, 310 L 605, 318 L 596, 322 L 595, 325 L 597, 331 L 600, 330 L 609, 332 L 608, 329 L 610, 326 L 613, 325 L 619, 330 L 622, 330 L 627, 338 L 632, 336 L 631, 333 L 628, 331 L 630, 325 L 629, 322 L 620, 325 L 611, 318 L 611, 315 L 616, 310 L 617, 304 L 611, 299 L 602, 299 L 590, 291 L 578, 297 L 566, 291 L 557, 296 L 556, 299 L 571, 309 L 571, 312 L 565, 312 L 562, 314 L 561, 323 L 555, 325 z"]
    }],
    location7_4356: [{
        paths: ["M 781, 336 L 784, 354 L 804, 378 L 828, 388 L 846, 393 L 876, 394 L 882, 389 L 883, 377 L 880, 371 L 882, 368 L 888, 366 L 900, 366 L 901, 375 L 904, 378 L 913, 382 L 934, 387 L 952, 387 L 958, 385 L 961, 383 L 964, 374 L 959, 362 L 947, 354 L 920, 353 L 922, 347 L 914, 338 L 896, 324 L 894, 315 L 889, 306 L 883, 300 L 877, 297 L 859, 292 L 832, 290 L 811, 294 L 802, 298 L 799, 301 L 798, 307 L 799, 310 L 805, 315 L 804, 318 L 786, 326 L 782, 335 z"]
    }],
    location8_4356: [{
        paths: ["M 144, 491 L 151, 482 L 160, 478 L 165, 472 L 170, 469 L 180, 454 L 186, 451 L 187, 448 L 193, 448 L 199, 442 L 204, 433 L 213, 426 L 223, 415 L 241, 429 L 252, 444 L 255, 446 L 261, 445 L 263, 451 L 262, 463 L 252, 472 L 251, 478 L 245, 487 L 243, 493 L 249, 511 L 236, 524 L 221, 532 L 212, 540 L 210, 543 L 207, 561 L 200, 573 L 194, 579 L 193, 585 L 190, 586 L 187, 580 L 181, 579 L 189, 570 L 187, 567 L 187, 561 L 172, 560 L 171, 557 L 174, 555 L 174, 552 L 168, 550 L 162, 551 L 160, 549 L 163, 547 L 169, 538 L 190, 525 L 190, 520 L 192, 517 L 190, 515 L 184, 515 L 178, 511 L 174, 505 L 168, 506 L 168, 503 L 156, 502 L 153, 500 L 154, 497 L 152, 494 L 146, 493 z"]
    }],
    location9_4356: [{
        paths: ["M 242, 493 L 248, 508 L 257, 509 L 269, 530 L 272, 533 L 278, 533 L 281, 531 L 284, 534 L 279, 539 L 280, 541 L 292, 544 L 295, 543 L 298, 538 L 301, 538 L 304, 541 L 319, 536 L 322, 534 L 322, 531 L 324, 529 L 336, 530 L 339, 529 L 339, 526 L 345, 527 L 345, 524 L 353, 519 L 350, 517 L 348, 511 L 369, 511 L 372, 508 L 375, 509 L 375, 506 L 361, 492 L 361, 489 L 364, 487 L 365, 481 L 368, 479 L 380, 479 L 383, 477 L 392, 476 L 390, 473 L 384, 471 L 383, 468 L 386, 469 L 386, 466 L 371, 458 L 365, 449 L 356, 440 L 350, 437 L 345, 442 L 324, 451 L 314, 462 L 305, 465 L 302, 463 L 294, 451 L 284, 433 L 275, 427 L 261, 440 L 260, 443 L 263, 452 L 263, 461 L 252, 472 L 244, 490 z"]
    }],
    location1_4437: [{
        paths: ["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]
    }],
    location10_4437: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_4437: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_4437: [{
        paths: ["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]
    }],
    location13_4437: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_4437: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_4437: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4437: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4437: [{
        paths: ["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]
    }],
    location18_4437: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_4437: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]
    }],
    location3_4437: [{
        paths: ["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]
    }],
    location4_4437: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_4437: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_4437: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_4437: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_4437: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_4437: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_4446: [{
        paths: ["M 271, 323 L 271, 326 L 274, 326 L 277, 329 L 278, 338 L 283, 344 L 292, 341 L 293, 347 L 291, 350 L 301, 359 L 304, 359 L 305, 356 L 317, 350 L 317, 347 L 328, 338 L 342, 353 L 343, 359 L 349, 357 L 354, 363 L 357, 363 L 359, 365 L 356, 369 L 358, 371 L 367, 374 L 370, 373 L 372, 370 L 378, 372 L 387, 380 L 390, 381 L 401, 393 L 407, 395 L 415, 402 L 421, 401 L 430, 404 L 434, 413 L 436, 411 L 435, 408 L 440, 405 L 448, 408 L 449, 411 L 455, 414 L 458, 418 L 468, 410 L 468, 407 L 465, 404 L 456, 399 L 458, 396 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 463, 373 L 460, 373 L 460, 370 L 465, 367 L 466, 364 L 472, 358 L 469, 340 L 475, 338 L 476, 332 L 464, 326 L 467, 324 L 469, 316 L 477, 312 L 477, 309 L 471, 303 L 475, 295 L 481, 293 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 463, 265 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 255 L 454, 243 L 452, 249 L 449, 251 L 446, 249 L 443, 250 L 438, 245 L 441, 244 L 442, 241 L 439, 238 L 433, 237 L 428, 242 L 430, 245 L 427, 247 L 421, 245 L 415, 247 L 412, 250 L 411, 256 L 408, 257 L 407, 251 L 409, 246 L 400, 242 L 395, 247 L 396, 250 L 399, 251 L 393, 254 L 390, 254 L 388, 251 L 385, 253 L 383, 262 L 381, 264 L 372, 261 L 363, 254 L 351, 258 L 349, 261 L 351, 264 L 360, 268 L 355, 271 L 350, 266 L 347, 268 L 344, 267 L 342, 269 L 328, 261 L 322, 262 L 319, 265 L 321, 270 L 318, 271 L 318, 274 L 324, 276 L 322, 279 L 325, 281 L 331, 279 L 331, 282 L 316, 283 L 315, 280 L 312, 279 L 310, 285 L 304, 285 L 295, 290 L 294, 293 L 297, 295 L 298, 298 L 292, 298 L 286, 302 L 285, 308 L 282, 307 L 279, 301 L 277, 302 L 273, 311 L 278, 318 L 276, 321 L 273, 322 z"]
    }],
    location10_4446: [{
        paths: ["M 662, 422 L 668, 417 L 677, 415 L 680, 409 L 686, 407 L 690, 398 L 695, 392 L 706, 385 L 712, 388 L 722, 400 L 717, 405 L 720, 408 L 720, 414 L 726, 418 L 729, 416 L 731, 410 L 740, 408 L 748, 400 L 757, 396 L 769, 387 L 775, 381 L 778, 375 L 784, 371 L 785, 368 L 791, 363 L 800, 369 L 817, 399 L 825, 408 L 831, 411 L 840, 419 L 849, 421 L 858, 427 L 873, 427 L 873, 433 L 874, 436 L 877, 438 L 877, 441 L 872, 456 L 863, 457 L 857, 460 L 842, 459 L 842, 462 L 836, 467 L 832, 473 L 826, 475 L 814, 473 L 811, 479 L 808, 480 L 793, 476 L 802, 470 L 799, 468 L 793, 470 L 781, 470 L 780, 464 L 777, 465 L 775, 463 L 780, 458 L 778, 456 L 766, 464 L 745, 471 L 739, 471 L 737, 467 L 731, 465 L 728, 462 L 722, 466 L 710, 464 L 709, 459 L 706, 458 L 710, 452 L 708, 450 L 702, 451 L 693, 445 L 693, 442 L 689, 437 L 680, 439 L 677, 437 L 674, 438 L 669, 436 L 671, 432 L 669, 429 L 666, 430 L 663, 428 L 663, 425 z"]
    }],
    location11_4446: [{
        paths: ["M 845, 415 L 851, 411 L 860, 409 L 865, 403 L 886, 389 L 889, 389 L 898, 383 L 904, 377 L 913, 362 L 931, 348 L 943, 362 L 943, 368 L 945, 371 L 948, 373 L 951, 370 L 954, 372 L 968, 396 L 977, 405 L 983, 407 L 989, 412 L 995, 408 L 1001, 414 L 1010, 419 L 1021, 430 L 1036, 434 L 1039, 437 L 1036, 442 L 1030, 444 L 1024, 442 L 1016, 448 L 1016, 454 L 1022, 459 L 1022, 461 L 1013, 464 L 1007, 462 L 1005, 464 L 1011, 473 L 1008, 476 L 1014, 480 L 1012, 482 L 1003, 479 L 1000, 479 L 998, 482 L 995, 482 L 986, 478 L 980, 478 L 977, 481 L 978, 484 L 967, 491 L 961, 487 L 959, 481 L 956, 479 L 947, 480 L 941, 477 L 935, 479 L 929, 478 L 927, 476 L 927, 472 L 925, 469 L 922, 466 L 916, 465 L 914, 468 L 923, 480 L 911, 480 L 905, 484 L 899, 483 L 894, 487 L 888, 485 L 879, 486 L 877, 483 L 874, 485 L 865, 485 L 863, 479 L 857, 481 L 854, 479 L 848, 480 L 858, 472 L 879, 462 L 880, 459 L 878, 457 L 878, 448 L 881, 445 L 882, 439 L 877, 434 L 877, 428 L 883, 423 L 886, 423 L 886, 420 L 877, 421 L 877, 418 L 875, 416 L 857, 415 L 848, 417 z"]
    }],
    location12_4446: [{
        paths: ["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]
    }],
    location13_4446: [{
        paths: ["M 304, 539 L 328, 523 L 344, 508 L 353, 508 L 356, 506 L 374, 512 L 383, 512 L 395, 509 L 407, 511 L 413, 508 L 422, 508 L 440, 513 L 444, 519 L 440, 528 L 443, 531 L 445, 537 L 440, 549 L 419, 560 L 392, 568 L 377, 568 L 365, 575 L 364, 569 L 358, 564 L 346, 561 L 340, 557 L 334, 557 L 320, 546 L 311, 546 L 305, 540 z"]
    }],
    location14_4446: [{
        paths: ["M 492, 546 L 494, 552 L 500, 553 L 500, 556 L 503, 557 L 504, 554 L 510, 552 L 509, 555 L 512, 557 L 506, 559 L 497, 565 L 497, 568 L 503, 572 L 506, 572 L 505, 576 L 507, 578 L 507, 584 L 513, 588 L 513, 591 L 519, 592 L 522, 590 L 527, 593 L 527, 596 L 523, 599 L 528, 603 L 526, 610 L 522, 610 L 522, 603 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 506, 626 L 510, 632 L 513, 632 L 512, 636 L 515, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 640 L 522, 646 L 528, 647 L 532, 638 L 547, 633 L 552, 638 L 560, 641 L 561, 647 L 567, 647 L 568, 650 L 571, 652 L 572, 650 L 570, 648 L 572, 645 L 575, 643 L 581, 646 L 587, 642 L 588, 639 L 586, 637 L 589, 634 L 601, 632 L 604, 633 L 607, 631 L 609, 634 L 618, 629 L 618, 626 L 624, 623 L 626, 620 L 622, 614 L 622, 605 L 618, 600 L 623, 596 L 617, 590 L 623, 585 L 613, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 559 L 610, 556 L 617, 550 L 617, 547 L 608, 540 L 599, 546 L 598, 549 L 600, 552 L 598, 553 L 594, 554 L 590, 548 L 581, 545 L 576, 550 L 577, 553 L 575, 555 L 569, 552 L 563, 555 L 560, 558 L 560, 561 L 565, 564 L 566, 567 L 563, 566 L 557, 569 L 554, 569 L 554, 563 L 551, 561 L 545, 561 L 537, 550 L 532, 558 L 530, 560 L 527, 560 L 524, 559 L 522, 556 L 524, 553 L 521, 550 L 512, 550 L 513, 547 L 511, 544 L 505, 540 L 496, 542 L 494, 545 z"]
    }],
    location15_4446: [{
        paths: ["M 695, 524 L 695, 533 L 698, 542 L 703, 548 L 706, 548 L 706, 551 L 709, 553 L 733, 560 L 735, 563 L 737, 560 L 740, 561 L 741, 564 L 746, 560 L 752, 560 L 791, 573 L 800, 578 L 811, 587 L 817, 589 L 826, 589 L 838, 597 L 853, 597 L 871, 590 L 884, 579 L 896, 561 L 891, 552 L 897, 534 L 894, 516 L 868, 494 L 853, 490 L 844, 491 L 835, 489 L 832, 492 L 814, 492 L 781, 500 L 772, 504 L 757, 504 L 751, 502 L 730, 503 L 718, 501 L 703, 506 L 703, 518 L 697, 522 z"]
    }],
    location16_4446: [{
        paths: ["M 323, 635 L 335, 635 L 338, 637 L 341, 646 L 340, 649 L 331, 653 L 332, 655 L 344, 656 L 347, 659 L 359, 664 L 360, 667 L 351, 670 L 347, 673 L 363, 671 L 378, 679 L 381, 679 L 387, 683 L 399, 687 L 402, 690 L 420, 695 L 420, 698 L 417, 700 L 417, 703 L 429, 699 L 450, 700 L 455, 703 L 455, 709 L 491, 705 L 497, 702 L 508, 691 L 511, 691 L 520, 683 L 529, 679 L 531, 676 L 527, 670 L 518, 667 L 520, 661 L 511, 659 L 512, 653 L 518, 650 L 510, 645 L 503, 636 L 510, 627 L 511, 624 L 509, 615 L 512, 609 L 518, 604 L 520, 598 L 519, 595 L 513, 594 L 504, 589 L 492, 578 L 490, 572 L 484, 567 L 475, 565 L 463, 559 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 434, 569 L 428, 572 L 419, 582 L 419, 585 L 417, 587 L 405, 589 L 399, 594 L 395, 600 L 392, 600 L 383, 608 L 380, 605 L 375, 610 L 369, 612 L 361, 620 L 337, 624 L 333, 629 L 327, 632 z"]
    }],
    location17_4446: [{
        paths: ["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]
    }],
    location18_4446: [{
        paths: ["M 611, 685 L 617, 683 L 617, 668 L 620, 665 L 626, 663 L 631, 657 L 627, 633 L 627, 621 L 623, 612 L 623, 603 L 629, 595 L 630, 586 L 632, 583 L 640, 578 L 639, 575 L 636, 573 L 624, 571 L 623, 568 L 625, 565 L 623, 562 L 629, 559 L 631, 556 L 630, 550 L 633, 547 L 642, 549 L 660, 557 L 696, 562 L 708, 569 L 717, 572 L 722, 578 L 725, 579 L 727, 585 L 732, 590 L 738, 592 L 747, 592 L 771, 601 L 773, 604 L 769, 610 L 771, 616 L 780, 618 L 792, 618 L 793, 621 L 784, 625 L 783, 628 L 786, 634 L 789, 636 L 790, 645 L 787, 650 L 784, 650 L 772, 658 L 765, 667 L 756, 670 L 729, 687 L 727, 690 L 718, 692 L 712, 697 L 700, 701 L 682, 703 L 679, 705 L 664, 704 L 652, 699 L 631, 699 L 619, 691 L 616, 692 L 613, 690 L 613, 687 z"]
    }],
    location2_4446: [{
        paths: ["M 468, 243 L 489, 235 L 495, 225 L 492, 224 L 489, 228 L 492, 233 L 500, 228 L 515, 222 L 524, 224 L 533, 219 L 551, 219 L 560, 222 L 572, 223 L 578, 226 L 577, 229 L 583, 234 L 587, 240 L 587, 243 L 599, 254 L 599, 263 L 591, 274 L 579, 280 L 582, 281 L 581, 284 L 579, 285 L 574, 280 L 571, 281 L 573, 287 L 579, 290 L 587, 298 L 588, 301 L 574, 308 L 541, 307 L 507, 296 L 505, 297 L 505, 301 L 503, 300 L 500, 294 L 491, 286 L 485, 277 L 476, 270 L 474, 272 L 472, 271 L 471, 268 L 474, 267 L 475, 264 L 469, 246 z"]
    }],
    location3_4446: [{
        paths: ["M 602, 289 L 606, 295 L 609, 295 L 616, 301 L 618, 307 L 626, 314 L 628, 311 L 637, 311 L 637, 315 L 640, 315 L 649, 320 L 652, 323 L 652, 326 L 655, 327 L 646, 333 L 645, 336 L 653, 342 L 653, 347 L 657, 351 L 657, 354 L 663, 362 L 663, 368 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 649, 385 L 653, 394 L 656, 395 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 671, 390 L 673, 387 L 671, 384 L 673, 382 L 678, 385 L 678, 391 L 684, 392 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 380 L 705, 380 L 707, 383 L 708, 381 L 714, 379 L 719, 373 L 719, 370 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 771, 341 L 769, 329 L 775, 328 L 775, 325 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 305 L 793, 298 L 794, 295 L 788, 290 L 782, 288 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 787, 279 L 790, 281 L 791, 284 L 794, 284 L 797, 279 L 803, 277 L 804, 274 L 796, 265 L 797, 262 L 795, 259 L 786, 253 L 780, 246 L 774, 243 L 768, 246 L 768, 243 L 771, 238 L 774, 238 L 778, 242 L 779, 239 L 785, 236 L 787, 233 L 786, 230 L 777, 225 L 768, 230 L 767, 236 L 761, 232 L 755, 231 L 753, 225 L 745, 230 L 743, 225 L 734, 220 L 725, 225 L 721, 233 L 721, 237 L 713, 244 L 712, 242 L 716, 237 L 713, 225 L 706, 230 L 703, 228 L 697, 228 L 692, 236 L 686, 233 L 683, 234 L 675, 242 L 672, 239 L 673, 236 L 676, 234 L 675, 228 L 677, 226 L 674, 223 L 668, 222 L 662, 227 L 665, 229 L 663, 232 L 654, 232 L 648, 236 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 229 L 641, 235 L 651, 228 L 646, 222 L 640, 220 L 631, 225 L 627, 237 L 624, 237 L 618, 233 L 615, 235 L 611, 227 L 609, 228 L 605, 237 L 611, 245 L 617, 247 L 619, 250 L 620, 248 L 629, 243 L 635, 251 L 626, 249 L 621, 254 L 621, 258 L 615, 257 L 606, 262 L 604, 265 L 613, 271 L 613, 274 L 617, 274 L 617, 271 L 626, 269 L 624, 275 L 616, 283 L 607, 285 L 604, 288 z"]
    }],
    location4_4446: [{
        paths: ["M 173, 404 L 175, 407 L 187, 406 L 188, 409 L 195, 414 L 194, 417 L 188, 421 L 199, 421 L 198, 427 L 201, 429 L 204, 430 L 219, 426 L 219, 429 L 212, 434 L 222, 433 L 224, 435 L 222, 439 L 229, 439 L 238, 435 L 238, 438 L 231, 443 L 239, 442 L 241, 445 L 250, 450 L 253, 448 L 257, 454 L 266, 454 L 272, 456 L 273, 459 L 276, 461 L 279, 461 L 282, 457 L 294, 455 L 297, 453 L 303, 455 L 306, 452 L 315, 453 L 316, 450 L 322, 446 L 310, 442 L 316, 440 L 317, 437 L 332, 442 L 338, 440 L 344, 442 L 350, 438 L 356, 438 L 358, 436 L 347, 427 L 349, 426 L 364, 433 L 379, 433 L 382, 435 L 385, 433 L 388, 434 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 400, 427 L 403, 428 L 402, 422 L 396, 422 L 399, 425 L 406, 422 L 409, 424 L 418, 424 L 421, 423 L 423, 420 L 418, 411 L 415, 409 L 416, 407 L 419, 407 L 421, 405 L 409, 397 L 403, 396 L 380, 373 L 374, 371 L 368, 373 L 363, 378 L 360, 376 L 342, 359 L 341, 353 L 329, 338 L 318, 346 L 315, 355 L 304, 366 L 294, 354 L 285, 351 L 281, 342 L 278, 339 L 277, 330 L 275, 327 L 265, 330 L 261, 336 L 249, 344 L 242, 356 L 227, 362 L 224, 368 L 215, 374 L 210, 382 L 201, 386 L 193, 394 L 187, 395 L 179, 403 L 176, 400 L 174, 403 z"]
    }],
    location5_4446: [{
        paths: ["M 465, 372 L 467, 378 L 479, 383 L 488, 391 L 497, 391 L 512, 396 L 521, 405 L 530, 411 L 536, 409 L 548, 409 L 563, 403 L 578, 403 L 602, 393 L 611, 393 L 641, 383 L 617, 383 L 608, 381 L 572, 382 L 548, 374 L 538, 362 L 538, 347 L 534, 341 L 528, 338 L 522, 332 L 522, 329 L 510, 335 L 492, 340 L 489, 339 L 483, 343 L 480, 346 L 479, 355 L 474, 361 L 468, 365 L 466, 371 z"]
    }],
    location6_4446: [{
        paths: ["M 523, 330 L 527, 336 L 536, 342 L 538, 345 L 539, 348 L 537, 351 L 537, 357 L 541, 366 L 550, 374 L 556, 375 L 562, 379 L 568, 381 L 604, 380 L 616, 383 L 634, 381 L 640, 383 L 655, 379 L 658, 376 L 658, 370 L 654, 361 L 656, 355 L 644, 345 L 642, 330 L 639, 324 L 633, 318 L 627, 316 L 615, 316 L 609, 313 L 600, 315 L 591, 313 L 576, 313 L 564, 318 L 558, 318 L 552, 322 L 534, 325 L 525, 329 z"]
    }],
    location7_4446: [{
        paths: ["M 708, 386 L 711, 387 L 722, 399 L 721, 402 L 718, 404 L 720, 407 L 720, 413 L 726, 418 L 731, 410 L 737, 409 L 746, 403 L 750, 398 L 756, 396 L 768, 388 L 774, 382 L 777, 376 L 785, 369 L 786, 366 L 792, 362 L 798, 366 L 820, 402 L 826, 408 L 838, 416 L 859, 409 L 867, 401 L 885, 389 L 888, 389 L 897, 383 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 886, 351 L 880, 349 L 876, 337 L 869, 328 L 854, 317 L 849, 311 L 847, 305 L 841, 299 L 835, 297 L 821, 284 L 810, 291 L 808, 297 L 798, 309 L 786, 330 L 780, 335 L 774, 343 L 771, 343 L 758, 358 L 758, 364 L 740, 351 L 730, 362 L 721, 369 L 711, 384 z"]
    }],
    location8_4446: [{
        paths: ["M 153, 487 L 156, 499 L 160, 505 L 174, 519 L 174, 522 L 171, 525 L 173, 543 L 171, 545 L 168, 545 L 168, 548 L 170, 551 L 174, 549 L 174, 552 L 179, 561 L 182, 558 L 194, 555 L 218, 557 L 227, 552 L 239, 548 L 248, 548 L 263, 540 L 281, 541 L 284, 540 L 284, 534 L 296, 528 L 299, 522 L 297, 516 L 290, 507 L 278, 497 L 278, 491 L 242, 479 L 233, 474 L 221, 470 L 212, 469 L 200, 465 L 188, 465 L 176, 469 L 170, 473 L 167, 473 L 161, 477 L 155, 485 z"]
    }],
    location9_4446: [{
        paths: ["M 247, 468 L 248, 474 L 255, 481 L 267, 487 L 276, 489 L 279, 492 L 278, 495 L 283, 501 L 289, 505 L 298, 517 L 299, 526 L 308, 525 L 317, 529 L 329, 522 L 339, 511 L 345, 508 L 360, 506 L 372, 511 L 384, 511 L 390, 509 L 408, 510 L 420, 506 L 419, 503 L 425, 499 L 431, 502 L 434, 499 L 432, 496 L 433, 493 L 430, 491 L 432, 488 L 431, 485 L 428, 483 L 407, 482 L 383, 468 L 359, 462 L 347, 461 L 344, 463 L 329, 463 L 317, 465 L 316, 468 L 310, 471 L 298, 471 L 295, 469 L 292, 470 L 277, 467 L 268, 467 L 265, 469 L 250, 467 z"]
    }],
    location1_4536: [{
        paths: ["M 267, 340 L 278, 331 L 276, 328 L 273, 327 L 272, 324 L 278, 319 L 273, 312 L 278, 300 L 281, 303 L 283, 309 L 285, 307 L 285, 304 L 291, 299 L 297, 298 L 298, 296 L 295, 296 L 292, 293 L 286, 295 L 284, 298 L 281, 297 L 274, 290 L 274, 287 L 277, 284 L 286, 281 L 296, 290 L 302, 286 L 308, 287 L 311, 281 L 314, 280 L 317, 283 L 326, 284 L 332, 282 L 332, 279 L 321, 277 L 318, 275 L 320, 269 L 319, 266 L 321, 263 L 330, 262 L 342, 270 L 345, 267 L 351, 267 L 357, 271 L 360, 269 L 351, 265 L 349, 262 L 350, 259 L 362, 255 L 371, 261 L 380, 263 L 382, 262 L 385, 253 L 388, 249 L 391, 256 L 396, 251 L 394, 248 L 400, 243 L 409, 246 L 407, 252 L 410, 257 L 411, 251 L 414, 248 L 420, 245 L 429, 247 L 428, 244 L 432, 238 L 438, 238 L 441, 240 L 442, 243 L 440, 246 L 442, 249 L 448, 251 L 451, 250 L 455, 244 L 459, 256 L 457, 259 L 448, 264 L 449, 267 L 458, 263 L 464, 266 L 467, 269 L 469, 281 L 475, 284 L 481, 290 L 481, 293 L 478, 296 L 475, 296 L 471, 304 L 477, 310 L 478, 316 L 481, 319 L 483, 325 L 482, 331 L 486, 340 L 485, 343 L 479, 345 L 476, 344 L 472, 339 L 472, 357 L 469, 363 L 463, 369 L 469, 381 L 465, 393 L 456, 399 L 464, 404 L 468, 410 L 460, 417 L 457, 417 L 455, 414 L 452, 414 L 448, 408 L 442, 406 L 439, 406 L 435, 412 L 432, 412 L 428, 415 L 425, 410 L 422, 410 L 417, 404 L 413, 402 L 411, 396 L 412, 392 L 418, 392 L 420, 398 L 419, 402 L 416, 401 L 414, 396 L 409, 392 L 406, 395 L 395, 382 L 389, 383 L 388, 386 L 377, 377 L 377, 372 L 374, 372 L 369, 376 L 360, 374 L 357, 368 L 359, 365 L 353, 366 L 355, 369 L 353, 372 L 350, 371 L 349, 377 L 346, 377 L 344, 369 L 338, 368 L 332, 371 L 330, 374 L 327, 374 L 318, 368 L 315, 369 L 303, 359 L 297, 357 L 295, 354 L 288, 352 L 291, 351 L 290, 356 L 285, 359 L 285, 362 L 282, 362 L 280, 360 L 281, 357 L 279, 354 L 276, 354 L 275, 345 L 269, 343 z"]
    }],
    location10_4536: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_4536: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_4536: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_4536: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_4536: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_4536: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_4536: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_4536: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_4536: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_4536: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_4536: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_4536: [{
        paths: ["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]
    }],
    location5_4536: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_4536: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_4536: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_4536: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_4536: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_5346: [{
        paths: ["M 271, 324 L 272, 327 L 278, 329 L 278, 338 L 281, 341 L 281, 344 L 287, 342 L 293, 343 L 291, 352 L 302, 360 L 306, 356 L 315, 351 L 318, 346 L 321, 345 L 326, 339 L 329, 339 L 340, 351 L 344, 359 L 350, 358 L 352, 361 L 358, 364 L 357, 367 L 360, 373 L 366, 375 L 372, 371 L 378, 372 L 390, 382 L 401, 394 L 407, 396 L 416, 403 L 422, 401 L 424, 403 L 427, 403 L 430, 405 L 432, 411 L 435, 413 L 435, 407 L 441, 405 L 444, 407 L 447, 406 L 450, 412 L 456, 415 L 458, 418 L 468, 410 L 469, 407 L 457, 399 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 461, 372 L 460, 369 L 466, 366 L 471, 361 L 472, 349 L 469, 340 L 475, 338 L 476, 332 L 470, 327 L 464, 326 L 467, 324 L 467, 321 L 470, 316 L 476, 313 L 478, 310 L 472, 304 L 471, 301 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 466, 267 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 254 L 455, 245 L 453, 245 L 452, 248 L 449, 250 L 443, 250 L 440, 244 L 442, 241 L 440, 238 L 434, 237 L 428, 241 L 430, 244 L 428, 246 L 419, 244 L 411, 251 L 411, 254 L 409, 255 L 407, 249 L 409, 247 L 407, 244 L 398, 244 L 395, 246 L 395, 249 L 398, 251 L 393, 254 L 390, 254 L 388, 251 L 386, 251 L 381, 263 L 372, 261 L 363, 254 L 357, 254 L 349, 261 L 351, 264 L 357, 267 L 357, 270 L 351, 266 L 345, 266 L 343, 269 L 334, 266 L 332, 263 L 323, 261 L 320, 264 L 320, 270 L 317, 272 L 319, 275 L 324, 277 L 323, 280 L 326, 281 L 332, 278 L 332, 281 L 326, 283 L 317, 282 L 312, 279 L 309, 285 L 303, 285 L 294, 291 L 294, 297 L 285, 303 L 285, 306 L 283, 308 L 278, 299 L 274, 308 L 274, 314 L 277, 315 L 278, 318 L 276, 321 L 273, 322 z"]
    }],
    location10_5346: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_5346: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_5346: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_5346: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_5346: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_5346: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_5346: [{
        paths: ["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]
    }],
    location17_5346: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_5346: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_5346: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_5346: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_5346: [{
        paths: ["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]
    }],
    location5_5346: [{
        paths: ["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]
    }],
    location6_5346: [{
        paths: ["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]
    }],
    location7_5346: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_5346: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_5346: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location1_5436: [{
        paths: ["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]
    }],
    location10_5436: [{
        paths: ["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]
    }],
    location11_5436: [{
        paths: ["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]
    }],
    location12_5436: [{
        paths: ["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]
    }],
    location13_5436: [{
        paths: ["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]
    }],
    location14_5436: [{
        paths: ["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]
    }],
    location15_5436: [{
        paths: ["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]
    }],
    location16_5436: [{
        paths: ["M 322, 635 L 337, 636 L 341, 645 L 341, 648 L 330, 655 L 345, 657 L 360, 666 L 345, 673 L 351, 674 L 360, 671 L 372, 675 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 418, 703 L 436, 699 L 454, 701 L 454, 707 L 456, 710 L 483, 707 L 495, 703 L 501, 699 L 509, 691 L 512, 691 L 520, 684 L 529, 680 L 532, 674 L 518, 666 L 519, 660 L 510, 658 L 513, 652 L 517, 649 L 514, 648 L 503, 636 L 511, 624 L 509, 618 L 510, 612 L 519, 603 L 520, 597 L 503, 588 L 491, 577 L 492, 574 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 417, 587 L 405, 589 L 395, 599 L 392, 599 L 384, 607 L 381, 606 L 376, 609 L 373, 608 L 359, 620 L 338, 623 L 335, 625 L 335, 628 L 326, 632 z"]
    }],
    location17_5436: [{
        paths: ["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]
    }],
    location18_5436: [{
        paths: ["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]
    }],
    location2_5436: [{
        paths: ["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]
    }],
    location3_5436: [{
        paths: ["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]
    }],
    location4_5436: [{
        paths: ["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]
    }],
    location5_5436: [{
        paths: ["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]
    }],
    location6_5436: [{
        paths: ["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]
    }],
    location7_5436: [{
        paths: ["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]
    }],
    location8_5436: [{
        paths: ["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]
    }],
    location9_5436: [{
        paths: ["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]
    }],
    location19: [{
        paths: ["M 231, 252 L 300, 289 L 315, 317 L 357, 345 L 313, 395 L 295, 356 L 214, 350 L 163, 317 z"]
    }],
    location20: [{
        paths: ["M 368, 407 L 424, 434 L 510, 434 L 516, 457 L 452, 482 L 381, 539 L 329, 516 L 318, 455 z"]
    }],
    location21: [{
        paths: ["M 157, 340 L 203, 366 L 280, 376 L 299, 407 L 281, 441 L 189, 451 L 135, 442 z"]
    }],
    location22: [{
        paths: ["M 136, 461 L 193, 469 L 278, 462 L 285, 517 L 255, 516 L 154, 562 z"]
    }],
    location23: [{
        paths: ["M 377, 388 L 413, 347 L 467, 329 L 499, 350 L 511, 382 L 527, 395 L 512, 423 L 435, 423 z"]
    }],
    location24: [{
        paths: ["M 298, 243 L 415, 207 L 455, 244 L 482, 264 L 491, 282 L 436, 297 L 387, 321 L 349, 298 L 339, 266 z"]
    }],
    location25: [{
        paths: ["M 434, 203 L 578, 190 L 580, 220 L 559, 241 L 488, 250 L 463, 221 z"]
    }],
    location26: [{
        paths: ["M 605, 194 L 721, 216 L 706, 299 L 621, 274 L 514, 282 L 506, 261 L 568, 254 L 597, 229 z"]
    }],
    location27: [{
        paths: ["M 533, 312 L 601, 305 L 677, 321 L 686, 361 L 666, 383 L 629, 366 L 566, 378 L 538, 347 z"]
    }],
    location28: [{
        paths: ["M 743, 220 L 849, 268 L 779, 287 L 739, 317 L 721, 310 L 733, 261 L 730, 229 z"]
    }],
    location29: [{
        paths: ["M 881, 297 L 925, 348 L 850, 380 L 812, 385 L 787, 348 L 768, 336 L 799, 316 L 848, 308 z"]
    }],
    location30: [{
        paths: ["M 936, 365 L 968, 440 L 824, 442 L 819, 402 L 872, 390 z"]
    }],
    location31: [{
        paths: ["M 964, 455 L 937, 532 L 860, 489 L 817, 489 L 827, 456 L 884, 461 z"]
    }],
    location32: [{
        paths: ["M 703, 394 L 748, 360 L 778, 400 L 788, 454 L 770, 490 L 707, 532 L 664, 501 L 706, 483 L 728, 442 L 723, 414 z"]
    }],
    location33: [{
        paths: ["M 520, 115 L 335, 132 L 197, 179 L 90, 260 L 39, 341 L 29, 448 L 41, 571 L 120, 655 L 246, 747 L 358, 794 L 545, 810 L 664, 810 L 847, 766 L 997, 679 L 1104, 593 L 1116, 455 L 1081, 344 L 993, 246 L 843, 181 L 709, 136 L 525, 115 L 524, 169 L 701, 182 L 877, 237 L 1001, 326 L 1050, 418 L 1053, 524 L 992, 627 L 846, 722 L 703, 764 L 556, 765 L 386, 757 L 261, 711 L 145, 626 L 89, 553 L 77, 418 L 117, 329 L 199, 246 L 280, 200 L 421, 166 L 521, 169 z"]
    }],
    location34: [{
        paths: ["M 920, 547 L 829, 614 L 777, 568 L 741, 553 L 780, 531 L 808, 508 L 847, 506 L 878, 528 z"]
    }],
    location35: [{
        paths: ["M 539, 484 L 572, 498 L 616, 502 L 666, 549 L 607, 553 L 509, 571 L 431, 555 L 469, 532 L 487, 507 z"]
    }],
    location36: [{
        paths: ["M 295, 534 L 356, 570 L 342, 597 L 300, 615 L 265, 640 L 211, 659 L 146, 599 L 186, 567 L 249, 542 z"]
    }],
    location37: [{
        paths: ["M 259, 682 L 331, 652 L 341, 634 L 386, 615 L 396, 582 L 438, 597 L 442, 650 L 467, 697 L 456, 738 L 399, 749 z"]
    }],
    location38: [{
        paths: ["M 594, 589 L 663, 583 L 713, 569 L 726, 579 L 722, 616 L 690, 652 L 632, 660 L 598, 632 z"]
    }],
    location39: [{
        paths: ["M 748, 593 L 815, 658 L 855, 672 L 725, 740 L 703, 714 L 684, 668 L 713, 665 L 742, 635 z"]
    }],
    location40: [{
        paths: ["M 461, 599 L 513, 607 L 569, 597 L 577, 641 L 608, 671 L 656, 677 L 680, 710 L 491, 731 L 490, 687 L 465, 644 z"]
    }],
    location42: [{
        paths: ["M 1116, 755 L 1150, 788 L 1150, 794 L 1151, 802 L 1054, 828 L 1001, 754 L 1065, 746 z"]
    }],
    location43: [{
        paths: ["M 975, 760 L 1035, 840 L 1002, 849 L 928, 850 L 900, 835 L 885, 812 L 910, 786 z"]
    }],
    g31_15_normal: [{
        size: {
            h: 340,
            w: 1108
        },
        paths: ["M 1093.4251,339.95653 1091.5,309.5 l 0,-6 -1,0 0,-5 -1,0 0,-5 -1,0 0,-4 -1,0 0,-3 -1,0 c -0.7,-3.7 -1.3,-7.3 -2,-11 l -1,0 c -0.3,-3 -0.7,-6 -1,-9 l -1,0 0,-3 -1,0 0,-2 -1,0 c -0.7,-3 -1.3,-6 -2,-9 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 0,-3 -1,0 c -0.7,-2 -1.3,-4 -2,-6 l -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-3 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 c -0.3,-1 -0.7,-2 -1,-3 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1 -0.7,-2 -1,-3 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -4.7,-4.3 -9.3,-8.7 -14,-13 -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 c -1,-0.7 -2,-1.3 -3,-2 l 0,-3 c 2.8,-0.7 3.6,-1.9 6,-3 -0.2,-2.6 -0.1,-3.4 -1,-5 l -1,0 0,-15 c 2,-0.6 0.9,0.1 2,-1 l 1,0 c -0.8,-3.3 -12.7,-15.2 -16,-16 -0.8,-3.2 -3.8,-6.2 -7,-7 -1.2,-4.1 -1.7,-1.8 -4,-4 -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 0,-2 c -2.3,-1.7 -4.7,-3.3 -7,-5 -2,-2.3 -4,-4.7 -6,-7 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 -1,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -4.8,-2.7 -14.5,-0.5 -21,-1 -1.7,-0.3 -3.3,-0.7 -5,-1 0,0 -0.7,1.5 -3,1 l 0,-1 -4,0 0,1 -3,0 c -2.1,-0.1 -2,-1 -2,-1 -3.4,-0.9 -6.7,0.6 -9,1 -0.6,2 0.1,0.9 -1,2 l 0,1 -4,0 c -0.7,1 -1.3,2 -2,3 -1.7,0.3 -3.3,0.7 -5,1 -0.7,1 -1.3,2 -2,3 l -3,0 c -3.2,0.6 -4.6,1.7 -6,4 -4.2,-0.5 -7.7,-1.4 -11,-3 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -2,0 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 c -2.3,-0.3 -4.7,-0.7 -7,-1 l 0,-1 -5,0 0,-1 -3,0 0,-1 c -2.7,-0.3 -5.3,-0.7 -8,-1 l 0,-1 -4,0 0,-1 -4,0 0,-1 -4,0 0,-1 -3,0 0,-1 c -4.3,-0.7 -8.7,-1.3 -13,-2 l 0,-1 -3,0 0,-1 c -4,-0.3 -8,-0.7 -12,-1 -8,-2.4 -18.1,-3.6 -26,-6 -4.3,-0.3 -8.7,-0.7 -13,-1 l 0,-1 c -5,-0.3 -10,-0.7 -15,-1 -5.6,-1.7 -14.4,-2.3 -20,-4 l -12,0 0,-1 -14,0 0,-1 -15,0 0,-1 -19,0 0,-1 c -1.7,0.3 -3.3,0.7 -5,1 0,0 -0.6,-1.4 -3,-1 -0.2,0 -0.4,1.3 -2,1 -9.4,-1.7 -31.8,-2.6 -41,0 l -13,0 0,1 c -10,0.3 -20,0.7 -30,1 l 0,1 c -5.3,0.3 -10.7,0.7 -16,1 l 0,1 c -2.4,0.6 -2.7,-1.1 -4,-1 l 0,1 -7,0 0,1 -7,0 0,1 -7,0 0,1 -8,0 0,1 -4,0 0,1 -7,0 0,1 -6,0 0,1 -6,0 0,1 -6,0 0,1 -4,0 0,1 c -3.3,0.3 -6.7,0.7 -10,1 l 0,1 -4,0 0,1 -4,0 0,1 -4,0 0,1 c -3,0.3 -6,0.7 -9,1 l 0,1 -4,0 0,1 -6,0 0,1 -3,0 0,1 -4,0 0,1 -2,0 0,1 -5,0 0,1 -3,0 0,1 -5,0 0,1 -4,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -1.7,0.3 -3.3,0.7 -5,1 l 0,1 c -4.9,-0.4 -4.4,-1.2 -8,-3 l 0,-1 -5,0 c -0.7,-1 -1.3,-2 -2,-3 -1.7,-0.3 -3.3,-0.7 -5,-1 -0.7,-1 -1.3,-2 -2,-3 l -4,0 c -1,-1.3 -2,-2.7 -3,-4 -14.3,0.3 -28.7,0.7 -43,1 -3.1,3.7 -8.6,4.6 -10,10 -3.5,0.9 -9.3,7.4 -12,10 -0.3,0.7 -0.7,1.3 -1,2 -2.9,2.1 -4.9,1.9 -6,6 -4.2,1.1 -5.4,4.4 -8,7 -4.4,4.4 -9,8.1 -13,13 -1,0.3 -2,0.7 -3,1 -1.8,1.3 -3.4,4.3 -4,7 2.7,0.7 2.3,1.4 5,2 l 0,13 c -1,0.3 -2,0.7 -3,1 0.2,5.1 1.5,5.3 5,7 l 0,3 c -5.7,3 -11.3,6 -17,9 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -1,1.3 -2,2.7 -3,4 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -1,1.3 -2,2.7 -3,4 -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.7 -2.7,3.3 -4,5 l -2,0 c -3,3.3 -6,6.7 -9,10 -7,7 -14.1,12.9 -20,21 -2.3,2 -4.7,4 -7,6 l 0,2 c -1.7,1.3 -3.3,2.7 -5,4 l 0,2 c -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 -2,2 0,2 -1,0 0,2 -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,2 -1,0 c -0.3,1.3 -0.7,2.7 -1,4 l -1,0 0,3 -1,0 0,2 -1,0 0,2 -1,0 c -0.7,2 -1.3,4 -2,6 l -1,0 c -0.3,2 -0.7,4 -1,6 l -1,0 0,2 -1,0 0,3 -1,0 0,3 -1,0 0,4 -1,0 0,4 -1,0 0,3 -1,0 c -0.3,2.3 -0.7,4.7 -1,7 l -1,0 c -0.3,2.7 -0.7,5.3 -1,8 l -1,0 0,4 -1,0 0,5 -1,0 0,5 -1,0 0,6 -1,0 0,15 c 0,0.1 -1.4,0.8 -1,3 0,0 1.5,0.9 1,3 l -1,6.34004 -1.308263,3.37077 26.509534,0.20127 c 0.3,-1.7 -0.406991,-1.89111 -0.106991,-3.59111 L 51.5,336.5 l 0,-8 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-5 c 1.3,-0.7 2.7,-1.3 4,-2 l 0,-4 1,0 0,-6 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-4 c 1,-0.7 2,-1.3 3,-2 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 2,0 c 1.7,-3 3.3,-6 5,-9 l 1,0 0,-4 3,0 0,-2 3,0 c 1.1,-2.3 1.8,-3.8 4,-5 l 0,-4 c 5.9,-1.2 12.8,-9.1 15,-14 l 2,0 0,-2 4,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 2,0 0,-3 c 4.3,-0.6 3.4,-2.1 6,-4 l 0,-1 c 1,0.3 2,0.7 3,1 0,0 2.5,-2.7 3,-3 l 0,-3 3,0 0,-2 4,0 0,-2 3,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-3 c 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 3,-6 3,0 0,-1 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 2,-0.7 3,-1 0.7,-1 1.3,-2 2,-3 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 c 2.2,-1.4 1.4,0.4 3,-2 4.2,0.1 5.8,0.2 8,2 0.3,0.7 0.7,1.3 1,2 1.7,0.8 3,-1 3,-1 1,0.3 2,0.7 3,1 0.7,2.7 1.4,2.3 2,5 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 l 0,-3 c 3.3,-0.7 3.8,-1.9 8,-2 0.9,-1.1 -0.1,-0.2 1,-1 l 0,-14 c 0.6,-1.1 4.1,-1.3 5,-2 1.2,-1 0,-2.7 1,-4 l 1,0 0,-2 1,0 0,5 1,0 c 1.3,1.7 2.9,2.2 4,4 1.7,-0.3 3.3,-0.7 5,-1 l 0,-45 c -1,-0.3 -2,-0.7 -3,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1,-0.7 -2,-1.3 -3,-2 1.4,-5.4 5.6,-8.5 8,-13 l 2,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 c 0.9,2.6 -0.1,15 -1,16 l 0,6 c 0.2,0.4 5.2,3.2 6,4 1.3,1.7 2.7,3.3 4,5 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 l 0,1 c 1,0.3 2,0.7 3,1 1.1,1.1 0,0.4 2,1 0.8,-1.3 0.7,-1.2 2,-2 l 0,-13 c 2,0.3 4,0.7 6,1 l 0,2 2,0 0,3 c 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 0.8,-3.2 2.3,-3.8 5,-5 l 0,-1 c 1,0.3 2,0.7 3,1 l 0,-9 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 3,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 0,-1 4,0 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 l 1,0 0,-2 c 1,0.7 2,1.3 3,2 0.7,0.1 7.1,-1.5 8,-2 0.3,-0.7 0.7,-1.3 1,-2 2,-1 3.6,0.5 5,-1 0.3,-1 0.7,-2 1,-3 3.3,0.3 6.7,0.7 10,1 l 0,-1 3,0 0,-1 5,0 c 0.3,-1 0.7,-2 1,-3 1.1,-0.8 1.8,2 2,2 1,-0.3 2,-0.7 3,-1 l 0,-2 c 2,0.3 4,0.7 6,1 l 0,-1 2,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-3 c 1,0.8 1,1.2 2,2 l 0,1 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,0.3 2,0.7 3,1 l 0,-2 c 2,0.3 6.1,1.3 9,0 0.3,-0.7 0.7,-1.3 1,-2 l 8,0 c 6.2,-1.9 14.9,-3.2 21,-5 l 7,0 0,-1 c 4.3,-0.3 8.7,-0.7 13,-1 l 0,-1 c 0.9,0 3.6,1.9 6,1 l 0,-1 2,0 0,-1 9,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.7,0.3 3.3,0.7 5,1 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 10,2.2 13,1 0.3,-0.7 0.7,-1.3 1,-2 l 1,1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 c 1.7,-0.3 1.7,0.9 2,1 l 9,0 c 6.3,-0.3 12.7,-0.7 19,-1 l 12,0 c 0.3,-1 0.7,-2 1,-3 1,0.7 2,1.3 3,2 1,-0.6 -0.9,-0.8 1,-2 l 0,2 c 2.4,-0.6 2.2,-1.1 4,-2 l 0,2 7,0 0,1 52,0 c 5.9,1.7 16,-0.7 22,1 l 0,1 8,0 c 1.9,0.2 2,1 2,1 4.3,-0.3 8.7,-0.7 13,-1 l 0,2 c 16.2,3.2 36.7,3.7 51,9 l 6,0 0,1 9,0 0,1 6,0 0,1 4,0 0,1 c 2.7,0.9 7.8,1 9,0 l 10,0 3,6 7,0 0,1 3,0 0,1 4,0 0,1 c 1.2,0.2 1.8,-1.9 4,-1 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 2,0 0,1 c 1.7,0.5 1.8,-0.9 2,-1 3.8,-0.8 3.1,1.6 4,2 l 5,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 4,0 0,1 3,0 c 4,1.6 5.8,3 12,3 l 0,2 1,0 0,-1 1,0 c 1.6,0.4 1.3,1.6 2,2 l 2,0 0,1 3,0 0,1 2,0 0,1 3,0 0,1 3,0 0,1 3,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 c 2.6,1.3 4.5,3.4 8,4 l 0,8 c 4.4,0.3 4,1.5 8,2 l 0,3 c 2,-0.6 0.9,0.1 2,-1 l 1,0 0,3 c 2.7,-0.8 3.1,-1.6 5,-3 l 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,13 c 1.7,0.3 3.3,0.7 5,1 1.1,-1.3 2.7,-1.8 4,-3 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 0,-1 c 1,-0.7 2,-1.3 3,-2 l 0,-2 1,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-6 -1,0 c -1.7,-5.9 0.6,-14.3 1,-19 l 3,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 0,2 c 0.7,0.3 1.3,0.7 2,1 1.4,2.1 2.5,4.3 3,7 l 1,0 c -1.8,2.9 -5.7,5.7 -9,7 l 0,45 c 1.3,0.1 4,1 4,1 l 0,-1 2,0 0,-1 c 1,-0.3 2,-0.7 3,-1 0.3,-1.3 0.7,-2.7 1,-4 3.7,1 5.1,3.4 8,5 -0.1,3.9 -1,11.8 1,14 l 0,1 c 1.4,-0.8 2,-1 4,0 l 0,1 3,0 0,1 1,0 0,3 c 1,-0.3 2,-0.7 3,-1 0.3,1 0.7,2 1,3 l 2,0 c 0.6,-2 -0.1,-0.9 1,-2 3.1,-5.1 3.3,-0.8 7,-3 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.7 2.7,-1.3 4,-2 1.6,2.4 1.1,0.6 3,2 1,1.3 2,2.7 3,4 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 c 1.3,0.3 2.7,0.7 4,1 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 0,1 6,0 0,1 1,0 c 0.7,2 1.3,4 2,6 2.6,0.5 5.6,1.3 7,3 1.4,1.8 -1,1 2,3 l 0,2 c 3.5,1 5.7,3.8 8,6 0.3,0.7 0.7,1.3 1,2 1.3,0.3 2.7,0.7 4,1 l 0,1 1,0 c 1.9,2.3 -1.1,1.8 3,3 0.6,2.4 0.3,1.9 2,3 0.6,2 -0.1,0.9 1,2 l 0,-2 c 1,0.3 2,0.7 3,1 l 0,5 c 1.7,0.3 3.3,0.7 5,1 l 0,3 1,0 0,1 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,1.7 0.7,3.3 1,5 l 1,0 c 1.3,1.7 2.7,3.3 4,5 l 3,0 0,4 c 4.9,1.3 2.8,2.7 5,6 1,0.7 2,1.3 3,2 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.3,1.7 0.7,3.3 1,5 l 1,0 0,2 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 0,2 1,0 0,3 1.7116,3.41569 c 0.3,1.7 0.9135,3.15768 1.2135,4.85768 l 23.1423,-4e-5 z"]
    }, {
        size: {
            h: 420,
            w: 1108
        },
        offset: {
            y: 340
        },
        z: 43,
        paths: ["m 135.5,140.5 c 9,0 20.7,-0.9 28,1 3,-0.3 6,-0.7 9,-1 l 0,1 8,0 c 2.3,3.7 6,3.3 8,6 l 0,2 c 0.7,0.3 1.3,0.7 2,1 1.7,2 3.3,4 5,6 1,0.3 2,0.7 3,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 c 3,3.3 6,6.7 9,10 l 2,0 c 0.7,1 1.3,2 2,3 0.7,0.3 1.3,0.7 2,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 3.1,2.3 4.8,1.5 6,6 4,1 4.4,3.8 7,6 -0.3,0.6 -2,2 -2,2 l 0,15 c 3.2,0.8 2.9,1.2 3,5 -2.3,1.3 -4.7,2.7 -7,4 0.3,1 0.7,2 1,3 3.3,2 6.7,4 10,6 1.7,0.3 3.3,0.7 5,1 l 0,1 2,0 0,1 3,0 0,1 3,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 3,0 0,1 2,0 0,1 c 3.3,0.7 6.7,1.3 10,2 l 0,1 3,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 4,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 4,0 0,1 5,0 0,1 3,0 0,1 3,0 0,1 c 3,0.3 6,0.7 9,1 l 0,1 3,0 0,1 c 4.3,0.7 8.7,1.3 13,2 l 0,1 c 3,0.3 6,0.7 9,1 l 0,1 7,0 0,1 4,0 0,1 4,0 0,1 4,0 0,1 7,0 c 15.4,4.8 34.1,3.8 48,8 l 14,0 c 14.5,4.2 34,3.6 52,4 5.9,0.1 17,2.9 24,1 l 0,-1 c 3,0.3 6,0.7 9,1 l 9,0 0,-1 1,0 c 2.7,-0.3 3,1 3,1 l 13,0 0,-1 c 1,0.3 2,0.7 3,1 l 27,0 0,-1 19,0 0,-1 1,0 10,0 0,-1 10,0 0,-1 11,0 c 8.8,-2.6 20.5,-2.4 29,-5 8,-0.7 16,-1.3 24,-2 10,-3 22.2,-4.8 32,-8 3.7,-0.3 7.3,-0.7 11,-1 l 0,-1 4,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,-1 3,0 0,-1 3,0 0,-1 c 2.7,-0.3 5.3,-0.7 8,-1 l 0,-1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 3,-0.7 6,-1.3 9,-2 l 0,-1 2,0 0,-1 c 4.3,-1 8.7,-2 13,-3 l 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 0,-6 c -2,-0.7 -4,-1.3 -6,-2 l 0,-5 c 1,-0.3 2,-0.7 3,-1 l 0,-14 -1,0 c -0.8,-1.5 -0.7,-1.7 -1,-4 3.7,-3.3 7.3,-6.7 11,-10 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 2,-2 0,-2 1,0 c 0.7,-1 1.3,-2 2,-3 1,-0.3 2,-0.7 3,-1 4,-4.3 8,-8.7 12,-13 l 2,0 c 1,-1.7 2,-3.3 3,-5 l 2,0 c 4,-4.3 8,-8.7 12,-13 l 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 18,0 0,-1 7,0 0,1 1,0 0,-1 18,0 c 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 l 0,1 c 1.5,0.9 2.4,0.8 5,1 1.3,-5 6.8,-7.7 10,-11 4.3,-4.3 7.4,-9 11,-14 1,-0.7 2,-1.3 3,-2 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1,-0.7 2,-1.3 3,-2 0.7,-2 1.3,-4 2,-6 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 2,-2 0,-2 1,0 0,-2 1,0 0,-2 1,0 0,-2 2,-2 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 0,-3 1,0 0,-3 1,0 0,-3 1,0 0,-4 1,0 0,-3 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l 1,0 c 0.3,-3.3 0.7,-6.7 1,-10 l 1,0 0,-9 c 0.3,-3.3 0.7712,-7.26928 1.0712,-10.56928 l -1.4982,-5.05237 c -0.3,-1.3 -1.2655,-2.13071 -1.5654,-3.43071 l 24.6441,0.0712 0.3596,3.34829 c 0.4,4.4 4.1887,12.03292 3.9887,17.63292 -0.3,1 -0.7,2 -1,3 l 1,0 c 0.3,2 0.7,4 1,6 l 1,0 0,7 -1,0 c 0.3,2.7 0.7,5.3 1,8 l -2,0 c 2.8,7.1 4,13.5 4,24 l -3,0 c 1.3,4 2.7,8 4,12 -0.3,4 -0.7,8 -1,12 -3.8,0 -6.3,0.5 -9,1 0.9,4.9 2.7,10.5 4,15 -0.3,4 -0.7,8 -1,12 l -12,0 c -0.8,1.1 0.1,0.1 -1,1 -0.7,3.3 -1.3,6.7 -2,10 l 1,0 c 1,6.7 2,13.3 3,20 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1.7 -0.7,3.3 -1,5 -4.6,-0.4 -6.4,-1.9 -12,-2 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,3 -1,0 0,2 -1,0 c -0.6,2.1 1,3 1,3 0.7,5 1.3,10 2,15 l -1,0 c -1,4 -4.1,4.9 -6,8 -4.1,-0.8 -5.7,-3.1 -10,-4 -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.1 -1.1,3.7 -2,5 -0.7,0.3 -1.3,0.7 -2,1 -3.2,3.4 -4,5 -4,12 l 1,0 0,6 -1,0 0,2 -1,0 c -1.7,2 -3.3,4 -5,6 l -2,0 0,-1 c -1.7,-0.3 -3.3,-0.7 -5,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.5 -1.3,0.5 -2,1 -7.1,1.9 -5.2,15.1 -5,24 -4.5,1.1 -7.5,4.8 -12,6 l 0,2 c -2.8,-0.7 -2.2,-0.3 -3,-3 -3.4,-0.9 -1.9,-1.3 -4,-3 -3.7,5 -2.8,-0.9 -7,0 l 0,1 c -2,0.7 -4,1.3 -6,2 l 0,1 c -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -3,0.3 -6,0.7 -9,1 l 0,-1 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.7,-1 -1.3,-2 -2,-3 -1,-0.3 -2,-0.7 -3,-1 -0.4,7.3 -1,16.3 -1,25 l 0,8 1,0 0,7 -2,0 0,1 -2,0 0,1 c -0.7,0.3 -1.3,0.7 -2,1 l 0,13 c -1.1,1.1 -0.4,0 -1,2 -1,-0.3 -2,-0.7 -3,-1 l 0,1 c -2.7,1.2 -4.2,1.8 -5,5 l -4,0 c -0.3,1 -0.7,2 -1,3 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -1,0.3 -2,0.7 -3,1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1.8,-1.4 -2,-1.6 -5,-2 -1.9,2.1 -4.6,2.4 -7,4 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -3,0 0,1 -2,0 0,1 -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.6,0.4 -0.8,1.3 -2,2 0.6,3.1 1,6.7 1,11 -5.1,1 -6.8,4.3 -12,5 -1.1,-2.6 -6.5,-10.5 -12,-8 -0.7,1 -1.3,2 -2,3 l -2,0 0,1 -3,0 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 -5,0 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -2.3,0.3 -4.7,0.7 -7,1 -4.6,1.7 -9.7,4.7 -15,6 0.3,4 0.7,8 1,12 -3.1,0.7 -8.3,3.2 -10,2 -2.5,-0.7 -1.6,-0.5 -3,-2 l -1,0 0,-2 c -1.3,-1 -2.7,-2 -4,-3 -0.3,-0.7 -0.7,-1.3 -1,-2 l -3,0 c -1.1,0.9 -5.6,2.5 -8,2 l 0,-1 -4,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,1 -2,0 0,1 c -3.3,0.7 -6.7,1.3 -10,2 l 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -3.7,0.3 -7.3,0.7 -11,1 l 0,1 c -4,0.3 -8,0.7 -12,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,12 c -4.3,0.7 -8.7,1.3 -13,2 -0.7,-3.2 -1.5,-1.9 -2,-3 -0.3,-2.3 -0.7,-4.7 -1,-7 l -1,0 0,-1 -4,0 c -2.7,2.3 -9,0.8 -13,2 l 0,1 -7,0 0,1 -8,0 0,1 -8,0 0,1 -7,0 0,1 c -3,-0.3 -6,-0.7 -9,-1 l 0,1 -3,0 0,1 c -8,0.7 -16,1.3 -24,2 l 0,13 c -4,0.3 -8,0.7 -12,1 l 0,-1 -1,0 c -0.2,-4.9 -1.7,-6.1 -2,-11 -32.7,0.3 -65.3,0.7 -98,1 -1,3.7 -2,7.3 -3,11 l -11,0 c -0.7,-1.9 -1,-3.9 -1,-7 l -1,0 0,-6 c -6,-0.3 -12,-0.7 -18,-1 l 0,-1 c -7.7,-0.3 -15.3,-0.7 -23,-1 l 0,-1 -8,0 0,-1 -7,0 c -7.8,-2.3 -16.1,-2.9 -26,-3 -1.7,3.3 -3.3,6.7 -5,10 l -4,0 0,-1 -8,0 0,-12 -1,0 0,-1 c -6.3,-1 -12.7,-2 -19,-3 l 0,-1 -3,0 0,-1 -6,0 0,-1 c -3.3,-0.3 -6.7,-0.7 -10,-1 l 0,-1 -3,0 0,-1 -4,0 0,-1 -5,0 c -5.4,-1.7 -8.7,-3.8 -16,-4 l -6,9 -12,-3 c -0.1,-4.3 0.4,-7.9 1,-11 l -1,0 0,-1 c -5.6,-0.1 -8.1,-2.6 -12,-4 l -4,0 0,-1 -3,0 c -2.7,-1 -5.3,-2 -8,-3 -0.3,-1.7 -0.7,-3.3 -1,-5 l -3,0 c -0.7,-1 -1.3,-2 -2,-3 l -1,0 0,-2 c -0.6,-0.8 -2,-0.8 -3,-2 -1,0.3 -2,0.7 -3,1 l 0,1 -2,0 c -2.9,1.9 -0.4,3.2 -6,4 -1.5,-1.8 -2.7,-1.9 -6,-2 -2,2.3 -4,4.7 -6,7 l -5,0 c -1.4,-1.4 -5.6,-2.5 -8,-3 0.3,-4 0.7,-8 1,-12 l -1,0 0,-1 -3,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 -2,0 0,-1 -2,0 0,-1 c -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 -2,0 0,-1 -2,0 -2,-2 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2.5,-1.7 -4.4,-2.5 -8,-3 -1.6,2 -4,3.4 -7,4 l 0,-2 -1,0 0,3 c -2.4,0.5 -3.1,1.2 -5,2 l 0,-2 c -1.1,-1.1 -0.4,0 -1,-2 -1,0.3 -2,0.7 -3,1 l 0,-1 c -1.2,-0.9 -1.3,-2.5 -2,-3 -2.7,-1 -5.3,-2 -8,-3 l 0,-13 c -5.1,-2.5 -6.2,-3.2 -6,-11 1.5,-1.7 1,-5.8 1,-9 l 0,-22 c -5,0.5 -6.6,3.2 -10,5 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 l -7,0 0,1 -2,0 c -3.8,1.9 -4.1,3.6 -10,4 -1.7,-2 -4.4,-3 -6,-5 -3,0.7 -6,1.3 -9,2 -1.3,1.7 -2.7,3.3 -4,5 l -1,-1 c -2.4,-1 -3.2,-1.1 -4,-4 -1,-0.3 -2,-0.7 -3,-1 l 0,-1 -2,0 0,-1 c -1,0.3 -2,0.7 -3,1 l 0,-19 c -5.2,-3 -8.7,-10.3 -15,-12 l 0,1 -9,3 c -2.3,-2.7 -4.7,-5.3 -7,-8 0.3,-4.7 0.7,-9.3 1,-14 l -1,0 0,-2 c -1,-0.7 -2,-1.3 -3,-2 l 0,-1 c -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -1.9,-2.6 -3.8,-1.7 -5,-6 -4.3,1 -8.7,2 -13,3 -1.9,-3.3 -4.9,-4.8 -6,-9 l 1,0 0,-6 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.7 -0.7,-3.3 -1,-5 -4.7,0.3 -9.3,0.7 -14,1 -0.8,-3.2 -4.3,-6.3 -3,-11 l 1,0 0,-5 1,0 0,-2 1,0 0,-5 1,0 0,-5 1,0 c 0.9,-3.2 -1.8,-9.7 -3,-11 -1.9,2.1 -0.5,0 -3,1 -3.9,1.5 -6.9,1.4 -9,-2 l -1,0 0,-3 -1,0 0,-3 -1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 0,-3 1,0 c 0.7,-3 1.3,-6 2,-9 -3.7,0.3 -5.5,1.5 -8,-1 -1.1,-1.1 -0.4,0 -1,-2 -3.7,-4 2.4,-17.5 3,-22 l -2,0 c -1.8,-1.2 -1.1,-8 -1,-11 l 1,0 0,-4 1,0 c 0.7,-3 1.3,-6 2,-9 -0.7,-0.3 -1.3,-0.7 -2,-1 0.3,-1 0.7,-2 1,-3 -0.4,-1.4 -1.9,-6.1 -1,-9 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l -2,0 7.03178,-17.61653 0.647244,-3.61652 26.132415,0.40255 -1.710803,3.11334 L 49.8,2.5 c -0.3,2 0.1,4 -0.3,6 -4,10.7 -0.5,25.7 3,35 0.3,2.3 0.7,4.7 1,7 l 1,0 0,5 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,4 c 0.7,0.3 1.3,0.7 2,1 l 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,3 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,2 1,0 0,2 2,2 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 1,0 c 0.3,1 0.7,2 1,3 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 c 2.3,2 4.7,4 7,6 l 0,2 c 4.3,4 8.7,8 13,12 3.2,3.2 3.8,6.7 10,7 0.8,-1.2 0,0 1,-1 1,-1 -0.2,-0.3 1,-1 l 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.7,-1 1.3,-2 2,-3 3.6,-2 4.4,1.5 6,-4 z"]
    }]
};
"use strict";
Travian.Service.GlobalStateService = function(a, c, b) {
    var f = null
      , g = [];
    return new function() {
        this.Dd = function(e, h) {
            if ("undefined" != typeof e.serial) {
                if (-1 !== g.indexOf(e.serial)) {
                    return
                }
                g.push(e.serial);
                1E3 < g.length && (g = g.slice(0, 1001))
            }
            if ("undefined" !== typeof e.error) {
                var m = e.error
                  , l = m.message
                  , p = !0;
                "Maintenance" == l && "undefined" == typeof a.windows.maintenance && (a.loggedIn = !1,
                a.openWindow("maintenance"));
                if (l == PlayerPunishment.TYPE_AUTO_BAN || l == PlayerPunishment.TYPE_SUSPENDED || l == PlayerPunishment.TYPE_LOCKED || l == PlayerPunishment.TYPE_ISOLATED) {
                    p = m.params,
                    p.punishment = l,
                    "undefined" == typeof a.windows.playerLocked && a.openWindow("playerLocked", p),
                    p = !1
                }
                "worldEnded" == l && ("undefined" == typeof a.windows.worldEnded && "undefined" == typeof a.windows.worldEndedModal && a.openWindow("worldEndedModal"),
                p = !1);
                "actionLocked" == l.split(".")[0] && (l = Travian.translate("Error." + l.split(".")[0], {
                    param: l.split(".")[1]
                }));
                p && ("undefined" != typeof m["class"] && (l += "<br/>\nClass: " + m["class"]),
                "undefined" != typeof m.file && (l += "<br/>\nFile: " + m.file),
                "undefined" != typeof m.line && (l += "<br/>\nLine: " + m.line),
                b.lb(l, "error"))
            }
            "undefined" != typeof e.error && "Authentication failed" == e.error.message && a.$broadcast("forceLogout");
            "undefined" != typeof e.ignoreSerial && null != f && (f += parseInt(e.ignoreSerial));
            "undefined" != typeof e.serial && (null != f && f < e.serial - 1 && 0 != e.serial && (e.missedPackets = {
                from: f + 1,
                to: e.serial - 1
            }),
            f = e.serial);
            if ("object" === typeof e && "object" === typeof e.response) {
                if ("object" === typeof e.event) {
                    for (m = 0; m < e.event.length; m++) {
                        if (l = e.event[m],
                        "invalidateCache" == l.name) {
                            for (l = Cache.Lb(l.data),
                            p = 0; p < l.length; p++) {
                                Cache.G(l[p], 1)
                            }
                        } else {
                            a.$broadcast(l.name, l.data)
                        }
                    }
                }
                "object" === typeof e.cache && 0 < e.cache.length && Cache.fill(e, e.serialNo);
                "undefined" != typeof e.time && 0 < h && c.jj(e.time, h);
                if ("undefined" !== typeof e.debug) {
                    for (m = 0; m < e.debug.length; m++) {
                        a.$broadcast("debug", e.debug[m]),
                        "" != e.debug[m] && b.lb(e.debug[m], "debug")
                    }
                }
                requestAngularApply()
            }
        }
    }
}
;
Travian.Service.GlobalStateService.$inject = ["$rootScope", "ServertimeService", "NotificationService"];
function sa() {
    var a = this;
    this.Vb = 0;
    this.collectionModel = null;
    this.Ld = 20;
    this.log = function(b, c) {
        c > a.Ld && console.log("[Cache] " + b)
    }
    ;
    this.c = {};
    this.Da = {};
    this.Cc = {};
    this.$b = {};
    this.ab = null;
    this.ma = [];
    this.xb = function() {
        a.log("Request to Server for " + a.ma.length + " Sets", 1);
        Travian.request("cache/get", {
            names: a.ma
        });
        a.ma = [];
        a.ab = null
    }
    ;
    var c = !1;
    this.get = function(b, f, g) {
        var e = b._dbString;
        1 < arguments.length && (e = b._dbString + f);
        var h = !1;
        2 < arguments.length && 0 > g && (h = !0);
        var m = (new Date).getTime();
        "undefined" != typeof a.Da[e] && a.Da[e] < m && (delete a.Da[e],
        c || (h = !0));
        h && (a.log("Force Get: " + e, 0),
        null == a.ab && (a.ab = window.setTimeout(a.xb, 10)),
        a.ma.push(e),
        2 < arguments.length && 0 < g && "undefined" == typeof a.Da[e] && (a.Da[e] = m + 1E3 * g));
        a.log("Getting " + e, 0);
        if ("undefined" != typeof a.c[e]) {
            return a.log("Success! " + e, 2),
            a.c[e]
        }
        c || (null == a.ab && (a.ab = window.setTimeout(a.xb, 10)),
        a.ma.push(e));
        h = new b;
        a.c[e] = h;
        a.c[e].serverId = e;
        2 < arguments.length && 0 < g && "undefined" == typeof a.Da[e] && (a.Da[e] = m + 1E3 * g);
        a.log("Cache miss! Returning " + e + " dummy.", 2);
        return h
    }
    ;
    this.Gf = function(a, c, g, e) {
        g.lastFilled = (new Date).getTime();
        g.serverId = a;
        a = g.set(c, !1, e);
        "retry" == a && (window.setTimeout(function() {
            g.set(c, !1, e)
        }, 500),
        a = !1);
        return a
    }
    ;
    this.fill = function(b, c) {
        if (!b) {
            return !1
        }
        if ("undefined" !== typeof b.cache) {
            a.Vb++;
            for (var g = [], e = [], h = 0; h < b.cache.length; h++) {
                var m = b.cache[h]
                  , l = m.name.split(":")
                  , p = "Collection" === l[0]
                  , n = l[0] + ":";
                "undefined" == typeof a.$b[n] && 2 < l.length && (n = l[0] + ":" + l[1] + ":");
                var q = a.c[m.name];
                "undefined" != typeof q ? (a.log("Updating " + m.name, 3),
                p || !q.Xb || !c || q.Xb <= c ? (c && (q.Xb = c),
                a.Gf(m.name, m.data, q, c),
                g.push(q),
                q.filled = !0) : e.push(q)) : (a.log("Filling " + m.name, 1),
                "undefined" !== typeof a.$b[n] ? (q = null,
                p && (q = l[1]),
                l = new a.$b[n](q),
                c && (l.Xb = c),
                !1 !== a.Gf(m.name, m.data, l) ? (a.c[m.name] = l,
                a.log("Classname " + n, 0),
                g.push(l),
                a.c[m.name].filled = !0) : a.log("Ignoring it. Invalid operation. " + m.name, 1)) : a.log("Unknown Class " + n, 1))
            }
            for (h = 0; h < g.length; h++) {
                g[h].callSubscribers()
            }
            a.Vb--;
            return g.concat(e)
        }
    }
    ;
    this.Xe = function(b) {
        for (var c in a.c) {
            (!b || !a.c[c].Xb || a.c[c].Xb < b) && a.B(c)
        }
    }
    ;
    this.B = function(b, c) {
        var g = b;
        "undefined" != typeof b.serverId && (g = b.serverId);
        a.Da[g] = 0;
        "undefined" != typeof a.c[g] && ("undefined" != typeof c ? delete a.c[g] : a.c[g].filled = !1);
        if ("undefined" != typeof a.Cc[g]) {
            for (var e = 0, h = a.Cc[g].length; e < h; e++) {
                a.B(a.Cc[g][e])
            }
            a.log("Deleting entry " + g, 1);
            delete a.Cc[g]
        }
    }
    ;
    this.G = function(b, c) {
        ((new Date).getTime() - b.lastFilled) / 1E3 > c && a.get({
            _dbString: b.serverId
        }, "", -1)
    }
    ;
    this.ui = function(b) {
        return "undefined" != typeof a.c[b] ? a.c[b].filled : !1
    }
    ;
    this.Lb = function(b) {
        var c = b.length, g = [], e;
        for (e in a.c) {
            e.substr(0, c) == b && g.push(a.c[e])
        }
        return g
    }
    ;
    this.register = function(b, c, g) {
        b.prototype.filled = !1;
        1 < arguments.length ? (b._dbString = c,
        b.Ge = 2 < arguments.length ? g : 0) : b._dbString = "undefined" != typeof b.name ? b.name + ":" : b.toString().match(/^function\s*([^\s(]+)/)[1] + ":";
        b.get = function() {
            for (var e = "", c = 0, f = arguments.length; c < f; c++) {
                0 < c && (e += ":"),
                e += arguments[c]
            }
            return a.get(b, e, b.Ge)
        }
        ;
        b.getCollection = function() {
            for (var e = "", c = 0, f = arguments.length; c < f; c++) {
                0 < c && (e += ":"),
                e += arguments[c]
            }
            return a.get(a.collectionModel, b._dbString + e, b.Ge)
        }
        ;
        b.Tj = b;
        a.$b[b._dbString] = b;
        a.$b["Collection:" + b._dbString] = a.collectionModel;
        b.prototype.subscribe = function(a) {
            this.filled && a(this);
            "undefined" == typeof this.Ba && (this.Ba = []);
            this.Ba.push({
                fct: a
            });
            a = 0;
            for (var b = this.Ba, c = 0; c < b.length; c++) {
                null != b[c] && a++
            }
            Cache.log("(+) Subscribers to " + this.serverId + ": " + a, 4);
            return this.Ba.length - 1
        }
        ;
        b.prototype.callSubscribers = function() {
            if ("undefined" != typeof this.Ba) {
                for (var a = this.Ba, b = 0; b < a.length; b++) {
                    null != a[b] && a[b].fct(this)
                }
            }
        }
        ;
        b.prototype.unsubscribe = function(a) {
            if ("undefined" == typeof this.Ba) {
                return !1
            }
            this.Ba[a] = null;
            a = 0;
            for (var b = this.Ba, c = 0; c < b.length; c++) {
                null != b[c] && a++
            }
            Cache.log("(-) Subscribers to " + this.serverId + ": " + a, 4)
        }
    }
    ;
    this.Ta = function(a, f) {
        c = !0;
        f = Array.prototype.slice.call(arguments, 1);
        var g = a.apply(this, f);
        c = !1;
        return g
    }
    ;
    this.ja = function(a, c) {
        for (var g = !0, e = [], h = 0; h < a.length; h++) {
            if (a[h]instanceof AbstractModel || a[h]instanceof AbstractCollection) {
                var m = a[h].filled;
                a[h].filled = !1;
                var l = a[h].subscribe(c);
                a[h].filled = m;
                e.push([a[h], l]);
                g = g && m
            }
        }
        g && c();
        return function() {
            for (var a = 0; a < e.length; a++) {
                e[a][0] && e[a][0].unsubscribe && e[a][0].unsubscribe(e[a][1])
            }
        }
    }
}
window.Cache = new sa;
Travian.htmlFilters.i18ndtshortTime = '<span i18ndt="{{_?_}}" format="shortTime"></span>';
Travian.htmlFilters.i18ndt = '<span i18ndt="{{_?_}}" format="mediumTime"></span>';
Travian.htmlFilters.i18ndtshort = '<span i18ndt="{{_?_}}" format="short"></span>';
Travian.htmlFilters.i18ndtdate = '<span i18ndt="{{_?_}}" format="shortDate"></span>';
Travian.htmlFilters.i18ndtMediumDate = '<span i18ndt="{{_?_}}" format="mediumDate"></span>';
Travian.htmlFilters.i18ndtHoursMinutes = '<span i18ndt="{{_?_}}" format="H:mm"></span>';
Travian.htmlFilters.i18ndtOffset = '<span i18ndt="{{_?_}}" format="mediumTime" fast-offset="true"></span>';
Travian.htmlFilters.countdown = '<span countdown="{{_?_}}" callback="{{_?_}}"></span>';
Travian.htmlFilters.daysCountdown = '<span countdown="{{_?_}}" dhms="true"></span>';
Travian.htmlFilters.bold = {
    tag: "b"
};
Travian.htmlFilters.r = "<br />";
Travian.htmlFilters.playerLink = '<player-link class="truncated" playerId="{{_?_}}" playerName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></player-link>';
Travian.htmlFilters.villageLink = '<village-link class="truncated" villageId="{{_?_}}" villageName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></village-link>';
Travian.htmlFilters.kingdomLink = '<kingdom-link class="truncated" kingdomId="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></kingdom-link>';
Travian.htmlFilters.troopLink = '<troop-link trooptype="{{_?_}}"></troop-link>';
Travian.htmlFilters.buildingLink = '<building-link building-type="{{_?_}}"></building-link>';
Travian.htmlFilters.icon = '<i class="icon {{_?_}}"></i>';
Travian.htmlFilters.windowLink = '<translate clickable="openWindow(\'_?_\', {}, null, true)" class="textLink">_?_</translate>';
Travian.htmlFilters.functionLink = '<translate clickable="{{_?_}}" class="textLink">_?_</translate>';
Travian.htmlFilters.linkStart = '<a clickable="{{_?_}}">';
Travian.htmlFilters.linkEnd = "</a>";
Travian.htmlFilters.coords = '<coordinates x="{{_?_}}" y="{{_?_}}"></coordinates>';
Travian.htmlFilters.plainCoords = '<coordinates x="{{_?_}}" y="{{_?_}}" nolink="true"></coordinates>';
Travian.htmlFilters.HHMMSS = "{{_?_|HHMMSS}}";
Travian.htmlFilters.HHMM = "{{_?_|HHMM}}";
Travian.htmlFilters.month = '{{_?_|date:"MMMM"}}';
Travian.htmlFilters.year = '{{_?_|date:"yyyy"}}';
Travian.htmlFilters.fromNow = '<span i18ndt="{{_?_}}" relative="from"></span>';
Travian.htmlFilters.truncate = '<span class="truncated">{{_?_}}</span>';
Travian.htmlFilters.percent = "{{_?_| bidiNumber:'percent':false:false}}";
Travian.htmlFilters.signedPercent = "{{_?_| bidiNumber:'percent':true:false}}";
Travian.htmlFilters.signed = "{{_?_| bidiNumber:'':true:false}}";
Travian.htmlFilters.ratio = '<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_"></span>';
Travian.htmlFilters.ratioStyled = '<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_:true"></span>';
Travian.htmlFilters.translate = '<translate options="{{::_?_}}">?</translate>';
Travian.htmlFilters["short"] = "{{::_?_|shortBigNumber:_?_}}";
Travian.datetimeFormats = {
    0: {
        fullDate: "EEEE, d. MMMM y",
        longDate: "d. MMMM y",
        medium: "dd.MM.yyyy HH:mm:ss",
        mediumDate: "dd.MM.yyyy",
        mediumTime: "HH:mm:ss",
        "short": "dd.MM.yy HH:mm",
        shortDate: "dd.MM.yy",
        shortTime: "HH:mm",
        veryShort: "dd.MM. | HH:mm"
    },
    1: {
        fullDate: "EEEE, MMMM d, y",
        longDate: "MMMM d, y",
        medium: "MM/dd/yyyy h:mm:ss a",
        mediumDate: "MM/dd/yyyy",
        mediumTime: "h:mm:ss a",
        "short": "M/d/yy h:mm a",
        shortDate: "M/d/yy",
        shortTime: "h:mm a",
        veryShort: "MM/dd | HH:mm"
    },
    2: {
        fullDate: "EEEE, d MMMM y",
        longDate: "d MMMM y",
        medium: "dd/MM/yyyy h:mm:ss a",
        mediumDate: "dd/MM/yyyy",
        mediumTime: "h:mm:ss a",
        "short": "dd/MM/yy h:mm a",
        shortDate: "dd/MM/yy",
        shortTime: "h:mm a",
        veryShort: "dd/MM | h:mm a"
    },
    3: {
        fullDate: "EEEE, y MMMM dd",
        longDate: "y MMMM d",
        medium: "yyyy/MM/dd HH:mm:ss",
        mediumDate: "yyyy/MM/dd",
        mediumTime: "HH:mm:ss",
        "short": "yyyy/MM/dd HH:mm",
        shortDate: "yyyy/MM/dd",
        shortTime: "HH:mm",
        veryShort: "MM/dd | HH:mm"
    }
};
var FriendCache = function() {
    var a = new sa;
    a.Ld = 20;
    a.xb = function() {
        a.socket ? (a.log("Request to FriendService for " + a.ma.length + " Sets", 1),
        a.socket.emit("Friend", "cache", a.ma, a.fill),
        a.ma = [],
        a.ab = null) : window.setTimeout(FriendCache.xb, 100)
    }
    ;
    a.be = function(c) {
        a.socket = c
    }
    ;
    return a
}();
if ("undefined" !== typeof document) {
    var ta = function() {
        this.tg = 17;
        this.sg = 8;
        this.Zc = 13;
        this.ye = 27;
        this.ib = 38;
        this.hb = 37;
        this.Qa = 39;
        this.fb = 40;
        this.ug = 46;
        this.te = 65;
        this.E = 69;
        this.vg = 71;
        this.xg = 72;
        this.yg = 73;
        this.Ag = 77;
        this.Dg = 78;
        this.Fg = 80;
        this.Ig = 82;
        this.Mg = 84;
        this.Qg = 87;
        this.Rg = 90;
        this.ng = this.callback = null;
        for (var a = this, c = [], b = 0; 255 > b; b++) {
            c[b] = !1
        }
        this.zd = function(a) {
            a || (a = window.event);
            return ("undefined" == typeof a.which || "number" == typeof a.which && 0 == a.which) && "number" == typeof a.keyCode ? a.keyCode : a.which
        }
        ;
        this.Bc = function(a) {
            return c[a]
        }
        ;
        this.Af = function(b) {
            return b == a.ib || b == a.fb || b == a.hb || b == a.Qa
        }
        ;
        document.onkeyup = function(b) {
            b = a.zd(b);
            c[b] = !1;
            if (null != a.ng) {
                return !a.ng(b)
            }
        }
        ;
        document.onkeydown = function(b) {
            b = a.zd(b);
            if (!c[b]) {
                if (a.Af(b) && "INPUT" == document.activeElement.tagName) {
                    return
                }
                c[b] = !0;
                if (null != a.callback) {
                    return !a.callback(b)
                }
            }
            return null != a.callback ? !1 : !0
        }
        ;
        window.onblur = function() {
            for (var a = 0; 255 > a; a++) {
                c[a] = !1
            }
        }
    }
}
function wa(a) {
    this.value = a.value || null;
    this.pe = a.pe || null;
    this.qe = a.qe || null;
    this.current = a.current || null;
    this.pb = a.pb || null;
    this.bc = a.bc || null;
    this.ie = a.ie || null;
    this.Pa = a.Pa || null;
    this.ge = a.ge;
    this.zc = a.zc;
    this.threshold = a.threshold;
    this.mc = a.mc;
    this.ob = a.ob;
    this.config = {
        ec: "ltr",
        Jg: "rtl",
        Cg: "\u200f",
        Bg: "\u200e",
        ad: "\u202d",
        De: "\u202e",
        Cb: "\u202c",
        ze: {
            il: "ltr"
        }
    };
    this.units = {
        percent: "%",
        times: "\u00d7"
    };
    this.he = {
        positive: "+",
        negative: "-"
    };
    a = {
        surroundingDirection: getDirection(),
        numberDirection: null
    };
    var c = getLanguage();
    a.numberDirection = this.config.ze.hasOwnProperty(c) ? this.config.ze[c] : a.surroundingDirection;
    this.od = a;
    a = "";
    this.units.hasOwnProperty(this.Pa) ? a = this.units[this.Pa] : "undefined" != typeof Travian.txt[this.Pa] && (a = " " + Travian.translate(this.Pa));
    this.Bj = a;
    this.zc ? (a = this.od.surroundingDirection,
    c = "",
    a === this.config.ec ? c = this.config.Bg : a === this.config.Jg && (c = this.config.Cg),
    a = c) : a = "";
    this.ac = a
}
function xa(a, c, b) {
    c = "undefined" === typeof c ? a.value : c;
    if ("?" == c) {
        return c
    }
    null != c && "undefined" !== typeof c && (c = parseFloat((+c).toPrecision(12)));
    var f = "";
    0 != c && "undefined" != typeof c && (f = a.ge ? 0 > c ? a.he.negative : a.he.positive : 0 > c ? a.he.negative : "");
    a.qj = f;
    c = Math.abs(c);
    "undefined" != typeof a.threshold && (null != a.threshold && !1 !== a.threshold) && (c = Travian.Filter.shortBigNumber()(c, a.threshold, a.mc));
    "undefined" != typeof a.ob && (null != a.ob && !1 !== a.ob) && (c = c.toFixed(a.ob));
    null != b && (c = '<span class="' + b + '">' + c + "</span>");
    return a.ac + (a.od.numberDirection === a.config.ec ? a.config.ad : a.config.De) + a.qj + (a.config.ad + c + a.config.Cb) + a.Bj + a.config.Cb
}
function za(a) {
    return xa(a)
}
function Aa(a) {
    var c = getDirection() == a.config.ec ? "/" : "\\"
      , b = a.current
      , f = a.pb;
    a.ie ? a.bc && (b = '<span class="amount wrapper">' + b + "</span>",
    f = '<span class="capacity">' + f + "</span>") : a.bc ? (b = xa(a, a.current, "amount wrapper"),
    f = xa(a, a.pb, "capacity")) : (b = xa(a, a.current),
    f = xa(a, a.pb));
    return a.ac + b + c + f
}
function Ba(a) {
    function c(a) {
        h.currentPage = Math.max(1, a);
        var b = q * (h.currentPage - 1);
        for (h.items.splice(0, h.items.length); b < q || b < a * q; b++) {
            h.items.push(f[b])
        }
        !0 === A && h.setActiveItem(h.items[0]);
        for (a = 0; a < h.items.length; a++) {
            if (void 0 !== g[a]) {
                if (e[a].item == h.items[a]) {
                    continue
                } else {
                    e[a].scope.$destroy()
                }
            }
            n && (!h.activeItem && 0 === a) && h.setActiveItem(h.items[a]);
            b = $("<div></div>").html(w);
            b = x(b, h.items[a]);
            if ("undefined" !== typeof b) {
                void 0 !== g[a] ? g[a].replaceWith(b) : u.append(b);
                var c = s.$new();
                c.item = h.items[a];
                C(b)(c);
                g[a] = b;
                e[a] = {
                    item: h.items[a],
                    scope: c
                }
            }
        }
        for (a = h.items.length; a < g.length; a++) {
            e[a].scope.$destroy(),
            g[a].remove(),
            g.splice(a--, 1)
        }
        v()
    }
    function b() {
        h.pages = [];
        m = Math.ceil(f.length / (l * p));
        for (var a = 1; a <= m; a++) {
            h.pages.push(a)
        }
    }
    var f = []
      , g = []
      , e = []
      , h = this
      , m = 0
      , l = a.cols || 2
      , p = a.rows || 1
      , n = !1 !== a.Ki
      , q = p * l
      , r = a.wi || null
      , t = a.element
      , u = a.jh
      , w = a.template
      , s = a.rg
      , x = a.Aa || y()
      , v = a.Zg || y()
      , D = a.Td || y()
      , C = a.compile || function() {
        return y()
    }
      , A = a.kk || !1;
    t.addClass("rows_" + p);
    this.activeItem = null;
    this.items = [];
    this.currentPage = null;
    this.pages = [];
    this.setItems = function(a) {
        a && "undefined" !== typeof a || (a = []);
        f = a;
        h.setActiveItem(h.activeItem);
        b();
        if (this.currentPage) {
            return c(Math.min(this.currentPage, h.pages.length)),
            h
        }
        c(1);
        return h
    }
    ;
    this.addItems = function(a) {
        f = f.concat(a);
        b();
        if (this.currentPage) {
            return c(this.currentPage),
            h
        }
        c(1);
        return h
    }
    ;
    this.nextPage = function() {
        if (h.currentPage + 1 <= m) {
            return this.goToPage(h.currentPage + 1),
            h
        }
        this.goToPage(1);
        return h
    }
    ;
    this.previousPage = function() {
        if (0 < h.currentPage - 1) {
            return this.goToPage(h.currentPage - 1),
            h
        }
        this.goToPage(m);
        return h
    }
    ;
    this.goToPage = function(a) {
        c(a);
        D(h.items)
    }
    ;
    this.setActiveItem = function(a) {
        if (!r) {
            throw "Carousel: itemPrimaryKey is not defined!";
        }
        if (a) {
            for (var b = !1, e = 0; e < f.length; e++) {
                "undefined" != typeof f[e] && f[e][r] == a[r] && (b = !0,
                a = f[e])
            }
            !1 === b && (a = f[0]);
            h.activeItem = a;
            s.carouselActiveItem = a
        }
    }
    ;
    this.setRows = function(a) {
        t.removeClass("rows_" + a);
        t.addClass("rows_" + a);
        p = a;
        q = p * l;
        b();
        c(1)
    }
}
Travian.gh = function() {
    "complete" != document.readyState && "loaded" != document.readyState ? window.setTimeout(Travian.gh, 2E3) : "undefined" === typeof Travian || "undefined" == typeof Travian.request ? 0 > window.location.href.indexOf("nocache") && window.location.replace("/?nocache" + window.location.hash) : ("undefined" !== typeof window.mk || document.getElementById("vitruvian")) && alert("There is malware on your PC! Run a virus scanner or a malware removal tool.")
}
;
function Ca(a, c, b, f, g, e) {
    function h() {
        var a = Math.floor(w / 2);
        0 > t.y ? (a = Math.floor(w / 2) - Math.abs(t.y),
        t.y = 0) : t.y + w > x.height() && (a = Math.floor(w / 2) + Math.abs(x.height() - (t.y + w)),
        t.y = x.height() - w);
        a -= parseInt(A.I.css("border-top-width"));
        E.css("top", a + "px")
    }
    function m() {
        var a = Math.floor(u / 2);
        0 > t.x ? (a = Math.floor(u / 2) - Math.abs(t.x),
        t.x = 0) : t.x + u > x.width() && (a = Math.floor(u / 2) + Math.abs(x.width() - (t.x + u)),
        t.x = x.width() - u);
        a -= parseInt(A.I.css("border-" + D + "-width"));
        E.css("left", a + "px")
    }
    function l() {
        switch (b) {
        case "before":
            q = D;
            break;
        case "after":
            q = C;
            break;
        case "above":
            q = "top";
            break;
        default:
            q = "bottom"
        }
    }
    function p() {
        switch (b) {
        case "before":
            b = "after";
            break;
        case "after":
            b = "before";
            break;
        case "above":
            b = "below";
            break;
        default:
            b = "above"
        }
        l()
    }
    function n() {
        var e = a[0].getBoundingClientRect()
          , e = {
            width: e.width,
            height: e.height,
            top: e.top,
            x: e.left
        };
        (0 == e.width && 0 == e.x || 0 > e.x) && window.setTimeout(A.setPosition, 50);
        "undefined" != typeof window.pageYOffset ? (e.top += window.pageYOffset,
        e.x += window.pageXOffset) : (e.top += $(window).scrollTop(),
        e.x += $(window).scrollLeft());
        s = e;
        null == b && (0 < s.width || 0 < s.x) && (b = "below",
        e = $("body").height(),
        s.top > 0.7 * e && (b = "above"),
        l());
        A.I.removeClass("before after above below").addClass(b);
        E.removeClass("arrowDirectionFrom arrowDirectionTo arrowDirectionDown arrowDirectionUp");
        switch (q) {
        case "right":
            t = {
                y: Math.floor(s.top + s.height / 2 - w / 2),
                x: Math.floor(s.x + s.width) + r
            };
            "left" == D ? E.addClass("arrowDirectionFrom") : E.addClass("arrowDirectionTo");
            break;
        case "left":
            t = {
                y: Math.floor(s.top + s.height / 2 - w / 2),
                x: Math.floor(s.x) - r
            };
            "left" == D ? E.addClass("arrowDirectionTo") : E.addClass("arrowDirectionFrom");
            break;
        case "top":
            t = {
                y: Math.floor(s.top) - r,
                x: Math.floor(s.x + s.width / 2 - u / 2)
            };
            E.addClass("arrowDirectionDown");
            break;
        default:
            t = {
                y: Math.floor(s.top + s.height) + r,
                x: Math.floor(s.x + s.width / 2 - u / 2)
            },
            E.addClass("arrowDirectionUp")
        }
    }
    var q = ""
      , r = 0
      , t = {}
      , u = 0
      , w = 0
      , s = {}
      , x = null
      , v = null
      , D = "ltr" == getDirection() ? "left" : "right"
      , C = "ltr" == getDirection() ? "right" : "left";
    this.I = null;
    var A = this
      , F = !1;
    l();
    var B = -1;
    this.setPosition = function() {
        if (0 == a.length) {
            A.hide(),
            a = $(a.Ui),
            window.setTimeout(A.setPosition, 50)
        } else {
            if (u = A.I.outerWidth(),
            w = A.I.outerHeight(),
            n(),
            0 == s.top && 0 == s.height) {
                A.hide(),
                a = $(a.Ui),
                window.setTimeout(A.setPosition, 50)
            } else {
                x = x || $("body");
                switch (q) {
                case "right":
                    t.x + u + 10 > x.width() && (p(),
                    n());
                    h();
                    break;
                case "left":
                    0 > t.x - u - 10 && (p(),
                    n());
                    h();
                    break;
                case "top":
                    0 > t.y - w - 10 && (p(),
                    n());
                    m();
                    break;
                default:
                    t.y + w + 10 > x.height() && (p(),
                    n()),
                    m()
                }
                var b = {};
                switch (q) {
                case "right":
                    b.top = t.y + "px";
                    b.left = t.x + "px";
                    break;
                case "left":
                    b.top = t.y + "px";
                    b.right = v.width() - t.x + "px";
                    break;
                case "top":
                    b.bottom = v.height() - t.y + "px";
                    b.left = t.x + "px";
                    break;
                default:
                    b.top = t.y + "px",
                    b.left = t.x + "px"
                }
                A.I.css(b);
                g && A.show();
                w == B && A.I.outerHeight() == B || -1 == B || window.setTimeout(A.setPosition, 50);
                B = w
            }
        }
    }
    ;
    this.remove = function() {
        A.I.remove();
        F = !0
    }
    ;
    this.show = function() {
        F || (A.setPosition(),
        A.I.css("visibility", "visible"))
    }
    ;
    this.hide = function() {
        A.I.css("visibility", "hidden")
    }
    ;
    f = "tooltip " + f;
    "undefined" !== typeof b && (f += " " + b);
    A.I = $("<div>", {
        "class": f
    });
    var E = $("<i>");
    A.I.append(E);
    this.hide();
    A.I.append($("<div>", {
        "class": "tooltipContent"
    }).append(c));
    x = x || $("body");
    x.append(A.I);
    v = $(window);
    switch (b) {
    case "before":
        r = parseInt(A.I.css("margin-" + C));
        break;
    case "after":
        r = parseInt(A.I.css("margin-" + D));
        break;
    case "above":
        r = parseInt(A.I.css("margin-bottom"));
        break;
    default:
        r = parseInt(A.I.css("margin-top"))
    }
    r += parseInt(e) || 0;
    A.I.css("margin", "0")
}
function Da(a) {
    function c() {}
    function b() {
        D !== C && v.height(D * (100 * D / C) / 100)
    }
    function f() {
        var a = 100 * w.scrollTop() / C;
        v.css({
            top: D * a / 100
        })
    }
    function g() {
        I = !0;
        x.show();
        window.setTimeout(function() {
            I && (x.stop(!0),
            x.css("opacity", 1),
            x,
            u.addClass("active"))
        }, 300)
    }
    function e() {
        p();
        var a = w.scrollTop() - (C - u.height());
        20 > Math.abs(a) ? F = !1 : F = !0
    }
    function h() {
        w.scrollTop(C - u.height())
    }
    function m(a) {
        w.scrollTop(w.scrollTop() + a);
        n()
    }
    function l() {
        var a = w.scrollTop()
          , b = u.height();
        w.find(".waitForRender").each(function(e, c) {
            var f = !1;
            c.offsetTop <= a + b && c.offsetTop + c.offsetHeight >= a && (f = !0);
            f && ("function" == typeof c.Aa && c.Aa(),
            $(c).removeClass("waitForRender"))
        })
    }
    function p() {
        T || (T = !0,
        window.setTimeout(function() {
            T = !1;
            l();
            n()
        }, 10))
    }
    function n() {
        if (t || ("none" == r[0].style.display || null === r[0].offsetParent) || Q == s[0].scrollHeight && L == s[0].scrollWidth && H === w[0].offsetHeight && N == r.width()) {
            return !0
        }
        Q = s[0].scrollHeight;
        L = s[0].scrollWidth;
        H = w[0].offsetHeight;
        N = r.width();
        D = u.height();
        C = w[0].scrollHeight;
        b();
        u.width("auto");
        w.width("auto");
        var e = s.width();
        u.width(e);
        if (D + 1 >= C || 0 == D) {
            a.dynamicWidth || (w.width(e),
            w.css("overflow-y", "hidden"),
            s.width("auto")),
            x.stop(!0),
            x.hide().css("opacity", 0),
            I && (I = !1,
            u.removeClass("active"))
        } else {
            var c = w.width() - s.width() || A;
            w.width(e + c);
            !a.dynamicWidth && 0 < e && s.width(e);
            w.css("overflow-y", "auto");
            g()
        }
        f();
        p();
        "undefined" !== a.scrollDown && (a.scrollDown && !F) && h();
        return !0
    }
    function q() {
        if (B) {
            B = !1
        } else {
            if (f(),
            e(),
            "function" == typeof a.onScrolling) {
                a.onScrolling()
            }
        }
    }
    var r = a.element
      , t = !1
      , u = $(".scrollContentOuterWrapper", r).first()
      , w = $(".scrollContent", r).first()
      , s = $(".scrollContentInnerWrapper", r).first()
      , x = $(".scrollTrack", r).last()
      , v = $(".scrollHandle", r).last()
      , D = 0
      , C = 0
      , A = 20
      , F = !1
      , B = !1
      , E = -1 !== navigator.platform.toUpperCase().indexOf("MAC")
      , J = 0 < $(".Firefox").length;
    E && J && (A = 15);
    var I = !1
      , T = !1
      , Q = -1
      , L = -1
      , H = -1
      , N = -1;
    z.V(v[0], function() {
        var b = parseInt(v.css("top"))
          , c = z.O().current.y
          , f = z.D("move", function(f) {
            f = b + f.current.y - c;
            var l = parseInt(x.css("height")) - parseInt(v.css("height"));
            f = Math.max(0, Math.min(l, f));
            v.css("top", f);
            f = 100 * parseInt(v.css("top")) / (D - 1);
            B = !0;
            w.scrollTop(Math.ceil(C * f / 100));
            e();
            if ("function" == typeof a.onScrolling) {
                a.onScrolling()
            }
        })
          , l = z.D("up", function() {
            f();
            l()
        })
    });
    z.ya(v[0], ba(!1));
    z.Kf(x[0], function() {
        B = !1
    });
    z.V(x[0], function() {
        var a = z.O();
        if (window.document.elementFromPoint(a.current.x, a.current.y) == v[0]) {
            return !1
        }
        var b = v.offset().top;
        a.current.y < b ? m(-100) : m(100)
    });
    w.on("scroll", q);
    !0 === a.autoUpdate && ("function" == typeof a.initUpdateTick ? c = a.initUpdateTick(n) : function M() {
        t || (window.setTimeout(M, 100),
        n())
    }());
    u.removeClass("disableScrolling");
    w.removeClass("disableScrolling");
    D = u.height();
    C = w[0].scrollHeight;
    b();
    f();
    "undefined" !== a.scrollDown && a.scrollDown && (h(),
    B = !0);
    this.update = n;
    this.scrollToBeginning = function() {
        w.scrollTop(0)
    }
    ;
    this.scrollToEnd = h;
    this.scrollBy = m;
    this.scrollTo = function(a, b, e) {
        b && (a = C - a);
        e || (a -= u.height());
        w.scrollTop(a)
    }
    ;
    this.checkLazyRenderer = p;
    this.resetSettings = function() {
        F = !1
    }
    ;
    this.destroy = function() {
        z.s(v[0]);
        z.s(x[0]);
        w.off("scroll", q);
        u.attr("style", "");
        w.attr("style", "");
        s.attr("style", "");
        x.attr("style", "");
        u.addClass("disableScrolling");
        w.addClass("disableScrolling");
        t = !0;
        c()
    }
}
function Ea(a) {
    function c(a) {
        for (key in a) {
            g[key] = a[key]
        }
        if (0 >= g.customSteps) {
            throw Error("CustomSteps must be bigger than 0");
        }
        if (0 > g.min) {
            throw Error("min must be minimum 0");
        }
        if (g.max < g.min) {
            throw Error("max shouldn't be smaller than min");
        }
        g.max -= g.max % g.customSteps;
        a = g.max / g.customSteps;
        g.Oa = a <= g.width ? a : 100;
        0 != g.Oa ? (g.Na = 100 / g.Oa,
        g.jg = g.width / g.Oa) : (g.Na = 0,
        g.jg = 0,
        g.head = 0)
    }
    function b(a) {
        if ("undefined" !== typeof g[a]) {
            for (var b = [], c = 1; c < arguments.length; c++) {
                b.push(arguments[c])
            }
            return g[a].apply(g, b)
        }
        return !1
    }
    function f(a, b, c) {
        a = parseInt(a);
        isNaN(a) && (a = 0);
        b = parseInt(b);
        c = parseInt(c);
        return a < b ? b : a > c ? c : a
    }
    this.width = this.max = this.min = this.head = this.Rd = 0;
    this.customSteps = 1;
    this.Nf = {
        x: 0,
        y: 0
    };
    this.Sb = !1;
    var g = this;
    c(a);
    this.update = function(a) {
        c(a);
        return this
    }
    ;
    this.Wf = function(a) {
        a = Math.round(a * this.max / 100);
        this.na(a, !0)
    }
    ;
    this.na = function(a, c) {
        if ("undefined" === typeof c || c) {
            a = this.dh(a)
        }
        var g = f(a, this.min, this.max)
          , l = this.Mb();
        if (g != l || a != g || c) {
            l = b("headChanged", g, l),
            isNaN(l) || (g = l),
            this.head = 0 >= this.max ? 0 : 100 * g / this.max
        }
    }
    ;
    this.Mb = function() {
        return Math.round(this.head * this.max / 100)
    }
    ;
    this.uf = function(a) {
        a = f(Math.round(100 * a / this.width), 0, 100);
        a = this.bh(a);
        return Math.round(a * this.max / 100)
    }
    ;
    this.Qh = function() {
        return Math.round(this.head * this.width / 100)
    }
    ;
    this.step = function(a, b, c) {
        c += g.Na * b * a;
        this.Wf(c);
        return this
    }
    ;
    this.moveStart = function(a) {
        this.Nf = a;
        this.Rd = this.head;
        this.Sb = !0;
        return this
    }
    ;
    this.move = function(a) {
        a = a.x - this.Nf.x;
        if (!this.Sb || 0 == a) {
            return this
        }
        var b = (new V(a,0)).normalize().x;
        this.step(b, Math.abs(a / this.jg), this.Rd);
        return this
    }
    ;
    this.Bi = function() {
        this.Sb = !1;
        this.Rd = this.head
    }
    ;
    this.bh = function(a) {
        var b = a;
        if (100 < this.Na || 0 == this.Na) {
            return 0
        }
        if (0 < a % this.Na) {
            a %= this.Na;
            var b = b - a
              , c = Math.round(100 * (b + this.Na)) / 100;
            this.Na / 2 <= a && 100 >= c && (b = c)
        }
        return b
    }
    ;
    this.dh = function(a) {
        var b = a;
        if (0 == this.customSteps || 0 == this.Oa) {
            return 0
        }
        0 < a % this.customSteps && (a %= this.customSteps,
        b -= a,
        this.customSteps / 2 <= a && b + this.customSteps <= this.max && (b += this.customSteps));
        return b
    }
}
function Fa(a) {
    function c() {
        if (a.Nb() && a.Ac()) {
            for (var b in e) {
                if (h[b] = null,
                0 < e[b].length) {
                    for (var f = {
                        type: "askForName",
                        query: [],
                        nameType: b
                    }, l = 0; l < e[b].length; l++) {
                        f.query.push(parseInt(e[b][l]))
                    }
                    e[b] = [];
                    a.emit(p, f, m.Wd)
                }
            }
        } else {
            window.setTimeout(c, 50)
        }
    }
    function b(a, b, e) {
        "undefined" == typeof f[e][a] && (f[e][a] = b);
        if ("undefined" != typeof g[e][a]) {
            for (var c = 0; c < g[e][a].length; c++) {
                var l = g[e][a][c];
                l.callback(b, a);
                g[e][a].splice(c, 1);
                c--
            }
            delete g[e][a]
        }
        b = b.toString().toLowerCase();
        "undefined" == typeof f[e][b] && (f[e][b] = a);
        if ("undefined" != typeof g[e][b]) {
            for (c = 0; c < g[e][b].length; c++) {
                l = g[e][b][c],
                l.callback(a, b),
                g[e][b].splice(c, 1),
                c--
            }
            delete g[e][b]
        }
    }
    var f = {
        player: [],
        village: [],
        kingdom: []
    }
      , g = {
        player: [],
        village: [],
        kingdom: []
    }
      , e = {
        player: [],
        village: [],
        kingdom: []
    }
      , h = {
        player: null,
        village: null,
        kingdom: null
    }
      , m = this
      , l = {}
      , p = "nameService"
      , n = {};
    m.Wd = function(a) {
        if (null != a) {
            if (Array.isArray(a.id)) {
                for (var e in a.name) {
                    void 0 !== a.resultType[e] && (l[a.nameType + e] = a.resultType[e]),
                    "kingdom" == a.nameType && (n[e] = a.kingObject[e]),
                    b(e, a.name[e], a.nameType)
                }
            } else {
                "kingdom" == a.nameType && (n[a.id] = a.kingObject),
                b(a.id, a.name, a.nameType)
            }
        }
    }
    ;
    m.mf = function(a) {
        return "undefined" !== l["player" + a] ? l["player" + a] : "normal"
    }
    ;
    m.bk = function(a) {
        return n[a]
    }
    ;
    m.pi = function() {
        f.player[-2] = Travian.translate("NPCGovernor");
        f.player[-1] = Travian.translate("Robber");
        f.player[0] = Travian.translate("Tribe_4");
        f.player[1] = Travian.translate("Tribe_5")
    }
    ;
    m.getNameForId = function(a, b, l) {
        "undefined" == typeof l && (l = "player");
        if (isNaN(a) || null === a) {
            b("")
        } else {
            if ("undefined" != typeof f[l][a]) {
                b(f[l][a])
            } else {
                var m = null
                  , n = (new Date).getTime();
                "undefined" == typeof g[l][a] ? (g[l][a] = [],
                g[l][a].push({
                    callback: b,
                    timestamp: n
                }),
                m = {
                    type: "askForName",
                    query: a,
                    nameType: l
                }) : (g[l][a].push({
                    callback: b,
                    timestamp: n
                }),
                g[l][a][0].timestamp < n - 3E3 && (m = {
                    type: "askForName",
                    query: a,
                    nameType: l
                }));
                null != m && (e[l].push(a),
                null == h[l] && (h[l] = window.setTimeout(c, 50)))
            }
        }
    }
    ;
    m.pi()
}
var ChatCache = new sa;
ChatCache.Ld = 20;
ChatCache.xb = function() {
    "undefined" == typeof ChatCache.socket ? window.setTimeout(ChatCache.xb, 100) : (ChatCache.log("Request to CHAT Server for " + ChatCache.ma.length + " Sets", 1),
    ChatCache.socket.emit("chatCache", ChatCache.ma, ChatCache.fill),
    ChatCache.ma = [],
    ChatCache.ab = null)
}
;
ChatCache.be = function(a) {
    ChatCache.socket = a
}
;
function Ga(a) {
    function c(a, b) {
        a.onload = null;
        if (void 0 !== f.eb[b]) {
            for (var c = 0; c < f.eb[b].length; c++) {
                f.eb[b][c](b, a)
            }
            f.eb[b] = []
        }
    }
    this.storage = {};
    this.eb = {};
    this.Fd = a;
    var b = {}
      , f = this;
    this.add = function(a) {
        if (!this.storage.hasOwnProperty(a)) {
            var b = new Image;
            b.setAttribute("crossOrigin", "anonymous");
            b.src = this.Fd + a + "?v=" + config.version;
            this.storage[a] = b
        }
    }
    ;
    this.get = function(a, e) {
        if ("undefined" != typeof G[a]) {
            var f = G[a]
              , m = G.files[f.e];
            if ("undefined" == typeof b[m.src]) {
                var l = new Image;
                l.setAttribute("crossOrigin", "anonymous");
                l.src = this.Fd + m.src + "?v=" + config.version;
                l.onload = function() {
                    c(l.src)
                }
                ;
                b[m.src] = l
            }
            return b[m.src].complete ? {
                image: b[m.src],
                cfg: f
            } : null
        }
        if (null == a) {
            return null
        }
        this.storage.hasOwnProperty(a) || (l = new Image,
        l.setAttribute("crossOrigin", "anonymous"),
        l.src = this.Fd + a + "?v=" + config.version,
        l.onload = function() {
            c(l, a)
        }
        ,
        this.storage[a] = l);
        if (!0 === this.storage[a].complete) {
            return l = this.storage[a],
            {
                image: this.storage[a],
                cfg: {
                    x: 0,
                    y: 0,
                    d: l.width,
                    a: l.height
                }
            }
        }
        void 0 !== e && (void 0 === this.eb[a] && (this.eb[a] = []),
        this.eb[a].push(e));
        return null
    }
    ;
    this.load = function(a, b, c) {
        function f(l, m) {
            p[l] = m;
            n++;
            n >= a.length && void 0 !== b && b(p, c)
        }
        for (var l = !0, p = [], n = 0, q = 0; q < a.length; q++) {
            var r = this.get(a[q], f);
            null === r ? l = !1 : f(a[q], r.image)
        }
        return l
    }
}
function Ia(a, c, b, f, g) {
    function e(a) {
        X.Wb = Math.max(X.Wb, a)
    }
    function h() {
        N = 0;
        M > Ja ? H = Ka : (H = La,
        PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_STRATEGIC_MAP),
        J.heatmap && (N = J.heatmap))
    }
    function m(a, b, c, e) {
        var f = {
            x: a,
            y: b
        };
        a = c.Q(f.x, f.y);
        var l = !1
          , h = !1
          , s = !0;
        e == m.$.Ee ? a.y < c.renderer.j.y / 2 && (s = !1) : e == m.$.ue ? a.y < c.renderer.X.y - 1.5 * c.renderer.j.y && (s = !1) : e == m.$.hb ? (l = !0,
        a.x > c.renderer.j.x / 2 && (s = !1)) : e == m.$.Qa && (l = !0,
        a.x > c.renderer.X.x - 1.5 * c.renderer.j.x && (s = !1));
        this.Tc = function(a) {
            if (h) {
                return !1
            }
            a.hasOwnProperty(f.x) || (a[f.x] = {
                yMin: null,
                yMax: null
            });
            if (null == a[f.x].yMax || f.y > a[f.x].yMax) {
                a[f.x].yMax = f.y
            }
            if (null == a[f.x].yMin || f.y < a[f.x].yMin) {
                a[f.x].yMin = f.y
            }
            s ? (s = !1,
            l ? f.x++ : f.y++) : (s = !0,
            l ? f.y-- : f.x++);
            a = c.Q(f.x, f.y);
            if (l && a.y + c.renderer.j.y > c.renderer.X.y || !l && a.x + c.renderer.j.x > c.renderer.X.x) {
                return h = !0,
                !1
            }
            h = !1;
            return !0
        }
    }
    function l(a) {
        a = X.wc(a.x, a.y);
        return {
            top: a.y + "px",
            left: a.x + "px"
        }
    }
    function p(a) {
        var b = !1;
        if (a.playerId == Travian.Player.data.playerId && a.village) {
            b = !1;
            if (a.village.type == Village.TYPE_MAIN || a.village.type == Village.TYPE_MAIN_TOWN) {
                b = !0
            }
            E.villageNames[a.id] = {
                style: l(a),
                name: a.village.name,
                type: 0,
                isMain: b
            };
            b = !0
        }
        0 > a.playerId && a.village && (E.villageNames[a.id] = {
            style: l(a),
            name: a.village.name,
            type: a.village.type,
            isMain: !1
        },
        b = !0);
        a.village && null != a.village && (!J.mainVillages || a.village.type != Village.TYPE_MAIN && a.village.type != Village.TYPE_MAIN_TOWN || (E.mainVillages[a.id] = l(a),
        b = !0),
        J.villageTreasures && 0 < a.village.treasures && (E.villageTreasures[a.id] = {
            style: l(a),
            treasures: a.village.treasures
        },
        E.villageNames[a.id] && (E.villageTreasures[a.id].style.top = X.wc(a.x, a.y).y + 19 + "px"),
        b = !0));
        a.wwZone && !E.wwMist[a.wwZone] && (E.wwMist[a.wwZone] = l(Ma(a.wwZone)));
        a.src && (0 <= a.src.indexOf("ww_-1_1.png") && Travian.Config.specialRules && Travian.Config.specialRules.birthday) && (E.wwOverlay[a.id] = {
            "class": a.village ? "wwVillage" : "wwCloud",
            style: l(Ma(a.id))
        });
        0 < a.cropAmount && 1 == J.cropFinder && (E.cropFields[a.id] = {
            style: l(a),
            amount: a.cropAmount
        },
        b = !0);
        var c = X.L.Mh(a.id)
          , e = Travian.Player.data.playerId
          , f = Travian.Player.data.uiStatus;
        if (void 0 !== c && 0 !== c.length && 0 < e && -1 == f) {
            f = !1;
            c[0].data.isGlobal && 0 == J.fieldMarkersGlobal && (f = !0);
            c[0].data.isGlobal || 0 != J.fieldMarkersPersonal || (f = !0);
            for (var h = P.indexOf(M), m = [], g = Date.now() / 1E3, e = 0; e < c.length; e++) {
                if (c[e].data.creatorPlayerId == FieldMarkerGlobal.CREATOR_FIREWORKS) {
                    if (c[e].data.timestamp <= g && c[e].data.timestamp + c[e].data.duration > g) {
                        var n = l(a);
                        n.animationDelay = Math.ceil(20 * Math.random()) / 10 + "s";
                        n.filter = "hue-rotate(" + 36 * Math.floor(10 * Math.random()) + "deg)";
                        E.fireworks[a.id] = {
                            style: n,
                            until: c[e].data.timestamp + c[e].data.duration
                        }
                    }
                } else {
                    0 < h || (c[e].timeAgo = c[e].getTimeAgoString(),
                    c[e].data.minimizedState == FieldMarkerPersonal.MINIMIZED_MINIMIZED && (f = !0),
                    c[e].data.minimizedState == FieldMarkerPersonal.MINIMIZED_MAXIMIZED && (f = !1),
                    c[e].data.isGlobal && (n = c[e].data.text.split(" "),
                    1 < n.length && (c[e].data.text = n[0],
                    n[0] === FieldMarkerGlobal.TYPE_GOVERNOR_RELOCATE ? c[e].data.relocateCellId = n[1] : c[e].data.textPlayerId = n[1])),
                    m.push(c[e]))
                }
            }
            E.fieldMarkers[a.id] = {
                cell: a.id,
                style: l(a),
                minimized: f,
                markers: m,
                selectedMarker: 0
            }
        } else {
            delete E.fieldMarkers[a.id]
        }
        delete E.troopMovementSprite[a.id];
        e = Player.getKingdomIdByPlayerId(a.owner) == Travian.Player.data.kingdomId;
        c = !(s.kingdom && e);
        if (null != a.N && 0 < a.N[Marker.TYPE_TROOP_MOVEMENT].length) {
            f = a.N[Marker.TYPE_TROOP_MOVEMENT];
            E.troopMovementSprite[a.id] = {
                style: l(a),
                movements: []
            };
            for (var u = n = g = m = h = !1, e = 0; e < f.length; e++) {
                var q = f[e].data.moveType
                  , w = a.playerId == Travian.Player.data.playerId
                  , p = q == Troops.MOVEMENT_TYPE_ATTACK
                  , t = q == Troops.MOVEMENT_TYPE_RAID && !c
                  , q = q == Troops.MOVEMENT_TYPE_SUPPORT;
                if (w && (p || t) || !w && t) {
                    f[e].data.moveData.realPlayer ? (h = !0,
                    n = !1) : h || (n = !0)
                }
                q && (g = !0);
                !w && p && (m = !0);
                u || (Travian.Player.data.hasNoobProtection || !h) || (PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_SUPPORTING),
                u = !0)
            }
            h && E.troopMovementSprite[a.id].movements.push("enemyAttack");
            n && E.troopMovementSprite[a.id].movements.push("robberAttack");
            g && m ? E.troopMovementSprite[a.id].movements.push("ownAttAndDef") : (g && E.troopMovementSprite[a.id].movements.push("ownType5"),
            m && E.troopMovementSprite[a.id].movements.push("ownType3"))
        }
        "undefined" == typeof E.villageNames[a.id] || a.village || delete E.villageNames[a.id];
        return b
    }
    function n(a, b, c) {
        this.Jc = a;
        this.src = b;
        this.data = c
    }
    function q(a, b, c, e) {
        var f = {};
        f[Marker.TYPE_PLAYER] = "playerMarker";
        f[Marker.TYPE_KINGDOM] = "allianceMarker";
        f[Marker.TYPE_COORDINATES] = "fieldMarker";
        f[Marker.TYPE_KING_VILLAGE] = "kingMarker";
        var l = "";
        "undefined" != typeof f[e.data.type] && (l = f[e.data.type] + "_" + Marker.COLORS[e.data.color].name + ".png");
        "" !== l && a.push(new n(X.Q(b, c),l))
    }
    function r(a, b, c) {
        if ("undefined" != typeof b.N && null != b.N && 1 == J.markers && c in b.N && 0 < b.N[c].length) {
            if (c == Marker.TYPE_TROOP_MOVEMENT) {
                for (var e = 0; e < b.N[c].length; e++) {
                    q(a, b.x, b.y, b.N[c][e])
                }
            } else {
                for (var f = 0, e = 0; e < b.N[c].length; e++) {
                    if (b.N[c][e].data.owner == Marker.OWNER_KINGDOM) {
                        f = e;
                        break
                    }
                }
                q(a, b.x, b.y, b.N[c][f]);
                return !0
            }
        }
        return !1
    }
    function t(a, b, c, e) {
        var l = Travian.Player.data.kingdomId
          , h = null;
        F.L.vc(a);
        e && c.bb ? h = Marker.COLORS[c.bb] : !e && c.Za ? h = Marker.COLORS[c.Za] : a == f.data.playerId && (h = Marker.COLOR_OWN);
        null == h && (0 < l && b == l ? h = Marker.COLOR_OWN : 0 < b && "undefined" != typeof x[Kingdom.NAP] ? (h = Marker.COLOR_NEUTRAL,
        "undefined" != typeof x[Kingdom.NAP][b] ? h = Marker.TREATY_COLOR_NAP : "undefined" != typeof x[Kingdom.BND][b] ? h = Marker.TREATY_COLOR_BND : "undefined" != typeof x[Kingdom.WAR][b] && (h = Marker.COLOR_ENEMY)) : h = Marker.COLOR_NEUTRAL);
        return h
    }
    function u() {
        R = !1;
        b.Ah()
    }
    function w() {
        function a(e, f) {
            switch (e) {
            case w.cd:
                var l = c - f, h = b + f, m = c + f, s, g, n = [];
                for (s = b - f; s <= h; s++) {
                    for (g = l; g <= m; g++) {
                        n.push(new V(s,g))
                    }
                }
                return n;
            case w.Fe:
                l = [];
                for (h = Math.floor(b - f); h <= b + f; h++) {
                    for (m = Math.floor(c - f); m <= c + f; m++) {
                        s = Math.sqrt((h - b) * (h - b) + (m - c) * (m - c)),
                        s <= f && l.push(new V(h,m))
                    }
                }
                return l
            }
        }
        var b, c, f, l, h, m;
        return {
            init: function(s, g, n, q) {
                b = g.x;
                c = g.y;
                f = new V(b,c);
                m = {
                    Qj: f,
                    gc: {}
                };
                h = a(s, n);
                l = window.setTimeout(function() {
                    if (m) {
                        for (var a = 0; a < h.length; a++) {
                            T.push(h[a]),
                            m.gc[h[a].x + "_" + h[a].y] = h[a]
                        }
                        e(D)
                    }
                }, isNaN(q) ? 400 : q)
            },
            remove: function() {
                if (m) {
                    null != l && (window.clearTimeout(l),
                    l = null);
                    for (var a = 0; a < h.length; a++) {
                        T.push(h[a])
                    }
                    m = null
                }
            },
            yd: function() {
                return m
            }
        }
    }
    var s = {
        kingdom: !0
    };
    this.lj = function(a) {
        s = a
    }
    ;
    var x = {}
      , v = !1;
    this.renderer = c;
    this.L = a;
    var D = 1
      , C = new w
      , A = new w;
    this.Wb = 2;
    var F = this
      , B = 20
      , E = {
        villageNames: {}
    }
      , J = {
        showFilters: !1,
        borders: !0,
        kingdom: !0,
        markers: !0,
        fieldMarkersGlobal: !0,
        fieldMarkersPersonal: !0,
        heatmap: 0,
        cropFinder: !1,
        mainVillages: !1,
        villageTreasures: !0
    }
      , I = {}
      , T = []
      , Q = null
      , L = null
      , H = Ka
      , N = 0
      , P = [1, 0.5, 0.25];
    Ja = P[2];
    var M = 1
      , R = !1
      , aa = 0
      , ga = 0
      , U = {
        x: 1,
        y: 1
    }
      , ca = !1
      , K = !1
      , O = new V
      , fa = new V
      , W = new V
      , ia = null
      , da = ["canvasMap", "tileInformationPosition", "overlayMarkers", "troopsOverview"]
      , X = this;
    this.bj = function(a) {
        x = a
    }
    ;
    this.yb = function(a, b, e) {
        J[a] = b;
        c.Yb(J);
        e || (c.fe(),
        window.setTimeout(X.Z, 10));
        h()
    }
    ;
    this.Oi = function(a) {
        delete J[a];
        c.Yb(J);
        c.fe();
        window.setTimeout(X.Z, 10);
        h()
    }
    ;
    this.$d = function(a) {
        E = a;
        E.cropFields = {};
        E.villageNames = {};
        E.mainVillages = {};
        E.wwMist = {};
        E.wwOverlay = {};
        E.villageTreasures = {};
        E.troopMovementSprite = {};
        E.fieldMarkers = {};
        E.fireworks = {};
        E.filters = J;
        E.removeFilter = X.Oi;
        E.tiStyle = {
            visibility: "hidden"
        }
    }
    ;
    this.wb = function() {
        E.villageNames = {}
    }
    ;
    this.ce = function(a, b, e) {
        if (a != E.zoomLevel) {
            var f = P[a];
            E.zoomLevel = a;
            b && (f = b);
            a = this.ia({
                x: this.renderer.J.x / 2,
                y: this.renderer.J.y / 2
            });
            M = f;
            c.$f(M);
            this.oa(a.x, a.y, !0, !0, e);
            window.setTimeout(X.Z, 10);
            h();
            u();
            E.wwMist = {};
            E.wwOverlay = {};
            E.fireworks = {};
            !E.$$phase && E.$digest && E.$digest()
        }
    }
    ;
    this.Zi = function(a) {
        c.Ib = a;
        1 == a ? c.Kd = !0 : 0 == a && (c.Kd = !1);
        F.Z()
    }
    ;
    this.setSeason = function(a) {
        c.Oc = a;
        F.Z()
    }
    ;
    this.Z = function() {
        E.cropFields = {};
        E.mainVillages = {};
        var a = !1;
        "undefined" != typeof E.villageTreasures && (J.villageTreasures && 0 === Object.keys(E.villageTreasures).length && (a = !0),
        J.villageTreasures || 0 === Object.keys(E.villageTreasures).length || (a = !0));
        a && (E.villageTreasures = {});
        E.troopMovementSprite = {};
        I = {};
        e(2);
        W = {
            x: null,
            y: null
        };
        X.vf()
    }
    ;
    this.oa = function(a, b, c, e, f) {
        if (!(Math.abs(a) > Travian.Config.worldSize || Math.abs(a) > Travian.Config.worldSize)) {
            var l = this.wc(-a, -b);
            l.x = Math.round(l.x + this.renderer.J.x / 2 - this.renderer.j.x / 2);
            l.y = Math.round(l.y + this.renderer.J.y / 2 - this.renderer.j.y / 2);
            this.Nc(l.x, l.y, c, f);
            e || this.Yi(a, b)
        }
    }
    ;
    this.Yi = function(a, b) {
        this.Rf();
        ia = new V(a,b);
        T.push(ia);
        this.oc(ia.x, ia.y)
    }
    ;
    this.Rf = function() {
        if (ia) {
            var a = T.indexOf(ia);
            -1 < a && T.splice(a, 1);
            ia = null
        }
    }
    ;
    this.Nc = function(a, c, f, l) {
        O.set(a, c);
        a = V2.Sc(O, fa);
        fa = new V(O.x,O.y);
        b.Cj(this.ia({
            x: this.renderer.J.x / 2,
            y: this.renderer.J.y / 2
        }));
        0 === a.x && 0 === a.y || f || (e(2),
        Math.abs(a.x) < this.renderer.J.x && Math.abs(a.y) < this.renderer.J.y && this.renderer.oj(a));
        !0 !== l && (f = X.ia({
            x: 128,
            y: 68
        }),
        f = X.wc(f.x, f.y),
        l = document.getElementById("overlayMarkers"),
        null != l && (l.style.top = -f.y + "px",
        "ltr" == config.direction ? l.style.left = -f.x + "px" : l.style.right = f.x + window.innerWidth + "px"))
    }
    ;
    this.Me = function(a, b) {
        var c = Math.sqrt(Math.pow(this.renderer.Ka, 2) + Math.pow(this.renderer.Ka, 2)) / 2 | 0
          , e = c * this.renderer.j.x
          , c = c * this.renderer.j.y
          , f = this.kd(a, b)
          , l = new V(a,b);
        1 === f.x && (l.x = e + this.renderer.J.x / 2);
        -1 === f.x && (l.x = -e + this.renderer.J.x / 2);
        -1 === f.y && (l.y = -c + this.renderer.J.y / 2);
        1 === f.y && (l.y = c + this.renderer.J.y / 2);
        this.Nc(Math.round(l.x), Math.round(l.y))
    }
    ;
    this.kd = function(a, b) {
        var c = new V(0,0)
          , e = Math.sqrt(Math.pow(this.renderer.Ka, 2) + Math.pow(this.renderer.Ka, 2)) / 2 | 0
          , f = e * this.renderer.j.x
          , e = e * this.renderer.j.y
          , l = a - this.renderer.J.x / 2
          , h = b - this.renderer.J.y / 2
          , m = b - this.renderer.J.y / 2;
        f < a - this.renderer.J.x / 2 && (c.x = 1);
        -f > l && (c.x = -1);
        e < m && (c.y = 1);
        -e > h && (c.y = -1);
        return c
    }
    ;
    this.Pf = function(a, b) {
        var c = this.kd(a, b);
        if (0 === c.x && 0 === c.y) {
            return 0
        }
        c = Math.sqrt(Math.pow(this.renderer.Ka, 2) + Math.pow(this.renderer.Ka, 2)) / 2 | 0;
        return Math.round((new V(a,b)).$e(new V(c * this.renderer.j.x,c * this.renderer.j.y)))
    }
    ;
    this.ai = function(a, b) {
        var c = this.Pf(a, b) / 100;
        return c ? Math.round(0.5 * (c - 6)) || 1 : 1
    }
    ;
    this.wc = function(a, b) {
        return new V(this.renderer.ca.x * (a + b),this.renderer.ca.y * (a - b))
    }
    ;
    this.Q = function(a, b) {
        return new V(this.renderer.ca.x * (a + b) + O.x,this.renderer.ca.y * (a - b) + O.y)
    }
    ;
    this.ia = function(a) {
        var b = a.y - O.y - this.renderer.ca.y;
        a = ((a.x - O.x - this.renderer.ca.x) * this.renderer.ca.y + this.renderer.ca.x * b) / (2 * this.renderer.ca.x * this.renderer.ca.y);
        return new V(a,a - b / this.renderer.ca.y)
    }
    ;
    this.sc = function() {
        return this.ia({
            x: this.renderer.J.x / 2,
            y: this.renderer.J.y / 2
        })
    }
    ;
    m.$ = {
        Ee: 1,
        hb: 2,
        ue: 3,
        Qa: 4
    };
    this.Ih = function() {
        for (var a = {}, b = this.ia(new V(this.renderer.j.x,this.renderer.j.y)).round(), c = this.ia(new V(this.renderer.j.x,this.renderer.X.y - this.renderer.j.y)).round(), e = this.ia(new V(this.renderer.X.x - this.renderer.j.x,this.renderer.j.y)).round(), f = new m(b.x,b.y,this,m.$.Ee), c = new m(c.x,c.y,this,m.$.ue), b = new m(b.x,b.y,this,m.$.hb), e = new m(e.x,e.y,this,m.$.Qa), l = !0, h = !0, s = !0, g = !0; l || h || s || g; ) {
            l = f.Tc(a),
            h = c.Tc(a),
            s = b.Tc(a),
            g = e.Tc(a)
        }
        var f = I, c = [], n;
        for (n in a) {
            for (b = a[n].yMin; b <= a[n].yMax; b++) {
                if ("undefined" == typeof f[n] || b < f[n].yMin || b > f[n].yMax) {
                    c.push({
                        x: 1 * n,
                        y: 1 * b
                    }),
                    e = this.L.P(n + "_" + b, H, N),
                    e.Ob = !0,
                    p(e)
                }
            }
        }
        for (n in f) {
            for (b = f[n].yMin; b <= f[n].yMax; b++) {
                if ("undefined" == typeof a[n] || b < a[n].yMin || b > a[n].yMax) {
                    e = this.L.P(n + "_" + b, H, N),
                    e.Ob = !1,
                    delete E.villageNames[e.id],
                    delete E.cropFields[e.id],
                    delete E.troopMovementSprite[e.id],
                    delete E.mainVillages[e.id],
                    delete E.fieldMarkers[e.id],
                    delete E.fireworks[e.id]
                }
            }
        }
        I = a;
        return c
    }
    ;
    this.Fj = function(a, c) {
        if (!z.Jb && Travian.Player.isOnMap()) {
            var e = z.O()
              , f = new V(e.current.x - L.left,e.current.y - L.top)
              , e = this.ia(f)
              , l = P.indexOf(M);
            if (1 > c) {
                l < P.length - 1 && (l++,
                g.U(Na))
            } else {
                if (1 <= l) {
                    l--,
                    g.U(Oa)
                } else {
                    var h = this.L.P(W.x + "_" + W.y, H, N);
                    if (h.playerId == Travian.Player.data.playerId && h.village) {
                        var m = 0, s;
                        for (s in E.windows) {
                            E.windows.hasOwnProperty(s) && m++
                        }
                        if (0 < m) {
                            return
                        }
                        b.fh(h.id);
                        g.U(Oa);
                        E.openPage("resources")
                    }
                }
            }
            this.ce(l);
            s = this.sc();
            f = this.ia(f);
            s.x -= f.x - e.x;
            s.y -= f.y - e.y;
            this.oa(s.x, s.y, !0, !0);
            0 < this.Pf(O.x, O.y) && this.Me(O.x, O.y)
        }
    }
    .bind(this);
    this.gi = function() {
        if (!K) {
            R && u();
            var a = z.O()
              , a = new V(a.current.x - L.left,a.current.y - L.top)
              , e = X.ia(new V(a.x,a.y)).round()
              , a = X.L.P(e.x + "_" + e.y, H, N)
              , e = X.Q(e.x, e.y);
            a.pc = {};
            a.pc.left = Math.round(e.x - c.offset.x);
            a.pc.top = Math.round(e.y - c.offset.y);
            a.j = {};
            a.j.width = c.j.x;
            a.j.height = c.j.y;
            a.Yj = M;
            R = !0;
            aa = Math.round(e.x + L.left) + a.j.width / 2;
            ga = Math.round(e.y + L.top) + a.j.height / 2;
            e = a.id;
            null != a.village && null != a.village.villageId && (e = a.village.villageId);
            b.Bh(a, X.L.kf(e))
        }
    }
    .bind(this);
    this.dg = function(a) {
        E.tiStyle = {
            visibility: "visible"
        };
        C.remove();
        var b = this.L.P(a.x + "_" + a.y, H, N);
        b.wwZone || A.remove();
        var c = b.owner;
        E.Village = Village;
        E.tiInfos = {};
        E.tiInfos.coords = {
            x: a.x,
            y: a.y
        };
        if (M > Ja) {
            if (c != J.kingdom) {
                for (var e in I) {
                    for (a = I[e].yMin; a < I[e].yMax; a++) {
                        var l = this.L.ta(e + "_" + a, H);
                        0 < l && (l == J.kingdom || l == c) && T.push({
                            x: 1 * e,
                            y: 1 * a
                        })
                    }
                }
                X.yb("kingdom", c, !0)
            }
            if (null !== b.village || null !== b.oasis) {
                if (0 < b.playerId) {
                    var h = this.L.vc(b.playerId);
                    "undefined" != typeof h && (E.tiInfos.playerId = b.playerId,
                    E.tiInfos.playerName = h.name,
                    E.tiInfos.country = h.country,
                    E.tiInfos.inactive = "0" === h.active,
                    E.tiInfos.kingdomId = parseInt(h.kingdomId, 10),
                    E.tiInfos.kingStatus = h.kingStatus)
                }
                c = this.L.kf(b.id);
                E.tiInfos.movements = this.L.ei(b.id);
                "undefined" != typeof c && (E.tiInfos.report = c);
                if (null !== b.oasis) {
                    E.tiInfos.oasis = b.oasis;
                    E.tiInfos.oasisBonus = {};
                    for (var s in b.oasis.bonus) {
                        0 < b.oasis.bonus[s] && (E.tiInfos.oasisBonus[Resources.STRING[s]] = b.oasis.bonus[s])
                    }
                    E.tiInfos.villageName = Travian.translate("Oasis.unoccupied");
                    b.oasis.oasisStatus == Village.OASIS_STATUS_WILD && (c = MapDetails.get(b.id),
                    Cache.G(c, 60),
                    E.tiInfos.oasisDetails = c);
                    if ("undefined" != typeof b.oasis.kingdomInfluence && null != b.oasis.kingdomInfluence) {
                        h = Travian.Player.data.kingdomId;
                        c = parseInt(b.oasis.kingdomInfluence[h]);
                        e = 0;
                        for (var m in b.oasis.kingdomInfluence) {
                            m != h && b.oasis.kingdomInfluence[m] > e && (e = b.oasis.kingdomInfluence[m])
                        }
                        E.tiInfos.influence = Math.floor(100 * (c / (c + e)))
                    }
                    if ("undefined" != typeof b.oasis.playerInfluence && null != b.oasis.playerInfluence) {
                        E.tiInfos.ownOasisBonus = {};
                        for (s in b.oasis.ownBonus) {
                            0 < b.oasis.ownBonus[s] && (E.tiInfos.ownOasisBonus[Resources.STRING[s]] = b.oasis.ownBonus[s])
                        }
                        E.tiInfos.ownOasisRank = "undefined" != typeof b.oasis.playerInfluence[Travian.Player.data.playerId] ? b.oasis.playerInfluence[Travian.Player.data.playerId].rank : 0;
                        s = 0;
                        for (var n in b.oasis.playerInfluence) {
                            s++
                        }
                        E.tiInfos.oasisPlayerAmount = s
                    }
                    C.init(w.cd, b, Travian.Config.oasisConfig.usableArea)
                } else {
                    if (E.tiInfos.villageName = b.village.name,
                    E.tiInfos.population = b.village.population,
                    E.tiInfos.isMainVillage = Village.isMainVillage(b.village.type),
                    "undefined" != typeof b.village.influenceSize && C.init(w.Fe, b, b.village.influenceSize),
                    -1 == b.playerId && (c = MapDetails.get(b.id),
                    Cache.G(c, 60),
                    E.tiInfos.robberVillageDetails = c),
                    "undefined" != typeof b.influence && "undefined" != typeof h && !h.kingStatus) {
                        s = 0;
                        if (f.data.kingdomRole == Player.KINGDOM_ROLE_DUKE || f.data.kingdomRole == Player.KINGDOM_ROLE_KING) {
                            s = f.data.kingId
                        }
                        m = b.influence[s] || 0;
                        0 > m && (m += 999999999);
                        h = 0;
                        for (n in b.influence) {
                            c = b.influence[n],
                            h < c && n != s && (h = c)
                        }
                        E.tiInfos.influence = Math.floor(100 * (m / (m + h)))
                    }
                }
            } else {
                0 != b.resType && (n = getResourceAllocation(b.resType.toString()),
                E.tiInfos.resDistribution = n,
                b.menhir ? E.tiInfos.menhir = b.menhir : E.tiInfos.villageName = Travian.translate("HabitableField"))
            }
            b.wwZone && !A.yd() && (b = Ma(b.wwZone),
            b.x += Travian.Config.worldWonderConfig.mapTileOffset.x,
            b.y += Travian.Config.worldWonderConfig.mapTileOffset.y,
            A.init(w.cd, b, Travian.Config.worldWonderConfig.zone, 0))
        } else {
            E.tiInfos.coordsOnly = !0
        }
        !E.$$phase && E.$digest && E.$digest()
    }
    ;
    this.vf = function() {
        if (!K && L) {
            var a = z.O()
              , b = new V(a.current.x - L.left,a.current.y - L.top)
              , b = this.ia(new V(b.x,b.y)).round();
            if (W.x != b.x || W.y != b.y) {
                L = $(c.canvas).offset(),
                X.dg(b),
                T.push({
                    x: W.x,
                    y: W.y
                }),
                W = b,
                T.push({
                    x: W.x,
                    y: W.y
                }),
                e(D)
            }
            R && (b = Math.abs(aa - a.current.x),
            a = Math.abs(ga - a.current.y),
            22500 < b * b + a * a && u())
        }
    }
    .bind(this);
    this.Te = function() {
        var a = {
            x: 0,
            y: 0
        };
        if (null == document.activeElement || "BODY" == document.activeElement.tagName || "HTML" == document.activeElement.tagName || "DIV" == document.activeElement.tagName) {
            keyboard.Bc(keyboard.ib) && (a.y += 1),
            keyboard.Bc(keyboard.fb) && (a.y -= 1),
            keyboard.Bc(keyboard.hb) && (a.x += 1),
            keyboard.Bc(keyboard.Qa) && (a.x -= 1)
        }
        if (0 != a.x || 0 != a.y) {
            var b = 0, f;
            for (f in E.windows) {
                E.windows.hasOwnProperty(f) && b++
            }
            if (0 == b) {
                K = !0;
                b = Math.round(O.x + a.x * Math.abs(U.x));
                f = Math.round(O.y + a.y * Math.abs(U.y));
                var l = this.kd(b, f);
                l.x == a.x && (a.x = 0);
                l.y == a.y && (a.y = 0);
                X.Nc(b, f);
                R && u();
                0 != a.x && (U.x += 1.1 * a.x);
                0 != a.y && (U.y += 1.1 * a.y);
                0 >= U.x * a.x && (U.x = 1);
                0 >= U.y * a.y && (U.y = 1)
            }
        } else {
            U = {
                x: 1,
                y: 1
            }
        }
        a = z.O();
        a.ga && ca && (b = a.current.x - a.start.x,
        f = a.current.y - a.start.y,
        0 !== b || 0 !== f) && (l = X.ai(O.x + b, O.y + f),
        X.Nc(Math.round(O.x + b / l), Math.round(O.y + f / l)),
        a.start.x = a.current.x,
        a.start.y = a.current.y,
        R && u(),
        K = !0,
        $("#overlayMarkers .fireworks").hide());
        ia && K && this.Rf();
        a.ga || (K && (X.Me(O.x, O.y),
        $("#overlayMarkers .fireworks").show()),
        K = !1);
        b = V2.Sc(O, fa);
        fa = new V(O.x,O.y);
        a = [];
        if (0 !== b.x || 0 !== b.y || 2 == this.Wb) {
            null == Q && (Q = $(c.canvas).offset(),
            Q.left -= parseInt($(".mainContentWrapper").css("margin-left"), 0),
            L = Q),
            a = this.Ih()
        }
        f = !1;
        for (var h in this.L.fa[H]) {
            l = h.split("_"),
            l = {
                x: 1 * l[0],
                y: 1 * l[1]
            },
            "undefined" != typeof I[l.x] && (l.y >= I[l.x].yMin && l.y <= I[l.x].yMax) && (T.push(l),
            l = this.L.P(h, H, N),
            f = p(l) || f,
            e(D))
        }
        f && requestAngularApply();
        this.L.fa[H] = {};
        if (0 !== b.x || 0 !== b.y || 0 < this.Wb) {
            this.Wb = 0;
            X.renderer.Yb(J);
            h = T.slice();
            T = [];
            b = 0;
            for (f = h.length; b < f; b++) {
                this.oc(h[b].x, h[b].y)
            }
            b = 0;
            for (f = a.length; b < f; b++) {
                this.oc(a[b].x, a[b].y)
            }
        }
        v && window.setTimeout(X.Te, B)
    }
    .bind(this);
    this.init = function() {
        Q = null;
        a.aj();
        v = !0;
        window.setTimeout(this.Te, 20);
        for (var b = 0; b < da.length; b++) {
            var c = $("#" + da[b])[0];
            z.Jf(c, this.vf);
            z.ya(c, this.gi);
            "troopsOverview" != da[b] && z.Lf(c, this.Fj)
        }
        $("#map, #troopsOverview").each(function(a, b) {
            z.V(b, function() {
                if (!ca) {
                    ca = !0;
                    var a = z.D("up", function() {
                        a();
                        ca = !1
                    })
                }
            })
        })
    }
    ;
    this.Ni = function() {
        v = !1;
        for (var a = 0; a < da.length; a++) {
            var b = $("#" + da[a])[0];
            z.s(b)
        }
        $("#map, #troopsOverview").each(function(a, b) {
            z.s(b)
        })
    }
    ;
    this.Db = function(a, b, c, e, f) {
        var l = a.length
          , h = null
          , h = e ? f : this.L.P(b + "_" + c, H, N);
        if (!h.hasData) {
            return null
        }
        if (h.menhir) {
            return a.length - l
        }
        if (100 < h.landscape || e) {
            if (e || h.Id != f.Id + (h.x - f.x) || h.Jd != f.Jd + (h.y - f.y)) {
                if ("string" === typeof h.src) {
                    a.push(new n(this.Q(b, c),h.src))
                } else {
                    for (f = 0; f < h.src.length; f++) {
                        a.push(new n(this.Q(b, c),h.src[f]))
                    }
                }
            }
        }
        e || (null === h.N || 1 != J.markers) || 0 < h.N[Marker.TYPE_PLAYER].length && q(a, b, c, h.N[Marker.TYPE_PLAYER][0]);
        return a.length - l
    }
    ;
    this.oc = function(a, b) {
        try {
            var c = a + "_" + b
              , f = this.L.P(c, H, N, !1)
              , l = this.Q(a, b)
              , h = this.L.vc(f.playerId)
              , s = []
              , m = []
              , g = [];
            if (M > Ja) {
                var q = A.yd();
                q && q.gc[c] && g.push(new n(this.Q(a, b),"wwZoneBorders"));
                r(g, f, Marker.TYPE_COORDINATES);
                if (1 == J.borders && "undefined" != typeof h && null !== f.village && f.village.hasActiveTreasury && (h.kingStatus && J.kingdom == f.playerId && f.owner == f.playerId || (h.kingdomRole == Player.KINGDOM_ROLE_DUKE || h.kingdomRole == Player.KINGDOM_ROLE_VICEKING) && PlayerKingdomMapper.ba(J.kingdom) == h.kingdomId)) {
                    q = "kingVillage";
                    h.kingdomRole == Player.KINGDOM_ROLE_DUKE ? q = "dukeVillage" : h.kingdomRole == Player.KINGDOM_ROLE_VICEKING && (q = "vicekingVillage");
                    var u = t(f.playerId, f.ownerKingdomId, f, !1);
                    g.push(new n(this.Q(a, b),q,{
                        color: u,
                        capital: Village.isMainVillage(f.village.type)
                    }))
                }
                r(g, f, Marker.TYPE_TROOP_MOVEMENT);
                100 < f.landscape ? (g.push(new n(this.Q(a, b),"borders")),
                this.Db(g, a, b, !0, f)) : (this.Db(g, a, b, !0, f),
                g.push(new n(this.Q(a, b),"borders")));
                ia && (a == ia.x && b == ia.y) && g.push(new n(this.Q(a, b),"map_highlight.png"));
                a == W.x && b == W.y && g.push(new n(this.Q(a, b),"map_hover.png"));
                null !== f.oasis && Travian.Player.hasUiLimitationFlag(Player.UI_LIMITATIONS.SHOW_OASIS) && g.push(new n(this.Q(a + 0.12, b + 0.75),"oasis" + f.oasis.type + ".png"));
                f.menhir && g.push(new n(this.Q(a, b),"menhir.png"));
                r(g, f, Marker.TYPE_PLAYER) || r(g, f, Marker.TYPE_KINGDOM);
                h = [];
                if (!f.renderOthersCheck || 0 < f.renderOthers[0]) {
                    h[0] = this.Db(g, a + 1, b, !1, f)
                }
                if (!f.renderOthersCheck || 0 < f.renderOthers[1]) {
                    h[1] = this.Db(g, a, b - 1, !1, f)
                }
                if (!f.renderOthersCheck || 0 < f.renderOthers[2]) {
                    h[2] = this.Db(g, a + 1, b - 1, !1, f)
                }
                f.renderOthersCheck || (null === h[0] || null === h[1] || null === h[2]) || (f.renderOthersCheck = !0,
                f.renderOthers = h)
            }
            var w = C.yd();
            if (w && w.gc[c]) {
                g.push(new n(this.Q(a, b),"radiusBorders"));
                for (var p = new V(a,b), v = w.gc, c = [], w = 0; 8 > w; w++) {
                    c[w] = !0
                }
                "undefined" == typeof v[p.x - 1 + "_" + (p.y + 1)] && (c[0] = !1);
                "undefined" == typeof v[p.x + "_" + (p.y + 1)] && (c[1] = !1);
                "undefined" == typeof v[p.x + 1 + "_" + (p.y + 1)] && (c[2] = !1);
                "undefined" == typeof v[p.x + 1 + "_" + p.y] && (c[3] = !1);
                "undefined" == typeof v[p.x + 1 + "_" + (p.y - 1)] && (c[4] = !1);
                "undefined" == typeof v[p.x + "_" + (p.y - 1)] && (c[5] = !1);
                "undefined" == typeof v[p.x - 1 + "_" + (p.y - 1)] && (c[6] = !1);
                "undefined" == typeof v[p.x - 1 + "_" + p.y] && (c[7] = !1);
                m = c
            }
            var x = f.owner;
            if (0 < x) {
                f.ownerKingdomId = PlayerKingdomMapper.ba(x);
                var s = null === f.Le ? this.L.Fh(f, a, b) : f.Le
                  , I = t(f.owner, f.ownerKingdomId, f, !1);
                f.borderColorValue = I.colorRGBValues
            }
            M <= Ja && null != f.village && (I = t(f.village.playerId, PlayerKingdomMapper.ba(f.village.playerId), f, !0),
            f.villageColorValue = I.colorRGBValues);
            this.renderer.th(g, l, f, s, m);
            M <= Ja && (ia && a == ia.x && b == ia.y) && this.renderer.xf(l.x, l.y, "white");
            M <= Ja && (a == W.x && b == W.y) && this.renderer.xf(l.x, l.y, "red");
            !f.ra && M > Ja ? (T.push({
                x: a,
                y: b
            }),
            e(D),
            B = 200) : B = 20
        } catch (F) {}
        return f.ra
    }
    .bind(this);
    this.Kh = function() {
        return P.indexOf(M)
    }
    ;
    w.cd = 1;
    w.Fe = 2
}
var Ja;
function Pa(a, c) {
    var b = Math.abs(a.x - c.x)
      , f = Math.abs(a.y - c.y);
    return Math.sqrt(b * b + f * f)
}
function Qa(a, c) {
    "object" != typeof a && (a = Ma(a));
    "object" != typeof c && (c = Ma(c));
    return 3 < Math.abs(a.x - c.x) || 3 < Math.abs(a.y - c.y) ? !1 : !0
}
function Ra(a, c) {
    return Math.sqrt(a * a + c * c) <= Travian.Config.worldRadius
}
function Ma(a) {
    return {
        x: a % 32768 - 16384,
        y: Math.floor(a / 32768) - 16384
    }
}
function Ua(a) {
    var c = Ma(a);
    a = Math.floor(c.x / 7);
    c = Math.floor(c.y / 7);
    return a + 16384 + 32768 * (c + 16384)
}
function Va(a, c) {
    this.init = function(a, c) {
        this.f = a;
        this.border = 0;
        this.size = c.size || 128;
        this.line = c.line || 20;
        this.tb = c.tb || "255,64,0";
        this.opacity = c.opacity || "0.5";
        this.scale = c.scale || 1;
        this.md = this.line + 2 * this.scale;
        var g = this.line / 2 + this.border;
        this.Ec = {
            x: g,
            y: g
        };
        this.Lc = {
            x: this.size - g,
            y: this.size - g
        };
        this.Vc = {
            x: this.size - g,
            y: g
        };
        this.hc = {
            x: g,
            y: this.size - g
        };
        g = this.md / 2 + this.border + 2 * this.scale;
        this.Fc = {
            x: g,
            y: g
        };
        this.Mc = {
            x: this.size - g,
            y: this.size - g
        };
        this.Wc = {
            x: this.size - g,
            y: g
        };
        this.ic = {
            x: g,
            y: this.size - g
        }
    }
    ;
    this.init(a, c);
    this.start = function() {
        var a = this.f;
        a.save();
        a.translate(0, 34 * this.scale);
        a.scale(0.71, 0.3834);
        a.rotate(-0.25 * Math.PI)
    }
    ;
    this.end = function() {
        this.f.restore()
    }
    ;
    this.$ = function(a) {
        "left" == a && (this.f.moveTo(this.Ec.x, this.Ec.y),
        this.f.lineTo(this.Vc.x, this.Vc.y));
        "top" == a && (this.f.moveTo(this.Lc.x, this.Lc.y),
        this.f.lineTo(this.Vc.x, this.Vc.y));
        "right" == a && (this.f.moveTo(this.Lc.x, this.Lc.y),
        this.f.lineTo(this.hc.x, this.hc.y));
        "bottom" == a && (this.f.moveTo(this.Ec.x, this.Ec.y),
        this.f.lineTo(this.hc.x, this.hc.y))
    }
    ;
    this.jc = function(a, c) {
        "upperLeft" == a && (this.f.moveTo(this.Wc.x - c, this.Wc.y + c),
        this.f.lineTo(this.Wc.x + 0.02 - c, this.Wc.y + c));
        "upperRight" == a && (this.f.moveTo(this.Mc.x - c, this.Mc.y + c),
        this.f.lineTo(this.Mc.x + 0.02 - c, this.Mc.y + c));
        "lowerRight" == a && (this.f.moveTo(this.ic.x - c, this.ic.y + c),
        this.f.lineTo(this.ic.x + 0.02 - c, this.ic.y + c));
        "lowerLeft" == a && (this.f.moveTo(this.Fc.x - c, this.Fc.y + c),
        this.f.lineTo(this.Fc.x + 0.02 - c, this.Fc.y + c))
    }
    ;
    this.create = function(a, c, g, e, h, m, l, p) {
        this.start();
        this.f.beginPath();
        this.f.strokeStyle = "rgba(" + this.tb + "," + this.opacity + ")";
        this.f.lineWidth = this.line;
        this.f.lineCap = "square";
        c || this.$("top", p, e);
        e || this.$("right", c, m);
        m || this.$("bottom", p, e);
        p || this.$("left", c, m);
        this.f.stroke();
        var n = 1;
        for (0.5 < this.opacity && (n = 0); 2 > n; n++) {
            this.f.beginPath();
            if (1 == n) {
                this.f.strokeStyle = "rgba(" + this.tb + "," + Math.min(1, this.opacity + 0.3) + ")";
                this.f.lineWidth = this.md;
                var q = 0
            } else {
                this.f.strokeStyle = "rgba(0,0,0,0.5)",
                this.f.lineWidth = this.md,
                q = 2 * this.scale
            }
            this.f.lineCap = "square";
            c != p || a && c || this.jc("upperLeft", q);
            c != e || g && c || this.jc("upperRight", q);
            m != e || h && m || this.jc("lowerRight", q);
            m != p || l && m || this.jc("lowerLeft", q);
            this.f.stroke()
        }
        this.end()
    }
}
function Wa(a) {
    function c() {
        var a = {}, c;
        for (c in l.La) {
            var e = [], f;
            for (f in l.La[c]) {
                e = e.concat(g(f))
            }
            a[c] = eliminateDuplicates(e);
            for (e = 0; e < a[c].length; e++) {
                if (f = a[c][e],
                !l.region[c].hasOwnProperty(f)) {
                    var h = id2xy(f);
                    l.region[c][f] = new Xa(h.x,h.y);
                    c == Ka && FieldMarkerGlobal.getCollection(f).subscribe(b)
                }
            }
        }
        r || (r = FieldMarkerPersonal.getCollection(),
        r.subscribe(b));
        Travian.request("map/getByRegionIds", {
            regionIdCollection: a
        }, l.Li);
        for (c in l.La) {
            l.La[c] = {}
        }
        m = null
    }
    function b(a) {
        for (var b = 0; b < a.lastRemovedEntries.length; b++) {
            var c = a.lastRemovedEntries[b]
              , e = c.data.cellId;
            if (q[e]) {
                for (var f = 0; f < q[e].length; f++) {
                    if ("FieldMarkerPersonal" == c.name && c.data.id === q[e][f].data.id) {
                        q[e].splice(f, 1);
                        break
                    }
                }
            }
        }
        for (b = 0; b < a.data.length; b++) {
            c = a.data[b];
            e = c.data.cellId;
            f = !1;
            if (void 0 === q[e]) {
                c.data.isClosed || (q[e] = [],
                q[e].push(c),
                f = !0)
            } else {
                for (var h = !1, m = 0; m < q[e].length; m++) {
                    if (q[e][m].data.id === c.data.id && q[e][m].data.isGlobal === c.data.isGlobal) {
                        c.data.isClosed ? q[e].splice(m, 1) : q[e][m] = c;
                        f = h = !0;
                        break
                    }
                }
                h || c.data.isClosed || (q[e].push(c),
                f = !0)
            }
            f && (q[e].sort(function(a, b) {
                return b.data.timestamp - a.data.timestamp
            }),
            c = id2xy(e),
            l.fa[Ka][c.x + "_" + c.y] = !0)
        }
    }
    function f(a) {
        var b = null != a.N
          , c = {};
        c[Marker.TYPE_PLAYER] = [];
        c[Marker.TYPE_KINGDOM] = [];
        c[Marker.TYPE_COORDINATES] = [];
        c[Marker.TYPE_TROOP_MOVEMENT] = [];
        var f = !1;
        a.Za = null;
        a.bb = null;
        for (var m = 0; m < e.data.length; m++) {
            var g = e.data[m]
              , n = !1;
            g.data.type == Marker.TYPE_PLAYER && g.data.targetId == a.playerId && (a.bb = g.data.color,
            n = !0);
            g.data.type == Marker.TYPE_KINGDOM && g.data.targetId == PlayerKingdomMapper.ba(a.playerId) && (n = !0);
            g.data.type == Marker.TYPE_KINGDOM && g.data.targetId == PlayerKingdomMapper.ba(a.owner) && (a.Za = g.data.color);
            g.data.type == Marker.TYPE_COORDINATES && g.data.targetId == a.id && (n = !0);
            n && (c[g.data.type].push(g),
            f = !0)
        }
        m = a.id;
        null != a.Dj && (m = a.Dj.villageId);
        if ("undefined" != typeof h[m]) {
            for (var q in h[m]) {
                g = new Marker,
                g.set({
                    color: 1,
                    targetId: -1,
                    type: Marker.TYPE_TROOP_MOVEMENT,
                    owner: Marker.TYPE_PLAYER,
                    moveType: q,
                    moveData: h[m][q],
                    playerId: a.playerId
                }),
                c[g.data.type].push(g)
            }
            f = !0
        }
        0 < f ? (a.N = c,
        l.fa[Ka][a.x + "_" + a.y] = !0) : (a.N = null,
        b && (l.fa[Ka][a.x + "_" + a.y] = !0))
    }
    function g(a) {
        a = parseInt(a);
        var b = id2xy(a)
          , c = [];
        c.push(xy2id(b.x - 1, b.y - 1));
        c.push(xy2id(b.x, b.y - 1));
        c.push(xy2id(b.x + 1, b.y - 1));
        c.push(a - 1);
        c.push(a);
        c.push(a + 1);
        c.push(xy2id(b.x - 1, b.y + 1));
        c.push(xy2id(b.x, b.y + 1));
        c.push(xy2id(b.x + 1, b.y + 1));
        return c
    }
    var e = a
      , h = {};
    this.Zd = {};
    this.wb = function() {
        l.$a = {};
        l.sb = {};
        l.fa = {
            1: {},
            3: {}
        };
        l.F = {
            1: {},
            3: {}
        };
        l.region = {
            1: {},
            2: {},
            3: {},
            4: {},
            5: {},
            6: {}
        };
        l.La = {
            1: {},
            2: {},
            3: {},
            4: {},
            5: {},
            6: {}
        }
    }
    ;
    var m = null
      , l = this
      , p = 0
      , n = null
      , q = {}
      , r = null;
    this.wb();
    this.aj = function() {
        p = (new Date).getTime();
        Travian.request("map/getHeatmapMaximums", {}, function(a) {
            n = a
        })
    }
    ;
    this.mj = function(a) {
        var b = [], c;
        for (c in a) {
            if (void 0 === h[c]) {
                b.push(c)
            } else {
                for (var e in a[c]) {
                    void 0 === h[c][e] && b.push(c)
                }
            }
        }
        for (c in h) {
            if (void 0 === a[c]) {
                b.push(c)
            } else {
                for (e in h[c]) {
                    void 0 === a[c][e] && b.push(c)
                }
            }
        }
        h = a;
        for (a = 0; a < b.length; a++) {
            c = id2xy(b[a]),
            void 0 !== this.F[Ka][c.x + "_" + c.y] && f(this.F[Ka][c.x + "_" + c.y])
        }
    }
    ;
    this.Qf = function() {
        for (var a in this.F[Ka]) {
            f(this.F[Ka][a])
        }
        for (a in this.F[La]) {
            f(this.F[La][a])
        }
    }
    ;
    this.Rh = function() {
        return n
    }
    ;
    this.Mh = function(a) {
        return q[a]
    }
    ;
    this.Li = function(a) {
        if ("undefined" != typeof a) {
            for (var b in a) {
                b == Ka || b == Ya ? null != a[b] && this.hi(a[b], b) : this.ji(a[b], b)
            }
        }
    }
    .bind(this);
    this.ji = function(a, b) {
        var c = (new Date).getTime(), e;
        for (e in a) {
            var f = this.region[b][e];
            "undefined" == typeof f && (f = id2xy(e),
            this.region[b][e] = new Xa(f.x,f.y),
            f = this.region[b][e]);
            f.Cf = !1;
            f.ra = !0;
            f = id2xy(e);
            f.x *= 21;
            f.y *= 21;
            var l = a[e];
            if (null != l) {
                for (var h = 0; h < l.length; h++) {
                    for (var m = 0; m < l[h].length; m++) {
                        if (b == La) {
                            this.ii(l[h][m], f, h, m, c)
                        } else {
                            var g = f.x + h + "_" + (f.y + m);
                            this.P(g, La, 0).xc[b] = l[h][m];
                            this.fa[La][g] = !0
                        }
                    }
                }
            }
        }
    }
    .bind(this);
    this.ii = function(a, b, c, f, l) {
        var h = a
          , m = h[0]
          , g = h[1]
          , n = h[2]
          , q = h[3];
        b = b.x + c + "_" + (b.y + f);
        a = this.P(b, La, 0);
        a.landscape = Math.floor(m / 1E3) % 10;
        a.owner = g;
        a.village = null;
        a.cropAmount = q;
        a.bb = null;
        a.Za = null;
        a.ra = !0;
        if (0 < n) {
            for (a.village = {
                playerId: h[4],
                kingdomId: PlayerKingdomMapper.ba(h[4]),
                tribe: n % 10,
                size: Math.floor(n / 10) % 10,
                type: Math.floor(n / 100) % 100
            },
            h = 0; h < e.data.length; h++) {
                m = e.data[h],
                m.data.type == Marker.TYPE_PLAYER && m.data.targetId == a.village.playerId && (a.bb = m.data.color),
                m.data.type == Marker.TYPE_KINGDOM && (g = PlayerKingdomMapper.ba(a.owner),
                0 < a.owner && m.data.targetId == g && (a.Za = m.data.color),
                m.data.targetId == a.village.kingdomId && (a.bb = m.data.color))
            }
        }
        if (null == a.village && 0 < a.owner) {
            for (g = PlayerKingdomMapper.ba(a.owner),
            h = 0; h < e.data.length; h++) {
                m = e.data[h],
                m.data.type == Marker.TYPE_KINGDOM && m.data.targetId == g && (a.Za = m.data.color)
            }
        }
        a.Qb = l;
        a.Rb = -1;
        this.fa[La][b] = !0
    }
    .bind(this);
    this.hi = function(a, b) {
        if ("undefined" != typeof a) {
            var c = (new Date).getTime(), e;
            for (e in a.player) {
                "undefined" != typeof this.$a[e] && this.$a[e].kingdomId != a.player[e].kingdomId && (PlayerKingdomMapper.removeMemberships(Array(e)),
                PlayerKingdomMapper.hj(e, a.player[e].kingdomId)),
                this.$a[e] = a.player[e]
            }
            for (var l in a.kingdom) {
                this.sb[l] = a.kingdom[l]
            }
            for (var h in a.reports) {
                this.Zd[h] = a.reports[h]
            }
            for (var m in a.region) {
                h = this.region[b][m];
                "undefined" == typeof h && (h = id2xy(m),
                this.region[b][m] = new Xa(h.x,h.y),
                h = this.region[b][m]);
                h.Cf = !1;
                h.ra = !0;
                l = a.region[m];
                for (var g = 0; g < l.length; g++) {
                    e = l[g];
                    h = id2xy(e.id);
                    e.x = h.x;
                    e.y = h.y;
                    h = e.x + "_" + e.y;
                    var n = this.P(h, Ka, 0);
                    delete n.villageId;
                    n.influence = {};
                    n.tributeInfluences = {};
                    n.village = null;
                    delete n.playerId;
                    delete n.menhir;
                    for (var q in e) {
                        n[q] = e[q]
                    }
                    n.src = "field" + n.landscape + ".png";
                    if (100 < n.landscape) {
                        e = Math.floor(n.landscape / 100) % 10;
                        var p = Math.floor(n.landscape / 10) % 10 - 5
                          , r = Math.floor(n.landscape / 1) % 10 - 5
                          , J = Resources.STRING[Math.floor(n.landscape / 1E3) % 10];
                        n.Id = p;
                        n.Jd = r;
                        n.src = J + e + "_" + p + "_" + r + ".png"
                    }
                    9E3 <= n.landscape && (p = Math.floor(n.landscape / 10) % 10 - 2,
                    r = Math.floor(n.landscape / 1) % 10 - 2,
                    n.src = "ww_" + p + "_" + r + ".png",
                    -1 == p && 1 == r && (n.src = [],
                    n.src.push("ww_-1_1.png"),
                    n.src.push("ww_cloud.png")));
                    null != n.village && (e = n.playerId,
                    !Village.isWWVillage(n.village.type) && "undefined" == typeof this.$a[e] && 0 < e ? n.src = "field" + Math.round(15 * Math.random()) + ".png" : Village.isWWVillage(n.village.type) ? (n.src = [],
                    n.src.push("ww_-1_1.png"),
                    n.src.push("ww_village.png")) : e == Player.ID.NATAR ? n.src = "village4_2.png" : e > Player.ID.NATAR ? (n.src = Village.getPlayerVillageImageClass(this.$a[e].tribeId, this.$a[e].active, n.village.type, n.village.population),
                    n.src += ".png") : 100 < n.landscape ? (e = n.src,
                    n.src = [],
                    n.src.push(e),
                    n.village.type == Village.TYPE_GOVERNOR_NPC_VILLAGE ? n.src.push("villageNPCgov.png") : Gameworld.isHalloween() ? n.src.push("villageHalloweenHideout.png") : n.src.push("villageRobberHideout.png")) : Gameworld.isHalloween() ? n.src = "villageHalloweenCamp.png" : n.src = "villageRobber.png",
                    n.village.type == Village.TYPE_GOVERNOR_NPC_VILLAGE && (n.owner = Travian.Player.data.playerId));
                    f(n);
                    n.Qb = c;
                    n.Rb = -1;
                    n.hasData = !0;
                    this.fa[Ka][h] = !0;
                    this.fa[Ka][n.x - 1 + "_" + n.y] = !0;
                    this.fa[Ka][n.x + "_" + (n.y + 1)] = !0;
                    this.fa[Ka][n.x - 1 + "_" + (n.y + 1)] = !0
                }
            }
        }
    }
    .bind(this);
    this.ej = function(a) {
        this.Zd[a.villageId] = a
    }
    ;
    this.P = function(a, b, e, f) {
        0 == e && (e = b);
        var l = !1
          , h = "undefined" !== typeof this.F[b] && "undefined" != typeof this.F[b][a];
        if (h && null != this.F[b][a].village) {
            var n = (new Date).getTime();
            this.F[b][a].Qb < p && this.F[b][a].Qb < n - 6E4 && this.F[b][a].Ob && (l = !0,
            this.F[b][a].Qb = n)
        }
        h && 0 < this.F[b][a].Rb && this.F[b][a].Rb < n - 1E4 && (f = !0);
        h && b == La && e != La && 0 > this.F[b][a].xc[e] && (f = !0);
        if (f || l || !h) {
            n = a.split("_"),
            f = 1 * n[0],
            n = 1 * n[1],
            h || (this.F[b][a] = new Za(f,n)),
            h = 7,
            b == La && (h = 21),
            f = Math.floor(f / h),
            n = Math.floor(n / h),
            h = xy2id(f, n),
            this.region[e].hasOwnProperty(h) || this.La[e].hasOwnProperty(h) || (this.La[e][h] = new V(f,n),
            null == m && (m = window.setTimeout(c, 10))),
            l && (this.F[b][a].Ob && "undefined" == typeof this.La[Ya][h]) && (this.La[Ya][h] = new V(f,n),
            null == m && (m = window.setTimeout(c, 10)))
        }
        return this.F[b][a]
    }
    ;
    this.ta = function(a, b) {
        return this.P(a, b, 0).owner
    }
    ;
    this.ei = function(a) {
        return h[a]
    }
    ;
    this.vc = function(a) {
        var b = this.$a[a];
        if ("undefined" != typeof b) {
            var c = PlayerKingdomMapper.ba(a);
            b.kingdomTag = "";
            if (c != b.kingdomId) {
                b.kingdomId = c;
                if ("undefined" == typeof this.sb[b.kingdomId]) {
                    var e = Kingdom.get(c);
                    if (e.filled) {
                        f.sb[c] = {
                            tag: e.data.tag
                        }
                    } else {
                        var f = this
                          , l = e.subscribe(function() {
                            f.sb[c] = {
                                tag: e.data.tag
                            };
                            e.unsubscribe(l)
                        })
                    }
                }
                this.Qf()
            }
            0 < b.kingdomId && "undefined" != typeof this.sb[b.kingdomId] && (b.kingdomTag = this.sb[b.kingdomId].tag)
        }
        return b
    }
    ;
    this.kf = function(a) {
        return this.Zd[a]
    }
    ;
    this.Fh = function(a, b, c) {
        a = a.owner;
        var e = [];
        e[0] = this.ta(b - 1 + "_" + (c + 1), Ka);
        e[1] = this.ta(b + "_" + (c + 1), Ka);
        e[2] = this.ta(b + 1 + "_" + (c + 1), Ka);
        e[3] = this.ta(b + 1 + "_" + c, Ka);
        e[4] = this.ta(b + 1 + "_" + (c - 1), Ka);
        e[5] = this.ta(b + "_" + (c - 1), Ka);
        e[6] = this.ta(b - 1 + "_" + (c - 1), Ka);
        e[7] = this.ta(b - 1 + "_" + c, Ka);
        b = [];
        for (c = 0; c < e.length; c++) {
            b[c] = e[c] == a
        }
        return b
    }
    ;
    this.nh = function(a) {
        var b = id2xy(a);
        a = 21 * b.x;
        for (var c = 21 * b.y, b = [], e = a; e < a + 21; e++) {
            for (var f = c; f < c + 21; f++) {
                var l = e + "_" + f, h;
                for (h in this.F) {
                    "undefined" != typeof this.F[h][l] && (this.F[h][l].Ob ? b.push(l) : delete this.F[h][l])
                }
            }
        }
        for (e = a; e < a + 21; e += 7) {
            for (f = c; f < c + 21; f += 7) {
                for (h in l = xy2id(Math.floor(e / 7), Math.floor(f / 7)),
                this.F) {
                    delete this.region[h][l]
                }
            }
        }
        for (a = 0; a < b.length; a++) {
            for (h in this.F) {
                this.P(b[a], h, 0, !0)
            }
        }
    }
}
var Ka = 1
  , Ya = 2
  , La = 3;
function Za(a, c) {
    this.landscape = this.resType = 0;
    this.owner = -2;
    this.playerId = 0;
    this.oasis = this.village = null;
    this.cropAmount = 0;
    this.influence = {};
    this.tributeInfluences = {};
    this.x = a;
    this.y = c;
    this.id = xy2id(a, c);
    this.uh = 0;
    this.ra = this.Ob = this.hasData = !1;
    this.Jd = this.Id = 0;
    this.src = "map_loading.png";
    0 == Travian.Player.isOnMap() && (this.src = "map_fog.png");
    this.bb = this.Za = this.Le = this.N = null;
    this.Qb = (new Date).getTime();
    this.Rb = (new Date).getTime();
    this.xc = {
        4: -1,
        5: -1,
        6: -1
    }
}
function Xa(a, c) {
    this.x = a;
    this.y = c;
    this.Cf = !0;
    this.ra = !1
}
function $a(a, c, b, f, g, e, h, m) {
    this.e = g;
    this.L = a;
    var l = 1;
    this.j = f;
    var p = new V(b.x,b.y)
      , n = this
      , q = {};
    this.Ib = h;
    this.Kd = 1 == h;
    this.Oc = m || "";
    this.Ka = Travian.Config.worldRadius;
    this.X = new V(c.x + 2 * this.j.x,c.y + 2 * this.j.y);
    this.ca = new V(this.j.x / 2,this.j.y / 2);
    this.J = new V(this.X.x,this.X.y);
    this.canvas = document.createElement("canvas");
    this.canvas.id = "canvasMap";
    this.canvas.width = this.J.x;
    this.canvas.height = this.J.y;
    this.canvas.style.position = "absolute";
    this.canvas.style.top = "-" + this.j.y + "px";
    this.canvas.style.left = "-" + this.j.x + "px";
    this.offset = new V(this.j.x,this.j.y);
    this.f = this.canvas.getContext("2d");
    b == f && (this.f.fillStyle = "#c5de89",
    1 == this.Ib ? this.f.fillStyle = "#233d5a" : "winter" == this.Oc && (this.f.fillStyle = "#a4d5f5"),
    this.f.fillRect(0, 0, this.canvas.width, this.canvas.height));
    this.Qe = {};
    var r = null
      , t = null;
    this.Yb = function(a) {
        q = a;
        t.Yb(a)
    }
    ;
    this.$f = function(b) {
        l = b;
        this.j = new V(p.x,p.y);
        this.j.multiply(l);
        this.ca = new V(this.j.x / 2,this.j.y / 2);
        this.Uc = document.createElement("canvas");
        this.Uc.width = this.j.x;
        this.Uc.height = this.j.y;
        this.yj = this.Uc.getContext("2d");
        null != t ? t.init(this.f, this.j) : t = new ab(a,this.f,this.j);
        this.fe()
    }
    ;
    this.fe = function() {
        b == f && (this.f.fillStyle = "rgba(0,0,0,0.2)",
        this.f.fillRect(0, 0, this.canvas.width, this.canvas.height),
        this.f.fill())
    }
    ;
    this.$f(1);
    this.fj = function(a) {
        this.X = new V(a.x + 2 * p.x,a.y + 2 * p.y);
        this.J = new V(this.X.x,this.X.y);
        this.canvas.width = this.J.x;
        this.canvas.height = this.J.y;
        var b = document.getElementById("canvasBorder");
        null != b && (b.style.width = a.x + "px",
        b.style.height = a.y + "px")
    }
    ;
    this.Je = function(a) {
        var b = document.createElement("div");
        b.id = "canvasBorder";
        b.style.position = "absolute";
        b.style.top = 0;
        b.style.left = 0;
        b.style.overflow = "hidden";
        b.style.width = this.X.x + "px";
        b.style.height = this.X.y + "px";
        Travian.Config.nightMode && (b.className = "nightModeContrast");
        b.appendChild(this.canvas);
        a.appendChild(b)
    }
    ;
    this.oj = function(a) {
        this.f.drawImage(this.canvas, a.x, a.y)
    }
    ;
    this.th = function(a, b, c, e, f) {
        l <= Ja ? t.rh(b, c) : (a = this.ah(a, b, c, e, f),
        c.ra && this.f.drawImage(a, b.x, b.y))
    }
    ;
    this.qh = function(a, b, c) {
        var e = n.e.get(a.src);
        if (null !== e) {
            var f = Math.round(e.cfg.d * l)
              , h = Math.round(e.cfg.a * l);
            if (c) {
                var m = V2.Sc(a.Jc, b);
                b = m.x;
                m = Math.round(n.j.y - e.cfg.a * l) + m.y;
                0 < this.Ib && !a.src.match(/hover|marker|hideout|npc/i) ? (n.Tb || (n.Tb = document.createElement("canvas"),
                n.Tb.width = n.j.x,
                n.Tb.height = n.j.y,
                n.Ya = n.Tb.getContext("2d")),
                e = n.e.get(a.src),
                n.Ya.globalCompositeOperation = "copy",
                n.Ya.drawImage(e.image, e.cfg.x, e.cfg.y, e.cfg.d, e.cfg.a, b, m, f, h),
                n.Ya.globalCompositeOperation = "source-atop",
                n.Ya.beginPath(),
                n.Ya.rect(b, m, f, h),
                e = n.Ib,
                e = a.src.match("oasis") ? 0.1 * e : 0.6 * e,
                n.Ya.fillStyle = "rgba(0,0,100," + e + ")",
                n.Ya.fill(),
                c.drawImage(n.Tb, 0, 0),
                n.Kd && (a = a.src.replace(".png", "_n.png"),
                G[a] && (a = n.e.get(a),
                c.drawImage(a.image, a.cfg.x, a.cfg.y, a.cfg.d, a.cfg.a, b, m, f, h)))) : c.drawImage(e.image, e.cfg.x, e.cfg.y, e.cfg.d, e.cfg.a, b, m, f, h)
            } else {
                this.f.drawImage(e.image, e.cfg.x, e.cfg.y, e.cfg.d, e.cfg.a, a.Jc.x, Math.round(n.j.y - e.cfg.a * l) + a.Jc.y, f, h)
            }
            return !0
        }
        return !1
    }
    ;
    this.ah = function(a, b, c, e, f) {
        c.uh++;
        var l = this.yj;
        a.unshift({
            Jc: b,
            src: "field0_0" + (this.Oc ? "_" + this.Oc[0] : "") + ".png"
        });
        c.ra = !0;
        for (var h = 0, m = a.length; h < m; h++) {
            "borders" == a[h].src ? 1 == q.borders && n.Xg(c, e, l) : "radiusBorders" == a[h].src ? n.Ke(l, f) : "wwZoneBorders" == a[h].src ? n.Ke(l) : "kingVillage" == a[h].src ? n.ph(a[h].data, l) : "dukeVillage" == a[h].src ? n.af(a[h].data, l) : "vicekingVillage" == a[h].src ? n.af(a[h].data, l) : n.qh(a[h], b, l) || (c.ra = !1)
        }
        if (!c.ra) {
            return null
        }
        a = n.e.get("fullTileGround.png");
        null != a && (l.globalCompositeOperation = "destination-in",
        l.drawImage(a.image, a.cfg.x, a.cfg.y, a.cfg.d, a.cfg.a, 0, 0, n.j.x, n.j.y),
        l.globalCompositeOperation = "source-over");
        return this.Uc
    }
    ;
    this.ph = function(a, b) {
        b.lineWidth = 1;
        b.beginPath();
        b.moveTo(123 * l, 34 * l);
        b.lineTo(108 * l, 25 * l);
        b.lineTo(85 * l, 30 * l);
        b.bezierCurveTo(86 * l, 26 * l, 89 * l, 22 * l, 93 * l, 17 * l);
        b.bezierCurveTo(84 * l, 19 * l, 77 * l, 21 * l, 71 * l, 21 * l);
        b.lineTo(78 * l, 9 * l);
        b.lineTo(63 * l, 1 * l);
        b.lineTo(49 * l, 9 * l);
        b.lineTo(56 * l, 21 * l);
        b.bezierCurveTo(49 * l, 21 * l, 42 * l, 19 * l, 34 * l, 17 * l);
        b.bezierCurveTo(37 * l, 22 * l, 40 * l, 26 * l, 41 * l, 30 * l);
        b.lineTo(19 * l, 25 * l);
        b.lineTo(4 * l, 34 * l);
        b.lineTo(19 * l, 43 * l);
        b.lineTo(41 * l, 39 * l);
        b.bezierCurveTo(40 * l, 42 * l, 37 * l, 46 * l, 34 * l, 51 * l);
        b.bezierCurveTo(42 * l, 49 * l, 49 * l, 48 * l, 56 * l, 47 * l);
        b.lineTo(49 * l, 59 * l);
        b.lineTo(63 * l, 67 * l);
        b.lineTo(78 * l, 59 * l);
        b.lineTo(71 * l, 47 * l);
        b.bezierCurveTo(77 * l, 48 * l, 84 * l, 49 * l, 93 * l, 51 * l);
        b.bezierCurveTo(89 * l, 46 * l, 86 * l, 42 * l, 85 * l, 39 * l);
        b.lineTo(108 * l, 43 * l);
        b.closePath();
        a.capital ? (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.9)",
        b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.5)") : (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.8)",
        b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.2)");
        b.fill();
        b.stroke()
    }
    ;
    this.af = function(a, b) {
        b.lineWidth = 1;
        b.beginPath();
        b.moveTo(63 * l, 34 * l);
        b.lineTo(75 * l, 13 * l);
        b.lineTo(63 * l, 6 * l);
        b.lineTo(51 * l, 13 * l);
        b.lineTo(63 * l, 34 * l);
        b.lineTo(51 * l, 56 * l);
        b.lineTo(63 * l, 63 * l);
        b.lineTo(75 * l, 56 * l);
        b.lineTo(63 * l, 34 * l);
        b.lineTo(101 * l, 26 * l);
        b.lineTo(114 * l, 34 * l);
        b.lineTo(101 * l, 42 * l);
        b.lineTo(25 * l, 26 * l);
        b.lineTo(12 * l, 34 * l);
        b.lineTo(25 * l, 42 * l);
        b.closePath();
        a.capital ? (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.9)",
        b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.5)") : (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.8)",
        b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.2)");
        b.fill();
        b.stroke()
    }
    ;
    this.ff = function(a, b, c, e) {
        b = a.tb + a.opacity + a.line + b + "," + c;
        var f = this.Qe[b];
        "undefined" == typeof f && (f = document.createElement("canvas"),
        f.id = "canvasBorders",
        f.width = this.j.x,
        f.height = this.j.x,
        c = f.getContext("2d"),
        this.Qe[b] = f,
        null == r ? r = new Va(c,a) : r.init(c, a),
        r.create(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7]));
        return f
    }
    ;
    this.Xg = function(a, b, c) {
        var f = a.owner;
        if (0 < f) {
            var h = {}
              , n = 0.4;
            h.size = this.j.x;
            h.scale = l;
            h.line = 10 * l;
            q.kingdom == f && (n = 0.7);
            f == e.data.kingId && (n += 0.2);
            h.tb = a.borderColorValue;
            h.opacity = n;
            a = !0;
            for (n = f = 0; 8 > n; n++) {
                a = a && b[n],
                b[n] && (f += Math.pow(2, n))
            }
            a || (b = this.ff(h, f, l, b),
            c.drawImage(b, 0, 0))
        }
    }
    ;
    var u = [!1, !0, !0, !0, !0, !0, !0, !0];
    this.Ke = function(a, b) {
        var c = {
            size: this.j.x,
            line: 5 * l,
            scale: l,
            tb: "255, 255, 255"
        };
        b || (b = u,
        c.line *= 24,
        c.opacity = "" + Math.floor(100 * (0.2 - 0.15 * this.Ib)) / 100);
        for (var e = 0, f = 0; 8 > f; f++) {
            b[f] && (e += Math.pow(2, f))
        }
        c = this.ff(c, e, l, b);
        a.drawImage(c, 0, 0)
    }
    ;
    this.xf = function(a, b, c) {
        this.f.strokeStyle = c;
        this.f.beginPath();
        this.f.moveTo(a + this.j.x / 2, b + 1);
        this.f.lineTo(a + this.j.x - 1, b + this.j.y / 2);
        this.f.lineTo(a + this.j.x / 2, b + this.j.y - 1);
        this.f.lineTo(a + 1, b + this.j.y / 2);
        this.f.closePath();
        this.f.stroke()
    }
}
function ab(a, c, b) {
    function f(a, b, c) {
        for (var e = "#", f = a.split(","), h = 0; 3 > h; h++) {
            col2 = 1 < f.length ? parseInt(f[h]) : parseInt(a.substr(2 * h, 2), 16);
            var m = parseInt(c.substr(2 * h + 1, 2), 16)
              , m = Math.round(m + (col2 - m) * b).toString(16);
            2 > m.length && (m = "0" + m);
            e += m
        }
        return e
    }
    function g(a, b) {
        function c(a) {
            return "#" == a.charAt(0) ? a.substring(1, 7) : a
        }
        function e(a) {
            var b = {};
            b.Vd = parseInt(c(a).substring(0, 2), 16);
            b.ud = parseInt(c(a).substring(2, 4), 16);
            b.gd = parseInt(c(a).substring(4, 6), 16);
            return b
        }
        function f(a) {
            var b = parseInt(a);
            if (0 == b || isNaN(a)) {
                return "00"
            }
            b = Math.round(Math.min(Math.max(0, b), 255));
            return "0123456789abcdef".charAt((b - b % 16) / 16) + "0123456789abcdef".charAt(b % 16)
        }
        var h = e("#D5E874"), m = e("#ff0000"), g = (b - 1) / (a - 1), s, x;
        s = (m.Vd - h.Vd) * g + h.Vd;
        x = (m.ud - h.ud) * g + h.ud;
        h = (m.gd - h.gd) * g + h.gd;
        return "#" + f(s) + f(x) + f(h)
    }
    var e = {};
    this.L = a;
    var h = null;
    this.init = function(a, b) {
        this.f = a;
        this.j = b
    }
    ;
    this.init(c, b);
    var m = this;
    this.Yb = function(a) {
        e = a
    }
    ;
    this.rh = function(a, b) {
        if (0 < e.heatmap) {
            m.sh(a, b, e.heatmap)
        } else {
            this.f.fillStyle = "#c5de89";
            var c = b.owner;
            0 < b.landscape && (1 == b.landscape && (this.f.fillStyle = f("7eac5b", 0.3, this.f.fillStyle)),
            2 == b.landscape && (this.f.fillStyle = f("d28c5d", 0.3, this.f.fillStyle)),
            3 == b.landscape && (this.f.fillStyle = f("839aab", 0.3, this.f.fillStyle)),
            4 == b.landscape && (this.f.fillStyle = f("76b4e2", 0.3, this.f.fillStyle)));
            this.f.lineWidth = 1;
            this.f.strokeStyle = "#788753";
            this.f.beginPath();
            this.f.moveTo(a.x + this.j.x / 2, a.y);
            this.f.lineTo(a.x + this.j.x, a.y + this.j.y / 2);
            this.f.lineTo(a.x + this.j.x / 2, a.y + this.j.y);
            this.f.lineTo(a.x, a.y + this.j.y / 2);
            this.f.closePath();
            if (0 < c && 1 == e.borders) {
                c = 0.5;
                "undefined" != typeof e.borderAlpha && (c = e.borderAlpha);
                var h = b.borderColorValue;
                this.f.fillStyle = f(h, c, this.f.fillStyle)
            }
            this.f.fill();
            this.f.stroke();
            null != b.village && (c = 0.5,
            "undefined" != typeof e.villageAlpha && (c = e.villageAlpha),
            h = b.villageColorValue,
            this.f.strokeStyle = f(h, c, "#000000"),
            c = 1.5,
            "undefined" != typeof e.lineWidth && (c = e.lineWidth),
            this.f.lineWidth = c,
            this.f.beginPath(),
            this.f.moveTo(a.x + this.j.x / 2, a.y + c),
            this.f.lineTo(a.x + this.j.x - c, a.y + this.j.y / 2),
            this.f.lineTo(a.x + this.j.x / 2, a.y + this.j.y - c),
            this.f.lineTo(a.x + c, a.y + this.j.y / 2),
            this.f.closePath(),
            this.f.stroke())
        }
    }
    ;
    this.sh = function(b, c, e) {
        null == h && (h = a.Rh());
        this.f.fillStyle = "#c5de89";
        0 < c.xc[e] && (this.f.fillStyle = g(h[e], c.xc[e]));
        0 < c.landscape && (1 == c.landscape && (this.f.fillStyle = f("7eac5b", 0.3, this.f.fillStyle)),
        2 == c.landscape && (this.f.fillStyle = f("d28c5d", 0.3, this.f.fillStyle)),
        3 == c.landscape && (this.f.fillStyle = f("839aab", 0.3, this.f.fillStyle)),
        4 == c.landscape && (this.f.fillStyle = f("76b4e2", 0.3, this.f.fillStyle)));
        this.f.lineWidth = 1;
        this.f.strokeStyle = "#788753";
        this.f.beginPath();
        this.f.moveTo(b.x + this.j.x / 2, b.y);
        this.f.lineTo(b.x + this.j.x, b.y + this.j.y / 2);
        this.f.lineTo(b.x + this.j.x / 2, b.y + this.j.y);
        this.f.lineTo(b.x, b.y + this.j.y / 2);
        this.f.closePath();
        this.f.fill();
        this.f.stroke()
    }
}
V = function(a, c) {
    this.x = a || 0;
    this.y = c || 0
}
;
V.prototype = new function bb() {
    this.set = function(c, b) {
        this.x = c;
        this.y = b;
        return this
    }
    ;
    this.abs = function() {
        this.x = Math.abs(this.x);
        this.y = Math.abs(this.y)
    }
    ;
    this.add = function(c) {
        this.x += c.x;
        this.y += c.y;
        return this
    }
    ;
    this.Sc = function(c) {
        this.x -= c.x;
        this.y -= c.y;
        return this
    }
    ;
    this.multiply = function(c) {
        this.x *= c;
        this.y *= c;
        return this
    }
    ;
    this.length = function() {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    }
    ;
    this.normalize = function() {
        var c = this.length();
        this.x /= c;
        this.y /= c;
        return this
    }
    ;
    this.round = function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        return this
    }
    ;
    this.min = function(c) {
        this.x = Math.min(this.x, c.x);
        this.y = Math.min(this.y, c.y);
        return this
    }
    ;
    this.max = function(c) {
        this.x = Math.max(this.x, c.x);
        this.y = Math.max(this.y, c.y);
        return this
    }
    ;
    this.$e = function(c) {
        return Math.sqrt(Math.pow(this.x - c.x, 2) + Math.pow(this.y - c.y, 2))
    }
    ;
    this.isEqual = function(c) {
        return this.x != c.x || this.y != c.y ? !1 : !0
    }
    ;
    this.ef = function(c) {
        this.x = Math.cos(c * Math.Ng);
        this.y = Math.sin(c * Math.Ng);
        this.x = S.Lg.truncate(this.x, 12);
        this.y = S.Lg.truncate(this.y, 12);
        return this
    }
    ;
    this.toString = function() {
        return this.x + "," + this.y
    }
    ;
    this.clone = function() {
        var c = new bb(this.x,this.y);
        c.set(this.x, this.y);
        return c
    }
}
;
N_V2Math = function() {
    this.abs = function(a) {
        return new V(Math.abs(a.x),Math.abs(a.y))
    }
    ;
    this.add = function(a, c) {
        return new V(a.x + c.x,a.y + c.y)
    }
    ;
    this.Sc = function(a, c) {
        return new V(a.x - c.x,a.y - c.y)
    }
    ;
    this.multiply = function(a, c) {
        return new V(a.x * c,a.y * c)
    }
    ;
    this.length = function(a) {
        return Math.sqrt(a.x * a.x + a.y * a.y)
    }
    ;
    this.normalize = function(a) {
        var c = V2.length(a);
        return new V(a.x / c,a.y / c)
    }
    ;
    this.round = function(a) {
        return new V(Math.round(a.x),Math.round(a.y))
    }
    ;
    this.min = function(a) {
        for (var c = a[0].x, b = a[0].y, f = 1; f < a.length; f++) {
            c = Math.min(c, a[f].x),
            b = Math.min(b, a[f].y)
        }
        return new V(c,b)
    }
    ;
    this.max = function(a) {
        for (var c = a[0].x, b = a[0].y, f = 1; f < a.length; f++) {
            c = Math.max(c, a[f].x),
            b = Math.max(b, a[f].y)
        }
        return new V(c,b)
    }
    ;
    this.$e = function(a, c) {
        return Math.sqrt(Math.pow(a.x - c.x, 2) + Math.pow(a.y - c.y, 2))
    }
    ;
    this.isEqual = function(a, c) {
        return a.x != c.x || a.y != c.y ? !1 : !0
    }
    ;
    this.ef = function(a) {
        return (new V).ef(a)
    }
}
;
V2 = new N_V2Math;
if ("undefined" == typeof G) {
    var G = []
}
"undefined" == typeof G.files && (G.files = []);
G.files.push({
    src: "/layout/images/sprites/map/mapSprite.png?67675b13b71d18e0cae045d054ef3da00dcedbcd",
    d: 1638,
    a: 1620
});
var Z = G.files.length - 1;
G["allianceMarker_01.png"] = {
    x: 756,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_02.png"] = {
    x: 126,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_03.png"] = {
    x: 882,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_04.png"] = {
    x: 1008,
    y: 0,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_05.png"] = {
    x: 1008,
    y: 68,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_06.png"] = {
    x: 1008,
    y: 136,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_07.png"] = {
    x: 1008,
    y: 204,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_08.png"] = {
    x: 1008,
    y: 272,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_09.png"] = {
    x: 1008,
    y: 340,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_10.png"] = {
    x: 1008,
    y: 408,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_11.png"] = {
    x: 1008,
    y: 476,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_12.png"] = {
    x: 1008,
    y: 544,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_13.png"] = {
    x: 1008,
    y: 612,
    d: 126,
    a: 68,
    e: Z
};
G["allianceMarker_14.png"] = {
    x: 1008,
    y: 680,
    d: 126,
    a: 68,
    e: Z
};
G["clay0_0_0.png"] = {
    x: 1008,
    y: 748,
    d: 126,
    a: 68,
    e: Z
};
G["clay1_0_0.png"] = {
    x: 1008,
    y: 816,
    d: 126,
    a: 68,
    e: Z
};
G["clay2_0_0.png"] = {
    x: 1008,
    y: 884,
    d: 126,
    a: 68,
    e: Z
};
G["clay3_0_0.png"] = {
    x: 0,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["clay4_0_0.png"] = {
    x: 126,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["clay5_0_0.png"] = {
    x: 252,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["clay6_0_0.png"] = {
    x: 378,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["clay6_0_1.png"] = {
    x: 126,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["clay6_1_0.png"] = {
    x: 1386,
    y: 952,
    d: 126,
    a: 68,
    e: Z
};
G["clay7_0_0.png"] = {
    x: 1386,
    y: 1020,
    d: 126,
    a: 68,
    e: Z
};
G["clay7_0_1.png"] = {
    x: 1386,
    y: 1088,
    d: 126,
    a: 68,
    e: Z
};
G["clay7_1_0.png"] = {
    x: 1386,
    y: 1156,
    d: 126,
    a: 68,
    e: Z
};
G["crop0_0_0.png"] = {
    x: 1386,
    y: 1224,
    d: 126,
    a: 68,
    e: Z
};
G["crop10_0_0.png"] = {
    x: 1386,
    y: 1292,
    d: 126,
    a: 68,
    e: Z
};
G["crop10_0_1.png"] = {
    x: 0,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop10_1_0.png"] = {
    x: 126,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop1_-1_0.png"] = {
    x: 252,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop1_0_0.png"] = {
    x: 378,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop2_0_0.png"] = {
    x: 504,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop2_0_1.png"] = {
    x: 630,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop2_1_0.png"] = {
    x: 756,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop3_0_0.png"] = {
    x: 882,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop4_0_0.png"] = {
    x: 1008,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop5_0_0.png"] = {
    x: 1134,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop6_0_0.png"] = {
    x: 1260,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop7_-1_0.png"] = {
    x: 1386,
    y: 1384,
    d: 126,
    a: 68,
    e: Z
};
G["crop7_0_0.png"] = {
    x: 1512,
    y: 0,
    d: 126,
    a: 68,
    e: Z
};
G["crop8_-1_0.png"] = {
    x: 1512,
    y: 68,
    d: 126,
    a: 68,
    e: Z
};
G["crop8_0_0.png"] = {
    x: 1512,
    y: 136,
    d: 126,
    a: 68,
    e: Z
};
G["crop9_0_0.png"] = {
    x: 1512,
    y: 204,
    d: 126,
    a: 68,
    e: Z
};
G["crop9_0_1.png"] = {
    x: 1512,
    y: 272,
    d: 126,
    a: 68,
    e: Z
};
G["crop9_1_0.png"] = {
    x: 1512,
    y: 340,
    d: 126,
    a: 68,
    e: Z
};
G["cropMarker_01.png"] = {
    x: 25,
    y: 1588,
    d: 25,
    a: 32,
    e: Z
};
G["cropMarker_02.png"] = {
    x: 0,
    y: 1588,
    d: 25,
    a: 32,
    e: Z
};
G["field0.png"] = {
    x: 1512,
    y: 544,
    d: 126,
    a: 68,
    e: Z
};
G["field0_0.png"] = {
    x: 1512,
    y: 612,
    d: 126,
    a: 68,
    e: Z
};
G["field0_0_w.png"] = {
    x: 1512,
    y: 680,
    d: 126,
    a: 68,
    e: Z
};
G["field1.png"] = {
    x: 1512,
    y: 748,
    d: 126,
    a: 68,
    e: Z
};
G["field10.png"] = {
    x: 1512,
    y: 816,
    d: 126,
    a: 68,
    e: Z
};
G["field11.png"] = {
    x: 1512,
    y: 884,
    d: 126,
    a: 68,
    e: Z
};
G["field12.png"] = {
    x: 1512,
    y: 952,
    d: 126,
    a: 68,
    e: Z
};
G["field13.png"] = {
    x: 1512,
    y: 1020,
    d: 126,
    a: 68,
    e: Z
};
G["field14.png"] = {
    x: 1512,
    y: 1088,
    d: 126,
    a: 68,
    e: Z
};
G["field15.png"] = {
    x: 1512,
    y: 1156,
    d: 126,
    a: 68,
    e: Z
};
G["field16.png"] = {
    x: 1512,
    y: 1224,
    d: 126,
    a: 68,
    e: Z
};
G["field17.png"] = {
    x: 1512,
    y: 1292,
    d: 126,
    a: 68,
    e: Z
};
G["field18.png"] = {
    x: 1512,
    y: 1360,
    d: 126,
    a: 68,
    e: Z
};
G["field19.png"] = {
    x: 0,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field2.png"] = {
    x: 126,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field20.png"] = {
    x: 252,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field21.png"] = {
    x: 378,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field22.png"] = {
    x: 504,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field23.png"] = {
    x: 630,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field24.png"] = {
    x: 756,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field25.png"] = {
    x: 882,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["field26.png"] = {
    x: 756,
    y: 756,
    d: 126,
    a: 68,
    e: Z
};
G["field27.png"] = {
    x: 882,
    y: 0,
    d: 126,
    a: 68,
    e: Z
};
G["field28.png"] = {
    x: 882,
    y: 68,
    d: 126,
    a: 68,
    e: Z
};
G["field29.png"] = {
    x: 882,
    y: 136,
    d: 126,
    a: 68,
    e: Z
};
G["field3.png"] = {
    x: 882,
    y: 204,
    d: 126,
    a: 68,
    e: Z
};
G["field30.png"] = {
    x: 882,
    y: 272,
    d: 126,
    a: 68,
    e: Z
};
G["field31.png"] = {
    x: 882,
    y: 340,
    d: 126,
    a: 68,
    e: Z
};
G["field4.png"] = {
    x: 882,
    y: 408,
    d: 126,
    a: 68,
    e: Z
};
G["field5.png"] = {
    x: 882,
    y: 476,
    d: 126,
    a: 68,
    e: Z
};
G["field6.png"] = {
    x: 882,
    y: 544,
    d: 126,
    a: 68,
    e: Z
};
G["field7.png"] = {
    x: 882,
    y: 612,
    d: 126,
    a: 68,
    e: Z
};
G["field8.png"] = {
    x: 882,
    y: 680,
    d: 126,
    a: 68,
    e: Z
};
G["field9.png"] = {
    x: 882,
    y: 748,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_01.png"] = {
    x: 0,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_02.png"] = {
    x: 126,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_03.png"] = {
    x: 252,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_04.png"] = {
    x: 378,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_05.png"] = {
    x: 504,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_06.png"] = {
    x: 630,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_07.png"] = {
    x: 756,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_08.png"] = {
    x: 882,
    y: 840,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_09.png"] = {
    x: 0,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_10.png"] = {
    x: 126,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_11.png"] = {
    x: 252,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_12.png"] = {
    x: 378,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["fieldMarker_13.png"] = {
    x: 504,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["fullTileGround.png"] = {
    x: 630,
    y: 908,
    d: 126,
    a: 68,
    e: Z
};
G["iron0_0_0.png"] = {
    x: 504,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["iron10_0_0.png"] = {
    x: 0,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["iron11_0_0.png"] = {
    x: 126,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["iron1_0_0.png"] = {
    x: 0,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["iron1_0_1.png"] = {
    x: 126,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["iron2_0_0.png"] = {
    x: 252,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["iron2_1_0.png"] = {
    x: 252,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["iron3_0_0.png"] = {
    x: 252,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["iron3_1_0.png"] = {
    x: 0,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["iron3_1_1.png"] = {
    x: 126,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["iron4_0_0.png"] = {
    x: 252,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["iron5_0_0.png"] = {
    x: 378,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["iron6_0_0.png"] = {
    x: 378,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["iron7_0_0.png"] = {
    x: 378,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["iron7_0_1.png"] = {
    x: 378,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["iron8_0_0.png"] = {
    x: 0,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["iron8_1_0.png"] = {
    x: 126,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["iron9_0_0.png"] = {
    x: 252,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["iron9_1_0.png"] = {
    x: 378,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["iron9_1_1.png"] = {
    x: 0,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["map_fog.png"] = {
    x: 504,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["map_highlight.png"] = {
    x: 630,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["map_hover.png"] = {
    x: 756,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["map_loading.png"] = {
    x: 882,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["menhir.png"] = {
    x: 1008,
    y: 976,
    d: 126,
    a: 68,
    e: Z
};
G["menhir_n.png"] = {
    x: 0,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["oase2.png"] = {
    x: 126,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["oasis10.png"] = {
    x: 162,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis11.png"] = {
    x: 134,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis20.png"] = {
    x: 246,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis21.png"] = {
    x: 78,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis30.png"] = {
    x: 50,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis31.png"] = {
    x: 218,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis40.png"] = {
    x: 106,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["oasis41.png"] = {
    x: 190,
    y: 1588,
    d: 28,
    a: 28,
    e: Z
};
G["ownMarker_04.png"] = {
    x: 1134,
    y: 68,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_01.png"] = {
    x: 1134,
    y: 136,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_02.png"] = {
    x: 1134,
    y: 204,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_03.png"] = {
    x: 1134,
    y: 272,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_04.png"] = {
    x: 1134,
    y: 340,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_05.png"] = {
    x: 1134,
    y: 408,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_06.png"] = {
    x: 1134,
    y: 476,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_07.png"] = {
    x: 1134,
    y: 544,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_08.png"] = {
    x: 1134,
    y: 612,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_09.png"] = {
    x: 1134,
    y: 680,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_10.png"] = {
    x: 1134,
    y: 748,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_11.png"] = {
    x: 1134,
    y: 816,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_12.png"] = {
    x: 1134,
    y: 884,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_13.png"] = {
    x: 1134,
    y: 952,
    d: 126,
    a: 68,
    e: Z
};
G["playerMarker_14.png"] = {
    x: 1134,
    y: 1020,
    d: 126,
    a: 68,
    e: Z
};
G["village1_1.png"] = {
    x: 0,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_1_inactive.png"] = {
    x: 630,
    y: 756,
    d: 126,
    a: 68,
    e: Z
};
G["village1_1_n.png"] = {
    x: 252,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_2.png"] = {
    x: 378,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_2_inactive.png"] = {
    x: 504,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_2_n.png"] = {
    x: 630,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_3.png"] = {
    x: 756,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_3_inactive.png"] = {
    x: 882,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_3_n.png"] = {
    x: 1008,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_4.png"] = {
    x: 1134,
    y: 1112,
    d: 126,
    a: 68,
    e: Z
};
G["village1_4_inactive.png"] = {
    x: 0,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_4_n.png"] = {
    x: 126,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_5.png"] = {
    x: 252,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_5_inactive.png"] = {
    x: 378,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_5_n.png"] = {
    x: 504,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_6.png"] = {
    x: 630,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_6_inactive.png"] = {
    x: 756,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village1_6_n.png"] = {
    x: 882,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village2_1.png"] = {
    x: 1008,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village2_1_inactive.png"] = {
    x: 1134,
    y: 1180,
    d: 126,
    a: 68,
    e: Z
};
G["village2_1_n.png"] = {
    x: 1260,
    y: 0,
    d: 126,
    a: 68,
    e: Z
};
G["village2_2.png"] = {
    x: 1260,
    y: 68,
    d: 126,
    a: 68,
    e: Z
};
G["village2_2_inactive.png"] = {
    x: 1260,
    y: 136,
    d: 126,
    a: 68,
    e: Z
};
G["village2_2_n.png"] = {
    x: 1260,
    y: 204,
    d: 126,
    a: 68,
    e: Z
};
G["village2_3.png"] = {
    x: 1260,
    y: 272,
    d: 126,
    a: 68,
    e: Z
};
G["village2_3_inactive.png"] = {
    x: 1260,
    y: 340,
    d: 126,
    a: 68,
    e: Z
};
G["village2_3_n.png"] = {
    x: 1260,
    y: 408,
    d: 126,
    a: 68,
    e: Z
};
G["village2_4.png"] = {
    x: 1260,
    y: 476,
    d: 126,
    a: 68,
    e: Z
};
G["village2_4_inactive.png"] = {
    x: 1260,
    y: 544,
    d: 126,
    a: 68,
    e: Z
};
G["village2_4_n.png"] = {
    x: 1260,
    y: 612,
    d: 126,
    a: 68,
    e: Z
};
G["village2_5.png"] = {
    x: 1260,
    y: 680,
    d: 126,
    a: 68,
    e: Z
};
G["village2_5_inactive.png"] = {
    x: 1260,
    y: 748,
    d: 126,
    a: 68,
    e: Z
};
G["village2_5_n.png"] = {
    x: 1260,
    y: 816,
    d: 126,
    a: 68,
    e: Z
};
G["village2_6.png"] = {
    x: 1260,
    y: 884,
    d: 126,
    a: 68,
    e: Z
};
G["village2_6_inactive.png"] = {
    x: 1260,
    y: 952,
    d: 126,
    a: 68,
    e: Z
};
G["village2_6_n.png"] = {
    x: 1260,
    y: 1020,
    d: 126,
    a: 68,
    e: Z
};
G["village3_1.png"] = {
    x: 1260,
    y: 1088,
    d: 126,
    a: 68,
    e: Z
};
G["village3_1_inactive.png"] = {
    x: 1260,
    y: 1156,
    d: 126,
    a: 68,
    e: Z
};
G["village3_1_n.png"] = {
    x: 0,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_2.png"] = {
    x: 126,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_2_inactive.png"] = {
    x: 252,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_2_n.png"] = {
    x: 378,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_3.png"] = {
    x: 504,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_3_inactive.png"] = {
    x: 630,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_3_n.png"] = {
    x: 756,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_4.png"] = {
    x: 882,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_4_inactive.png"] = {
    x: 1008,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_4_n.png"] = {
    x: 1134,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_5.png"] = {
    x: 1260,
    y: 1248,
    d: 126,
    a: 68,
    e: Z
};
G["village3_5_inactive.png"] = {
    x: 0,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village3_5_n.png"] = {
    x: 126,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village3_6.png"] = {
    x: 252,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village3_6_inactive.png"] = {
    x: 378,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village3_6_n.png"] = {
    x: 504,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_1.png"] = {
    x: 630,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_1_n.png"] = {
    x: 756,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_2.png"] = {
    x: 882,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_2_n.png"] = {
    x: 1008,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_3.png"] = {
    x: 1134,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_3_n.png"] = {
    x: 1260,
    y: 1316,
    d: 126,
    a: 68,
    e: Z
};
G["village4_4.png"] = {
    x: 1386,
    y: 0,
    d: 126,
    a: 68,
    e: Z
};
G["village4_4_n.png"] = {
    x: 1386,
    y: 68,
    d: 126,
    a: 68,
    e: Z
};
G["village4_5.png"] = {
    x: 1386,
    y: 136,
    d: 126,
    a: 68,
    e: Z
};
G["village4_5_n.png"] = {
    x: 1386,
    y: 204,
    d: 126,
    a: 68,
    e: Z
};
G["village4_6.png"] = {
    x: 1386,
    y: 272,
    d: 126,
    a: 68,
    e: Z
};
G["village4_6_n.png"] = {
    x: 1386,
    y: 340,
    d: 126,
    a: 68,
    e: Z
};
G["villageHalloweenCamp.png"] = {
    x: 1386,
    y: 408,
    d: 126,
    a: 68,
    e: Z
};
G["villageHalloweenCamp_n.png"] = {
    x: 1386,
    y: 476,
    d: 126,
    a: 68,
    e: Z
};
G["villageHalloweenHideout.png"] = {
    x: 1386,
    y: 544,
    d: 126,
    a: 68,
    e: Z
};
G["villageNPCgov.png"] = {
    x: 1386,
    y: 612,
    d: 126,
    a: 68,
    e: Z
};
G["villageNatar.png"] = {
    x: 1386,
    y: 680,
    d: 126,
    a: 68,
    e: Z
};
G["villageRobber.png"] = {
    x: 1386,
    y: 748,
    d: 126,
    a: 68,
    e: Z
};
G["villageRobberHideout.png"] = {
    x: 1386,
    y: 816,
    d: 126,
    a: 68,
    e: Z
};
G["villageRobber_n.png"] = {
    x: 1386,
    y: 884,
    d: 126,
    a: 68,
    e: Z
};
G["wood0_0_0.png"] = {
    x: 252,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["wood10_-1_0.png"] = {
    x: 378,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["wood10_0_0.png"] = {
    x: 504,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["wood10_1_0.png"] = {
    x: 504,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["wood11_0_-1.png"] = {
    x: 504,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["wood11_0_0.png"] = {
    x: 504,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["wood11_1_0.png"] = {
    x: 504,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["wood12_0_-1.png"] = {
    x: 504,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["wood12_0_0.png"] = {
    x: 0,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["wood12_1_-1.png"] = {
    x: 126,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["wood12_1_0.png"] = {
    x: 252,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["wood13_0_0.png"] = {
    x: 378,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["wood14_0_0.png"] = {
    x: 0,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["wood15_0_0.png"] = {
    x: 630,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["wood15_0_1.png"] = {
    x: 630,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["wood15_1_-1.png"] = {
    x: 630,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["wood15_1_0.png"] = {
    x: 630,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["wood15_1_1.png"] = {
    x: 630,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["wood16_0_0.png"] = {
    x: 630,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["wood1_-1_0.png"] = {
    x: 630,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["wood1_0_0.png"] = {
    x: 0,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood1_1_0.png"] = {
    x: 126,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood2_0_0.png"] = {
    x: 252,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood2_0_1.png"] = {
    x: 378,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood2_1_0.png"] = {
    x: 504,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood3_0_-1.png"] = {
    x: 630,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood3_0_0.png"] = {
    x: 0,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood3_1_-1.png"] = {
    x: 126,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood3_1_0.png"] = {
    x: 252,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood4_0_-1.png"] = {
    x: 378,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood4_0_0.png"] = {
    x: 504,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood4_1_0.png"] = {
    x: 630,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood5_0_0.png"] = {
    x: 756,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["wood6_0_0.png"] = {
    x: 756,
    y: 84,
    d: 126,
    a: 84,
    e: Z
};
G["wood7_0_0.png"] = {
    x: 756,
    y: 168,
    d: 126,
    a: 84,
    e: Z
};
G["wood7_0_1.png"] = {
    x: 756,
    y: 252,
    d: 126,
    a: 84,
    e: Z
};
G["wood7_1_-1.png"] = {
    x: 756,
    y: 336,
    d: 126,
    a: 84,
    e: Z
};
G["wood7_1_0.png"] = {
    x: 756,
    y: 420,
    d: 126,
    a: 84,
    e: Z
};
G["wood7_1_1.png"] = {
    x: 756,
    y: 504,
    d: 126,
    a: 84,
    e: Z
};
G["wood8_0_0.png"] = {
    x: 756,
    y: 588,
    d: 126,
    a: 84,
    e: Z
};
G["wood8_0_1.png"] = {
    x: 756,
    y: 672,
    d: 126,
    a: 84,
    e: Z
};
G["wood8_1_-1.png"] = {
    x: 0,
    y: 756,
    d: 126,
    a: 84,
    e: Z
};
G["wood8_1_0.png"] = {
    x: 126,
    y: 756,
    d: 126,
    a: 84,
    e: Z
};
G["wood9_0_0.png"] = {
    x: 252,
    y: 756,
    d: 126,
    a: 84,
    e: Z
};
G["wood9_0_1.png"] = {
    x: 378,
    y: 756,
    d: 126,
    a: 84,
    e: Z
};
G["wood9_1_-1.png"] = {
    x: 504,
    y: 756,
    d: 126,
    a: 84,
    e: Z
};
G["wood9_1_0.png"] = {
    x: 126,
    y: 0,
    d: 126,
    a: 84,
    e: Z
};
G["ww_-1_-1.png"] = {
    x: 1008,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-1_-2.png"] = {
    x: 1134,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-1_0.png"] = {
    x: 1260,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-1_1.png"] = {
    x: 1386,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-1_2.png"] = {
    x: 1512,
    y: 1452,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-2_-1.png"] = {
    x: 0,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-2_-2.png"] = {
    x: 126,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-2_0.png"] = {
    x: 252,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-2_1.png"] = {
    x: 378,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_-2_2.png"] = {
    x: 504,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_0_-1.png"] = {
    x: 630,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_0_-2.png"] = {
    x: 756,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_0_0.png"] = {
    x: 882,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_0_1.png"] = {
    x: 1008,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_0_2.png"] = {
    x: 1134,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_1_-1.png"] = {
    x: 1260,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_1_-2.png"] = {
    x: 1386,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
G["ww_1_0.png"] = {
    x: 1134,
    y: 0,
    d: 126,
    a: 68,
    e: Z
};
G["ww_1_1.png"] = {
    x: 1008,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_1_2.png"] = {
    x: 882,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_2_-1.png"] = {
    x: 756,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_2_-2.png"] = {
    x: 630,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_2_0.png"] = {
    x: 504,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_2_1.png"] = {
    x: 378,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_2_2.png"] = {
    x: 252,
    y: 1044,
    d: 126,
    a: 68,
    e: Z
};
G["ww_cloud.png"] = {
    x: 1512,
    y: 476,
    d: 126,
    a: 68,
    e: Z
};
G["ww_village.png"] = {
    x: 1512,
    y: 408,
    d: 126,
    a: 68,
    e: Z
};
G["ww_village_n.png"] = {
    x: 1512,
    y: 1520,
    d: 126,
    a: 68,
    e: Z
};
window.debugCtrl = function(a, c, b, f, g) {
    function e(a, b) {
        var e = {
            villageId: c.getActiveVillageId()
        };
        if (b) {
            for (var f = 0; f < b.length - 1; f += 2) {
                e[b[f]] = b[f + 1]
            }
        }
        e = Travian.writeRequest("cheat/" + a, e);
        console.log(e)
    }
    function h(a) {
        if (Gameworld.isNightTruceActive()) {
            var b = "start"
              , c = "end"
        } else {
            b = "end",
            c = "start"
        }
        var e = new Date;
        a && (e = new Date(e.getTime() + 1E3 * f.$c));
        Travian.Config.nightPeace[c + "Hour"] = e.getUTCHours();
        Travian.Config.nightPeace[c + "Minute"] = e.getUTCMinutes();
        Travian.Config.nightPeace[c + "Second"] = e.getUTCSeconds();
        Travian.Config.nightPeace[b + "Hour"] = 0;
        Travian.Config.nightPeace[b + "Minute"] = 0;
        Travian.Config.nightPeace[b + "Second"] = 0;
        f.Fb()
    }
    var m = [{
        text: "Village",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Finish village events [CTRL-i]",
        funct: e,
        params: ["setVillageEvents", ["offset", 0]]
    }, {
        text: "Set events for current village to 30s",
        funct: e,
        params: ["setVillageEvents", ["offset", 30]]
    }, {
        text: "Fill resources for current village",
        funct: e,
        params: ["fillupResources"]
    }, {
        text: "Progress village troop events (+ 1min)",
        funct: e,
        params: ["progressVillageEvents", ["offset", 60]]
    }, {
        text: "Progress village troop events (+ 5min)",
        funct: e,
        params: ["progressVillageEvents", ["offset", 300]]
    }, {
        text: "Progress village troop events (+ 1h)",
        funct: e,
        params: ["progressVillageEvents", ["offset", 3600]]
    }, {
        text: "Progress village troop events (+ 5h)",
        funct: e,
        params: ["progressVillageEvents", ["offset", 18E3]]
    }, {
        text: "Progress village troop events (+ 24h)",
        funct: e,
        params: ["progressVillageEvents", ["offset", 86400]]
    }, {
        text: "Clear resources for current village",
        funct: e,
        params: ["clearResources"]
    }, {
        text: "Pimp my village",
        funct: e,
        params: ["pimpVillage"]
    }, {
        text: "All building levels +1",
        funct: e,
        params: ["addBuildingLevel", ["level", 1]]
    }, {
        text: "All building levels +5",
        funct: e,
        params: ["addBuildingLevel", ["level", 5]]
    }, {
        text: "All building levels to MAX",
        funct: e,
        params: ["addBuildingLevel", ["level", 99]]
    }, {
        text: "All resource field levels +1",
        funct: e,
        params: ["addBuildingLevel", ["level", 1, "onlyResources", !0]]
    }, {
        text: "All resource field levels +5",
        funct: e,
        params: ["addBuildingLevel", ["level", 5, "onlyResources", !0]]
    }, {
        text: "All resource field levels to MAX",
        funct: e,
        params: ["addBuildingLevel", ["level", 99, "onlyResources", !0]]
    }, {
        text: "Flatten my village",
        funct: e,
        params: ["flattenMyVillage"]
    }, {
        text: "Create new village",
        funct: function() {
            var a = {
                playerId: b.getPlayerId(),
                tribeId: b.p().data.tribeId,
                villageId: c.getActiveVillageId()
            };
            Travian.writeRequest("cheat/createVillage", a)
        },
        params: []
    }, {
        text: "Destroy current village",
        funct: e,
        params: ["destroyVillage"]
    }, {
        text: "Destroy all resource fields",
        funct: e,
        params: ["destroyAllResourceFields"]
    }, {
        text: "Conquer free WW",
        funct: e,
        params: ["conquerWorldWonder"]
    }, {
        text: "Add treasures (+500)",
        funct: e,
        params: ["changeTreasures", ["amount", 500]]
    }, {
        text: "Add treasures (+4000)",
        funct: e,
        params: ["changeTreasures", ["amount", 4E3]]
    }, {
        text: "Add treasures to MAX",
        funct: e,
        params: ["changeTreasures", ["amount", "max"]]
    }, {
        text: "Remove treasures (-500)",
        funct: e,
        params: ["changeTreasures", ["amount", -500]]
    }, {
        text: "Empty treasures",
        funct: e,
        params: ["changeTreasures", ["amount", "min"]]
    }, {
        text: "Loyalty to 0",
        funct: e,
        params: ["setAcceptance", ["amount", 0]]
    }, {
        text: "Loyalty to MAX",
        funct: e,
        params: ["setAcceptance", ["amount", "max"]]
    }, {
        text: "Fillup troops (+200 per type)",
        funct: e,
        params: ["fillTroops"]
    }, {
        text: "Fillup troops massive",
        funct: e,
        params: ["fillTroopsMassive"]
    }, {
        text: "Add animals to village (+10 per type)",
        funct: e,
        params: ["addAnimals", ["amount", 10]]
    }, {
        text: "Generate incoming attacks",
        funct: e,
        params: ["generateTroopMovements"]
    }, {
        text: "Generate max possible farm lists",
        funct: e,
        params: ["generateFarmLists"]
    }, {
        text: "Player",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Finish player events [CTRL-p]",
        funct: e,
        params: ["finishEventsForPlayer"]
    }, {
        text: "Fillup culture points (+50000)",
        funct: e,
        params: ["fillCulturePoints", ["amount", 5E4]]
    }, {
        text: "Get gold (+1000)",
        funct: e,
        params: ["addGold", ["amount", 1E3, "transferrable", !1]]
    }, {
        text: "Get transferrable gold (+200)",
        funct: e,
        params: ["addGold", ["amount", 200, "transferrable", !0]]
    }, {
        text: "Pimp my Staatskasse",
        funct: e,
        params: ["pimpMyTributesAndTreasures"]
    }, {
        text: "Spawn robber hideouts/camps",
        funct: e,
        params: ["spawnRobbers"]
    }, {
        text: "Start robber attack",
        funct: e,
        params: ["startRobberAttack"]
    }, {
        text: "Give me +5 governors",
        funct: e,
        params: ["addGovernors"]
    }, {
        text: "Do Brexit",
        funct: e,
        params: ["doBrexit"]
    }, {
        text: "Set player offline for 24h",
        funct: function() {
            Travian.writeRequest("cheat/setOfflineFor24h", {}, function() {
                b.Wa()
            })
        },
        params: []
    }, {
        text: "Set inactive",
        funct: e,
        params: ["setInactive"]
    }, {
        text: "Set inactive and delete",
        funct: e,
        params: ["setInactiveAndDelete"]
    }, {
        text: "Set player to 1 day old",
        funct: e,
        params: ["setPlayerAge", ["days", 1]]
    }, {
        text: "Set player to 7 days old",
        funct: e,
        params: ["setPlayerAge", ["days", 7]]
    }, {
        text: "Set kingdom 30 days old",
        funct: e,
        params: ["setKingdomAge", ["days", 30]]
    }, {
        text: "Force recalculation of BP",
        funct: e,
        params: ["recalculateBeginnersProtection"]
    }, {
        text: "Reset sign up time (+starter package)",
        funct: e,
        params: ["resetSignUpTimeAndStarterPackage"]
    }, {
        text: "Reset daily quest",
        funct: e,
        params: ["resetDailyQuest"]
    }, {
        text: "Create sample reports",
        funct: e,
        params: ["createSampleReports"]
    }, {
        text: "Create sample notifications",
        funct: e,
        params: ["createSampleNotifications"]
    }, {
        text: "Shift market offer time",
        funct: e,
        params: ["shiftMarketOfferTime"]
    }, {
        text: "Fullfill achievements at once",
        funct: e,
        params: ["getAllAchievements"]
    }, {
        text: "Trigger daily achievements (+1 day)",
        funct: e,
        params: ["triggerDailyAchievements", ["days", 1]]
    }, {
        text: "Trigger daily achievements (+10 days)",
        funct: e,
        params: ["triggerDailyAchievements", ["days", 10]]
    }, {
        text: "Unlock all cosmetics",
        funct: e,
        params: ["unlockAllCosmetics"]
    }, {
        text: "Change to next vacation state",
        funct: e,
        params: ["changeVacationState"]
    }, {
        text: "World",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Finish auctions",
        funct: e,
        params: ["finishAuctions"]
    }, {
        text: "Complete Community Challenge",
        funct: e,
        params: ["completeCommunityChallenge"]
    }, {
        text: "Reset Community Challenge",
        funct: e,
        params: ["resetCommunityChallenge"]
    }, {
        text: "Set world wonder to (maxLevel-1)",
        funct: e,
        params: ["setWorldWonderTo99"]
    }, {
        text: "Activate world wonders",
        funct: e,
        params: ["activateWorldWonders"]
    }, {
        text: "Deactivate world wonders",
        funct: e,
        params: ["deactivateWorldWonders"]
    }, {
        text: "Toggle Night Mode",
        funct: h,
        params: []
    }, {
        text: "Start Night Mode transition",
        funct: h,
        params: [!0]
    }, {
        text: "Undo endgame status",
        funct: e,
        params: ["reverseEndgame"]
    }, {
        text: "Grant world rewards",
        funct: e,
        params: ["grantWorldRewards"]
    }, {
        text: "Tutorial/Quests",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Finish tutorial as King and place on map",
        funct: e,
        params: ["finishTutorialKing"]
    }, {
        text: "Finish tutorial as Governor and place on map",
        funct: e,
        params: ["finishTutorialGovernor"]
    }, {
        text: "Finish all tutorial quests",
        funct: e,
        params: ["finishAllQuests"]
    }, {
        text: "Hero",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Hero levelup +1",
        funct: e,
        params: ["heroLevelup", ["level", 1]]
    }, {
        text: "Hero levelup +10",
        funct: e,
        params: ["heroLevelup", ["level", 10]]
    }, {
        text: "Hero all items",
        funct: e,
        params: ["heroAllItems"]
    }, {
        text: "Remove all items",
        funct: e,
        params: ["heroRemoveAllItems"]
    }, {
        text: "Kill your hero",
        funct: e,
        params: ["heroKill"]
    }, {
        text: "Regenerate your hero for 24h",
        funct: e,
        params: ["regenerateHeroFor24h"]
    }, {
        text: "Fillup hero health",
        funct: e,
        params: ["regenerateHeroFull"]
    }, {
        text: "Add adventure points: +10",
        funct: e,
        params: ["fillupAdventurePoints"]
    }, {
        text: "Add adventure points: 1 Day",
        funct: e,
        params: ["fillupAdventurePointsOneDay"]
    }, {
        text: "Add +1 free card game",
        funct: e,
        params: ["addFreeCardgame", ["amount", 1]]
    }, {
        text: "Add +5 free card games",
        funct: e,
        params: ["addFreeCardgame", ["amount", 5]]
    }, {
        text: "Map",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Mark spawn fields",
        funct: e,
        params: ["markSpawnFields"]
    }, {
        text: "Mark top influence",
        funct: e,
        params: ["markTopMapInfluence"]
    }, {
        text: "Remove all ground markers",
        funct: e,
        params: ["removeAllGroundMarkers"]
    }, {
        text: "Premium features",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Set timed features 24h, 1m before expire",
        funct: e,
        params: ["setTimedPremiumFeaturesTo24h"]
    }, {
        text: "Enable deletion if bought gold",
        funct: e,
        params: ["enableDeletionIfBoughtGold"]
    }, {
        text: "Cancel premium boosts",
        funct: e,
        params: ["cancelPremiumBoosts"]
    }, {
        text: "Reset bundle quantities",
        funct: e,
        params: ["resetBundleQuantities"]
    }, {
        text: "Punishment",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Ban player click-counter limit",
        funct: e,
        params: ["banPlayerClickCounter"]
    }, {
        text: "Other",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Show cheat sheet",
        funct: a.openWindow,
        params: ["cheatSheet"]
    }, {
        text: "Show config page",
        funct: function() {
            window.location = "/api/config.php"
        },
        params: []
    }, {
        text: "Building graphics debug mode",
        funct: function() {
            function a(b, c, e) {
                var l = config.buildings[b]
                  , h = "";
                l.levels && (h = "_" + (l.tribe ? m : ""),
                h = e ? h + e : h + (10 > l.levels[0] ? "0" + l.levels[0] : l.levels[0]));
                e = "";
                l.states && (!ra(f, b) && "w" != c && b != Building.TYPE.RALLY_POINT) && (e = "_" + l.states[0]);
                return c + b + h + e
            }
            function b(a) {
                m = Player.TRIBE_NAME[a][0];
                $(".buildingLocation img").each(function(a, b) {
                    b.src = b.src.replace(/_[grt](?=\d)/, "_" + m)
                });
                $(".buildingLocation33 img").hasClass("buildingId" + Building.TYPE.NATAR_CITY_WALL) || c($(".buildingLocation33 img"), Building.WALL_TYPES[a], $(".buildingLocation33 img")[0].src.match(/_\d\d/)[0].substr(1))
            }
            function c(b, e, f) {
                b.each(function(b, c) {
                    var l = c.src.match(/\/[a-z](?=[^/]*.png)/)[0].substr(1);
                    c.src = c.src.replace(/\/((?!(_top|_bottom|_normal|_water|.png|\/)).)*(?=.png|_)/, "/" + a(e, l, f)).replace(/(construction\/[^_]*)_((?!(_top|_bottom|_normal|_water|.png|\/)).)*(?=.png|_)/, "$1")
                })
            }
            function e(a) {
                var b = $(".buildingLocation canvas").siblings("img");
                if (0 < b.length) {
                    var c = b[0].src.match(/\/[^\/]*(?=.png)/)[0].substr(1).split("_");
                    a(b, c, c[0].substr(1))
                }
            }
            Travian.rootScope.openPage("village");
            Travian.rootScope.windows = {};
            Cache.fill = y();
            z.Jb = !0;
            $("body").on("mousedown", function(a) {
                a.stopPropagation()
            });
            $("html > head").append($("<style>.buildingLocation canvas, .tooltip { display: none; } #clickareasVillage > area { cursor: move; }</style>"));
            $("#layoutHeader, #footer, #troopsOverview, #debugMenu, .buildingQueue, .buildingStatus, .questGiver .character, .buildingAnimation").hide();
            var f = [Building.TYPE.CITY_WALL, Building.TYPE.EARTH_WALL, Building.TYPE.PALLISADE]
              , l = [Building.TYPE.RALLY_POINT, Building.TYPE.WONDER_OF_WORLD, Building.TYPE.MOAT, Building.TYPE.NATAR_CITY_WALL].concat(f)
              , m = Player.TRIBE_NAME[Travian.Player.data.tribeId][0];
            $("body").bind("keydown", function(m) {
                switch (m.keyCode) {
                case keyboard.Qa:
                    ;
                case keyboard.hb:
                    e(function(a, b, e) {
                        if (!ra(l, e)) {
                            b = e;
                            for (var h = Object.keys(config.buildings).filter(function(a) {
                                return !ra(l.concat(f), a) && a > Building.TYPE.CROP
                            }), n = 0; n < h.length; n++) {
                                if (h[n] == e) {
                                    b = h[Math.min(h.length - 1, Math.max(0, n + (m.keyCode == keyboard.Qa ? 1 : -1)))];
                                    break
                                }
                            }
                            c(a, b)
                        }
                    });
                    break;
                case keyboard.ib:
                    ;
                case keyboard.fb:
                    e(function(b, c, e) {
                        if (!(2 < c.length && "ww" == c[2])) {
                            if (b[0].src.match("construction")) {
                                m.keyCode == keyboard.ib && (b.each(function(b, c) {
                                    var f = c.src.match(/\/[a-z](?=[^/]*.png)/)[0].substr(1);
                                    c.src = c.src.replace(/construction\/[a-z]((?!(_top|_bottom|_water|.png)).)*/, a(e, f)).replace(/00_(?=top|bottom)/, "00_normal_")
                                }),
                                b.parent().find(".nightModeBuildingLights").css("display", ""))
                            } else {
                                var f = 0
                                  , h = 0;
                                if (1 < c.length) {
                                    var g = config.buildings[e]
                                      , h = f = c[1].match(/\d+/)[0];
                                    $(g.levels).each(function(a, b) {
                                        if (b > f || m.keyCode == keyboard.fb && b == f) {
                                            return m.keyCode == keyboard.ib && (h = b),
                                            !1
                                        }
                                        h = b
                                    })
                                }
                                if (2 < c.length && !ra(l, e)) {
                                    var q = g.states.indexOf(c[2]);
                                    m.keyCode == keyboard.ib ? q < g.states.length - 1 ? (h = f,
                                    q++) : Object.values(g.levels).indexOf(parseInt(f)) < g.levels.length - 1 && (q = 0) : m.keyCode == keyboard.fb && (0 < q ? (h = f,
                                    q--) : 0 < Object.values(g.levels).indexOf(parseInt(f)) && (q = g.states.length - 1));
                                    h += "_" + g.states[q];
                                    f += "_" + c[2]
                                }
                                h != f ? b.each(function(a, b) {
                                    b.src = b.src.replace(/\/[a-z]\d+_((?!(_top|_bottom|_water|.png|\/)).)*(?=.png|_)/, function(a) {
                                        var c = 10 > parseInt(h) && "00" != String(h).substr(0, 2) ? "0" + h : h;
                                        "w" == b.src.match(/\/[a-z](?=[^/]*.png)/)[0].substr(1) && (c = String(c).replace(/_.*/, ""));
                                        return a.replace(/(\/[a-z]\d+_[a-z]?)\d+(_((?!(top|bottom|normal|water)).)+)?/, "$1" + c)
                                    })
                                }) : m.keyCode != keyboard.fb || ra([Building.TYPE.WONDER_OF_WORLD, Building.TYPE.NATAR_CITY_WALL], e) || (b.parent().find(".nightModeBuildingLights").hide(),
                                b.each(function(a, b) {
                                    b.src = b.src.replace(/(\/[a-z]\d+)((?!(_top|_bottom|_water|.png|\/)).)*(?=.png|_)/, "/construction$1")
                                }))
                            }
                        }
                    });
                    break;
                case keyboard.te:
                    ;
                case keyboard.Ag:
                    var g, p;
                    if (m.keyCode == keyboard.te) {
                        e(function(a, b, c) {
                            ra(l, c) || (p = c,
                            g = (a[0].src.match(/_[grt]?\d\d/) || [""])[0].substr(-2))
                        })
                    } else {
                        var s = Object.keys(config.buildings).filter(function(a) {
                            return !ra(l, a) && a > Building.TYPE.CROP
                        })
                    }
                    $(".buildingLocation:not(.buildingLocation32,.buildingLocation33, .buildingLocation41)").each(function(a, b) {
                        var e = $(b).find("img");
                        e.hasClass("buildingId" + Building.TYPE.WONDER_OF_WORLD) || c(e, p || s[Math.floor(Math.random() * s.length)], g)
                    });
                    break;
                case keyboard.vg:
                    b(Player.TRIBE.GAUL);
                    break;
                case keyboard.xg:
                    $("body").removeClass("winter");
                    $("body").toggleClass("halloweenWorld");
                    $("body").hasClass("halloweenWorld") ? $(".buildingLocation33 .nightModeBuildingLights").each(function(a, b) {
                        b.src = b.src.replace(/\/building\/(night(\/construction)?)\/n/, "/halloween/building/$1/h")
                    }) : $(".buildingLocation33 .nightModeBuildingLights").each(function(a, b) {
                        b.src = b.src.replace(/\/halloween\/building\/(night(\/construction)?)\/h/, "/building/$1/n")
                    });
                    break;
                case keyboard.Dg:
                    Gameworld.hasNightTruce() || (Travian.Config.specialRules.nightPeace = !0,
                    Travian.Config.nightMode = !0,
                    Travian.rootScope.$broadcast("warehouseStateChanged"),
                    requestAngularApply());
                    h();
                    break;
                case keyboard.Ig:
                    b(Player.TRIBE.ROMAN);
                    break;
                case keyboard.Mg:
                    b(Player.TRIBE.TEUTON);
                    break;
                case keyboard.Qg:
                    $("body").removeClass("halloweenWorld"),
                    $("body").toggleClass("winter"),
                    "winter" != Travian.Config.season && (Travian.Config.season = "winter",
                    Travian.rootScope.$broadcast("warehouseStateChanged"),
                    requestAngularApply())
                }
            });
            $("body").append("<div style=\"position: absolute; padding: 15px; background: rgba(50,50,50,0.5); border: 3px solid black; color: white;\"><div class=\"buildingGraphicsDebugModeOptions\" style=\"padding: 20px;\"><h1 style=\"font-size: 20px;\">Building Graphics Debug Mode</h1><br><div><strong>Hover + Left / Right</strong>: Change building type</div><div><strong>Hover + Up / Down</strong>: Change building level / state</div><div><strong>Hover + A</strong>: Set all buildings to hovered building</div><div><strong>N</strong>: Toggle night mode</div><div><strong>H</strong>: Toggle total eclipse</div><div><strong>W</strong>: Toggle winter theme</div><div><strong>G</strong>: Set gallic building style</div><div><strong>T</strong>: Set teutonic building style</div><div><strong>R</strong>: Set roman building style</div><div><strong>M</strong>: Randomize buildings</div><div><strong>F5</strong>: Exit debug mode</div></div><div class=\"toggleDebugModeOptions\" style=\"position: absolute; top: 7px; right: 9px; font-weight: bold; cursor: pointer;\" onclick=\"(function(elem){$('.buildingGraphicsDebugModeOptions').hasClass('hidden') ? $('.buildingGraphicsDebugModeOptions').show().removeClass('hidden') && $('.toggleDebugModeOptions').text('x') : $('.buildingGraphicsDebugModeOptions').hide().addClass('hidden') && $('.toggleDebugModeOptions').text('>');})()\">x</div></div>")
        },
        params: []
    }, {
        text: "Switch highlighting canvas <-> SVG",
        funct: function() {
            Travian.rootScope.enableSvgHighlighting = !Travian.rootScope.enableSvgHighlighting
        },
        params: []
    }, {
        text: "Recalculate Map Domination",
        funct: e,
        params: ["calcRegion"]
    }, {
        text: "Recalculate Resources",
        funct: e,
        params: ["calculateResources"]
    }, {
        text: "Dump current village data to console",
        funct: function(a) {
            "village" == a && console.log(c.i().data)
        },
        params: ["village"]
    }, {
        text: "Toggle tooltips to stay open",
        funct: function() {
            Travian.Config.ke = !Travian.Config.ke
        },
        params: []
    }];
    Gameworld.isBirthday() && (m = m.concat({
        text: "\ud83c\udf82 Birthday \ud83c\udf82",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Get fireworks",
        funct: e,
        params: ["getFireworks"]
    }, {
        text: "Cancel fireworks",
        funct: e,
        params: ["cancelFireworks"]
    }, {
        text: "Get fireworks rewards in 5s",
        funct: e,
        params: ["getFireworksRewards"]
    }));
    Gameworld.isHalloween() && (m = m.concat({
        text: "\ud83c\udf83 Halloween \ud83c\udf83",
        funct: null,
        params: [],
        disabled: !0
    }, {
        text: "Execute Halloween BOOst event",
        funct: e,
        params: ["executeHalloweenBoostEvent"]
    }));
    a.options = [];
    a.buildingDropDown = {
        placeholder: "ChoseBuilding",
        selected: null,
        options: {},
        lazyRendering: !0
    };
    for (var l = 0; 42 > l; l++) {
        a.buildingDropDown.options[l] = l + ": " + Travian.translate("Building_" + l)
    }
    Travian.txt["Cheat.debug"] = "Debug";
    a.dropdown1 = {
        placeholder: "Cheat.debug",
        selected: null,
        options: [],
        callback: function(b) {
            "function" === typeof m[b].funct && m[b].funct.apply(this, m[b].params);
            g(function() {
                a.dropdown1.selected = null
            }, 0)
        },
        disabledEntries: [],
        maxHeight: 800,
        bodyClass: "cheatDropDown",
        lazyRendering: !0
    };
    (function() {
        for (var b = 0; b < m.length; b++) {
            a.dropdown1.options.push(m[b].text),
            m[b].disabled && a.dropdown1.disabledEntries.push(b)
        }
    }
    )();
    var p = !1;
    $(window).bind("keyup", function() {
        p = !1
    });
    $(window).bind("keydown", function(a) {
        p || a.keyCode !== keyboard.tg || (p = !0);
        if (p) {
            switch (a.keyCode) {
            case keyboard.Fg:
                return e("finishEventsForPlayer"),
                a.preventDefault(),
                !1;
            case keyboard.yg:
                return e("setVillageEvents", ["offset", 0]),
                a.preventDefault(),
                !1
            }
        }
    })
}
;
window.debugCtrl.$inject = ["$scope", "VillageService", "SessionService", "AnimationService", "$timeout"];
window.achievementNotificationsCtrl = function(a) {
    a.close = function() {
        a.closeWindow("achievementNotifications")
    }
    ;
    a.collectRewards = function() {
        window.open("//" + Travian.Config.gameLobbyUrl + "/#/achievements", "_blank")
    }
    ;
    Travian.request("player/getAchievementNotifications", {}, function(c) {
        if (0 == c.length) {
            a.close()
        } else {
            for (var b = 0; b < c.length; b++) {
                c[b].extraData = c[b].extraData ? JSON.parse(c[b].extraData) : {},
                c[b].langKeySuffix = "",
                c[b].key == Achievement.TYPE_FINISHED_A_GAMEWORLD ? c[b].extraData.allianceName ? c[b].langKeySuffix = "_hasAlliance" : c[b].extraData.kingdomTag && (c[b].langKeySuffix = "_hasKingdom") : c[b].key == Achievement.TYPE_WON_A_GAMEWORLD && c[b].extraData.kingdomTag && (c[b].langKeySuffix = "_hasKingdom")
            }
            a.achievementNotifications = c
        }
    })
}
;
window.achievementNotificationsCtrl.$inject = ["$scope", "SessionService"];
window.authErrorCtrl = function(a, c) {
    a.w.windowName = "AuthError.WindowName";
    a.logout = function() {
        c.Wa()
    }
}
;
window.authErrorCtrl.$inject = ["$scope", "SessionService"];
window.confirmActionCtrl = function(a) {
    a.w.windowName = "ConfirmAction.Title";
    a.action = a.getParam("action", !1, !0);
    var c = a.getParam("cb", !1, !0);
    if (a.action && c) {
        var b = "";
        switch (a.action) {
        case "population":
            a.settlersOnTheWay = a.getParam("settlersOnTheWay", !1, !0);
            a.customContent = !0;
            a.featureClass = "unit_population";
            b = "showPopulationWarning";
            break;
        case "fireworksDistribution":
            ;
        case "superFireworksDistribution":
            b = "showFireworksDistributionWarning"
        }
        a.confirm = function(f) {
            if (a.doNotShowAgain) {
                var g = Settings.get(Travian.Player.data.playerId);
                g.data[b] = !1;
                g.persist()
            }
            f && c();
            a.closeWindow("confirmAction")
        }
    } else {
        a.closeWindow("confirmAction")
    }
}
;
window.confirmActionCtrl.$inject = ["$scope", "$rootScope"];
window.confirmGoldUsageCtrl = function(a, c) {
    function b() {
        if (a.doNotShowAgain) {
            var b = Settings.get(Travian.Player.data.playerId);
            b.setPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_GOLD_USAGE_CONFIRMATION);
            b.setPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_PREMIUM_USAGE_CONFIRMATION);
            b.persist()
        }
        a.closeWindow("confirmGoldUsage")
    }
    a.w.windowName = "ConfirmGoldUsage.Title";
    a.PremiumFeature = PremiumFeature;
    a.featureName = a.getParam("feature", !1, !0);
    a.confirmationRequestId = a.getParam("crid", !1, !0);
    a.skipable = a.getParam("skipable", !1, !0);
    a.actionPrice = a.getParam("price", !1, !0);
    a.confirmationParams = a.getParam("confirmationParams", !1, !0);
    "string" == typeof a.confirmationParams && (a.confirmationParams = JSON.parse(a.confirmationParams));
    if (a.featureName) {
        Voucher.get(Travian.Player.data.playerId).data.hasVouchers[a.featureName] && (a.actionPrice = -1);
        if (!a.actionPrice) {
            switch (a.featureName) {
            case PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT:
                if (PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT)) {
                    if (PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT)) {
                        if (PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_THIRD_BUILD_MASTER_SLOT)) {
                            a.closeWindow("confirmGoldUsage");
                            return
                        }
                        a.actionPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price3
                    } else {
                        a.actionPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price2
                    }
                } else {
                    a.actionPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price
                }
                break;
            case PremiumFeature.FEATURE_NAME_TRADER_SLOT:
                if (PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST)) {
                    if (PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_SECOND)) {
                        a.closeWindow("confirmGoldUsage");
                        return
                    }
                    a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price2
                } else {
                    a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price
                }
                break;
            case PremiumFeature.FEATURE_NAME_NPC_TRADER:
                a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_NPC_TRADER].price;
                break;
            case PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE:
                a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE].price;
                break;
            default:
                a.actionPrice = Travian.Config.PremiumFeatures[a.featureName].price
            }
        }
        if (a.confirmationParams && a.confirmationParams.confirmation) {
            a.disclaimer = !0,
            a.descriptionKey = a.confirmationParams.confirmation.reason,
            a.w.windowName = a.w.windowName + "_" + a.confirmationParams.confirmation.reason,
            a.confirmationParams.confirmation.params && a.confirmationParams.confirmation.params.compensation && (a.worldSuffix = Gameworld.isHalloween() ? "Halloween" : ""),
            a.featureIcon = "shop_feature_halloweenMask_large"
        } else {
            switch (a.featureName) {
            case PremiumFeature.FEATURE_NAME_NPC_TRADER:
                a.featureIcon = "premium_npcTrader_medium";
                break;
            case PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION:
                a.heroCustomization = !0;
                "halloween" == HeroFace.getCustomizationTag(a.confirmationParams.option, a.confirmationParams.type) && (a.descriptionKey = "purchaseMask");
                a.heroFace = HeroFace.get(Travian.Player.data.playerId);
                a.currency = Travian.Config.heroCustomizations.purchasable[a.confirmationParams.option][a.confirmationParams.type].currency;
                "candy" == a.currency && (a.currencyAmount = HeroItem.getOwnItemsAmountByType(HeroItem.TYPE_CANDY));
                break;
            default:
                a.featureIcon = "premium_" + a.featureName + "_medium"
            }
        }
        a.confirm = function() {
            a.$root.$broadcast("confirmGoldUsage", a.confirmationRequestId, a.confirmationParams);
            delayUntilAnimationFinish(c, function() {
                b()
            }, "confirm()")
        }
        ;
        a.saveAndClose = function() {
            delayUntilAnimationFinish(c, function() {
                b()
            }, "saveAndClose()")
        }
    } else {
        a.closeWindow("confirmGoldUsage")
    }
}
;
window.confirmGoldUsageCtrl.$inject = ["$scope", "$rootScope"];
window.contextMenuCtrl = function(a, c, b, f, g, e, h, m, l) {
    function p() {
        if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
            B = GroupInvitation.getCollection(GroupInvitation.COLLECTION_FOR_GROUP, GroupInvitation.TYPE_KINGDOM, Travian.Player.data.kingdomId),
            E = PlayerHatesKing.getCollection("king")
        }
    }
    function n() {
        "none" != a.contextStyle.display && (a.contextMenuClass = "",
        a.contextStyle = {
            display: "none"
        },
        null !== D && 0 <= C && (D.unsubscribe(C),
        C = -1),
        "function" == typeof v && (v(),
        v = null),
        null !== A && 0 <= F && (A.unsubscribe(F),
        F = -1),
        requestAngularApply())
    }
    function q(c, e, l, h) {
        if (f.dc(b.getActiveVillageId(), Building.TYPE.RALLY_POINT)) {
            3 > arguments.length && (l = "sendTroops");
            4 > arguments.length && (h = "feature_sendTroops_medium_illu");
            var m = {
                x: e.x,
                y: e.y
            }
              , g = {};
            "movement_settle_medium_illu" == h && (m.type = Troops.MOVEMENT_TYPE_SETTLE,
            g.preselect = {},
            g.preselect[Troops.TYPE_SETTLER] = 3);
            u(function() {
                a.openWindow("sendTroops", m, g)
            }, "ContextMenu.button." + l, c, h)
        } else {
            r("pos1", "feature_sendTroops_medium_illu", "ContextMenu.NoRallyPoint")
        }
    }
    function r(a, b, c) {
        null === c && (c = "ContextMenu.button.inactive");
        u(null, c, a, b + " disabled", {}, !0)
    }
    function t(e, m, s) {
        var t = c.p();
        a.menuItems = {};
        a.lastReport = s || null;
        a.oasis = null;
        x = a.villagePlayer = null;
        u(function() {
            var b = Kingdom.get(Travian.Player.data.kingdomId);
            null !== e.village && 100 <= e.playerId && (e.owner == Travian.Player.data.kingId || 0 != e.ownerKingdomId && e.ownerKingdomId == Travian.Player.data.kingdomId || b.hasTreatyWith(e.ownerKingdomId, Kingdom.BND));
            b = e.id;
            null != e.village && null != e.village.villageId && (b = e.village.villageId);
            a.openWindow("reports", {
                tab: "Search",
                villageId: b
            })
        }, "ContextMenu.button.reports", "pos4", "feature_report_medium_illu", {}, "lastReport == null");
        u(function() {
            a.openWindow("markerMenu", {
                cellId: e.id
            })
        }, "ContextMenu.button.marker", "pos3", "feature_marker_medium_illu");
        if (null !== e.village) {
            var D;
            D = 0 > e.village.villageId ? e.village.villageId : e.id;
            x = Village.get(D);
            var C = null;
            s = [x];
            Player.isNPC(e.playerId) || (C = Player.get(e.playerId),
            s.push(C));
            a.selectedVillage = x;
            "function" == typeof v && v();
            v = Cache.ja(s, function() {
                if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
                    a.alreadyInvited = !1;
                    null == B && p();
                    for (var c = 0; c < B.data.length; c++) {
                        B.data[c].data.playerId != x.data.playerId || B.data[c].isRelocationInvitation() || (a.alreadyInvited = !0)
                    }
                }
                x.data.belongsToKing != e.owner && (Cache.G(x, 10),
                x = Village.get(D));
                b.getActiveVillageId() != x.data.villageId ? (q("pos1", e),
                f.S("type17", function(b) {
                    null !== b && 0 < x.data.villageId && 0 < b.data.lvl ? u(function() {
                        a.openWindow("building", {
                            location: b.data.locationId,
                            tab: "Send",
                            destId: e.id,
                            destPlayerId: e.playerId
                        })
                    }, "ContextMenu.button.sendTraders", "pos2", "movement_trade_medium_illu") : r("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders")
                })) : (r("pos1", "feature_sendTroops_medium_illu", "ContextMenu.button.sendTroops"),
                r("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders"));
                t.data.playerId == x.data.playerId ? u(function() {
                    g.o("villId", e.id);
                    e.id != b.getActiveVillageId() ? b.ea(e.id) || !t.isOnMap() ? a.openPage("resources") : n() : a.openPage("resources")
                }, "ContextMenu.button.goToVillage", "pos0", "radialMenu_goToVillage_hover_layout") : (u(function() {
                    a.openWindow("mapCellDetails", {
                        cellId: e.id
                    })
                }, "ContextMenu.button.details", "pos0", "radialMenu_cellDetails_layout"),
                0 < x.data.playerId && (a.villagePlayer = C,
                b.Hd(e.id, function(a) {
                    u(null, "ContextMenu.button.addToFarmList", "pos6", "feature_farmlist_small_flat_black", {
                        inFarmList: a
                    }, "player.data.hasNoobProtection || villagePlayer.data.hasNoobProtection", "", "ContextMenu.button.farmList.noobProtection")
                })));
                delete a.menuItems.pos5;
                if (e.tributeInfluences && t.isKingdomLeader() && t.data.playerId != x.data.playerId && x.data.belongsToKing == t.data.kingId && (C && (0 < C.data.kingdomId || a.alreadyInvited) && (!C.isViceKing() || C.data.kingdomId != t.data.kingdomId) || x.data.type == Village.TYPE_GOVERNOR_NPC_VILLAGE)) {
                    var m = 0
                      , s = 0;
                    for (c in e.tributeInfluences) {
                        e.tributeInfluences[c] > m && (m = e.tributeInfluences[c],
                        s = parseInt(c, 10))
                    }
                    if (s === t.data.playerId || (t.isKing() || t.isViceKing()) && C && C.isDuke() && C.data.kingdomId == t.data.kingdomId || x.data.type == Village.TYPE_GOVERNOR_NPC_VILLAGE) {
                        if (x.data.protectionGranted) {
                            if (x.data.allowTributeCollection) {
                                var w = b.i();
                                if (w.hasActiveTreasury()) {
                                    var v = function() {
                                        u(function() {
                                            l.U(cb);
                                            Travian.writeRequest("troops/fetchTributesForVillages", {
                                                villageId: w.data.villageId,
                                                destVillageIds: [x.data.villageId]
                                            })
                                        }, "ContextMenu.button.fetchTribute", "pos5", "movement_tribute_small_flat_black", {}, "!selectedVillage.data.canFetchTributes")
                                    };
                                    x.data.type == Village.TYPE_GOVERNOR_NPC_VILLAGE ? v() : Travian.writeRequest("map/getConnectedVillages", {
                                        kingId: t.data.kingId,
                                        villageId: b.getActiveVillageId()
                                    }, function(a) {
                                        a[x.data.villageId] ? v() : r("pos5", "movement_tribute_small_flat_black", "Tributes.VillageNotConnected")
                                    })
                                } else {
                                    r("pos5", "movement_tribute_small_flat_black", "Tributes.VillageNotGeneratingInfluence")
                                }
                            } else {
                                r("pos5", "movement_tribute_small_flat_black", "ContextMenu.button.fetchTribute.denied")
                            }
                        } else {
                            u(function() {
                                Travian.writeRequest("village/grantProtection", {
                                    villageId: D
                                })
                            }, "ContextMenu.button.fetchTribute.unprotected", "pos5", "movement_support_small_flat_black")
                        }
                    }
                }
                (t.isKing() || t.isViceKing()) && t.data.playerId != x.data.playerId && (c = h.Zh(x.data.playerId),
                m = e.influence[t.data.playerId],
                t.isViceKing() && (m = Kingdom.get(t.data.kingdomId).getKing(),
                m = e.influence[m.playerId]),
                null != c && (!Player.isNPC(x.data.playerId) && c.kingdomId != t.data.kingdomId && (c.kingdomRole == Kingdom.RIGHT_GOVERNOR || c.kingdomRole == Kingdom.RIGHT_DUKE) && 0 < m) && (c = "ContextMenu.button.inviteToKingdom.disabled",
                A = Gameworld.get(),
                F = A.subscribe(function() {
                    a.kingdomChangeDenied = A.isKingdomChangeDenied()
                }),
                !0 == a.kingdomChangeDenied && (c = "ContextMenu.button.inviteToKingdom.disabled.kingdomChangeNotAllowed"),
                u(function() {
                    Travian.writeRequest("player/inviteToKingdom", {
                        villageId: x.data.villageId
                    }, function() {
                        x.callSubscribers();
                        A.callSubscribers()
                    }, !0)
                }, "ContextMenu.button.inviteToKingdom", "pos7", "radialMenu_kingdomInvite_small_flat_black", {
                    disableKingdomChangesWithWWLevel: Travian.Config.disableKingdomChangesWithWWLevel
                }, "!villagePlayer.data.active || alreadyInvited || kingdomChangeDenied", "", c)));
                if ((t.isKing() || t.isViceKing()) && t.data.playerId != x.data.playerId) {
                    null == E && (E = PlayerHatesKing.getCollection("king"));
                    m = null;
                    for (c = 0; c < E.data.length; c++) {
                        E.data[c].data.playerId == x.data.playerId && (m = E.data[c])
                    }
                    null != m && (0 < m.data.offerTime ? r("pos5", "feature_peace_small_flat_black", "ContextMenu.button.alreadyOfferedPeaceTreaty") : u(function() {
                        Travian.writeRequest("player/offerPeaceTreaty", {
                            playerId: x.data.playerId
                        }, function() {
                            x.callSubscribers()
                        }, !0)
                    }, "ContextMenu.button.offerPeaceTreaty", "pos5", "feature_peace_small_flat_black"))
                }
            })
        } else {
            null !== e.oasis ? (u(function() {
                a.openWindow("mapCellDetails", {
                    cellId: e.id
                })
            }, "ContextMenu.button.details", "pos0", "radialMenu_cellDetails_layout"),
            q("pos1", e),
            b.Hd(e.id, function(a) {
                u(null, "ContextMenu.button.addToFarmList", "pos6", "feature_farmlist_small_flat_black", {
                    inFarmList: a
                }, "player.data.hasNoobProtection", "", "ContextMenu.button.farmList.noobProtection")
            }),
            r("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders"),
            a.oasis = e) : (u(function() {
                a.openWindow("mapCellDetails", {
                    cellId: e.id
                })
            }, "ContextMenu.button.details", "pos0", "radialMenu_cellDetails_layout"),
            1 == m.data.isHabitable ? (3 <= b.qc().data.units[Troops.TYPE_SETTLER] ? q("pos1", e, "foundVillage", "movement_settle_medium_illu") : r("pos1", "movement_settle_medium_illu", "ContextMenu.button.foundVillage"),
            t.isKing() && (e.owner == t.data.playerId && !e.menhir) && (A = Gameworld.get(),
            F = A.subscribe(function() {
                a.kingdomChangeDenied = A.isKingdomChangeDenied()
            }),
            0 > Travian.Config.KingdomConfig.relocationRestrictionFieldTypes.indexOf(m.data.resType.toString()) && !e.wwZone ? u(function() {
                a.openWindow("relocation", {
                    cellId: e.id,
                    resType: m.data.resType
                })
            }, "ContextMenu.button.offerRelocation", "pos7", "radialMenu_kingdomInvite_small_flat_black", {
                disableKingdomChangesWithWWLevel: Travian.Config.disableKingdomChangesWithWWLevel
            }, "kingdomChangeDenied", "", "ContextMenu.button.offerRelocation.disabled.kingdomChangeNotAllowed") : r("pos7", "radialMenu_kingdomInvite_small_flat_black", "ContextMenu.button.offerRelocation.disabled.fieldType"))) : r("pos1", "feature_sendTroops_medium_illu", "ContextMenu.button.sendTroops"),
            r("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders"))
        }
        w(e)
    }
    function u(b, e, f, l, h, m, g, n) {
        var q = c.p();
        null === b && (b = y());
        m || (m = "false");
        !0 === m && (m = "true");
        n || (n = e);
        if (q.isOnMap() || "pos1" == f || "pos0" == f) {
            a.menuItems[f] = {
                callback: b,
                translationKey: e,
                translationKeyDisabled: n,
                "class": f,
                iconClass: l,
                params: h,
                disabled: m,
                tooltipUrl: g,
                type: l
            }
        }
        "pos0" == f && (a.menuItems[f].hover = !0)
    }
    function w(b) {
        a.contextStyle = {
            top: b.pc.top + b.j.height / 2 + "px",
            left: b.pc.left + b.j.width / 2 + "px",
            display: "block"
        };
        doAngularApply();
        e(function() {
            a.contextMenuClass = "expanded"
        }, 10);
        e(y(), 500)
    }
    function s() {
        var a = $(".farmListRoundButton");
        0 !== a.length && (0 > a[0].getBoundingClientRect().left - 294 ? a.addClass("right") : a.removeClass("right"))
    }
    var x = null
      , v = null
      , D = null
      , C = -1
      , A = null
      , F = -1;
    a.display = "none";
    a.contextStyle = {
        display: "none"
    };
    a.$watch("page", n);
    a.$on("urlChanged", n);
    a.$on("contextMenuClose", n);
    var B = null
      , E = null;
    c.m(p);
    a.$on("contextMenuOpen", function(b, c, e) {
        "undefined" != typeof c && (D = MapDetails.get(c.id),
        a.cellId = c.id,
        a.mapCellData = c,
        C = D.subscribe(function() {
            t(a.mapCellData, D, e)
        }))
    });
    a.getTooltipPlacement = function(a) {
        switch (a) {
        case "pos0":
            return "after";
        case "pos1":
            return "above";
        case "pos2":
            return "after";
        case "pos3":
            return "below";
        case "pos4":
            return "before";
        case "pos5":
            return "after";
        case "pos6":
            return "before";
        default:
            return "below"
        }
    }
    ;
    m.$on("ContentMenu.overrideCallback", function(b, c) {
        var e = c[0]
          , f = c[1];
        a.menuItems[e] && (a.menuItems[e].callback = f)
    });
    a.showAddToFarmList = !1;
    var J = null;
    a.openFarmListDialog = function(b) {
        c.p().data.hasNoobProtection || a.villagePlayer && a.villagePlayer.data.hasNoobProtection || (a.farmListTargetId = a.oasis ? a.oasis.id : x.data.villageId,
        b && !a.showAddToFarmList ? (s(),
        a.showAddToFarmList = !0,
        e(function() {
            a.$broadcast("addVillageToFarmList")
        }, 0)) : (b && a.$broadcast("addVillageToFarmList"),
        a.showAddToFarmList ? J && e.cancel(J) : (e(function() {
            a.showAddToFarmList = !0
        }, 500),
        s())))
    }
    ;
    a.closeFarmListDialog = function() {
        J = e(function() {
            a.showAddToFarmList = !1
        }, 500)
    }
    ;
    a.triggerPreselect = function() {
        a.$broadcast("farmListPreselect")
    }
    ;
    a.$on("farmListItemToggle", function(c, e) {
        b.Hd(e, function(b) {
            a.menuItems.pos6.params = {
                inFarmList: b
            }
        })
    })
}
;
window.contextMenuCtrl.$inject = "$scope SessionService VillageService BuildingService RoutingService $timeout MapService $rootScope AudioService".split(" ");
window.dummyCtrl = y();
window.dummyCtrl.$inject = ["$scope"];
window.finishNowCtrl = function(a, c, b) {
    var f = c.i();
    a.inBuilding = [];
    a.inDestruction = [];
    a.inResearch = [];
    a.inTraining = [];
    if (!a.finishNowBuildingType) {
        var g = BuildingQueue.get(f.data.villageId)
          , e = b.aa(f.data.villageId)
          , h = e.subscribe(function() {
            a.buildingsByLocation = {};
            for (var b = 0; b < e.data.length; b++) {
                var c = e.data[b];
                a.buildingsByLocation[c.data.locationId] = c
            }
        })
          , m = g.subscribe(function() {
            a.inBuilding = [];
            a.inDestruction = [];
            a.isWorldWonder = !1;
            a.hasInvalidBuilding = !1;
            Village.isWWVillage(f.data.type) && (a.isWorldWonder = !0);
            var b = Travian.Config.buildingConfig;
            if (!a.finishNowQueueType || a.finishNowQueueType == BuildingQueue.TYPE_VILLAGE) {
                for (var c = 0; c < g.data.queues[BuildingQueue.TYPE_VILLAGE].length; c++) {
                    if ("undefined" !== typeof g.data.queues[BuildingQueue.TYPE_VILLAGE][c]) {
                        var e = g.data.queues[BuildingQueue.TYPE_VILLAGE][c].buildingType;
                        b[e] && b[e].canFinishInstantly ? a.inBuilding.push(g.data.queues[BuildingQueue.TYPE_VILLAGE][c]) : a.hasInvalidBuilding = !0
                    }
                }
            }
            if (!a.finishNowQueueType || a.finishNowQueueType == BuildingQueue.TYPE_RESOURCES) {
                for (c = 0; c < g.data.queues[BuildingQueue.TYPE_RESOURCES].length; c++) {
                    "undefined" !== typeof g.data.queues[BuildingQueue.TYPE_RESOURCES][c] && (e = g.data.queues[BuildingQueue.TYPE_RESOURCES][c].buildingType,
                    b[e] && b[e].canFinishInstantly ? a.inBuilding.push(g.data.queues[BuildingQueue.TYPE_RESOURCES][c]) : a.hasInvalidBuilding = !0)
                }
            }
            a.finishNowQueueType && a.finishNowQueueType != BuildingQueue.TYPE_DESTRUCTION || "undefined" === typeof g.data.queues[BuildingQueue.TYPE_DESTRUCTION][0] || (c = g.data.queues[BuildingQueue.TYPE_DESTRUCTION][0],
            b[c.buildingType] && b[c.buildingType].canFinishInstantly || 1 == c.isRubble ? a.inDestruction.push(c) : a.hasInvalidBuilding = !0)
        });
        a.$on("$destroy", function() {
            g.unsubscribe(m);
            e.unsubscribe(h)
        })
    }
    if (!a.finishNowQueueType) {
        var l = UnitResearchQueue.get(f.data.villageId)
          , p = l.subscribe(function() {
            a.inResearch = [];
            a.inTraining = [];
            for (var b in l.data.buildingTypes) {
                if (!a.finishNowBuildingType || b == a.finishNowBuildingType) {
                    for (var c = l.data.buildingTypes[b], e = 0; e < c.length && (-1 != c[e].pause || (0 == c[e].researchLevel ? a.inResearch.push(c[e]) : a.inTraining.push(c[e]),
                    !a.finishNowBuildingType)); e++) {}
                }
            }
        });
        a.$on("$destroy", function() {
            l.unsubscribe(p)
        })
    }
}
;
window.finishNowCtrl.$inject = ["$scope", "VillageService", "BuildingService"];
window.gameTimelineCtrl = function(a) {
    a.w.windowName = "GameTimeline.Header";
    a.tabConfig.disableScrolling = !0;
    a.selection = {
        step: 0,
        hover: -1
    }
}
;
window.gameTimelineCtrl.$inject = ["$scope"];
window.helpMenuCtrl = function(a, c, b) {
    function f(b) {
        b == IngameHelp.Building ? (a.imageTribeId = 0 < a.page.data.tribe ? a.page.data.tribe : Travian.Player.data.tribeId,
        a.buildingData = a.page.data,
        a.buildingData.descriptionKey = a.buildingData.buildingType,
        void 0 !== Travian.txt["Building.Description_" + a.buildingData.buildingType + "_KingdomUnion"] && (a.buildingData.descriptionKey += "_KingdomUnion")) : b == IngameHelp.Unit && (a.troopData = a.page.data,
        a.troopTypes = a.subLevelNav[a.viewId.split("_")[0] + "_" + a.viewId.split("_")[1]].children,
        a.activeTroopType = a.viewId.split("_")[2],
        a.imageZoomed = !1);
        a.navigationLevel = b == IngameHelp.Index ? 0 : 1
    }
    function g(b) {
        a.page = m.getById(b);
        a.knowledgeBaseLink = "";
        a.page.knowledgeBase && (b = a.page.kbArticleLang || Settings.get(Travian.Player.data.playerId).data.lang,
        a.knowledgeBaseLink = Travian.Config.helpCenter.knowledgeBaseUrl.replace("XX", Travian.Config.helpCenter.langCodeMapping[b] || "en") + "/articles/" + a.page.knowledgeBase)
    }
    function e(b) {
        for (var c = 1, e = 1; 4 >= e; e++) {
            void 0 !== Travian.txt["InGameHelp." + b + ".Step" + e] && (c = e)
        }
        a.maxSteps = c
    }
    function h(b, c) {
        var e = m.getItemViewIdByItemIdAndCategory(b, c);
        a.subLevelNav = m.getById(e.split("_")[0]).children;
        a.pageId = e.split("_")[0];
        a.openHelp(e, IngameHelp.Unit)
    }
    a.w.windowName = "HelpMenu";
    a.tabConfig.tabs = ["Help"];
    a.tabConfig.disableScrollingForTabs = ["Help"];
    a.Troops = Troops;
    a.inHelpMenu = !0;
    a.isSitter = !0;
    a.isDual = !0;
    a.tribes = Player.TRIBE_NAME;
    c.m(function() {
        a.isSitter = c.K();
        a.isDual = c.Ia();
        a.tribe = Player.TRIBE_NAME[Travian.Player.data.tribeId]
    });
    a.resources = Resources.STRING;
    a.page = {};
    var m = new IngameHelp;
    a.pageId = "index";
    a.viewId = "index";
    a.topLevelNav = m.getById(a.pageId);
    a.subLevelNav = null;
    a.page = null;
    a.maxSteps = 1;
    a.currentStep = 1;
    a.openHelpCenter = function() {
        window.open("/api/forwardToHelpcenter.php?sid=" + c.rb(), "_blank")
    }
    ;
    a.openDiscord = function() {
        window.open(Travian.Config.discordUrl, "_blank")
    }
    ;
    a.nextStep = function() {
        var b = a.currentStep + 1;
        b > a.maxSteps && (b = 1);
        a.currentStep = b
    }
    ;
    a.prevStep = function() {
        var b = a.currentStep - 1;
        0 == b && (b = a.maxSteps);
        a.currentStep = b
    }
    ;
    a.openView = function(c) {
        g(c);
        if (a.page.type == IngameHelp.View || a.page.type == IngameHelp.Building || a.page.type == IngameHelp.Unit) {
            a.viewId = c,
            e(c),
            a.pageId = c.split("_")[0],
            a.subLevelNav = m.getParentForId(c, !0).children,
            b.o("pageId", a.viewId),
            f(a.page.type),
            requestAngularApply()
        }
    }
    ;
    a.openHelp = function(c, l) {
        a.currentStep = 1;
        a.maxSteps = 1;
        a.page = {};
        l == IngameHelp.Index && (a.pageId = IngameHelp.Index,
        a.viewId = IngameHelp.Index,
        b.o("pageId", a.viewId),
        a.randomTopic = m.getRandomTopic());
        l == IngameHelp.Topic && (a.pageId = c,
        a.subLevelNav = m.getById(c).children);
        if (l == IngameHelp.View || l == IngameHelp.Building || l == IngameHelp.Unit) {
            a.viewId = c,
            g(c),
            b.o("pageId", a.viewId),
            l == IngameHelp.View && e(c)
        }
        f(l);
        requestAngularApply()
    }
    ;
    a.goBackToTopLevelNav = function() {
        b.l("pageId", !1);
        a.openHelp(null, IngameHelp.Index);
        a.currentStep = 1;
        a.maxSteps = 1
    }
    ;
    a.goToBuilding = function(b) {
        b = m.getBuildingViewIdByType(b);
        a.subLevelNav = m.getById(b.split("_")[0]).children;
        a.pageId = b.split("_")[0];
        a.openHelp(b, IngameHelp.Building)
    }
    ;
    a.changeStep = function(b) {
        a.maxSteps >= b && (a.currentStep = b)
    }
    ;
    a.changeUnit = function(b) {
        var c = a.viewId.split("_");
        c[2] = b;
        a.currentStep = a.openView(c.join("_"))
    }
    ;
    a.$on("$destroy", function() {
        b.l("pageId", !1)
    });
    var l = b.getParam("pageId");
    if (l == IngameHelp.Index || !l) {
        a.randomTopic = m.getRandomTopic(),
        f(IngameHelp.Index)
    } else {
        if (l) {
            var p = l.split("_");
            a.pageId = p[0];
            var n = a.pageId.toLowerCase();
            if (-1 !== ["troops", "buildings"].indexOf(n) && 2 == p.length) {
                "buildings" == n ? a.goToBuilding(p[1]) : h(n, p[1]);
                return
            }
            p = m.getById(l);
            if (p.type == IngameHelp.View || p.type == IngameHelp.Building || p.type == IngameHelp.Unit) {
                a.viewId = l,
                e(l),
                g(l),
                a.subLevelNav = m.getParentForId(l, !0).children,
                f(p.type)
            }
        }
    }
    a.$on("urlChanged", function(b, c) {
        c.hasOwnProperty("pageId") && a.openView(c.pageId)
    });
    requestAngularApply()
}
;
window.helpMenuCtrl.$inject = ["$scope", "SessionService", "RoutingService"];
window.igmSystemCtrl = function(a, c, b, f) {
    function g() {
        a.playerId = Travian.Player.data.playerId;
        a.isBannedFromMessaging = Travian.Player.data.isBannedFromMessaging;
        a.bannedFromMessagingUntil = Travian.Player.data.bannedFromMessaging;
        a.isActivated = Travian.Player.data.isActivated;
        a.isBannedFromMessaging && (a.answerPlaceholder = Travian.translate("Chat.BannedFromMessaging.AnswerPlaceholder"));
        a.isActivated || a.isBannedFromMessaging || (a.answerPlaceholder = Travian.translate("Chat.IsNotActivated"))
    }
    function e(b) {
        a.answerPlaceholder = Travian.translate("Chat.ClickToAnswer");
        a.isIgnored = !1;
        b.data.closed && Travian.nameService.getNameForId(b.data.closedBy, function(b) {
            a.closedByPlayer = b
        });
        b.data.ignoreUntil > (new Date).getTime() && (a.answerPlaceholder = Travian.translate("Chat.Ignore.Placeholder"),
        a.isIgnored = !0);
        g()
    }
    function h() {
        a.filteredInbox = [];
        for (var b = 0, c = a.chat.inbox.data.length; b < c; b++) {
            var f = a.chat.inbox.data[b];
            if (0 < f.data.timestamp && (f.data.isPrivateChat || f.data.isMassMail) && (a.filteredInbox.push(f),
            a.filteredInbox.length == a.countConversationsDisplayed)) {
                break
            }
        }
        a.selectedConversation && e(a.selectedConversation)
    }
    a.tabConfig.tabs = [];
    a.tabConfig.disableScrolling = !0;
    a.w.windowName = "Chat.IgmSystem.Title";
    a.w.params.modalParams.additionalClass = "igmSystemWindow";
    a.ROOM_TYPE_KINGOMD = ChatRoom.TYPE_KINGDOM;
    var m = null
      , l = null
      , p = null
      , n = null;
    a.selectedConversation = null;
    a.chatInputState = 0;
    a.chat = c.getViewModel();
    a.chatLines = null;
    a.unsentLines = [];
    a.input = {
        textToSend: ""
    };
    a.answerPlaceholder = Travian.translate("Chat.ClickToAnswer");
    a.countConversationsDisplayed = 60;
    a.isBannedFromMessaging = !1;
    a.bannedFromMessagingUntil = 0;
    a.isActivated = !1;
    a.isIgnored = !1;
    a.isMonologue = !1;
    a.isOtherPlayerDeleted = !1;
    a.isPlayerDeleted = function(b, c) {
        return "deleted" == Travian.nameService.mf(b) ? (c && (a.isOtherPlayerDeleted = !0,
        a.answerPlaceholder = Travian.translate("Chat.Other.Player.Deleted.PlaceHolder"),
        a.input.textToSend = ""),
        !0) : !1
    }
    ;
    a.openConversation = function(f) {
        null != p && (c.Ja(p),
        p = null);
        null != n && (window.clearTimeout(n),
        n = null);
        var h = a.w.params.roomId = f.data.roomId
          , g = !0;
        a.chatInputState = 0;
        a.selectedConversation = f;
        a.isMonologue = ChatRoom.isMonologue(h);
        null != l && m.unsubscribe(l);
        e(f);
        m = c.qb(h);
        l = m.subscribe(function() {
            a.unsentLines.length = 0;
            a.chatLines = m.data;
            if (g) {
                g = !1;
                for (var e = 0, l = 0, q = m.data.length; l < q; l++) {
                    var r = m.data[l].data;
                    r.timestamp > f.data.lastOwnRead && (e++,
                    r.newLine = 1)
                }
                0 < e && (n = window.setTimeout(function() {
                    p = h
                }, 1E3));
                a.$broadcast("scrollbarApi", "resetSettings")
            } else {
                null != p || ChatRoom.isMonologue(h) || c.Ja(h)
            }
            e = !1;
            for (l = 0; l < a.chatLines.length; l++) {
                if (a.chatLines[l].data.isFirst) {
                    e = !0;
                    break
                }
            }
            10 > a.chatLines.length && (e = !0);
            b(function() {
                if (null != p) {
                    for (var a = 0, b = m.data.length; a < b; a++) {
                        var e = m.data[a].data;
                        1 == e.newLine && (e.newLine = 2)
                    }
                    c.Ja(p);
                    p = null
                }
            }, 1E3);
            a.haveFirst = e;
            requestAngularApply()
        })
    }
    ;
    a.filteredInbox = [];
    var q = a.getParam("roomId");
    if (q) {
        for (var r = 0; r < a.chat.inbox.data.length; r++) {
            if (a.chat.inbox.data[r].data.roomId == q) {
                a.openConversation(a.chat.inbox.data[r]);
                break
            }
        }
    }
    null != a.chat.inbox ? a.subscribe(a.chat.inbox, h) : a.$root.$on("chatServiceReady", function() {
        a.subscribe(a.chat.inbox, h)
    });
    a.setChatInputState = function(c) {
        if (a.isBannedFromMessaging || !a.isActivated || a.isIgnored || a.isOtherPlayerDeleted) {
            return !1
        }
        a.chatInputState = c;
        b(function() {
            a.$broadcast("scrollbarApi", "handleResize")
        }, 50)
    }
    ;
    a.loadOlder = function() {
        for (var b = -1, e = 0; e < a.chatLines.length; e++) {
            var f = a.chatLines[e].data;
            if (-1 == b || f.timestamp < b) {
                b = f.timestamp
            }
        }
        c.qb(a.selectedConversation.data.roomId, b)
    }
    ;
    a.getConversationOptions = function() {
        var b = [];
        if (null != a.selectedConversation.data.otherPlayer) {
            var c = a.selectedConversation.data.otherPlayer.data.playerId;
            if (a.isPlayerDeleted(c)) {
                return b.push({
                    clickable: "deleteInboxEntry('" + a.selectedConversation.data.roomId + "')",
                    text: Travian.translate("Chat.DeleteConversation")
                }),
                b
            }
            b.push({
                clickable: "openWindow('profile', {'playerId': " + c + ", 'profileTab': 'playerProfile'})",
                text: Travian.translate("Chat.OpenProfile")
            });
            var e = f.wd(c)
              , l = f.xd(c);
            l ? l.data.sourceId != Travian.Player.data.playerId ? (b.push({
                clickable: "declineFriend(" + c + ")",
                text: Travian.translate("Chat.DeclineFriend")
            }),
            b.push({
                clickable: "acceptFriend(" + c + ")",
                text: Travian.translate("Chat.AcceptFriend")
            })) : b.push({
                clickable: "cancelFriendRequest(" + c + ")",
                text: Travian.translate("Chat.CancelFriend")
            }) : e ? b.push({
                clickable: "deleteFriend(" + c + ")",
                text: Travian.translate("Chat.RemoveFriend")
            }) : b.push({
                clickable: "addFriend(" + c + ")",
                text: Travian.translate("Chat.AddFriend")
            });
            b.push({
                clickable: "deleteInboxEntry('" + a.selectedConversation.data.roomId + "')",
                text: Travian.translate("Chat.DeleteConversation")
            });
            b.push({
                clickable: "reportConversation('" + a.selectedConversation.data.roomId + "', " + c + ")",
                text: Travian.translate("Button.Chat.Report")
            });
            b.push({
                clickable: "ignorePlayer('" + a.selectedConversation.data.roomId + "'," + c + ")",
                text: Travian.translate("Chat.Ignore.Player")
            })
        } else {
            b.push({
                clickable: "reportConversation('" + a.selectedConversation.data.roomId + "')",
                text: Travian.translate("Button.Chat.Report")
            })
        }
        a.selectedConversation.data.isMassMail && (a.selectedConversation.data.linePlayerId == Travian.Player.data.playerId || a.selectedConversation.data.roomType == ChatRoom.TYPE_KINGDOM && Travian.Player.isKing()) && b.push({
            clickable: "closeConversation('" + a.selectedConversation.data.roomId + "')",
            text: Travian.translate("Button.Chat.Close")
        });
        return b
    }
    ;
    a.addFriend = c.fd;
    a.cancelFriendRequest = c.Pe;
    a.acceptFriend = c.Ie;
    a.deleteFriend = c.Ye;
    a.declineFriend = c.We;
    a.deleteInboxEntry = function(b) {
        c.mh(b);
        a.selectedConversation = null;
        null != l && m.unsubscribe(l)
    }
    ;
    a.ignorePlayer = function(b, c) {
        a.openWindow("ignorePlayer", {
            roomId: b,
            playerId: c
        })
    }
    ;
    a.reportConversation = function(a, b) {
        c.Yd(a, b)
    }
    ;
    a.deleteThread = function(a) {
        Travian.writeRequest("messageBoard/deleteThread", {
            boardType: boardType,
            boardId: boardId,
            threadId: a
        })
    }
    ;
    a.newThread = function() {
        a.openOverlay("igmSystemNewConversation")
    }
    ;
    a.closeConversation = function(a) {
        c.ih(a)
    }
    ;
    a.unCloseConversation = function(a) {
        c.Gi(a)
    }
    ;
    a.triggerSend = function() {
        if (!a.isBannedFromMessaging && a.isActivated) {
            var b = a.input.textToSend;
            0 < b.replace(/^\s+|\s+$/g, "").length && (a.send(b),
            a.input.textToSend = "")
        }
    }
    ;
    a.send = function(b) {
        var e = b.replace(/\[\/?[a-z]\]/g, "");
        a.input.textToSend = "";
        0 < e.trim().length && c.sendMessage(a.selectedConversation.data.roomId, b);
        a.chatInputState = 0;
        null != p && (c.Ja(p),
        p = null)
    }
    ;
    a.loadOlderConversations = function() {
        a.countConversationsDisplayed += 60;
        h()
    }
    ;
    a.subscribe(Travian.Player, g);
    a.$on("$destroy", function() {
        null != l && m.unsubscribe(l)
    })
}
;
window.igmSystemCtrl.$inject = ["$scope", "ChatService", "$timeout", "FriendService"];
window.igmSystemNewConversationCtrl = function(a, c, b) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Chat.StartConversation",
        inWindowPopupContentTemplate: "tpl/igm/igmSystemNewConversation.html"
    });
    var f = {};
    a.shareWith = "";
    a.secretSociety = 0;
    a.input = {
        shareMessage: "",
        adminOnly: !1
    };
    a.shareWithPlayerName = "";
    a.shareWithPlayerId = "";
    a.user = c.p();
    a.societies = Society.getCollection();
    a.subscribe(a.societies, function(a) {
        a = a.data;
        for (var b = 0; b < a.length; b++) {
            var c = a[b].data;
            f[c.groupId] = c.name
        }
    });
    a.shareWith = "player";
    a.dropdownData = {
        bodyClass: "shareWithSocietyDropDown",
        options: f,
        selected: a.secretSociety,
        callback: function(b) {
            a.secretSociety = b
        }
    };
    a.selectSharePlayer = function(b) {
        b ? (a.shareWith = "player",
        a.shareWithPlayerId = b.playerId) : a.shareWithPlayerId = ""
    }
    ;
    a.clearPlayerId = function() {
        a.shareWithPlayerId = ""
    }
    ;
    a.setShareWith = function(b) {
        a.shareWith = b
    }
    ;
    a.share = function() {
        if ("" != a.input.shareMessage.trim() && 0 != a.input.shareMessage.replace(/^\s+|\s+$/g, "").length) {
            var c = a.input.shareMessage.replace(/\[\/?[a-z]\]/g, "");
            a.input.textToSend = "";
            0 != c.trim().length && ("player" == a.shareWith && (b.Vi(a.shareWithPlayerId, a.input.shareMessage),
            a.closeOverlay()),
            "kingdom" == a.shareWith && (b.sendMessage(ChatRoom.TYPE_KINGDOM + "." + Travian.Player.data.kingdomId + "." + (new Date).getTime(), a.input.shareMessage),
            a.closeOverlay()),
            "secretSociety" == a.shareWith && (b.sendMessage(ChatRoom.TYPE_SECRET_SOCIETY + "." + a.secretSociety + "." + (new Date).getTime(), a.input.shareMessage),
            a.closeOverlay()))
        }
    }
}
;
window.igmSystemNewConversationCtrl.$inject = ["$scope", "SessionService", "ChatService"];
window.infoPopupCtrl = function(a) {
    a.context = a.getParam("context");
    a.w.windowName = "Notification.Info.Title." + a.context
}
;
window.infoPopupCtrl.$inject = ["$scope"];
window.introCtrl = function(a) {
    a.step = 1;
    a.nextStep = function() {
        a.step++;
        5 < a.step && a.closeWindow("intro")
    }
}
;
window.introCtrl.$inject = ["$scope"];
window.mapCellDetailsCtrl = function(a, c, b, f, g, e) {
    function h() {
        a.troopsHere = [];
        for (var b = C.v(), c = 0; c < b.length; c++) {
            var e = b[c].data;
            (e.villageIdLocation == r || "undefined" != typeof a.village && a.village.villageId == e.villageIdLocation) && a.troopsHere.push(e)
        }
    }
    function m() {
        a.attackingTroops = {
            cnt: 0,
            first: 0
        };
        for (var b = A.v(), c = 0; c < b.length; c++) {
            var e = b[c].data;
            e.villageIdTarget == r && (a.attackingTroops.cnt++,
            0 == a.attackingTroops.first || a.attackingTroops.first > e.timeFinish) && (a.attackingTroops.first = e.timeFinish)
        }
        0 != u.data.hasNPC && "undefined" != typeof u.data.npcInfo && (a.attackingTroops = u.data.npcInfo.attacks)
    }
    function l() {
        F || (F = !0,
        Travian.request("society/getSharedInformations", {
            villageId: r
        }, function(b) {
            a.sharedInformations = b;
            if ("undefined" != typeof b.cropDetails && null != b.cropDetails) {
                a.productionSign = "+";
                a.cropClass = "positive";
                if (b.cropDetails.current == b.cropDetails.max || 0 > b.cropDetails.production) {
                    a.cropClass = "negative"
                }
                0 > b.cropDetails.production && (a.productionSign = "");
                a.cropPerc = 100 * (b.cropDetails.current / b.cropDetails.max);
                a.sharedInformations.cropDetails.current = Math.floor(a.sharedInformations.cropDetails.current)
            }
            "undefined" != typeof b.nextAttack && !1 != b.nextAttack && (a.showAttack = !0)
        }))
    }
    function p() {
        var c = b.i();
        if (null != c.data.villageId) {
            a.hasRallyPoint = g.dc(b.getActiveVillageId(), Building.TYPE.RALLY_POINT);
            a.mapDetails = u.data;
            a.mapDetails.ownTroops && t.set(a.mapDetails.ownTroops);
            null != u.data.resType && (a.resources = getResourceAllocation(u.data.resType.toString()));
            a.resDistribution = u.data.resType;
            a.options = [];
            a.options.push({
                clickable: "openWindow('markerMenu',{'cellId': " + r + "})",
                text: Travian.translate("ContextMenu.button.marker")
            });
            3 <= b.qc().data.units[Troops.TYPE_SETTLER] ? a.enoughSettlers = !0 : a.enoughSettlers = !1;
            a.w.locationName = "";
            a.w.locationKey = "";
            if (1 == u.data.hasVillage) {
                if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
                    a.invitedToKingdom = !1;
                    for (var e = 0; e < D.data.length; e++) {
                        D.data[e].data.playerId === w.data.playerId && (a.invitedToKingdom = !0)
                    }
                }
                w.getTributes();
                a.village = w.data;
                l();
                a.image = "village/f2-ltr.png";
                a.fieldType = "village";
                a.w.locationName = w.data.name;
                (x.isKing() || x.isViceKing() || x.isDuke()) && (x.data.playerId != w.data.playerId && (w.data.belongsToKingdom == x.data.kingdomId || a.invitedToKingdom)) && (w.data.type != Village.TYPE_GOVERNOR_NPC_VILLAGE && s && (0 < s.data.kingdomId || a.invitedToKingdom) && !s.isViceKing() ? Travian.request("player/getPlayerInfluence", {
                    villageId: b.getActiveVillageId()
                }, function(b) {
                    a.showTributes = b[w.data.villageId] && b[w.data.villageId].dominating;
                    a.territoryConnected = b[w.data.villageId] && b[w.data.villageId].connected
                }) : w.data.type == Village.TYPE_GOVERNOR_NPC_VILLAGE && (a.showTributes = !0),
                a.activeTreasury = c.hasActiveTreasury(),
                Cache.G(w, 60));
                a.options.push({
                    clickable: "openWindow('reports',{'tab': 'Search', 'villageId': " + r + "})",
                    text: Travian.translate("ContextMenu.button.reports")
                });
                g.S("type" + Building.TYPE.MARKET, function(b) {
                    null !== b && 0 < w.data.villageId && a.options.push({
                        clickable: "openWindow('building',{'location': " + b.data.locationId + ", 'tab': 'Send', 'destId': " + r + ", destPlayerId: " + w.data.playerId + "})",
                        text: Travian.translate("ContextMenu.button.sendTraders")
                    })
                });
                u.data.isWonder && (u.data.isConquered = !Player.isNPC(w.data.playerId),
                a.wonderMaxLvl = Travian.Config.endWorldWithWorldWonderLevel)
            } else {
                if (!0 == u.data.isOasis) {
                    Cache.G(u, 60);
                    a.image = "oasis/w" + u.data.oasisType + "-ltr.jpg";
                    a.fieldType = "oasis";
                    a.animals = !1;
                    a.isInTop5 = !1;
                    a.inOwnKingdom = 0 < Travian.Player.data.kingdomId && Travian.Player.data.kingdomId == u.data.kingdomId;
                    a.inVillageReach = n(r);
                    if (u.data.oasisStatus == Village.OASIS_STATUS_WILD) {
                        a.w.locationKey = "Oasis.unoccupied";
                        var f = PlayerProgressTrigger.TOPIC_OASES + "_" + PlayerProgressTrigger.HELP_PAGE_WILD_OASES
                          , q = null
                    } else {
                        a.w.locationKey = "Oasis.occupied";
                        var f = PlayerProgressTrigger.TOPIC_OASES + "_" + PlayerProgressTrigger.HELP_PAGE_TROOPS_IN_OASIS
                          , q = PlayerProgressTrigger.CHECK_ASSIGN_OASIS_QUEST_SOLVED
                    }
                    PlayerProgressTrigger.triggerInGameHelp(f, q);
                    if (4 == u.data.troops.tribeId && "undefined" == typeof u.data.troops.units.length) {
                        a.units = {};
                        a.troopDetails = u.data.troops;
                        a.oasisTroops = u.data.troops;
                        a.oasisTroops.originalTroops = a.oasisTroops.units;
                        for (e in a.oasisTroops.units) {
                            f = 10 * (u.data.troops.tribeId - 1) + parseInt(e),
                            a.units[e] = {},
                            a.units[e].amount = a.oasisTroops.units[e],
                            a.units[e].name = Travian.translate("Troop_" + f),
                            a.units[e].number = parseInt(e),
                            0 < a.units[e].amount && (a.animals = !0)
                        }
                        a.selectedCharge = u.data;
                        a.options.push({
                            clickable: "openInSim()",
                            text: Travian.translate("ContextMenu.button.openInSim")
                        })
                    }
                    a.playerRank = {};
                    for (e = 0; e < u.data.playersWithTroops.length; e++) {
                        f = u.data.playersWithTroops[e],
                        a.playerRank[f.playerId] = {
                            rank: e,
                            bonus: f.bonus
                        }
                    }
                    a.villageProductionBonus = {};
                    null != u.data.ownTroops && 1 <= u.data.ownTroops.rank && (a.isInTop5 = !0,
                    a.villageProductionBonus = b.Eh(u.data.ownTroops.usedByVillage, u.data.ownTroops.bonus));
                    a.embassyLocationId = -1;
                    a.isInTop5 || (a.activeVillageInReach = Qa(c.data.villageId, r),
                    a.activeVillageInReach && g.S("type" + Building.TYPE.EMBASSY, function(b) {
                        b && 0 < b.data.lvl && (a.embassyLocationId = b.data.locationId)
                    }));
                    a.requestInfluenceData = function(a, b) {
                        if (!(0 >= b)) {
                            var c = +new Date;
                            Travian.request("village/getVillagesWithInfluenceOnOasisForPlayer", {
                                oasisId: r,
                                playerId: b
                            }, function(e) {
                                var f = {};
                                f.influenceData = e;
                                for (e = f.totalInfluence = 0; e < f.influenceData.length; e++) {
                                    f.totalInfluence += f.influenceData[e].influence,
                                    f.influenceData[e].influence = Math.round(f.influenceData[e].influence)
                                }
                                f.troopsInfluence = "?";
                                u.data.ownTroops && b == u.data.ownTroops.playerId && (f.troopsInfluence = u.data.ownTroops.amount,
                                f.totalInfluence += f.troopsInfluence);
                                f.totalInfluence = Math.round(f.totalInfluence);
                                a(f, new Date - c)
                            })
                        }
                    }
                } else {
                    if ("undefined" != typeof u.data.hasNPC && 0 != u.data.hasNPC) {
                        a.fieldType = "npcVillageRobber";
                        u.data.npcInfo.type == Village.TYPE_GOVERNOR_NPC_VILLAGE && (a.fieldType = "npcVillageGovernor",
                        w = Village.get(u.data.npcInfo.villageId),
                        u.data.hasVillage = 1,
                        c.hasActiveTreasury() ? a.activeTreasury = !0 : a.activeTreasury = !1,
                        a.showTributes = !0);
                        w.getTributes();
                        a.village = w.data;
                        a.w.locationName = u.data.npcInfo.name;
                        if ("undefined" == typeof u.data.npcInfo.charges) {
                            a.selectedCharge = u.data.npcInfo
                        } else {
                            c = 1;
                            f = u.data.npcInfo.charges;
                            for (e = 0; e < f.length; e++) {
                                f[e].cleared || f[e].locked || (c = f[e].number)
                            }
                            a.selectCharge(c)
                        }
                        u.data.npcInfo.type == Village.TYPE_ROBBER_VILLAGE && (a.options.push({
                            clickable: "openInSim()",
                            text: Travian.translate("ContextMenu.button.openInSim")
                        }),
                        f = PlayerProgressTrigger.TOPIC_ROBBERS + "_" + PlayerProgressTrigger.HELP_PAGE_ROBBER_HIDEOUTS,
                        PlayerProgressTrigger.triggerInGameHelp(f))
                    } else {
                        if (1 == u.data.isHabitable || a.cellData.menhir) {
                            if (a.image = "village/f2-ltr.png",
                            a.fieldType = "habitable",
                            a.cellData.menhir) {
                                if (a.w.locationKey = "Map.TileInformation.Menhir",
                                a.w.locationKeyParams = {
                                    playerId: a.cellData.menhir
                                },
                                a.cellData.owner == Travian.Player.data.playerId) {
                                    for (e = 0; e < D.data.length; e++) {
                                        if (D.data[e].isRelocationInvitation(r)) {
                                            a.relocationInvitation = D.data[e];
                                            break
                                        }
                                    }
                                }
                            } else {
                                a.w.locationKey = "HabitableField"
                            }
                        } else {
                            "undefined" != typeof u.data.landscape && (a.image = "landscape/" + ["", "forest", "clay", "hill", "lake"][u.data.landscape.toString().substring(0, 1)] + "-ltr.jpg"),
                            a.fieldType = "unhabitable",
                            a.w.locationKey = "UnhabitableField"
                        }
                    }
                }
            }
            m();
            h()
        }
    }
    function n(a) {
        a = id2xy(a);
        for (var b = Travian.Player.data.villages, c = 0; c < b.length; c++) {
            var e = b[c].coordinates
              , f = Math.abs(e.x) - Math.abs(a.x)
              , e = Math.abs(e.y) - Math.abs(a.y);
            if (3 >= f && 3 >= e && -3 <= f && -3 <= e) {
                return !0
            }
        }
        return !1
    }
    function q() {
        if (u.filled) {
            var b = [];
            0 != u.data.hasNPC && (w = Village.get(u.data.npcInfo.villageId),
            b.push(w));
            1 == u.data.hasVillage && (w = Village.get(r),
            b.push(w),
            s = Player.get(u.data.playerId),
            b.push(s));
            !Travian.Player.isKing() && !Travian.Player.isViceKing() || 1 != u.data.hasVillage && !a.cellData.menhir || (D = GroupInvitation.getCollection(GroupInvitation.COLLECTION_FOR_GROUP, GroupInvitation.TYPE_KINGDOM, Travian.Player.data.kingdomId),
            b.push(D));
            null != v && v();
            0 < b.length ? v = Cache.ja(b, p) : p()
        }
    }
    a.w.contentHeaderTemplate = "tpl/mapCellDetails/partials/mapCellHeader.html";
    a.tabConfig.tabs = [];
    a.tabConfig.disableScrolling = !0;
    a.Village = Village;
    var r = a.getParam("cellId");
    if (0 < Travian.Player.data.playerId && !Travian.Player.isOnMap() || 0 > r) {
        a.closeWindow("mapCellDetails")
    } else {
        a.cellData = e.rc(r);
        a.$on("clearCache", function() {
            a.cellData = e.rc(r)
        });
        var t = new OasisTroopRanking
          , u = MapDetails.get(r)
          , w = null
          , s = null
          , x = c.p()
          , v = null
          , D = null;
        a.cellId = r;
        a.coordinates = id2xy(r);
        a.w.coordinates = a.coordinates;
        a.troops = !1;
        a.resources = {
            wood: 0,
            clay: 0,
            iron: 0,
            crop: 0
        };
        a.showTributes = !1;
        a.activeTreasury = !1;
        a.showAttack = !1;
        a.PlayerModel = Player;
        a.ResourcesModel = Resources;
        a.Math = Math;
        a.getOptions = function() {
            return a.options
        }
        ;
        a.selectedCharge = {};
        var C = f.H(null, [Troops.COLLECTION_ELSEWHERE], h, a)
          , A = f.H(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], m, a);
        a.attackingTroops = {
            cnt: 0,
            first: 0
        };
        a.sendTroops = function(b, c) {
            "Disband" == c ? Travian.writeRequest("troops/disband", {
                troopId: b.troopId
            }) : a.openWindow("sendTroops", {}, {
                troopId: b.troopId,
                moveHomeType: c
            })
        }
        ;
        a.selectCharge = function(b) {
            for (var c = 0; c < u.data.npcInfo.charges.length; c++) {
                var e = u.data.npcInfo.charges[c];
                e.number == b && (a.selectedCharge = e,
                a.selectedCharge.updated = !0)
            }
        }
        ;
        a.settleHere = function() {
            var b = {
                x: a.coordinates.x,
                y: a.coordinates.y,
                type: Troops.MOVEMENT_TYPE_SETTLE
            }
              , c = {
                preselect: {}
            };
            c.preselect[Troops.TYPE_SETTLER] = 3;
            a.openWindow("sendTroops", b, c)
        }
        ;
        a.openRelocationInvitation = function() {
            var b = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
            a.subscribe(b, function() {
                for (var c = 0; c < b.data.length; c++) {
                    if (b.data[c].isRelocationInvitation(r)) {
                        a.openWindow("society", {
                            tab: "Kingdom",
                            overlaysociety: "kingdomInvitation",
                            invitation: b.data[c].data.id
                        });
                        break
                    }
                }
            })
        }
        ;
        a.cancelResettleOffer = function() {
            Travian.Player.isKing() ? a.invitations = GroupInvitation.getCollection(GroupInvitation.COLLECTION_FOR_GROUP, GroupInvitation.TYPE_KINGDOM, Travian.Player.data.kingdomId) : a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
            a.subscribe(a.invitations, function() {
                for (var b = 0; b < a.invitations.data.length; b++) {
                    if (a.invitations.data[b].isRelocationInvitation(r)) {
                        Travian.writeRequest("kingdom/declineInvitation", {
                            id: a.invitations.data[b].data.id
                        });
                        a.closeWindow("mapCellDetails");
                        break
                    }
                }
            })
        }
        ;
        var F = !1;
        a.openInSim = function() {
            var c = Research.get(b.getActiveVillageId());
            a.subscribe(c, function() {
                a.openWindow("building", {
                    location: 32,
                    tab: "CombatSimulator"
                }, {
                    combatSimulatorData: {
                        attacker: {
                            tribeId: Travian.Player.data.tribeId,
                            attackType: Troops.MOVEMENT_TYPE_ATTACK,
                            research: c
                        },
                        defender: {
                            tribeId: a.selectedCharge.troops.tribeId,
                            troops: a.selectedCharge.troops.units
                        }
                    }
                })
            })
        }
        ;
        a.subscribe(u, q);
        a.$on("activeVillageChanged", q);
        a.$watch("cellData.menhir", function(a, b) {
            a != b && q()
        });
        a.fetchTributes = function() {
            Travian.writeRequest("troops/fetchTributesForVillages", {
                villageId: b.getActiveVillageId(),
                destVillageIds: [w.data.villageId]
            }, a.handleError)
        }
        ;
        a.$on("$destroy", function() {
            null != v && v()
        })
    }
}
;
window.mapCellDetailsCtrl.$inject = "$scope SessionService VillageService TroopsService BuildingService MapService".split(" ");
window.mapCtrl = function(a, c, b, f, g, e, h, m) {
    var l = b.init(a)
      , p = "borders cropFinder mainVillages markers fieldMarkersGlobal fieldMarkersPersonal villageTreasures".split(" ");
    a.multiLanguageServer = 1 < Object.keys(Travian.Config.selectableLanguages).length;
    var n = Settings.get(Travian.Player.data.playerId);
    n.subscribe(function() {
        if (0 <= n.data.mapFilter) {
            for (var a = 0; a < p.length; a++) {
                l.yb(p[a], 0 < (n.data.mapFilter & Math.pow(2, a)), !0)
            }
        }
        l.lj(n.getAttackSettings());
        l.Z()
    });
    "undefined" != typeof f.getParam("centerId") ? (b = f.getParam("centerId"),
    b = b.split("_", 1)[0],
    b = id2xy(b),
    l.oa(b.x, b.y)) : (b = id2xy(g.getActiveVillageId()),
    l.oa(b.x, b.y, !1, !0));
    l.Z();
    a.zoomLevel = l.Kh();
    a.zoom = function(a) {
        l.ce(a)
    }
    ;
    a.goTo = function() {
        a.goToLocation.show = !a.goToLocation.show;
        a.filters.showFilters = !1;
        m(function() {
            $(".goToButton input").focus()
        }, 0)
    }
    ;
    a.setFilter = function(b, c, e) {
        l.yb(b, c, e);
        for (c = b = 0; c < p.length; c++) {
            a.filters[p[c]] && (b += Math.pow(2, c))
        }
        if (n.filled && n.data.mapFilter != b) {
            var f = n.hasMapFilterFlag(p.indexOf("fieldMarkersGlobal"))
              , h = n.hasMapFilterFlag(p.indexOf("fieldMarkersPersonal"));
            n.data.mapFilter = b;
            n.persist(function() {
                var a = n.hasMapFilterFlag(p.indexOf("fieldMarkersGlobal"))
                  , b = n.hasMapFilterFlag(p.indexOf("fieldMarkersPersonal"));
                if (f != a) {
                    for (var c = Cache.Lb("Collection:FieldMarkerGlobal"), a = 0; a < c.length; a++) {
                        for (var e = 0; e < c[a].data.length; e++) {
                            c[a].data[e].data.minimizedState = FieldMarkerPersonal.MINIMIZED_DEFAULT
                        }
                        c[a].callSubscribers()
                    }
                }
                if (h != b) {
                    b = Cache.Lb("Collection:FieldMarkerPersonal");
                    b = b[0];
                    for (a = 0; a < b.data.length; a++) {
                        b.data[a].data.minimizedState = FieldMarkerPersonal.MINIMIZED_DEFAULT
                    }
                    b.callSubscribers()
                }
            })
        }
    }
    ;
    "undefined" != typeof f.getParam("zoomLevel") && (b = f.getParam("zoomLevel"),
    a.zoom(b));
    a.$on("urlChanged", function(a, b) {
        if ("undefined" != typeof b.centerId && null != b.centerId) {
            var c = b.centerId
              , c = c.split("_", 1)[0]
              , c = id2xy(c);
            l.oa(c.x, c.y);
            l.Z();
            l.dg({
                x: c.x,
                y: c.y
            })
        }
    });
    e.zi(function(a, b) {
        "map" == a ? (l.init(),
        0 < Travian.Player.data.playerId && Travian.Player.isOnMap() && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_KINGDOM + "_" + PlayerProgressTrigger.HELP_PAGE_MAP_DETAIL_VIEW)) : "map" == b && (l.Ni(),
        f.l("centerId"))
    });
    var q = {
        show: !1,
        index: 1,
        model: "",
        searchObj: {},
        jump: function(b) {
            "undefined" !== typeof q.searchObj.data && 0 < q.searchObj.data.length ? (!0 !== b && (q.index = 1),
            a.openPage("map", "centerId", q.searchObj.data[q.index - 1].villageId + "_" + h.R())) : (q.searchObj = {},
            q.index = 1)
        },
        forward: function() {
            !("undefined" === typeof q.searchObj.data && 0 < q.searchObj.data.length) && q.index < q.searchObj.data.length && (q.index++,
            q.jump(!0))
        },
        backward: function() {
            !("undefined" === typeof q.searchObj.data && 0 < q.searchObj.data.length) && 1 < q.index && (q.index--,
            q.jump(!0))
        }
    };
    a.goToLocation = q;
    a.fieldMarkerToggle = function(a) {
        var b = a.markers[a.selectedMarker].data;
        a.minimized = !a.minimized;
        b.minimizedState = a.minimized ? FieldMarkerPersonal.MINIMIZED_MINIMIZED : FieldMarkerPersonal.MINIMIZED_MAXIMIZED;
        Travian.writeRequest("map/fieldMarkerMinimize", {
            cellId: b.cellId,
            isGlobal: a.markers[0].data.isGlobal,
            minimizeState: a.minimized ? 1 : 0
        });
        a.selectedMarker = 0;
        return !1
    }
    ;
    a.fieldMarkerDelete = function(b, c) {
        var e = b[c]
          , f = e.markers[e.selectedMarker].data;
        Travian.writeRequest("map/fieldMarkerClose", {
            id: f.id,
            isGlobal: f.isGlobal
        });
        if (f.isGlobal) {
            for (var l = Cache.Lb("Collection:FieldMarkerGlobal"), h = 0; h < l.length; h++) {
                for (var m = 0; m < l[h].data.length; m++) {
                    if (l[h].data[m].data.id == f.id) {
                        l[h].data[m].data.isClosed = 1;
                        l[h].callSubscribers();
                        break
                    }
                }
            }
        }
        e.selectedMarker >= e.markers.length && (e.selectedMarker = 0);
        0 == e.markers.length && delete a.fieldMarkers[c];
        return !1
    }
    ;
    a.fieldMarkerSwitch = function(a, b) {
        a.selectedMarker += b;
        0 > a.selectedMarker && (a.selectedMarker = a.markers.length - 1);
        a.selectedMarker >= a.markers.length && (a.selectedMarker = 0);
        return !1
    }
    ;
    a.openPlayerWindow = function(a) {
        c.openWindow("profile", {
            playerId: a,
            profileTab: "playerProfile"
        }, null, !0);
        return !1
    }
    ;
    a.goHome = function() {
        a.openPage("map", "centerId", g.getActiveVillageId() + "_" + h.R())
    }
}
;
window.mapCtrl.$inject = "$scope $rootScope MapService RoutingService VillageService WindowService ServertimeService $timeout".split(" ");
window.markerMenuCtrl = function(a, c, b) {
    function f(a, b) {
        var c = {
            owner: a.owner,
            type: b,
            color: a.color,
            editType: a.editType
        };
        c.ownerId = c.owner == Marker.TYPE_KINGDOM ? p.data.kingdomId : p.data.playerId;
        switch (b) {
        case Marker.TYPE_PLAYER:
            c.targetId = h.data.playerId;
            break;
        case Marker.TYPE_KINGDOM:
            c.targetId = PlayerKingdomMapper.ba(l.owner);
            break;
        case Marker.TYPE_COORDINATES:
            c.targetId = e
        }
        a.alreadyExisting ? c.id = a.id : a.markedForDeletion && (c.id = a.idForDeletion);
        return c
    }
    function g() {
        var b = {
            id: 0,
            Oj: !1,
            fk: !1,
            ck: 0,
            show: !1,
            Rj: !1,
            color: 0,
            owner: 1,
            typeName: "",
            $j: 0
        };
        a.playerMarker = angular.copy(b);
        a.kingdomMarker = angular.copy(b);
        a.tileMarker = angular.copy(b);
        a.typeTable = ["", a.playerMarker, a.kingdomMarker, a.tileMarker];
        a.typeTable[Marker.TYPE_PLAYER].typeName = "player";
        a.typeTable[Marker.TYPE_KINGDOM].typeName = "kingdom";
        a.typeTable[Marker.TYPE_COORDINATES].typeName = "tile"
    }
    a.w.windowName = "ContextMenu.MarkerMenu.Title";
    a.tabConfig.tabs = ["EditMarker", "AllMarker"];
    a.tabConfig.bodyTemplatePrefix = "tpl/markerMenu/tabs/";
    var e = a.getParam("cellId")
      , h = MapDetails.get(e)
      , m = Ma(e)
      , l = b.rc(m.x, m.y)
      , p = c.p()
      , n = Marker.getCollection();
    a.typePlayer = Marker.TYPE_PLAYER;
    a.typeKingdom = Marker.TYPE_KINGDOM;
    a.typeCoordinates = Marker.TYPE_COORDINATES;
    a.hasKingdomRights = !1;
    a.playerInKingdom = !1;
    a.markerOwnerDirectories = {};
    a.markerOwnerDirectories[Marker.TYPE_PLAYER] = "player";
    a.markerOwnerDirectories[Marker.TYPE_KINGDOM] = "kingdom";
    a.markerChanged = !1;
    a.typeTable = [];
    a.FieldMarkerPersonal = FieldMarkerPersonal;
    a.fieldMessage = {
        text: "",
        type: 0,
        duration: 12,
        cellId: e,
        targetId: 0
    };
    a.fieldMessageDurationDropdown = {
        selected: a.fieldMessage.duration,
        options: {
            6: "6h",
            12: "12h",
            24: "24h",
            48: "48h"
        },
        callback: function(b) {
            a.fieldMessage.duration = b
        }
    };
    a.secretSocietyDropdown = {
        selected: 0,
        options: {},
        callback: function(b) {
            a.fieldMessage.targetId = b
        }
    };
    var q = Society.getCollection();
    a.subscribe(q, function() {
        a.secretSocietyDropdown.options = {};
        for (var b = 0; b < q.data.length; b++) {
            var c = q.data[b];
            a.secretSocietyDropdown.options[c.data.groupId] = c.data.name;
            a.secretSocietyDropdown.selected || (a.secretSocietyDropdown.selected = c.data.groupId)
        }
    });
    a.onFieldMessageTextChange = function() {
        a.markerChanged = !0
    }
    ;
    a.playerSearch = {
        name: null,
        obj: null,
        autocompleteParam: "player"
    };
    a.setSearchName = function(b) {
        a.playerSearch.name = b.name;
        a.playerSearch.obj = b;
        a.fieldMessage.targetId = parseInt(b.playerId, 10)
    }
    ;
    a.onPlayerSearchFocus = function() {
        a.fieldMessage.type = FieldMarkerPersonal.PLAYER
    }
    ;
    a.onFieldMessageTypeChange = function() {
        a.fieldMessage.type !== FieldMarkerPersonal.PLAYER && (a.playerSearch.name = null,
        a.playerSearch.obj = null);
        a.fieldMessage.targetId = a.fieldMessage.type === FieldMarkerPersonal.SOCIETY ? a.secretSocietyDropdown.selected : 0
    }
    ;
    g();
    a.subscribe(h, function() {
        a.hasVillage = 0 == h.data.hasVillage ? !1 : !0
    });
    a.setColor = function(b, c) {
        a.typeTable[c].color != b ? (a.typeTable[c].changed = !0,
        a.typeTable[c].color = b,
        a.markerChanged = !0) : (a.typeTable[c].alreadyExisting && (a.typeTable[c].markedForDeletion = !0,
        a.typeTable[c].idForDeletion = a.typeTable[c].id,
        a.markerChanged = !0),
        a.typeTable[c].id = 0,
        a.typeTable[c].alreadyExisting = !1,
        a.typeTable[c].show = !1,
        a.typeTable[c].changed = !1,
        a.typeTable[c].color = 0,
        a.typeTable[c].owner = 1)
    }
    ;
    a.saveMarkers = function() {
        for (var b = [], c = 1; c < a.typeTable.length; c++) {
            var e = c
              , l = a.typeTable[e];
            l.markedForDeletion ? (l.editType = l.changed ? Marker.editTypes.TYPE_EDIT : Marker.editTypes.TYPE_DELETE,
            b.push(f(l, e))) : l.changed && 0 < l.color && (l.editType = l.alreadyExisting ? Marker.editTypes.TYPE_EDIT : Marker.editTypes.TYPE_CREATE,
            b.push(f(l, e)))
        }
        c = angular.copy(a.fieldMessage);
        0 === c.type && (c.type = FieldMarkerPersonal.PLAYER,
        c.targetId = p.data.playerId);
        Travian.writeRequest("map/editMapMarkers", {
            markers: b,
            fieldMessage: c
        }, function(b) {
            "undefined" != typeof b.errors ? a.handleError(b, "error") : a.closeWindow("markerMenu")
        })
    }
    ;
    a.showColors = function(b) {
        a.markerAvailable(b) && (a.typeTable[b].show = !0)
    }
    ;
    a.hideColors = function(b) {
        a.typeTable[b].alreadyExisting || a.typeTable[b].changed || (a.typeTable[b].show = !1)
    }
    ;
    a.deleteMarkerTabAll = function(a) {
        var b = {};
        b.markers = [{
            editType: Marker.editTypes.TYPE_DELETE,
            id: a
        }];
        Travian.writeRequest("map/editMapMarkers", b)
    }
    ;
    a.toggleShareWithKingdom = function(b) {
        a.typeTable[b].owner = a.typeTable[b].owner == Marker.TYPE_KINGDOM ? a.typePlayer : a.typeKingdom;
        a.typeTable[b].changed = !0;
        a.markerChanged = !0
    }
    ;
    a.subscribe(p, function() {
        a.playerId = p.data.playerId;
        a.playerInKingdom = 0 !== p.data.kingdomId;
        a.hasKingdomRights = p.isKingdomLeader()
    });
    a.selectionAvailable = function(a) {
        return a == Marker.TYPE_KINGDOM ? !1 : !0
    }
    ;
    a.markerAvailable = function(b) {
        return b == Marker.TYPE_PLAYER ? a.hasVillage ? !0 : !1 : b == Marker.TYPE_KINGDOM ? 0 < l.owner : !0
    }
    ;
    a.colors = [Marker.COLOR_BROWN, Marker.COLOR_YELLOW, Marker.COLOR_TEAL, Marker.COLOR_BLUE, Marker.COLOR_DARK_BLUE, Marker.COLOR_LIGHT_GREEN, Marker.COLOR_PINK, Marker.COLOR_PURPLE, Marker.COLOR_DARK_GREEN, Marker.COLOR_RED];
    a.defaultColors = {
        kingdom: Marker.COLOR_OWN,
        confederacies: Marker.TREATY_COLOR_BND,
        nap: Marker.TREATY_COLOR_NAP,
        neutral: Marker.COLOR_NEUTRAL,
        enemies: Marker.COLOR_ENEMY
    };
    a.colorByIndex = {};
    for (c = 0; c < a.colors.length; c++) {
        b = a.colors[c],
        a.colorByIndex[b.index] = b
    }
    a.subscribe(n, function() {
        a.allPlayerMarkers = [];
        a.allKingdomMarkers = [];
        a.allTileMarkers = {};
        a.allTileMarkers[Marker.TYPE_PLAYER] = [];
        a.allTileMarkers[Marker.TYPE_KINGDOM] = [];
        g();
        for (var b = 0; b < n.data.length; b++) {
            var c = n.data[b];
            c.data.colorData = Marker.COLORS[c.data.color];
            if (c.data.type == Marker.TYPE_PLAYER) {
                a.allPlayerMarkers.push(c.data)
            } else {
                if (c.data.type == Marker.TYPE_KINGDOM) {
                    a.allKingdomMarkers.push(c.data)
                } else {
                    if (c.data.type == Marker.TYPE_COORDINATES) {
                        var f = id2xy(c.data.targetId);
                        c.data.x = f.x;
                        c.data.y = f.y;
                        a.allTileMarkers[c.data.owner].push(c.data)
                    }
                }
            }
            f = null;
            c.data.type == Marker.TYPE_PLAYER && c.data.targetId == h.data.playerId ? f = a.playerMarker : c.data.type == Marker.TYPE_KINGDOM && c.data.targetId == PlayerKingdomMapper.ba(l.owner) && (f = a.kingdomMarker);
            c.data.type == Marker.TYPE_COORDINATES && c.data.targetId == e && (f = a.tileMarker);
            null != f && (f.id = c.data.id,
            f.alreadyExisting = !0,
            f.show = !0,
            f.color = c.data.color,
            f.owner = c.data.owner)
        }
    });
    var r = FieldMarkerPersonal.getCollection();
    a.settings = Settings.get(Travian.Player.data.playerId);
    a.subscribe(r, function() {
        var b = angular.copy(r.data)
          , c = [];
        angular.forEach(b, function(a) {
            var b = id2xy(a.data.cellId);
            a.data.x = b.x;
            a.data.y = b.y;
            a.timeAgo = a.getTimeAgoString();
            a.disappearIn = a.getDisappearTime();
            Player.isNPC(a.data.creatorPlayerId) || c.push(a)
        });
        a.fieldMessages = c
    });
    a.deleteFieldMessage = function(a) {
        Travian.writeRequest("map/fieldMarkerDelete", {
            id: a.data.id,
            isGlobal: a.data.isGlobal
        })
    }
    ;
    a.toggleFieldMessageClose = function(a) {
        Travian.writeRequest("map/fieldMarkerClose", {
            id: a.data.id,
            isGlobal: a.data.isGlobal
        });
        a.data.isClosed = !a.data.isClosed
    }
}
;
window.markerMenuCtrl.$inject = ["$scope", "SessionService", "MapService"];
window.notepadCtrl = function(a, c) {
    a.notepads = null;
    a.$on("toggleNotepads", function() {
        0 == a.notepads.data.length && Travian.request("player/addNote", {})
    });
    c.m(function() {
        player = c.p();
        a.notepads = Notepad.getCollection();
        a.settings = Settings.get(Travian.Player.data.playerId)
    })
}
;
window.notepadCtrl.$inject = ["$scope", "SessionService"];
window.npcTraderCtrl = function(a, c) {
    a.w.windowName = "Tab.NpcTrade";
    a.Math = Math;
    null != a.getParam(Resources.STRING["1"], !0, !1) ? a.predistribution = {
        1: parseInt(a.getParam(Resources.STRING["1"])),
        2: parseInt(a.getParam(Resources.STRING["2"])),
        3: parseInt(a.getParam(Resources.STRING["3"])),
        4: parseInt(a.getParam(Resources.STRING["4"]))
    } : a.predistribution = c.i().getResources();
    a.closeNpcWindow = a.getParam("closeWindow")
}
;
window.npcTraderCtrl.$inject = ["$scope", "VillageService"];
window.playerLockedCtrl = function(a, c, b, f) {
    var g = f.p();
    c.playerAvatarName = c.getParam("playerName");
    c.punishment = c.getParam("punishment");
    c.PlayerPunishment = PlayerPunishment;
    c.suspensionTime = c.getParam("suspensionTime") || 0;
    c.w.windowName = "PlayerLocked.WindowName";
    c.isSitter = "true" == c.getParam("isSitter") ? !0 : !1;
    f.m(function() {
        c.isSitter = f.K()
    });
    c.reasons = [];
    var e = c.getParam("reasons");
    if ("undefined" !== typeof e) {
        for ("string" == typeof e && (e = e.split(",")),
        "number" == typeof e && (e = [e]),
        a = 0; a < e.length; a++) {
            var h = !1;
            0 == a && (h = !0);
            c.reasons.push({
                type: e[a],
                expanded: h
            })
        }
    }
    c.openHelpCenter = function() {
        window.open("/api/forwardToHelpcenter.php?sid=" + f.rb(), "_blank")
    }
    ;
    c.expandReason = function(a) {
        for (var e = 0; e < c.reasons.length; e++) {
            c.reasons[e].expanded && (c.reasons[e].expanded = !1)
        }
        c.reasons[a].expanded = !0;
        b(function() {
            c.$broadcast("scrollbarApi", "handleResize")
        }, 10)
    }
    ;
    c.subscribe(g, function() {
        c.playerAvatarName = g.data.name;
        var a = !1;
        if (void 0 == c.paymentDetails && "undefined" !== typeof e) {
            for (var b = 0; b < e.length; b++) {
                e[b] == PlayerPunishment.STRIKE_REASON_PAYMENT && (a = !0)
            }
        }
        a && Travian.request("payment/getPaymentErrors", {}, function(a) {
            if (a) {
                var b = 0
                  , e = 0
                  , f = [];
                c.paymentDetails = {};
                c.paymentDetails.orders = {};
                for (b = c.paymentDetails.clickAndBuyOrders = 0; b < a.length; b++) {
                    "clickandbuy" !== a[b].provider.toLowerCase() ? (c.paymentDetails.orders[b] = {},
                    c.paymentDetails.orders[b].provider = a[b].provider,
                    c.paymentDetails.orders[b].price = a[b].paidAmount,
                    c.paymentDetails.orders[b].fee = a[b].chargebackFee,
                    e += parseFloat(a[b].paidAmount) + parseFloat(a[b].chargebackFee)) : c.paymentDetails.clickAndBuyOrders++,
                    0 > $.inArray(a[b].provider, f) && f.push(a[b].provider)
                }
                c.paymentDetails.total = +e.toPrecision(12);
                c.paymentDetails.providers = f.join(", ");
                c.paymentDetails.ordersCount = a.length;
                c.paymentDetails.worldhost = a[0].worldhost;
                c.paymentDetails.instanceId = a[0].instanceId;
                c.paymentDetails.userId = g.data.avatarIdentifier
            }
        });
        g.data.isPunished || c.closeWindow("playerLocked")
    })
}
;
window.playerLockedCtrl.$inject = ["$rootScope", "$scope", "$timeout", "SessionService"];
window.relocationCtrl = function(a) {
    a.w.windowName = "Relocation.Headline";
    a.resNames = angular.copy(Resources.STRING);
    delete a.resNames[0];
    a.getResourceFields = function(a, b) {
        return getResourceAllocation(a.toString())[b]
    }
    ;
    a.cellId = a.getParam("cellId");
    a.cellDetails = MapDetails.get(a.cellId);
    a.checkRelocation = function(c) {
        c && Travian.request("kingdom/checkRelocation", {
            playerId: c.playerId,
            cellId: a.cellId
        }, function(b) {
            a.relocationErrors = b;
            a.inviteeId = c.playerId
        })
    }
    ;
    a.offerRelocation = function() {
        Travian.request("kingdom/offerRelocation", {
            playerId: a.inviteeId,
            cellId: a.cellId
        }, function(c) {
            c.errors ? a.relocationErrors = c.errors : a.closeWindow("relocation")
        })
    }
    ;
    a.checkRelocation({
        playerId: 0
    })
}
;
window.relocationCtrl.$inject = ["$scope"];
window.resourcesCtrl = function(a, c, b, f, g) {
    function e(b, c, e) {
        if (a.village.data.villageId != c || r) {
            return !1
        }
        if (a.interpolateResources) {
            c = !1;
            for (b = 1; 4 >= b; b++) {
                c = c || Math.abs(e[b] - u[b]) > a.interpolationThresholds[b],
                a.tmpResources[b] && e[b] < u[b] && (a.tmpResources[b] = Math.max(0, a.tmpResources[b] - (u[b] - e[b])))
            }
            if (c) {
                for (b = 1,
                c = 0; 4 >= b; b++) {
                    e[b] != u[b] && e[b] > u[b] && (0 < c && !a.tmpResources[b] && (a.tmpResources[b] = u[b],
                    h(b, c)),
                    c++)
                }
            }
        }
        u = angular.copy(e);
        a.$$phase || a.$digest()
    }
    function h(b, c) {
        g(function() {
            t[b] = window.setTimeout(function() {
                a.tmpResources[b] = !1;
                a.$$phase || a.$digest();
                t[b] = 0
            }, f.fc * c)
        })
    }
    function m() {
        u = angular.copy(c.i().data.calculatedStorage);
        p && p.getSetting("disableAnimations") || (a.interpolateResources = !1,
        q = g(function() {
            a.interpolateResources = !0;
            q = null
        }));
        a.village = c.i();
        for (var b = 1; 4 >= b; b++) {
            a.interpolationThresholds[b] = Math.max(l, Math.abs(2 * Math.ceil(a.village.data.production[b] / 3600)))
        }
    }
    var l = 25;
    a.interpolationThresholds = {
        1: 25,
        2: 25,
        3: 25,
        4: 25
    };
    a.resNames = angular.copy(Resources.STRING);
    a.Math = Math;
    a.gameworld = Gameworld.get();
    a.STATUS_ENDED = Gameworld.STATUS_ENDED;
    var p = null
      , n = 0
      , q = null
      , r = null;
    a.interpolateResources = !1;
    a.showResourceBar = !1;
    b.m(function() {
        a.showResourceBar = !0;
        p = Settings.get(Travian.Player.data.playerId);
        n = p.subscribe(function() {
            a.interpolateResources = !p.getSetting("disableAnimations");
            !a.interpolateResources && q && (g.cancel(q),
            q = null)
        })
    });
    a.$on("logout", function() {
        a.showResourceBar = !1
    });
    a.village = c.i();
    var t = {};
    a.tmpResources = {
        1: !1,
        2: !1,
        3: !1,
        4: !1
    };
    var u = {
        1: 0,
        2: 0,
        3: 0,
        4: 0
    };
    a.$on("resourcesChanged", e);
    a.$on("activeVillageChanged", m);
    b.m(m);
    a.$on("freezeStockBar", function(b, c) {
        for (var f = c && c.resources || u || a.village.data.calculatedStorage, l = 1; 4 >= l; l++) {
            a.tmpResources[l] = Math.min(f[l] + (c && c.addResources[l] || 0), a.village.data.storageCapacity[l]),
            u[l] = a.tmpResources[l]
        }
        r && g.cancel(r);
        r = g(function() {
            for (var b = 1; 4 >= b; b++) {
                a.tmpResources[b] = !1
            }
            r = null;
            e(0, a.village.data.villageId, a.village.data.calculatedStorage)
        }, c && c.duration || 1E3);
        a.$$phase || a.$digest()
    });
    a.$on("$destroy", function() {
        for (var a in t) {
            t[a] && window.clearTimeout(t[a])
        }
        p && n && p.unsubscribe(n);
        r && g.cancel(r)
    })
}
;
window.resourcesCtrl.$inject = ["$scope", "VillageService", "SessionService", "AnimationService", "$timeout"];
window.screenFlashNotificationCtrl = function(a, c, b) {
    switch (a.windowParams.notificationType) {
    case "achievement":
        if (!a.windowParams.key) {
            return
        }
        if (a.windowParams.extraData) {
            a.windowParams.extraData = JSON.parse(a.windowParams.extraData);
            a.extraTranslationParams = "";
            for (var f in a.windowParams.extraData) {
                a.extraTranslationParams && (a.extraTranslationParams += ","),
                a.extraTranslationParams += f + ":" + a.windowParams.extraData[f]
            }
            a.windowParams.extraData.allianceName && (a.langKeySuffix = "_hasAlliance");
            a.windowParams.extraData.kingdomTag && (a.langKeySuffix = "_hasKingdom")
        }
        break;
    case "heroLevelUp":
        if (0 < Travian.Player.hasLimitation(PlayerPunishment.ACTION_LOCK)) {
            a.closeWindow("screenFlashNotification");
            return
        }
        a.hero = Hero.get(Travian.Player.data.playerId);
        c(function() {
            b.zb(".screenFlashNotificationWindow .levelStar", "#heroQuickInfo .levelStar", "movingStar symbol_star_small_illu", "body", 900, 300, "ease", function() {
                b.cc("#heroQuickInfo .levelStar", "levelUp", "symbol_star_small_illu");
                Travian.writeRequest("hero/confirmHeroLevelUp")
            })
        }, 1500);
        break;
    default:
        a.closeWindow("screenFlashNotification");
        return
    }
    var g = Travian.rootScope.$watch("windows", function() {
        Travian.rootScope.windows.questVictory && (a.closeWindow("screenFlashNotification"),
        b.showScreenFlashNotification(a.windowParams.notificationType, a.windowParams),
        g(),
        g = null)
    }, !0)
      , e = null
      , e = c(function() {
        a.fadeIn = !0;
        e = c(a.fadeOutAndClose, 3E3)
    }, 500);
    a.fadeOutAndClose = function() {
        a.fadeIn = !1;
        a.fadeOut = !0;
        e = c(function() {
            a.closeWindow("screenFlashNotification")
        }, 1500)
    }
    ;
    a.$on("$destroy", function() {
        e && c.cancel(e);
        g && g()
    })
}
;
window.screenFlashNotificationCtrl.$inject = ["$scope", "$timeout", "AnimationService"];
window.sendTroopsCtrl = function(a, c, b) {
    var f = 0
      , g = 0;
    a.w.windowName = "SendTroops";
    a.tabConfig.tabs = [];
    a.tabConfig.disableScrolling = !0;
    a.hoverOver = {};
    a.sendTabs = [];
    a.activeTab = 1;
    a.showMoreTabs = !0;
    var e = a.getParam("moveHomeType", !0, !0);
    if ("Call" == e || "Send" == e) {
        a.showMoreTabs = !1
    }
    a.selectTab = function(b) {
        for (var c = 0; c < a.sendTabs.length; c++) {
            a.sendTabs[c].tabNr == b && (a.activeTab = b,
            a.$broadcast("setVisibleTab", b))
        }
    }
    ;
    a.addTab = function() {
        f++;
        a.sendTabs.push({
            tabNr: f,
            tabName: "",
            preSelectionCallback: ba(null)
        });
        g = a.activeTab;
        a.activeTab = f
    }
    ;
    a.addTab();
    a.setTabName = function(b, c) {
        for (var e = 0; e < a.sendTabs.length; e++) {
            a.sendTabs[e].tabNr == b && (a.sendTabs[e].tabName = c)
        }
    }
    ;
    a.closeTab = function(c) {
        c || (c = a.activeTab);
        for (var e = 0; e < a.sendTabs.length; e++) {
            if (a.sendTabs[e].tabNr == c) {
                a.sendTabs.splice(e, 1);
                break
            }
        }
        e >= a.sendTabs.length && (e = a.sendTabs.length - 1);
        -1 >= e ? (a.l("x"),
        a.l("y"),
        c = a.getParam("backTo", !1, !0),
        null != c && b.Ef(c),
        a.closeWindow("sendTroops")) : a.selectTab(a.sendTabs[e].tabNr)
    }
    ;
    a.setPreSelectionCallbackForActiveTab = function(b) {
        for (var c = 0; c < a.sendTabs.length; c++) {
            if (a.sendTabs[c].tabNr == a.activeTab) {
                a.sendTabs[c].preSelectionCallback = b;
                break
            }
        }
    }
    ;
    a.getPreSelectionCallbackFromLastActiveTab = function() {
        for (var b = 0; b < a.sendTabs.length; b++) {
            if (a.sendTabs[b].tabNr == g) {
                return a.sendTabs[b].preSelectionCallback
            }
        }
    }
    ;
    a.villages = [];
    Travian.Player.data.hasNoobProtection || PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_ATTACK_TYPES);
    var h = c.W();
    a.subscribe(h, function() {
        a.villages.splice(0, a.villages.length);
        for (var b = 0; b < h.data.length; b++) {
            var c = h.data[b];
            a.villages.push({
                villageId: c.data.villageId,
                name: c.data.name
            })
        }
    })
}
;
window.sendTroopsCtrl.$inject = ["$scope", "VillageService", "RoutingService"];
window.sendTroopsTabCtrl = function(a, c, b, f, g, e) {
    function h() {
        for (var b in a.missionTypes) {
            var c = a.missionTypes[b].check();
            "disabledBySitter" == c || "disabledBySitterVsHuman" == c ? (a.missionTypes[b].disabledBySitter = c,
            a.missionTypes[b].state = "deactivated") : (a.missionTypes[b].disabledBySitter = !1,
            a.missionTypes[b].state = c)
        }
        c = !1;
        for (b = 0; b < a.missionTypes.length; b++) {
            if ("normal" == a.missionTypes[b].state) {
                c = !0;
                break
            }
        }
        if (c) {
            if (a.input.movementType) {
                for (b = 0; b < a.missionTypes.length; b++) {
                    if (a.missionTypes[b].id == a.input.movementType) {
                        if ("normal" == a.missionTypes[b].state) {
                            a.missionTypes[b].state = "selected";
                            a.setTabName(a.tab.tabNr, Travian.translate("RallyPoint.Troops.Movement_" + a.missionTypes[b].id));
                            break
                        }
                        a.input.movementType != a.missionTypes[b].fallback && (a.input.movementType = a.missionTypes[b].fallback,
                        a.checkTargetSend());
                        q();
                        break
                    }
                }
            } else {
                a.setTabName(a.tab.tabNr, Travian.translate("RallyPoint.Troops.ChooseMission"))
            }
        } else {
            a.input.movementType = null
        }
    }
    function m(a) {
        a = Troops.getCollection(Troops.COLLECTION_STATIONARY, a);
        for (var b = 0; b < a.data.length; b++) {
            var c = a.data[b];
            if (c.data.status == Troops.STATUS_HOME) {
                return c
            }
        }
        return null
    }
    function l(b) {
        a.activeVillage = b ? c.qa(b) : c.i();
        s = m(a.activeVillage.data.villageId);
        null == s ? window.setTimeout(l, 100) : (a.villageDropdown.selected = a.activeVillage.data.villageId,
        a.moveHomeId && (s = Troops.get(a.moveHomeId)),
        a.rallyPoint = f.va(a.activeVillage.data.villageId, Building.TYPE.RALLY_POINT),
        a.catapultNr = Troops.TYPE_CATAPULT + 10 * (a.troopDetails.tribeId - 1),
        a.subscribe(s, function() {
            var b = a.troopDetails.inputTroops;
            a.troopDetails = angular.copy(s.data);
            a.troopDetails.inputTroops = b;
            a.troopDetails.update = !0;
            b = s.nrToUnitId(s.getSpyId());
            a.spyName = Travian.translate("Troop_" + b);
            a.moveHomeId && p();
            q();
            for (var b = s.data, c = 0, e = 1; 11 >= e; e++) {
                var f = b.units[e];
                void 0 !== f && 0 < f ? (-1 == a.troopDetails.inputTroops[e] && (a.troopDetails.inputTroops[e] = 0),
                0 < a.troopDetails.inputTroops[e] && (a.troopDetails.inputTroops[e] = Math.min(a.troopDetails.inputTroops[e], f)),
                2 == a.step && (a.sendTroopsDetails.units[e] = Math.min(a.sendTroopsDetails.units[e], f),
                c += a.sendTroopsDetails.units[e])) : (a.troopDetails.inputTroops[e] = -1,
                2 == a.step && (a.sendTroopsDetails.units[e] = 0))
            }
            2 == a.step && 0 >= c && (a.step = 1);
            q()
        }),
        "undefined" != typeof a.villageSearch.result && a.checkTargetSend())
    }
    function p() {
        for (var b in a.troopDetails.units) {
            var c = a.troopDetails.units[b];
            0 < c && (a.troopDetails.inputTroops[b] = c)
        }
        b = {
            destVillageId: s.data.villageId,
            villageId: s.data.villageIdLocation,
            movementType: Troops.MOVEMENT_TYPE_RETURN,
            redeployHero: a.input.redeployHero,
            tribeId: s.data.tribeId
        };
        a.troopDetails.villageIdLocation == a.activeVillage.data.villageId && (b.destVillageId = a.troopDetails.villageId);
        e.Qc();
        Travian.request("troops/checkTarget", b, function(b) {
            "undefined" == typeof b.errors && (a.checkTargetResult = b,
            a.villageSearch.target = b,
            a.villageSearch.targetPlayer = Player.get(b.destPlayerId),
            0 > b.destPlayerId && (a.villageSearch.targetPlayer.data.playerId = b.destPlayerId),
            a.durations = b.durations,
            a.checkTroops())
        });
        q()
    }
    function n(b, c) {
        c ? (("undefined" == typeof a.troopDetails.units[b] || 0 >= parseInt(a.troopDetails.units[b])) && 0 < a.troopDetails.inputTroops[b] && (a.troopDetails.inputTroops[b] = -1,
        a.sendTypeClass = "disabled"),
        a.troopDetails.inputTroops[b] || (a.troopDetails.inputTroops[b] = a.troopDetails.units[b] ? 0 : -1),
        a.troopDetails.inputTroops[b] > a.troopDetails.units[b] && (a.sendTypeClass = "disabled")) : a.troopDetails.inputTroops[b] = -1
    }
    function q() {
        a.sendTypeClass = "";
        !1 == a.rallyPoint && (a.sendTypeClass = "disabled");
        var b = a.input.movementType;
        if (a.onlySpies || b == Troops.MOVEMENT_TYPE_SPY) {
            for (b = 1; 11 >= b; b++) {
                n(b, b == s.getSpyId())
            }
        } else {
            if (a.onlySettlers && b == Troops.MOVEMENT_TYPE_SETTLE) {
                for (b = 1; 11 >= b; b++) {
                    n(b, b == Troops.TYPE_SETTLER)
                }
            } else {
                for (b = 1; 11 >= b; b++) {
                    n(b, !0)
                }
            }
        }
    }
    function r() {
        var b = -1, c;
        for (c in a.troopDetails.inputTroops) {
            0 < a.troopDetails.inputTroops[c] && (a.totalTroopCount += parseInt(a.troopDetails.inputTroops[c]),
            b = -1 == b ? c : -2)
        }
        return b
    }
    function t(b) {
        var c = f.va(a.activeVillage.data.villageId, Building.TYPE.RALLY_POINT), e = 1, l;
        for (l in Building.CATAPULT_TARGETS) {
            c && c.data.lvl >= l && (e = l)
        }
        c = Building.CATAPULT_TARGETS[e];
        l = [];
        l.push({
            type: "",
            name: Travian.translate("Random"),
            key: 0
        });
        2 == b && l.push({
            type: "",
            name: Travian.translate("None"),
            key: Building.CATAPULT_TARGETS.NO_TARGET
        });
        if ("undefined" !== typeof c.RESOURCES) {
            for (l.push({
                type: "group",
                name: Travian.translate("Resources"),
                key: ""
            }),
            b = 0; b < c.RESOURCES.length; b++) {
                l.push({
                    type: "member",
                    name: Travian.translate("Building_" + c.RESOURCES[b]),
                    key: c.RESOURCES[b]
                })
            }
        }
        if ("undefined" !== typeof c.INFRASTRUCTURE) {
            l.push({
                type: "group",
                name: Travian.translate("Infrastructure"),
                key: ""
            });
            for (b = 0; b < c.INFRASTRUCTURE.length; b++) {
                a.isWorldWonderVillage && c.INFRASTRUCTURE[b] == Building.TYPE.TREASURY || (a.isWorldWonderVillage || c.INFRASTRUCTURE[b] != Building.TYPE.GREAT_WAREHOUSE && c.INFRASTRUCTURE[b] != Building.TYPE.GREAT_GRANARY) && l.push({
                    type: "member",
                    name: Travian.translate("Building_" + c.INFRASTRUCTURE[b]),
                    key: c.INFRASTRUCTURE[b]
                })
            }
            !0 == a.isWorldWonderVillage && 10 <= e && l.push({
                type: "member",
                name: Travian.translate("Building_" + Building.TYPE.WONDER_OF_WORLD),
                key: Building.TYPE.WONDER_OF_WORLD
            });
            if (c.hasOwnProperty("TRIBE_SPECIFIC") && c.TRIBE_SPECIFIC.hasOwnProperty(a.villageTribe)) {
                for (b = 0; b < c.TRIBE_SPECIFIC[a.villageTribe].length; b++) {
                    l.push({
                        type: "member",
                        name: Travian.translate("Building_" + c.TRIBE_SPECIFIC[a.villageTribe][b]),
                        key: c.TRIBE_SPECIFIC[a.villageTribe][b]
                    })
                }
            }
        }
        if ("undefined" !== typeof c.MILITARY) {
            for (l.push({
                type: "group",
                name: Travian.translate("Military"),
                key: ""
            }),
            b = 0; b < c.MILITARY.length; b++) {
                (null == a.villageSearch.target || (a.villageSearch.target.villageType == Village.TYPE_TOWN || a.villageSearch.target.villageType == Village.TYPE_MAIN_TOWN) || c.MILITARY[b] != Building.TYPE.GREAT_BARRACKS && c.MILITARY[b] != Building.TYPE.GREAT_STABLE) && l.push({
                    type: "member",
                    name: Travian.translate("Building_" + c.MILITARY[b]),
                    key: c.MILITARY[b]
                })
            }
        }
        return l
    }
    a.activeVillage = c.i();
    a.player = b.p();
    a.Troops = Troops;
    a.step = 1;
    var u = !1
      , w = !1;
    a.villageSearch = {
        target: null,
        targetPlayer: null
    };
    a.input = {
        movementType: null,
        redeployHero: !1
    };
    a.warningMsg = null;
    a.showDuration = !1;
    a.troopDetails = {
        inputTroops: {}
    };
    a.totalTroopCount = 0;
    a.durations = {};
    a.duration = 0;
    a.spyName = Travian.translate("Troop_4");
    a.moveHomeId = a.getParam("troopId", !1, !0);
    a.moveHomeType = a.getParam("moveHomeType", !1, !0);
    a.isGovernorNPCVillage = !1;
    a.isWorldWonderVillage = !1;
    a.villageTribe = 0;
    a.missionTypes = {};
    a.movementTypeSettle = Troops.MOVEMENT_TYPE_SETTLE;
    a.onlySpies = !1;
    a.onlySettlers = !1;
    a.numCatapults = 0;
    a.catapultNr = Troops.TYPE_CATAPULT;
    a.catapultTargets1 = {
        selected: 0,
        selectBy: "option.key",
        options: t(1)
    };
    a.catapultTargets2 = {
        selected: -1,
        selectBy: "option.key",
        options: t(2)
    };
    a.spyTarget = {
        selected: 0,
        selectedBy: "option.key",
        options: [{
            type: "",
            name: Travian.translate("RallyPoint.SendTroops.SpyOption_1"),
            value: "resources",
            key: 0
        }, {
            type: "",
            name: Travian.translate("RallyPoint.SendTroops.SpyOption_2"),
            value: "defence",
            key: 1
        }]
    };
    b.m(function() {
        a.isSitter = b.K();
        a.canRaid = b.hasRight(Session.RIGHT_SEND_RAIDS);
        a.canSupport = b.hasRight(Session.RIGHT_SEND_SUPPORT);
        h()
    });
    var s = {};
    a.missionTypes = [{
        id: Troops.MOVEMENT_TYPE_SUPPORT,
        name: "Support",
        check: function() {
            return a.canSupport || null == a.villageSearch.targetPlayer || a.villageSearch.targetPlayer.data.playerId == a.player.data.playerId ? "normal" : "disabledBySitter"
        },
        fallback: null
    }, {
        id: Troops.MOVEMENT_TYPE_ATTACK,
        name: "Attack",
        check: function() {
            return a.onlySettlers || a.onlySpies || a.isGovernorNPCVillage ? "deactivated" : a.isSitter ? null != a.villageSearch.targetPlayer && Player.isNPC(a.villageSearch.targetPlayer.data.playerId) ? "normal" : "disabledBySitterVsHuman" : "normal"
        },
        fallback: Troops.MOVEMENT_TYPE_RAID
    }, {
        id: Troops.MOVEMENT_TYPE_RAID,
        name: "Raid",
        check: function() {
            return a.onlySettlers || a.onlySpies || a.isGovernorNPCVillage ? "deactivated" : a.canRaid ? "normal" : null != a.villageSearch.targetPlayer && Player.isNPC(a.villageSearch.targetPlayer.data.playerId) ? "normal" : "disabledBySitterVsHuman"
        },
        fallback: Troops.MOVEMENT_TYPE_SUPPORT
    }, {
        id: Troops.MOVEMENT_TYPE_SPY,
        name: "Spy",
        check: function() {
            return a.onlySettlers || a.isGovernorNPCVillage ? "deactivated" : a.onlySpies ? "normal" : "deactivated"
        },
        fallback: Troops.MOVEMENT_TYPE_SUPPORT
    }, {
        id: Troops.MOVEMENT_TYPE_SIEGE,
        name: "Siege",
        check: function() {
            return !a.onlySettlers || null != a.villageSearch.targetPlayer && a.villageSearch.targetPlayer.data.tribeId !== Player.TRIBE.NONE ? a.isSitter ? null != a.villageSearch.targetPlayer && Player.isNPC(a.villageSearch.targetPlayer.data.playerId) ? 1E3 <= a.totalTroopCount && 0 < a.troopDetails.inputTroops[7] ? "normal" : "deactivated" : "disabledBySitterVsHuman" : 1E3 <= a.totalTroopCount && 0 < a.troopDetails.inputTroops[7] ? "normal" : "deactivated" : "hidden"
        },
        fallback: Troops.MOVEMENT_TYPE_ATTACK
    }, {
        id: Troops.MOVEMENT_TYPE_SETTLE,
        name: "Settle",
        check: function() {
            return !a.onlySettlers || null != a.villageSearch.targetPlayer && a.villageSearch.targetPlayer.data.tribeId !== Player.TRIBE.NONE ? "hidden" : "normal"
        },
        fallback: Troops.MOVEMENT_TYPE_SUPPORT
    }];
    var x = a.$watch("step", function() {
        1 == a.step && (a.moveHomeId ? (a.currentPage = "tpl/sendTroops/SendTroopsHome.html",
        a.troopDetails.autofocus = !0,
        a.input.movementType = Troops.MOVEMENT_TYPE_SUPPORT) : a.currentPage = "tpl/sendTroops/SendTroopsSelect.html");
        2 == a.step && (a.currentPage = "tpl/sendTroops/SendTroopsConfirm.html");
        var b = a.villageSearch.target;
        null != b && (b = id2xy(b.villageId),
        a.villageSearch.x = b.x,
        a.villageSearch.y = b.y);
        a.$broadcast("scrollbarApi", "checkLazyRenderer")
    });
    a.$on("$destroy", function() {
        x();
        a.l("troopId");
        a.l("moveHomeType")
    });
    a.villageDropdown = {
        selected: null,
        options: a.villages,
        selectBy: "option.villageId",
        callback: l,
        orderBy: "name"
    };
    l();
    a.selectMovementType = function(b) {
        var c = !1;
        a.input.movementType != b && (c = !0,
        a.input.movementType = b);
        c && (a.error = "",
        a.checkTargetSend(),
        a.l("type"),
        h())
    }
    ;
    a.getReturnTroopDuration = function() {
        if (null != a.durations && "undefined" != typeof a.durations[1]) {
            var b = 0
              , c = 0;
            0 < a.troopDetails.inputTroops[11] && (c = 100);
            a.showDuration = !1;
            for (var e in a.troopDetails.inputTroops) {
                if (0 < parseInt(a.troopDetails.inputTroops[e])) {
                    a.showDuration = !0;
                    var f = a.durations[parseInt(e) + c];
                    f > b && (b = f)
                }
            }
            a.duration = b;
            a.villageSearch.target && (a.villageSearch.target.duration = b)
        }
    }
    ;
    a.checkTroops = function() {
        a.totalTroopCount = 0;
        var b = r();
        s && (a.onlySpies = !1,
        b == s.getSpyId() && (!a.onlySpies && ra(Troops.MOVEMENT_TYPES_ATTACK, a.input.movementType) && (a.input.movementType = Troops.MOVEMENT_TYPE_SPY,
        a.checkTargetSend()),
        a.onlySpies = !0),
        b == Troops.TYPE_SETTLER ? (a.onlySettlers || a.checkTargetSend(),
        a.onlySettlers = !0) : (a.onlySettlers && (a.input.movementType = Troops.MOVEMENT_TYPE_SUPPORT,
        a.checkTargetSend()),
        a.onlySettlers = !1),
        a.onlyHero = b == Troops.TYPE_HERO);
        h();
        a.getReturnTroopDuration();
        var c = !0
          , e = a.villageSearch.target;
        null === e || !Village.isWWVillage(e.villageType) || a.input.movementType != Troops.MOVEMENT_TYPE_ATTACK && a.input.movementType != Troops.MOVEMENT_TYPE_RAID && a.input.movementType != Troops.MOVEMENT_TYPE_SIEGE || Player.isNPC(e.destPlayerId) || a.totalTroopCount < Travian.Config.worldWonderMinAttackUnits && (c = !1);
        c || (a.error = "Error.WorldWonderMinimumUnitsRequired",
        a.errorParams = "units:" + Travian.Config.worldWonderMinAttackUnits);
        return b
    }
    ;
    a.checkTargetSend = function(b) {
        var c = a.villageSearch.getVillageId();
        if (0 != c || "undefined" != typeof a.villageSearch.result && "" != a.villageSearch.result.villageSearched) {
            for (var e in a.troopDetails.inputTroops) {
                var f = parseInt(e);
                if (0 < a.troopDetails.inputTroops[f]) {
                    if ("undefined" === typeof s.data.units[f]) {
                        a.troopDetails.inputTroops[f] = -1;
                        l();
                        return
                    }
                    parseInt(s.data.units[f], 10) < parseInt(a.troopDetails.inputTroops[f], 10) && (a.troopDetails.inputTroops[f] = s.data.units[f])
                }
            }
            w ? w = !1 : a.error = "";
            f = {};
            for (e in a.troopDetails.inputTroops) {
                f[e] = Math.max(0, a.troopDetails.inputTroops[e])
            }
            e = {
                destVillageName: a.villageSearch.result.villageSearched,
                destVillageId: c,
                villageId: a.activeVillage.data.villageId,
                movementType: a.input.movementType || Troops.MOVEMENT_TYPE_SUPPORT,
                redeployHero: a.input.redeployHero,
                selectedUnits: f
            };
            if (e.villageId) {
                if (f = g.pf(),
                a.maxPerTargetAlmostReached = !1,
                f.sum >= Travian.Config.movementLimitations.maxTotal) {
                    a.error = "Error.MaxMovementsReached",
                    a.errorParams = {
                        maxTotal: Travian.Config.movementLimitations.maxTotal
                    }
                } else {
                    if (0 <= Travian.Config.movementLimitations.maxPerTargetTypes.indexOf(e.movementType)) {
                        if (f[c] == Travian.Config.movementLimitations.maxPerTarget - 1) {
                            a.maxPerTargetAlmostReached = !0
                        } else {
                            if (f[c] >= Travian.Config.movementLimitations.maxPerTarget) {
                                a.error = "Error.MaxMovementsPerTargetReached";
                                a.errorParams = {
                                    maxPerTarget: Travian.Config.movementLimitations.maxPerTarget
                                };
                                return
                            }
                        }
                    }
                    Travian.request("troops/checkTarget", e, function(c) {
                        if ("undefined" != typeof c.errors) {
                            a.error = "Error." + c.errors[0].message,
                            a.errorParams = JSON.stringify(c.errors[0].params).replace(/[\{\}"]/g, ""),
                            delete c.errors
                        } else {
                            c.villageType == Village.TYPE_ROBBER_VILLAGE && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_ROBBERS + "_" + PlayerProgressTrigger.HELP_PAGE_ROBBER_HIDEOUTS);
                            var e = id2xy(c.villageId);
                            a.checkTargetResult = c;
                            a.villageSearch.setData(c.villageName, e.x, e.y);
                            a.villageSearch.target = c;
                            a.villageSearch.targetPlayer = Player.get(c.destPlayerId);
                            0 > c.destPlayerId && (a.villageSearch.targetPlayer.data.playerId = c.destPlayerId);
                            a.input.movementType == Troops.MOVEMENT_TYPE_SETTLE && (a.settleCoordinates = e);
                            a.isOasis = c.isOasis;
                            a.isGovernorNPCVillage = c.isGovernorNPCVillage;
                            a.isRobberVillage = c.isRobberVillage;
                            a.isWorldWonderVillage = c.isWorldWonderVillage;
                            a.villageTribe = c.villageTribe;
                            a.warningMsg = c.warning;
                            a.durations = c.durations;
                            a.checkTroops();
                            a.numCatapults = 0;
                            for (var f in a.troopDetails.inputTroops) {
                                var l = parseInt(f);
                                c = Math.max(0, parseInt(a.troopDetails.inputTroops[f]));
                                l == Troops.TYPE_CATAPULT && (a.numCatapults = c)
                            }
                            a.arrivalTime = a.currentServerTime + a.duration;
                            if (!0 == b) {
                                if (0 < a.totalTroopCount) {
                                    a.sendTroopsDetails = {
                                        status: "send",
                                        units: {},
                                        playerId: a.troopDetails.playerId,
                                        tribeId: a.troopDetails.tribeId
                                    };
                                    for (l in a.troopDetails.inputTroops) {
                                        a.sendTroopsDetails.units[l] = Math.max(0, a.troopDetails.inputTroops[l])
                                    }
                                    a.step = 2
                                } else {
                                    a.error = "Error.NotEnoughUnits"
                                }
                            }
                            a.catapultTargets1.options = t(1);
                            a.catapultTargets2.options = t(2);
                            h()
                        }
                    })
                }
            }
        } else {
            a.villageSearch.target = null
        }
    }
    ;
    a.$on("heroItemUsed", function() {
        a.checkTargetSend()
    });
    a.sendTroopsConfirm = function() {
        function b() {
            u = !0;
            var e = !1;
            1 < a.sendTabs.length && (a.closeTab(a.tabNr),
            e = !0);
            Travian.request("troops/send", c, function(b) {
                "undefined" != typeof b && ("undefined" == typeof b.errors ? e || a.closeTab(a.tabNr) : (u = !1,
                a.error = "Error." + b.errors[0].message,
                a.errorParams = b.errors[0].params,
                w = !0,
                delete b.errors,
                a.step = 1))
            })
        }
        var c = {
            destVillageId: a.villageSearch.target.villageId,
            villageId: a.activeVillage.data.villageId,
            movementType: a.input.movementType,
            redeployHero: a.input.redeployHero
        }, e = {}, l;
        for (l in a.troopDetails.inputTroops) {
            e[l] = Math.max(0, a.troopDetails.inputTroops[l])
        }
        c.units = e;
        c.spyMission = a.spyTarget.options[a.spyTarget.selected].value;
        0 < a.numCatapults && (a.input.movementType == Troops.MOVEMENT_TYPE_ATTACK || a.input.movementType == Troops.MOVEMENT_TYPE_SIEGE) && (l = a.catapultTargets1.selected,
        0 == l && (l = Building.CATAPULT_TARGETS[1].RANDOM_TARGET),
        e = [],
        e.push(l),
        a.rallyPoint.data.lvl == Building.MAX_LEVEL && (l = a.catapultTargets2.selected,
        l != Building.CATAPULT_TARGETS.NO_TARGET && (0 == l && (l = Building.CATAPULT_TARGETS[1].RANDOM_TARGET),
        e.push(l))),
        c.catapultTargets = e);
        if (!u) {
            if (c.movementType == Troops.MOVEMENT_TYPE_SETTLE && Travian.Player.data.hasNoobProtection) {
                var h = MapDetails.get(c.destVillageId)
                  , m = h.subscribe(function() {
                    f.Gb(Village.getNewVillagePopulation(h.data.resType), b);
                    setTimeout(function() {
                        h.unsubscribe(m)
                    })
                })
            } else {
                b()
            }
        }
    }
    ;
    a.goBack = function() {
        a.step = 1
    }
    ;
    a.moveTroopsHome = function() {
        var b = {
            troopId: a.troopDetails.troopId
        }, c = {}, e;
        for (e in a.troopDetails.inputTroops) {
            c[e] = Math.max(0, a.troopDetails.inputTroops[e])
        }
        b.units = c;
        Travian.writeRequest("troops/moveTroopsHome", b, function() {
            a.closeTab(a.tabNr);
            var b = a.getParam("sendTroopsCallback", !0, !0);
            "function" === typeof b && b()
        })
    }
    ;
    a.showRedeployHero = function() {
        return null != a.villageSearch.targetPlayer && a.villageSearch.targetPlayer.data.playerId == a.player.data.playerId && a.input.movementType == Troops.MOVEMENT_TYPE_SUPPORT && 1 == a.troopDetails.inputTroops[11] ? !0 : a.input.redeployHero = !1
    }
    ;
    a.villageSearch.x = a.getParam("x", !1, !0);
    a.villageSearch.y = a.getParam("y", !1, !0);
    a.villageSearch.x && a.villageSearch.y && (a.troopDetails.autofocus = !0);
    var v = !1;
    a.preselectAndCheckTarget = function() {
        var b = a.getParam("type", !1, !0);
        null != b && "undefined" != typeof b && (a.input.movementType = b);
        b = a.getParam("preselect", !1, !0);
        if (null != b && "undefined" != typeof b) {
            for (var c in a.troopDetails.units) {
                if ("undefined" != typeof b[c]) {
                    var e = b[c];
                    e > parseInt(a.troopDetails.units[c]) && (e = parseInt(a.troopDetails.units[c]));
                    a.troopDetails.inputTroops[c] = e
                }
            }
            r() == Troops.TYPE_HERO && 5 == a.input.movementType && (a.input.redeployHero = !0);
            ((c = a.getParam("onlySelect", !1, !0)) || v) && a.checkTroops();
            c || v || (a.checkTargetSend(!0),
            v = !0);
            a.l("preselect")
        }
        a.checkTroops();
        v || a.checkTargetSend(!1)
    }
    ;
    (function() {
        var b = a.$parent.getPreSelectionCallbackFromLastActiveTab()();
        null != b && (void 0 !== b.targetVillage && void 0 !== b.targetVillage.targetPlayer && (a.villageSearch = angular.copy(b.targetVillage)),
        void 0 !== b.startVillageId && l(b.startVillageId),
        a.selectMovementType(b.type))
    }
    )();
    (function() {
        a.$parent.setPreSelectionCallbackForActiveTab(function() {
            return {
                type: a.input.movementType,
                targetVillage: a.villageSearch,
                startVillageId: a.villageDropdown.selected
            }
        })
    }
    )();
    var D = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
    a.subscribe(D, function() {
        for (var b = 0; b < D.data.length; b++) {
            if (D.data[b].data.reservationTime) {
                a.pendingRelocation = !0;
                break
            }
        }
    })
}
;
window.sendTroopsTabCtrl.$inject = "$scope VillageService SessionService BuildingService TroopsService SocketService".split(" ");
window.systemMessageCtrl = function(a) {
    a.w.contentHeaderTemplate = "tpl/systemMessage/header.html";
    Travian.request("player/getSystemMessage", {
        type: a.getParam("type")
    }, function(c) {
        a.w.windowName = c.title;
        a.systemMessage = c.text;
        a.time = c.time
    })
}
;
window.systemMessageCtrl.$inject = ["$scope"];
window.tribeSelectionCtrl = function(a, c, b, f) {
    function g() {}
    function e() {
        var c = ".tribeSelection .tribeCarousel .tribeImage." + Player.TRIBE_NAME[a.selectedTribeId];
        g();
        g = b.cc(c, "selectAnimation", !1, !1, function(a) {
            return 0 == a ? -1 : 5E3 + Math.floor(1E4 * Math.random())
        }, !0, !0, !0);
        !1 === g && (g = y(),
        h = f(e, 100))
    }
    a.TRIBE_NAME = Player.TRIBE_NAME;
    a.selectedTribeId = Player.TRIBE.GAUL;
    a.carouselMoveClass = "moveDirectionTo";
    var h = null;
    a.moveCarousel = function(b) {
        b ? (a.carouselMoveClass = "moveDirectionTo",
        a.selectedTribeId = ++a.selectedTribeId > Player.TRIBE.GAUL ? Player.TRIBE.ROMAN : a.selectedTribeId) : (a.carouselMoveClass = "moveDirectionFrom",
        a.selectedTribeId = --a.selectedTribeId < Player.TRIBE.ROMAN ? Player.TRIBE.GAUL : a.selectedTribeId);
        e()
    }
    ;
    a.selectTribe = function() {
        Travian.writeRequest("player/chooseTribe", {
            tribeId: a.selectedTribeId
        }, function() {
            a.closeWindow("tribeSelection")
        })
    }
    ;
    a.backToLobby = function() {
        c.Wa()
    }
    ;
    c.m(function() {
        0 < Travian.Player.data.tribeId && a.closeWindow("tribeSelection");
        h = f(function() {
            e()
        }, 2E3)
    });
    a.$on("urlChanged", function() {
        c.xj()
    });
    a.$on("$destroy", function() {
        h && f.cancel(h);
        g()
    })
}
;
window.tribeSelectionCtrl.$inject = ["$scope", "SessionService", "AnimationService", "$timeout"];
window.welcomePackageCtrl = function(a, c) {
    a.close = function() {
        a.closeWindow("welcomePackage");
        Travian.writeRequest("player/deleteNotification", {
            type: Notifications.COOP_PACKAGE_GRANTED,
            notificationType: Notifications.TYPE_TIMED
        })
    }
    ;
    c.m(function() {
        c.getPlayerId();
        a.notifications = Notifications.getCollection(Notifications.TYPE_TIMED);
        a.notifications.subscribe(function() {
            for (var b = 0; b < a.notifications.data.length; b++) {
                a.notifications.data[b].data.type == Notifications.COOP_PACKAGE_GRANTED && (a.packageInfo = a.notifications.data[b].data.itemId)
            }
        })
    })
}
;
window.welcomePackageCtrl.$inject = ["$scope", "SessionService"];
window.welcomeScreenCtrl = function(a, c, b, f, g, e) {
    function h(a) {
        b.o("villId", a);
        a != f.getActiveVillageId() && f.ea(a)
    }
    function m(a) {
        for (var b = Object.keys(a), c = "", e = 0; e < b.length; e++) {
            switch (b[e]) {
            case "buildingType":
                c += b[e] + ":" + Travian.translate("Building_" + a[b[e]]) + ",";
                break;
            case "unitId":
                c += b[e] + ":" + Travian.translate("Troop_" + a[b[e]]) + ",";
                break;
            default:
                c += b[e] + ":" + a[b[e]] + ","
            }
        }
        return c
    }
    function l(a, b) {
        return a.unitId > b.unitId ? -1 : a.unitId < b.unitId ? 1 : 0
    }
    function p(a, b) {
        return a.timestamp > b.timestamp ? -1 : a.timestamp < b.timestamp ? 1 : 0
    }
    if (Travian.Player.filled) {
        var n = null;
        c = Travian.Player.data;
        Settings.get(c.playerId).data.enableWelcomeScreen || Travian.rootScope.closeWindow("welcomeScreen");
        a.w.windowName = "WelcomeScreen.Title";
        a.w.windowNameData = "playerName:" + c.name;
        var q = {
            TYPE_ALL: "0",
            TYPE_HERO_LEVEL_UP: "1",
            TYPE_FOUND_NEW_VILLAGE: "2",
            TYPE_CELEBRATION_COMPLETED: "3",
            TYPE_BUILDING_UPGRADE: "4",
            TYPE_RESEARCH_COMPLETED: "5",
            TYPE_UNITS_TRAINED: "6",
            TYPE_BEGINNERS_PROTECTIONS_ENDED: "7",
            TYPE_AUCTION_WON: "8",
            TYPE_TROOPS_STARVED: "9",
            TYPE_KING_ABDICATED: "10",
            TYPE_NEW_GOVERNOR: "11",
            TYPE_DUKE_SLOT_UNLOCKED: "12",
            TYPE_WON_TREASURES: "13",
            TYPE_LOST_TREASURES: "14",
            TYPE_WW_UNLOCKED: "15",
            TYPE_WW_MILESTONE: "16",
            TYPE_WW_CONQUERED: "17",
            TYPE_TIER_2_ITEMS: "18",
            TYPE_TIER_3_ITEMS: "19",
            TYPE_KINGDOM_UNION_AVAILABLE: "20",
            TYPE_KINGDOM_UNION_SUCCESSFUL: "21",
            TYPE_UNITS_HEALED: "22"
        };
        a.ACTIVITY_STREAM_TYPES = q;
        a.activityStream = {
            data: {},
            imageMap: {
                1: "report_favorite_small_flat_black",
                2: "movement_settle_small_flat_black",
                3: "unit_culturePoint_small_flat_black",
                4: "welcomescreen_buildingUpgrade_small_flat_black",
                5: "building_g22_small_flat_black",
                6: "building_g19_small_flat_black",
                7: "welcomeScreen_beginnersProtectionEnded_small_flat_black",
                8: "feature_auction_small_flat_black",
                9: "notification_starvation_medium_flat_black",
                10: "welcomeScreen_kingAbdicated_small_flat_black",
                11: "community_governor_small_flat_black",
                12: "community_duke_small_flat_black",
                13: "unit_treasure_small_flat_black",
                14: "unit_treasure_small_flat_black",
                15: "welcomeScreen_worldWonder_small_flat_black",
                16: "welcomeScreen_worldWonder_small_flat_black",
                17: "welcomeScreen_worldWonder_small_flat_black",
                18: "welcomeScreen_newItemAvailable_small_flat_black",
                19: "welcomeScreen_newItemAvailable_small_flat_black",
                20: "welcomeScreen_kingdomUnion_small_flat_black",
                21: "welcomeScreen_kingdomUnion_small_flat_black",
                22: "building_g46_small_flat_black"
            }
        };
        a.clickHandler = function(c) {
            switch (c.stream.activityId) {
            case q.TYPE_HERO_LEVEL_UP:
                a.openWindow("hero", {
                    herotab: "Attributes"
                });
                break;
            case q.TYPE_FOUND_NEW_VILLAGE:
                h(c.stream.villageId);
                break;
            case q.TYPE_CELEBRATION_COMPLETED:
                h(c.stream.villageId);
                c = e.va(c.stream.villageId, Building.TYPE.TOWN_HALL);
                a.openWindow("building", {
                    location: c.data.locationId
                });
                break;
            case q.TYPE_BEGINNERS_PROTECTIONS_ENDED:
                g.xa("help") ? b.o("pageId", "Village_ProtectingYourself") : a.openWindow("help", {
                    pageId: "Village_ProtectingYourself"
                });
                break;
            case q.TYPE_AUCTION_WON:
                a.openWindow("hero", {
                    herotab: "Auctions",
                    subtab: "Bids"
                });
                break;
            case q.TYPE_TROOPS_STARVED:
                h(c.stream.villageId);
                break;
            case q.TYPE_KING_ABDICATED:
                a.openWindow("profile", {
                    playerId: c.stream.playerId,
                    profileTab: "playerProfile"
                });
                break;
            case q.TYPE_NEW_GOVERNOR:
                1 == c.stream.subStreams.length ? a.openWindow("profile", {
                    playerId: c.stream.subStreams[0].playerId,
                    profileTab: "playerProfile"
                }) : ("undefined" !== typeof c.subStream && "undefined" !== typeof c.subStream.playerId && a.openWindow("profile", {
                    playerId: c.subStream.playerId,
                    profileTab: "playerProfile"
                }),
                c.showSubStream = !c.showSubStream);
                break;
            case q.TYPE_DUKE_SLOT_UNLOCKED:
                a.openWindow("society", {
                    subtab: "Profile",
                    tab: "Kingdom"
                });
                break;
            case q.TYPE_WON_TREASURES:
                ;
            case q.TYPE_LOST_TREASURES:
                a.openPage("map", "centerId", c.stream.mapCellId + "_" + (new Date).getTime());
                break;
            case q.TYPE_WW_UNLOCKED:
                g.xa("help") ? b.o("pageId", "MilitaryAndDiplomacy_WonderOfTheWorld") : a.openWindow("help", {
                    pageId: "MilitaryAndDiplomacy_WonderOfTheWorld"
                });
                break;
            case q.TYPE_WW_MILESTONE:
                ;
            case q.TYPE_WW_CONQUERED:
                a.openWindow("statistics", {
                    tab: "WorldWonder"
                });
                break;
            case q.TYPE_TIER_2_ITEMS:
                ;
            case q.TYPE_TIER_3_ITEMS:
                a.openWindow("hero", {
                    herotab: "Inventory"
                });
                break;
            case q.TYPE_KINGDOM_UNION_AVAILABLE:
                a.openWindow("help", {
                    pageId: "Kingdom_Unions"
                });
                break;
            case q.TYPE_KINGDOM_UNION_SUCCESSFUL:
                0 < Travian.Player.data.kingdomId ? a.openWindow("kingdomUnionSuccess") : a.openWindow("help", {
                    pageId: "Kingdom_Unions"
                });
                break;
            default:
                c.showSubStream = !c.showSubStream
            }
        }
        ;
        Travian.request("player/getActivityStreams", {}, function(b) {
            var c = [], e;
            for (e in b) {
                var f = b[e];
                f.activityId = e;
                f.translateData = m(f);
                if (f.subStreams) {
                    for (var h = 0; h < f.subStreams.length; h++) {
                        f.subStreams[h].activityId = e,
                        f.subStreams[h].translateData = m(f.subStreams[h])
                    }
                    switch (e) {
                    case q.TYPE_UNITS_TRAINED:
                        ;
                    case q.TYPE_UNITS_HEALED:
                        f.subStreams.sort(l);
                        c.push(f);
                        break;
                    case q.TYPE_TROOPS_STARVED:
                        ;
                    case q.TYPE_WON_TREASURES:
                        ;
                    case q.TYPE_LOST_TREASURES:
                        for (h = 0; h < f.subStreams.length; h++) {
                            c.push(f.subStreams[h])
                        }
                        break;
                    case q.TYPE_WW_MILESTONE:
                        for (h = 0; h < f.subStreams.length; h++) {
                            var g = f.subStreams[h];
                            g.name = g.kingdomTag;
                            0 >= g.kingdomId && (g.name = g.playerName);
                            g.translateData = m(g);
                            c.push(g)
                        }
                        break;
                    case q.TYPE_WW_CONQUERED:
                        for (h = 0; h < f.subStreams.length; h++) {
                            g = f.subStreams[h],
                            g.defName = g.defKingdomTag,
                            g.offName = g.offKingdomTag,
                            0 >= g.defKingdomId && (g.defName = g.defPlayerName),
                            0 >= g.offKingdomId && (g.offName = g.offPlayerName),
                            g.translateData = m(g),
                            c.push(g)
                        }
                        break;
                    default:
                        f.subStreams.sort(p),
                        c.push(f)
                    }
                } else {
                    f.activityId = e,
                    c.push(f)
                }
            }
            c.sort(p);
            a.activityStream.data = c
        });
        a.ownKingdom = Travian.Player.data.kingdomId;
        Player.fetchPrestige(c.playerId, function(b) {
            a.currentPrestigeRank = 0;
            for (var c = Object.keys(Travian.Config.prestige), e = 0; e < c.length; e++) {
                if (b >= parseInt(c[e], 10)) {
                    a.currentPrestigeRank++
                } else {
                    break
                }
            }
            a.currentPrestigeRank < c.length ? (e = 0,
            a.currentPrestigeRank && (e = parseInt(c[a.currentPrestigeRank - 1], 10)),
            a.prestigeRankPerc = 100 * (b - e) / (parseInt(c[a.currentPrestigeRank], 10) - e)) : (a.prestigeRankPerc = 100,
            a.maxPrestige = !0)
        });
        var r = Hero.get(c.playerId)
          , t = CardgameRolls.get(c.playerId);
        a.AdventurePoints = r.data.adventurePoints;
        a.RobberCampsAmount = 0;
        a.cardGameRolls = 0;
        a.CompletedPrestigeTasks = 0;
        a.TotalPrestigeTasks = 0;
        a.kingdomRanking = "-";
        n = t.subscribe(function() {
            a.cardGameRollsSum = t.data.freeRolls
        });
        Travian.request("player/getPrestigeConditions", {}, function(b) {
            for (var c = 0; c < b.conditions.length; c++) {
                1 == b.conditions[c].fulfilled && a.CompletedPrestigeTasks++
            }
            a.TotalPrestigeTasks = b.conditions.length
        });
        Travian.request("player/getRobberVillagesAmount", {
            kingdomId: c.kingdomId
        }, function(b) {
            a.RobberCampsAmount = parseInt(b.data, 10)
        });
        0 < c.kingdomId && Travian.request("ranking/getKingdomStats", {
            kingdomId: c.kingdomId
        }, function(b) {
            !1 !== b.rank && 0 <= b.rank && (a.kingdomRanking = parseInt(b.rank, 10) + 1)
        });
        a.$on("$destroy", function() {
            null != n && t.unsubscribe(n);
            Travian.writeRequest("player/resetActivityStream", {})
        })
    } else {
        c.m(function() {
            Travian.rootScope.openWindow("welcomeScreen", null, null, !0)
        }),
        Travian.rootScope.closeWindow("welcomeScreen")
    }
}
;
window.welcomeScreenCtrl.$inject = "$scope SessionService RoutingService VillageService WindowService BuildingService $timeout".split(" ");
window.activationCtrl = function(a) {
    a.w.windowName = "Activation";
    a.activationIframe = mellon.getActivationIframe()
}
;
window.activationCtrl.$inject = ["$scope", "RoutingService", "SessionService"];
window.activationNeededCtrl = function(a, c, b, f) {
    if ("undefined" == typeof a.tabConfig || 0 == a.tabConfig.tabs.length) {
        a.w.windowName = "ActivationNeeded"
    }
    a.openActivation = function() {
        var a = f.wa().getActivation();
        f.Fa(a).open()
    }
}
;
window.activationNeededCtrl.$inject = ["$scope", "RoutingService", "SessionService", "MellonService"];
window.buildingIndexCtrl = function(a, c, b, f) {
    function g(b) {
        a.building = b;
        a.w.building = a.building
    }
    function e() {
        0 < n ? c.S("type" + n, h) : c.S(a.locationId, h)
    }
    function h(b) {
        null == b ? a.closeWindow("building") : (g(b),
        l = b.isRubble(),
        a.locationId = b.data.locationId,
        a.subscribe(b, m))
    }
    function m() {
        var b = a.building;
        if (l && !b.isRubble()) {
            l = !1,
            a.closeWindow("building")
        } else {
            b.data.buildingType == Building.TYPE.CRANNY && b.calculateEffect();
            0 <= n && a.o("location", b.data.locationId);
            var e = "default";
            if (0 < b.data.lvl || 4 >= b.data.buildingType || b.data.buildingType == Building.TYPE.WONDER_OF_WORLD) {
                e = c.Hh(b.data.buildingType),
                0 < b.data.buildingType && (a.w.contentHeaderTemplate = "tpl/building/partials/buildingHeader.html")
            }
            b.isRubble() && (e = "rubble");
            a.pageTemplate = "tpl/building/" + e + "/" + e + "_main.html";
            n = -1;
            a.building.buildingImage = b.getImageName(Travian.Player.data.tribeId);
            b && "undefined" != typeof b.data.effect && (a.nextEffect = b.data.nextEffect,
            a.nextEffects = b.data.effect.slice(1),
            a.currentEffect = b.data.currentEffect)
        }
    }
    a.w.contentHeaderTemplate = "tpl/building/partials/buildingHeader.html";
    a.pageTemplate = "";
    a.locationId = a.getParam("location", !0);
    var l = !1
      , p = b.i();
    g(new Building);
    a.storage = p.getResources();
    e();
    var n = -1;
    a.upgradeBuildingButtonIsDisabled = !1;
    a.canCollectRubble = function() {
        var a = Travian.Player.data.playerId
          , c = Travian.Player.data.uiStatus;
        return !(0 < BuildingQueue.get(b.getActiveVillageId()).data.queues[BuildingQueue.TYPE_DESTRUCTION].length) && 0 < a && -1 == c
    }
    ;
    a.collectRubble = function() {
        var c = a.building;
        f.U(db);
        Travian.writeRequest("building/upgrade", {
            villageId: b.getActiveVillageId(),
            locationId: c.data.locationId,
            buildingType: c.data.buildingType
        })
    }
    ;
    a.$on("urlChanged", function(b, c) {
        c.location && (a.locationId = c.location,
        e())
    });
    a.$on("activeVillageChanged", function() {
        if (null == a.getParam("location")) {
            return !1
        }
        p = b.i();
        a.storage = p.getResources();
        n = a.building.data.buildingType;
        a.locationId = a.getParam("location");
        e()
    });
    a.hasEnoughResources = function(a) {
        return p.hasEnoughResources(a)
    }
    ;
    a.isBuildingBuild = function() {
        return 0 < a.building.data.lvl
    }
    ;
    a.getFutureLevel = function(b) {
        return a.building.data.lvl + b + 1
    }
    ;
    a.$on("$destroy", function() {
        f.wj(a.building.data.buildingType)
    })
}
;
window.buildingIndexCtrl.$inject = ["$scope", "BuildingService", "VillageService", "AudioService"];
window.buildingQueueCtrl = function(a, c, b, f) {
    function g() {
        a.slotDetails.building = {};
        a.slotDetails.level = 0;
        a.slotDetails.startTime = 0;
        a.slotDetails.notEnoughResources = !1;
        a.slotDetails.npcTradingTimeBoost = 0;
        a.slotDetails.canPayNow = !1;
        if (n && a.buildingsByLocation && a.slotDetails.visible) {
            var b = n.data.queues[a.slotDetails.queue][a.slotDetails.slot];
            if (a.slotDetails.queue == BuildingQueue.TYPE_VILLAGE || a.slotDetails.queue == BuildingQueue.TYPE_RESOURCES) {
                for (var e = [BuildingQueue.TYPE_VILLAGE, BuildingQueue.TYPE_RESOURCES], f = 0; f < e.length; f++) {
                    var l = e[f];
                    if (n.data.queues[l][0]) {
                        var h = n.data.queues[l][0].locationId;
                        a.slotDetails.building[l] = a.buildingsByLocation[h]
                    }
                }
            } else {
                b && (a.slotDetails.building[a.slotDetails.queue] = a.buildingsByLocation[b.locationId])
            }
            if (b && (e = a.buildingsByLocation[b.locationId]) && (a.slotDetails.level = e.data.lvl + b.levelDifference,
            a.slotDetails.queue == BuildingQueue.TYPE_MASTER_BUILDER)) {
                l = {};
                a.slotDetails.canPayNow = !0;
                if (n.data.queues[BuildingQueue.TYPE_RESOURCES][0]) {
                    if (Travian.Player.data.tribeId != Player.TRIBE.ROMAN || e.isResourceField()) {
                        a.slotDetails.startTime = parseInt(n.data.queues[BuildingQueue.TYPE_RESOURCES][0].finished)
                    }
                    l[n.data.queues[BuildingQueue.TYPE_RESOURCES][0].locationId] = 1
                }
                n.data.queues[BuildingQueue.TYPE_VILLAGE][0] && (Travian.Player.data.tribeId == Player.TRIBE.ROMAN && e.isResourceField() || (a.slotDetails.startTime = parseInt(n.data.queues[BuildingQueue.TYPE_VILLAGE][0].finished)),
                l[n.data.queues[BuildingQueue.TYPE_VILLAGE][0].locationId] = 1);
                for (var m = !1, f = 0; f < a.slotDetails.slot; f++) {
                    var h = n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][f].locationId
                      , g = a.buildingsByLocation[h];
                    if (Travian.Player.data.tribeId != Player.TRIBE.ROMAN || g.isResourceField() === e.isResourceField()) {
                        var q = g.data.lvl + (l[h] || 0)
                          , p = n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][f].paid;
                        !c.i().hasEnoughResources(g.data.nextUpgradeCosts[q]) && !p || m ? (a.slotDetails.startTime = -1,
                        m = !0) : a.slotDetails.startTime += parseInt(g.data.nextUpgradeTimes[q]);
                        l[h] = l[h] ? l[h] + 1 : 1;
                        b.paid || (h != b.locationId || n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][f].paid) || (a.slotDetails.canPayNow = !1)
                    }
                }
                f = e.data.nextUpgradeCosts[a.slotDetails.level];
                b.paid || c.i().hasEnoughResources(f) || (a.slotDetails.notEnoughResources = !0);
                !a.slotDetails.notEnoughResources || (a.activeVillage.isWWVillage() || e.hasEnoughResourcesUsingNpcTrader(a.activeVillage.getResources(), a.activeVillage.getCapacity(), b.levelDifference)) || (f = e.data.nextUpgradeCosts[a.slotDetails.level],
                a.activeVillage.getCostsDistributionDifference(f) < PremiumFeature.NPC_TRADER_INSIGNIFICANCE_LIMIT ? a.slotDetails.npcTradingTimeBoost = -1 : (a.slotDetails.npcTradingTimeBoost = a.activeVillage.calculateNpcTradingTimeBoost(f),
                0 == a.slotDetails.npcTradingTimeBoost && (a.slotDetails.npcTradingTimeBoost = -1)))
            }
        }
    }
    function e() {
        if (n && a.buildingsByLocation) {
            var b = {};
            $.each([BuildingQueue.TYPE_VILLAGE, BuildingQueue.TYPE_RESOURCES, BuildingQueue.TYPE_MASTER_BUILDER], function(c, e) {
                for (var f = n.data.queues[e], l = 0; l < f.length; l++) {
                    var h = f[l].id
                      , m = a.buildingsByLocation[f[l].locationId];
                    a.slotImages[h] || (a.slotImages[h] = {});
                    a.slotImages[h].queueType = e;
                    a.slotImages[h].slotNr = l + 1;
                    a.slotImages[h].buildingType = m.data.buildingType;
                    a.slotImages[h].level = m.data.lvl + f[l].levelDifference;
                    a.slotImages[h].paid = f[l].paid;
                    b[h] = !0
                }
            });
            for (var c in a.slotImages) {
                b[c] || delete a.slotImages[c]
            }
            h()
        }
    }
    function h() {
        if (n && a.buildingsByLocation) {
            for (var b in a.slotImages) {
                if (a.slotImages[b].paid) {
                    delete a.slotImages[b].enoughResources
                } else {
                    var c = a.slotImages[b].queueType
                      , e = a.slotImages[b].slotNr - 1;
                    if (!n.data.queues[c][e]) {
                        break
                    }
                    c = a.buildingsByLocation[n.data.queues[c][e].locationId];
                    if (!c) {
                        break
                    }
                    a.slotImages[b].enoughResources = a.activeVillage.hasEnoughResources(c.data.nextUpgradeCosts[a.slotImages[b].level])
                }
            }
        }
    }
    function m() {
        a.availableMasterBuilderSlots = n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length + n.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER];
        a.paidMaxLvlInQueue = {};
        for (var b = [BuildingQueue.TYPE_VILLAGE, BuildingQueue.TYPE_RESOURCES], c = 0; c < b.length; c++) {
            var f = b[c];
            0 < n.data.queues[f].length && (f = n.data.queues[f][0].locationId,
            a.paidMaxLvlInQueue[f] = a.buildingsByLocation[f].data.lvl)
        }
        for (c = 0; c < n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length; c++) {
            b = n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][c],
            b.paid && (a.paidMaxLvlInQueue[b.locationId] = a.buildingsByLocation[b.locationId].data.lvl + b.levelDifference)
        }
        g();
        e();
        Travian.rootScope.$broadcast("buildingQueueChanged")
    }
    function l() {
        a.buildingsByLocation = {};
        for (var b = 0; b < q.data.length; b++) {
            var c = q.data[b];
            a.buildingsByLocation[c.data.locationId] = c
        }
        g();
        e()
    }
    function p() {
        var e = c.i();
        null != e.data.villageId && (a.activeVillage = e,
        delete a.buildingsByLocation,
        n = BuildingQueue.get(e.data.villageId),
        (q = b.aa(e.data.villageId)) && r && q.unsubscribe(r),
        r = q.subscribe(l),
        n && t && n.unsubscribe(t),
        t = n.subscribe(m),
        a.buildingQueue = n,
        a.hideDetails())
    }
    a.Math = Math;
    a.ROMAN = Player.TRIBE.ROMAN;
    a.BuildingQueue = BuildingQueue;
    a.PremiumFeature = PremiumFeature;
    a.slotPrices = Travian.Config.PremiumFeatures.buildingMasterSlot;
    a.npcTraderPrice = Travian.Config.PremiumFeatures.NPCTrader.price;
    a.slotImages = {};
    var n = null
      , q = null
      , r = null
      , t = null;
    a.slotDetails = {
        visible: !1,
        queue: 0,
        slot: 0,
        building: {},
        level: 0,
        startTime: 0,
        notEnoughResources: !1,
        npcTradingTimeBoost: 0,
        canPayNow: !1
    };
    a.showDetails = function(b, c) {
        a.slotDetails.visible && a.slotDetails.queue == b && a.slotDetails.slot == c || (a.slotDetails.visible = !0,
        "undefined" != typeof b && (a.slotDetails.queue = b),
        "undefined" != typeof c && (a.slotDetails.slot = c),
        g())
    }
    ;
    a.hideDetails = function() {
        if (Travian.rootScope.windows.confirmGoldUsage) {
            var b = Travian.rootScope.$watch("windows", function() {
                Travian.rootScope.windows.confirmGoldUsage || (a.slotDetails.visible = !1,
                b())
            }, !0)
        } else {
            a.slotDetails.visible = !1
        }
    }
    ;
    p();
    a.$on("activeVillageChanged", p);
    a.$on("resourcesChanged", function() {
        h();
        a.slotDetails.visible && a.slotDetails.queue == BuildingQueue.TYPE_MASTER_BUILDER && g()
    });
    a.shiftMasterBuilder = function(a, b) {
        var e = a.slotNr - 1;
        n && (n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length > Math.max(e, b) && 4 == a.queueType && n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][e].paid == n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][b].paid) && (Travian.request("building/shiftMasterBuilder", {
            villageId: c.getActiveVillageId(),
            from: e,
            to: b
        }),
        e = n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].splice(e, 1)[0],
        n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].splice(b, 0, e))
    }
    ;
    a.cancelBuilding = function(a) {
        Travian.writeRequest("building/cancel", {
            villageId: c.i().data.villageId,
            eventId: a
        });
        return !1
    }
    ;
    a.reserveResources = function(b) {
        Travian.writeRequest("building/reserveResources", {
            villageId: c.i().data.villageId,
            entryId: b
        }, function(b) {
            if ("undefined" == typeof b.errors) {
                b = n.data.queues[BuildingQueue.TYPE_MASTER_BUILDER];
                for (var c = 0; c < b.length; c++) {
                    if (!b[c].paid) {
                        a.showDetails(BuildingQueue.TYPE_MASTER_BUILDER, c);
                        break
                    }
                }
            }
        })
    }
    ;
    f.m(function() {
        a.vouchers = Voucher.get(Travian.Player.data.playerId)
    });
    a[PremiumFeature.FEATURE_NAME_NPC_TRADER] = function() {
        if (!a.slotDetails.building[BuildingQueue.TYPE_MASTER_BUILDER]) {
            return !1
        }
        var b = c.i(), e = b.getCapacity(), f = new Resources(b.getResources()), l = new Resources(a.slotDetails.building[BuildingQueue.TYPE_MASTER_BUILDER].data.nextUpgradeCosts[a.slotDetails.level]), h = PremiumFeature.getNotTradableResTypes(), m;
        for (m in h) {
            l[h[m]] = f[h[m]]
        }
        e = f.distribute(e, l, b.getProduction());
        return {
            villageId: b.data.villageId,
            distributeRes: e
        }
    }
    ;
    a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
        return {
            villageId: c.getActiveVillageId(),
            queueType: a,
            delayForNextRequest: 2E3
        }
    }
    ;
    a.$on("$destroy", function() {
        q && r && q.unsubscribe(r);
        n && t && n.unsubscribe(t)
    })
}
;
window.buildingQueueCtrl.$inject = "$scope VillageService BuildingService SessionService AnimationService $timeout".split(" ");
window.buildingUpgradeTooltipCtrl = function(a) {
    function c() {
        var c, h, m = a.building;
        f = parseInt(m.data.lvl, 10);
        var l = a.buildingQueue.data.queues
          , g = BuildingQueue.TYPE_VILLAGE;
        m.isResourceField() && (g = BuildingQueue.TYPE_RESOURCES);
        for (c = 0; c < l[g].length; c++) {
            "undefined" !== typeof l[g][c] && (h = parseInt(l[g][c].locationId, 10),
            m.data.locationId == h && f++)
        }
        for (c = 0; c < l[BuildingQueue.TYPE_MASTER_BUILDER].length; c++) {
            "undefined" !== typeof l[BuildingQueue.TYPE_MASTER_BUILDER][c] && (h = parseInt(l[BuildingQueue.TYPE_MASTER_BUILDER][c].locationId, 10),
            m.data.locationId == h && f++)
        }
        b(a.premiumOptionMenu.requestedUpgrades[m.data.locationId])
    }
    function b(b) {
        a.currentBuildingLevel = f + (parseInt(b) || 0);
        a.numItemsInQueue = a.currentBuildingLevel - parseInt(a.building.data.lvl, 10);
        "undefined" == typeof a.originalSlides && (a.originalSlides = a.numItemsInQueue)
    }
    a.isArray = Array.isArray;
    var f = 0;
    c();
    var g = a.buildingQueue.subscribe(c);
    a.$watch("premiumOptionMenu.requestedUpgrades", function() {
        b(a.premiumOptionMenu.requestedUpgrades[a.building.data.locationId])
    }, !0);
    a.$on("$destroy", function() {
        a.buildingQueue.unsubscribe(g)
    })
}
;
window.buildingUpgradeTooltipCtrl.$inject = ["$scope"];
window.constructBuildingCtrl = function(a, c, b, f) {
    function g(e) {
        if ("undefined" === typeof e || !e.buildings) {
            return !1
        }
        a.buildings = [];
        for (var f = 0; f < e.buildings.buildable.length; f++) {
            var l = e.buildings.buildable[f]
              , l = new Building(m.data.villageId,a.locationId,l,c);
            l.data.buildable = !0;
            l.data.sortKey = l.data.sortOrder;
            l.data.buildingType === Building.TYPE.HEALING_TENT && b.va(c.getActiveVillageId(), Building.TYPE.HEALING_TENT) && (l.data.upgradeDescription = !0);
            a.buildings.push(l.data)
        }
        for (f = 0; f < e.buildings.notBuildable.length; f++) {
            l = e.buildings.notBuildable[f];
            l = new Building(m.data.villageId,a.locationId,l,c);
            l.data.buildable = !1;
            for (var h = 0, g = 0; g < l.data.requiredBuildings.length; g++) {
                h += Math.max(0, l.data.requiredBuildings[g].requiredLevel - l.data.requiredBuildings[g].currentLevel)
            }
            l.data.sortKey = 100 + l.data.buildingType + 100 * h;
            a.buildings.push(l.data)
        }
        a.buildings.sort(function(a, b) {
            return a.sortKey - b.sortKey
        })
    }
    function e() {
        m = c.i();
        a.activeVillage = m;
        h = BuildingQueue.get(c.getActiveVillageId());
        a.subscribe(h, function() {
            Travian.request("building/getBuildingList", {
                villageId: m.data.villageId,
                locationId: a.locationId
            }, g)
        })
    }
    a.w.windowName = "constructBuilding";
    a.w.contentHeaderTemplate = null;
    a.tabConfig.disableScrolling = !0;
    a.buildings = [];
    a.activeItem = null;
    var h, m, l = !1;
    a.hasEnoughResources = function(a) {
        return m.hasEnoughResources(a)
    }
    ;
    a.build = function() {
        if (!l) {
            var e = a.activeItem.buildingType;
            m.getResources();
            for (var g = null, q = 0; q < a.buildings.length; q++) {
                var r = a.buildings[q];
                if (r.buildingType == e) {
                    g = r;
                    break
                }
            }
            if (null === g) {
                return !1
            }
            var g = new Building(m.data.villageId,a.locationId,r,c)
              , t = {
                villageId: c.getActiveVillageId(),
                locationId: a.locationId,
                buildingType: e
            };
            b.Gb(Travian.Config.buildingConfig[e].supply, function() {
                if (a.enoughRes && a.canQueue) {
                    var b = ".constructBuilding button.startConstruction"
                      , c = ".buildingQueueContainer .constructionContainer .slotIcon.queueType" + (g.isResourceField() ? BuildingQueue.TYPE_RESOURCES : BuildingQueue.TYPE_VILLAGE);
                    l = f.zb(b, c, "feature_buildingQueue_medium_illu", null, 500, 100, "ease", function() {
                        Travian.writeRequest("building/upgrade", t);
                        a.closeWindow("building")
                    }, null, null, "buildingUpgrade")
                } else {
                    b = h.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length + 1,
                    l = f.zb(".constructBuilding button.startConstruction.masterBuilder", ".buildingQueueContainer .masterBuilderContainer .slot" + b + " i", "feature_buildingMaster_medium_illu", null, 500, 100, "ease", function() {
                        Travian.writeRequest("building/useMasterBuilder", t);
                        a.closeWindow("building")
                    }, null, null, "buildingUpgrade")
                }
            })
        }
    }
    ;
    e();
    a.$watch("activeItem", function() {
        if (null !== a.activeItem) {
            var b = new Building(m.data.villageId,a.locationId,a.activeItem,c);
            a.enoughRes = m.hasEnoughResources(a.activeItem.upgradeCosts);
            a.canQueue = h.hasFreeBuildingSlots(b);
            a.masterBuilderFree = 0 < h.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER]
        }
    });
    a.$on("activeVillageChanged", function() {
        e()
    })
}
;
window.constructBuildingCtrl.$inject = ["$scope", "VillageService", "BuildingService", "AnimationService"];
window.chatBarCtrl = function(a, c, b) {
    function f() {
        a.chat = c.getViewModel();
        a.chatInit = !0
    }
    a.chatInit = !1;
    a.chatMenuOpen = !1;
    a.$on("openChatMenu", function(b, c) {
        a.toggleMenu(c)
    });
    a.toggleMenu = function(b) {
        a.chatMenuOpen = !a.chatMenuOpen;
        a.chatMenuOpen && a.$broadcast("openedChatMenu", b);
        a.$broadcast("checkDynTabs")
    }
    ;
    a.moreDropdownUnread = 0;
    a.isUnreadMessagesHidden = function(b) {
        a.moreDropdownUnread = 0;
        if (b && 0 < b.length) {
            for (var c = 0; c < b.length; c++) {
                b[c].data.chatInbox && (a.moreDropdownUnread += b[c].data.chatInbox.data.unread)
            }
        }
        return 0 !== a.moreDropdownUnread
    }
    ;
    a.chat = {};
    a.chat = c.getViewModel();
    a.chat.unreadMessages = 0;
    a.openChat = function(b, e) {
        c.ka(b, e, a.activeTab == b);
        a.$broadcast("checkDynTabs");
        requestAngularApply()
    }
    ;
    a.$on("socketConnected", f);
    b.Ac() && f();
    a.$on("setActiveChatRoom", function(b, c) {
        a.activeTab = c
    })
}
;
window.chatBarCtrl.$inject = ["$scope", "ChatService", "SocketService"];
window.chatMenuCtrl = function(a, c, b, f, g) {
    function e() {
        if (null !== F) {
            for (var b = 0; b < a.menuItems.length; b++) {
                a.menuItems[b].chatRoom.resetData()
            }
            for (b = 0; b < F.data.length; b++) {
                var c = F.data[b]
                  , e = h(c.data.roomId);
                e && (e.chatRoom.set(c.data),
                e.init || (c = e.chatRoom.data.roomId,
                f.zh(c),
                e.chatLines = f.qb(c),
                e.init = !0,
                e.chatLines.subscribe(l),
                ChatCache.B("Collection:ChatRoomUser:" + c, !0)))
            }
        }
    }
    function h(b) {
        for (var c = 0; c < a.menuItems.length; c++) {
            if (a.menuItems[c].roomId === "" + b) {
                return a.menuItems[c]
            }
        }
        return null
    }
    function m(b, c) {
        var e = a.menuItems[b];
        if (e.chatLines) {
            ChatCache.B(e.chatLines, !0);
            for (var f = 0; f < e.chatLines.data.length; f++) {
                ChatCache.B(e.chatLines.data[f], !0)
            }
        }
        e.chatLines = null;
        e.init = !1;
        e.roomId = c;
        e.chatRoom = new ChatRoom(c)
    }
    function l(b) {
        var c = null;
        if (0 < b.data.length) {
            for (var e = b.data[0].data.roomId, l = h(e), c = l.chatRoom, m = 0, g = 0, n = b.data.length; g < n; g++) {
                b.data[g].data.timestamp > c.data.lastRead && (!a.chatMenuOpen || s != e) && (m++,
                -1 == l.indexOfFirstUnreadLine && (l.indexOfFirstUnreadLine = g))
            }
            a.chatMenuOpen && s == e ? f.Ja(e) : (a.chat.unreadMessages -= l.unreadLines,
            a.chat.unreadMessages += m,
            l.unreadLines = m,
            l.visible || (a.secretSocietyDropdownUnread += m))
        }
    }
    function p() {
        function b(c, e) {
            a.menuItems.push(angular.extend({}, D, {
                roomId: ChatRoom.TYPE_SECRET_SOCIETY + "." + A.data[c].data.societyId,
                icon: "chat_secret_society_small_illu",
                iconDisabled: "chat_secret_society_inactive_small_illu",
                chatRoom: new ChatRoom(ChatRoom.TYPE_SECRET_SOCIETY + "." + A.data[c].data.societyId),
                tooltipKey: "Society",
                model: A.data[c],
                visible: e
            }))
        }
        a.menuItems.splice(C, a.menuItems.length);
        a.secretSocietyCount = A.data.length;
        r = [];
        a.secretSocietyDropdownUnread = 0;
        if (1 > A.data.length) {
            for (var c = 0; c < A.data.length; c++) {
                b(c, !0)
            }
        } else {
            for (var f = !1, c = 0; c < A.data.length; c++) {
                var l = !1;
                s === ChatRoom.TYPE_SECRET_SOCIETY + "." + A.data[c].data.societyId && (f = l = !0);
                b(c, l);
                A.data[c].menuIndex = C + c;
                l || r.push(A.data[c])
            }
            f || (r.shift(),
            a.menuItems[C].visible = !0)
        }
        e()
    }
    function n() {
        0 < a.room.unreadLines && a.chatMenuOpen && (a.chat.unreadMessages -= a.room.unreadLines,
        a.room.unreadLines = 0,
        f.Ja(a.room.roomId),
        g(function() {
            a.room.indexOfFirstUnreadLine = -1
        }, 5E3))
    }
    a.ChatRoom = ChatRoom;
    a.menuItems = [];
    a.secretSocietyCount = 0;
    a.secretSocietyDropdownUnread = 0;
    var q = null
      , r = []
      , t = Travian.Player.data.kingdomId
      , u = ""
      , w = "";
    a.multiLanguageServer = 1 < Object.keys(Travian.Config.selectableLanguages).length;
    a.multiLanguageServer && (a.settings = Settings.get(Travian.Player.data.playerId),
    w = "." + a.settings.data.lang,
    u = a.settings.data.lang);
    var s = ChatRoom.GLOBAL + w
      , x = hasLocalStorage();
    if (x) {
        var v = localStorage.getItem("selectedChatRoomId");
        null !== v && (s = v)
    }
    var D = {
        roomId: null,
        icon: "",
        iconDisabled: "",
        chatRoom: null,
        chatLines: null,
        init: !1,
        unreadLines: 0,
        indexOfFirstUnreadLine: -1,
        visible: !0,
        markMessagesAsRead: n
    };
    a.menuItems.push(angular.extend({}, D, {
        roomId: ChatRoom.GLOBAL + w,
        icon: "chat_group_small_illu",
        iconDisabled: "chat_group_inactive_small_illu",
        chatRoom: new ChatRoom(ChatRoom.GLOBAL + w),
        tooltipKey: "Chat"
    }));
    a.menuItems.push(angular.extend({}, D, {
        roomId: ChatRoom.BEGINNER + w,
        icon: "chat_beginners_small_illu",
        iconDisabled: "chat_beginners_inactive_small_illu",
        chatRoom: new ChatRoom(ChatRoom.BEGINNER + w),
        tooltipKey: "Beginner"
    }));
    a.multiLanguageServer && a.menuItems.push(angular.extend({}, D, {
        roomId: ChatRoom.GLOBAL,
        icon: "chat_global_small_illu",
        iconDisabled: "chat_global_inactive_small_illu",
        chatRoom: new ChatRoom(ChatRoom.GLOBAL),
        tooltipKey: "Global"
    }));
    a.menuItems.push(angular.extend({}, D, {
        roomId: ChatRoom.TYPE_KINGDOM + "." + Travian.Player.data.kingdomId,
        icon: "chat_kingdom_small_illu",
        iconDisabled: "chat_kingdom_inactive_small_illu",
        chatRoom: new ChatRoom(ChatRoom.TYPE_KINGDOM + "." + Travian.Player.data.kingdomId),
        tooltipKey: "Kingdom"
    }));
    var C = a.menuItems.length;
    a.ChatUser = ChatUser;
    var A = null
      , F = null;
    a.getSecretSocietyOptions = function() {
        for (var a = [], b = 0; b < r.length; b++) {
            a.push({
                clickable: "selectSecretSociety(" + r[b].menuIndex + ")",
                text: r[b].data.name
            })
        }
        return a
    }
    ;
    a.selectSecretSociety = function(b) {
        s = a.menuItems[b].roomId;
        p();
        a.selectMenuTab(b)
    }
    ;
    var B = null;
    a.selectMenuTab = function(b) {
        a.room = a.menuItems[b];
        a.$broadcast("channelSwitched");
        s = a.room.roomId;
        0 === a.room.chatRoom.data.joined && f.$h(a.room.roomId);
        x && localStorage.setItem("selectedChatRoomId", s);
        B && g.cancel(B);
        B = g(function() {
            n();
            B = null
        }, 100)
    }
    ;
    a.getRoomOptions = function() {
        var a = [];
        a.push({
            clickable: "leaveChat()",
            text: Travian.translate("Chat.LeaveChat")
        });
        return a
    }
    ;
    a.joinChat = function() {
        f.xi(a.room.chatRoom.data.roomId)
    }
    ;
    a.leaveChat = function() {
        ChatCache.B(a.room.chatLines, !0);
        for (var b = 0; b < a.room.chatLines.data.length; b++) {
            ChatCache.B(a.room.chatLines.data[b], !0)
        }
        f.Dc(a.room.chatRoom.data.roomId);
        a.room.chatLines = null;
        a.room.init = !1;
        a.$broadcast("channelSwitched")
    }
    ;
    (function() {
        A = Society.getCollection();
        A.subscribe(p);
        F = ChatRoom.getCollection();
        F.subscribe(e);
        a.$on("openedChatMenu", function(b, c) {
            if ("undefined" !== typeof c) {
                a.selectMenuTab(c)
            } else {
                for (var e = !1, f = 0; f < a.menuItems.length; f++) {
                    if (a.menuItems[f].roomId === s) {
                        a.selectMenuTab(f);
                        e = !0;
                        break
                    }
                }
                e || a.selectMenuTab(0)
            }
        });
        q = b.Bd();
        q.on("onlinePlayers", function(a) {
            h(a.roomId).chatRoom.data.members = a.online
        });
        var f = c.p();
        f.subscribe(function() {
            a.isBannedFromMessaging = f.data.isBannedFromMessaging;
            f.data.kingdomId !== t && (m(2, ChatRoom.TYPE_KINGDOM + "." + f.data.kingdomId),
            t = f.data.kingdomId)
        });
        a.multiLanguageServer && a.settings.subscribe(function() {
            var b = a.settings.data.lang;
            b != u && (m(0, ChatRoom.GLOBAL + "." + b),
            m(1, ChatRoom.BEGINNER + "." + b),
            u = b)
        })
    }
    )()
}
;
window.chatMenuCtrl.$inject = ["$scope", "SessionService", "SocketService", "ChatService", "$timeout"];
window.chatRoomHeaderCtrl = function(a, c, b) {
    a.ChatUser = ChatUser;
    a.Player = Player;
    var f = {};
    a.isPrivateChat = !0;
    "undefined" != typeof a.w && (a.chatInfo = a.getParam("chat", !0, !0));
    f = a.chatInfo.data;
    a.otherPlayerRole = Player.KINGDOM_ROLE_GOVERNOR;
    f.chatUser.data.kingdomRole == Player.KINGDOM_ROLE_KING && (a.otherPlayerRole = Player.KINGDOM_ROLE_KING);
    f.chatUser.data.kingdomRole == Player.KINGDOM_ROLE_DUKE && (a.otherPlayerRole = Player.KINGDOM_ROLE_DUKE);
    a.getPrivateChatRoomOptions = function(a, b) {
        var c = [];
        c.push({
            clickable: "openWindow('profile', {'playerId': " + a + ", 'profileTab': 'playerProfile'})",
            text: Travian.translate("Chat.OpenProfile")
        });
        c.push({
            clickable: "reportConversation('" + b + "', " + a + ")",
            text: Travian.translate("Button.Chat.Report")
        });
        c.push({
            clickable: "ignorePlayer('" + b + "'," + a + ")",
            text: Travian.translate("Chat.Ignore.Player")
        });
        return c
    }
    ;
    a.reportConversation = function(a, c) {
        b.Yd(a, c)
    }
    ;
    a.ignorePlayer = function(b, c) {
        a.openWindow("ignorePlayer", {
            roomId: b,
            playerId: c
        })
    }
    ;
    a.minimizeChat = function() {
        b.Gc(f.roomId);
        c.$broadcast("setActiveChatRoom", null);
        "undefined" != typeof a.w && a.closeWindow(a.w.name)
    }
    ;
    a.unDockChatWindow = function() {
        var c = {
            chat: a.chatInfo,
            windowName: f.roomId
        };
        a.$root.$broadcast("setActiveChatRoom", f.roomId);
        a.openWindow("chat", null, c);
        b.Gc(f.roomId)
    }
    ;
    a.dockChatWindow = function() {
        b.Gc(f.roomId, !0);
        a.closeWindow(a.w.name)
    }
    ;
    a.closeChat = function() {
        b.Dc(f.roomId);
        "undefined" != typeof a.w && a.closeWindow(a.w.name);
        c.$broadcast("setActiveChatRoom", null)
    }
}
;
window.chatRoomHeaderCtrl.$inject = ["$scope", "$rootScope", "ChatService"];
window.ignorePlayerCtrl = function(a, c, b) {
    a.w.windowName = "Chat.Ignore.WindowName";
    var f = a.getParam("roomId")
      , g = a.getParam("playerId");
    a.playerName = "";
    Travian.nameService.getNameForId(g, function(b) {
        a.playerName = b
    });
    a.ignorePlayer = function() {
        c.yf(f);
        b.closeWindow("ignorePlayer")
    }
}
;
window.ignorePlayerCtrl.$inject = ["$scope", "ChatService", "$rootScope"];
window.privateChatWindowCtrl = function(a, c, b, f) {
    function g() {
        0 < q && (q = 0,
        b.Ja(h),
        c.room.unreadLines = 0,
        f(function() {
            c.room.indexOfFirstUnreadLine = -1
        }, 5E3))
    }
    var e = {};
    "undefined" != typeof c.w ? (e = c.getParam("chat", !0, !0).data,
    c.w.chat = {},
    c.w.windowName = e.roomViewName,
    c.w.isActive = !0) : e = c.chatInfo.data;
    var h = e.roomId
      , m = !1
      , l = null
      , p = null;
    0 <= e.roomId.indexOf("undefined") && (b.Dc(e.roomId),
    "undefined" !== typeof c.w && c.closeWindow(c.w.name),
    a.$broadcast("setActiveChatRoom", null));
    c.roomId = h;
    var n = b.Ua(h)
      , q = 0
      , r = 0;
    n.data.chatInbox && (q = n.data.chatInbox.data.unread,
    r = n.data.chatInbox.data.lastOwnRead);
    var t = ChatInbox.getCollection()
      , p = t.subscribe(function() {
        c.room && f(function() {
            n = b.Ua(h);
            c.room.chatInbox = n.data.chatInbox
        }, 100)
    })
      , u = f(g, 100);
    c.room = {
        roomId: h,
        chatRoom: null,
        chatInbox: n.data.chatInbox,
        chatLines: b.qb(h),
        unreadLines: q,
        indexOfFirstUnreadLine: -1,
        markMessagesAsRead: g
    };
    l = c.room.chatLines.subscribe(function() {
        if (m) {
            b.Ja(h)
        } else {
            m = !0;
            for (var a = c.room.chatLines, e = 0, f = a.data.length; e < f; e++) {
                a.data[e].data.timestamp > r && -1 == c.room.indexOfFirstUnreadLine && (c.room.indexOfFirstUnreadLine = e)
            }
        }
    });
    c.$on("setActiveChatRoom", function(a, b) {
        "undefined" != typeof c.w && (c.w.isActive = b == c.roomId)
    });
    c.$on("$destroy", function() {
        null !== l && c.room.chatLines.unsubscribe(l);
        null !== p && t.unsubscribe(p);
        u && f.cancel(u)
    })
}
;
window.privateChatWindowCtrl.$inject = ["$rootScope", "$scope", "ChatService", "$timeout"];
window.reportConversationCtrl = function(a, c, b) {
    a.w.windowName = "ReportConversation.WindowName";
    var f = a.getParam("roomId");
    a.PlayerPunishment = PlayerPunishment;
    a.reportPlayer = !1;
    a.showIgnorePlayer = !0;
    a.form = {
        reason: PlayerPunishment.STRIKE_REASON_SPAM,
        ignore: !1
    };
    Travian.Config.features.chatAutoBan && (0 <= f.indexOf(ChatRoom.GLOBAL) || 0 <= f.indexOf(ChatRoom.BEGINNER)) && (a.reportPlayer = !0,
    a.w.windowName = "ReportPlayer.WindowName");
    var g = f;
    ChatRoom.isPrivate(f) || (a.getParam("playerId") ? g = b.pa(a.getParam("playerId")) : a.showIgnorePlayer = !1);
    if (a.showIgnorePlayer) {
        var e = b.Ua(g);
        e.data.chatInbox && e.data.chatInbox.data.isPrivateChat && e.data.chatInbox.data.ignoreUntil > (new Date).getTime() && (a.showIgnorePlayer = !1)
    }
    a.submitReport = function() {
        a.reportPlayer ? b.Ri(f, a.getParam("playerId"), a.form.reason, function(b) {
            "undefined" != typeof b.errors ? a.handleError(b) : c.closeWindow("reportConversation")
        }) : b.Qi(f, a.comment);
        a.form.ignore && b.yf(g)
    }
}
;
window.reportConversationCtrl.$inject = ["$scope", "$rootScope", "ChatService"];
window.cheatSheetCtrl = function(a) {
    a.w.windowName = "CheatSheet";
    a.tabConfig.tabs = ["Colors", "Buttons", "Modules", "Styles", "Icons"];
    a.tabConfig.bodyTemplatePrefix = "tpl/cheatSheet/tabs/";
    Travian.txt.CheatSheet = "Cheat sheet";
    Travian.txt["Tab.Colors"] = "Colors";
    Travian.txt["Tab.Buttons"] = "Buttons";
    Travian.txt["Tab.Modules"] = "Modules";
    Travian.txt["Tab.Styles"] = "Styles";
    Travian.txt["Tab.Icons"] = "Icons";
    Travian.txt["CheatSheet.TextButtons"] = "Text Buttons";
    Travian.txt["CheatSheet.HudButtons"] = "HUD Buttons";
    Travian.txt["CheatSheet.Tables"] = "Tables";
    Travian.txt["CheatSheet.WindowOverlay"] = "Window overlay";
    Travian.txt["CheatSheet.ContentBoxes"] = "Content boxes";
    Travian.txt["CheatSheet.FormElements"] = "Form elements";
    Travian.txt["CheatSheet.ChooseEntry"] = "Choose entry";
    Travian.txt["CheatSheet.CantChooseEntry"] = "Can't Choose entry";
    Travian.txt["CheatSheet.WideHeader"] = "This is a very wide header";
    Travian.txt["CheatSheet.NarrowHeader"] = "Narrow";
    Travian.txt["CheatSheet.DesignElements"] = "Design elements";
    Travian.txt["CheatSheet.UsabilityElements"] = "Usability elements";
    Travian.txt["CheatSheet.Clickables"] = "Clickables";
    Travian.txt["CheatSheet.Header"] = "Header";
    Travian.txt["CheatSheet.ContentBox"] = "Content box";
    Travian.txt["CheatSheet.Spacing"] = "Spacing";
    Travian.txt["CheatSheet.Layout"] = "Layout";
    Travian.txt["CheatSheet.Arrows"] = "Arrows";
    a.colorOverview = [];
    a.colors = {};
    var c = [];
    Travian.request("cheatSheet/getColorTable", null, function(b) {
        var e = 0;
        c = b.data.split("\n");
        for (b = 0; b < c.length; b++) {
            var f = c[b]
              , m = f.match(/\$(.*): (#.*)/);
            ("" == f || "\r" == f || "\n" == f || "\r\n" == f) && 0 < a.colorOverview.length ? e++ : null != m && ("undefined" == typeof a.colorOverview[e] && (a.colorOverview[e] = []),
            a.colorOverview[e].push({
                name: m[1],
                hex: m[2]
            }),
            a.colors[m[1]] = m[2])
        }
    });
    a.dropdown = {
        placeholder: "CheatSheet.ChooseEntry",
        selected: null,
        options: {
            0: "first entry",
            1: "second entry",
            2: "third entry"
        }
    };
    a.dropdownDisabled = {
        placeholder: "CheatSheet.CantChooseEntry",
        selected: null,
        disabled: !0,
        options: {
            0: "first entry",
            1: "second entry",
            2: "third entry"
        }
    };
    a.dropdownWideHeader = {
        placeholder: "CheatSheet.WideHeader",
        selected: null,
        lazyRendering: !1,
        resize: !0,
        options: {
            0: "first entry",
            1: "second entry",
            2: "third entry"
        }
    };
    a.dropdownNarrowHeader = {
        placeholder: "CheatSheet.NarrowHeader",
        selected: null,
        lazyRendering: !1,
        resize: !0,
        options: {
            0: "first entry",
            1: "second entry",
            2: "third entry"
        }
    };
    a.sliderData1 = {
        value: 0
    };
    a.sliderData2 = {
        value: 200
    };
    a.sliderData3 = {
        value: 0
    };
    a.sliderData4 = {
        value: 200
    };
    for (var b = [], f = 0; 17 > b.push(f++); ) {}
    a.itemsPerPage = 5;
    a.currentPage = 1;
    a.startPosition = 5;
    a.numberOfItems = b.length;
    a.currentPage = 1;
    a.displayCurrentPage = function(c) {
        null == c && (c = 1);
        a.currentPage = c;
        c = a.itemsPerPage * (c - 1);
        var e = Math.min(c + a.itemsPerPage, b.length);
        a.rows = b.slice(c, e)
    }
    ;
    a.duration = 250;
    a.finishTime = a.currentServerTime + a.duration / 2;
    a.icons = {};
    Travian.request("cheatSheet/getSprites", null, function(b) {
        c = b.data.split("\n\n");
        for (b = 0; b < c.length; b++) {
            var e = c[b].replace(RegExp("\\n", "g"), " ").match(/^\.([^\{]*)[^w]*width\: ([\d]*)px.*height\: ([\d]*)px/);
            null != e && -1 == e[1].indexOf("_illustration") && (-1 < e[1].indexOf("_illu") || -1 < e[1].indexOf("_flat")) && (a.icons[e[1]] = e[2] + "x" + e[3])
        }
    })
}
;
window.cheatSheetCtrl.$inject = ["$scope"];
window.cheatSheetOverlayCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "CheatSheet.OverlayExample",
        inWindowPopupContentTemplate: "tpl/cheatSheet/overlay/cheatSheetOverlay.html"
    });
    Travian.txt["CheatSheet.OverlayExample"] = "Overlay Example"
}
;
window.cheatSheetOverlayCtrl.$inject = ["$scope"];
window.cheatSheetOverlayCustomCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "CheatSheet.OverlayExample",
        inWindowPopupTemplate: "tpl/cheatSheet/overlay/cheatSheetOverlayCustom.html"
    });
    Travian.txt["CheatSheet.OverlayExample"] = "Overlay Example"
}
;
window.cheatSheetOverlayCustomCtrl.$inject = ["$scope"];
window.cheatSheetOverlayWarningCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "CheatSheet.WarningOverlayExample",
        inWindowPopupContentTemplate: "tpl/cheatSheet/overlay/cheatSheetOverlayWarning.html",
        isAWarning: !0
    });
    Travian.txt["CheatSheet.WarningOverlayExample"] = "Warning Overlay Example"
}
;
window.cheatSheetOverlayWarningCtrl.$inject = ["$scope"];
window.kingdomMemberListCtrl = function(a) {
    var c = Kingdom.get(a.getParam("kingdomId"));
    a.subscribe(c, function() {
        for (var b = 0; b < c.data.members.length; b++) {
            c.data.members[b].rank = b + 1
        }
        a.overlayConfig.k({
            inWindowPopupTitle: "",
            inWindowPopupTitleText: c.data.name,
            inWindowPopupContentTemplate: "tpl/worldEnded/memberListOverlay.html"
        })
    });
    a.itemsPerPage = 15;
    a.displayCurrentPage = function(b) {
        null == b && (b = 1);
        a.currentPage = b;
        if (0 < c.data.members.length) {
            a.numberOfItems = c.data.members.length;
            b = a.itemsPerPage * (b - 1);
            var f = Math.min(b + a.itemsPerPage, c.data.members.length);
            a.members = c.data.members.slice(b, f)
        }
    }
}
;
window.kingdomMemberListCtrl.$inject = ["$scope"];
window.worldEndedCtrl = function(a, c, b) {
    function f(a, b) {
        return a.rights == Player.KINGDOM_ROLE_KING ? -1 : b.rights == Player.KINGDOM_ROLE_KING ? 1 : a.rights == Player.KINGDOM_ROLE_VICEKING ? -1 : b.rights == Player.KINGDOM_ROLE_VICEKING ? 1 : a.victoryPoints > b.victoryPoints ? -1 : a.victoryPoints < b.victoryPoints ? 1 : a.playerId - b.playerId
    }
    a.w.windowName = "WorldEnded.Title";
    a.tabConfig.tabs = ["WorldWonder", "VictoryPointsRanking", "KingdomRanking", "PlayerRanking"];
    Travian.Config.features.prestige && a.tabConfig.tabs.push("Prestige");
    a.KingdomRoleDuke = Player.KINGDOM_ROLE_DUKE;
    a.KingdomRoleViceKing = Player.KINGDOM_ROLE_VICEKING;
    a.isKingdomUnited = function(a) {
        a = Kingdom.get(a);
        var b = a.getViceKingId();
        return a.isUnited() && 0 < b
    }
    ;
    a.tabConfig.bodyTemplatePrefix = "tpl/worldEnded/tabs/";
    a.tabConfig.tabName = "tab";
    a.tabConfig.disableScrolling = !0;
    Travian.request("ranking/getRanking", {
        start: 0,
        end: 10,
        rankingType: "ranking_WorldWonder",
        rankingSubtype: ""
    }, function(b) {
        a.worldWonders = b.results
    });
    Travian.request("ranking/getWorldEndStats", {}, function(g) {
        a.victoryPoints = g.victoryPoints;
        for (var e = 0; e < a.victoryPoints.length; e++) {
            a.victoryPoints[e].members.sort(f)
        }
        a.playerRankings = [];
        a.playerRankings.push({
            type: "population",
            ranking: g.players.top3.population
        });
        a.playerRankings.push({
            type: "offPoints",
            ranking: g.players.top3.offPoints
        });
        a.playerRankings.push({
            type: "deffPoints",
            ranking: g.players.top3.deffPoints
        });
        a.playerRankings.push({
            type: "heroes",
            ranking: g.players.top3.heroes
        });
        a.ownRankings = g.players.own;
        a.kingdomRankings = [];
        a.kingdomRankings.push({
            type: "treasures",
            ranking: g.kingdoms.top3.treasures,
            icon: "unit_treasure_small_flat_black"
        });
        a.kingdomRankings.push({
            type: "population",
            ranking: g.kingdoms.top3.population,
            icon: "unit_population_small_flat_black"
        });
        a.kingdomRankings.push({
            type: "size",
            ranking: g.kingdoms.top3.size,
            icon: "unit_influence_small_flat_black"
        });
        a.ownKingdomRankings = g.kingdoms.own;
        if (Travian.Config.features.prestige && (e = g.prestige,
        a.kingdomTooltipNoKingdomText = Travian.translate("WorldEndPrestige.Tooltip.noKingdom"),
        a.wwTooltipText = Travian.translate("WorldEndPrestige.Tooltip.wwTooltipText"),
        g = e.attackerPrestige + e.defenderPrestige + e.populationPrestige + e.kingdomPrestige,
        a.overallBonusPercent = Math.floor(100 * (g / e.weeklyPrestige)),
        a.totalServerPrestige = e.weeklyPrestige + g + e.wwPrestige,
        a.serverName = e.serverName,
        a.prestige = e,
        a.hasKingdomPrestige = 0 !== e.kingdomPrestige,
        e.wwPrestige)) {
            for (a.wwVillageCount = 0,
            a.wwLevelSum = 0,
            g = c.W().data,
            e = 0; e < g.length; e++) {
                if (g[e].isWWVillage()) {
                    a.wwVillageCount++;
                    for (var h = b.aa(g[e].data.villageId).data, m = 0; m < h.length; m++) {
                        h[m].isWorldWonder() && (a.wwLevelSum += h[m].data.lvl)
                    }
                }
            }
        }
    })
}
;
window.worldEndedCtrl.$inject = ["$scope", "VillageService", "BuildingService"];
window.worldEndedSummaryCtrl = function(a) {
    a.gameworld = Gameworld.get();
    a.gameworld.data.data.endTime || (Cache.B(a.gameworld),
    a.gameworld = Gameworld.get());
    a.specialRules = 1 < Travian.Config.TG_SPEED ? " speed" : "";
    for (var c in Travian.Config.specialRules) {
        Travian.Config.specialRules[c] && (a.specialRules += " " + c)
    }
}
;
window.worldEndedSummaryCtrl.$inject = ["$scope"];
window.gameWorldCtrl = function(a, c) {
    a.gameWorldType = Gameworld.getGameWorldType();
    a.gameWorldType ? (a.w.windowName = "GameWorld.Title_" + a.gameWorldType,
    a.tabConfig.tabs = ["Features"],
    a.tabConfig.bodyTemplatePrefix = "tpl/gameWorld/tabs/",
    a.featureRange = 4,
    Travian.Config.challenge && a.tabConfig.tabs.unshift("Challenge"),
    "birthday" == a.gameWorldType ? (a.tabConfig.tabs.push("Fireworks", "FireworksTop10"),
    a.tabConfig.tabLangKeys = {
        FireworksTop10: "Tab.Top10"
    }) : "mayhem" == a.gameWorldType ? a.featureRange = 1 : "dynasty" == a.gameWorldType && (a.featureRange = 2),
    a.w.params.modalParams.additionalClass = a.gameWorldType,
    c.m(function() {
        a.isOwner = c.Pb();
        a.canSpendGold = c.hasRight(Session.RIGHT_SPEND_GOLD)
    }),
    a.callFeature = function(b) {
        switch (a.gameWorldType) {
        case "halloween":
            switch (b) {
            case 1:
                a.selectTab("Challenge");
                break;
            case 2:
                a.openWindow("hero", {
                    herotab: "Attributes",
                    overlayhero: "heroEditor",
                    option: "cosmetic"
                });
                break;
            case 3:
                a.openWindow("shop")
            }
            break;
        case "birthday":
            switch (b) {
            case 1:
                a.selectTab("Challenge");
                break;
            case 2:
                a.selectTab("Fireworks");
                break;
            case 20:
                a.openWindow("shop");
                break;
            case 3:
                a.selectTab("FireworksTop10");
                break;
            case 4:
                a.openWindow("hero", {
                    herotab: "Attributes",
                    overlayhero: "heroEditor",
                    option: "cosmetic"
                })
            }
            break;
        case "mayhem":
            switch (b) {
            case 1:
                window.open(Travian.translate("GameWorld.Feature_mayhem_" + b + ".BlogUrl"), "_blank")
            }
            break;
        case "dynasty":
            window.open(Travian.translate("GameWorld.Feature_dynasty_" + b + ".BlogUrl"), "_blank")
        }
    }
    ) : a.closeWindow("gameWorld")
}
;
window.gameWorldCtrl.$inject = ["$scope", "SessionService"];
window.gameRulesOverlayCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "HelpMenu.GameRules",
        inWindowPopupContentTemplate: "tpl/help/helpExternalContentOverlay.html"
    });
    var b = config.urlGameRules.replace("X", getLocaleRegion(getLocale(Travian.Language)));
    a.link = c.trustAsResourceUrl(b)
}
;
window.gameRulesOverlayCtrl.$inject = ["$scope", "$sce"];
window.imprintOverlayCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "HelpMenu.Imprint",
        inWindowPopupContentTemplate: "tpl/help/helpExternalContentOverlay.html"
    });
    var b = Settings.get(Travian.Player.data.playerId)
      , b = config.urlImprint.replace("XX", getLocaleLanguage(getLocale(b.data.lang)));
    a.link = c.trustAsResourceUrl(b)
}
;
window.imprintOverlayCtrl.$inject = ["$scope", "$sce"];
window.privacyOverlayCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "HelpMenu.Privacy",
        inWindowPopupContentTemplate: "tpl/help/helpExternalContentOverlay.html"
    });
    var b = Settings.get(Travian.Player.data.playerId)
      , b = config.urlPrivacy.replace("XX", getLocaleLanguage(getLocale(b.data.lang)));
    a.link = c.trustAsResourceUrl(b)
}
;
window.privacyOverlayCtrl.$inject = ["$scope", "$sce"];
window.termsAndConditionsOverlayCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "HelpMenu.AGB",
        inWindowPopupContentTemplate: "tpl/help/helpExternalContentOverlay.html"
    });
    var b = Settings.get(Travian.Player.data.playerId)
      , b = config.urlTermsAndConditions.replace("XX", getLocaleLanguage(getLocale(b.data.lang)));
    a.link = c.trustAsResourceUrl(b)
}
;
window.termsAndConditionsOverlayCtrl.$inject = ["$scope", "$sce"];
window.heroCtrl = function(a, c, b) {
    function f() {
        a.isSitter = c.K();
        a.hero = g.data;
        a.w.hero = a.hero
    }
    a.w.contentHeaderTemplate = "tpl/hero/partials/contentHeader.html";
    a.tabConfig.tabs = ["Inventory", "Attributes", "Auctions", "Adventures", "CardGame"];
    a.tabConfig.bodyTemplatePrefix = "tpl/hero/tabs/";
    a.tabConfig.routeNamedParam = "herotab";
    a.tabConfig.disableScrollingForTabs = ["Inventory", "Auctions", "Attributes", "CardGame"];
    a.hero = null;
    a.w.hero = a.hero;
    a.tribeId = c.p().data.tribeId;
    a.player = Player.get(c.getPlayerId());
    a.HeroItem = HeroItem;
    var g, e, h;
    a.buildViewModels = function() {
        a.inventory = [];
        a.heroEquipment = {};
        for (var b = null, c = {}, f = 0, n = 0; n < e.data.length; n++) {
            var q = e.data[n];
            q.data.inSlot == HeroItem.SLOT_BAG && (b = q.data);
            0 < q.data.inSlot && (a.heroEquipment[q.data.inSlot] = q,
            q.setUseInfos(g),
            q.data.inSlot == HeroItem.SLOT_BAG && (b = q.data));
            q = e.data[n].data.inventorySlotNr;
            0 < q && (c[q] = e.data[n],
            q > f && (f = q))
        }
        0 < f % 4 && (f += 4 - f % 4);
        f += 4;
        24 > f && (f = 24);
        a.bagItem = b;
        for (n = 1; n <= f; n++) {
            q = c[n],
            null != q ? (q.setUseInfos(g, a.heroEquipment),
            a.hero && (q.data.clickDisabled = q.data.notUsableItem || 0 == q.data.maxCanUse || q.data.usedPerDay >= q.data.maxPerDay,
            null != b && (0 < q.data.maxPerDay && 0 == q.data.inSlot && b.itemType == q.data.itemType && b.amount >= b.maxPerDay - b.usedPerDay) && (q.data.clickDisabled = !0))) : (q = new HeroItem,
            q.data.inventorySlotNr = n),
            a.inventory.push(q)
        }
        a.bagItem = b;
        h && (a.avatar = angular.copy(h.getViewModel()))
    }
    ;
    c.m(function() {
        g = Hero.get(c.getPlayerId());
        e = HeroItem.getCollection("own");
        h = HeroFace.get(c.getPlayerId());
        a.subscribe(g, f);
        a.subscribe(e, a.buildViewModels);
        a.subscribe(g, a.buildViewModels);
        a.subscribe(h, a.buildViewModels);
        a.buildViewModels()
    });
    b.$on("heroEditor.openOverlay", function() {
        a.inWindowPopupOpened || a.openOverlay("heroEditor", {})
    })
}
;
window.heroCtrl.$inject = ["$scope", "SessionService", "$rootScope"];
window.kingdomPublicProfileCtrl = function(a) {
    a.w.windowName = "Kingdom";
    a.kingdom = null;
    var c = a.getParam("kingdomId");
    a.kingdom = Kingdom.get(c);
    if ("undefined" == typeof c || null == c) {
        a.closeWindow("kingdom"),
        a.openWindow("society")
    }
    c == Travian.Player.data.kingdomId && (a.closeWindow("kingdom"),
    a.openWindow("society", {
        tab: "Kingdom"
    }))
}
;
window.kingdomPublicProfileCtrl.$inject = ["$scope"];
window.kingdomUnionSuccessCtrl = function(a, c) {
    a.w.windowName = "KingdomUnionSuccess.Title";
    a.ROLE_KING = Player.KINGDOM_ROLE_KING;
    a.ROLE_VICEKING = Player.KINGDOM_ROLE_VICEKING;
    c.m(function() {
        var b = Kingdom.get(Travian.Player.data.kingdomId)
          , c = b.getKing();
        a.kingPlayerId = c.playerId;
        a.kingPlayerName = c.name;
        b = b.getViceKing();
        a.vicekingPlayerId = b.playerId;
        a.vicekingPlayerName = b.name
    });
    a.openUnionsHelp = function() {
        a.openWindow("help", {
            pageId: "Kingdom_Unions"
        })
    }
}
;
window.kingdomUnionSuccessCtrl.$inject = ["$scope", "SessionService"];
window.heroQuickInfoCtrl = function(a, c, b) {
    function f() {
        c.heroQuickInfo.prestigeStars = g.data.stars
    }
    var g = null
      , e = null;
    c.heroQuickInfo = {};
    c.hero = null;
    b.m(function() {
        c.playerId = b.getPlayerId();
        c.hero = Hero.get(c.playerId);
        g = b.p();
        g.subscribe(f);
        c.hero.subscribe(function() {
            e = c.hero.data;
            c.heroQuickInfo.status = {
                alive: e.status != Hero.STATUS_DEAD && e.status != Hero.STATUS_REVIVING,
                dead: e.status == Hero.STATUS_DEAD,
                reviving: e.status == Hero.STATUS_REVIVING
            };
            var a = e.baseRegenerationRate
              , a = a + (parseInt(e.bonuses[HeroItem.BONUS_HEALTH_REGEN]) || 0);
            c.heroQuickInfo.healthRegeneration = a;
            var a = e.xp - e.xpThisLevel
              , b = e.xpNextLevel - e.xpThisLevel
              , f = Math.floor(100 * (a / b));
            c.heroQuickInfo.xpAchieved = a;
            c.heroQuickInfo.xpNeeded = b;
            c.heroQuickInfo.xpPerc = f
        })
    })
}
;
window.heroQuickInfoCtrl.$inject = ["$rootScope", "$scope", "SessionService"];
window.layoutHeaderCtrl = function(a, c, b, f, g, e, h, m) {
    function l() {
        a.activeButton = b.getParam("page")
    }
    function p(b) {
        if ("object" == typeof b) {
            var c = Ma(m.getActiveVillageId());
            a.villageCentered = c.x == b.x && c.y == b.y;
            requestAngularApply()
        }
    }
    a.buttons = ["village", "resources", "map"];
    a.setPage = function(b) {
        a.activeButton != b || ("map" != b || a.villageCentered) || h.Tf(m.getActiveVillageId());
        a.openPage(b)
    }
    ;
    f.$on("sessionRightsChanged", function() {
        g(function() {
            a.goldActive = c.hasRight(Session.RIGHT_SPEND_GOLD)
        }, 3E3)
    });
    a.$on("urlChanged", function() {
        l()
    });
    c.m(function() {
        var b = c.getPlayerId()
          , f = Player.get(b);
        a.player = f;
        a.goldActive = c.hasRight(Session.RIGHT_SPEND_GOLD);
        f.subscribe(function() {
            a.silver && a.silver != f.data.silver && e.cc("#topMenu #subNavigation .subButton.silver i", "silverChanged", "animation_silver_large_illu");
            a.silver = f.data.silver;
            a.gold && a.gold != f.data.gold && e.cc("#topMenu #subNavigation .subButton.gold i", "goldChanged", "animation_gold_large_illu");
            a.gold = f.data.gold;
            f.data.hasNoobProtection && (a.population && a.population < f.data.population && f.data.population < Travian.Config.noobProtection.populationLimit && 30 >= Travian.Config.noobProtection.populationLimit - f.data.population) && (digestScope(a),
            e.cc("#topMenu #subNavigation .populationWarningIndicator", "populationWarningIndicator populationChanged", "animation_exclamationMark_large_illu", !0));
            a.population = f.data.population
        })
    });
    h.dj(p);
    p(h.sc());
    l()
}
;
window.layoutHeaderCtrl.$inject = "$scope SessionService RoutingService $rootScope $timeout AnimationService MapService VillageService".split(" ");
window.notificationCtrl = function(a, c, b, f, g, e, h) {
    a.countLimit = 99;
    a.notifications = f.qf();
    var m = [Notifications.HELP_CENTER_MESSAGE_RECEIVED, Notifications.FRIEND_REQUEST_RECEIVED].concat(Notifications.AUTO_OPEN);
    a.notifications.subscribe(function() {
        for (var b in a.notifications.data) {
            0 <= Notifications.AUTO_OPEN.indexOf(a.notifications.data[b].data.type) && a.openNotification(a.notifications.data[b].data.type)
        }
    });
    a.notificationsFilter = function(a) {
        return -1 === m.indexOf(Number(a.data.type))
    }
    ;
    c.m(function() {
        c.K() || c.Ia() || (m = m.filter(function(a) {
            return a != Notifications.FRIEND_REQUEST_RECEIVED && a != Notifications.HELP_CENTER_MESSAGE_RECEIVED
        }));
        requestAngularApply()
    });
    a.openNotification = function(f) {
        for (var m = null, n = 0; n < a.notifications.data.length; n++) {
            var q = a.notifications.data[n];
            q.data.type == f && (!q.deleted || q.deleted < q.data.time) && (m = q)
        }
        if (null != m) {
            q = !1;
            if (f >= Notifications.TRIBUTE_COLLECTED && f < Notifications.CELEBRATION_STARTED || f > Notifications.REPORT_SHARED && f < Notifications.REPORT_VACATION || f == Notifications.USED_ITEM_ARTWORK || f == Notifications.CELEBRATION_STARTED_POINTS_GAINED || f == Notifications.CELEBRATION_STARTED_IN_QUEUE || f == Notifications.KINGDOM_CHANGED_KING || f == Notifications.CAN_INVITE_NEUTRAL_GOVERNOR || f == Notifications.PEACE_OFFER || f == Notifications.UNITED_KINGDOM_VICEKING_RESIGNS || f == Notifications.UNITED_KINGDOM_DISSOLVES || f == Notifications.UNION_REQUEST_RECEIVED || f == Notifications.KINGDOM_UNION_AVAILABLE || f == Notifications.KINGDOM_UNIFIED || f == Notifications.GAINED_FIREWORKS || f == Notifications.PAYMENT_PURCHASE || f == Notifications.OBTAINED_ITEM || f == Notifications.HALLOWEEN_BOOST_ENDS || f == Notifications.TIMER_HALLOWEEN_BOOST_RUNS_OUT || f == Notifications.AUTO_EXTEND_HALLOWEEN_BOOST_NOT_ENOUGH_GOLD || f == Notifications.ITEM_TIER_AVAILABLE || f == Notifications.HEALING_TENT_FULL) {
                q = !0
            }
            n = !1;
            0 <= [Notifications.REPORT_FARMLIST_RAID, Notifications.REPORT_FARMLIST_COMPLETED_WITHOUT_LOSSES, Notifications.REPORT_FARMLIST_COMPLETED_WITH_LOSSES, Notifications.REPORT_FARMLIST_COMPLETED_WITH_FULL_LOSSES].indexOf(f) && (q = !1,
            n = !0);
            if (q) {
                if (f == Notifications.SOCIETY_INVITATION_RECEIVED || f == Notifications.DUKE_REQUEST_RECEIVED || f == Notifications.KING_REQUEST_RECEIVED || f == Notifications.UNION_REQUEST_RECEIVED) {
                    n = c.getPlayerId(),
                    0 == Player.get(n).data.kingdomId && f != Notifications.SOCIETY_INVITATION_RECEIVED ? a.openWindow("society", {
                        tab: "Kingdom"
                    }) : (n = "Kingdom",
                    q = "kingdomInvitation",
                    f == Notifications.SOCIETY_INVITATION_RECEIVED && (n = "SecretSociety",
                    q = "secretSocietyInvitation"),
                    b.Hi(n, q, function() {
                        a.openWindow("infoPopup", {}, {
                            context: "EmbassyNotFound"
                        })
                    }))
                }
                switch (f) {
                case Notifications.FRIEND_REQUEST_RECEIVED:
                    a.openWindow("society", {
                        tab: "Friends"
                    });
                    break;
                case Notifications.ACHIEVEMENT:
                    a.openWindow("achievementNotifications", {});
                    break;
                case Notifications.AUCTION_WON:
                    ;
                case Notifications.AUCTION_OVERBID:
                    a.openWindow("hero", {
                        herotab: "Auctions",
                        subtab: "Bids"
                    });
                    break;
                case Notifications.RES_BONUS_ENDS:
                    ;
                case Notifications.TIMER_RES_BONUS_RUNS_OUT:
                    ;
                case Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD:
                    ;
                case Notifications.CROP_BONUS_ENDS:
                    ;
                case Notifications.TIMER_CROP_BONUS_RUNS_OUT:
                    ;
                case Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD:
                    ;
                case Notifications.PLUS_BONUS_ENDS:
                    ;
                case Notifications.TIMER_PLUS_RUNS_OUT:
                    ;
                case Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD:
                    ;
                case Notifications.HALLOWEEN_BOOST_ENDS:
                    ;
                case Notifications.TIMER_HALLOWEEN_BOOST_RUNS_OUT:
                    ;
                case Notifications.AUTO_EXTEND_HALLOWEEN_BOOST_NOT_ENOUGH_GOLD:
                    a.openWindow("shop", {
                        tab: "Boosts"
                    });
                    break;
                case Notifications.KINGDOM_CHANGED:
                    ;
                case Notifications.UNITED_KINGDOM_VICEKING_RESIGNS:
                    a.openWindow("society", {
                        tab: "Kingdom"
                    });
                    break;
                case Notifications.UNITED_KINGDOM_DISSOLVES:
                    a.openWindow("help", {
                        pageId: "Kingdom_Unions"
                    });
                    break;
                case Notifications.CAN_INVITE_NEUTRAL_GOVERNOR:
                    a.openWindow("society", {
                        tab: "Kingdom",
                        subtab: "Tributes"
                    });
                    break;
                case Notifications.KINGDOM_OASIS_WON:
                    ;
                case Notifications.KINGDOM_OASIS_LOST:
                    a.openPage("map", "centerId", m.data.itemId + "_" + (new Date).getTime());
                    break;
                case Notifications.OASIS_BONUS_CHANGED:
                    a.openWindow("mapCellDetails", {
                        cellId: m.data.itemId
                    });
                    break;
                case Notifications.HELP_CENTER_MESSAGE_RECEIVED:
                    window.open("/api/forwardToHelpcenter.php?sid=" + c.rb() + "&ticketId=" + m.data.itemId, "_blank");
                    break;
                case Notifications.ADDED_CARDGAME_FREE_ROLL:
                    a.openWindow("hero", {
                        herotab: "CardGame"
                    });
                    break;
                case Notifications.GAINED_FIREWORKS:
                    a.openWindow("gameWorld", {
                        tab: "Fireworks"
                    });
                    break;
                case Notifications.REFERRAL_REWARD_CAN_COLLECT:
                    a.openWindow("shop", {
                        tab: "Invite",
                        subtab: "InvitationOverview"
                    });
                    break;
                case Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE:
                    ;
                case Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE_SOON:
                    b.S("type" + Building.TYPE.RESIDENCE, function(b) {
                        null != b && a.openWindow("building", {
                            location: b.data.locationId,
                            tab: "CulturePoints"
                        })
                    });
                    break;
                case Notifications.NEW_ROBBER_CAMPS:
                    a.openPage("map", "centerId", m.data.itemId + "_" + (new Date).getTime());
                    break;
                case Notifications.DUKE_REQUEST_ACCEPTED:
                    ;
                case Notifications.DUKE_REQUEST_DECLINED:
                    ;
                case Notifications.DUKE_ABDICATED:
                    ;
                case Notifications.DUKE_DISMISSED:
                    a.openWindow("society", {
                        tab: "Kingdom",
                        subtab: "Info"
                    });
                    break;
                case Notifications.KINGDOM_CHANGED_KING:
                    a.openWindow("society", {
                        tab: "Kingdom",
                        subtab: "Intern"
                    });
                    break;
                case Notifications.PEACE_OFFER:
                    g.startDialog(QuestGiver.ENVOY, 102, 1, 0);
                    break;
                case Notifications.KINGDOM_UNIFIED:
                    a.openWindow("kingdomUnionSuccess");
                    break;
                case Notifications.KINGDOM_UNION_AVAILABLE:
                    a.openWindow("help", {
                        pageId: "Kingdom_Unions"
                    });
                    break;
                case Notifications.PAYMENT_PURCHASE:
                    (function u() {
                        a.windows.shop ? (a.closeWindow("shop"),
                        setTimeout(u, 50)) : a.openWindow("shop", {
                            tab: m.data.itemId ? "Deals" : "Gold"
                        }, {
                            purchasedProductData: m.data
                        })
                    }
                    )();
                    return;
                case Notifications.OBTAINED_ITEM:
                    a.openWindow("obtainedItemNotification", {}, {
                        notificationData: m.data
                    });
                    return;
                case Notifications.ITEM_TIER_AVAILABLE:
                    a.openWindow("hero", {
                        herotab: "Auctions",
                        subtab: "Buy"
                    });
                    break;
                case Notifications.HEALING_TENT_FULL:
                    h.o("villId", m.data.itemId),
                    e.ea(m.data.itemId),
                    b.S("type" + Building.TYPE.HEALING_TENT, function(b) {
                        null != b && a.openWindow("building", {
                            location: b.data.locationId,
                            tab: "Healing"
                        })
                    })
                }
            } else {
                var r = Report.COLLECTION_PERSONAL
                  , q = "Own";
                m.data.type == Notifications.REPORT_SHARED_KINGDOM && (q = "Kingdom",
                r = Report.COLLECTION_KING);
                m.data.type == Notifications.REPORT_SHARED_SOCIETIES && (q = "SecretSociety",
                r = Report.COLLECTION_SOCIETY);
                if (1 == m.data.count) {
                    a.openWindow("reports", {
                        tab: q,
                        reportId: m.data.itemId,
                        collection: r,
                        overlayreports: "reportSingle"
                    })
                } else {
                    if (10 == f) {
                        a.openWindow("reports", {
                            tab: "Own",
                            reportTypes: "10,11,12,13,14",
                            lastTime: m.data.time
                        })
                    } else {
                        r = m.data.type;
                        if (m.data.type == Notifications.REPORT_SHARED_OWN || m.data.type == Notifications.REPORT_SHARED_KINGDOM || m.data.type == Notifications.REPORT_SHARED_SOCIETIES) {
                            r = Notifications.REPORT_SHARED
                        }
                        n && (r = Notifications.REPORT_FARMLIST_RAID);
                        a.openWindow("reports", {
                            tab: q,
                            reportTypes: r,
                            lastTime: m.data.time
                        })
                    }
                }
            }
            a.deleteNotification(f)
        }
    }
    ;
    a.deleteNotification = function(a) {
        Travian.writeRequest("player/deleteNotification", {
            type: a
        })
    }
    ;
    a.deleteAllNotifications = function() {
        Travian.writeRequest("player/deleteAllNotifications")
    }
}
;
window.notificationCtrl.$inject = "$scope SessionService BuildingService NotificationService TutorialService VillageService RoutingService".split(" ");
window.notificationFlashCtrl = function(a, c, b, f, g, e) {
    a.kingdomRole = {
        governor: Player.KINGDOM_ROLE_GOVERNOR,
        king: Player.KINGDOM_ROLE_KING,
        duke: Player.KINGDOM_ROLE_DUKE
    };
    a.notifications = b.Nh();
    a.chatNotifications = b.Jh();
    a.close = function(a) {
        b.remove(a)
    }
    ;
    a.chatNotificationOver = function(a) {
        a["class"] = "fadeIn fullOpacity";
        b.jd(a)
    }
    ;
    a.chatNotificationOut = function(a) {
        a["class"] = "fadeIn";
        b.setTimeout(a)
    }
    ;
    a.openConversation = function(a) {
        c.openWindow("igm", {}, {
            roomId: a
        })
    }
    ;
    a.closeChatNotification = function(a) {
        b.jd(a);
        b.remove(a, Notifications.TYPE_CHAT)
    }
    ;
    a.$on("chatInboxUpdated", function(a, c) {
        var e = null
          , f = null
          , n = {}
          , q = {}
          , f = g.qb(c.roomId)
          , e = f.subscribe(function() {
            var a = f.data[f.data.length - 1];
            if (a.data.playerId != Travian.Player.data.playerId) {
                var c = {
                    playerId: a.data.playerId,
                    playerName: a.data.playerName,
                    roomId: a.data.roomId,
                    text: a.data.text,
                    timestamp: a.data.timestamp
                };
                void 0 !== n[a.data.playerId] && q[a.data.playerId].unsubscribe(n[a.data.playerId]);
                q[a.data.playerId] = ChatUser.get(a.data.playerId);
                n[a.data.playerId] = q[a.data.playerId].subscribe(function(a) {
                    c.kingdomRole = a.data.kingdomRole;
                    c.kingdomId = a.data.kingdomId;
                    b.Wg(c);
                    q[a.data.playerId].unsubscribe(n[a.data.playerId]);
                    delete n[a.data.playerId]
                });
                q[a.data.playerId].filled && (q[a.data.playerId].unsubscribe(n[a.data.playerId]),
                delete n[a.data.playerId]);
                f.unsubscribe(e)
            }
        })
    });
    a.$on(Notifications.TYPE_FLASH, function(a, c) {
        var l = "information"
          , g = 0
          , n = "";
        if (isNaN(c)) {
            if (c.notificationId == Notifications.PLAYER_IS_ATTACKED && c.option == Travian.Player.data.name) {
                return
            }
            n = Travian.translate("Notification_" + c.notificationId, {
                option: c.option
            });
            g = c.notificationId
        } else {
            n = Travian.translate("Notification_" + c),
            g = c
        }
        f.Ud(c);
        var q = [Notifications.ATTACK_VILLAGE_STARTED, Notifications.AUCTION_OVERBID, Notifications.CELEBRATION_ENDED, Notifications.PLAYER_IS_ATTACKED];
        "object" == typeof c && c.type == Notifications.ACHIEVEMENT ? e.showScreenFlashNotification("achievement", {
            key: c.key,
            special: c.special,
            level: c.level,
            reward: c.reward,
            extraData: c.extraData
        }) : (0 <= q.indexOf(g) && (l = "warning"),
        b.lb(n, l, 4E3))
    })
}
;
window.notificationFlashCtrl.$inject = "$scope $rootScope NotificationService AudioService ChatService AnimationService".split(" ");
window.notificationHelpCtrl = function(a, c, b, f) {
    var g = new IngameHelp;
    c.m(function() {
        a.settings = Settings.get(c.getPlayerId());
        a.helpNotifications = Notifications.getCollection(Notifications.TYPE_IN_GAME_HELP);
        a.helpNotifications.subscribe(function() {
            a.helpTopic = null;
            0 < a.helpNotifications.data.length && (a.helpTopic = a.helpNotifications.data[a.helpNotifications.data.length - 1].data.type,
            g.getById(a.helpTopic) || (a.closeHelpNotification(),
            a.helpTopic = null))
        })
    });
    a.closeHelpNotification = function() {
        Travian.writeRequest("player/deleteNotification", {
            type: a.helpTopic,
            notificationType: Notifications.TYPE_IN_GAME_HELP
        })
    }
    ;
    a.openHelpNotification = function() {
        null != a.helpTopic && (b.xa("help") ? f.o("pageId", a.helpTopic) : a.openWindow("help", {
            pageId: a.helpTopic
        }),
        Travian.writeRequest("player/deleteNotification", {
            type: a.helpTopic,
            notificationType: Notifications.TYPE_IN_GAME_HELP
        }))
    }
}
;
window.notificationHelpCtrl.$inject = ["$scope", "SessionService", "WindowService", "RoutingService"];
window.notificationTimedCtrl = function(a, c, b, f, g) {
    function e() {
        "questBook" == f.getParam("window") ? (g.cancel(l),
        l = g(e, 500)) : (a.openWindow("welcomePackage"),
        g.cancel(l))
    }
    function h() {
        if ("undefined" != typeof a.player && "undefined" != typeof a.notifications) {
            for (var b = 0; b < a.notifications.data.length; b++) {
                var c = f.getParam("window");
                a.notifications.data[b].data.icon = Notifications.getNotificationIcon(a.notifications.data[b].data.type, "medium");
                a.notifications.data[b].data.type != Notifications.GLOBAL_WORLD_ENDED || void 0 !== c && c.ek("worldEndedModal") || a.openWindow("worldEndedModal");
                -1 == a.player.data.uiStatus && a.notifications.data[b].data.type == Notifications.COOP_PACKAGE_GRANTED && ("questBook" != c ? a.openWindow("welcomePackage") : l = g(e, 500))
            }
        }
    }
    var m = [Notifications.TIMER_DELETION, Notifications.TIMER_PLUS_RUNS_OUT, Notifications.TIMER_GOLD_PROMOTION, Notifications.TIMER_RES_BONUS_RUNS_OUT, Notifications.TIMER_CROP_BONUS_RUNS_OUT, Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD, Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD, Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD, Notifications.TIMER_NATAR_SPIES_ATTACK, Notifications.GLOBAL_WORLD_ENDED, Notifications.COOP_PACKAGE_GRANTED, Notifications.SYSTEM_MESSAGE, Notifications.SYSTEM_MESSAGE_ANNOUNCEMENT, Notifications.TIMER_VACATION_ACTIVATION, Notifications.TIMER_VACATION_MODE, Notifications.TIMER_VACATION_BOOST, Notifications.KINGDOM_UNION_AVAILABLE_SOON, Notifications.TIMER_HALLOWEEN_BOOST_RUNS_OUT]
      , l = null
      , p = null;
    c.m(function() {
        a.notifications = Notifications.getCollection(Notifications.TYPE_TIMED);
        a.notifications.subscribe(h);
        null == p && (p = a.player.subscribe(h));
        var c = b.wa();
        "undefined" != typeof c.getMarketingTracking && (c = c.getMarketingTracking(),
        window.mellonBridgeInit(c))
    });
    a.openNotification = function(b) {
        if (a.isClickable(b)) {
            switch (b) {
            case Notifications.TIMER_DELETION:
                a.openWindow("profile", {
                    profileTab: "settings",
                    prosubtab: "Avatar",
                    playerId: Travian.Player.data.playerId
                });
                break;
            case Notifications.TIMER_GOLD_PROMOTION:
                a.openWindow("shop", {
                    tab: "Gold"
                });
                break;
            case Notifications.TIMER_PLUS_RUNS_OUT:
                ;
            case Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD:
                ;
            case Notifications.TIMER_RES_BONUS_RUNS_OUT:
                ;
            case Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD:
                ;
            case Notifications.TIMER_CROP_BONUS_RUNS_OUT:
                ;
            case Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD:
                ;
            case Notifications.TIMER_HALLOWEEN_BOOST_RUNS_OUT:
                ;
            case Notifications.AUTO_EXTEND_HALLOWEEN_BOOST_NOT_ENOUGH_GOLD:
                a.openWindow("shop", {
                    tab: "Boosts"
                });
                break;
            case Notifications.TIMER_NATAR_SPIES_ATTACK:
                a.openPage("map", "centerId", xy2id(0, 0) + "_" + (new Date).getTime());
                break;
            case Notifications.GLOBAL_WORLD_ENDED:
                a.openWindow("worldEndedModal");
                break;
            case Notifications.COOP_PACKAGE_GRANTED:
                a.openWindow("welcomePackage");
                break;
            case Notifications.SYSTEM_MESSAGE:
                ;
            case Notifications.SYSTEM_MESSAGE_ANNOUNCEMENT:
                for (var c = 0, e = 0; e < a.notifications.data.length; e++) {
                    var f = a.notifications.data[e];
                    if (f.data.type === b) {
                        c = f.data.itemId;
                        break
                    }
                }
                a.openWindow("systemMessage", {
                    type: c
                });
                break;
            case Notifications.TIMER_VACATION_ACTIVATION:
                ;
            case Notifications.TIMER_VACATION_MODE:
                ;
            case Notifications.TIMER_VACATION_BOOST:
                a.openWindow("profile", {
                    profileTab: "settings",
                    prosubtab: "Gameplay",
                    playerId: Travian.Player.data.playerId
                });
                break;
            case Notifications.KINGDOM_UNION_AVAILABLE_SOON:
                a.openWindow("help", {
                    pageId: "Kingdom_Unions"
                });
                break;
            case Notifications.RESERVED_RELOCATION:
                a.openWindow("society", {
                    tab: "Kingdom",
                    overlaysociety: "kingdomInvitation"
                })
            }
        }
    }
    ;
    a.openActivation = function() {
        var a = b.wa().getActivation();
        b.Fa(a).open()
    }
    ;
    a.isClickable = function(a) {
        return -1 < m.indexOf(a)
    }
    ;
    if (Travian.Config.challenge) {
        var n = function() {
            Travian.request("player/getUncollectedChallengeReward", {}, function(b) {
                a.challengeRewardCount = b.data
            })
        };
        c.m(n);
        a.$on("challengeAchieved", n);
        a.$on("challengeCollected", function() {
            a.challengeRewardCount--
        })
    }
    a.gameWorldType = Gameworld.getGameWorldType()
}
;
window.notificationTimedCtrl.$inject = ["$scope", "SessionService", "MellonService", "RoutingService", "$timeout"];
window.populationCtrl = function(a, c, b) {
    function f() {
        null != h && h.unsubscribe(m);
        h = c.i();
        m = h.subscribe(e);
        l = b.H([h.data.villageId], [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING, Troops.COLLECTION_WOUNDED], g, a)
    }
    function g() {
        if (Travian.Player) {
            var b, c, e = 0, f = h.data.villageId;
            if (null != l) {
                var m = l.v(null, [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_WOUNDED]);
                for (b = 0; b < m.length; b++) {
                    c = m[b].data,
                    e += c.supplyTroops
                }
                m = l.v(null, [Troops.COLLECTION_ELSEWHERE]);
                for (b = 0; b < m.length; b++) {
                    c = m[b].data,
                    "trap" == c.status && (e += c.supplyTroops),
                    "support" == c.status && c.villageIdSupply == f && (e += c.supplyTroops)
                }
                m = l.v(null, [Troops.COLLECTION_MOVING]);
                for (b = 0; b < m.length; b++) {
                    c = m[b].data,
                    c.playerId == Travian.Player.data.playerId && c.villageIdSupply == f && (e += c.supplyTroops)
                }
                a.cropConsumption = e
            }
        }
    }
    function e() {
        a.population = h.data.supplyBuildings;
        a.supply = h.data.supplyBuildings
    }
    a.Building = Building;
    a.cropConsumption = 0;
    var h = null
      , m = null
      , l = null;
    f();
    a.$on("activeVillageChanged", f)
}
;
window.populationCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.serverTimeCtrl = function(a, c) {
    a.settings = Settings.get(c.getPlayerId());
    a.timeTypeDropdown = {
        bodyClass: "timeType",
        selected: 0,
        options: [Settings.TIME_TYPES.UTC, Settings.TIME_TYPES.LOCAL, Settings.TIME_TYPES.GAMEWORLD],
        callback: function() {
            Travian.writeRequest("player/changeTimeType", {
                timeType: a.timeTypeDropdown.selected
            })
        }
    };
    a.settings.subscribe(function() {
        a.timeTypeDropdown.selected = a.settings.data.timeType
    });
    Travian.tick.bind(function() {
        Math.round(a.serverTime) !== Math.round(a.currentServerTime) && (a.serverTime = a.currentServerTime,
        a.$$phase || a.$digest())
    })
}
;
window.serverTimeCtrl.$inject = ["$scope", "SessionService"];
window.sidebarMenuCtrl = function(a, c, b, f, g, e) {
    function h() {
        if (0 < p.data.kingdomId) {
            a.treasures = KingdomStats.get(p.data.kingdomId);
            var b = Kingdom.get(p.data.kingdomId);
            a.victoryPoints = b.data.victoryPoints || 0
        }
    }
    function m() {
        if (p && n) {
            r = n.Ne(q);
            a.total = {
                kingdom: 0
            };
            a.attacksCounter = 0;
            for (var b in r) {
                for (var c in r[b].villages) {
                    var f = r[b].villages[c];
                    null != t && (e.cancel(t),
                    t = null);
                    if (!1 === f.kingdom) {
                        t = e(m, 100);
                        break
                    }
                    a.total.kingdom++
                }
            }
            a.show.kingdom && (a.attacksCounter = a.total.kingdom)
        }
    }
    function l() {
        for (var b, c, e = 0, f = [u, w], l = 0; l < f.length; l++) {
            var h = f[l];
            if (null != h) {
                for (b = 0; b < h.data.length; b++) {
                    c = h.data[b],
                    Quest.isAdventure(c.data.id) || (Quest.isEnvoyQuest(c.data.id) || c.data.status != Quest.STATUS_ACTIVATABLE && c.data.status != Quest.STATUS_DONE) || e++
                }
            }
        }
        a.questBookCount = e
    }
    var p = null, n = null, q, r = {}, t = null;
    a.attacksCounter = 0;
    a.members = {
        kingdom: {}
    };
    a.total = {
        kingdom: 0
    };
    a.show = {
        kingdom: !0
    };
    a.chat = g.getViewModel();
    a.animateIgm = !1;
    a.$on("chatInboxUpdated", function() {
        a.animateIgm || (a.animateIgm = !0,
        e(function() {
            a.animateIgm = !1
        }, 1E3))
    });
    a.attackLimit = 99;
    var u = null
      , w = null;
    b.m(function() {
        p = b.p();
        p.subscribe(m);
        p.subscribe(h);
        a.settings = Settings.get(p.data.playerId);
        a.settings.subscribe(function() {
            a.show = a.settings.getAttackSettings();
            m()
        });
        n = f.H(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], m, a);
        q = c.getActiveVillageId();
        u = Quest.getCollection();
        w = Quest.getCollection(QuestGiver.DAILY);
        Cache.ja([u, w], l)
    });
    a.$on("activeVillageChanged", function() {
        q = c.getActiveVillageId()
    });
    a.$on("$destroy", function() {
        null != t && (e.cancel(t),
        t = null)
    })
}
;
window.sidebarMenuCtrl.$inject = "$scope VillageService SessionService TroopsService ChatService $timeout".split(" ");
window.troopMovementsCtrl = function(a, c, b, f) {
    function g() {
        l = c.getActiveVillageId();
        0 != l && (p = c.i(),
        e())
    }
    function e() {
        if (0 != l && null != m) {
            for (var b = {
                incoming_attacks: [],
                incoming_support: [],
                incoming_adventure: [],
                incoming_tribute: [],
                incoming_merchant: [],
                incoming_merchant_return: [],
                incoming_treasureResources: [],
                incoming_oasisResources: [],
                "return": [],
                incoming_healing: [],
                incoming_wounded: [],
                outgoing_attacks: [],
                outgoing_support: [],
                outgoing_settlement: [],
                outgoing_adventure: [],
                outgoing_merchant: [],
                outgoing_merchant_return: []
            }, c = function(a, b) {
                return a.data.movement.timeFinish >= b.data.movement.timeFinish ? a.data.movement.timeFinish == b.data.movement.timeFinish && a.data.troopId < b.data.troopId ? -1 : 1 : -1
            }, e = m.v([l], [Troops.COLLECTION_MOVING]), g, p, r = 0; r < e.length; r++) {
                g = e[r],
                p = g.getMovementGroup(l),
                g.fetchNames(),
                null !== p && "undefined" != typeof b[p] && (b[p].movementIcon = Troops.MOVEMENT_ICON[g.data.movement.movementType],
                b[p].push(g))
            }
            null != n && (f.cancel(n),
            n = null);
            g = e = null;
            for (p in b) {
                b[p].sort(c),
                0 < b[p].length && 0 > p.indexOf("merchant") && (r = b[p][0],
                (e > r.data.movement.timeFinish || null == e) && 0 < r.data.movement.timeFinish && (e = r.data.movement.timeFinish,
                g = r))
            }
            null != g && h(g, e - Travian.ServerTime);
            3 <= b.outgoing_attacks.length && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_FARM_LISTS);
            q = [];
            for (var D in b) {
                c = b[D],
                c.name = D,
                -1 !== c.name.indexOf("incoming") || -1 !== c.name.indexOf("return") ? ("incoming_merchant" == c.name || "incoming_tribute" == c.name || "incoming_treasureResources" == c.name ? c.tooltipTemplate = "tpl/mainlayout/partials/troopMovementIncomingTradeTooltip.html" : (c.tooltipTemplate = "tpl/mainlayout/partials/troopMovementIncomingTooltip.html",
                -1 !== c.name.indexOf("return") && (c.tooltipTemplate = "tpl/mainlayout/partials/troopMovementReturnTooltip.html")),
                c.movementDirection = "incoming") : (c.tooltipTemplate = "outgoing_merchant" == c.name ? "tpl/mainlayout/partials/troopMovementOutgoingTradeTooltip.html" : "tpl/mainlayout/partials/troopMovementOutgoingTooltip.html",
                c.movementDirection = "outgoing"),
                0 < c.length && q.push(c)
            }
            a.troopMovements = q
        }
    }
    function h(a, b) {
        n = f(function() {
            Travian.sanityCheck({
                villageId: l,
                eventType: "Troops",
                eventId: a.data.troopId,
                eventData: a.data
            })
        }, 1E3 * (b + 300))
    }
    a.troopMovements = [];
    a.troopMovementLimit = 999;
    var m = null
      , l = 0
      , p = null
      , n = null
      , q = [];
    a.openRallypoint = function(b) {
        "undefined" != typeof b ? (b = b.charAt(0).toUpperCase() + b.slice(1),
        a.openWindow("building", {
            location: 32,
            tab: "Overview",
            subtab: b
        })) : a.openWindow("building", {
            location: 32
        });
        return !1
    }
    ;
    a.$on("activeVillageChanged", g);
    g();
    var m = b.H(null, [Troops.COLLECTION_MOVING], e, a)
      , p = c.i()
      , r = p.subscribe(e);
    a.$on("$destroy", function() {
        p.unsubscribe(r)
    })
}
;
window.troopMovementsCtrl.$inject = ["$scope", "VillageService", "TroopsService", "$timeout"];
window.troopsStationedCtrl = function(a, c, b, f, g) {
    function e() {
        n = b.getActiveVillageId();
        var a = g.p();
        0 != n && null != a && (l = a.data.tribeId,
        m())
    }
    function h(a, b) {
        return parseInt(b.amount) > parseInt(a.amount) ? 1 : parseInt(b.amount) < parseInt(a.amount) ? -1 : 0
    }
    function m() {
        for (var b = 0; b < t.length; b++) {
            t[b].heroObj.unsubscribe(t[b].heroObjSubscription)
        }
        t = [];
        var e = {
            sum: 0,
            distribution: {
                support: [],
                others: {
                    sum: 0,
                    count: 0
                }
            }
        }
          , b = {
            sum: 0,
            tribe: "",
            units: []
        };
        q.length = 0;
        q = [null, angular.copy(b), angular.copy(b), angular.copy(b), angular.copy(b)];
        b = p.v([n]);
        $.each(b, function(b, f) {
            var m = f.data
              , g = m.tribeId
              , n = m.status
              , p = m.playerId
              , r = m.villageId;
            q[g].tribeId = g;
            q[g].tribe = Player.TRIBE_NAME[g];
            $.each(f.data.units, function(a, b) {
                var c = q[g].units[a] || angular.copy(e);
                c.sum += parseInt(b);
                q[g].sum += parseInt(b);
                var f = {
                    player: p,
                    village: r,
                    amount: b
                };
                n == Troops.STATUS_HOME ? c.distribution.own = f : c.distribution.support.push(f);
                c.distribution.support.sort(h);
                c.distribution.support.length > (g == l ? 2 : 3) && (f = c.distribution.support.pop(),
                c.distribution.others.sum += parseInt(f.amount),
                c.distribution.others.count++);
                q[g].units[a] = c
            });
            if ("undefined" != typeof q[g].units && "undefined" != typeof q[g].units[Troops.TYPE_HERO]) {
                q[g].unitValues = {};
                q[g].unitValues[Troops.TYPE_HERO] = {
                    attack: -1,
                    defence: -1,
                    defenceCavalry: -1
                };
                "undefined" != typeof f.data.units && ("undefined" != typeof f.data.units[Troops.TYPE_HERO] && p != Travian.Player.data.playerId) && Cache.B("Hero:" + p);
                var u = Hero.get(p)
                  , m = u.subscribe(function(b, e) {
                    c(function() {
                        for (var c = null, f = 0; f < a.troopsStationed.length; f++) {
                            a.troopsStationed[f] && a.troopsStationed[f].tribeId == e && (c = f)
                        }
                        if (null !== c) {
                            var f = -1
                              , l = !1;
                            b == Travian.Player.data.playerId && (a.troopsStationed[c].units[Troops.TYPE_HERO] && 1 == a.troopsStationed[c].units[Troops.TYPE_HERO].sum && (f = parseInt(u.data.fightStrength + (u.data.bonuses[HeroItem.BONUS_FIGHT_STRENGTH] || 0), 10)),
                            "undefined" !== typeof a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.own && (a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.own.heroLvl = u.data.level,
                            l = !0));
                            if (!l) {
                                for (l = 0; l < a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.support.length; l++) {
                                    a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.support[l].player == b && (a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.support[l].heroLvl = u.data.level)
                                }
                            }
                            a.troopsStationed[c].unitValues[Troops.TYPE_HERO] = {
                                attack: f,
                                defence: f,
                                defenceCavalry: f
                            }
                        }
                    })
                }
                .bind(this, p, g));
                t.push({
                    heroObj: u,
                    heroObjSubscription: m
                })
            }
        });
        q[0] = q[l];
        q.splice(l, 1);
        a.troopsStationed = q;
        a.openGroup()
    }
    a.troopsStationed = [];
    a.troopsStationedLimit = 99;
    a.Troops = Troops;
    a.troopConfig = Travian.Config.troopConfig;
    a.heroFightStrength = 0;
    var l = null
      , p = null
      , n = null
      , q = []
      , r = {}
      , t = [];
    a.openGroup = function(b) {
        if ("undefined" != typeof b) {
            return 0 < a.troopsStationed[b].sum && (b in r || (r[b] = !1),
            r[b] = !r[b]),
            a.groupsStatus = r,
            requestAngularApply(),
            !1
        }
    }
    ;
    a.openRallypoint = function() {
        a.openWindow("building", {
            location: 32
        });
        return !1
    }
    ;
    a.getTroopId = function(a, b) {
        return b == Troops.TYPE_HERO ? "hero" : nrToUnitId(b, a)
    }
    ;
    p = f.H(null, [Troops.COLLECTION_STATIONARY], m, a);
    a.$on("activeVillageChanged", e);
    a.$on("$destroy", function() {
        for (var a = 0; a < t.length; a++) {
            t[a].heroObj.unsubscribe(t[a].heroObjSubscription)
        }
    });
    e()
}
;
window.troopsStationedCtrl.$inject = ["$scope", "$timeout", "VillageService", "TroopsService", "SessionService"];
window.maintenanceCtrl = function(a) {
    a.w.windowName = "Maintenance";
    a.maintenance = Gameworld.get();
    a.openDiscord = function() {
        window.open(Travian.Config.discordUrl, "_blank")
    }
    ;
    var c = null;
    a.subscribe(a.maintenance, function() {
        a.maintenanceText = bbCodeParser(a.maintenance.data.messageText, !0).split("{{discordButton}}");
        null == c ? (c = a.maintenance.hasMaintenance()) || a.closeWindow("maintenance") : !0 != c || a.maintenance.hasMaintenance() || window.setTimeout(function() {
            window.location.href = "/"
        }, 1E3 + 6E4 * Math.random())
    })
}
;
window.maintenanceCtrl.$inject = ["$scope", "RoutingService", "SessionService", "$rootScope"];
window.manualBuildingsCtrl = function(a) {
    var c = 0;
    a.showOverview = !0;
    var b = Travian.Config.buildingConfig
      , f = [0];
    delete b[0];
    Travian.Config.teahouse ? delete b[Building.TYPE.BREWERY] : delete b[Building.TYPE.TEAHOUSE];
    $.each(b, function(a, b) {
        f.push(b.buildingType)
    });
    a.setEntries(f);
    a.$parent.$watch("glossarId", function() {
        c = a.$parent.glossarId;
        if (0 == c) {
            a.showOverview = !0,
            a.buildingsData = b
        } else {
            a.showOverview = !1;
            a.buildingData = b[c];
            a.resources = Resources.STRING;
            var f = Travian.Player.data.tribeId;
            0 < a.buildingData.tribeId && (f = a.buildingData.tribeId);
            a.imageTribeId = f
        }
    })
}
;
window.manualBuildingsCtrl.$inject = ["$scope"];
window.manualCtrl = function(a) {
    function c() {
        e = "undefined" != typeof a.getParam(f) ? void 0 != typeof m.indexOf(a.getParam(f)) ? a.getParam(f) : h : h;
        a.o(f, m[e]);
        "undefined" != typeof a.getParam(g) ? b(a.getParam(g)) : b(0)
    }
    function b(b) {
        $.inArray(l, b) ? a.glossarId !== b && (a.glossarId = b,
        a.o(g, b)) : a.toOverview()
    }
    var f = "overlaytab"
      , g = "glossarId"
      , e = "";
    a.glossarId = "";
    var h = 1
      , m = [];
    m[h] = "Units";
    m[2] = "Buildings";
    m[3] = "Misc";
    var l = [];
    a.setEntries = function(a) {
        l = a
    }
    ;
    a.manualTabConfig = {};
    a.manualTabConfig.tabs = [m[h], m[2], m[3]];
    a.manualTabConfig.bodyTemplatePrefix = "tpl/manual/tabs/";
    a.manualTabConfig.routeNamedParam = f;
    a.manualTabConfig.tabName = "subtab";
    a.manualTabConfig.tabType = "subtab";
    a.manualTabConfig.disableScrolling = !0;
    a.overlayConfig.k({
        inWindowPopupTemplate: "tpl/manual/Manual.html"
    });
    c();
    a.forward = function() {
        var c = l.indexOf(a.glossarId) + 1;
        c >= l.length && (c = 0);
        b(l[c])
    }
    ;
    a.back = function() {
        var c = l.indexOf(a.glossarId) - 1;
        0 > c && (c = l.length - 1);
        b(l[c])
    }
    ;
    a.toOverview = function() {
        b(0)
    }
    ;
    a.goToEntry = function(a) {
        b(a)
    }
    ;
    a.goToBuilding = function(c) {
        if (2 == e) {
            b(c)
        } else {
            var l = {};
            l[f] = m[2];
            l[g] = c;
            a.openOverlay("manual", l)
        }
    }
    ;
    a.$on("urlChanged", function(b, e) {
        e[f] && a.l(g);
        c()
    });
    a.$on("$destroy", function() {
        a.l(g)
    })
}
;
window.manualCtrl.$inject = ["$scope"];
window.manualMiscCtrl = function(a) {
    var c = 0;
    a.showOverview = !0;
    a.links = {};
    a.links.Adventure = ["Hero", "Items"];
    a.links.Alliance = "Kingdoms Kings Governors Alliance StolenGoodsAndTreasures WonderOfTheWorld".split(" ");
    a.links.Auctions = ["Adventure", "Hero", "Items"];
    a.links.Siege = [];
    a.links.StolenGoodsAndTreasures = ["RobberCamps", "Governors", "Kings", "TributeStorage", "Hero"];
    a.links.TerritoryInfluence = ["Kings", "StolenGoodsAndTreasures", "Kingdoms", "Alliance"];
    a.links.Items = ["Adventure", "Hero", "Auctions"];
    a.links.SecretSocieties = ["Kingdoms", "Alliance"];
    a.links.Hero = ["Adventure", "Items", "Governors", "StolenGoodsAndTreasures", "Kings"];
    a.links.Kings = ["TerritoryInfluence", "Governors", "Kingdoms", "Alliance"];
    a.links.Kingdoms = ["Kings", "TerritoryInfluence", "Alliance", "RobberCamps", "Oases"];
    a.links.Oases = ["Kingdoms"];
    a.links.RobberCamps = ["Kingdoms", "StolenGoodsAndTreasures"];
    a.links.Raid = ["StolenGoodsAndTreasures"];
    a.links.Governors = ["Kings", "Kingdoms", "Alliance", "RobberCamps", "StolenGoodsAndTreasures"];
    a.links.TributeStorage = ["Governors", "Kings", "StolenGoodsAndTreasures"];
    a.links.WonderOfTheWorld = ["Alliance"];
    var b = [], f;
    for (f in a.links) {
        b.push(f)
    }
    a.entries = b;
    a.setEntries(b);
    a.$parent.$watch("glossarId", function() {
        c = a.$parent.glossarId;
        a.showOverview = 0 == c ? !0 : !1
    })
}
;
window.manualMiscCtrl.$inject = ["$scope"];
window.manualUnitsCtrl = function(a) {
    var c = 0;
    a.showOverview = !0;
    a.Troops = Troops;
    var b = [];
    for (Z = 0; 30 >= Z; Z++) {
        b.push(Z)
    }
    a.setEntries(b);
    a.$parent.$watch("glossarId", function() {
        c = a.$parent.glossarId;
        0 == c ? a.showOverview = !0 : (a.showOverview = !1,
        a.troopData = Travian.Config.troopConfig[c],
        a.tribes = Player.TRIBE_NAME,
        a.resources = Resources.STRING)
    });
    a.getGlossarId = function(a, b) {
        return 10 * (a - 1) + b
    }
}
;
window.manualUnitsCtrl.$inject = ["$scope"];
window.obtainedItemNotificationCtrl = function(a, c) {
    a.w.windowName = "ObtainedItemNotification.Title";
    var b = a.getParam("notificationData", !1, !0);
    if (b && b.payload) {
        b.payload.context && (a.context = b.payload.context,
        b.payload.context.type && (Travian.txt["ObtainedItemNotification.Title_" + a.context.type] ? a.w.windowName = "ObtainedItemNotification.Title_" + a.context.type : "compensation" == a.context.type && Travian.txt["ObtainedItemNotification.Title.Compensation_" + a.context.reason] && (a.w.windowName = "ObtainedItemNotification.Title.Compensation_" + a.context.reason),
        a.w.params.modalParams.additionalClass = a.context.type));
        a.items = b.payload.items;
        a.items.heroCustomization && c.m(function() {
            a.heroFace = HeroFace.get(Travian.Player.data.playerId);
            a.isOwner = c.Pb()
        });
        if (a.items.heroItem) {
            for (var f in a.items.heroItem) {
                var g = new HeroItem;
                g.set({
                    id: a.items.heroItem[f].id,
                    playerId: Travian.Player.data.playerId,
                    itemType: a.items.heroItem[f].type,
                    images: Travian.Config.heroItems[a.items.heroItem[f].type].images,
                    amount: a.items.heroItem[f].amount
                });
                a.items.heroItem[f] = g
            }
        }
        a.gotoInvenotry = function() {
            a.closeWindow("obtainedItemNotification");
            a.openWindow("hero", {
                herotab: "Inventory"
            })
        }
        ;
        a.gotoHeroCustomizations = function() {
            a.closeWindow("obtainedItemNotification");
            a.openWindow("hero", {
                herotab: "Attributes",
                overlayhero: "heroEditor",
                option: a.items.heroCustomization[0].option
            })
        }
        ;
        Travian.request("player/deleteNotification", {
            type: b.type
        })
    } else {
        a.closeWindow("obtainedItemNotification")
    }
}
;
window.obtainedItemNotificationCtrl.$inject = ["$scope", "SessionService"];
window.playerProfileCtrl = function(a, c, b, f) {
    function g(a) {
        return function() {
            return a.apply(f, arguments)
        }
    }
    function e() {
        h && (a.playerData = h.data,
        a.w.playerData = a.playerData,
        0 === h.data.playerId && a.closeWindow("profile"),
        angular.forEach(h.data.villages, function(a) {
            a.population = parseInt(a.population)
        }))
    }
    a.ROLE_KING = Player.KINGDOM_ROLE_KING;
    a.myPlayerId = c.getPlayerId();
    a.playerId = a.getParam("playerId");
    a.canEditDescription = !1;
    a.myPlayerId != a.playerId || c.K() || (a.canEditDescription = !0);
    if ("undefined" != typeof a.playerId) {
        var h = Player.get(a.playerId);
        Cache.G(h, 60);
        a.subscribe(h, e);
        var m = PlayerProfile.get(a.playerId);
        a.subscribe(m, function() {
            a.playerProfile = m.data
        });
        a.goMap = function(b, c) {
            a.openPage("map", "centerId", xy2id(b, c) + "_" + (new Date).getTime());
            a.Uj("profile")
        }
        ;
        a.openChat = b.ka;
        a.getPrivateRoomName = b.pa;
        a.isFriend = g(f.wd);
        a.isPendingFriend = g(f.xd);
        a.addFriend = function(a, b) {
            f.fd({
                addFriendAs: b,
                friendPlayerId: a
            })
        }
        ;
        a.userAddable = function(a) {
            return !f.ti(a) && !f.vi(a)
        }
    }
}
;
window.playerProfileCtrl.$inject = ["$scope", "SessionService", "ChatService", "FriendService"];
window.playerProfileEditDescriptionCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Player.EditDescription",
        inWindowPopupContentTemplate: "tpl/profile/playerProfile/playerProfileEditDescription.html"
    });
    var c = PlayerProfile.get(Travian.Player.data.playerId);
    Travian.request("player/updatePlayerProfileContent");
    a.subscribe(Travian.Player, function() {
        0 != Travian.Player.data.playerId && (a.medals = Medal.getCollection(Travian.Player.data.playerId),
        a.achievements = Achievement.getCollection(Travian.Player.data.playerId))
    });
    a.playerProfile = {
        data: angular.copy(c.get())
    };
    a.send = function() {
        Travian.request("player/editProfile", {
            description: a.playerProfile.data.description
        }, function() {
            a.closeOverlay()
        })
    }
    ;
    a.cancel = function() {
        a.playerProfile = {
            data: angular.copy(c.get())
        };
        a.closeOverlay()
    }
    ;
    a.addMedal = function(b, c, g, e) {
        var h = document.getElementById("desc");
        b = "[medal:" + b + "|" + c + "|" + g + "|" + e + "]";
        c = a.playerProfile.data.description;
        g = -1;
        if (document.selection) {
            h.focus(),
            g = document.selection.createRange(),
            g.moveStart("character", -h.value.length),
            g = g.text.length
        } else {
            if (h.selectionStart || "0" == h.selectionStart) {
                g = h.selectionStart
            }
        }
        a.playerProfile.data.description = -1 == g ? a.playerProfile.data.description + b : c.substring(0, g) + b + c.substring(g, h.length)
    }
    ;
    a.addAchievement = function(b) {
        var c = document.getElementById("desc");
        b = "[achievement:" + Travian.Player.data.playerId + "|" + b + "]";
        var g = a.playerProfile.data.description
          , e = -1;
        if (document.selection) {
            c.focus(),
            e = document.selection.createRange(),
            e.moveStart("character", -c.value.length),
            e = e.text.length
        } else {
            if (c.selectionStart || "0" == c.selectionStart) {
                e = c.selectionStart
            }
        }
        a.playerProfile.data.description = -1 == e ? a.playerProfile.data.description + b : g.substring(0, e) + b + g.substring(e, c.length)
    }
}
;
window.playerProfileEditDescriptionCtrl.$inject = ["$scope", "SessionService"];
window.playerProfileFullImageCtrl = function(a) {
    function c() {
        a.helmet = !1;
        for (var b = 0; b < f.data.length; b++) {
            var c = f.data[b]
              , m = c.data.inSlot;
            if (0 < m && 7 > m) {
                if ("undefined" !== typeof c.data.bonuses[HeroItem.BONUS_UNIT_ID]) {
                    var l = nrToUnitId(c.data.bonuses[HeroItem.BONUS_UNIT_ID], c.data.tribeId);
                    c.bonusUnitName = Travian.translate("Troop_" + l);
                    c.bonusUnitStrength = c.data.bonuses[HeroItem.BONUS_UNIT_STRENGTH]
                }
                a.heroSlots[m] = c;
                a.heroBodyImages[m] = {
                    img: c.data.images[0],
                    z: c.data.zIndex
                };
                m == HeroItem.SLOT_HELMET && (a.helmet = !0,
                a.heroBodyImages[m].helmet = !0)
            }
        }
        g && (a.avatar = angular.copy(g.getViewModel()))
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Troop_hero",
        inWindowPopupContentTemplate: "tpl/profile/playerProfile/playerProfileFullImage.html"
    });
    a.playerId = a.getParam("playerId");
    var b = Player.get(a.playerId);
    Cache.G(b, 60);
    a.subscribe(b, function() {
        b && (a.playerData = b.data,
        a.w.playerData = a.playerData)
    });
    a.HeroItem = HeroItem;
    a.heroBodyImages = {};
    a.heroSlots = {
        1: null,
        2: null,
        3: null,
        4: null,
        5: null,
        6: null
    };
    a.activeHeroItem = null;
    var f = HeroItem.getCollection(a.playerId);
    Cache.G(f, 1);
    a.subscribe(f, c);
    var g = HeroFace.get(a.playerId);
    a.subscribe(g, c);
    a.showSlotInformation = function(b) {
        a.activeHeroItem = null;
        if ("undefined" !== typeof a.heroSlots[b] && null !== a.heroSlots[b] && (a.activeHeroItem = angular.copy(a.heroSlots[b]),
        a.activeHeroItem.data.bonuses)) {
            b = a.activeHeroItem.data.bonuses;
            for (var c = ["BONUS_SPEED_HERO", "BONUS_SPEED_HORSE"], f = 0; f < c.length; f++) {
                b.hasOwnProperty(HeroItem[c[f]]) && (b[HeroItem[c[f]]] *= Travian.Config.TG_TROOP_SPEED)
            }
            a.activeHeroItem.bonuses = b
        }
    }
    ;
    a.highlightObj = {
        turnOn: a.showSlotInformation,
        turnOff: a.showSlotInformation
    }
}
;
window.playerProfileFullImageCtrl.$inject = ["$scope", "SessionService"];
window.playerProfilePlayerInvitesPlayerCtrl = function(a) {
    a.playerInvitesTabConfig = {};
    a.playerInvitesTabConfig.tabs = ["Invite", "PendingInvites", "ActiveInvites"];
    a.playerInvitesTabConfig.bodyTemplatePrefix = "tpl/playerProfile/pip/";
    a.playerInvitesTabConfig.routeNamedParam = "subtab";
    a.playerInvitesTabConfig.tabName = "subtab";
    a.playerInvitesTabConfig.tabType = "subtab";
    a.invitePlayerIframe = mellon.getReferralInviteIframe();
    a.pendingInvitesIframe = mellon.getReferralPendingIframe();
    a.activeInvitesIframe = mellon.getReferralActiveIframe()
}
;
window.playerProfilePlayerInvitesPlayerCtrl.$inject = ["$scope"];
window.profileWindowCtrl = function(a) {
    a.w.windowName = "Title.ProfileWindow";
    a.playerId = a.getParam("playerId");
    a.tabConfig.routeNamedParam = "profileTab";
    a.tabConfig.tabs = ["playerProfile"];
    a.tabConfig.disableScrollingForTabs = ["playerProfile"];
    a.playerId == Travian.Player.data.playerId && (Travian.Config.features.prestige && (a.tabConfig.disableScrollingForTabs.push("prestige"),
    a.tabConfig.tabs.push("prestige")),
    a.tabConfig.tabs.push("settings"),
    a.tabConfig.disableScrollingForTabs.push("settings"));
    var c = Player.get(a.playerId);
    a.subscribe(c, function() {
        a.w.playerData = c.data
    });
    a.w.contentHeaderTemplate = "tpl/profile/profileHeader.html";
    a.tabConfig.bodyTemplatePrefix = "tpl/profile/";
    a.tabConfig.tabName = "tab"
}
;
window.profileWindowCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.productionOverviewCtrl = function(a, c, b, f, g, e, h) {
    function m(b) {
        var c = {
            1: "Wood",
            2: "Clay",
            3: "Iron",
            4: "Crop",
            5: "Balance"
        }[b];
        5 == b && (b = Resources.CROP);
        C = b;
        a.productionBonusTime[c] = 0;
        a.productionBonusValue[c] = b == Resources.CROP ? Travian.Config.PremiumFeatures.cropProductionBonus.bonusValue : Travian.Config.PremiumFeatures.productionBonus.bonusValue;
        a.premiumFeatureName = PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS;
        a.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_RES_BONUS;
        b == Resources.CROP && (a.premiumFeatureName = PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS,
        a.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_CROP_BONUS);
        a.hasAutoExtend = PremiumFeature.hasAutoExtendFlag(a.autoExtendFlag);
        a.sumBonus[c] = 0;
        a.buildingBoni[c] = [];
        a.oasis[c] = {
            number: 0,
            boni: 0
        };
        var e = a.production[b].bonusFactors, f;
        for (f in e) {
            var l = e[f];
            l.category == Village.PRODUCTION_TYPE_BUILDING && (a.buildingBoni[c][f] = l);
            l.category == Village.PRODUCTION_TYPE_OASIS && (a.oasis[c].number++,
            a.oasis[c].boni += l.value);
            a.sumBonus[c] += l.value
        }
        a.sumProduction[c] = 0;
        a.sumBonusProduction[c] = 0;
        a.resourceFields || (a.resourceFields = {});
        a.resourceFields[c] = a.production[b].baseFactors;
        for (f in a.resourceFields[c]) {
            a.sumProduction[c] += parseInt(a.resourceFields[c][f].value),
            a.resourceFields[c][f].bonusValue = Math.round(a.resourceFields[c][f].value * a.sumBonus[c]),
            a.sumBonusProduction[c] += parseFloat(a.resourceFields[c][f].bonusValue)
        }
        a.heroProduction[c] = 0;
        a.treasureProduction[c] = 0;
        a.oasisTroopProduction[c] = 0;
        for (f in a.production[b].globalBase) {
            e = a.production[b].globalBase[f],
            e.category == Village.PRODUCTION_TYPE_HERO && (a.heroProduction[c] += parseInt(e.value)),
            e.category == Village.PRODUCTION_TYPE_OASIS_TROOPS && (a.oasisTroopProduction[c] += parseInt(e.value)),
            e.category == Village.PRODUCTION_TYPE_TREASURES && (a.treasureProduction[c] += e.value)
        }
        a.interimBalance[c] = parseInt(a.sumProduction[c]) + parseFloat(a.sumBonusProduction[c]) + parseInt(a.heroProduction[c]) + parseFloat(a.treasureProduction[c]) + parseFloat(a.oasisTroopProduction[c]);
        a.goldBonus[c] = 0;
        e = Travian.Config.PremiumFeatures.productionBonus.bonusValue;
        4 == b && (e = Travian.Config.PremiumFeatures.cropProductionBonus.bonusValue);
        a.theoreticalGoldBonus[c] = Math.round(a.interimBalance[c] + a.interimBalance[c] * (e / 100));
        for (f in a.production[b].globalBonus) {
            e = a.production[b].globalBonus[f],
            e.category == Village.PRODUCTION_TYPE_GOLD && (a.goldBonus[c] += Math.round(a.interimBalance[c] * e.value),
            r(c))
        }
        a.total[c] = a.interimBalance[c] + parseInt(a.goldBonus[c]);
        a.vacationProduction[c] = 0;
        b != Resources.CROP && (x.data.vacationState == Player.VACATION_STATE_ACTIVE ? a.vacationProduction[c] = a.total[c] * (Travian.Config.vacation.productionVacationFactor - 1) : x.data.vacationState == Player.VACATION_STATE_BOOST && (a.vacationProduction[c] = a.total[c] * (Travian.Config.vacation.productionBoostFactor - 1)));
        b == Resources.CROP && (a.productionBuildings = parseInt(a.sumProduction[c]) + parseInt(a.sumBonusProduction[c]),
        a.population = -1 * u.data.population,
        a.interimBalanceForTroops = parseInt(a.productionBuildings) + parseInt(a.heroProduction[c]) + parseInt(a.oasisTroopProduction[c]) + parseInt(a.goldBonus[c]) + parseInt(a.treasureProduction[c]),
        a.timeToCorpEmpty = 0,
        0 > w[b] && (a.timeToCorpEmpty = h.R() + 3600 * (s[b] / Math.abs(w[b]))));
        a.balanceTotal[c] = parseInt(a.interimBalanceForTroops) + parseInt(a.population) + parseInt(a.troops.own.sum) + parseInt(a.troops.other.sum)
    }
    function l() {
        v = b.getActiveVillageId();
        D = e.H([v], [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING, Troops.COLLECTION_WOUNDED], p, a)
    }
    function p() {
        a.troops = {
            own: {
                sum: 0,
                village: 0,
                oasis: 0,
                elsewhere: 0,
                trapped: 0,
                healing: 0,
                wounded: 0
            },
            other: {
                sum: 0,
                village: 0,
                oasis: 0
            }
        };
        for (var b = D.v(null, [Troops.COLLECTION_STATIONARY]), c = 0; c < b.length; c++) {
            var e = b[c].data;
            e.playerId == x.data.playerId ? (a.troops.own.village -= e.supplyTroops,
            a.troops.own.sum -= e.supplyTroops) : (a.troops.other.village -= e.supplyTroops,
            a.troops.other.sum -= e.supplyTroops)
        }
        b = D.v(null, [Troops.COLLECTION_WOUNDED], null);
        for (c = 0; c < b.length; c++) {
            e = b[c].data,
            a.troops.own.wounded -= e.supplyTroops,
            a.troops.own.sum -= e.supplyTroops
        }
        b = D.v(null, [Troops.COLLECTION_ELSEWHERE]);
        for (c = 0; c < b.length; c++) {
            e = b[c].data,
            "trap" == e.status && (a.troops.own.trapped -= e.supplyTroops,
            a.troops.own.sum -= e.supplyTroops),
            "support" == e.status && e.villageIdSupply == v && (a.troops.own.oasis -= e.supplyTroops,
            a.troops.own.sum -= e.supplyTroops)
        }
        b = D.v(null, [Troops.COLLECTION_MOVING]);
        for (c = 0; c < b.length; c++) {
            e = b[c].data,
            e.playerId == x.data.playerId && e.villageIdSupply == v && (e.movement.movementType == Troops.MOVEMENT_TYPE_REGENERATION ? a.troops.own.healing -= e.supplyTroops : a.troops.own.elsewhere -= e.supplyTroops,
            a.troops.own.sum -= e.supplyTroops)
        }
    }
    function n(b) {
        var e = q(b);
        null == a.production ? Travian.writeRequest("village/getProductionDetails", {
            villageId: u.data.villageId
        }, function(b) {
            a.production = b.production;
            v = u.data.villageId;
            c(function() {
                m(e)
            })
        }) : m(e)
    }
    function q(b) {
        for (var c = 0; c < a.tabConfig.tabs.length; c++) {
            if (a.tabConfig.tabs[c] == b) {
                return c + 1
            }
        }
        return -1
    }
    function r(b) {
        b = b || a.tabData.currentTab;
        null == C ? a.productionBonusTime[b] = 0 : C == Resources.CROP && x.hasCropProductionBonus() ? a.productionBonusTime[b] = x.data.cropProductionBonusTime : x.hasProductionBonus() && (a.productionBonusTime[b] = x.data.productionBonusTime)
    }
    function t() {
        a.production = null;
        n(A)
    }
    a.w.windowName = "ProductionOverview";
    a.tabConfig.tabs = ["Wood", "Clay", "Iron", "Crop", "Balance"];
    a.tabConfig.bodyTemplatePrefix = "tpl/productionOverview/tabs/";
    var u = b.i()
      , w = u.getProduction()
      , s = u.getResources()
      , x = g.p();
    a.Player = Player;
    a.production = null;
    var v = 0
      , D = null
      , C = null;
    a.resourceType = {
        crop: Resources.CROP
    };
    a.troops = {
        own: {
            sum: 0,
            village: 0,
            oasis: 0,
            elsewhere: 0,
            trapped: 0,
            healing: 0,
            wounded: 0
        },
        other: {
            sum: 0,
            village: 0,
            oasis: 0
        }
    };
    a.productionBonusTime = {};
    a.productionBonusValue = {};
    a.sumBonus = {};
    a.buildingBoni = {};
    a.oasis = {};
    a.sumProduction = {};
    a.sumBonusProduction = {};
    a.heroProduction = {};
    a.treasureProduction = {};
    a.oasisTroopProduction = {};
    a.interimBalance = {};
    a.theoreticalGoldBonus = {};
    a.goldBonus = {};
    a.vacationProduction = {};
    a.total = {};
    a.balanceTotal = {};
    var A = f.getParam("tab");
    0 < u.data.villageId && n(A);
    a.$on("urlChanged", function() {
        A = f.getParam("tab");
        n(A)
    });
    a.$on("activeVillageChanged", function() {
        u = b.i();
        w = u.getProduction();
        s = u.getResources();
        a.production = null;
        n(A);
        l()
    });
    null == A && n("Wood");
    l();
    a.showOwnSummary = !1;
    a.showOtherSummary = !1;
    a.toggle = function(b) {
        a[b] = !a[b]
    }
    ;
    a.toggleAutoExtend = function() {
        PremiumFeature.toggleAutoExtendFlag(a.autoExtendFlag)
    }
    ;
    a.subscribe(x, r);
    a.subscribe(u, t);
    a.subscribe(x, function() {
        a.hasAutoExtend = PremiumFeature.hasAutoExtendFlag(a.autoExtendFlag)
    });
    a[PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS] = function() {
        return {
            callback: t
        }
    }
    ;
    a[PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS] = function() {
        return {
            callback: t
        }
    }
}
;
window.productionOverviewCtrl.$inject = "$scope $timeout VillageService RoutingService SessionService TroopsService ServertimeService".split(" ");
window.dailyQuestsCtrl = function(a, c, b) {
    function f() {
        a.nextDailyQuestTimestamp = h.data.nextDailyQuestTime;
        a.dailyQuestsExchanged = h.data.dailyQuestsExchanged
    }
    function g(a, b) {
        return a.data.status == Quest.STATUS_DONE && b.data.status != Quest.STATUS_DONE ? -1 : a.data.status != Quest.STATUS_DONE && b.data.status == Quest.STATUS_DONE ? 1 : a.data.id < b.data.id ? -1 : a.data.id > b.data.id ? 1 : 0
    }
    var e = null;
    a.questId = 0;
    a.showExchangeQuestButton = !0;
    a.$on("urlChanged", function(a, b) {
        void 0 === b.tab && (e = null)
    });
    a.npcId = a.getParam("npcId");
    "undefined" != typeof a.w.hero && (a.npcId = QuestGiver.ADVENTURER);
    a.npcId != QuestGiver.ADVENTURER && (a.npcId = 0);
    a.QuestModel = Quest;
    a.possibleQuests = [];
    a.isAdventure = !1;
    a.itemsPerPage = 8;
    a.numberOfDailyQuests = 0;
    a.exchangeDailyQuest = function() {
        Travian.writeRequest("quest/resetDailyQuest", {
            questId: a.questId
        }, function(b) {
            "undefined" !== typeof b.errors && a.handleError(b, "exchangeDailyQuestError")
        })
    }
    ;
    var h = Travian.Player;
    f();
    a.subscribe(h, f);
    a.displayCurrentPage = function(b) {
        null == b && (b = 1);
        a.currentPage = b;
        b = a.itemsPerPage * (b - 1);
        var c = Math.min(b + a.itemsPerPage, a.possibleQuests.length);
        a.questsOnPage = a.possibleQuests.slice(b, c)
    }
    ;
    a.hero = Hero.get(c.getPlayerId());
    a.subscribe(a.hero, function() {
        var c = b.qa(a.hero.data.villageId);
        null != c && (a.hero.homeVillageName = c.data.name)
    });
    a.selectDailyQuest = function(b) {
        var c = a.initDailyQuestSelection
          , f = m;
        e = a.questId = b;
        for (var h = 0; h < f.data.length; h++) {
            var g = f.data[h];
            g.data.id != b || Quest.isAdventure(b) || (g.data.status == Quest.STATUS_ACTIVATABLE ? Travian.request("quest/dialogAction", {
                questId: b,
                command: "activate"
            }, c) : a.showExchangeQuestButton = g.data.status != Quest.STATUS_DONE)
        }
    }
    ;
    a.possibleQuests = [];
    a.initDailyQuestSelection = function() {
        for (var b = [], c = null, f = 0; f < m.data.length && !(b.length >= Quest.DAILY_QUESTS_NUMBER); f++) {
            var h = m.data[f];
            if (h.data.status >= Quest.STATUS_ACTIVATABLE && h.data.status < Quest.STATUS_FINISHED) {
                h.headerKey = h.data.id;
                if ("undefined" == typeof Travian.txt["QuestHeader_" + h.headerKey] && (h.headerKey = h.data.id + "_" + Travian.Player.data.tribeId,
                "undefined" === typeof Travian.txt["QuestHeader_" + h.headerKey])) {
                    var r = "Governor";
                    Travian.Player.isKing() && (r = "King");
                    h.headerKey = h.data.id + "_" + r
                }
                b.push(h);
                h.data.id == e && (c = h)
            }
        }
        a.numberOfDailyQuests = b.length;
        a.slotsFull = b.length >= Quest.DAILY_QUESTS_NUMBER ? !0 : !1;
        0 < b.length ? (b.sort(g),
        null != c ? a.selectDailyQuest(c.data.id) : a.selectDailyQuest(b[0].data.id),
        a.displayCurrentPage(a.currentPage)) : a.questId = 0;
        for (f = 0; f < Quest.DAILY_QUESTS_NUMBER; f++) {
            a.possibleQuests[f] = "undefined" !== typeof b[f] ? b[f] : "empty"
        }
    }
    ;
    a.maxDailyQuestsExchanged = Travian.Config.maxDailyQuestsExchanged;
    var m = Quest.getCollection(QuestGiver.DAILY);
    a.quests = m;
    a.subscribe(m, a.initDailyQuestSelection)
}
;
window.dailyQuestsCtrl.$inject = ["$scope", "SessionService", "VillageService", "$filter"];
window.enterMailCtrl = function(a, c, b, f) {
    a.w.windowName = "Register";
    c.getParam("invite");
    c.getParam("referral");
    c.getParam("inviteCode");
    c = f.wa().getInstantUpgrade();
    f.Fa(c).open();
    a.input = {
        name: Travian.Player.data.name,
        email: "",
        password: "",
        passwordCheck: ""
    };
    a.valid = !1;
    a.checkInput = function() {
        a.valid = !0;
        4 > a.input.password.length && (a.valid = !1);
        a.input.password != a.input.passwordCheck && (a.valid = !1);
        if (4 > a.input.email.length || 0 > a.input.email.indexOf("@") || 0 > a.input.email.indexOf(".")) {
            a.valid = !1
        }
    }
    ;
    a.save = function() {
        console.log("falsch")
    }
}
;
window.enterMailCtrl.$inject = ["$scope", "RoutingService", "SessionService", "MellonService"];
window.kingOrGovernorCtrl = function(a) {
    a.w.windowName = "KingOrGovernor.Title";
    a.kingRegistrationOpened = Travian.Config.minPrestigeForGetAKing <= Travian.Player.data.prestige;
    a.placeHolderKingdomTag = Travian.translate("Kingdom.KingdomTag");
    a.kingRegistrationOpened || Travian.request("player/checkKingRegistrationRule", {}, function(c) {
        c.kingRegistration && (a.kingRegistrationOpened = !0)
    });
    a.selectRole = function(c) {
        ("governor" == c || a.kingRegistrationOpened) && a.openOverlay("kingOrGovernorSelected", {
            role: c
        })
    }
}
;
window.kingOrGovernorCtrl.$inject = ["$scope", "TutorialService"];
window.kingOrGovernorKingTagCtrl = function(a) {
    a.placeHolderKingdomTag = Travian.translate("Kingdom.KingdomTag");
    a.overlayConfig.k({
        inWindowPopupTitle: "KingOrGovernor.Selected_king",
        inWindowPopupContentTemplate: "tpl/kingOrGovernor/kingOrGovernorKingTag.html"
    });
    a.form = {
        tag: ""
    };
    a.confirmBecomeKing = function() {
        Travian.writeRequest("quest/dialogAction", {
            questId: 203,
            command: "become_king",
            input: a.form.tag
        }, function(c) {
            "undefined" != typeof c.errors ? a.handleError(c, "kingError") : (a.closeOverlay(),
            a.closeWindow("kingOrGovernor"))
        })
    }
}
;
window.kingOrGovernorKingTagCtrl.$inject = ["$scope"];
window.kingOrGovernorSelectedCtrl = function(a) {
    var c = a.getParam("role");
    a.role = c;
    a.acceptRole = function() {
        "governor" === c ? Travian.writeRequest("quest/dialogAction", {
            questId: 203,
            command: "become_" + a.role
        }, function() {
            a.closeOverlay();
            a.closeWindow("kingOrGovernor")
        }) : a.openOverlay("kingOrGovernorKingTag")
    }
    ;
    "governor" == c && Travian.Config.minPrestigeForGetAKing > Travian.Player.data.prestige ? a.acceptRole() : a.overlayConfig.k({
        inWindowPopupTitle: "KingOrGovernor.Selected_" + c,
        inWindowPopupContentTemplate: "tpl/kingOrGovernor/kingOrGovernorSelected.html"
    })
}
;
window.kingOrGovernorSelectedCtrl.$inject = ["$scope"];
window.openQuestsCtrl = function(a, c, b) {
    function f(a, b) {
        return a.data.status == Quest.STATUS_DONE && b.data.status != Quest.STATUS_DONE ? -1 : a.data.status != Quest.STATUS_DONE && b.data.status == Quest.STATUS_DONE ? 1 : a.data.id < b.data.id ? -1 : a.data.id > b.data.id ? 1 : 0
    }
    var g = null;
    a.questId = 0;
    a.questLock = {
        selection: !1
    };
    a.$on("urlChanged", function(a, b) {
        void 0 === b.tab && (g = null)
    });
    a.npcId = a.getParam("npcId");
    "undefined" != typeof a.w.hero && (a.npcId = QuestGiver.ADVENTURER);
    var e = a.npcId;
    a.npcId != QuestGiver.ADVENTURER && (a.npcId = 0);
    a.QuestModel = Quest;
    a.possibleQuests = [];
    a.isAdventure = !1;
    a.itemsPerPage = 7;
    a.numberOfItems = 0;
    a.displayCurrentPage = function(b) {
        null == b && (b = 1);
        a.currentPage = b;
        b = a.itemsPerPage * (b - 1);
        var c = Math.min(b + a.itemsPerPage, a.possibleQuests.length);
        a.questsOnPage = a.possibleQuests.slice(b, c)
    }
    ;
    a.hero = Hero.get(c.getPlayerId());
    a.subscribe(a.hero, function() {
        var c = b.qa(a.hero.data.villageId);
        null != c && (a.hero.homeVillageName = c.data.name)
    });
    a.selectQuest = function(b) {
        var c = a.initQuestSelection
          , e = h;
        g = a.questId = b;
        for (var f = 0; f < e.data.length; f++) {
            var q = e.data[f];
            q.data.id != b || Quest.isAdventure(b) || q.data.status == Quest.STATUS_ACTIVATABLE && Travian.request("quest/dialogAction", {
                questId: b,
                command: "activate"
            }, c)
        }
    }
    ;
    a.initQuestSelection = function() {
        if (!a.questLock.selection) {
            for (var b = [], c = null, p = 0; p < h.data.length; p++) {
                var n = h.data[p];
                if (!Quest.isEnvoyQuest(n.data.id) && (990 > n.data.id || a.npcId == n.data.questGiver) && (!a.npcId || a.npcId == n.data.questGiver) && n.data.status >= Quest.STATUS_ACTIVATABLE && n.data.status < Quest.STATUS_FINISHED) {
                    n.headerKey = n.data.id;
                    if ("undefined" == typeof Travian.txt["QuestHeader_" + n.headerKey] && (n.headerKey = n.data.id + "_" + Travian.Player.data.tribeId,
                    "undefined" === typeof Travian.txt["QuestHeader_" + n.headerKey])) {
                        var q = "Governor";
                        if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
                            q = "King"
                        }
                        n.headerKey = n.data.id + "_" + q
                    }
                    b.push(n);
                    n.data.id == g && (c = n)
                }
            }
            a.numberOfItems = b.length;
            a.isAdventure = !1;
            0 == b.length && (a.tabConfig.tabs = ["DailyQuests"]);
            if (0 < b.length) {
                Quest.isAdventure(b[0].data.id) && (a.isAdventure = !0,
                a.w.windowName = "Tab.Adventures",
                0 < b.length && 3 > a.tabConfig.tabs.length && (a.tabConfig.tabs = ["OpenQuests"]),
                PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_HERO + "_" + PlayerProgressTrigger.HELP_PAGE_ADVENTURES));
                b.sort(f);
                a.possibleQuests = b;
                if (null != c) {
                    a.selectQuest(c.data.id)
                } else {
                    c = b[0].data.id;
                    if (0 < e) {
                        for (p = 0; p < b.length; p++) {
                            if (b[p].data.questGiver == e) {
                                c = b[p].data.id;
                                break
                            }
                        }
                    }
                    a.selectQuest(c)
                }
                a.displayCurrentPage(a.currentPage)
            }
        }
    }
    ;
    var h = Quest.getCollection();
    a.quests = h;
    a.subscribe(h, a.initQuestSelection)
}
;
window.openQuestsCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.questBookCtrl = function(a) {
    a.w.windowName = "Quest.QuestBook";
    a.tabConfig.tabs = ["OpenQuests", "DailyQuests"];
    a.tabConfig.bodyTemplatePrefix = "tpl/questBook/tabs/";
    a.tabConfig.disableScrolling = !0
}
;
window.questBookCtrl.$inject = ["$scope"];
window.questDetailsCtrl = function(a, c, b, f, g, e, h) {
    function m() {
        var b = a.quest;
        a.error = "";
        Travian.writeRequest("quest/checkRewardCollectible", {
            questId: b.data.id,
            villageId: c.getActiveVillageId()
        }, function(b) {
            if (b.errors && "undefined" != typeof b.errors) {
                var c = {};
                if (isNaN(b.errors[0].params)) {
                    for (var e in b.errors[0].params) {
                        c[e] = "buildingType" == e ? Travian.translate("Building_" + b.errors[0].params[e]) : b.errors[0].params[e]
                    }
                } else {
                    c = {
                        param: b.errors[0].params
                    }
                }
                a.error = Travian.translate("Error." + b.errors[0].message, c);
                delete b.errors
            }
        })
    }
    function l() {
        if (!a.lockQuestView) {
            a.error = "";
            a.tribeId = Travian.Player.data.tribeId;
            a.tribeName = Player.TRIBE_NAME[a.tribeId];
            a.kingStatus = "governor";
            if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
                a.kingStatus = "king"
            }
            a.headerText = "";
            a.questSummaryKey = "QuestSummary_" + a.questId;
            if ("undefined" === typeof Travian.txt[a.questSummaryKey] && (a.questSummaryKey = "QuestSummary_" + a.questId + "_" + a.tribeId,
            "undefined" === typeof Travian.txt[a.questSummaryKey])) {
                var b = "Governor";
                if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
                    b = "King"
                }
                a.questSummaryKey = "QuestSummary_" + a.questId + "_" + b
            }
            for (b = 0; b < a.quests.data.length; b++) {
                var c = a.quests.data[b]
                  , e = "";
                if (c.data.id == a.questId) {
                    a.quest = c;
                    c.data.status == Quest.STATUS_DONE ? (a.questCompleted = !0,
                    a.childWindow || (a.w.windowName = "Quest.TaskComplete"),
                    a.headerText = Travian.translate("Quest.TaskComplete"),
                    f.setRewardOpened(c.data.id),
                    m()) : (a.questCompleted = !1,
                    e = p(c.data.id),
                    "" != e && (a.headerText = Travian.translate(e)),
                    a.childWindow || (a.w.windowName = "Quest.Task",
                    "" != e && (a.w.windowName = e)));
                    a.rewards = c.data.rewards;
                    a.rewardCnt = 0;
                    for (var h in a.rewards) {
                        a.rewardCnt++
                    }
                }
            }
        }
    }
    function p(b) {
        if ("undefined" != typeof Travian.txt["QuestHeader_" + b]) {
            return "QuestHeader_" + b
        }
        if ("undefined" != typeof Travian.txt["QuestHeader_" + b + "_" + a.tribeId]) {
            return "QuestHeader_" + b + "_" + a.tribeId
        }
        if ("undefined" != typeof Travian.txt["QuestHeader_" + b + "_King"]) {
            var c = "Governor";
            if (Travian.Player.isKing() || Travian.Player.isViceKing()) {
                c = "King"
            }
            return "QuestHeader_" + b + "_" + c
        }
        return ""
    }
    "undefined" == typeof a.questId ? (a.questId = a.getParam("questId"),
    a.childWindow = !1) : a.childWindow = !0;
    null == a.questId && a.closeWindow("questDetails");
    a.acceptQuest = function() {
        a.quest.data.status < Quest.STATUS_ACTIVE && Travian.writeRequest("quest/dialogAction", {
            questId: a.questId,
            command: "activate"
        }, function() {
            "function" == typeof a.initQuestSelection && a.initQuestSelection()
        });
        a.closeWindow("questDetails")
    }
    ;
    a.flyingResTrigger = !1;
    a.lockQuestView = !1;
    a.collectReward = function() {
        var f = 0, m;
        for (m in a.rewards) {
            if (m == Quest.REWARD_BUILDING_LEVEL) {
                var p = b.Gh(a.rewards[m].buildingType, c.getActiveVillageId(), a.rewards[m].minLevel, a.rewards[m].rewardedLevel);
                if (p) {
                    var t = BuildingQueue.get(c.getActiveVillageId())
                      , t = p.data.lvlNext + t.getEntriesForLocation(p.data.locationId, BuildingQueue.TYPE_MASTER_BUILDER).length
                      , f = f + (p.data.upgradeSupplyUsageSums[a.rewards[m].rewardedLevel] - p.data.upgradeSupplyUsageSums[t - 1])
                }
            }
        }
        b.Gb(f, function() {
            var b = {
                questId: a.questId,
                villageId: c.getActiveVillageId()
            };
            g.Ud(eb);
            var b = Travian.writeRequest("quest/collectReward", b, function(b) {
                "undefined" != typeof b.errors ? a.flyingResTrigger = !1 : ("function" == typeof a.initQuestSelection && a.initQuestSelection(),
                delete a.flyingResTrigger)
            })
              , f = Settings.get(Travian.Player.data.playerId);
            b && !f.getSetting("disableAnimations") && (a.flyingResTrigger = !0,
            a.questLock && !1 === a.questLock.selection && (a.questLock.selection = !0),
            a.lockQuestView = h(function() {
                a.lockQuestView = !1;
                l();
                a.questLock && a.questLock.selection && (a.questLock.selection = !1,
                a.initQuestSelection && "function" == typeof a.initQuestSelection && a.initQuestSelection())
            }, 3 * e.fc + 200))
        })
    }
    ;
    a.subscribe(a.quests, l);
    a.$watch("questId", l);
    a.$on("activeVillageChanged", function() {
        m()
    });
    a.$on("$destroy", function() {
        a.lockQuestView && h.cancel(a.lockQuestView)
    })
}
;
window.questDetailsCtrl.$inject = "$scope VillageService BuildingService TutorialService AudioService AnimationService $timeout".split(" ");
window.questDialogCtrl = function(a, c, b) {
    function f(b) {
        var c = b.text
          , e = "tutorial_" + h + "_" + m + "_" + q;
        "undefined" != typeof Travian.txt[e] && (c = Travian.txt[e]);
        for (e = 0; e < b.replacements.length; e++) {
            var f = a.$eval(b.replacements[e])
              , c = c.replace("{{" + (e + 1) + "}}", f)
        }
        return c
    }
    function g(b) {
        if ("undefined" != typeof b) {
            if ("end" == b) {
                q = -1
            } else {
                b = b.split("|");
                3 <= b.length && (h = b.shift(),
                p = QuestCfg[h],
                3 <= b.length && (a.serverVariable = b[2]));
                n = p.dialog[b[0]];
                m = b[0];
                a.actors = n.actors;
                for (var c = 0; c < n.text.length; c++) {
                    if (n.text[c].anchor == b[1]) {
                        q = c;
                        break
                    }
                }
            }
        } else {
            q++,
            a.o("lineNr", q)
        }
        a.lastActor = a.currentActor;
        if ("undefined" != typeof n.text[q]) {
            a.input = {
                text: ""
            };
            a.currentActor = n.text[q].actor;
            a.currentLine = q;
            a["currentText" + a.currentActor] = f(n.text[q]);
            a.currentType = n.text[q].type;
            if ("MC" == n.text[q].type) {
                for (a.MClines = [],
                a.MClines.push({
                    text: f(n.text[q]),
                    lineNr: q
                }); "undefined" != typeof n.text[q + 1] && "MC" == n.text[q + 1].type; ) {
                    q++,
                    a.MClines.push({
                        text: f(n.text[q]),
                        lineNr: q
                    })
                }
            }
            a.currentEmotion = n.text[q].emotion || ""
        } else {
            a.closeWindow("questDialog")
        }
    }
    function e() {
        var b = n.text[q].callback;
        0 < b.indexOf("|") ? g(b) : Travian.writeRequest("quest/dialogAction", {
            questId: h,
            command: b,
            input: a.input.text,
            addData: a.addData
        }, function(a) {
            c(function() {
                $("#dialogInputField").blur()
            }, 0, !1);
            c(function() {
                g(a.data)
            }, 10)
        })
    }
    var h = a.getParam("questId")
      , m = a.getParam("dialogId")
      , l = a.getParam("lineNr");
    if ("undefined" == typeof h) {
        a.closeWindow("questDialog")
    } else {
        var p = QuestCfg[h]
          , n = p.dialog[m];
        a.questId = h;
        a.dialogStarted = !0;
        a.actors = n.actors;
        a.input = {
            text: ""
        };
        "undefined" != typeof n.module && (a.l("questId"),
        a.l("dialogId"),
        a.closeWindow("questDialog"),
        a.openWindow("hero", {
            herotab: "Adventures"
        }));
        a.serverVariable = "";
        a.lastActor = -1;
        var q = a.currentActor = -1;
        0 < l && (q = l - 1);
        "undefined" != typeof p.prepareDialogScope && (l = a.getParam("questObj", !0, !0),
        p.prepareDialogScope(a, l));
        a.getCharacter = function(a) {
            var b = QuestGiver.STRING[a];
            a == QuestGiver.GENERAL && (b += "_" + Travian.Player.data.tribeId);
            return b
        }
        ;
        a.$on("$destroy", function() {
            b.removeTextLine()
        });
        var r = 0;
        a.submitForm = function() {
            a.nextLine(null, !0)
        }
        ;
        a.nextLine = function(b, c) {
            if (null == document.activeElement || document.activeElement != $("#dialogInputField")[0] || c) {
                var f = (new Date).getTime();
                if (!(f < r + 100)) {
                    r = f;
                    f = !0;
                    if (null != n.text[q]) {
                        if ("input" == n.text[q].type && "" == a.input.text) {
                            return
                        }
                        if ("MC" == n.text[q].type) {
                            "undefined" != typeof b && (null != n.text[b].callback ? (q = b,
                            e()) : g());
                            return
                        }
                        null != n.text[q].callback && (e(),
                        f = !1)
                    }
                    f && g()
                }
            }
        }
        ;
        c(function() {
            a.dialogStarted = !0
        }, 500);
        c(a.nextLine, 1E3)
    }
}
;
window.questDialogCtrl.$inject = ["$scope", "$timeout", "TutorialService"];
window.questDirectionSelectionCtrl = function(a) {
    var c = 0;
    a.w.windowName = "Quest.DirectionSelection.Title";
    a.direction = 0;
    Travian.Config.features.inviteFriends && Travian.request("player/getReferralDirection", {}, function(b) {
        c = b.direction;
        a.direction = c
    });
    a.showAll = !1;
    var b = !0;
    a.choseDirection = !0;
    a.directions = {
        1: "north",
        2: "east",
        3: "west",
        4: "south"
    };
    a.choseDirectionError = a.getParam("choseDirectionError");
    a.highlightElement = {
        1: {
            marker: !1,
            label: !1,
            sign: !1,
            clicked: !0
        },
        2: {
            marker: !1,
            label: !1,
            sign: !1,
            clicked: !0
        },
        3: {
            marker: !1,
            label: !1,
            sign: !1,
            clicked: !0
        },
        4: {
            marker: !1,
            label: !1,
            sign: !1,
            clicked: !0
        }
    };
    a.hover = function(b, c) {
        0 < b ? $.each(a.highlightElement[b], function(e) {
            "clicked" != e && (a.highlightElement[b][e] = c)
        }) : 0 == b && $.each(a.highlightElement, function(b) {
            a.highlightElement[b].marker = c
        })
    }
    ;
    a.changeDirection = function(f) {
        b || (a.direction = f,
        0 == a.direction && (a.direction = c),
        $.each(a.highlightElement, function(b) {
            a.highlightElement[b].clicked && (a.highlightElement[b].clicked = !1);
            b == f && (a.highlightElement[b].clicked = !0);
            0 == f && (a.highlightElement[b].clicked = !0)
        }),
        0 <= f && (a.choseDirection = !0))
    }
    ;
    a.updateCardianalChoice = function() {
        a.showAll ? (b = a.choseDirection = !1,
        a.changeDirection(-1)) : (a.changeDirection(0),
        b = !0)
    }
    ;
    a.acceptDirection = function() {
        Travian.writeRequest("quest/dialogAction", {
            questId: 204,
            command: "direction" + a.direction
        }, function() {
            a.closeOverlay();
            a.closeWindow("questDirectionSelection")
        })
    }
}
;
window.questDirectionSelectionCtrl.$inject = ["$scope"];
window.questPuzzleCtrl = function(a, c) {
    function b(b, n) {
        l = (new Date).getTime();
        var q = a.position[b];
        a.position[b] = a.position[n];
        a.position[n] = q;
        var q = a.puzzleTiles[b]
          , r = a.puzzleTiles[n];
        a.puzzleTiles[b] = {
            x: r.x,
            y: r.y
        };
        a.puzzleTiles[n] = {
            x: q.x,
            y: q.y
        };
        f[q.x][q.y] = n;
        f[r.x][r.y] = b;
        for (var t = 1; 9 >= t; t++) {
            a.overlayClass[t] = ""
        }
        a.selectedTile = -1;
        m = !1;
        0 < h && g.push(c.Lh(q, r, h, e))
    }
    a.w.windowName = "Quest.PuzzleTitle";
    a.questId = a.getParam("questId");
    a.selectedTile = -1;
    a.showError = !1;
    var f = [[], [], []]
      , g = []
      , e = parseInt("" + Math.round(Math.PI) + Math.round(Math.SQRT2) + 7)
      , h = 0
      , m = !1
      , l = (new Date).getTime();
    Travian.request("quest/getPuzzle", {}, function(b) {
        a.puzzleTiles = [];
        f = [[], [], []];
        g = [];
        a.position = [];
        a.overlayClass = [];
        for (var c in b.images) {
            var l = Number(c) * e;
            h = h || Number(b.images[c].slice(l, l + 1));
            b.images[c] = b.images[c].slice(0, l) + b.images[c].slice(l + 1, b.images[c].length)
        }
        a.tileImage = b.images;
        for (c = 0; 9 > c; c++) {
            var l = c % 3
              , m = Math.floor(c / 3)
              , t = parseInt(b.init.substr(c, 1));
            f[l][m] = t;
            a.puzzleTiles[t] = {
                x: l,
                y: m
            };
            a.position[t] = {
                top: 132 * m + "px",
                left: 132 * l + "px"
            };
            a.overlayClass[t] = ""
        }
    });
    a.switchTiles = b;
    a.sendSolution = function() {
        Travian.request("quest/solvePuzzle", {
            moves: g
        }, function(b) {
            b.errors && "undefined" != typeof b.errors ? (a.showError = !0,
            delete b.errors) : a.closeWindow("questPuzzle")
        })
    }
    ;
    a.hideError = function() {
        a.showError = !1
    }
    ;
    a.selectTile = function(c, e) {
        var f = 0;
        if (!((new Date).getTime() < l + 500)) {
            a.selectedTile = -1;
            var h = a.overlayClass[c];
            if ("selected" != h && m) {
                for (f = 1; 9 >= f; f++) {
                    if ("selected" == a.overlayClass[f]) {
                        b(f, c);
                        return
                    }
                }
            }
            for (f = 1; 9 >= f; f++) {
                a.overlayClass[f] = ""
            }
            "selected" == h && m ? (m = !1,
            a.mouseOver(c)) : (m = e,
            a.overlayClass[c] = "selected",
            a.selectedTile = c)
        }
    }
    ;
    a.deselectAll = function() {
        if (!m) {
            a.selectedTile = -1;
            for (var b = 1; 9 >= b; b++) {
                a.overlayClass[b] = ""
            }
        }
    }
    ;
    a.mouseOver = function(b) {
        for (var c = 1; 9 >= c; c++) {
            "highlight" == a.overlayClass[c] && (a.overlayClass[c] = "")
        }
        "" == a.overlayClass[b] && (a.overlayClass[b] = "highlight")
    }
}
;
window.questPuzzleCtrl.$inject = ["$scope", "TutorialService"];
window.questVictoryCtrl = function(a, c) {
    function b() {
        g || (g = !0,
        a.fadeOut = !0,
        c(f, 1500))
    }
    function f() {
        e || (e = !0,
        Travian.writeRequest("quest/dialogAction", {
            questId: a.questId,
            command: "victory"
        }));
        a.closeWindow("questVictory")
    }
    a.questId = a.getParam("questId");
    if (a.questId) {
        a.victoryScreenId = a.getParam("victoryScreenId");
        var g = !1
          , e = !1;
        a.close = b;
        a.$on("$destroy", f);
        c(function() {
            a.fadeIn = !0
        }, 500);
        c(b, 3500)
    }
}
;
window.questVictoryCtrl.$inject = ["$scope", "$timeout"];
window.reportShareCtrl = function(a, c) {
    function b() {
        !h && (a.user.filled && a.societies.filled) && (a.shareWith = 0 < a.user.data.kingdomId ? "kingdom" : 0 < a.societies.data.length ? "secretSociety" : "player",
        h = !0)
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "",
        inWindowPopupTemplate: "tpl/report/shareReport.html"
    });
    a.shareMessageMaxLength = Travian.Config.charLimits.shareMessageCharLimit;
    var f = {
        0: Travian.translate("Report.ShareWithAll")
    };
    a.collection = a.getParam("collection");
    if ("undefined" == typeof a.collection || "" == a.collection) {
        a.collection = Report.COLLECTION_PERSONAL
    }
    a.shareWith = "";
    a.secretSociety = 0;
    a.shareMessage = "";
    a.shareWithPlayerName = "";
    a.shareWithPlayerId = "";
    a.user = c.p();
    a.societies = Society.getCollection();
    a.subscribe(a.user, b);
    a.subscribe(a.societies, function(a) {
        a = a.data;
        for (var c = 0; c < a.length; c++) {
            var e = a[c].data;
            f[e.groupId] = e.name
        }
        b()
    });
    var g = a.getParam("reportId")
      , e = a.getParam("reportToken");
    e && (a.reportType = e.toString().slice(0, -5),
    a.shareCode = g,
    a.shareCode += ("0" + Report.ALL_COLLECTIONS.indexOf(a.collection)).slice(-2),
    a.shareCode += ("0" + e).slice(-7));
    var h = !1;
    a.dropdownData = {
        bodyClass: "shareWithSocietyDropDown",
        options: f,
        selected: a.secretSociety,
        callback: function(b) {
            a.secretSociety = b
        }
    };
    a.selectSharePlayer = function(b) {
        b ? (a.shareWith = "player",
        a.shareWithPlayerId = b.playerId) : a.shareWithPlayerId = ""
    }
    ;
    a.clearPlayerId = function() {
        a.shareWithPlayerId = ""
    }
    ;
    a.setShareWith = function(b) {
        a.shareWith = b
    }
    ;
    a.share = function() {
        var b = 0;
        switch (a.shareWith) {
        case "secretSociety":
            b = a.secretSociety;
            break;
        case "player":
            b = a.shareWithPlayerId
        }
        Travian.request("reports/shareReport", {
            id: g,
            shareWith: a.shareWith,
            shareParam: b,
            shareMessage: a.shareMessage,
            collection: a.collection
        }, function(b) {
            a.handleError(b) && a.closeOverlay()
        })
    }
    ;
    a.$on("$destroy", function() {
        a.handleError({});
        a.l("reportToken")
    })
}
;
window.reportShareCtrl.$inject = ["$scope", "SessionService"];
window.reportSingleCtrl = function(a, c, b) {
    function f(b) {
        a.prevNext = null;
        c.getPrevAndNext(l, function(b) {
            b ? a.prevNext = b : (b = Math.max(0, (a.reportsPage - 1) * Report.REPORTS_PER_PAGE - 1),
            c.getReportHeaders(a.collection, b, Report.REPORTS_PER_PAGE + 2, [], function() {
                c.getPrevAndNext(l, function(b) {
                    a.prevNext = b
                })
            }))
        });
        a.header = b.header;
        a.body = b.body;
        a.troopsDataAttacker = [];
        a.troopsDataDefender = [];
        a.troopsDataSummary = [];
        a.troopsData = [];
        var f = [];
        a.showTribeDetails = [];
        a.header.successType = 1;
        var h = "";
        a.reportType = function() {
            switch (a.header.displayType) {
            case Report.DISPLAY_TYPE_SUPPORT:
                ;
            case Report.DISPLAY_TYPE_TROOP_RELEASE:
                ;
            case Report.DISPLAY_TYPE_ANIMALS_CAPTURE:
                return "troopsReport";
            case Report.DISPLAY_TYPE_TRADE:
                return "tradeReport";
            case Report.DISPLAY_TYPE_ADVENTURE:
                return "adventureReport";
            case Report.DISPLAY_TYPE_RELOCATION:
                return "relocationReport";
            case Report.DISPLAY_TYPE_PRESTIGE:
                return "prestigeReport";
            case Report.DISPLAY_TYPE_FARMLIST_RAID:
                ;
            case Report.DISPLAY_TYPE_FARMLIST_RAID_COMPLETE:
                return "farmlistReport";
            case Report.DISPLAY_TYPE_VACATION:
                return a.header.notificationType == Notifications.REPORT_SUPPORT_ARRIVED ? "troopsReport" : "fightReport";
            default:
                return "fightReport"
            }
        }();
        if (b.header.displayType == Report.DISPLAY_TYPE_FARMLIST_RAID || b.header.displayType == Report.DISPLAY_TYPE_FARMLIST_RAID_COMPLETE) {
            a.troopDetails = {
                originalTroops: {},
                lostTroops: {},
                tribeId: b.header.sourceTribeId
            };
            for (var m = {}, g = 1; 11 >= g; g++) {
                a.troopDetails.originalTroops[g] = 0,
                a.troopDetails.lostTroops[g] = 0,
                m[g] = 0
            }
            a.lootedRes = new Resources;
            a.lootedResSum = 0;
            a.carryCapacity = 0;
            a.header.ownRole = "";
            a.body.targets.sort(function(a, b) {
                return 0 >= a.arrivalTime ? 1 : 0 >= b.arrivalTime ? -1 : a.arrivalTime - b.arrivalTime
            });
            a.header.TroopLossSum = 0;
            for (var p = a.header.TroopSum = 0, g = 0; g < a.body.targets.length; g++) {
                var x = a.body.targets[g];
                a.carryCapacity += x.carryCapacity;
                if (0 < x.lootedResSum) {
                    var v = new Resources(x.lootedRes);
                    a.lootedResSum += x.lootedResSum;
                    a.lootedRes.addResources(v)
                }
                a.body.targets[g].EnemyTroopLossSum = 0;
                a.body.targets[g].enemyTroopSum = 0;
                a.body.targets[g].sumSent = 0;
                a.body.targets[g].sumDied = 0;
                a.body.targets[g].sumCaptured = 0;
                for (var D in x.sentTroops) {
                    var v = parseInt(x.sentTroops[D])
                      , C = 0;
                    void 0 !== x.diedTroops[D] && (C = parseInt(x.diedTroops[D]));
                    a.troopDetails.originalTroops[D] += v;
                    a.troopDetails.lostTroops[D] += C;
                    a.body.targets[g].sumSent += v;
                    a.body.targets[g].sumDied += C;
                    null != x.capturedTroops && void 0 !== x.capturedTroops[D] && (a.body.targets[g].sumDied += parseInt(x.capturedTroops[D]),
                    a.body.targets[g].sumCaptured += parseInt(x.capturedTroops[D]),
                    m[D] += parseInt(x.capturedTroops[D]))
                }
                for (var A in x.diedEnemyTroops) {
                    for (D in x.diedEnemyTroops[A]) {
                        a.body.targets[g].EnemyTroopLossSum += parseInt(x.diedEnemyTroops[A][D])
                    }
                }
                for (A in x.enemyTroops) {
                    for (D in x.enemyTroops[A]) {
                        a.body.targets[g].enemyTroopSum += parseInt(x.enemyTroops[A][D])
                    }
                }
                p += a.body.targets[g].sumCaptured;
                a.header.TroopSum += a.body.targets[g].sumSent;
                a.header.TroopLossSum += a.body.targets[g].sumDied
            }
            0 < p && (a.troopDetails.trappedTroops = m)
        }
        if (b.header.displayType == Report.DISPLAY_TYPE_PRESTIGE) {
            a.PrestigeCondition = PrestigeCondition;
            a.header.weekStartDate && a.header.weekStartDate[1] && (a.header.weekStartDate[1] = moment.monthsShort(parseInt(a.header.weekStartDate[1])));
            a.header.weekEndDate && a.header.weekEndDate[1] && (a.header.weekEndDate[1] = moment.monthsShort(parseInt(a.header.weekEndDate[1])));
            for (g = 0; g < a.body.conditions.length; g++) {
                a.body.conditions[g].type == PrestigeCondition.COMPLETE_ADVENTURE && (a.body.conditions[g].tooltipTranslationKey = "Prestige.Tooltip.AdventurePoints")
            }
            for (g = 0; g < a.body.medals.length; g++) {
                a.body.medals[g].rank = parseInt(a.body.medals[g].rank),
                a.body.medals[g].typeString = Medal.TypeString[a.body.medals[g].type]
            }
        }
        a.header.sourcePlayerId && !Player.isNPC(a.header.sourcePlayerId) && (a.header.sourcePlayer = Player.get(a.header.sourcePlayerId));
        a.header.destPlayerId && !Player.isNPC(a.header.destPlayerId) && (a.header.destPlayer = Player.get(a.header.destPlayerId));
        if (-1 != $.inArray(b.header.displayType, Report.DISPLAY_TYPES_FIGHT.concat(Report.DISPLAY_TYPES_VISIT)) && "undefined" != typeof a.body.modules) {
            a.infoModules = {};
            a.body.treasures && (a.infoModules.treasures = a.body.treasures);
            a.body.victoryPoints && (a.infoModules.victoryPoints = a.body.victoryPoints,
            a.infoModules.victoryPointsCap = a.body.victoryPointsCap);
            a.body.stolenGoods && (a.infoModules.stolenGoods = a.body.stolenGoods);
            a.body.capacity && (a.infoModules.loot = {
                capacity: a.body.capacity,
                storageBountySum: 0,
                tributeBountySum: 0,
                allBountySum: 0
            },
            a.body.bounty && (a.infoModules.bounty = angular.copy(a.body.bounty),
            $.each(a.body.bounty, function() {
                a.infoModules.loot.storageBountySum += this
            }),
            a.infoModules.loot.allBountySum += a.infoModules.loot.storageBountySum),
            a.body.tributeBounty && (a.infoModules.tributeBounty = a.body.tributeBounty,
            $.each(a.body.tributeBounty, function(b, c) {
                a.infoModules.loot.tributeBountySum += this;
                a.infoModules.bounty[b] += c
            }),
            a.infoModules.loot.allBountySum += a.infoModules.loot.tributeBountySum),
            a.body.treasures && (a.infoModules.loot.allBountySum += a.body.treasures),
            a.body.stolenGoods && (a.infoModules.loot.allBountySum += a.body.stolenGoods));
            b = function(b, c) {
                c = c || "info";
                a.infoModules[c + "Texts"] || (a.infoModules[c + "Texts"] = []);
                a.infoModules[c + "Texts"].push(b)
            }
            ;
            for (g = 0; g < a.body.modules.length; g++) {
                p = a.body.modules[g];
                if ("textLine" == p.name) {
                    m = {};
                    if (p.body.data) {
                        for (var x = p.body.data.split(","), F = 0; F < x.length; F++) {
                            D = x[F].split(":"),
                            m[D[0]] = D[1]
                        }
                    }
                    b(Travian.translate(p.body.languageKey, m))
                }
                "rescue" == p.name && b(Travian.translate(0 < p.body.ownTroopsFreed + p.body.ownTroopsSurvived ? 0 < p.body.otherTroopsFreed + p.body.otherTroopsSurvived ? "Troops.Rescued.Both" : "Troops.Rescued.OnlyOwn" : "Troops.Rescued.OnlyOther", p.body));
                if ("healed/defender" == p.name || "healed/attacker" == p.name || "healed/supporter" == p.name) {
                    a.infoModules.healed = p.body
                }
                if ("wounded/defender" === p.name || "wounded/attacker" === p.name || "wounded/supporter" === p.name) {
                    a.infoModules.wounded = p.body
                }
                "acceptance" == p.name && (0 == p.body.statusCode ? 0 < p.body.originalValue && b(Travian.translate("Troops.AcceptanceDecreased", {
                    orgVal: p.body.originalValue,
                    nowVal: p.body.finalValue
                })) : b(Travian.translate("Troops.AcceptanceError_" + p.body.statusCode), "error"),
                0 == p.body.finalValue && 0 == p.body.statusCode && b(Travian.translate("Troops.VillageConquered", {
                    villageName: a.header.destName
                })));
                "chickenboots" == p.name && b(Travian.translate("Troops.ChickenBoots", {
                    troopsAmount: p.body.troopsAmount
                }));
                if ("spy" == p.name) {
                    p.body.noSurvivors && ("attacker" == a.header.ownRole ? b(Travian.translate("Troops.AllSpiesDead"), "error") : b(Travian.translate("Troops.AllSpiesDefeated")));
                    if (null != p.body.tributes) {
                        a.body.bounty = angular.copy(p.body.resources);
                        a.body.tributeBounty = p.body.tributes;
                        for (var B in p.body.tributes) {
                            p.body.resources[B] += p.body.tributes[B]
                        }
                    }
                    a.infoModules.spy = p.body;
                    Player.isNPC(a.header.destPlayerId) && (delete a.infoModules.spy.hiddenByAllCrannies,
                    delete a.infoModules.spy.hiddenByTreasury)
                }
                "damage" == p.name && (a.infoModules.damage || (a.infoModules.damage = []),
                a.infoModules.damage.push(p.body));
                if (p.body.originalTroops && p.body.lostTroops) {
                    x = !1;
                    D = !0;
                    A = 0;
                    for (F in p.body.originalTroops) {
                        if (0 > p.body.lostTroops[F]) {
                            p.body.successType = 4;
                            p.body.unknown = !0;
                            break
                        }
                        0 < p.body.lostTroops[F] && (x = !0);
                        m = 0;
                        p.body.trappedTroops && (m = p.body.trappedTroops[F]);
                        parseInt(p.body.originalTroops[F]) > p.body.lostTroops[F] + m && (D = !1);
                        A += parseInt(p.body.originalTroops[F]);
                        if (!D && x) {
                            break
                        }
                    }
                    p.body.unknown || (p.body.successType = D && 0 != A ? x ? 3 : "troops/attacker" == p.name ? 3 : 4 : x ? 2 : 1)
                } else {
                    p.body.successType = a.header.notificationType
                }
                "troops/attacker" == p.name && (a.troopsDataAttacker = [p.body]);
                "troops/defender" == p.name && (p.body.type = "defender",
                a.troopsDataDefender.push(p.body));
                if ("troops/supporter" == p.name) {
                    if (p.body.type = "supporter",
                    a.troopsDataDefender.push(p.body),
                    f[p.body.tribeId]) {
                        m = f[p.body.tribeId];
                        m.playerId && (m = f[p.body.tribeId] = {
                            isGroup: !0,
                            lostTroops: angular.copy(m.lostTroops),
                            originalTroops: angular.copy(m.originalTroops),
                            successType: m.successType,
                            tribeId: m.tribeId,
                            type: "supporter"
                        },
                        a.troopsDataDefender.push(m),
                        a.showTribeDetails[m.tribeId] = !1);
                        for (F in p.body.lostTroops) {
                            m.lostTroops[F] += p.body.lostTroops[F]
                        }
                        for (F in p.body.originalTroops) {
                            m.originalTroops[F] = parseInt(m.originalTroops[F]) + parseInt(p.body.originalTroops[F])
                        }
                        2 != m.successType && m.successType != p.body.successType && (m.successType = 2)
                    } else {
                        f[p.body.tribeId] = angular.copy(p.body)
                    }
                }
                "troops/tribeSum" == p.name && a.troopsDataSummary.push(p.body);
                if ("capture" == p.name) {
                    m = 0;
                    for (F = 1; 11 >= F; F++) {
                        m += p.body.originalTroops[F]
                    }
                    p.body.cagedAnimals = m;
                    a.troopsData.push(p.body)
                }
            }
            if (0 == a.troopsDataDefender.length && 0 > $.inArray(a.header.displayType, Report.DISPLAY_TYPES_VISIT)) {
                for (g = 0; g < a.troopsDataSummary.length; g++) {
                    a.troopsDataSummary[g].tribeId == a.header.destTribeId && a.troopsDataDefender.push(a.troopsDataSummary.splice(g, 1)[0])
                }
                0 == a.troopsDataDefender.length && a.troopsDataDefender.push({
                    originalTroops: {
                        1: -1,
                        2: -1,
                        3: -1,
                        4: -1,
                        5: -1,
                        6: -1,
                        7: -1,
                        8: -1,
                        9: -1,
                        10: -1,
                        11: -1
                    },
                    successType: 4,
                    tribeId: a.header.destTribeId,
                    unknown: !0
                });
                a.troopsDataDefender[0] = $.extend(a.troopsDataDefender[0], {
                    playerId: a.header.destPlayerId,
                    playerName: a.header.destPlayerName,
                    type: "defender",
                    villageId: a.header.destId,
                    villageName: a.header.destName
                })
            }
            a.infoModules.spy && a.infoModules.spy.defence && (g = a.troopsDataDefender[0].tribeId,
            3 < g && (g = 1),
            a.infoModules.spy.targetTribeId = g);
            a.infoModules.damage && (g = a.troopsDataDefender[0].tribeId,
            g == Player.TRIBE.NATAR && (g = Player.TRIBE.ROMAN),
            a.infoModules.damage.targetTribeId = g);
            a.someInfoModules = !$.isEmptyObject(a.infoModules);
            if (a.header.displayType != Report.DISPLAY_TYPE_ANIMALS_CAPTURE && 0 > $.inArray(a.header.displayType, Report.DISPLAY_TYPES_VISIT)) {
                if (a.header.defenderReportType = 0 < a.header.defenderTroopLossSum ? a.header.defenderTroopLossSum == a.header.defenderTroopSum ? Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES : Notifications.REPORT_DEFENDER_WON_WITH_LOSSES : 0 < a.header.defenderTroopSum ? Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES : a.header.attackerTroopLossSum == a.header.attackerTroopSum ? Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES : Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES,
                a.header.attackerReportType = 0 < a.header.attackerTroopLossSum || 0 == a.header.attackerTroopSum ? a.header.attackerTroopLossSum == a.header.attackerTroopSum ? Notifications.REPORT_ATTACKER_LOST : Notifications.REPORT_ATTACKER_WON_WITH_LOSSES : Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES,
                a.header.successType = a.header[a.header.ownRole + "ReportType"],
                "defender" == a.header.ownRole && (a.header.successType -= Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES - Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES),
                a.header.displayType == Report.DISPLAY_TYPE_SPY) {
                    "defender" == a.header.ownRole ? a.header.attackerReportType != Notifications.REPORT_ATTACKER_LOST ? (a.header.defenderReportType = Notifications.REPORT_DEFENDER_WON_WITH_LOSSES,
                    a.header.successType = 2,
                    h = "Spy.Defender.Failure") : (a.header.defenderReportType = Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES,
                    a.header.successType = 1,
                    h = "Spy.Defender.Success") : (a.header.attackerReportType == Notifications.REPORT_ATTACKER_WON_WITH_LOSSES && (a.header.defenderReportType = Notifications.REPORT_DEFENDER_WON_WITH_LOSSES),
                    a.header.attackerReportType == Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES && (a.header.defenderReportType = Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES));
                    a.troopsDataAttacker[0].successType = a.header.attackerReportType;
                    for (g = 0; g < a.troopsDataDefender.length; g++) {
                        a.troopsDataDefender[g].successType = a.header.defenderReportType - e
                    }
                    for (g = 0; g < a.troopsDataSummary.length; g++) {
                        a.troopsDataSummary[g].successType = a.header.defenderReportType - e
                    }
                    g = Notifications.REPORT_SPY_SUCCESS_UNDETECTED - Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES;
                    a.header.attackerReportType += g;
                    a.troopsDataAttacker[0].successType += g
                }
            } else {
                0 <= $.inArray(a.header.displayType, Report.DISPLAY_TYPES_VISIT) && (a.header.defenderReportType = Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES)
            }
            a.defenderSuccessTypeOffset = 0 > $.inArray(a.header.displayType, Report.DISPLAY_TYPES_VISIT) ? e : 0;
            a.header.peaceType && (a.header.attackerReportType = Notifications.REPORT_WORLD_PEACE,
            h = "Peace")
        } else {
            a.troopsData = [a.body];
            a.troopsData[0].type = "";
            if (a.header.displayType === Report.DISPLAY_TYPE_RELOCATION && (a.itemTotalAmount = 0,
            a.body.loot)) {
                for (g = 0; g < a.body.loot.length; g++) {
                    a.body.loot[g].amount && (a.itemTotalAmount += a.body.loot[g].amount)
                }
            }
            if (a.header.displayType === Report.DISPLAY_TYPE_ADVENTURE) {
                for (g = 0; g < a.body.loot.length; g++) {
                    switch (f = a.body.loot[g],
                    f.type) {
                    case Report.ADVENTURE_LOOT_TYPE_NOTHING:
                        a.body.loot.splice(g, 1);
                        g--;
                        break;
                    case Report.ADVENTURE_LOOT_TYPE_RESOURCES:
                        a.body.loot.resources || (a.body.loot.resources = {
                            1: 0,
                            2: 0,
                            3: 0,
                            4: 0
                        });
                        for (F in a.body.loot.resources) {
                            a.body.loot.resources[F] += f.amount[F]
                        }
                        break;
                    case Report.ADVENTURE_LOOT_TYPE_SILVER:
                        a.body.loot.silver = a.body.loot.silver ? a.body.loot.silver + f.amount : f.amount;
                        break;
                    case Report.ADVENTURE_LOOT_TYPE_TROOPS:
                        a.body.loot.troops ? a.body.loot.troops[f.subType] = a.body.loot.troops[f.subType] ? a.body.loot.troops[f.subType] + f.amount : f.amount : (a.body.loot.troops = {},
                        a.body.loot.troops[f.subType] = f.amount);
                        break;
                    default:
                        a.body.loot.items || (a.body.loot.items = []),
                        a.body.loot.items.push({
                            itemType: f.subType,
                            amount: f.amount
                        })
                    }
                }
                a.body.loot.items && (a.heroFace = HeroFace.get(Travian.Player.data.playerId),
                a.subscribe(a.heroFace, function() {
                    a.avatar = a.heroFace.getViewModel()
                }));
                a.header.attackerReportType = Notifications.REPORT_ADVENTURE;
                a.header.successType = Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES;
                a.header.won || (a.header.attackerReportType += "_failed",
                a.header.successType = Notifications.REPORT_ATTACKER_LOST)
            }
        }
        h = h || function(b) {
            switch (a.header.displayType) {
            case Report.DISPLAY_TYPE_SUPPORT:
                return "Support";
            case Report.DISPLAY_TYPE_TRADE:
                return "Trade";
            case Report.DISPLAY_TYPE_RELOCATION:
                return "Relocation";
            case Report.DISPLAY_TYPE_ADVENTURE:
                return b ? "Success" : "Failure";
            case Report.DISPLAY_TYPE_SPY:
                return "Spy" + ("attacker" == a.body.ownRole ? ".Attacker" : ".Defender") + (b ? ".Success" : ".Failure");
            case Report.DISPLAY_TYPE_TROOP_RELEASE:
                return "PrisonersReleased";
            case Report.DISPLAY_TYPE_ANIMALS_CAPTURE:
                return "AnimalsCaptured";
            case Report.DISPLAY_TYPE_PRESTIGE:
                return "Prestige";
            case Report.DISPLAY_TYPE_VACATION:
                return "Vacation";
            default:
                return b ? "Won" : "Lost"
            }
        }(3 > a.header.successType);
        a.reportHeadline = Travian.translate("Report.Header_" + h);
        a.resultIcon = "";
        if (0 <= Notifications.FIGHT_AND_SPY_REPORTS.indexOf(a.header.notificationType)) {
            a.resultIcon = Notifications.TYPE_STRINGS[a.header.notificationType]
        } else {
            switch (a.header.notificationType) {
            case Notifications.REPORT_CAPTURED_ANIMALS:
                ;
            case Notifications.REPORT_TRADE:
                ;
            case Notifications.REPORT_TRADE_WOOD:
                ;
            case Notifications.REPORT_TRADE_CLAY:
                ;
            case Notifications.REPORT_TRADE_IRON:
                ;
            case Notifications.REPORT_TRADE_CROP:
                ;
            case Notifications.REPORT_VACATION:
                a.resultIcon = Notifications.TYPE_STRINGS[a.header.notificationType];
                break;
            case Notifications.REPORT_SUPPORT_ARRIVED:
                a.resultIcon = a.header.displayType == Report.DISPLAY_TYPE_VACATION ? Notifications.TYPE_STRINGS[Notifications.REPORT_VACATION] : Notifications.TYPE_STRINGS[a.header.notificationType];
                break;
            case Notifications.REPORT_ADVENTURE:
                a.resultIcon = a.header.successType == Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES ? Notifications.TYPE_STRINGS[a.header.notificationType + "_won"] : Notifications.TYPE_STRINGS[a.header.notificationType + "_lost"]
            }
        }
        a.isFavorite = !1;
        for (g = 0; g < n.data.length; g++) {
            n.data[g].data == a.header.bodyId.$id && (a.isFavorite = !0)
        }
        a.reportToken = "";
        a.header.securityCode && (a.reportToken = a.header.ownRole ? a.reportToken + a.header[a.header.ownRole + "ReportType"] : a.reportToken + a.header.notificationType,
        a.reportToken += a.header.securityCode);
        requestAngularApply(function() {
            a.$broadcast("scrollbarApi", "checkLazyRenderer")
        })
    }
    function g() {
        Travian.request("reports/getFullReport", {
            id: l,
            collection: a.collection,
            securityCode: p
        }, function(b) {
            if ("undefined" == typeof b || "undefined" != typeof b.errors) {
                if (a.collection == Report.COLLECTION_PERSONAL && "NotFound" == b.errors[0].message) {
                    Travian.request("reports/getFullReport", {
                        id: l,
                        collection: Report.COLLECTION_FAVORITE,
                        securityCode: p
                    }, function(a) {
                        if ("undefined" == typeof a || "undefined" != typeof a.errors) {
                            return !1
                        }
                        f(a)
                    }),
                    delete b.errors
                } else {
                    return !1
                }
            } else {
                f(b)
            }
        })
    }
    a.w.windowName = "Report";
    a.overlayConfig.k({
        inWindowPopupTitle: "",
        inWindowPopupTemplate: "tpl/report/report.html"
    });
    var e = 3
      , h = null
      , m = -1
      , h = Gameworld.get()
      , m = h.subscribe(function() {
        a.worldWonderActivated = !!h.isWorldWonderActivated()
    });
    a.collection = Report.COLLECTION_PERSONAL;
    a.header = {};
    a.body = {};
    a.player = Travian.Player;
    a.resNames = Resources.STRING;
    a.Report = Report;
    a.Notifications = Notifications;
    var l = a.getParam("reportId")
      , p = a.getParam("reportToken") || ""
      , n = ReportFavorites.getCollection();
    a.usedReportToken = p;
    a.highlight = a.getParam("highlight", !1, !0);
    a.changeReport = function(b) {
        l = a.prevNext[b];
        a.o("reportId", l);
        a.o("collection", a.prevNext[b + "Coll"]);
        a.collection = a.prevNext[b + "Coll"];
        g()
    }
    ;
    a.attackAgain = function() {
        if (a.header.notificationType == Notifications.REPORT_FARMLIST_RAID) {
            for (var c = [], e = 0; e < a.body.targets.length; e++) {
                c.push(parseInt(a.body.targets[e].destVillageId))
            }
            a.openWindow("building", {
                location: 32,
                tab: "FarmList",
                listId: a.header.destId
            }, {
                targets: c
            })
        } else {
            b.Sf("reportAttack"),
            a.openWindow("sendTroops", {
                x: a.header.destX,
                y: a.header.destY
            }, {
                type: a.header.attackType,
                preselect: a.troopsDataAttacker[0].originalTroops,
                onlySelect: !0,
                backTo: "reportAttack"
            })
        }
    }
    ;
    a.toSimulator = function() {
        function b() {
            a.openWindow("building", {
                location: 32,
                tab: "CombatSimulator"
            }, {
                combatSimulatorData: h
            })
        }
        var c = 0;
        if (a.infoModules.spy && a.infoModules.spy.defence) {
            for (var e = 0; e < a.infoModules.spy.defence.length; e++) {
                var f = a.infoModules.spy.defence[e];
                if (f.buildingType == Building.TYPE.CITY_WALL || f.buildingType == Building.TYPE.EARTH_WALL || f.buildingType == Building.TYPE.PALLISADE) {
                    c = f.buildingLevel
                }
            }
        }
        var h = {
            attacker: {
                attackType: a.header.attackType,
                tribeId: a.troopsDataAttacker[0].tribeId,
                troops: a.troopsDataAttacker[0].originalTroops,
                villageId: a.troopsDataAttacker[0].villageId
            },
            defender: {
                tribeId: a.troopsDataDefender[0].tribeId,
                troops: a.troopsDataDefender[0].originalTroops,
                villageId: a.troopsDataDefender[0].villageId,
                wallLevel: c
            },
            support: []
        }
          , c = null;
        a.troopsDataAttacker[0].playerId == Travian.Player.data.playerId && 0 < a.troopsDataAttacker[0].villageId && (c = Research.get(a.troopsDataAttacker[0].villageId),
        h.attacker.research = c);
        a.troopsDataDefender[0].playerId == Travian.Player.data.playerId && 0 < a.troopsDataDefender[0].villageId && (c = Research.get(a.troopsDataDefender[0].villageId),
        h.defender.research = c);
        for (e = 1; e < a.troopsDataDefender.length; e++) {
            a.troopsDataDefender[e].isGroup || (f = {
                tribeId: a.troopsDataDefender[e].tribeId,
                troops: a.troopsDataDefender[e].originalTroops,
                villageId: a.troopsDataDefender[e].villageId
            },
            a.troopsDataDefender[e].playerId == Travian.Player.data.playerId && 0 < a.troopsDataDefender[e].villageId && (c = Research.get(a.troopsDataDefender[e].villageId),
            f.research = c),
            h.support.push(f))
        }
        if ("attacker" == a.body.ownRole) {
            for (e = 0; e < a.troopsDataSummary.length; e++) {
                f = {
                    tribeId: a.troopsDataSummary[e].tribeId,
                    troops: a.troopsDataSummary[e].originalTroops
                },
                h.support.push(f)
            }
        }
        c ? a.subscribe(c, b) : b()
    }
    ;
    a.reportShareable = function() {
        if (7 == a.header.displayType) {
            return !1
        }
        var b = [Report.COLLECTION_PERSONAL, Report.COLLECTION_FAVORITE];
        return (a.header.sourcePlayerId == a.player.data.playerId || a.header.destPlayerId == a.player.data.playerId) && -1 != $.inArray(a.collection, b) && -1 != $.inArray(a.header.notificationType, Notifications.FIGHT_AND_SPY_REPORTS) && ("undefined" == typeof a.header.sharedBy || a.header.sharedBy == a.player.data.playerId)
    }
    ;
    a.toggleFavorite = function() {
        a.isFavorite ? Travian.request("reports/removeAsFavorite", {
            bodyId: a.header.bodyId.$id
        }, function() {
            "favorite" == a.collection && (a.closeOverlay(),
            a.$root.$broadcast("newReport"));
            a.isFavorite = !1
        }) : Travian.request("reports/markAsFavorite", {
            id: l,
            collection: a.header.collection,
            securityCode: p
        }, function() {
            a.isFavorite = !0
        })
    }
    ;
    if (l) {
        a.$on("newReport", function() {
            null == a.prevNext.prev && c.getReportHeaders(a.collection, 0, 10, [], function() {
                c.getPrevAndNext(l, function(b) {
                    a.prevNext = b
                })
            })
        });
        a.collection = a.getParam("collection");
        if ("undefined" == typeof a.collection || "" == a.collection) {
            a.collection = Report.COLLECTION_PERSONAL
        }
        a.reportsPage = a.getParam("cp") || 1;
        g()
    }
    a.$on("destroy", function() {
        null !== h && 0 <= m && (h.unsubscribe(m),
        m = -1)
    })
}
;
window.reportSingleCtrl.$inject = ["$scope", "ReportsService", "RoutingService"];
window.reportStreamCtrl = function(a, c, b) {
    function f() {
        if ("undefined" == typeof a.showCollection) {
            b(f, 10)
        } else {
            if (!e) {
                a.showCollection == Report.COLLECTION_PERSONAL && a.reportFilters.push("misc");
                a.showCollection != Report.COLLECTION_SEARCH && (a.w.searchInputOverride = "");
                if (g) {
                    var c = localStorage.getItem("reportFilters." + a.showCollection);
                    if (null != c) {
                        for (var c = JSON.parse(c), h = 0; h < c.length; h++) {
                            a.filterActive[c[h]] = !0
                        }
                    }
                }
                e = !0
            }
        }
    }
    a.filterActive = {};
    a.reportFilters = ["att", "def", "spy1", "spy2", Notifications.REPORT_SHARED];
    a.reportFilterGroups = {
        att: [Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES, Notifications.REPORT_ATTACKER_WON_WITH_LOSSES, Notifications.REPORT_ATTACKER_LOST, Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITHOUT_LOSSES, Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_LOSSES, Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_FULL_LOSSES, Notifications.REPORT_FARMLIST_RAID],
        def: [Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES, Notifications.REPORT_DEFENDER_WON_WITH_LOSSES, Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES, Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES],
        spy1: [Notifications.REPORT_SPY_SUCCESS_UNDETECTED, Notifications.REPORT_SPY_SUCCESS_DETECTED, Notifications.REPORT_SPY_FAILURE],
        spy2: [Notifications.REPORT_SPY_DEFENDED, Notifications.REPORT_SPY_NOT_DEFENDED],
        misc: [Notifications.REPORT_ADVENTURE, Notifications.REPORT_TRADE, Notifications.REPORT_SUPPORT_ARRIVED, Notifications.REPORT_CAPTURED_ANIMALS, Notifications.TROOPS_RELEASED, Notifications.REPORT_WORLD_PEACE, Notifications.REPORT_PRESTIGE, Notifications.REPORT_RELOCATION]
    };
    var g = hasLocalStorage()
      , e = !1;
    f();
    a.numberOfItems = 0;
    a.pagination = {
        currentPage: 0
    };
    a.displayCurrentPage = function(f) {
        null == f && (f = 1);
        if ("undefined" != typeof a.showCollection && e) {
            a.pagination.currentPage = f;
            var h = (f - 1) * a.itemsPerPage, l = [], g;
            for (g in a.filterActive) {
                if (!isNaN(g)) {
                    switch (l.push(g),
                    parseInt(g)) {
                    case Notifications.REPORT_TRADE:
                        l.push(Notifications.REPORT_TRADE_WOOD);
                        l.push(Notifications.REPORT_TRADE_CLAY);
                        l.push(Notifications.REPORT_TRADE_CROP);
                        l.push(Notifications.REPORT_TRADE_IRON);
                        break;
                    case Notifications.REPORT_SHARED:
                        l.push(Notifications.REPORT_SHARED_OWN);
                        l.push(Notifications.REPORT_SHARED_KINGDOM);
                        l.push(Notifications.REPORT_SHARED_SOCIETIES);
                        break;
                    case Notifications.REPORT_WORLD_PEACE:
                        l.push(Notifications.REPORT_VACATION)
                    }
                }
            }
            g = a.getParam("lastTime", !1, !0);
            null != g && l.push({
                lastTime: g
            });
            a.showCollection == Report.COLLECTION_SEARCH && null != a.searchObj && l.push(a.searchObj);
            a.showCollection == Report.COLLECTION_SOCIETY && 0 != a.societyDropdown.selected && l.push({
                societyId: a.societyDropdown.selected
            });
            c.getReportHeaders(a.showCollection, h, a.itemsPerPage, l, function(b) {
                a.reports = b;
                a.numberOfItems = c.getTotalNumberOfReports(a.showCollection)
            });
            a.allReports.checked = !1
        } else {
            b(function() {
                a.displayCurrentPage(f)
            }, 10)
        }
    }
    ;
    var h = 0
      , m = a.getParam("reportTypes", !1, !0);
    if (null != m) {
        for (var m = ("" + m).split(","), l = 0; l < m.length; l++) {
            a.filterActive[m[l]] = !0;
            for (var p in a.reportFilterGroups) {
                for (var n = 0; n < a.reportFilterGroups[p].length; n++) {
                    a.reportFilterGroups[p][n] == m[l] && (a.filterActive[p] = !0)
                }
            }
            if (isNaN(m[l])) {
                for (n = 0; n < a.reportFilterGroups[m[l]].length; n++) {
                    a.filterActive[a.reportFilterGroups[m[l]][n]] = !0
                }
            }
        }
        e = !0
    }
    a.$on("$destroy", function() {
        a.l("reportTypes");
        a.l("lastTime")
    });
    a.w.toggleFilter = function(b, c) {
        c = "undefined" !== typeof c;
        a.l("reportTypes");
        a.l("lastTime");
        var e = (new Date).getTime();
        if (!(e < h + 200)) {
            h = e;
            isNaN(b) || (b = parseInt(b));
            -1 != a.reportFilters.indexOf(b) ? "undefined" == typeof a.filterActive[b] ? (a.filterActive = {},
            a.filterActive[b] = !0) : a.filterActive = {} : ("undefined" == typeof a.filterActive[b] ? c || (a.filterActive[b] = !0) : delete a.filterActive[b],
            1 >= Object.keys(a.filterActive).length && (a.filterActive = {}));
            if (isNaN(b)) {
                for (e = 0; e < a.reportFilterGroups[b].length; e++) {
                    var f = a.reportFilterGroups[b][e];
                    "undefined" != typeof a.filterActive[b] ? a.filterActive[f] = !0 : delete a.filterActive[f]
                }
            }
            a.displayCurrentPage(1);
            if (g) {
                e = [];
                for (b in a.filterActive) {
                    e.push(b)
                }
                localStorage.setItem("reportFilters." + a.showCollection, JSON.stringify(e))
            }
        }
    }
    ;
    a.stream.applyFilters = function() {
        a.displayCurrentPage(1)
    }
    ;
    a.noCheckboxSelected = function() {
        if ("undefined" != typeof a.reports) {
            for (var b in a.reports) {
                if (a.reports[b].hasOwnProperty("checked") && !0 == a.reports[b].checked) {
                    return !1
                }
            }
        }
        return !0
    }
    ;
    a.allReports = {
        checked: !1
    };
    a.selectAll = function() {
        "undefined" != typeof a.reports && $.each(a.reports, function(b, c) {
            c.checked = a.allReports.checked
        })
    }
    ;
    a.$on("newReport", function() {
        1 !== a.pagination.currentPage && a.itemsPerPage * (a.pagination.currentPage - 1) >= a.numberOfItems - 1 && (a.pagination.currentPage -= 1);
        a.displayCurrentPage(a.pagination.currentPage)
    })
}
;
window.reportStreamCtrl.$inject = ["$scope", "ReportsService", "$timeout"];
window.reportsCtrl = function(a, c) {
    a.w.contentHeaderTemplate = "tpl/reports/partials/reportsHeader.html";
    ReportFavorites.getCollection();
    a.itemsPerPage = Report.REPORTS_PER_PAGE;
    a.stream = {
        applyFilters: y()
    };
    a.numberOfItems = 0;
    a.subscribe(Travian.Player, function() {
        a.tabConfig.tabs = 0 < Travian.Player.data.kingdomId ? ["Own", "Kingdom", "SecretSociety", "Favorites", "Search"] : ["Own", "SecretSociety", "Favorites", "Search"]
    });
    a.tabConfig.bodyTemplatePrefix = "tpl/reports/reports";
    a.tabConfig.disableCaching = !0;
    a.searchValue = "";
    a.searchObj = null;
    a.isMinion = Travian.Player.isGovernor();
    a.societyDropdown = {
        selected: 0,
        options: {},
        callback: function() {
            a.stream.applyFilters()
        }
    };
    var b = Society.getCollection();
    a.subscribe(b, function() {
        a.societyDropdown.options = {};
        a.societyDropdown.options[0] = Travian.translate("Report.SocietyFilter.All");
        for (var c = 0; c < b.data.length; c++) {
            var f = b.data[c];
            a.societyDropdown.options[f.data.groupId] = f.data.name
        }
    });
    a.societyFilter = 0;
    a.w.searchInputOverride = "";
    a.w.searchReports = function(b) {
        a.searchObj = b;
        a.searchObj && (void 0 !== a.searchObj.name && "" != a.searchObj.name) && (a.searchValue = a.searchObj.name);
        "Search" != c.getParam("tab") ? c.o("tab", "Search") : "function" == typeof a.w.toggleFilter && (a.w.toggleFilter(Notifications.REPORT_FARMLIST_RAID, !0),
        a.stream.applyFilters())
    }
    ;
    var f = a.getParam("villageId");
    if ("Search" == a.getParam("tab", !1, !1)) {
        if ("undefined" !== typeof f) {
            var g = Village.get(f);
            a.subscribe(g, function() {
                a.w.searchInputOverride = g.data.name;
                a.searchValue = g.data.name
            });
            a.w.searchReports({
                villageId: f
            });
            c.l("villageId")
        } else {
            c.o("tab", a.tabConfig.tabs[0])
        }
    }
}
;
window.reportsCtrl.$inject = ["$scope", "RoutingService"];
window.getExternalLoginCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "ExternalLogin",
        inWindowPopupContentTemplate: "tpl/profile/settings/partials/getExternalLogin.html"
    });
    a.input = {
        publicSiteKey: ""
    };
    a.externalLoginKey = !1;
    a.handleError({}, "apiError");
    a.requestExternalLogin = function() {
        Travian.writeRequest("player/requestExternalLogin", {
            publicSiteKey: a.input.publicSiteKey
        }, function(c) {
            "undefined" != typeof c.errors ? (a.handleError(c, "apiError"),
            a.externalLoginKey = !1) : a.externalLoginKey = c.loginKey
        })
    }
}
;
window.getExternalLoginCtrl.$inject = ["$scope", "RoutingService"];
window.manageSitterAndDualsCtrl = function(a, c) {
    a.isDual = c.Ia();
    a.overlayConfig.k({
        inWindowPopupTitle: "Settings.Sitters" + (a.isDual ? "" : "AndDuals") + ".Overlay.Headline",
        inWindowPopupContentTemplate: "tpl/profile/settings/partials/manageSitterAndDuals.html"
    });
    a.openLobby = function() {
        window.open("//" + Travian.Config.gameLobbyUrl + "/#/show-avatar/" + Travian.Player.data.avatarIdentifier, "_blank")
    }
}
;
window.manageSitterAndDualsCtrl.$inject = ["$scope", "SessionService"];
window.settingsCtrl = function(a, c, b, f, g, e) {
    a.w.windowName = "Settings.Title";
    a.settingsTabConfig = {};
    a.settingsTabConfig.tabs = ["Gameplay", "FX", "Avatar"];
    a.settingsTabConfig.bodyTemplatePrefix = "tpl/profile/settings/tabs/";
    a.settingsTabConfig.routeNamedParam = "prosubtab";
    a.settingsTabConfig.tabName = "subtab";
    a.settingsTabConfig.tabType = "subtab";
    a.Player = Player;
    a.Settings = Settings;
    a.playerId = c.getPlayerId();
    a.settings = Settings.get(a.playerId);
    a.player = c.p();
    a.canDeleteAccount = !1;
    a.canAbortDeletion = !0;
    a.goldUnblockTime = Travian.Config.DeletionAfterBuyingGoldTimeout;
    a.timeZoneSwitcher = {
        value: 0
    };
    a.current = {
        timeType: Settings.TIME_TYPES.UTC
    };
    a.mute = {
        all: !1
    };
    a.music = {
        value: 0
    };
    a.sound = {
        value: 0
    };
    a.uiSound = {
        value: 0
    };
    a.vacationDaysDropdown = {
        placeholder: "Settings.VacationMode.PlanVacation.DropdownPlaceholder",
        resize: !0
    };
    a.subscribe(a.player, function() {
        a.goldDeletionTimeout = a.player.isGoldDeletionTimeout();
        a.canDeleteAccount = !1;
        !a.player.isOnMap() || (c.K() || c.Ia() || a.player.isGoldDeletionTimeout()) || (a.canDeleteAccount = !0);
        a.player.data.isPunished && (a.canAbortDeletion = !1);
        a.vacationDaysDropdown.options = Array.apply(null, {
            length: Travian.Config.vacation.vacationDays - a.player.data.usedVacationDays + 1
        }).map(Number.call, Number).slice(1);
        a.isWWOwner = a.player.isWWOwner();
        a.isSitter = c.K();
        a.isDual = c.Ia()
    });
    a.checkboxSettings = {
        enableTabNotifications: {
            hasTooltip: !1
        },
        enableHelpNotifications: {
            hasTooltip: !1
        },
        enableWelcomeScreen: {
            hasTooltip: !1
        },
        disableAnimations: {
            hasTooltip: !0
        },
        showSeasonalTheme: {
            hasTooltip: !1
        },
        showSnowfall: {
            hasTooltip: !1
        }
    };
    a.premiumConfirmationDropdown = {
        selected: a.settings.data.premiumConfirmation,
        options: {
            0: "GoldAndPremium",
            2: "Gold",
            3: "None"
        },
        resize: !0
    };
    a.changeVacationState = function() {
        if (a.player.data.vacationState == Player.VACATION_STATE_ACTIVE) {
            a.openOverlay("abortVacation")
        } else {
            var b = {};
            a.player.data.vacationState == Player.VACATION_STATE_INACTIVE && (b.days = (a.vacationDaysDropdown.selected || 0) + 1,
            delete a.vacationDaysDropdown.selected);
            Travian.writeRequest("player/changeVacationState", b)
        }
    }
    ;
    a.saveSettings = function() {
        for (var b in a.checkboxSettings) {
            a.settings.data[b] = a.checkboxSettings[b].value
        }
        a.settings.data.premiumConfirmation = a.premiumConfirmationDropdown.selected;
        a.settings.data.onlineStatusFilter = a.onlineStatusDropdown.selected;
        a.settings.data.timeType = a.current.timeType;
        a.settings.data.timeZone = a.currentTimeZone;
        a.settings.data.timeZoneSwitcher = a.timeZoneSwitcher.value;
        a.settings.data.muteAll = a.mute.all;
        a.settings.data.timeFormat = a.timeFormatDropdown.selected;
        a.settings.data.lang != a.currentLang && (changeLanguage(a.currentLang),
        a.settings.data.lang = a.currentLang,
        f.Xf(a.currentLang));
        a.settings.persist();
        a.soundChanged = !1
    }
    ;
    a.somethingChanged = function() {
        for (var b in a.checkboxSettings) {
            if (a.settings.data[b] != a.checkboxSettings[b].value) {
                return !0
            }
        }
        return a.settings.data.premiumConfirmation != a.premiumConfirmationDropdown.selected || a.soundChanged || a.settings.data.onlineStatusFilter != a.onlineStatusDropdown.selected || a.settings.data.timeZone != a.currentTimeZone || a.settings.data.lang != a.currentLang || a.settings.data.timeFormat != a.timeFormatDropdown.selected || a.settings.data.muteAll != a.mute.all || a.settings.data.timeZoneSwitcher != a.timeZoneSwitcher.value || a.settings.data.timeType != a.current.timeType ? !0 : !1
    }
    ;
    a.timeZoneDropdown = {
        selected: a.currentTimeZone,
        options: [],
        callback: function() {
            a.currentTimeZone = a.timeZoneDropdown.options[a.timeZoneDropdown.selected].value
        },
        resize: !0
    };
    a.timeZoneDropdown.options = [];
    a.timeZoneDropdown.options.push({
        value: "-12.00",
        text: "-12:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-11.00",
        text: "-11:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-10.00",
        text: "-10:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-9.50",
        text: "-09:30"
    });
    a.timeZoneDropdown.options.push({
        value: "-9.00",
        text: "-09:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-8.00",
        text: "-08:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-7.00",
        text: "-07:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-6.00",
        text: "-06:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-5.00",
        text: "-05:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-4.00",
        text: "-04:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-3.50",
        text: "-03:30"
    });
    a.timeZoneDropdown.options.push({
        value: "-3.00",
        text: "-03:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-2.00",
        text: "-02:00"
    });
    a.timeZoneDropdown.options.push({
        value: "-1.00",
        text: "-01:00"
    });
    a.timeZoneDropdown.options.push({
        value: "0.00",
        text: "\u00b100:00"
    });
    a.timeZoneDropdown.options.push({
        value: "1.00",
        text: "+01:00"
    });
    a.timeZoneDropdown.options.push({
        value: "2.00",
        text: "+02:00"
    });
    a.timeZoneDropdown.options.push({
        value: "3.00",
        text: "+03:00"
    });
    a.timeZoneDropdown.options.push({
        value: "3.50",
        text: "+03:30"
    });
    a.timeZoneDropdown.options.push({
        value: "4.00",
        text: "+04:00"
    });
    a.timeZoneDropdown.options.push({
        value: "4.50",
        text: "+04:30"
    });
    a.timeZoneDropdown.options.push({
        value: "5.00",
        text: "+05:00"
    });
    a.timeZoneDropdown.options.push({
        value: "5.50",
        text: "+05:30"
    });
    a.timeZoneDropdown.options.push({
        value: "5.75",
        text: "+05:45"
    });
    a.timeZoneDropdown.options.push({
        value: "6.00",
        text: "+06:00"
    });
    a.timeZoneDropdown.options.push({
        value: "6.50",
        text: "+06:30"
    });
    a.timeZoneDropdown.options.push({
        value: "7.00",
        text: "+07:00"
    });
    a.timeZoneDropdown.options.push({
        value: "8.00",
        text: "+08:00"
    });
    a.timeZoneDropdown.options.push({
        value: "8.50",
        text: "+08:30"
    });
    a.timeZoneDropdown.options.push({
        value: "8.75",
        text: "+08:45"
    });
    a.timeZoneDropdown.options.push({
        value: "9.00",
        text: "+09:00"
    });
    a.timeZoneDropdown.options.push({
        value: "9.50",
        text: "+09:30"
    });
    a.timeZoneDropdown.options.push({
        value: "10.00",
        text: "+10:00"
    });
    a.timeZoneDropdown.options.push({
        value: "10.50",
        text: "+10:30"
    });
    a.timeZoneDropdown.options.push({
        value: "11.00",
        text: "+11:00"
    });
    a.timeZoneDropdown.options.push({
        value: "12.00",
        text: "+12:00"
    });
    a.timeZoneDropdown.options.push({
        value: "12.75",
        text: "+12:45"
    });
    a.timeZoneDropdown.options.push({
        value: "13.00",
        text: "+13:00"
    });
    a.timeZoneDropdown.options.push({
        value: "14.00",
        text: "+14:00"
    });
    a.timeFormatDropdown = {
        placeholder: "Settings.ChooseTimeFormat",
        selected: -1,
        options: ["EU", "US", "UK", "ISO"],
        callback: function() {
            a.currentLang = a.languageDropdown.options[a.languageDropdown.selected].languageKey
        },
        resize: !0
    };
    a.languageDropdown = {
        placeholder: "Settings.ChooseLanguage",
        selected: -1,
        options: [],
        callback: function() {
            a.currentLang = a.languageDropdown.options[a.languageDropdown.selected].languageKey
        },
        resize: !0
    };
    for (var h in Travian.Config.selectableLanguages) {
        a.languageDropdown.options.push({
            languageKey: h,
            languageName: Travian.Config.selectableLanguages[h]
        })
    }
    a.saveLanguage = function() {
        changeLanguage(a.currentLang);
        a.settings.data.lang = a.currentLang;
        a.settings.persist();
        f.Xf(a.currentLang)
    }
    ;
    a.onlineStatusDropdown = {
        selected: a.settings.data.onlineStatusFilter,
        options: {
            0: "kingdomMembers",
            1: "friends",
            2: "nobody"
        }
    };
    a.soundChanged = !1;
    a.onSoundChange = function() {
        if (m) {
            var b = a.settings.data;
            b.muteAll = a.mute.all;
            b.musicVolume = a.music.value;
            b.soundVolume = a.sound.value;
            b.uiSoundVolume = a.uiSound.value;
            g.ig();
            a.soundChanged = !1;
            b.muteAll != m.muteAll ? a.soundChanged = !0 : $.each(["music", "sound", "uiSound"], function(c, e) {
                if (b[e + "Volume"] != m[e + "Volume"]) {
                    return a.soundChanged = !0,
                    !1
                }
            })
        }
    }
    ;
    a.playUiSoundDummy = function() {
        g.U(fb)
    }
    ;
    a.onGraphicsSettingChange = function(b, c) {
        switch (c) {
        case "animations":
            ;
        case "season":
            a.checkboxSettings.snowfallModel = a.checkboxSettings.showSnowfall.value && a.checkboxSettings.showSeasonalTheme.value && !a.checkboxSettings.disableAnimations.value;
            a.checkboxSettings.snowfallDisabled = !a.checkboxSettings.showSeasonalTheme.value || a.checkboxSettings.disableAnimations.value;
            break;
        case "snowfall":
            a.checkboxSettings.showSnowfall.value = !a.checkboxSettings.showSnowfall.value
        }
    }
    ;
    a.abortDeletion = function() {
        0 < a.player.data.deletionTime && Travian.writeRequest("player/abortDeletion", {}, function(b) {
            a.handleError(b)
        })
    }
    ;
    var m = null;
    a.subscribe(a.settings, function() {
        m = angular.copy(a.settings.data);
        a.onlineStatusDropdown.selected = a.settings.data.onlineStatusFilter;
        for (var b = 0; b < a.timeZoneDropdown.options.length; b++) {
            if (a.timeZoneDropdown.options[b].value == a.settings.data.timeZone) {
                a.timeZoneDropdown.selected = b;
                break
            }
        }
        for (b = 0; b < a.languageDropdown.options.length; b++) {
            if (a.languageDropdown.options[b].languageKey == a.settings.data.lang) {
                a.languageDropdown.selected = b;
                break
            }
        }
        for (var c in a.checkboxSettings) {
            a.checkboxSettings[c].value = a.settings.data[c]
        }
        a.premiumConfirmationDropdown.selected = a.settings.data.premiumConfirmation;
        a.currentLang = a.settings.data.lang;
        a.currentTimeZone = a.settings.data.timeZone;
        a.current.timeType = a.settings.data.timeType;
        a.timeZoneSwitcher.value = a.settings.data.timeZoneSwitcher;
        a.timeFormatDropdown.selected = a.settings.data.timeFormat;
        a.mute.all = a.settings.data.muteAll;
        a.music.value = a.settings.data.musicVolume;
        a.sound.value = a.settings.data.soundVolume;
        a.uiSound.value = a.settings.data.uiSoundVolume;
        e.$i(a.settings.data.enableTabNotifications)
    });
    a.$on("$destroy", function() {
        m && (a.settings.data = m,
        a.soundChanged && g.ig())
    })
}
;
window.settingsCtrl.$inject = "$scope SessionService $window MellonService AudioService NotificationService".split(" ");
window.startDeletionCtrl = function(a, c, b) {
    a.overlayConfig.k({
        inWindowPopupTitle: "DeleteAccount",
        inWindowPopupContentTemplate: "tpl/profile/settings/partials/startDeletion.html"
    });
    a.input = {
        deletePassword: null
    };
    a.handleError({}, "deletionError");
    var f = !1;
    a.deleteAccount = function() {
        var a = {};
        a.requestAction = Player.ACTION_DELETE_ACCOUNT;
        a.url = window.location.href;
        Travian.writeRequest("player/requestVerification", a, function(a) {
            "undefined" != typeof a.token && (a = b.wa().getAccountPasswordVerification(a.token),
            b.Fa(a).open())
        })
    }
    ;
    a.$on("urlChanged", function() {
        var b = c.getParam("verification");
        null == b || ("" == b || f) || (f = !0,
        Travian.writeRequest("player/verifyAction", {
            token: b
        }, function() {
            c.l("verification");
            a.closeOverlay()
        }))
    })
}
;
window.startDeletionCtrl.$inject = ["$scope", "RoutingService", "MellonService"];
window.notEnoughGoldCtrl = function(a, c) {
    a.w.windowName = "Payment.NotEnoughGold.Headline";
    a.shopAvailable = !0;
    a.openShop = function(b) {
        a.closeWindow("notEnoughGold");
        Travian.rootScope.windows.shop ? "Gold" != c.getParam("tab") && (c.o("tab", "Gold"),
        b && (Travian.rootScope.windows.shop.params.gold = a.getParam("price"))) : a.openWindow("shop", {
            tab: "Gold"
        }, b ? {
            gold: a.getParam("price")
        } : {})
    }
}
;
window.notEnoughGoldCtrl.$inject = ["$scope", "RoutingService"];
window.shopCtrl = function(a, c, b, f, g, e) {
    function h() {
        var b = parseInt(a.getParam("gold", !1, !0));
        if (b && a.goldPackages) {
            a.l("gold");
            for (var c = 0; c < a.goldPackages.length; c++) {
                if (b < a.goldPackages[c].gold) {
                    return a.selectProduct(a.goldPackages[c]),
                    !0
                }
            }
        }
        return !1
    }
    function m(b) {
        a.deals && !b || Travian.request("payment/getBundles", {}, function(b) {
            function c(a) {
                for (var b = 0, e = a.length; b < e; b++) {
                    if (a[b].limitation && a[b].limitation <= a[b].booked || a[b].endTime && a[b].endTime < Travian.rootScope.currentServerTime || 0 > Travian.Player.data[a[b].name + "Time"]) {
                        x = x || a[b].name,
                        a.push(a.splice(b, 1)[0]),
                        b--,
                        e--
                    }
                }
            }
            if (b && !b.errors) {
                a.deals = b;
                for (var e = 0; e < a.deals.length; e++) {
                    var h = a.deals[e];
                    h.startTime && h.startTime - (h.previewSeconds || 0) > Travian.rootScope.currentServerTime ? a.deals.splice(e--, 1) : (h.discount = r[h.name],
                    h.tags = t[h.name],
                    h.features && 0 < h.features.length ? l(h) : a.shopIsUnavailable ? h.unavailable = a.shopIsUnavailable : h.load = a.initShop,
                    h.limitation && h.limitation > h.booked && function(a) {
                        a.premiumCallback = function() {
                            var b = {
                                callback: function(b) {
                                    b && (!1 !== b.data && !b.errors) && (a.booked++,
                                    m(!0))
                                }
                            };
                            a.name == PremiumFeature.FEATURE_NAME_HALLOWEEN_PACKAGE && (a.features.find(function(a) {
                                return "halloweenMask" == a.name
                            }) || (b.confirmation = !0));
                            return b
                        }
                    }(h))
                }
                a.deals = a.deals.concat(q.map(function(c) {
                    if (Travian.Config.PremiumFeatures[c.name].bookableWholeGameRound) {
                        var e = f.R()
                          , h = Math.max(1, Math.round((e - Travian.Config.worldStart) / 86400))
                          , e = Math.max(0, Math.round((Travian.Player.data[c.name + "Time"] - e) / 86400))
                          , l = Travian.Config.PremiumFeatures[c.name].price
                          , g = Math.max(Travian.Config.PremiumFeatures.minimumPriceMultiplier * l, Math.round(l * (Travian.Config.PremiumFeatures.estimatedWorldAge - h - e) * (Travian.Config.PremiumFeatures.discountPriceFactor / (Travian.Config.PremiumFeatures[c.name].duration / 86400))));
                        return Object.assign(angular.copy(c), {
                            duration: -1,
                            price: g,
                            limitation: 1,
                            booked: 0 > Travian.Player.data[c.name + "Time"],
                            discount: r[c.name],
                            tags: t[c.name],
                            premiumCallback: function(e) {
                                return {
                                    bookGameRound: "true" == e,
                                    price: "true" == e ? g : l,
                                    callback: function() {
                                        if (b && !1 !== b.data && !b.errors) {
                                            for (var e in a.deals) {
                                                a.deals[e].name == c.name && (a.deals[e].booked = 1)
                                            }
                                            p()
                                        }
                                    }
                                }
                            }
                        })
                    }
                }).filter(function(a) {
                    return a
                }));
                if (0 < s.length) {
                    var g = []
                      , n = a.deals.length;
                    s.forEach(function(b) {
                        for (var c in a.deals) {
                            if (a.deals[c].name == b) {
                                b == x && (n = g.length);
                                g.push(a.deals.splice(c, 1)[0]);
                                break
                            }
                        }
                    });
                    0 < a.deals.length && (c(a.deals),
                    g = g.slice(0, n).concat(a.deals).concat(g.slice(n)));
                    a.deals = g
                } else {
                    c(a.deals)
                }
                s = a.deals.map(function(a) {
                    return a.name
                });
                a.onDealsPageChange(a.deals.slice(0, 3))
            }
        })
    }
    function l(c) {
        for (var e in c.features) {
            var f = c.features[e];
            if (f.heroItemType) {
                switch (f.name = "item" + f.heroItemType,
                f.heroItemType) {
                case HeroItem.TYPE_BANDAGE_25:
                    f.tooltip = "Hero.ItemBonusBandage25";
                    break;
                case HeroItem.TYPE_BANDAGE_33_UPGRADED:
                    f.tooltip = "Hero.ItemBonusBandage38";
                    break;
                case HeroItem.TYPE_CAGES:
                    f.tooltip = "Hero.ItemBonusCages";
                    break;
                case HeroItem.TYPE_CROP_BONUS_5:
                    f.tooltip = "CardGame.Card.Description_12";
                    break;
                case HeroItem.TYPE_RESOURCE_BONUS_5:
                    f.tooltip = "CardGame.Card.Description_9";
                    break;
                case HeroItem.TYPE_FIREWORKS:
                    ;
                case HeroItem.TYPE_SUPER_FIREWORKS:
                    f.value = Travian.Config.heroItems[f.heroItemType].cooldown;
                default:
                    if (Travian.txt["Hero.ItemBonusInstantUse_" + f.heroItemType]) {
                        f.tooltip = "Hero.ItemBonusInstantUse_" + f.heroItemType
                    } else {
                        if (Travian.Config.heroItems[f.heroItemType] && Travian.Config.heroItems[f.heroItemType].bonus) {
                            var h = Object.keys(Travian.Config.heroItems[f.heroItemType].bonus)[0];
                            f.value = Travian.Config.heroItems[f.heroItemType].bonus[h];
                            f.tooltip = "Hero.ItemBonus_" + h
                        }
                    }
                }
            } else {
                f.name || (f.name = snakeToCamel(f.paynetCode.replace("TK_I_", ""), !0));
                switch (f.name) {
                case "gold":
                    ;
                case "silver":
                    f.tooltip = !1;
                    continue;
                case "halloweenMask":
                    f.values = [f.compensation, 0, f.masks.length];
                    (function(c) {
                        b.m(function() {
                            var b = Privileges.get(Travian.Player.data.playerId);
                            a.subscribe(b, function() {
                                c.values[1] = c.masks.filter(function(a) {
                                    return "undefined" === typeof b.data.heroCustomizations.cosmetic ? !1 : 0 <= b.data.heroCustomizations.cosmetic.indexOf(a)
                                }).length
                            })
                        })
                    }
                    )(f);
                    continue;
                case "hockeyMask":
                    f.value = 250;
                    continue
                }
                if (h = q.find(function(a) {
                    return a.name == f.name
                })) {
                    f.value = Travian.Config.PremiumFeatures[f.name].duration / 86400,
                    f.tooltipUrl = "tpl/shop/partials/boostFeatureTooltip.html",
                    f.tooltipFeatures = h.features
                }
            }
        }
        c.sorting && c.features.sort(function(a, b) {
            return c.sorting.indexOf(a.paynetCode) - c.sorting.indexOf(b.paynetCode)
        })
    }
    function p() {
        Travian.request("payment/getBundles", {}, function(b) {
            if (b && !b.errors) {
                var c = !1, e;
                for (e in b) {
                    if (b[e].paynetCode) {
                        for (var f in a.deals) {
                            if (b[e].name == a.deals[f].name && b[e].paynetCode != a.deals[f].paynetCode) {
                                a.deals[f] = b[e];
                                c = !0;
                                break
                            }
                        }
                    }
                }
                c && a.initShop()
            }
        })
    }
    function n(b) {
        var e = b.payload;
        if (0 == b.itemId) {
            if (a.selectedProduct && a.selectedProduct.paynetCode == e.paynetCode) {
                e.icon = a.selectedProduct.icon
            } else {
                if (!a.goldPackages) {
                    return
                }
                for (var f in a.goldPackages) {
                    if (a.goldPackages[f].paynetCode == e.paynetCode) {
                        e.icon = a.goldPackages[f].icon;
                        break
                    }
                }
            }
            e.icon || (e.icon = c.rf(e.gold))
        } else {
            e.features = c.Of(e.features),
            l(e)
        }
        a.selectProduct();
        a.purchasedProduct = e;
        a.gotoStep(a.SHOP_STEP.PURCHASE_COMPLETED);
        D = null;
        Travian.request("player/deleteNotification", {
            type: Notifications.PAYMENT_PURCHASE
        })
    }
    a.w.windowName = "Shop.Tab_Deals";
    a.w.params.modalParams.additionalClass = "specialHeader goldenHeader";
    a.shopTabConfig = {
        tabs: "Deals Boosts Gold Cards Invite Exchange".split(" "),
        bodyTemplatePrefix: "tpl/shop/tabs/",
        tabType: "vertical",
        disableScrolling: !0,
        noLoadingDelay: !0,
        disableReferrals: !Travian.Config.features.inviteFriends
    };
    var q = [{
        name: PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT,
        features: [{
            name: "storagePlus",
            value: 25
        }, {
            name: "healingPlus",
            value: 25
        }, {
            name: "tradeRoutePlus"
        }, {
            name: "farmlistPlus"
        }, {
            name: "celebrationPlus",
            amount: 1
        }, {
            name: "researchPlus",
            amount: 1
        }]
    }, {
        name: PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS,
        features: [{
            name: "woodBonus",
            value: 25
        }, {
            name: "clayBonus",
            value: 25
        }, {
            name: "ironBonus",
            value: 25
        }],
        vacation: !0
    }, {
        name: PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS,
        features: [{
            name: "cropBonus",
            value: 25
        }]
    }];
    Gameworld.isHalloween() && q.splice(0, 0, {
        name: PremiumFeature.FEATURE_NAME_HALLOWEEN_BOOST,
        features: [{
            name: "healTroopsBonus",
            value: 25
        }, {
            name: "npcTraderDailyBonus",
            value: 1
        }, {
            name: "finishImmediatelyDailyBonus",
            value: 2
        }, {
            name: "bandagesDailyBonus",
            value: 20
        }, {
            name: "healingPotionDailyBonus",
            value: 10
        }],
        startTime: 1698706800,
        previewSeconds: 432E3
    });
    var r = {};
    r[PremiumFeature.FEATURE_NAME_STARTER_PACKAGE] = 33;
    r[PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT] = 33;
    r[PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS] = 33;
    r[PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS] = 33;
    var t = {};
    t[PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS] = c.Hg.Og;
    a.SHOP_STEP = {
        VOUCHER_REDEMPTION: "voucherRedemption",
        SELECT_PRODUCT: "productSelection",
        PRODUCT_SELECTED: "productSelected",
        SELECT_METHOD: "paymentMethodSelection",
        PAYMENT: "payment",
        PURCHASE_CONFIRMATION: "purchaseConfirmation",
        PURCHASE_COMPLETED: "purchaseCompleted"
    };
    a.shopStepOrder = {};
    var u = 0, w;
    for (w in a.SHOP_STEP) {
        a.shopStepOrder[a.SHOP_STEP[w]] = u++
    }
    a.shopSteps = [a.SHOP_STEP.SELECT_PRODUCT, a.SHOP_STEP.SELECT_METHOD, a.SHOP_STEP.PAYMENT, a.SHOP_STEP.PURCHASE_CONFIRMATION];
    a.$on("tabChanged", function(b, c, e) {
        0 <= a.shopTabConfig.tabs.indexOf(c) && (a.w.windowName = "Shop.Tab_" + c);
        e && a.purchasedProduct && (delete a.purchasedProduct,
        a.currentStep = "");
        switch (c) {
        case "Deals":
            m();
            a.onDealsPageChange();
            break;
        case "Gold":
            h() || a.gotoStep(a.SHOP_STEP.SELECT_PRODUCT);
            break;
        default:
            if ("Deals" == e || "Gold" == e) {
                a.selectProduct(),
                a.currentStep = ""
            }
        }
    });
    b.m(function() {
        var b = Gameworld.get();
        Travian.Config.paymentShopActive && b.data.status != Gameworld.STATUS_ENDED ? Travian.Player.data.isActivated ? 0 < Travian.Player.data.deletionTime && (a.shopIsUnavailable = "playerInDeletion") : a.shopIsUnavailable = "playerNotActivated" : a.shopIsUnavailable = "isClosed";
        a.shopIsUnavailable && 0 <= ["orderHistory", "allPaymentMethods"].indexOf(a.getParam("overlayshop")) && a.closeOverlay()
    });
    a.boosts = q.map(function(a) {
        return Object.assign(angular.copy(a), {
            boost: !0,
            duration: Travian.Config.PremiumFeatures[a.name].duration,
            price: Travian.Config.PremiumFeatures[a.name].price,
            autoExtend: PremiumFeature.hasAutoExtendFlag(PremiumFeature.AUTO_EXTEND_FLAGS[a.name], Travian.Player),
            toggleAutoExtend: function() {
                PremiumFeature.toggleAutoExtendFlag(PremiumFeature.AUTO_EXTEND_FLAGS[a.name], Travian.Player)
            }
        })
    }).filter(function(a) {
        return !(a.startTime && a.startTime - (a.previewSeconds || 0) > Travian.rootScope.currentServerTime)
    });
    a.shopCountryDropdownData = {
        selectBy: "option.code",
        bodyClass: "shopCountryDropdown",
        callback: c.eh
    };
    a.initShop = function() {
        b.m(function() {
            a.shopIsUnavailable || c.yc()
        })
    }
    ;
    a.gotoStep = function(b) {
        a.currentStep = b;
        switch (b) {
        case a.SHOP_STEP.VOUCHER_REDEMPTION:
            c.pj();
        case a.SHOP_STEP.SELECT_PRODUCT:
            a.selectProduct(),
            delete a.purchasedProduct
        }
    }
    ;
    a.selectProduct = function(b) {
        b != a.selectedProduct && (a.selectedProduct && (a.selectedProduct.selected = !1),
        a.selectedProduct = b,
        c.Ti(b),
        a.selectedProduct && (a.selectedProduct.selected = !0),
        a.currentStep = b ? a.SHOP_STEP.PRODUCT_SELECTED : a.SHOP_STEP.SELECT_PRODUCT)
    }
    ;
    a.openPaymentWindow = c.Mf;
    a.gotoDeals = function() {
        g.o("tab", "Deals")
    }
    ;
    var s = [], x, v;
    a.onDealsPageChange = function(b) {
        (b = b || v) && a.currentStep != a.SHOP_STEP.PURCHASE_COMPLETED && (b.find(function(a) {
            return a && a.paynetCode
        }) ? a.gotoStep(a.SHOP_STEP.SELECT_PRODUCT) : a.currentStep = "",
        a.noTransitions = !0,
        e(function() {
            a.noTransitions = !1
        }),
        v = b)
    }
    ;
    u = Notifications.getCollection(Notifications.TYPE_TIMED);
    a.subscribe(u, function(b) {
        a.promotionUntil = 0;
        for (var c in b.data) {
            b.data[c].data.type == Notifications.TIMER_GOLD_PROMOTION && (a.promotionUntil = b.data[c].data.expireTime)
        }
    });
    u = Notifications.getCollection();
    a.subscribe(u, function(b) {
        if (a.currentStep == a.SHOP_STEP.PAYMENT || a.currentStep == a.SHOP_STEP.PURCHASE_CONFIRMATION) {
            for (var c in b.data) {
                if (b.data[c].data.type == Notifications.PAYMENT_PURCHASE) {
                    n(b.data[c].data);
                    m(!0);
                    break
                }
            }
        }
    });
    var D = a.getParam("purchasedProductData", !1, !0);
    D && n(D);
    a.$on("shopSDKProductsUpdate", function(b, c) {
        for (var e in a.deals) {
            if (a.deals[e].paynetCode) {
                a.deals[e].features = [];
                a.deals[e].price = 0;
                for (var f in c.nb[c.country]) {
                    if (a.deals[e].paynetCode == c.nb[c.country][f].paynetCode) {
                        Object.assign(a.deals[e], c.nb[c.country][f]);
                        l(a.deals[e]);
                        break
                    }
                }
            }
        }
        a.goldPackages = angular.copy(c.Y[c.country]);
        for (e = 1; e < a.goldPackages.length; e++) {
            (a.goldPackages[e].type != a.goldPackages[e - 1].type || a.goldPackages[e].currency != a.goldPackages[e - 1].currency) && e % 6 && (f = 6 - e % 6,
            a.goldPackages.splice.apply(a.goldPackages, [e, 0].concat(Array(f))),
            e += f)
        }
        a.shopCountryDropdownData.options = c.Hb;
        a.shopCountryDropdownData.selected = c.country;
        a.externalReseller = null;
        void 0 !== Travian.Config.paymentShopReseller[c.country] && void 0 !== Travian.Config.paymentShopReseller[c.country][Travian.Config.countryId] && (a.externalReseller = c.country);
        h();
        D && n(D);
        digestScope(a)
    });
    a.openReseller = function() {
        var b = a.shopCountryDropdownData.selected
          , c = Travian.Config.countryId;
        void 0 !== Travian.Config.paymentShopReseller[b] && void 0 !== Travian.Config.paymentShopReseller[b][c] && (a.gotoStep(a.SHOP_STEP.VOUCHER_REDEMPTION),
        window.open(Travian.Config.paymentShopReseller[b][c], "_blank", "noopener"))
    }
    ;
    a.$on("shopSDKPaymentMethodsLoaded", function() {
        a.currentStep == a.SHOP_STEP.PRODUCT_SELECTED && (a.currentStep = a.SHOP_STEP.SELECT_METHOD,
        digestScope(a))
    });
    a.$on("shopSDKPaymentCreated", function() {
        a.gotoStep(a.SHOP_STEP.PAYMENT);
        digestScope(a)
    });
    a.$on("shopSDKCartEmptied", function() {
        switch (a.currentStep) {
        case a.SHOP_STEP.PAYMENT:
            a.gotoStep(a.SHOP_STEP.PURCHASE_CONFIRMATION);
            break;
        case a.SHOP_STEP.PURCHASE_CONFIRMATION:
            ;
        case a.SHOP_STEP.PURCHASE_COMPLETED:
            break;
        default:
            a.gotoStep(a.SHOP_STEP.SELECT_PRODUCT)
        }
        digestScope(a)
    });
    a.$on("shopSDKError", function() {
        a.currentStep != a.SHOP_STEP.VOUCHER_REDEMPTION && a.gotoStep(a.SHOP_STEP.SELECT_PRODUCT);
        a.closeOverlay();
        digestScope(a)
    });
    a.$on("shopUnavailable", function() {
        "" != a.currentStep && a.gotoStep(a.SHOP_STEP.SELECT_PRODUCT);
        delete a.shopCountryDropdownData.options;
        a.shopIsUnavailable = "noConnection";
        for (var b in a.deals) {
            !a.deals[b].paynetCode || a.deals[b].features && 0 != a.deals[b].features.length || (a.deals[b].unavailable = "noConnection")
        }
        digestScope(a)
    });
    a.$on("$destroy", function() {
        c.ld();
        a.l("tab")
    });
    a.closeOverlay();
    var C = PlayerProgressTrigger.get(Travian.Player.data.playerId + "_" + PlayerProgressTrigger.TYPE_OPEN_PREMIUM_MENU)
      , A = a.subscribe(C, function() {
        C.data.triggered || (Travian.writeRequest("quest/dialogAction", {
            questId: Quest.DAILY_CONDITIONAL_OPEN_PREMIUM_MENU,
            command: "setLastUse"
        }),
        A && A())
    });
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_PREMIUM + "_" + PlayerProgressTrigger.HELP_PAGE_RUNTIME_FEATURES)
}
;
window.shopCtrl.$inject = "$scope PaynetService SessionService ServertimeService RoutingService $timeout".split(" ");
window.societyCtrl = function(a) {
    a.w.windowName = "Societies";
    a.tabConfig.tabs = ["Kingdom", "SecretSociety", "Friends", "Attacks"];
    a.tabConfig.bodyTemplatePrefix = "tpl/society/tabs/";
    a.tabConfig.disableScrollingForTabs = ["Kingdom", "SecretSociety", "Friends"]
}
;
window.societyCtrl.$inject = ["$scope"];
window.statsCtrl = function(a, c, b, f) {
    function g(b, c, h, l) {
        var g = a.paginationData[h][l].currentPage
          , m = !1;
        null == b && (b = g,
        m = !0);
        a.rankings[h] || (a.rankings[h] = {});
        if ("undefined" == typeof a.results[h][l][b]) {
            g = (b - 1) * a.itemsPerPage;
            g = {
                start: g,
                end: g + a.itemsPerPage - 1,
                rankingType: c,
                rankingSubtype: l
            };
            "ranking_Player" == c && "villages" == l && (g.rankingType = "ranking_Village",
            g.rankingSubtype = "population");
            var n = "ranking/getRanking";
            "ranking_Kingdom" == c && "victoryPoints" == l && (n = "ranking/getKingdomVictoryPointsWithTreasures",
            g = {
                start: g.start,
                end: g.end
            });
            Travian.request(n, g, function(c) {
                a.results[h][l][b] = c.results;
                a.rankings[h][a.currentSubTab] = a.results[h][l][b];
                m && e(b)
            })
        } else {
            a.rankings[h][a.currentSubTab] = a.results[h][l][b],
            m && f(function() {
                e(b)
            }, 50)
        }
    }
    function e(b) {
        0 >= b && (b = 1);
        a.o("statsPage", b)
    }
    function h() {
        function b(c) {
            null !== c && e(Math.ceil((parseInt(c) + 1) / a.itemsPerPage))
        }
        if (null != a.search.obj) {
            var c = null;
            null != typeof a.search.obj.villageId && 0 < a.search.obj.villageId && (c = a.search.obj.villageId);
            null != typeof a.search.obj.playerId && (0 < a.search.obj.playerId && null == c) && (c = a.search.obj.playerId);
            null != typeof a.search.obj.groupId && (0 < a.search.obj.groupId && null == c) && (c = a.search.obj.groupId);
            Travian.request("ranking/getRankAndCount", {
                id: c,
                rankingType: s,
                rankingSubtype: x,
                ignoreCount: !0
            }, function(c) {
                a.handleError(c, "rankError") && (0 <= c.rank && (f = c.rank,
                b(f)),
                a.searchedRank = f)
            })
        } else {
            var f = null;
            0 < a.search.rank && (f = parseInt(a.search.rank) - 1,
            a.searchedRank = f);
            b(f)
        }
    }
    a.w.windowName = "Title.Statistics";
    a.tabConfig.tabs = ["Player", "Kingdoms", "World"];
    var m = Gameworld.get();
    a.subscribe(m, function() {
        !0 == m.data.worldWonderActivated && 0 > a.tabConfig.tabs.indexOf("WorldWonder") && a.tabConfig.tabs.push("WorldWonder")
    });
    a.tabConfig.bodyTemplatePrefix = "tpl/statistics/stats";
    a.tabConfig.tabName = "tab";
    a.tabConfig.disableScrollingForTabs = ["Player", "Kingdoms", "WorldWonder"];
    a.tabConfig.disableCaching = !0;
    var l = ""
      , p = {}
      , n = 0
      , q = {}
      , r = {
        stats: !1,
        page: !1
    };
    a.setupStats = function(b, c, e) {
        l = b;
        p = c;
        a.currentSubTab || (a.currentSubTab = a.getParam("subtab"));
        void 0 === p[a.currentSubTab] && (a.o("subtab", p.defaultKey),
        a.currentSubTab = p.defaultKey);
        n = e;
        r.stats = !0;
        !1 !== r.page && a.displayCurrentPage(r.page)
    }
    ;
    var t = {
        Player: 10,
        Kingdoms: 15,
        "default": 10
    };
    a.playerId = c.p().data.playerId;
    a.itemsPerPage = 10;
    a.paginationData = {};
    a.paginationData.Player = {};
    a.paginationData.Kingdoms = {};
    a.paginationData.WorldWonder = {};
    a.results = {};
    a.results.Player = {};
    a.results.Kingdoms = {};
    a.results.WorldWonder = {};
    a.rankings = {};
    a.numberOfItems = {};
    a.search = {
        rank: null,
        name: null,
        obj: null,
        autocompleteParam: null
    };
    var u = "Player"
      , w = "Overview"
      , s = null
      , x = null;
    a.detectCurrentTabAndSubTab = function() {
        var b = a.getParam("tab");
        "undefined" == typeof b && (b = u);
        var c = a.getParam("subtab");
        "undefined" == typeof p[c] && (c = p.defaultKey);
        a.currentTab = b;
        a.currentSubTab = c;
        a.itemsPerPage = t["default"];
        void 0 !== t[b] && (a.itemsPerPage = t[b])
    }
    ;
    a.displayCurrentPage = function(c) {
        if (r.stats) {
            if ("ranking_WorldWonder" == l && 1 != c) {
                e(1)
            } else {
                a.detectCurrentTabAndSubTab();
                var f = a.currentTab
                  , h = a.currentSubTab;
                q[h] = c;
                if ("Top10" != h) {
                    f != u && (a.search = {
                        rank: null,
                        name: null,
                        autocompleteParam: null
                    });
                    "Player" == f || "Kingdoms" == f || "WorldWonder" == f ? (a.search.autocompleteParam = "player",
                    "Kingdoms" == f && (a.search.autocompleteParam = "kingdom"),
                    "Villages" == h && (a.search.autocompleteParam = "village coords onlyPlayerVillage")) : a.search.autocompleteParam = "kingdom";
                    var m = p[h];
                    "ranking_WorldWonder" == l && (c = 1,
                    a.paginationData[f][m] = {
                        currentPage: 1
                    });
                    if ("undefined" != typeof c) {
                        if (w != h || u != f) {
                            a.searchedRank = -1,
                            a.numberOfItems[h] = 0,
                            u = f,
                            w = h,
                            a.rankError = "",
                            a.search.rank = "",
                            a.search.name = ""
                        }
                        if (a.results[f]) {
                            "undefined" == typeof a.results[f][m] && (a.results[f][m] = {});
                            var t = {
                                id: n,
                                rankingType: l,
                                rankingSubtype: m
                            };
                            "ranking_Player" == l && "villages" == m && (t.id = b.getActiveVillageId(),
                            t.rankingType = "ranking_Village",
                            t.rankingSubtype = "population");
                            s = t.rankingType;
                            x = t.rankingSubtype;
                            "undefined" == typeof a.paginationData[f][m] ? Travian.request("ranking/getRankAndCount", t, function(b) {
                                a.paginationData[f][m] = b;
                                a.paginationData[f][m].currentPage = 0 <= b.rank ? Math.floor(b.rank / a.itemsPerPage) + 1 : 1;
                                a.numberOfItems[h] = a.paginationData[f][m].numberOfItems;
                                g(c, l, f, m)
                            }) : (a.numberOfItems[h] = a.paginationData[f][m].numberOfItems,
                            g(c, l, f, m))
                        }
                    }
                }
            }
        } else {
            r.page = c
        }
    }
    ;
    a.showSearchTab = function() {
        return "World" == a.currentTab ? !1 : -1 < ["Player", "Heroes", "Kingdoms"].indexOf(a.currentTab) ? "Top10" != a.currentSubTab : !1
    }
    ;
    a.filterInputSearchRank = function() {
        a.search.name = null;
        a.search.obj = null;
        isNaN(a.search.rank) || 1 > a.search.rank ? a.search.rank = "" : a.search.rank > a.numberOfItems[a.currentSubTab] && (a.search.rank = a.numberOfItems[a.currentSubTab])
    }
    ;
    a.setSearchName = function(b) {
        null != b && (a.search.name = b.name);
        a.search.obj = b;
        h()
    }
    ;
    a.searchedRank = null;
    a.$on("urlChanged", function(b, c) {
        var f = a.getParam("statsPage");
        if (p[c.subtab]) {
            var h = q[c.subtab] || 1;
            e(h);
            f == h && a.displayCurrentPage(h)
        }
    });
    a.$on("tabChanged", function() {
        f(function() {
            a.displayCurrentPage(null)
        })
    })
}
;
window.statsCtrl.$inject = ["$scope", "SessionService", "VillageService", "$timeout"];
window.statsKingdomTop10Ctrl = function(a, c) {
    a.detectCurrentTabAndSubTab();
    c.m(function() {
        a.stats = StatsWeeklyTop.get(c.p().data.kingdomId, "ranking_Kingdom");
        Cache.G(a.stats, 60);
        a.subscribe(a.stats, function() {
            a.top10Lists = [];
            a.top10Lists.push({
                title: Travian.translate("Statistics.Top10Title.Attackers"),
                data: a.stats.data.top10Attacker,
                ownData: a.stats.data.top10Attacker_ranking_Kingdom,
                pointsTitle: "offPoints"
            });
            a.top10Lists.push({
                title: Travian.translate("Statistics.Top10Title.Climbers"),
                data: a.stats.data.top10Climber,
                ownData: a.stats.data.top10Climber_ranking_Kingdom,
                pointsTitle: "ranks"
            });
            a.top10Lists.push({
                title: Travian.translate("Statistics.Top10Title.Defenders"),
                data: a.stats.data.top10Defender,
                ownData: a.stats.data.top10Defender_ranking_Kingdom,
                pointsTitle: "defPoints"
            });
            a.top10Lists.push({
                title: Travian.translate("Statistics.Top10Title.Robbers"),
                data: a.stats.data.top10Robber,
                ownData: a.stats.data.top10Robber_ranking_Kingdom,
                pointsTitle: "resources"
            })
        })
    })
}
;
window.statsKingdomTop10Ctrl.$inject = ["$scope", "SessionService"];
window.statsKingdomsCtrl = function(a, c) {
    a.statsKingdomTabConfig = {};
    a.statsKingdomTabConfig.tabs = "VictoryPoints Population Size Attacker Defender Top10".split(" ");
    a.statsKingdomTabConfig.routeNamedParam = "subtab";
    a.statsKingdomTabConfig.tabName = "subtab";
    a.statsKingdomTabConfig.tabType = "subtab";
    a.statsKingdomTabConfig.bodyTemplatePrefix = "tpl/statistics/statsKingdoms";
    var b = {
        VictoryPoints: "victoryPoints",
        Population: "population",
        Size: "size",
        Attacker: "offPoints",
        Defender: "deffPoints",
        Top10: "doesntMatter",
        defaultKey: "VictoryPoints"
    };
    c.m(function() {
        a.setupStats("ranking_Kingdom", b, Travian.Player.data.kingdomId)
    })
}
;
window.statsKingdomsCtrl.$inject = ["$scope", "SessionService"];
window.statsPlayerCtrl = function(a, c, b, f) {
    function g(b) {
        if (u != b || !0 != a.showHover) {
            u = b,
            a.selectedData = a.topRank ? a.top3[a.currentSubTab][b] : a.rankings[a.currentTab][a.currentSubTab][b % a.itemsPerPage],
            void 0 !== a.selectedData && (p = Player.get(a.selectedData.playerId),
            n = Hero.get(a.selectedData.playerId),
            q = PlayerStatsLastWeek.get(a.selectedData.playerId),
            null !== r && r(),
            r = a.ja([p, n], function() {
                a.selectedPlayer = p;
                a.selectedHero = n;
                a.signedUp = a.selectedPlayer.getAge() - 1;
                a.showHover = !0
            }),
            null !== t && t(),
            t = a.subscribe(q, function() {
                switch (a.currentSubTab) {
                case "Overview":
                    a.playerStatsLastWeek = q.data.population;
                    break;
                case "Attacker":
                    a.playerStatsLastWeek = q.data.off;
                    break;
                case "Defender":
                    a.playerStatsLastWeek = q.data.def;
                    break;
                case "Heroes":
                    a.playerStatsLastWeek = q.data.hero;
                    break;
                default:
                    a.playerStatsLastWeek = {
                        rank: -1,
                        value: 0
                    }
                }
            }))
        }
    }
    function e(b) {
        void 0 !== h[b] && ("Top10" != b && "Villages" != b) && (Travian.request("ranking/getRanking", {
            start: 0,
            end: 2,
            rankingType: "ranking_Player",
            rankingSubtype: h[b]
        }, function(c) {
            a.top3[b] = c.results
        }),
        Travian.request("ranking/getRankingAveragePoints", {
            rankingType: "ranking_Player",
            rankingSubType: h[b]
        }, function(c) {
            a.avgPoints[b] = c.avgPoints
        }))
    }
    a.statsPlayerTabConfig = {};
    a.statsPlayerTabConfig.tabs = "Overview Attacker Defender Villages Heroes Top10".split(" ");
    a.statsPlayerTabConfig.routeNamedParam = "subtab";
    a.statsPlayerTabConfig.tabName = "subtab";
    a.statsPlayerTabConfig.tabType = "subtab";
    a.statsPlayerTabConfig.bodyTemplatePrefix = "tpl/statistics/statsPlayer";
    a.statsPlayerTabConfig.loadingDelay = 100;
    var h = {
        Overview: "population",
        Attacker: "offPoints",
        Defender: "deffPoints",
        Villages: "villages",
        Heroes: "heroes",
        Top10: "doesntMatter",
        defaultKey: "Overview"
    };
    c.m(function() {
        a.setupStats("ranking_Player", h, Travian.Player.data.playerId);
        var b = a.currentSubTab;
        void 0 === h[b] && (b = h.defaultKey);
        e(b)
    });
    a.showHover = !1;
    a.currentRank = -1;
    a.top3 = {};
    a.avgPoints = {};
    a.topRank = !1;
    var m = null
      , l = null
      , p = {}
      , n = {}
      , q = {};
    a.playerStatsLastWeek = {
        rank: -1,
        value: 0
    };
    var r = null
      , t = null
      , u = -1;
    a.showFixedRankPlayerInfo = function(b) {
        a.topRank = !0;
        a.showPlayerInfo(b)
    }
    ;
    a.showPlayerInfo = function(a) {
        null !== m && (b.cancel(m),
        m = null);
        m = b(function() {
            m = null;
            g(a)
        }, 200);
        null !== l && (b.cancel(l),
        l = null)
    }
    ;
    a.hidePlayerInfo = function() {
        a.topRank = !1;
        l = b(function() {
            l = null;
            a.showHover = !1
        }, 350)
    }
    ;
    a.openChat = f.ka;
    a.getPrivateRoomName = f.pa;
    a.playerModel = Player;
    a.$watch("currentSubTab", e)
}
;
window.statsPlayerCtrl.$inject = ["$scope", "SessionService", "$timeout", "ChatService", "ServertimeService"];
window.statsPlayerTop10Ctrl = function(a, c) {
    a.detectCurrentTabAndSubTab();
    var b = c.getPlayerId();
    a.stats = StatsWeeklyTop.get(b, "ranking_Player");
    Cache.G(a.stats, 60);
    a.subscribe(a.stats, function() {
        a.top10Lists = [];
        a.top10Lists.push({
            title: Travian.translate("Statistics.Top10Title.Attackers"),
            data: a.stats.data.top10Attacker,
            ownData: a.stats.data.top10Attacker_ranking_Player,
            pointsTitle: "offPoints"
        });
        a.top10Lists.push({
            title: Travian.translate("Statistics.Top10Title.Climbers"),
            data: a.stats.data.top10Climber,
            ownData: a.stats.data.top10Climber_ranking_Player,
            pointsTitle: "ranks"
        });
        a.top10Lists.push({
            title: Travian.translate("Statistics.Top10Title.Defenders"),
            data: a.stats.data.top10Defender,
            ownData: a.stats.data.top10Defender_ranking_Player,
            pointsTitle: "defPoints"
        });
        a.top10Lists.push({
            title: Travian.translate("Statistics.Top10Title.Robbers"),
            data: a.stats.data.top10Robber,
            ownData: a.stats.data.top10Robber_ranking_Player,
            pointsTitle: "resources"
        })
    })
}
;
window.statsPlayerTop10Ctrl.$inject = ["$scope", "SessionService"];
window.statsWorldCtrl = function(a) {
    a.Math = Math;
    Travian.request("ranking/getWorldStats", {}, function(c) {
        a.stats = c;
        c = [];
        c[Player.TRIBE.ROMAN] = "#c8844d";
        c[Player.TRIBE.TEUTON] = "#bc6a27";
        c[Player.TRIBE.GAUL] = "#b05001";
        a.tribePieData = [];
        a.troops = {};
        for (var b in a.stats.tribes) {
            a.tribePieData.push({
                label: Travian.translate("Tribe_" + b),
                data: parseInt(a.stats.tribes[b]),
                color: c[b]
            });
            a.troops[b] = {
                type: "overview",
                tribeId: b,
                originalTroops: a.stats.troops[b],
                showHero: !1
            };
            for (var f = 1; 10 >= f; f++) {
                a.troops[b].originalTroops[f] = Math.round(a.troops[b].originalTroops[f] / a.stats.tribes[b])
            }
        }
        a.kingdomPieData = [];
        a.kingdomPieData.push({
            label: Travian.translate("Statistics.World.Kingdom.Kings"),
            data: parseInt(a.stats.kingdoms.kings),
            color: "#ffe85c"
        });
        a.kingdomPieData.push({
            label: Travian.translate("Statistics.World.Kingdom.Dukes"),
            data: parseInt(a.stats.kingdoms.dukes),
            color: "#a5c400"
        });
        a.kingdomPieData.push({
            label: Travian.translate("Statistics.World.Kingdom.Governors"),
            data: parseInt(a.stats.kingdoms.governors),
            color: "#c9e271"
        });
        a.detectCurrentTabAndSubTab()
    })
}
;
window.statsWorldCtrl.$inject = ["$scope"];
window.statsWorldWonderCtrl = function(a) {
    a.statsPlayerTabConfig = {};
    a.statsPlayerTabConfig.tabs = ["WorldWonder"];
    a.statsPlayerTabConfig.routeNamedParam = "subtab";
    a.statsPlayerTabConfig.tabName = "subtab";
    a.statsPlayerTabConfig.tabType = "subtab";
    a.statsPlayerTabConfig.bodyTemplatePrefix = "tpl/statistics/stats";
    a.setupStats("ranking_WorldWonder", {
        WorldWonder: "worldWonder",
        defaultKey: "worldWonder"
    }, a.playerId)
}
;
window.statsWorldWonderCtrl.$inject = ["$scope"];
window.logoutCtrl = function(a, c) {
    a.w.windowName = "Logout";
    a.logout = function() {
        c.Wa()
    }
}
;
window.logoutCtrl.$inject = ["$scope", "SessionService"];
window.notEnoughSitterRightsCtrl = function(a) {
    a.w.windowName = "Sitter.NotEnoughRights.Headline"
}
;
window.notEnoughSitterRightsCtrl.$inject = ["$scope"];
window.userAreaCtrl = function(a, c, b, f, g) {
    a.doLogout = function() {
        1 == c.p().data.isInstant ? a.openWindow("logout") : c.Wa()
    }
    ;
    a.isSitter = c.K();
    a.isDual = c.Ia();
    a.permissions = c.sf();
    a.openDiscord = function() {
        window.open(Travian.Config.discordUrl, "_blank")
    }
    ;
    a.openHelpCenter = function() {
        window.open("/api/forwardToHelpcenter.php?sid=" + c.rb(), "_blank")
    }
    ;
    c.m(function() {
        var b = Settings.get(Travian.Player.data.playerId);
        b.subscribe(function() {
            a.muted = b.data.muteAll || !b.data.musicVolume && !b.data.soundVolume && !b.data.uiSoundVolume
        })
    });
    f.$on("sessionRightsChanged", function() {
        g(function() {
            a.isSitter = c.K();
            a.permissions = c.sf()
        }, 3E3)
    });
    a.muteSound = function() {
        b.Aj()
    }
    ;
    a.toggleNotepads = function() {
        var b = Settings.get(Travian.Player.data.playerId);
        b.data.notpadsVisible = !b.data.notpadsVisible;
        b.persist();
        a.$root.$broadcast("toggleNotepads")
    }
}
;
window.userAreaCtrl.$inject = ["$scope", "SessionService", "AudioService", "$rootScope", "$timeout"];
window.userLoginCtrl = function(a, c, b) {
    a.error = !1;
    a.doLogin = function() {
        var b = {
            name: $("#loginInputUsername").val(),
            password: $("#loginInputPassword").val()
        };
        Travian.request("login/login", b, function(b) {
            "undefined" != typeof b && ("undefined" != typeof b.errors ? (a.error = b.errors[0].message,
            delete b.errors) : (c.qd(b),
            a.openPage("village")))
        })
    }
    ;
    a.mellonRegister = function() {
        var a = b.wa().getInstantLogin();
        b.Fa(a).open()
    }
    ;
    a.mellonLogin = function() {
        var a = b.wa().getLogin();
        b.Fa(a).open()
    }
}
;
window.userLoginCtrl.$inject = ["$scope", "SessionService", "MellonService"];
window.userMainPageCtrl = function(a, c, b, f) {
    var g = "Aeliana Alba Augustina Caelia Cornelia Drusa Fabricia Faustina Floriana Gratiana Hadriana Hortensia Laelia Liviana Lucia Maxima Octavia Prisca Sabina Vita Aelius Albus Appius Aurelius Blandus Brutus Caelius Cato Celsus Cornelius Crispus Decimus Drusus Fabius Faustus Festus Germanus Manius Nonus Octavius Pontius Quintus Regulus Rufus Seneca Vitus".split(" ");
    a.randomUserName = g[Math.floor(Math.random() * (g.length + 1))];
    a.registrationInProgress = !1;
    a.popup = "none";
    a.closePopup = function() {
        a.popup = "none";
        c.l("mainpage")
    }
    ;
    a.showPopup = function(b) {
        a.popup = b;
        c.o("mainpage", b)
    }
    ;
    var e = null;
    a.input = {
        tribe: 3
    };
    a.startInstant = function() {
        window.location.href = mellon.getInstantUrl()
    }
    ;
    a.startPlaying = function() {
        Travian.writeRequest("login/playWithoutAccount", {}, function(e) {
            "undefined" == typeof e.errors && (b.qd(e),
            c.l("mainpage"),
            a.openPage("village"))
        })
    }
    ;
    var h = c.getParam("mainpage");
    null != h && a.showPopup(h);
    a.showCheatLogin = !1;
    "live" != config.SERVER_ENV && (a.showCheatLogin = !0);
    a.doCheatRegistration = function(c) {
        c = {
            name: c
        };
        a.registrationInProgress = !0;
        e = f(function() {
            a.registrationInProgress = !1;
            a.registerError = "Timeout";
            a.showPopup("error");
            a.randomUserName = g[Math.floor(Math.random() * (g.length + 1))]
        }, 3E4);
        Travian.writeRequest("login/createCheatAccount", c, function(c) {
            a.registrationInProgress = !1;
            f.cancel(e);
            if (c && "undefined" === typeof c.errors) {
                b.qd(c)
            } else {
                return a.registerError = c.errors[0].message,
                a.showPopup("error"),
                a.randomUserName = g[Math.floor(Math.random() * (g.length + 1))],
                delete c.errors,
                !1
            }
        })
    }
    ;
    a.toPortal = function() {
        window.location.href = config.portal
    }
    ;
    a.$on("urlChanged", function() {
        h = c.getParam("mainpage");
        null != h && "" != h && a.showPopup(h)
    })
}
;
window.userMainPageCtrl.$inject = ["$scope", "RoutingService", "SessionService", "$timeout"];
window.villageListCtrl = function(a, c, b, f) {
    function g() {
        var b = c.getActiveVillageId();
        a.dropdown.selected = b;
        for (var f = a.ongoingAttack = !1, l = 0; l < e.data.length; l++) {
            var g = e.data[l];
            void 0 === a.dropdown.options[l] && (a.dropdown.options[l] = {});
            a.dropdown.options[l].villageId = g.data.villageId;
            a.dropdown.options[l].name = g.data.name;
            a.dropdown.options[l].x = g.data.x;
            a.dropdown.options[l].y = g.data.y;
            a.dropdown.options[l].acceptance = g.data.acceptance;
            a.dropdown.options[l].underAttack = g.underAttack;
            g.data.villageId == b && (f = !0);
            g.underAttack && (a.ongoingAttack = !0)
        }
        l < a.dropdown.options.length && a.dropdown.options.splice(l);
        !f && 0 < e.data.length && c.ea(e.data[0].data.villageId);
        a.dropdown.hoverable = 1 < e.data.length ? !0 : !1
    }
    var e = c.W();
    a.setVillage = function(e) {
        a.dropdown.selected = e;
        b.o("villId", e);
        e == c.getActiveVillageId() ? f.Tf(e) : c.ea(e)
    }
    ;
    a.dropdown = {
        selected: null,
        selectBy: "option.villageId",
        options: [],
        maxHeight: 450,
        lazyRendering: !1,
        resize: !1,
        bodyClass: "villageListDropDown",
        orderBy: "name",
        hoverable: !0,
        hoverContainer: "villageList",
        stayAtClickOpen: !0,
        callback: a.setVillage
    };
    e.subscribe(g);
    a.$on("activeVillageChanged", g);
    a.ongoingAttack = !1;
    a.nextVillage = function() {
        a.setVillage(c.of(1))
    }
    ;
    a.previousVillage = function() {
        a.setVillage(c.of(-1))
    }
}
;
window.villageListCtrl.$inject = ["$scope", "VillageService", "RoutingService", "MapService", "TroopsService"];
window.villageViewCtrl = function(a, c, b, f, g, e, h) {
    function m() {
        null != Q && Q.unsubscribe(T);
        Q = c.i();
        T = Q.subscribe(q);
        if (null == Q.data.villageId) {
            return !1
        }
        null != L && (L.unsubscribe(H),
        L = null);
        0 < Q.data.villageId ? (a.mist = !1,
        L = MapDetails.get(Q.data.villageId),
        H = L.subscribe(function() {
            R = a.resDistribution = L.data.resType;
            !a.mist && (L && L.data.wwZone) && a.initMist()
        })) : R = a.resDistribution = "4446";
        a.isWWVillage = Village.isWWVillage(Q.data.type);
        a.villageTribe = Player.TRIBE_NAME[Q.data.tribeId];
        null != J && J.unsubscribe(I);
        a.villageBuildings && a.villageBuildings.unsubscribe();
        var e = b.aa(Q.data.villageId);
        J = e.getSubCollection(function(b) {
            var c = "village" == a.currentView;
            return c && 18 < b.data.locationId || !c && 18 >= b.data.locationId
        });
        a.myBuildings = J;
        "resources" == a.currentView && (a.villageBuildings = e.getSubCollection(function(a) {
            return 18 < a.data.locationId && 0 > $.inArray(a.data.locationId, Building.PREMIUM_LOCATIONS)
        }));
        I = J.subscribe(t);
        a.$$phase || a.$digest();
        g(l)
    }
    function l(b) {
        if (!Gameworld.isHalloween() && (b = b || Travian.rootScope.page,
        n(),
        b == a.currentView)) {
            if (Gameworld.isBirthday() && Gameworld.isNightTruceActive()) {
                var c = FieldMarkerGlobal.getCollection(Ua(Q.data.villageId));
                if (!c.filled) {
                    var f = c.subscribe(function() {
                        l();
                        c.unsubscribe(f)
                    });
                    return
                }
                a.fireworksActive = 0;
                var h = Date.now() / 1E3, m;
                for (m in c.data) {
                    var q = c.data[m].data;
                    if (q.cellId == Q.data.villageId && q.creatorPlayerId == FieldMarkerGlobal.CREATOR_FIREWORKS && q.timestamp <= h && q.timestamp + q.duration > h) {
                        a.fireworksActive = q.timestamp + q.duration;
                        digestScope(a);
                        g(function() {
                            p(a.fireworksActive)
                        });
                        return
                    }
                }
            }
            switch (b) {
            case "village":
                if ("winter" == Travian.Config.season && P.getSetting("showSeasonalTheme")) {
                    break
                }
                b = "village";
                Village.isTown(Q.data.type) && (b = "town");
                N.push(e.Ma("#villageView>.waterAnimationIncoming", "anim1-" + b + "_frame", 12));
                N.push(e.Ma("#villageView>.waterAnimationOutgoing", "anim2-" + b + "_frame", 12));
                b = function(a) {
                    a.delay = 50 + Math.ceil(150 * Math.random());
                    a.baseClass = "position" + Math.ceil(6 * Math.random()) + " fishJump_frame";
                    Village.isTown(Q.data.type) && (a.baseClass = "town " + a.baseClass);
                    0.5 < Math.random() && (a.baseClass = "flip " + a.baseClass)
                }
                ;
                h = {};
                b(h);
                N.push(e.Ma("#villageView>.fishJumpAnimation", h.baseClass, 9, {
                    delay: h.delay,
                    onEnd: b
                }));
                break;
            case "resources":
                "11115" != a.resDistribution && "4356" != a.resDistribution && N.push(e.Ma(".resources.viewBackground>.resDistribution>.waterfallAnimation", "waterfall_frame", 4))
            }
        }
    }
    function p(b) {
        n();
        for (var c = 1; 4 >= c; c++) {
            var h = function(a) {
                if (Date.now() / 1E3 > b) {
                    a.delay = 100,
                    setTimeout(l, 2E3)
                } else {
                    a.elem.removeClass("launch").css("opacity", "").show();
                    var c = 2 * Math.random() * Math.PI;
                    a.elem.css("top", Math.ceil(120 + 250 * Math.sin(c) * Math.random()));
                    a.elem.css(getReadingDirectionFrom(), Math.ceil(330 + 400 * Math.cos(c) * Math.random()));
                    a.elem.css("filter", "hue-rotate(" + 360 * Math.random() + "deg)");
                    a.delay = 10 * Math.ceil(2 * Math.random()) + Math.ceil(3 * Math.random());
                    a.baseClass = a.baseClass.replace(/anim\d/, "anim" + Math.ceil(3 * Math.random() / 2))
                }
            }
              , g = $("#" + ("resources" == Travian.rootScope.page ? "smallVillageView" : "villageView") + " .fireworksEffect.fireworks" + c);
            0 < g.length && (h({
                elem: g,
                baseClass: ""
            }),
            e.df || g.hide(),
            N.push(e.Ma(g, "launch anim" + Math.ceil(2 * Math.random() / 2) + "-villageFireworks_frame", 15, {
                delay: 3 * (c - 1),
                frameDelays: {
                    0: 5,
                    14: 3
                },
                onEnd: h,
                frameCalls: {
                    0: function(b) {
                        var c = Object.keys(a.windows);
                        0 < c.length && (1 != c.length || "welcomeScreen" != c[0]) && (b.elem.removeClass("launch"),
                        b.currentFrame = -b.delay)
                    },
                    2: function() {
                        e.df && f.Ud(gb)
                    },
                    12: function(a) {
                        a.elem.css("opacity", 0);
                        e.df = !0
                    }
                }
            })))
        }
    }
    function n() {
        for (var a = 0; a < N.length; a++) {
            if ("function" == typeof N[a]) {
                N[a]()
            }
        }
        N = []
    }
    function q() {
        a.isTown = Q.data.isTown;
        a.isMain = Q.isMainVillage();
        ga !== a.isTown && (g(l),
        ga = a.isTown)
    }
    function r(a) {
        var b = J.data, c;
        for (c in b) {
            if (b[c].data.locationId == a) {
                return b[c]
            }
        }
        return null
    }
    function t() {
        null == U && (U = g(u, 50))
    }
    function u() {
        U = null;
        for (var c in ca) {
            a.highlightStop(c)
        }
        ca = {};
        a.areas = {
            village: [],
            resources: []
        };
        c = getReadingDirectionFrom();
        for (var e = 0; e < J.data.length; e++) {
            var f = J.data[e]
              , h = f.data.buildingType
              , l = "village";
            18 >= f.data.locationId && (l = "resources");
            var g = config.village.imageSizes[h];
            null == g && (g = config.village.imageSizes[0]);
            var m = angular.copy(config.village.locationPos[f.data.locationId]);
            h == Building.TYPE.WONDER_OF_WORLD && (m = angular.copy(config.village.worldWonderPos));
            var n = {
                33: 31,
                41: 42
            }
              , p = {
                y: Math.round(m.y - g[1])
            };
            p.x = "left" == c ? m.x - g[0] / 2 : s - (m.x + g[0] / 2);
            "undefined" != typeof n[f.data.locationId] && (Building.isWall(h) || (h = n[f.data.locationId]),
            g = config.village.imageSizes[h],
            p = {
                y: m.y - g[1]
            },
            p.x = "left" == c ? m.x - g[0] / 2 : s - (m.x + g[0] / 2),
            41 == f.data.locationId && (p = {
                x: 0,
                y: 0
            }));
            if ("resources" == l) {
                p = config.village.resPoly[R],
                h = "undefined" != typeof p && "undefined" != typeof p[f.data.locationId] ? p[f.data.locationId] : [0, 0, 1, 1, 2, 2, 0, 0],
                h = {
                    locationId: f.data.locationId,
                    coords: h.join(",")
                },
                a.areas[l].push(h)
            } else {
                if (m = !0,
                g = [],
                "undefined" != typeof config.village.buildingPoly[h] && (g = config.village.buildingPoly[h]),
                0 >= h && "undefined" != typeof config.village.buildingPoly[0][f.data.locationId] && -2 < h && (g = config.village.buildingPoly[0][f.data.locationId],
                m = !1),
                "number" == typeof g[0]) {
                    h = angular.copy(g);
                    if (m) {
                        for (n = 0; n < h.length; n += 2) {
                            h[n] += p.x,
                            h[n + 1] += p.y
                        }
                    }
                    h = {
                        locationId: f.data.locationId,
                        coords: h.join(",")
                    };
                    a.areas[l].push(h)
                } else {
                    for (m = 0; m < g.length; m++) {
                        h = angular.copy(g[m]);
                        for (n = 0; n < h.length; n += 2) {
                            h[n] += p.x,
                            h[n + 1] += p.y
                        }
                        h = {
                            locationId: f.data.locationId,
                            coords: h.join(",")
                        };
                        a.areas[l].push(h)
                    }
                }
            }
        }
        a.premiumLocations = b.Ad()
    }
    function w() {
        null != K && (K.remove(),
        window.clearTimeout(K.zj),
        K = null)
    }
    var s = 1174;
    if ("rtl" === getDirection() && !config.village.mirrored) {
        config.village.mirrored = !0;
        for (var x in config.village.buildingPoly) {
            if (0 == x) {
                for (var v in config.village.buildingPoly[0]) {
                    for (var D = config.village.buildingPoly[0][v], C = 0; C < D.length; C += 2) {
                        config.village.buildingPoly[0][v][C] = s - D[C]
                    }
                }
            } else {
                var D = config.village.buildingPoly[x]
                  , A = config.village.imageSizes[x][0];
                0 == config.village.imageSizes[x][0] && (A = s);
                if ("object" == typeof config.village.buildingPoly[x]) {
                    if ("number" == typeof config.village.buildingPoly[x][0]) {
                        for (C = 0; C < D.length; C += 2) {
                            config.village.buildingPoly[x][C] = A - D[C]
                        }
                    } else {
                        for (C = 0; C < D.length; C++) {
                            for (var F = D[C], B = 0; B < F.length; B += 2) {
                                config.village.buildingPoly[x][C][B] = A - F[B]
                            }
                        }
                    }
                }
            }
        }
        for (var E in config.village.resPoly) {
            for (v in config.village.resPoly[E]) {
                for (D = config.village.resPoly[E][v],
                C = 0; C < D.length; C += 2) {
                    config.village.resPoly[E][v][C] = s - D[C]
                }
            }
        }
    }
    a.buildings = {
        village: [],
        resources: []
    };
    a.premiumOptionMenu = {
        locationId: 0
    };
    a.currentView = "";
    var J = null
      , I = null
      , T = null
      , Q = null
      , L = null
      , H = null
      , N = []
      , P = Settings.get(Travian.Player.data.playerId)
      , M = null;
    a.questGivers = QuestGiver.getCollection().getSubCollection(function(b) {
        if (0 <= Travian.Player.data.uiStatus && b.data.npcId === QuestGiver.ENVOY) {
            return !1
        }
        b.data.npcId === QuestGiver.ENVOY && (b.data.questStatus == Quest.STATUS_INACTIVE && h.xa("questDialog")) && a.closeWindow("questDialog");
        return 0 <= QuestGiver.VILLAGERS.indexOf(b.data.npcId)
    });
    a.buildings = [];
    a.$on("activeVillageChanged", m);
    f.tj();
    var R = "3456";
    a.setCurrentView = function(b) {
        a.currentView = b;
        m()
    }
    ;
    var aa = P.getSetting("showSeasonalTheme")
      , M = P.subscribe(function() {
        "village" == a.currentView && aa != P.getSetting("showSeasonalTheme") && (aa = P.getSetting("showSeasonalTheme"),
        l())
    });
    Gameworld.isBirthday() && a.$on("nightModeChanged", function(a, b) {
        b && l()
    });
    a.$on("urlChanged", function(a, b) {
        b.page && l(b.page)
    });
    var ga = !1;
    a.openBuildingDialog = function(b) {
        a.openWindow("building", {
            location: b
        })
    }
    ;
    var U = null
      , ca = {}
      , K = null;
    a.highlightStart = function(b) {
        if (!Travian.rootScope.enableSvgHighlighting && "touch" != z.Ga()) {
            if (w(),
            ca[b] = !0,
            18 >= b) {
                hb.fg($("#villageViewRes")[0], config.village.resPoly[a.resDistribution][b].join(","), !1)
            } else {
                var c = r(b);
                if (0 >= c.data.buildingType && "undefined" != typeof config.village.buildingPoly[0][c.data.locationId]) {
                    hb.fg($("#villageView")[0], config.village.buildingPoly[0][c.data.locationId].join(","), !0)
                } else {
                    if (33 == b) {
                        var e = $("#villageView .buildingWall");
                        1 < e.length && (0.99 > $(".village.viewBackground")[0].lh ? hb.Sd(e[0], [e[1].src], !1, 1) : hb.Sd(e[0], [e[1].src]))
                    } else {
                        hb.Sd($("#buildingImage" + b)[0])
                    }
                    e = $(".buildingStatus.location" + b);
                    e = "none" == e.css("display") ? $(".villageView.location.location_" + b) : $(".buildingStatus.location" + b + " .buildingBubble");
                    b = Travian.translate("Building_" + c.data.buildingType);
                    "undefined" != typeof c.data.rubble && (c = Travian.translate("Rubble.Heap.Tooltip"),
                    -1 == Travian.Player.data.uiStatus && (c += " (" + b + ")"),
                    b = c);
                    K = new Ca(e,b,"below","",!1,f);
                    K.zj = window.setTimeout(function() {
                        0 == a.premiumOptionMenu.locationId && K.show()
                    }, 300)
                }
            }
        }
    }
    ;
    a.highlightStop = function(a) {
        if ("touch" != z.Ga()) {
            if (w(),
            delete ca[a],
            18 >= a) {
                hb.Xd($("#villageViewRes")[0])
            } else {
                var b = r(a);
                0 >= b.data.buildingType && "undefined" != typeof config.village.buildingPoly[0][b.data.locationId] ? hb.Xd($("#villageView")[0]) : hb.Pi($("#buildingImage" + a)[0])
            }
        }
    }
    ;
    a.initMist = function() {
        a.mist = [];
        for (var b = 0; 3 > b; b++) {
            a.mist.push({
                animationDelay: "-" + (Travian.rootScope.currentServerTime + 77 * (Q.data.villageId + b)) % (600 * (b + 1)) + "s",
                animationDuration: 60 * (b + 2) + "s, " + 600 * (b + 2) + "s"
            })
        }
    }
    ;
    a.clickSpecial = function() {
        Travian.writeRequest("village/clickSpecial", {
            id: c.getActiveVillageId()
        })
    }
    ;
    a.$on("$destroy", function() {
        null != J && J.unsubscribe(I);
        null != Q && (Q.unsubscribe(T),
        T = null);
        null != L && L.unsubscribe(H);
        null != M && P.unsubscribe(M);
        n()
    })
}
;
window.villageViewCtrl.$inject = "$scope VillageService BuildingService AudioService $timeout AnimationService WindowService".split(" ");
window.villageOverviewCulturePointsCtrl = function(a, c, b, f, g) {
    function e(b) {
        for (var c = 0; c < a.culturePointList.length; c++) {
            if (a.culturePointList[c].villageId == b) {
                return a.culturePointList[c]
            }
        }
        return null
    }
    function h(a) {
        var c = b.dc(a.data.villageId, Building.TYPE.TOWN_HALL);
        c ? (c = 0,
        a.data.celebrationType && (0 < a.data.celebrationType && a.data.celebrationType != Travian.Config.celebrationConfig.celebrationTypeBrewery) && (c = a.data.celebrationEnd)) : c = -1;
        return c
    }
    function m() {
        for (var b = {}, c = 0, f = p.v(), h = 0; h < f.length; h++) {
            c = f[h].data.villageId;
            "undefined" == typeof b[c] && (b[c] = []);
            var l = 0
              , l = 0;
            if ("undefined" != typeof f[h].data.units[Troops.TYPE_SETTLER]) {
                for (var l = parseInt(f[h].data.units[Troops.TYPE_SETTLER]), g = 0; g < l; g++) {
                    b[c].push(Troops.TYPE_SETTLER)
                }
            }
            if ("undefined" != typeof f[h].data.units[Troops.TYPE_LEADER]) {
                for (l = parseInt(f[h].data.units[Troops.TYPE_LEADER]),
                g = 0; g < l; g++) {
                    b[c].push(Troops.TYPE_LEADER)
                }
            }
        }
        for (c in b) {
            f = e(c),
            null != f && (f.units = b[c])
        }
        a.cpListTotal.units = 0;
        for (var m in a.culturePointList) {
            a.culturePointList[m].units.length && (a.cpListTotal.units += a.culturePointList[m].units.length)
        }
    }
    function l(c) {
        var f = {
            available: 0,
            used: 0
        }
          , h = null;
        b.dc(c.data.villageId, Building.TYPE.PALACE) ? h = Building.TYPE.PALACE : b.dc(c.data.villageId, Building.TYPE.RESIDENCE) && (h = Building.TYPE.RESIDENCE);
        if (null !== h) {
            var l = Building.EXPANSION_SLOT_UNLOCKS[h], h = b.va(c.data.villageId, h), g;
            for (g in l) {
                l[g] <= h.data.lvl && f.available++
            }
            0 < f.available && (a.cpListTotal.slots.available += parseInt(f.available))
        }
        var m = ExpansionListEntry.getCollection(c.data.villageId);
        a.subscribe(m, function() {
            var b = e(c.data.villageId);
            null != b ? b.slots.used = m.data.length : f.used = m.data.length;
            for (b = a.cpListTotal.slots.used = 0; b < a.culturePointList.length; b++) {
                a.cpListTotal.slots.used += a.culturePointList[b].slots.used
            }
        });
        return f
    }
    var p = g.H(null, [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING, Troops.COLLECTION_TRAPPED], m, a)
      , n = {};
    a.celebrationData = [];
    a.buildingTypes = Building.TYPE;
    a.cpListTotal = {
        units: 0,
        slots: {
            available: 0,
            used: 0
        },
        culturePointProduction: 0
    };
    var q = c.W();
    a.culturePointList = [];
    a.subscribe(q, function() {
        a.culturePointList = [];
        a.cpListTotal = {
            units: 0,
            slots: {
                available: 0,
                used: 0
            },
            culturePointProduction: 0
        };
        for (var b = 0; b < q.data.length; b++) {
            var c = q.data[b]
              , e = c.data.villageId
              , f = {
                villageName: c.data.name,
                villageId: e,
                culturePointProduction: c.data.culturePointProduction,
                celebration: h(c),
                units: [],
                slots: l(c)
            };
            a.cpListTotal.culturePointProduction += parseInt(c.data.culturePointProduction);
            a.culturePointList.push(f);
            n[e] = CelebrationQueue.get(e);
            "object" == typeof n[e] && (n[e].defaultData.villageId = e,
            a.subscribe(n[e], function(b) {
                var c = b.getQueue(Building.TYPE.TOWN_HALL)
                  , e = b.getLastFinished(Building.TYPE.TOWN_HALL);
                a.celebrationData[b.defaultData.villageId] = {
                    count: c.length,
                    queue: c,
                    timeEnd: e
                }
            }))
        }
        m()
    });
    a.goToTownHall = function(b) {
        c.ea(b);
        a.openWindow("building", {
            location: "type" + Building.TYPE.TOWN_HALL
        })
    }
}
;
window.villageOverviewCulturePointsCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService", "TroopsService"];
window.villageOverviewOasesCtrl = function(a, c) {
    var b = OasisTroopRanking.getCollection();
    a.subscribe(b, function() {
        a.oasesList = b.data
    });
    var f = c.H(null, [Troops.COLLECTION_ELSEWHERE], function() {
        for (var b = f.v(), c = 0; c < b.length; c++) {
            var h = b[c]
              , m = h.data.villageIdLocation;
            void 0 === a.troopAmountInVillage[m] && (a.troopAmountInVillage[m] = 0);
            a.troopAmountInVillage[m] += h.troopAmount
        }
    }, a);
    a.troopAmountInVillage = {}
}
;
window.villageOverviewOasesCtrl.$inject = ["$scope", "TroopsService"];
window.villagesOverviewCtrl = function(a, c, b, f) {
    function g() {
        var c = b.i();
        a.activeVillageId = c.data.villageId;
        a.tribeId = c.data.tribeId
    }
    a.w.windowName = "Title.VillagesOverview";
    a.tabConfig.tabs = "Overview Resources Store CulturePoints Troops Oases".split(" ");
    a.tabConfig.bodyTemplatePrefix = "tpl/villagesOverview/";
    a.tabConfig.disableScrollingForTabs = ["Troops"];
    a.resNames = Resources.STRING;
    a.openBuilding = function(e, f, g) {
        b.ea(f);
        "undefined" != typeof g ? g == Troops.TYPE_TRAPS ? c.S("type" + Building.TYPE.TRAPPER, function(b) {
            null != b && a.openWindow("building", {
                location: b.data.locationId
            })
        }) : a.openWindow("building", {
            location: 32
        }) : a.openWindow("building", {
            location: e
        })
    }
    ;
    a.setVillage = function(a) {
        f.o("villId", a);
        a != b.getActiveVillageId() && b.ea(a)
    }
    ;
    g();
    a.$on("activeVillageChanged", g)
}
;
window.villagesOverviewCtrl.$inject = ["$scope", "BuildingService", "VillageService", "RoutingService"];
window.villagesOverviewMainCtrl = function(a, c, b, f) {
    function g() {
        for (var b = 0; b < a.overview.length; b++) {
            var c = a.overview[b].villageId
              , f = h[c]
              , g = m[c]
              , n = l[c];
            a.overview[b].smithyQueue = !1;
            a.overview[b].academyQueue = !1;
            g.data.buildingTypes && (g.data.buildingTypes[Building.TYPE.BLACKSMITH] && 0 < g.data.buildingTypes[Building.TYPE.BLACKSMITH].length && (a.overview[b].smithyQueue = !0),
            g.data.buildingTypes[Building.TYPE.ACADEMY] && 0 < g.data.buildingTypes[Building.TYPE.ACADEMY].length && (a.overview[b].academyQueue = !0));
            a.overview[b].attacks = {
                attacking: 0,
                underAttack: 0
            };
            for (var g = e.v([c]), s = 0; s < g.length; s++) {
                var x = g[s];
                x.isAttacking && (x.data.movement.villageIdTarget == c && a.overview[b].attacks.underAttack++,
                x.data.movement.villageIdStart == c && a.overview[b].attacks.attacking++)
            }
            a.overview[b].troopsQueue = {};
            var g = 0, v;
            for (v in n.data.unitsInQueue) {
                0 < n.data.unitsInQueue[v] && (g++,
                a.overview[b].troopsQueue[v] = parseInt(n.data.unitsInQueue[v]))
            }
            a.overview[b].troopsCount = g;
            a.overview[b].buildingQueue = [];
            for (var D in f.data.queues[BuildingQueue.TYPE_MASTER_BUILDER]) {
                a.overview[b].buildingQueue.push(f.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][D])
            }
            for (D in f.data.queues[BuildingQueue.TYPE_RESOURCES]) {
                a.overview[b].buildingQueue.push(f.data.queues[BuildingQueue.TYPE_RESOURCES][D])
            }
            for (D in f.data.queues[BuildingQueue.TYPE_VILLAGE]) {
                a.overview[b].buildingQueue.push(f.data.queues[BuildingQueue.TYPE_VILLAGE][D])
            }
            "undefined" != typeof p[c].data.merchantsFree && null != p[c].data.merchantsFree && (a.overview[b].merchants.free = parseInt(p[c].data.merchantsFree));
            "undefined" != typeof p[c].data.max && null != p[c].data.max && (a.overview[b].merchants.total = parseInt(p[c].data.max))
        }
    }
    var e = f.H(null, [Troops.COLLECTION_MOVING], g, a);
    a.overview = [];
    a.Building = Building;
    a.BuildingQueue = BuildingQueue;
    var h = {}
      , m = {}
      , l = {}
      , p = {}
      , n = c.W();
    a.subscribe(n, function() {
        a.overview = [];
        for (var b = 0; b < n.data.length; b++) {
            var c = n.data[b]
              , e = c.data.villageId;
            a.overview.push({
                villageId: e,
                villageName: c.data.name,
                tribeId: c.data.tribeId,
                merchants: {
                    free: 0,
                    total: 0
                },
                troopsQueue: {},
                troopsNames: {},
                buildingQueue: [],
                researchQueue: [],
                attacks: {
                    attacking: 0,
                    underAttack: 0
                }
            });
            h[e] = BuildingQueue.get(e);
            m[e] = UnitResearchQueue.get(e);
            l[e] = UnitQueue.get(e);
            p[e] = Merchants.get(e);
            a.subscribe(h[e], g);
            a.subscribe(m[e], g);
            a.subscribe(l[e], g);
            a.subscribe(p[e], g)
        }
        g()
    });
    a.openBuildingByType = function(e, f) {
        var h = b.aa(f)
          , l = 0
          , g = h.subscribe(function() {
            for (var b = 0; b < h.data.length; b++) {
                var m = h.data[b].data;
                if (m.buildingType == e) {
                    l = m.locationId;
                    break
                }
            }
            0 < l && (f != c.getActiveVillageId() && c.ea(f),
            a.openWindow("building", {
                location: l
            }));
            h.unsubscribe(g)
        })
    }
}
;
window.villagesOverviewMainCtrl.$inject = ["$scope", "VillageService", "BuildingService", "TroopsService"];
window.villagesOverviewResourcesAndStoreCtrl = function(a, c, b, f) {
    function g() {
        a.overview = [];
        for (var b = 0; b < n.data.length; b++) {
            var c = n.data[b]
              , e = c.data.villageId
              , f = {};
            f.villageId = c.data.villageId;
            f.villageName = c.data.name;
            f.resources = {
                1: 0,
                2: 0,
                3: 0,
                4: 0
            };
            f.merchants = {
                free: 0,
                total: 0
            };
            f.fillPercentage = {
                1: 0,
                2: 0,
                3: 0,
                4: 0
            };
            f.storageCapacity = {
                1: 0,
                2: 0,
                3: 0,
                4: 0
            };
            f.timeWhenFull = {
                all: null,
                crop: null
            };
            a.overview.push(f);
            l[e] = Merchants.get(e);
            p[e] = c;
            a.subscribe(l[e], h)
        }
        h()
    }
    function e() {
        m = c(function() {
            h();
            e()
        }, 1E3)
    }
    function h() {
        a.total.merchants.free = 0;
        a.total.merchants.total = 0;
        for (var b in a.total.resources) {
            a.total.resources[b] = 0
        }
        for (var c = 0; c < a.overview.length; c++) {
            var e = a.overview[c].villageId
              , f = p[e]
              , h = f.getResources()
              , g = f.getCapacity()
              , f = f.getProduction();
            a.overview[c].resources = h;
            for (b in h) {
                a.total.resources[b] += h[b];
                a.overview[c].fillPercentage[b] = Math.floor(100 * (h[b] / g[b]));
                a.overview[c].storageCapacity[b] = g[b];
                var m = g[b] - h[b]
                  , n = f[b] / 3600
                  , D = -1;
                0 < n && (D = Math.floor(m / n + a.currentServerTime));
                0 > n && (D = Math.floor(-(h[b] / n) + a.currentServerTime));
                var m = 4 == b
                  , C = a.overview[c].timeWhenFull.all - 1E3 > D || null === a.overview[c].timeWhenFull.all
                  , A = a.overview[c].timeWhenFull.crop - 1E3 > D || null === a.overview[c].timeWhenFull.crop;
                !m && C ? a.overview[c].timeWhenFull.all = D : m && A && (a.overview[c].timeWhenFull.crop = D);
                Infinity === a.overview[c].timeWhenFull.crop && (a.overview[c].timeWhenFull.crop = 0);
                m && (a.overview[c].cropProductionSpeed = n)
            }
            "undefined" != typeof l[e].data.merchantsFree && null != l[e].data.merchantsFree && (a.overview[c].merchants.free = parseInt(l[e].data.merchantsFree),
            a.total.merchants.free += l[e].data.merchantsFree);
            "undefined" != typeof l[e].data.max && null != l[e].data.max && (a.overview[c].merchants.total = parseInt(l[e].data.max),
            a.total.merchants.total += l[e].data.max)
        }
    }
    var m;
    a.total = {
        resources: {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        merchants: {
            free: 0,
            total: 0
        }
    };
    var l = {}
      , p = {}
      , n = b.W();
    a.subscribe(n, g);
    a.openMarketPlace = function(c) {
        var e = b.getActiveVillageId()
          , h = {};
        c != e && (h = {
            destId: e,
            destPlayerId: Travian.Player.data.playerId
        });
        a.setVillage(c);
        f.S("type" + Building.TYPE.MARKET, function(b) {
            null != b && a.openWindow("building", {
                location: b.data.locationId
            }, h)
        })
    }
    ;
    a.$on("$destroy", function() {
        c.cancel(m)
    });
    g();
    "undefined" == typeof m && e()
}
;
window.villagesOverviewResourcesAndStoreCtrl.$inject = ["$scope", "$timeout", "VillageService", "BuildingService"];
window.villagesOverviewTroopsCtrl = function(a, c, b) {
    function f() {
        for (var b = a.totalTroops.length = 0; 11 > b; b++) {
            a.totalTroops[b] = 0
        }
        for (var c = 0; c < e.data.length; c++) {
            var f = e.data[c].data;
            if ("undefined" != typeof a.ownTroops[c]) {
                a.ownTroops[c].troops = [];
                a.troopsInVillage[c].troops = {};
                a.troopsInVillage[c].troops[f.tribeId] = {
                    tribeId: f.tribeId,
                    originalTroops: []
                };
                for (b = 0; 10 >= b; b++) {
                    a.ownTroops[c].troops[b] = 0,
                    a.troopsInVillage[c].troops[f.tribeId].originalTroops[b + 1] = 0
                }
                for (var p = g.v([f.villageId]), n = 0; n < p.length; n++) {
                    var q = p[n].data.tribeId;
                    if (p[n].data.villageId == f.villageId) {
                        for (var r in p[n].data.units) {
                            b = Math.max(parseInt(p[n].data.units[r]), 0),
                            a.ownTroops[c].troops[r - 1] += b,
                            a.totalTroops[r - 1] += b
                        }
                    }
                    if (p[n].data.villageIdLocation == f.villageId && p[n].data.status != Troops.STATUS_TRANSIT) {
                        if (!(q in a.troopsInVillage[c].troops)) {
                            for (a.troopsInVillage[c].troops[q] = {
                                tribeId: q,
                                originalTroops: []
                            },
                            b = 0; 11 >= b; b++) {
                                a.troopsInVillage[c].troops[q].originalTroops[b] = 0
                            }
                        }
                        for (r in p[n].data.units) {
                            a.troopsInVillage[c].troops[q].originalTroops[r] += parseInt(p[n].data.units[r])
                        }
                    }
                }
            }
        }
    }
    a.villageOverviewTabConfig = {};
    a.villageOverviewTabConfig.tabs = ["OwnTroops", "TroopsInVillages"];
    a.villageOverviewTabConfig.bodyTemplatePrefix = "tpl/villagesOverview/troops/tabs/";
    a.villageOverviewTabConfig.routeNamedParam = "subtab";
    a.villageOverviewTabConfig.tabName = "subtab";
    a.villageOverviewTabConfig.tabType = "subtab";
    a.totalTroops = [];
    a.ownTroops = [];
    a.troopsInVillage = [];
    var g = b.H(null, [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_MOVING, Troops.COLLECTION_ELSEWHERE], f, a)
      , e = c.W();
    a.subscribe(e, function() {
        for (var b = 0; b < e.data.length; b++) {
            var c = e.data[b].data;
            a.troopsInVillage[b] = {
                tribeId: c.tribeId,
                supplyTroops: c.supplyTroops,
                villageId: c.villageId,
                villageIdLocation: c.villageId,
                villageName: c.name,
                troops: {}
            };
            a.ownTroops[b] = {
                tribeId: c.tribeId,
                supplyTroops: c.supplyTroops,
                villageId: c.villageId,
                villageIdLocation: c.villageId,
                villageName: c.name,
                troops: []
            }
        }
        f()
    })
}
;
window.villagesOverviewTroopsCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.academyCtrl = function(a) {
    a.tabConfig.disableScrollingForTabs = ["main"]
}
;
window.academyCtrl.$inject = ["$scope"];
window.blacksmithCtrl = function(a) {
    a.tabConfig.disableScrollingForTabs = ["main"]
}
;
window.blacksmithCtrl.$inject = ["$scope"];
window.crannyCtrl = function(a, c, b) {
    c = c.aa(b.getActiveVillageId());
    b = 0;
    a.crannyCount = 0;
    a.lootableResources = {
        1: {},
        2: {},
        3: {},
        4: {}
    };
    for (var f = 0; f < c.data.length; f++) {
        c.data[f].data.buildingType == a.building.data.buildingType && (b += c.data[f].data.currentEffect.values[0],
        a.crannyCount++)
    }
    a.capacitySum = b;
    for (var g in a.storage) {
        a.lootableResources[g].value = a.storage[g] - b,
        a.lootableResources[g].name = Resources.STRING[g]
    }
}
;
window.crannyCtrl.$inject = ["$scope", "BuildingService", "VillageService"];
window.embassyCommunitiesCtrl = function(a) {
    a.embassyCommunitiesTabConfig = {};
    a.embassyCommunitiesTabConfig.tabs = ["Kingdom", "SecretSociety"];
    a.embassyCommunitiesTabConfig.bodyTemplatePrefix = "tpl/building/embassy/partials/";
    a.embassyCommunitiesTabConfig.routeNamedParam = "subtab";
    a.embassyCommunitiesTabConfig.tabName = "subtab";
    a.embassyCommunitiesTabConfig.tabType = "subtab vertical";
    a.embassyCommunitiesTabConfig.disableScrolling = !0
}
;
window.embassyCommunitiesCtrl.$inject = ["$scope"];
window.embassyCtrl = function(a) {
    a.tabConfig.tabs = ["Communities", "Oases"];
    a.tabConfig.bodyTemplatePrefix = "tpl/building/embassy/tabs/";
    a.tabConfig.disableScrollingForTabs = ["Communities", "Oases"]
}
;
window.embassyCtrl.$inject = ["$scope", "RoutingService"];
window.embassyOasesCtrl = function(a, c, b) {
    function f() {
        a.oases = [];
        p.options = e;
        p.disabled = 0 == e.length || Travian.Player.isOnVacation();
        for (var c in Travian.Config.oasisConfig.embassyLevels) {
            a.oases.push({
                lvl: Travian.Config.oasisConfig.embassyLevels[c],
                dropdown: angular.copy(p),
                used: null
            })
        }
        for (var l = c = 0; l < h.data.length; l++) {
            var g = h.data[l];
            g.data.usedByVillage == b.getActiveVillageId() && (a.oases[c++].used = g);
            "undefined" == typeof m[g.data.oasisId] && (m[g.data.oasisId] = !0,
            a.subscribe(g, f))
        }
    }
    function g() {
        a.oasesInReach = [];
        Travian.request("building/getOasisList", {
            villageId: b.getActiveVillageId()
        }, function(c) {
            a.mapRadius = b.getActiveVillageId() + ":" + c.radius;
            e = [];
            for (var h = 0; h < c.inReach.length; h++) {
                var l = c.inReach[h];
                0 == l.myRank || 0 != l.usedByVillage || l.isWild || e.push(l)
            }
            c.inReach.sort(function(a, b) {
                return 0 != a.myRank && 0 != b.myRank ? a.myRank - b.myRank : b.myRank - a.myRank
            });
            a.oasesInReach = c.inReach;
            f()
        })
    }
    var e = []
      , h = OasisTroopRanking.getCollection()
      , m = {}
      , l = null
      , p = {
        placeholder: "Embassy.Oasis.DropdownAssignOasis",
        selected: null,
        lazyRendering: !1,
        resize: !0,
        bodyClass: "oasisDropdown",
        callback: function(a) {
            a = e[a];
            Travian.writeRequest("village/useOasis", {
                oasisId: a.villageId,
                villageId: b.getActiveVillageId()
            }, g);
            Cache.B("MapDetails:" + a.villageId)
        },
        disabled: !1,
        options: [],
        noTruncate: !0
    }
      , n = Travian.Player.data.vacationState;
    a.subscribe(Travian.Player, function() {
        Travian.Player.data.vacationState != n && (f(),
        n = Travian.Player.data.vacationState)
    });
    a.clearOasis = function(a, b) {
        Travian.writeRequest("village/clearOasis", {
            oasisId: a,
            villageId: b
        }, g);
        Cache.B("MapDetails:" + a)
    }
    ;
    g();
    a.$on("activeVillageChanged", g);
    l = h.subscribe(function() {
        c(function() {
            g()
        }, 50)
    });
    a.$on("$destroy", function() {
        h.unsubscribe(l)
    });
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_OASES + "_" + PlayerProgressTrigger.HELP_PAGE_ASSIGN_OASIS)
}
;
window.embassyOasesCtrl.$inject = ["$scope", "$timeout", "VillageService"];
window.healingTentCtrl = function(a, c, b) {
    function f() {
        a.activeVillage = b.i();
        a.woundedTroops = Troops.getCollection(Troops.COLLECTION_WOUNDED, b.getActiveVillageId()).data[0];
        a.unitQueue = UnitQueue.get(b.getActiveVillageId())
    }
    a.currentTab = a.getParam("tab");
    a.tabConfig.tabs = ["Healing", "Capacity"];
    a.tabConfig.bodyTemplatePrefix = "tpl/building/healingTent/tabs/";
    a.tabConfig.disableScrollingForTabs = ["Healing", "Capacity"];
    a.displayedEffectIndex = 1;
    a.$on("activeVillageChanged", f);
    f();
    a.healAll = function() {
        var c = {}, e;
        for (e in a.woundedTroops.data.units) {
            c[a.woundedTroops.nrToUnitId(e)] = a.woundedTroops.data.units[e]
        }
        Travian.writeRequest("building/healUnits", {
            villageId: b.getActiveVillageId(),
            locationId: a.building.data.locationId,
            units: c
        })
    }
}
;
window.healingTentCtrl.$inject = ["$scope", "BuildingService", "VillageService", "TroopsService"];
window.hiddenTreasuryCtrl = function(a, c, b) {
    function f() {
        e = c.i();
        a.canTransformToTreasury = !1;
        a.maxSlotsReached = !1;
        a.dataLoading = !0;
        Travian.request("building/getTreasuryTransformations", {}, function(b) {
            a.transformationFinished = 0;
            for (var c = a.abortButtonShowTime = 0; c < b.length; c++) {
                b[c].villageId == e.data.villageId && (a.transformationFinished = parseInt(b[c].finished),
                a.abortButtonShowTime = a.transformationFinished - a.config.balancing.treasuryTransformTime + a.config.balancing.treasuryTransformCancelTime)
            }
            0 == a.transformationFinished && g();
            a.dataLoading = !1
        });
        Travian.request("village/getTreasuriesCapacity", {
            villageId: c.i().data.villageId
        }, function(b) {
            a.treasuriesStorageCapacity = b.data
        })
    }
    function g() {
        a.currentPlayer.isKingdomLeader() && Travian.request("building/countForTransformingToTreasuryFreeSlots", {
            villageId: e.data.villageId,
            locationId: a.locationId
        }, function(b) {
            a.canTransformToTreasury = 0 < b.available;
            a.maxSlotsReached = b.maxSlotsReached;
            a.slotInfo = {
                usedSlots: b.totalSlots - b.available,
                totalSlots: b.totalSlots
            }
        })
    }
    a.Player = Player;
    a.currentPlayer = Travian.Player;
    a.treasuryLimit = Math.min(7, Math.ceil((a.currentPlayer.data.villages.length + 1) / 2));
    a.inCoronation = 0;
    a.dataLoading = !1;
    var e;
    a.multipleTreasuries = "Normal";
    1 < b.vd(Building.TYPE.HIDDEN_TREASURY) && (a.multipleTreasuries = "MultipleTreasuries");
    a.treasuryResources = c.i().data.treasury;
    a.transformToTreasury = function() {
        Travian.writeRequest("building/transformHiddenTreasury", {
            villageId: e.data.villageId,
            locationId: a.locationId
        }, function() {
            f()
        })
    }
    ;
    a.cancelTransformToTreasury = function() {
        Travian.writeRequest("building/cancelTransformHiddenTreasury", {
            villageId: e.data.villageId
        }, function() {
            a.transformationFinished = 0;
            g();
            a.abortButtonShowTime = 0
        })
    }
    ;
    a.claimResources = function() {
        Travian.writeRequest("building/claimHiddenTreasuryResources", {
            villageId: e.data.villageId,
            locationId: a.locationId
        }, y())
    }
    ;
    f();
    a.$on("activeVillageChanged", f)
}
;
window.hiddenTreasuryCtrl.$inject = ["$scope", "VillageService", "BuildingService"];
window.mainBuildingCtrl = function(a, c, b, f) {
    function g() {
        var h = c.i();
        a.village = h.data;
        a.isSitter = f.K();
        e = h.data.isTown;
        a.villageName = h.data.name;
        a.acceptanceMaxForTown = Travian.Config.townConfig.acceptanceMaxForTown;
        a.townAdditionalPopulation = Travian.Config.townConfig.townAdditionalPopulation;
        a.townAdditionalCultureProduction = Travian.Config.townConfig.townAdditionalCultureProduction;
        h.data.isMainVillage && (a.townAdditionalCultureProduction = Travian.Config.townConfig.townAdditionalCultureProductionMain);
        Travian.request("building/getCulturePointBalance", {
            villageId: a.village.villageId
        }, function(b) {
            a.townPreconditions = {};
            a.townPreconditions.population = Travian.Config.townConfig.townRequirementForPopulation;
            a.townPreconditions.culturePoints = b.currentCP;
            a.townPreconditions.culturePointsForTown = b.neededCP
        });
        var g = b.aa(a.village.villageId);
        a.subscribe(g, function() {
            a.dropdown.options = {};
            var b = a.dropdown.selected;
            a.dropdown.selected = null;
            for (var c = 0; c < g.data.length; c++) {
                if (!g.data[c].isResourceField()) {
                    var e = g.data[c].data.locationId
                      , f = g.data[c].data.buildingType
                      , l = g.data[c].data.lvl;
                    (!Village.isWWVillage(h.data.type) || f != Building.TYPE.RALLY_POINT) && (0 < f && 0 < l && f != Building.TYPE.WONDER_OF_WORLD) && (a.dropdown.options[e] = e + ". " + Travian.translate("Building_" + f) + " " + l,
                    e == b && (a.dropdown.selected = b))
                }
            }
        });
        var l = BuildingQueue.get(a.village.villageId);
        a.subscribe(l, function() {
            a.isRubble = !1;
            a.demolishQueue = l.data.queues[BuildingQueue.TYPE_DESTRUCTION];
            if ("undefined" == typeof a.demolishQueue) {
                a.demolishQueue = []
            } else {
                if (0 < l.data.queues[BuildingQueue.TYPE_DESTRUCTION].length) {
                    for (var b = 0; b < g.data.length; b++) {
                        var c = g.data[b];
                        c.data.locationId == a.demolishQueue[0].locationId && (a.demolishingBuildingInfo = c.data,
                        a.isRubble = "1" == a.demolishQueue[0].isRubble ? !0 : !1,
                        a.rubbleResources = c.data.rubble)
                    }
                }
            }
        })
    }
    a.buildings = {};
    a.townPreconditions = {};
    a.village = {};
    a.villageName = {};
    a.dropdown = {
        placeholder: "ChoseBuilding",
        selected: null,
        options: {}
    };
    var e = !1;
    g();
    a.$watch("village.isTown", function(a) {
        e == a || a || g()
    });
    a.$on("activeVillageChanged", g);
    a.demolish = function() {
        0 == a.demolishQueue.length && Travian.writeRequest("building/destroy", {
            villageId: a.village.villageId,
            locationId: a.dropdown.selected
        }, function(b) {
            a.handleError(b, "errorDemolish")
        })
    }
    ;
    a.cancel = function() {
        0 != a.demolishQueue.length && Travian.writeRequest("building/cancel", {
            villageId: a.village.villageId,
            eventId: a.demolishQueue[0].id
        })
    }
    ;
    a.mayUpgradeToTown = function() {
        return a.village.population < a.townPreconditions.population || a.townPreconditions.culturePoints < a.townPreconditions.culturePointsForTown ? !1 : !0
    }
    ;
    a.setNewVillageName = function(b) {
        Travian.writeRequest("village/updateName", {
            villageId: a.village.villageId,
            villageName: b
        }, function(b) {
            "undefined" === typeof b.errors ? c.W().data.sort(Village.collectionSortFct) : a.handleError(b)
        })
    }
}
;
window.mainBuildingCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.buyMarketplaceCtrl = function(a, c) {
    function b() {
        Travian.request("trade/getOfferList", {
            villageId: g.data.villageId,
            search: a.filter.search.type,
            offer: a.filter.offer.type,
            rate: a.filter.rate,
            start: (a.filter.page - 1) * a.itemsPerPage,
            count: a.itemsPerPage
        }, function(b) {
            a.marketOffers = b.data;
            a.numberOfItems = b.countEntries;
            0 == b.data.length && 1 < a.filter.page && a.displayCurrentPage(Math.ceil(b.countEntries / a.itemsPerPage))
        })
    }
    function f(b, c) {
        "undefined" == typeof c && (c = 1);
        var f = "";
        "search" == b && (f = "offer");
        "offer" == b && (f = "search");
        "" != f && a.filter[f].type == a.filter[b].type && 0 < a.filter[b].type && (a.filter[f].type = 0);
        a.o("cp", c);
        a.filter.page = c
    }
    a.filter = {
        search: {
            type: 0
        },
        offer: {
            type: 0
        },
        rate: 0,
        page: 0
    };
    a.itemsPerPage = 8;
    a.numberOfItems = 0;
    a.marketOffers = [];
    a.acceptedOffer = {};
    a.displayCurrentPage = function(c) {
        null == c && (c = 1);
        a.filter.page = c;
        b()
    }
    ;
    a.filterChanged = function(a, c) {
        f(a, c);
        b()
    }
    ;
    a.selectRate = function(b) {
        a.filter.rate = b;
        a.filterChanged()
    }
    ;
    var g = c.i();
    f();
    a.$on("activeVillageChanged", function() {
        g = c.i();
        a.filterChanged()
    });
    a.acceptOffer = function(b) {
        var c = {
            offerId: b,
            villageId: g.data.villageId
        }
          , f = a.getParam("cp");
        Travian.writeRequest("trade/acceptOffer", c, function(c) {
            if (a.handleError(c) && !0 === c.data) {
                for (var h in a.marketOffers) {
                    if (a.marketOffers[h].offerId == b) {
                        a.acceptedOffer = a.marketOffers[h];
                        a.marketOffers[h].inactive = !0;
                        break
                    }
                }
            } else {
                a.filterChanged("", f)
            }
        })
    }
    ;
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_TRADING + "_" + PlayerProgressTrigger.HELP_PAGE_TRADING_RESOURCES);
    a.$on("$destroy", function() {
        a.handleError({})
    });
    a.$parent.hasMerchantRight || a.selectRate(1)
}
;
window.buyMarketplaceCtrl.$inject = ["$scope", "VillageService"];
window.editTradeRouteCtrl = function(a, c, b) {
    function f() {
        a.stock = new Resources(e.getResources())
    }
    function g() {
        e = c.i();
        a.merchants = new Merchants.get(e.data.villageId);
        f();
        b.S("type17", function(b) {
            null != b && (a.building = b)
        });
        a.za = TradeOffer.getCollection(TradeOffer.COLLECTION_OWN, e.data.villageId);
        a.subscribe(a.za, function() {
            a.ownOffers = a.za.data
        })
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Marketplace.TradeRoutes.Headline",
        inWindowPopupContentTemplate: "tpl/building/marketplace/partials/editTradeRoute.html"
    });
    a.editTradeRoute = !0;
    a.tradeRouteId = a.getParam("tradeRoute");
    var e = null;
    a.building = new Building;
    a.tradeOffice = new Building;
    a.merchants = new Merchants;
    a.Math = Math;
    a.resNames = angular.copy(Resources.STRING);
    delete a.resNames[0];
    a.ownOffers = [];
    a.marketOffers = [];
    a.za = [];
    a.$on("activeVillageChanged", function() {
        g()
    });
    a.$on("resourcesChanged", function() {
        f()
    });
    g();
    a.$on("$destroy", function() {
        a.l("tradeRoute")
    })
}
;
window.editTradeRouteCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.marketplaceCtrl = function(a, c, b, f, g, e) {
    function h() {
        a.stock = new Resources(l.getResources())
    }
    function m() {
        l = c.i();
        a.merchants = new Merchants.get(l.data.villageId);
        h();
        b.S("type17", function(b) {
            null != b && (a.building = b)
        });
        a.za = TradeOffer.getCollection(TradeOffer.COLLECTION_OWN, l.data.villageId);
        a.subscribe(a.za, function() {
            a.ownOffers = a.za.data;
            a.$broadcast("ownOffersChanged")
        })
    }
    a.tabConfig.tabs = ["Send", "Buy", "Sell", "NpcTrade"];
    (Travian.Player.hasPlusAccount() || Travian.Player.hasUiLimitationFlag(Player.UI_LIMITATIONS.ALWAYS_SHOW_TRADE_ROUTES)) && a.tabConfig.tabs.push("TradeRoute");
    a.tabConfig.tabs.push("Merchants");
    a.tabConfig.bodyTemplatePrefix = "tpl/building/marketplace/tabs/";
    a.tabConfig.disableScrollingForTabs = ["Send", "NpcTrade", "TradeRoute"];
    a.building = new Building;
    a.tradeOffice = new Building;
    a.merchants = new Merchants;
    a.Math = Math;
    a.resNames = angular.copy(Resources.STRING);
    delete a.resNames[0];
    a.ownOffers = [];
    a.marketOffers = [];
    a.za = [];
    a.hasMerchantRight = e.hasRight(Session.RIGHT_SEND_MERCHANTS);
    var l = null;
    a.$on("activeVillageChanged", function() {
        m()
    });
    a.$on("resourcesChanged", function() {
        h()
    });
    m();
    h()
}
;
window.marketplaceCtrl.$inject = "$scope VillageService BuildingService RoutingService TroopsService SessionService".split(" ");
window.merchantsMarketplaceCtrl = function(a, c, b) {
    function f() {
        e = c.getActiveVillageId();
        null !== h && h.destroy();
        h = b.H([e], null, g, a)
    }
    function g() {
        var b = h.v();
        a.traders = {
            outgoing: [],
            incoming: [],
            returns: []
        };
        $.each(b, function(c) {
            c = b[c];
            "undefined" !== typeof c.data.movement && (c.fetchNames(),
            c.data.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT ? parseInt(c.data.movement.villageIdStart) == e ? a.traders.outgoing.push(c.data) : a.traders.incoming.push(c.data) : c.data.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN && a.traders.returns.push(c.data))
        })
    }
    var e = null
      , h = null;
    f();
    a.$on("activeVillageChanged", f);
    g()
}
;
window.merchantsMarketplaceCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.npcMerchantCtrl = function(a, c, b, f) {
    function g() {
        Village.isWWVillage(u.data.type) ? (a.npcTradingAvailable = "notAvailable",
        a.error = Travian.translate("Error.NotAvailableInWW")) : a.npcTradingAvailable = "";
        var b = a.resources.getResources();
        a.resources = new Resources(u.getResources());
        a.capacity = new Resources(u.getCapacity());
        a.sliderMax = Math.max(a.capacity[1], a.capacity[4]);
        for (var c = 1; 4 >= c; c++) {
            a.distributed[c] += a.resources[c] - b[c],
            a.resourceData[c].markers[m] = a.resources[c],
            a.resourceData[c].markers[h] = a.resources.getSum(),
            a.resourceData[c].markers[l] = a.capacity[c]
        }
        r || "undefined" == typeof a.$parent.predistribution || (a.distributed = new Resources(a.predistribution),
        r = !0);
        b = a.getParam("wood", !1, !0);
        if (null != b) {
            var c = a.getParam("clay", !1, !0)
              , f = a.getParam("iron", !1, !0)
              , g = a.getParam("crop", !1, !0);
            a.distributed = new Resources([0, b, c, f, g])
        }
        e()
    }
    function e() {
        a.error = null;
        q = 0;
        for (var b = 1; 4 >= b; b++) {
            a.distributed[b] > a.capacity[b] ? a.distributed[b] = a.capacity[b] : 0 > a.distributed[b] && (a.distributed[b] = 0),
            a.resourceData[b].value = a.distributed[b],
            a.resourceData[b].diff = a.distributed[b] - a.resources[b],
            0 < a.resourceData[b].diff && (a.resourceData[b].diff = "+" + a.resourceData[b].diff),
            q += parseInt(Math.abs(a.resourceData[b].diff))
        }
        a.distributedSum = a.distributed.getSum(p);
        a.resourcesSum = a.resources.getSum(p);
        a.freeResources = a.distributedSum - a.resourcesSum;
        a.totalDiff = q;
        50 > q && 0 < q && (a.error = Travian.translate("Error.NPCTradeTooLow"));
        a.$$phase || a.$digest()
    }
    var h = 0
      , m = 1
      , l = 2;
    a.Math = Math;
    a.resources = new Resources;
    a.distributed = new Resources;
    a.resourcesSum = 0;
    a.distributedSum = 0;
    a.freeResources = 0;
    a.lockedResources = 0;
    a.resNames = angular.copy(Resources.STRING);
    a.availableResTypes = 0;
    var p = PremiumFeature.getNotTradableResTypes(), n;
    for (n in a.resNames) {
        0 == n || 0 <= p.indexOf(parseInt(n, 10)) ? delete a.resNames[n] : a.availableResTypes++
    }
    a.npcTradingAvailable = "";
    var q = a.totalDiff = 0
      , r = !1
      , t = !1;
    a.resourceData = {
        1: {
            id: Resources.WOOD,
            value: 0,
            diff: "0",
            markers: [0, 0, 0],
            locked: 0 <= p.indexOf(Resources.WOOD)
        },
        2: {
            id: Resources.CLAY,
            value: 0,
            diff: "0",
            markers: [0, 0, 0],
            locked: 0 <= p.indexOf(Resources.CLAY)
        },
        3: {
            id: Resources.IRON,
            value: 0,
            diff: "0",
            markers: [0, 0, 0],
            locked: 0 <= p.indexOf(Resources.IRON)
        },
        4: {
            id: Resources.CROP,
            value: 0,
            diff: "0",
            markers: [0, 0, 0],
            locked: 0 <= p.indexOf(Resources.CROP)
        }
    };
    var u = b.i();
    g();
    a.$on("activeVillageChanged", function() {
        if ("npcTrader" == a.w.name) {
            c.l("window"),
            a.closeWindow("npcTrader")
        } else {
            u = b.i();
            Village.isWWVillage(u.data.type) ? a.npcTradingAvailable = "notAvailable" : a.npcTradingAvailable = "";
            for (var e = 1; 4 >= e; e++) {
                a.resourceData[e].locked = !1
            }
            a.lockedResources = 0;
            g();
            t = !0;
            f(function() {
                t = !1;
                for (var b = 1; 4 >= b; b++) {
                    a.resourceData[b].value = a.resources[b],
                    a.distributed = new Resources(a.resources.getResources())
                }
            }, 10)
        }
    });
    a.sliderChanged = function(b, c, f) {
        if (t) {
            return c
        }
        f = f.id;
        if (a.distributed[f] >= a.capacity[f] && b > a.distributed[f]) {
            return c
        }
        a.distributed[f] = b || 0;
        b = [];
        for (c = 1; 4 >= c; c++) {
            a.resourceData[c].locked || c == f || b.push(c)
        }
        a.distributed = a.resources.distribute(a.capacity, a.distributed, null, b);
        b = a.resources.getSum() - a.distributed.getSum();
        0 != b && (a.distributed[f] += b);
        e();
        return a.distributed[f]
    }
    ;
    a.toggleResourceLock = function(b) {
        !a.resourceData[b].locked && a.lockedResources > a.availableResTypes - 3 || (a.resourceData[b].locked = !a.resourceData[b].locked,
        a.resourceData[b].locked ? a.lockedResources++ : a.lockedResources--,
        e())
    }
    ;
    a[PremiumFeature.FEATURE_NAME_NPC_TRADER] = function() {
        return Village.isWWVillage(u.data.type) ? !1 : {
            villageId: u.data.villageId,
            distributeRes: a.distributed,
            callback: function(b) {
                null != a.getParam("closeWindow", !1, !0) && a.closeOverlay();
                "undefined" != typeof a.closeNpcWindow ? a.closeWindow("npcTrader") : a.handleError(b) && (a.distributed = new Resources,
                a.resources = new Resources,
                g())
            },
            updateCacheFirst: !0
        }
    }
    ;
    a.NPCTraderFeatureName = PremiumFeature.FEATURE_NAME_NPC_TRADER;
    a.distribute = function() {
        var b = [], c;
        for (c = 1; 4 >= c; c++) {
            a.resourceData[c].locked || b.push(c)
        }
        b = a.resources.distribute(a.capacity, a.distributed, null, b);
        if ("object" != typeof b) {
            return b
        }
        a.distributed = b;
        for (c = 1; 4 >= c; c++) {
            a.resourceData[c].value = a.distributed[c]
        }
    }
    ;
    a.$on("$destroy", function() {
        a.handleError({})
    })
}
;
window.npcMerchantCtrl.$inject = ["$scope", "RoutingService", "VillageService", "$timeout", "SessionService"];
window.npcMerchantOverlayCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Tab.NpcTrade",
        inWindowPopupContentTemplate: "tpl/building/marketplace/tabs/NpcTrade.html",
        routeNamedParam: "npcOverlay"
    })
}
;
window.npcMerchantOverlayCtrl.$inject = ["$scope"];
window.sellMarketplaceCtrl = function(a, c) {
    function b() {
        a.ownOffers = a.za.data
    }
    function f() {
        h = c.i();
        a.merchants = new Merchants.get(h.data.villageId);
        0 <= e && a.merchants.unsubscribe(e);
        e = a.merchants.subscribe(function() {
            g();
            a.newOffer.offeredAmount = a.newOffer.offeredAmount || a.merchants.data.carry;
            a.newOffer.searchedAmount = a.newOffer.searchedAmount || a.merchants.data.carry
        })
    }
    function g() {
        var b = a.merchants.data.merchantsFree * a.merchants.data.carry;
        a.newOffer.offeredAmount > b && (a.newOffer.offeredAmount = b)
    }
    a.maxLimitDurationValue = 99;
    a.ownOffers = [];
    a.acceptedOffer = {};
    a.filter = {
        search: {
            type: 1
        },
        offer: {
            type: 2
        },
        page: 0
    };
    var e = -1;
    a.newOffer = {
        offeredAmount: 0,
        neededMerchants: 0,
        searchedAmount: 0,
        limitDurationValue: 0,
        limitKingdom: !1
    };
    var h = c.i();
    b();
    a.cancelOffer = function(a) {
        Travian.writeRequest("trade/cancelOffer", {
            offerId: a
        })
    }
    ;
    a.createOffer = function() {
        var b = a.newOffer
          , c = {
            villageId: h.data.villageId,
            offeredResource: a.filter.offer.type,
            offeredAmount: b.offeredAmount,
            searchedResource: a.filter.search.type,
            searchedAmount: b.searchedAmount,
            kingdomOnly: b.limitKingdom
        };
        0 < b.limitDurationValue && (c.maximumDuration = b.limitDurationValue);
        Travian.writeRequest("trade/createOffer", c, function(b) {
            a.handleError(b, "sellMarketError")
        });
        g()
    }
    ;
    a.incrLimitDurationValue = function() {
        a.newOffer.limitDurationValue < a.maxLimitDurationValue && a.newOffer.limitDurationValue++
    }
    ;
    a.decrLimitDurationValue = function() {
        0 < a.newOffer.limitDurationValue && a.newOffer.limitDurationValue--
    }
    ;
    a.$watch("newOffer.offeredAmount", function() {
        a.newOffer.neededMerchants = Math.ceil(a.newOffer.offeredAmount / (a.merchants.data.carry || 1))
    });
    a.$on("ownOffersChanged", function() {
        a.subscribe(a.za, b)
    });
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_TRADING + "_" + PlayerProgressTrigger.HELP_PAGE_OFFERING_RESOURCES);
    a.$on("$destroy", function() {
        a.handleError({}, "sellMarketError");
        a.merchants && 0 <= e && a.merchants.unsubscribe(e)
    });
    a.filterChanged = function() {
        a.handleError({}, "sellMarketError")
    }
    ;
    a.$on("activeVillageChanged", f);
    f();
    g()
}
;
window.sellMarketplaceCtrl.$inject = ["$scope", "VillageService"];
window.sendMarketplaceCtrl = function(a, c, b, f, g) {
    function e() {
        a.lastTrade = null;
        r = c.i();
        a.stock = new Resources(r.getResources());
        0 <= x && a.merchants.unsubscribe(x);
        x = a.merchants.subscribe(h);
        a.checkTarget(u);
        a.tradeRoutes = TradeRoute.getCollection(r.data.villageId);
        null !== q && a.subscribe(a.tradeRoutes, function() {
            a.tradeRoutes.data[q] && (m(a.tradeRoutes.data[q]),
            s = q,
            q = null)
        })
    }
    function h() {
        if (a.merchants.filled) {
            w = a.editTradeRoute ? a.merchants.data.carry * a.building.data.lvl : a.merchants.data.maxCapacity;
            a.sliderMax = a.merchants.data.carry * Building.MAX_LEVEL;
            a.selectedCarrySum = 0;
            for (var b = 1; 4 >= b; b++) {
                a.selectedCarrySum += a.resourceData[b].value
            }
            b = w - a.selectedCarrySum;
            if (!(0 < b || 0 >= a.merchants.data.carry)) {
                for (var c = [1, 2, 3, 4], e = a.merchants.data.carry, f = !1; 0 > b && 0 < c.length; ) {
                    for (var h = 0; h < c.length; h++) {
                        var g = c[h];
                        if (a.resourceData[g].value >= e || f && 0 < a.resourceData[g].value) {
                            var m = e;
                            f && (m = Math.min(Math.abs(b), a.resourceData[g].value));
                            a.resourceData[g].value -= m;
                            a.selectedCarrySum -= m;
                            b += m
                        } else {
                            c.splice(h, 1),
                            h--
                        }
                        if (0 <= b) {
                            break
                        }
                    }
                    0 != c.length || f || (c = [1, 2, 3, 4],
                    f = !0)
                }
            }
            for (b = 1; 4 >= b; b++) {
                a.resourceData[b].markers[l] = w,
                a.resourceData[b].markers[p] = Math.min(a.stock[b], w),
                a.resourceData[b].markers[n] = a.resourceData[b].value + w - a.selectedCarrySum
            }
        }
    }
    function m(b) {
        a.routeCode = b.data.times;
        a.recurrences = b.data.recurrences;
        for (var c in b.data.resources) {
            a.resourceData[c].setValue = !0,
            a.resourceData[c].value = parseInt(b.data.resources[c])
        }
        c = Village.get(b.data.destVillageId);
        a.checkTarget({
            villageId: b.data.destVillageId,
            playerId: c.getField("playerId")
        })
    }
    var l = 0
      , p = 1
      , n = 2
      , q = null
      , r = c.i();
    a.targetInput = null;
    a.validTarget = !1;
    a.travelDuration = 0;
    a.requiredMerchants = 0;
    a.villageNamePlaceHolder = Travian.translate("SearchVillage.Villagename");
    a.mayCreateRoute = !1;
    a.selectedCarrySum = 0;
    a.routeCode = 0;
    a.recurrences = 1;
    a.tradeRoutes = null;
    a.firstExtraTraderSlotPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price;
    a.secondExtraTraderSlotPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price2;
    a.lastTrade = null;
    a.targetPlayer = null;
    a.showInstantDelivery = !1;
    a.premiumFeatureName = "";
    a.premiumFeatureTroopId = 0;
    var t = Voucher.get(Travian.Player.data.playerId);
    a.hasVoucher = t.data.hasVouchers[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY];
    a.traderSlotFeatureName = PremiumFeature.FEATURE_NAME_TRADER_SLOT;
    a.player = f.p();
    a.subscribe(a.player, function() {
        a.plusAccount = Travian.Player.hasPlusAccount();
        a.firstExtraTraderSlot = PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST);
        a.secondExtraTraderSlot = PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_SECOND);
        a.traderSlots = 1;
        a.firstExtraTraderSlot && a.traderSlots++;
        a.secondExtraTraderSlot && a.traderSlots++
    });
    Travian.Player.hasPlusAccount() && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_TRADING + "_" + PlayerProgressTrigger.HELP_PAGE_TRADE_ROUTES, PlayerProgressTrigger.CHECK_THREE_VILLAGES_OWNED);
    var u = null
      , w = 0
      , s = -1
      , x = -1;
    a.resourceData = {
        1: {
            id: 1,
            value: 0,
            markers: [0, 0, 0]
        },
        2: {
            id: 2,
            value: 0,
            markers: [0, 0, 0]
        },
        3: {
            id: 3,
            value: 0,
            markers: [0, 0, 0]
        },
        4: {
            id: 4,
            value: 0,
            markers: [0, 0, 0]
        }
    };
    a.$on("resourcesChanged", function() {
        a.stock = new Resources(r.getResources());
        h()
    });
    a.sliderChanged = function(b, c, e) {
        0 != b && (a.showInstantDelivery = !1,
        a.premiumFeatureName = "",
        a.premiumFeatureTroopId = 0);
        var f = e.id
          , h = 0;
        for (c = 1; 4 >= c; c++) {
            c != f && (h += a.resourceData[c].value)
        }
        e.setValue ? e.setValue = !1 : (b = Math.min(b, w - h),
        a.editTradeRoute || (b = Math.min(b, a.stock[f])));
        a.selectedCarrySum = b + h;
        a.requiredMerchants = Math.ceil(a.selectedCarrySum / a.merchants.data.carry) || 0;
        e = w - a.selectedCarrySum;
        for (c = 1; 4 >= c; c++) {
            c != f && (a.resourceData[c].markers[n] = a.resourceData[c].value + e)
        }
        return b
    }
    ;
    a.addMerchant = function(b) {
        a.resourceData[b].value += a.merchants.data.carry
    }
    ;
    a.$watch("building.data.lvl", function() {
        a.editTradeRoute && h()
    }, !0);
    a.noResourceSendToOthers = function() {
        return null !== u && r.data.playerId != u.playerId && 7 >= Math.ceil((g.R() - a.player.data.signupTime) / 86400)
    }
    ;
    a.checkTarget = function(b) {
        u = b;
        a.validTarget = !1;
        a.travelDuration = 0;
        a.targetPlayer = null;
        a.mayCreateRoute = !1;
        a.targetVacation = 0;
        a.showInstantDelivery = !1;
        a.premiumFeatureName = "";
        a.premiumFeatureTroopId = 0;
        if (b && !a.noResourceSendToOthers()) {
            var c = {
                sourceVillageId: r.data.villageId,
                destVillageId: b.villageId
            };
            "undefined" != typeof b.name && (c.destVillageName = b.name);
            Travian.request("trade/checkTarget", c, function(b) {
                a.handleError(b) && (a.validTarget = !0,
                a.travelDuration = b.duration,
                a.targetInput = b.villageName,
                a.targetPlayer = Player.get(b.playerId),
                a.mayCreateRoute = b.mayCreateRoute,
                a.targetVacation = b.vacation,
                a.mayCreateRoute || (a.routeCode = 0,
                a.recurrences = 1))
            })
        }
    }
    ;
    a.sendResources = function() {
        if (a.validTarget) {
            for (var b = {
                sourceVillageId: r.data.villageId,
                resources: [0],
                destVillageId: u.villageId,
                recurrences: a.recurrences
            }, c = 1; 4 >= c; c++) {
                b.resources[c] = a.resourceData[c].value
            }
            c = "sendResources";
            if (a.editTradeRoute) {
                c = "createTradeRoute",
                b.times = a.routeCode,
                b.minutesOffset = Settings.get(Travian.Player.data.playerId).timeZoneOffsetSeconds % 3600 / 60,
                "undefined" != typeof a.tradeRoutes.data[a.tradeRouteId] && (b.editId = a.tradeRoutes.data[a.tradeRouteId].data.id)
            } else {
                if (a.noResourceSendToOthers()) {
                    a.openOverlay("noResourceSendToOthers");
                    return
                }
            }
            Travian.writeRequest("trade/" + c, b, function(b) {
                if (a.handleError(b)) {
                    if (a.editTradeRoute) {
                        a.closeOverlay()
                    } else {
                        if (b.troopId && (a.lastTrade = angular.copy(Troops.get(b.troopId)),
                        r.data.playerId == u.playerId)) {
                            a.showInstantDelivery = !0;
                            a.premiumFeatureName = PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY;
                            if (1 == Voucher.get(Travian.Player.data.playerId).data.hasVouchers[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY]) {
                                a.premiumFeaturePrice = -1
                            } else {
                                var c = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY]
                                  , e = a.lastTrade.data.movement.timeFinish - Travian.ServerTime;
                                a.premiumFeaturePrice = e < 60 * c.minutesMin ? c.priceMin : e < 60 * c.minutesMid ? c.priceMid : c.priceMax
                            }
                            a.premiumFeatureTroopId = b.troopId;
                            a[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY] = function(b) {
                                a.lastTrade = null;
                                a.showInstantDelivery = !1;
                                a.premiumFeatureName = "";
                                a.premiumFeatureTroopId = 0;
                                return {
                                    troopId: b
                                }
                            }
                        }
                    }
                    a.mayCreateRoute = !1;
                    a.routeCode = 0;
                    a.stock = new Resources(r.getResources());
                    for (b = 1; 4 >= b; b++) {
                        a.resourceData[b].value = 0
                    }
                    h()
                }
            }, !0)
        }
    }
    ;
    var v = !1;
    a.openTradeRoutesOverview = function() {
        a.l("editRoute");
        a.openOverlay("tradeRoutesOverview");
        v = !0
    }
    ;
    a.$on("urlChanged", function() {
        if (v) {
            v = !1
        } else {
            var c = parseInt(b.getParam("editRoute"));
            "number" == typeof c && "undefined" != typeof a.tradeRoutes.data[c] ? (m(a.tradeRoutes.data[c]),
            s = c) : 0 <= s && "undefined" != typeof a.tradeRoutes.data[s] && (b.o("editRoute", s),
            v = !0)
        }
    });
    f = a.getParam("destId");
    t = a.getParam("destPlayerId");
    f && (u = {
        villageId: f
    },
    t && (u.playerId = t));
    a.editTradeRoute && (q = a.tradeRouteId);
    e();
    a.$on("activeVillageChanged", e);
    a.$on("$destroy", function() {
        a.merchants.unsubscribe(x);
        a.handleError({})
    });
    a.changeRecurrence = function(b) {
        a.showInstantDelivery = !1;
        a.premiumFeatureName = "";
        a.premiumFeatureTroopId = 0;
        a.recurrences = b
    }
}
;
window.sendMarketplaceCtrl.$inject = ["$scope", "VillageService", "RoutingService", "SessionService", "ServertimeService"];
window.tradeRouteMarketplaceCtrl = function(a, c) {
    function b() {
        f = c.i();
        f.filled && (a.tradeRoutes = TradeRoute.getCollection(f.data.villageId))
    }
    var f = null;
    a.subscribe(Travian.Player, function() {
        a.hasPlusAccount = Travian.Player.hasPlusAccount();
        a.playerSettings = Settings.get(Travian.Player.data.playerId)
    });
    b();
    a.$on("activeVillageChanged", b);
    a.changeRouteStatus = function(b, c) {
        a.tradeRoutes.data[b].data.status != c && Travian.Player.hasPlusAccount() && Travian.writeRequest("trade/changeTradeRouteStatus", {
            id: a.tradeRoutes.data[b].data.id,
            status: c
        })
    }
    ;
    a.editRoute = function(b) {
        Travian.Player.hasPlusAccount() && a.openOverlay("editTradeRoute", {
            tradeRoute: b
        })
    }
    ;
    a.deleteRoute = function(b) {
        Travian.Player.hasPlusAccount() && Travian.writeRequest("trade/deleteTradeRoute", {
            id: a.tradeRoutes.data[b].data.id
        })
    }
    ;
    a.addTradeRoutes = function() {
        Travian.Player.hasPlusAccount() && a.editRoute(-1)
    }
}
;
window.tradeRouteMarketplaceCtrl.$inject = ["$scope", "VillageService"];
window.palaceCapitalCtrl = function(a, c, b) {
    a.isSitter = b.K();
    var f = c.i();
    a.changeCapital = function() {
        Travian.writeRequest("building/makeVillageCapital", {
            villageId: f.data.villageId
        }, function(b) {
            b && a.handleError(b)
        })
    }
}
;
window.palaceCapitalCtrl.$inject = ["$scope", "VillageService", "SessionService"];
window.palaceCtrl = function(a, c, b) {
    function f() {
        m = c.i();
        a.activeVillage = m;
        e = UnitQueue.get(m.data.villageId);
        p = nrToUnitId(Troops.TYPE_SETTLER, m.data.tribeId);
        a.leaderId = nrToUnitId(Troops.TYPE_LEADER, m.data.tribeId);
        l = ExpansionListEntry.getCollection(m.data.villageId);
        "function" == typeof n && n();
        n = a.ja([m, e, l], g);
        null != h && h.destroy();
        h = b.H([m.data.villageId], "all", g, a);
        Travian.request("building/getCpData", {
            villageId: m.data.villageId
        }, function(b) {
            a.expansionSlots = b.expansionSlots;
            a.cpProduction = b.cpProduction;
            b = !0;
            for (var c = 0; c < a.expansionSlots.slots.length; c++) {
                var e = a.expansionSlots.slots[c];
                0 < e.required && b ? (a.expansionSlots.slots[c].showDetails = !0,
                a.expansionSlots.slots[c].percentage = Math.floor(100 * (a.expansionSlots.producedCulturePoints / e.culturePoints)),
                b = !1) : a.expansionSlots.slots[c].showDetails = !1
            }
            a.expansionSlots.numberOfTowns = parseInt(a.expansionSlots.numberOfTowns);
            a.expansionSlots.numberOfVillages = parseInt(a.expansionSlots.numberOfVillages)
        })
    }
    function g() {
        if (null != l && null != h && null != e) {
            e.filled && (a.unitQueue = e.data.buildingTypes[a.building.data.buildingType]);
            for (var b = 0, c = 0, f = h.v(), g = 0; g < f.length; g++) {
                if (f[g].data.villageId == m.data.villageId) {
                    for (var n in f[g].data.units) {
                        n == Troops.TYPE_SETTLER && (b += parseInt(f[g].data.units[n])),
                        n == Troops.TYPE_LEADER && (c += parseInt(f[g].data.units[n]))
                    }
                }
            }
            if ("undefined" != typeof a.unitQueue) {
                for (g = 0; g < a.unitQueue.length; g++) {
                    f = a.unitQueue[g],
                    f.unitType == p && (b += parseInt(f.count)),
                    f.unitType == a.leaderId && (c += parseInt(f.count))
                }
            }
            a.isCapital = !1;
            if (1 == m.data.type || 3 == m.data.type) {
                a.isCapital = !0
            }
            a.usedControlPoint = m.data.usedControlPoints;
            a.availableControlPoints = m.data.availableControlPoints;
            a.isTown = m.data.isTown;
            f = Building.EXPANSION_SLOTS[a.building.data.buildingType];
            n = a.building.data.buildingType;
            for (var s = a.building.data.lvl, x = [], g = 0; g < f; g++) {
                if (g >= l.data.length) {
                    if (x[g] = {
                        slot: g,
                        state: "active",
                        level: Building.EXPANSION_SLOT_UNLOCKS[n][g]
                    },
                    x[g].level > s) {
                        x[g].state = "locked"
                    } else {
                        if (0 < b) {
                            x[g].subState = "icons";
                            x[g].subStateIcons = [];
                            for (var v = 0; 3 > v; v++) {
                                0 < b ? x[g].subStateIcons.push({
                                    className: "available",
                                    tribeId: m.data.tribeId,
                                    unitId: Troops.TYPE_SETTLER
                                }) : x[g].subStateIcons.push({
                                    className: "needed",
                                    tribeId: m.data.tribeId,
                                    unitId: Troops.TYPE_SETTLER
                                }),
                                b--
                            }
                        } else {
                            0 < c ? (x[g].subState = "icons",
                            x[g].subStateIcons = [{
                                className: "available",
                                tribeId: m.data.tribeId,
                                unitId: Troops.TYPE_LEADER
                            }],
                            c--) : x[g].subState = "free"
                        }
                    }
                } else {
                    x[g] = {
                        slot: g,
                        state: "occupied",
                        data: l.data[g].data
                    }
                }
            }
            a.expensionSlots = x;
            a.expensionSlotsUsed = l.data.length;
            a.expensionSlotsAvail = f
        }
    }
    a.currentTab = a.getParam("tab");
    a.tabConfig.tabs = ["Expansions", "CulturePoints", "Acceptance"];
    a.tabConfig.bodyTemplatePrefix = "tpl/building/palace/tabs/";
    a.isResidence = !0;
    a.building.data.buildingType == Building.TYPE.PALACE && (a.isResidence = !1,
    a.tabConfig.tabs = ["Expansions", "CulturePoints", "Acceptance", "Capital"]);
    a.tabConfig.disableScrollingForTabs = ["Expansions", "Acceptance"];
    a.unitsTrainOptions = {
        cols: 2
    };
    a.trainingInProgress = !1;
    a.expansionSlots = {};
    a.cpProduction = {};
    a.isTown = {};
    a.villages = c.W().data;
    a.Math = Math;
    var e = null
      , h = null
      , m = null
      , l = null;
    a.unitQueue = [];
    var p = 0;
    a.leaderId = 0;
    var n = null;
    f();
    a.$on("activeVillageChanged", f)
}
;
window.palaceCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.combatSimulatorCtrl = function(a, c, b, f, g) {
    function e() {
        var a = c.getActiveVillageId();
        v = Research.get(a);
        null !== x && x.destroy();
        s = x.v([a])
    }
    function h(a, b) {
        this.tribeId = a || Player.TRIBE.ROMAN;
        this.inputTroops = {};
        this.unitLevels = {};
        this.villageSettings = {};
        this.heroStrength = Troops.getHeroBaseStrength(this.tribeId);
        this.heroBonus = "0.0";
        this.mounted = !0;
        this.unitBonuses = A[b];
        m(this, b)
    }
    function m(b, e) {
        function f() {
            var a = [{
                name: Travian.translate("CombatSimulator.Equipment.None"),
                itemType: -1
            }], c;
            for (c in Travian.Config.heroItems) {
                Travian.Config.heroItems[c].unitBonus && Travian.Config.heroItems[c].tribeId == b.tribeId && a.push({
                    name: Travian.translate("Hero.Item_" + c),
                    itemType: c
                })
            }
            return a
        }
        var h = [{
            name: Travian.translate("Tribe_1"),
            tribeId: 1
        }, {
            name: Travian.translate("Tribe_2"),
            tribeId: 2
        }, {
            name: Travian.translate("Tribe_3"),
            tribeId: 3
        }];
        "defender" != e && "supporter" != e || h.push({
            name: Travian.translate("Tribe_4"),
            tribeId: 4
        });
        "defender" == e && h.push({
            name: Travian.translate("Tribe_5"),
            tribeId: 5
        });
        h.push({
            name: Travian.Player.data.name,
            tribeId: r
        });
        b.tribeDropdown = {
            selected: b.tribeId,
            selectBy: "option.tribeId",
            options: h,
            orderBy: "tribeId",
            callback: function(h) {
                var g = b;
                -1 == [Troops.MOVEMENT_TYPE_ATTACK, Troops.MOVEMENT_TYPE_RAID, Troops.MOVEMENT_TYPE_SIEGE].indexOf(a.attackType) && (a.attackType = Troops.MOVEMENT_TYPE_RAID);
                g.inputTroops = {};
                g.unitLevels = {};
                g.villageSettings = {};
                "defender" == e && (a.attackerDetails.villageSettings.natarBonus = h == Player.TRIBE.NATAR ? C : null);
                g.heroStrength = Troops.getHeroBaseStrength(h);
                g.heroBonus = "0.0";
                g.mounted = !0;
                g.tribeId = h == r ? Travian.Player.data.tribeId : h;
                g.equipmentDropdown.options = f();
                g.equipmentDropdown.selected = -1;
                delete g.heroItem;
                h == r ? (g != a.defenderDetails[0] && g != a.attackerDetails || !s[0] || (g.inputTroops = angular.copy(s[0].data.units)),
                g.villageSettings.population = Travian.Player.data.population,
                l(g, c.getActiveVillageId(), v)) : p()
            },
            bodyClass: "simulatorDropDown tribeDropDown"
        };
        b.equipmentDropdown = {
            selected: -1,
            selectBy: "option.itemType",
            options: f(),
            orderBy: "itemType",
            callback: function() {
                b.heroItem = Travian.Config.heroItems[b.equipmentDropdown.selected];
                p()
            },
            bodyClass: "simulatorDropDown equipmentDropDown"
        }
    }
    function l(b, c, e) {
        function h(c) {
            b.heroStrength = c.fightStrength * (c.fightStrengthBaseLevel + u.data.fightStrengthPoints) + (u.data.bonuses[HeroItem.BONUS_FIGHT_STRENGTH] || 0);
            b.heroBonus = b == a.attackerDetails ? Math.round(100 * c.attBonus * u.data.attBonusPoints) / 100 : Math.round(100 * c.defBonus * u.data.defBonusPoints) / 100;
            for (c = 0; c < w.data.length; c++) {
                if (w.data[c].data.inSlot == HeroItem.SLOT_RIGHT_HAND) {
                    var e = w.data[c].data.itemType
                      , f = Travian.Config.heroItems[e];
                    f.tribeId == b.tribeId && f.unitBonus && (b.equipmentDropdown.selected = e,
                    b.heroItem = f,
                    p())
                }
                b == a.attackerDetails && (w.data[c].data.inSlot == HeroItem.SLOT_LEFT_HAND && w.data[c].data.bonuses[HeroItem.BONUS_NATARS]) && (C = w.data[c].data.bonuses[HeroItem.BONUS_NATARS],
                a.defenderDetails[0].tribeId == Player.TRIBE.NATAR && (b.villageSettings.natarBonus = C))
            }
        }
        for (var g = 0; g < e.data.units.length; g++) {
            var l = unitIdToNr(e.data.units[g].unitType);
            b.unitLevels[l] = Math.max(0, e.data.units[g].unitLevel)
        }
        $.each({
            mason: Building.TYPE.STONEMASON,
            wall: Building.WALL_TYPES[b.tribeId],
            palace: Building.TYPE.PALACE,
            moat: Building.TYPE.MOAT
        }, function(a, e) {
            var h = f.va(c, e);
            h && (b.villageSettings[a] = h.data.lvl)
        });
        F ? h(F) : Travian.request("hero/getValuePoints", null, function(a) {
            F = a;
            h(F)
        })
    }
    function p() {
        for (var b in A.attacker) {
            delete A.attacker[b]
        }
        if (a.attackerDetails.heroItem && a.attackerDetails.inputTroops[Troops.TYPE_HERO]) {
            var c = a.attackerDetails.heroItem
              , e = 10 * (a.attackerDetails.tribeId - 1) + c.unitBonus;
            A.attacker[e] = {
                bonus: c.bonusStrength,
                unitName: Travian.translate("Troop_" + e)
            }
        }
        for (b in A.defender) {
            delete A.defender[b]
        }
        for (b = 0; b < a.defenderDetails.length; b++) {
            if (a.defenderDetails[b].heroItem && a.defenderDetails[b].inputTroops[Troops.TYPE_HERO]) {
                var c = a.defenderDetails[b].heroItem
                  , e = 10 * (a.defenderDetails[b].tribeId - 1) + c.unitBonus
                  , f = c.bonusStrength;
                A.defender[e] && (f = Math.max(A.defender[e].bonus, c.bonusStrength));
                A.defender[e] = {
                    bonus: f,
                    unitName: Travian.translate("Troop_" + e)
                }
            }
        }
    }
    function n() {
        function b(c, e) {
            return a.extendedMode ? "attacker" == c ? a.attackerDetails.villageSettings[e] || 0 : a.defenderDetails[0].villageSettings[e] || 0 : 0
        }
        for (var c = {
            off: [a.attackerDetails.heroBonus],
            def: [0],
            heroMounted: [a.attackerDetails.mounted ? 1 : 0],
            itemType: [a.attackerDetails.equipmentDropdown.selected],
            str: [a.attackerDetails.heroStrength]
        }, e = [], f = [], h = [], g = 0; g < a.defenderDetails.length; g++) {
            var l = a.defenderDetails[g];
            e.push(l.tribeId);
            f.push(l.inputTroops);
            h.push(l.unitLevels);
            c.off.push(0);
            c.def.push(l.heroBonus);
            c.heroMounted.push(l.mounted ? 1 : 0);
            c.itemType.push(l.equipmentDropdown.selected);
            c.str.push(l.heroStrength)
        }
        g = b("attacker", "target1");
        l = 0;
        g && a.attackerDetails.inputTroops[Troops.TYPE_CATAPULT] >= Troops.SECOND_TARGET_CATAPULTS && (l = b("attacker", "target2"));
        return {
            attackType: a.attackType,
            attackerTribe: a.attackerDetails.tribeId,
            attackerUnits: a.attackerDetails.inputTroops,
            defenderTribe: e,
            defenderUnits: f,
            heroOffBonus: c.off,
            heroDefBonus: c.def,
            heroItemType: c.itemType,
            heroFightStrength: c.str,
            attackerResearch: a.extendedMode ? a.attackerDetails.unitLevels : {},
            defenderResearch: a.extendedMode ? h : {},
            attPopulation: b("attacker", "population"),
            defPopulation: b("defender", "population"),
            catapultTargetLevel: g,
            catapultTargetLevel2: l,
            masonLevel: b("defender", "mason"),
            wallLevel: b("defender", "wall"),
            palaceLevel: b("defender", "palace"),
            moatLevel: b("defender", "moat"),
            natarBonus: b("attacker", "natarBonus"),
            heroMounted: c.heroMounted,
            attInMistyArea: D.att ? 1 : 0,
            defInMistyArea: D.def ? 1 : 0
        }
    }
    function q(b) {
        a.result = b.statistics;
        a.result.losses.amount = {
            attacker: 0,
            defender: 0
        };
        for (var c = {
            attacker: 0,
            defender: 0
        }, e = 0; e < b.modules.length; e++) {
            var f = b.modules[e];
            $.each(["attacker", "defender", "supporter"], function(b, e) {
                if (f.name == "troops/" + e) {
                    for (var h in f.body.lostTroops) {
                        c[e] += f.body.originalTroops[h],
                        a.result.losses.amount[e] += f.body.lostTroops[h]
                    }
                }
            })
        }
        a.result.successType = {
            attacker: 0,
            defender: 0
        };
        $.each(["attacker", "defender"], function(b, e) {
            var f = "WON_WITH_LOSSES";
            0 == a.result.losses.amount[e] ? f = "WON_WITHOUT_LOSSES" : a.result.losses.amount[e] == c[e] && (f = "attacker" == e ? "LOST" : "LOST_WITH_LOSSES");
            a.result.successType[e] = Notifications["REPORT_" + e.toUpperCase() + "_" + f];
            a.result.lossPercent[e] = Math.round(a.result.lossPercent[e]);
            a.result.totalEffective[e] = Math.round(a.result.totalEffective[e])
        });
        for (e = 0; e < b.modules.length; e++) {
            var f = b.modules[e]
              , h = null
              , g = null;
            switch (f.name) {
            case "troops/attacker":
                h = a.attackerDetails;
                g = a.result.lossPercent.attacker;
                break;
            case "troops/defender":
                ;
            case "troops/supporter":
                h = a.defenderDetails[e - 1],
                g = a.result.lossPercent.defender
            }
            if (h) {
                delete h.lostTroops;
                for (var l in f.body.lostTroops) {
                    if (0 < f.body.lostTroops[l]) {
                        h.lostTroops = f.body.lostTroops;
                        break
                    }
                }
                delete h.heroHealthLoss;
                h.inputTroops[Troops.TYPE_HERO] && 0 < g && (h.heroHealthLoss = g,
                h.lostTroops || (h.lostTroops = {}),
                h.lostTroops[Troops.TYPE_HERO] = 1)
            }
            "damage" == f.name && (a.result.buildingDamage || (a.result.buildingDamage = []),
            f.body.buildingType == Building.WALL_TYPES[a.defenderDetails[0].tribeId] && (h = a.defenderDetails[0].tribeId,
            h == Player.TRIBE.NATAR && (f.body.buildingType = Building.TYPE.CITY_WALL),
            f.body.buildingFinalLevel < f.body.buildingOriginalLevel && (a.result.wallDamage = {
                buildingType: Building.WALL_TYPES[h],
                tribeId: h,
                finalLevel: f.body.buildingFinalLevel
            })),
            f.body.buildingType == Building.TYPE.MAIN_BUILDING && (a.result.buildingDamage[0] = f.body.buildingFinalLevel),
            f.body.buildingType == Building.TYPE.ACADEMY && (a.result.buildingDamage[1] = f.body.buildingFinalLevel))
        }
        a.enableApplyLosses = 0 < a.result.losses.amount.attacker + a.result.losses.amount.defender;
        a.enableApplyLosses = a.enableApplyLosses || a.result.buildingDamage
    }
    var r = 9;
    a.Troops = Troops;
    a.Building = Building;
    a.Player = Player;
    a.attackType = Troops.MOVEMENT_TYPE_ATTACK;
    var t = Settings.get(Travian.Player.data.playerId);
    a.extendedMode = t.getSetting("extendedSimulator");
    var u = Hero.get(Travian.Player.data.playerId)
      , w = HeroItem.getCollection("own")
      , s = []
      , x = b.H(null, [Troops.COLLECTION_STATIONARY], e)
      , v = null
      , D = {
        att: !1,
        def: !1
    }
      , C = null;
    a.switchCallback = function(b) {
        a.extendedMode = b
    }
    ;
    e();
    a.$on("activeVillageChanged", e);
    var A = {
        attacker: {},
        defender: {}
    };
    A.supporter = A.defender;
    var F = null;
    a.attackerDetails = new h(Travian.Player.data.tribeId,"attacker");
    a.defenderDetails = [new h(Player.TRIBE.ROMAN,"defender")];
    a.addSupport = function(b) {
        b = new h(b,"supporter");
        a.defenderDetails.push(b);
        return b
    }
    ;
    a.deleteSupport = function(b) {
        a.defenderDetails.splice(b, 1)
    }
    ;
    a.setVillageUnits = function(a, b) {
        a.tribeId == Travian.Player.data.tribeId && (a.inputTroops[b] = s[0].data.units[b])
    }
    ;
    a.toggleInMistyArea = function(a, b) {
        D[b] = a
    }
    ;
    a.applyLosses = function() {
        function b(a) {
            for (var c in a.lostTroops) {
                a.inputTroops[c] && (a.inputTroops[c] = Math.max(0, a.inputTroops[c] - a.lostTroops[c]))
            }
        }
        b(a.attackerDetails);
        for (var c = 0; c < a.defenderDetails.length; c++) {
            b(a.defenderDetails[c])
        }
        a.result.buildingDamage && ("undefined" != typeof a.result.buildingDamage[0] && (a.attackerDetails.villageSettings.target1 = a.result.buildingDamage[0]),
        "undefined" != typeof a.result.buildingDamage[1] && (a.attackerDetails.villageSettings.target1 ? a.attackerDetails.villageSettings.target2 = a.result.buildingDamage[1] : (a.attackerDetails.villageSettings.target1 = a.result.buildingDamage[1],
        a.attackerDetails.villageSettings.target2 = "")));
        a.enableApplyLosses = !1
    }
    ;
    a.simulate = function() {
        delayUntilAnimationFinish(g, function() {
            Travian.request("troops/fightSimulate", n(), q)
        }, "simulate()")
    }
    ;
    a.checkHero = function(a, b) {
        a[Troops.TYPE_HERO] != b[Troops.TYPE_HERO] && p()
    }
    ;
    a.$watch("attackerDetails.inputTroops", function() {
        a.attackerUnitCount = 0;
        for (var b in a.attackerDetails.inputTroops) {
            a.attackerUnitCount += a.attackerDetails.inputTroops[b] || 0
        }
        a.attackerDetails.inputTroops[Troops.TYPE_HERO] && 1 < a.attackerDetails.inputTroops[Troops.TYPE_HERO] && (a.attackerDetails.inputTroops[Troops.TYPE_HERO] = 1)
    }, !0);
    var B = a.getParam("combatSimulatorData", !1, !0);
    if ("undefined" !== typeof B) {
        var E = !1;
        a.subscribe(w, function() {
            if (!E) {
                a.attackType = B.attacker.attackType;
                a.attackerDetails = new h(parseInt(B.attacker.tribeId),"attacker");
                for (var b in B.attacker.troops) {
                    a.attackerDetails.inputTroops[b] = parseInt(B.attacker.troops[b])
                }
                B.attacker.research && (a.attackerDetails.villageSettings.population = Travian.Player.data.population,
                l(a.attackerDetails, B.attacker.villageId, B.attacker.research));
                a.defenderDetails[0] = new h(parseInt(B.defender.tribeId),"defender");
                for (b in B.defender.troops) {
                    a.defenderDetails[0].inputTroops[b] = parseInt(B.defender.troops[b])
                }
                B.defender.wallLevel && (a.defenderDetails[0].villageSettings.wall = B.defender.wallLevel);
                B.defender.research && (a.defenderDetails[0].villageSettings.population = Travian.Player.data.population,
                l(a.defenderDetails[0], B.defender.villageId, B.defender.research));
                if (B.support) {
                    for (b = 0; b < B.support.length; b++) {
                        var c = a.addSupport(parseInt(B.support[b].tribeId)), e;
                        for (e in B.support[b].troops) {
                            c.inputTroops[e] = parseInt(B.support[b].troops[e])
                        }
                        B.support[b].research && l(c, B.support[b].villageId, B.support[b].research)
                    }
                }
                E = !0
            }
        })
    }
    a.$on("$destroy", function() {
        null !== x && x.destroy();
        var b = a.extendedMode ? 1 : 0;
        t.data.extendedSimulator != b && (t.data.extendedSimulator = b,
        t.persist())
    })
}
;
window.combatSimulatorCtrl.$inject = ["$scope", "VillageService", "TroopsService", "BuildingService", "$rootScope"];
window.farmListAddCtrl = function(a, c, b, f) {
    a.player = b.p();
    a.FarmListEntry = FarmListEntry;
    "undefined" != typeof a.w ? (a.w.windowName = "FarmList.ListAddVillage.headline",
    a.villageId = "" + a.getParam("targetId"),
    a.entryId = a.getParam("entryId"),
    a.action = a.getParam("entryAction") || FarmListEntry.ACTION.ADD) : (a.villageId = "" + a.farmListTargetId,
    a.action = FarmListEntry.ACTION.TOGGLE);
    a.village = Village.get(a.villageId);
    var g = FarmList.getCollection();
    a.farmListCollection = [];
    a.farmListEntriesCount = {};
    a.villageInFarmLists = [];
    a.preselected = !0;
    var e = !1
      , h = g.subscribe(function() {
        e || (a.farmListCollection = angular.copy(g.data),
        a.farmListCollection.sort(function(a, b) {
            return b.data.lastChanged - a.data.lastChanged
        }),
        e = !0);
        a.villageInFarmLists = [];
        angular.forEach(g.data, function(b) {
            0 < b.data.villageIds.length && -1 < b.data.villageIds.indexOf(a.villageId) && a.villageInFarmLists.push(b.data.listId);
            a.farmListEntriesCount[b.data.listId] = b.data.entryIds.length
        });
        f(function() {
            a.$broadcast("scrollbarApi", "resetHeight")
        }, 0)
    });
    a.addVillage = function(b) {
        var e = ""
          , h = {
            villageId: a.villageId
        };
        switch (a.action) {
        case FarmListEntry.ACTION.ADD:
            h.listId = b;
            e = "addEntry";
            break;
        case FarmListEntry.ACTION.COPY:
            h.newListId = b;
            h.entryId = a.entryId;
            e = "copyEntry";
            break;
        case FarmListEntry.ACTION.TOGGLE:
            h.listId = b,
            e = "toggleEntry"
        }
        Travian.request("farmList/" + e, h, function(b) {
            "undefined" == typeof b.errors ? (f(function() {
                c.$broadcast("farmListItemToggle", h.villageId)
            }, 5),
            a.error = "",
            a.errorParam = "") : (a.error = "Error." + b.errors[0].message,
            b.errors[0].hasOwnProperty("params") && (a.errorParam = b.errors[0].params),
            delete b.errors,
            "undefined" == typeof a.w && f(function() {
                a.$broadcast("scrollbarApi", "resetHeight")
            }, 0))
        });
        return !1
    }
    ;
    a.removePreselected = function() {
        a.preselected = !1
    }
    ;
    a.$on("farmListPreselect", function() {
        a.preselected = !0
    });
    a.$on("addVillageToFarmList", function() {
        a.preselected && a.addVillage(a.farmListCollection[0].data.listId)
    });
    a.$on("$destroy", function() {
        g.unsubscribe(h)
    })
}
;
window.farmListAddCtrl.$inject = ["$scope", "$rootScope", "SessionService", "$timeout"];
window.farmListAddVillageCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "FarmList.ListAddVillage.headline",
        inWindowPopupContentTemplate: "tpl/building/rallypoint/tabs/partials/FarmListAddVillage.html"
    });
    a.villageSearch = {
        target: null,
        targetPlayer: {}
    };
    a.villageId = 0;
    a.listId = a.getParam("listId");
    a.list = FarmListEntry.getCollection(a.listId);
    a.checkTarget = function() {
        a.villageId = a.villageSearch.getVillageId();
        if (0 != a.villageId || "undefined" != typeof a.villageSearch.result && "" != a.villageSearch.result.villageSearched) {
            a.error = "";
            for (var c = 0; c < a.list.data.length; c++) {
                if (a.list.data[c].data.villageId == a.villageId) {
                    a.error = "Error.VillageAlreadyInFarmList";
                    a.villageId = 0;
                    return
                }
            }
            Travian.request("farmList/checkTarget", {
                villageId: a.villageId
            }, function(b) {
                if ("undefined" == typeof b.errors) {
                    var c = id2xy(b.villageId);
                    a.villageSearch.setData(b.villageName, c.x, c.y);
                    a.villageSearch.target = b;
                    a.villageSearch.targetPlayer = Player.get(b.targetPlayerId)
                } else {
                    a.villageSearch.target = null,
                    a.villageSearch.targetPlayer = null,
                    a.villageId = 0,
                    a.error = "Error." + b.errors[0].message,
                    delete b.errors
                }
            })
        } else {
            a.villageSearch.target = null
        }
    }
    ;
    a.addVillage = function() {
        Travian.request("farmList/addEntry", {
            villageId: a.villageId,
            listId: a.listId
        }, function(c) {
            "undefined" == typeof c.errors ? a.closeOverlay() : (a.error = "FarmList.Error." + c.errors[0].message,
            delete c.errors)
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("listId")
    })
}
;
window.farmListAddVillageCtrl.$inject = ["$scope"];
window.farmListCreationCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "FarmList.ListCreation.headline",
        inWindowPopupContentTemplate: "tpl/building/rallypoint/tabs/partials/FarmListCreation.html"
    });
    a.listNamePlaceholder = Travian.translate("FarmList.ListCreation.listNamePlaceholder");
    a.input = {
        listName: ""
    };
    a.maxLength = Travian.Config.farmListNameMaxLength;
    a.createNewList = function() {
        Travian.request("farmList/createList", {
            name: a.input.listName
        }, function(c) {
            "undefined" == typeof c.errors ? a.closeOverlay() : (a.error = "Error." + c.errors[0].message,
            delete c.errors)
        })
    }
}
;
window.farmListCreationCtrl.$inject = ["$scope"];
window.farmListCtrl = function(a, c, b, f, g, e) {
    function h() {
        a.troopInfo = {};
        for (var b = 0; b < a.troopIds.length; b++) {
            a.troopInfo[a.troopIds[b]] = {
                id: a.troopIds[b],
                needed: 0,
                enoughTroops: !0
            }
        }
        a.enoughTroops = !0;
        a.troopsAmountNeeded = 0;
        a.selectedEntries = [];
        a.amountAttackableVillages = 0;
        if (0 > a.currentListIndex) {
            for (s = [],
            b = 0; b < a.farmListCollection.data.length; b++) {
                for (var c = a.farmListCollection.data[b], e = c.data.underAttack = 0; e < c.data.villageIds.length; e++) {
                    "undefined" != typeof v[c.data.villageIds[e]] && c.data.underAttack++
                }
                if (c.checked) {
                    s.push(c.data.listId);
                    for (e in c.data.units) {
                        a.troopInfo[e] && (a.troopInfo[e].needed += parseInt(c.data.units[e]),
                        l(a.troopInfo[e], e),
                        a.troopsAmountNeeded += a.troopInfo[e].needed)
                    }
                    a.selectedEntries = a.selectedEntries.concat(c.data.entryIds)
                }
            }
        } else {
            for (b = 0; b < a.currentFarmListEntries.data.length; b++) {
                var c = a.currentFarmListEntries.data[b]
                  , f = !1;
                0 < u.data.kingdomId && u.data.kingId == c.data.belongsToKing && (f = !0);
                0 > c.data.belongsToKing && u.data.kingId == c.data.targetOwnerId && (f = !0);
                "undefined" != typeof w[c.data.targetOwnerId] && (f = !0);
                c.data.isAlly = f;
                c.data.isOasis && (f = c.data.coords,
                c.data.villageName = Travian.translate("Oasis") + " (" + f.x + "|" + f.y + ")");
                if (c.checked) {
                    for (e in c.data.units) {
                        a.troopInfo[e] && (a.troopInfo[e].needed += parseInt(c.data.units[e]),
                        l(a.troopInfo[e], e),
                        a.troopsAmountNeeded += a.troopInfo[e].needed)
                    }
                    a.selectedEntries.push(c.data.entryId)
                }
                c.data.underAttack = null;
                "undefined" != typeof v[c.data.villageId] && (c.data.underAttack = v[c.data.villageId])
            }
        }
    }
    function m() {
        for (var a = 0; a < x.data.members.length; a++) {
            var b = x.data.members[a].playerId;
            w[b] = b
        }
        for (a = 0; a < x.data.diplomacy.treaties.length; a++) {
            if (b = x.data.diplomacy.treaties[a],
            b.type == Kingdom.NAP || b.type == Kingdom.BND) {
                for (var b = Kingdom.get(b.otherKingdomId), c = 0; c < b.data.members.length; c++) {
                    var e = b.data.members[c].playerId;
                    w[e] = e
                }
            }
        }
    }
    function l(b, c) {
        b.enoughTroops && 0 < b.needed && ("undefined" == typeof a.homeTroops.data.units[c] || a.homeTroops.data.units[c] < b.needed) && (b.enoughTroops = !1,
        a.enoughTroops = !1)
    }
    function p() {
        0 <= r && a.homeTroops.unsubscribe(r);
        a.homeTroops = c.qc();
        r = a.homeTroops.subscribe(a.adjustTroopsInfo);
        var b = c.i();
        if ("undefined" !== typeof a.currentFarmListEntries) {
            for (var e = 0; e < a.currentFarmListEntries.data.length; e++) {
                var f = Pa(b.data.coordinates, a.currentFarmListEntries.data[e].data.coords);
                a.currentFarmListEntries.data[e].data.distance = f
            }
        }
    }
    function n() {
        var b = D.v(null, null, [Troops.MOVEMENT_TYPE_ATTACK, Troops.MOVEMENT_TYPE_RAID]);
        v = {};
        for (var c = 0; c < b.length; c++) {
            var e = b[c].data.movement.villageIdTarget;
            v[e] ? (v[e].count++,
            v[e].next = Math.min(v[e].next, b[c].data.movement.timeFinish)) : v[e] = {
                count: 1,
                next: b[c].data.movement.timeFinish
            }
        }
        a.adjustTroopsInfo()
    }
    function q() {
        for (var b = 0; b < a.farmListCollection.data.length; b++) {
            a.farmListCollection.data[b].checked = !1
        }
    }
    var r = -1
      , t = -1
      , u = b.p()
      , w = {}
      , s = [];
    if (0 < u.data.kingdomId) {
        var x = Kingdom.get(u.data.KingdomId);
        a.subscribe(x, m)
    }
    a.FarmList = FarmList;
    a.currentListIndex = -1;
    a.selectedEntries = [];
    a.entryAttackInfo = {};
    a.nightPeaceEffect = 0;
    a.nightPeaceStartHour = Travian.Config.nightPeace.startHour;
    a.nightPeaceEndHour = Travian.Config.nightPeace.endHour;
    a.farmListCollection = FarmList.getCollection();
    a.troopIds = [1, 2, 3, 4, 5, 6];
    a.checkAll = {
        checked: !1
    };
    a.customSort = {
        field: ["data.distance", "data.distance"]
    };
    a.reverseSort = !1;
    a.sort = "distance";
    a.sortBy = function(b) {
        "undefined" != typeof b && (a.sort == b ? a.reverseSort = !a.reverseSort : a.sort = b);
        b = "data." + a.sort;
        "lastReport.raidedResSum" == a.sort && (b = ["data." + a.sort, "data.lastReport.time"]);
        a.currentFarmListEntries.data = e("orderBy")(a.currentFarmListEntries.data, b, a.reverseSort)
    }
    ;
    a.farmListLimit = Travian.Config.farmListLimit;
    a.tribeId = u.data.tribeId;
    if (u.data.hasNoobProtection || !u.isOnMap()) {
        a.hasNoobProtection = !0
    }
    var v = {}
      , D = f.H(null, [Troops.COLLECTION_MOVING], n, a);
    a.adjustTroopsInfo = function() {
        a.handleError({});
        h();
        a.attackableTargets = 0;
        a.someTargetInNoobProtection = !1;
        a.nightPeaceEffect = 0;
        a.someTargetOnVacation = !1;
        a.relocationProtection = 0;
        a.someTargetInRelocationProtection = !1;
        a.someTargetWithMaxMovements = !1;
        if (0 < s.length || 0 <= a.currentListIndex) {
            Travian.request("farmList/getAttackInfo", {
                currentVillageId: c.getActiveVillageId(),
                farmlistIds: 0 <= a.currentListIndex ? [a.farmListCollection.data[a.currentListIndex].data.listId] : s
            }, function(b) {
                a.entryAttackInfo = b;
                if (0 > a.currentListIndex) {
                    for (var c in b) {
                        s.indexOf(b[c].listId) && (a.someTargetInNoobProtection = a.someTargetInNoobProtection || 0 < b[c].noobProtection,
                        0 < b[c].nightPeaceStatus && (a.nightPeaceEffect = b[c].nightPeaceStatus),
                        a.someTargetOnVacation = a.someTargetOnVacation || 0 < b[c].vacation,
                        !a.relocationProtection && 1 < b[c].relocation && (a.relocationProtection = b[c].relocation),
                        a.someTargetInRelocationProtection = a.someTargetInRelocationProtection || 1 == b[c].relocation,
                        a.someTargetWithMaxMovements = a.someTargetWithMaxMovements || a.movementCounts[b[c].villageId] >= Travian.Config.movementLimitations.maxPerTarget,
                        0 != b[c].nightPeaceStatus || (b[c].vacation == FarmList.INFO_TARGET_IS_ON_VACATION || b[c].vacation == FarmList.INFO_PLAYER_WILL_BE_ON_VACATION || b[c].relocation || a.movementCounts[b[c].villageId] >= Travian.Config.movementLimitations.maxPerTarget) || a.attackableTargets++)
                    }
                } else {
                    for (c in b) {
                        if (!a.relocationProtection && 1 < b[c].relocation && (a.relocationProtection = b[c].relocation),
                        0 < b[c].noobProtection || 0 < b[c].nightPeaceStatus || b[c].vacation == FarmList.INFO_TARGET_IS_ON_VACATION || b[c].vacation == FarmList.INFO_PLAYER_WILL_BE_ON_VACATION || b[c].relocation || a.movementCounts[b[c].villageId] >= Travian.Config.movementLimitations.maxPerTarget) {
                            if ("undefined" !== typeof a.currentFarmListEntries) {
                                for (var e = 0; e < a.currentFarmListEntries.data.length; e++) {
                                    a.currentFarmListEntries.data[e].data.entryId == c && (a.currentFarmListEntries.data[e].checked = !1)
                                }
                            }
                        } else {
                            a.attackableTargets++
                        }
                    }
                    for (e = a.checkedCount = 0; e < a.currentFarmListEntries.data.length; e++) {
                        a.movementCounts.sum + a.checkedCount >= Travian.Config.movementLimitations.maxTotal && (a.currentFarmListEntries.data[e].checked = !1,
                        a.attackableTargets--),
                        a.currentFarmListEntries.data[e].checked && a.checkedCount++
                    }
                }
                h()
            }),
            a.movementCounts = f.pf()
        }
    }
    ;
    p();
    a.spyId = a.homeTroops.getSpyId();
    a.troopIds.splice(a.spyId - 1, 1);
    a.$on("raidNotification", function(b, c) {
        if (0 <= a.currentListIndex) {
            for (var e = 0; e < a.currentFarmListEntries.data.length; e++) {
                if (a.currentFarmListEntries.data[e].data.villageId == c.targetId) {
                    Cache.B("FarmListEntry:" + a.currentFarmListEntries.data[e].data.id);
                    var f = FarmListEntry.get(a.currentFarmListEntries.data[e].data.id)
                      , h = f.data.distance
                      , g = f.checked
                      , l = f.subscribe(function() {
                        f.data.distance = h;
                        f.checked = g;
                        f.unsubscribe(l)
                    })
                }
            }
        }
    });
    a.$on("$destroy", function() {
        0 <= r && a.homeTroops.unsubscribe(r);
        0 <= t && a.currentFarmListEntries.unsubscribe(t);
        for (var b = 0; b < a.farmListCollection.data.length; b++) {
            a.farmListCollection.data[b].checked = !1
        }
        a.handleError({})
    });
    a.openList = function(b, e, f) {
        if (-1 == e) {
            for (var h = 0; h < a.farmListCollection.data.length; h++) {
                a.farmListCollection.data[h].data.listId == b && (e = h)
            }
        }
        a.currentListIndex = e;
        a.currentFarmListEntries = FarmListEntry.getCollection(b);
        for (h = 0; h < a.currentFarmListEntries.data.length; h++) {
            a.currentFarmListEntries.data[h].checked = !1
        }
        t = a.currentFarmListEntries.subscribe(function() {
            for (var b = c.i(), e = 0; e < a.currentFarmListEntries.data.length; e++) {
                var h = Pa(b.data.coordinates, a.currentFarmListEntries.data[e].data.coords);
                a.currentFarmListEntries.data[e].data.distance = h;
                a.currentFarmListEntries.data[e].checked = a.currentFarmListEntries.data[e].checked || !1;
                f && 0 <= f.indexOf(a.currentFarmListEntries.data[e].data.villageId) && (a.currentFarmListEntries.data[e].checked = !0);
                a.currentFarmListEntries.data[e].data.lastReport || (a.currentFarmListEntries.data[e].data.lastReport = {
                    raidedResSum: 0,
                    time: 0
                })
            }
            a.adjustTroopsInfo();
            a.sortBy()
        })
    }
    ;
    a.startRaid = function() {
        var b = [];
        if (0 > a.currentListIndex) {
            for (var e = 0; e < a.farmListCollection.data.length; e++) {
                a.farmListCollection.data[e].checked && b.push(a.farmListCollection.data[e].data.listId)
            }
            Travian.writeRequest("troops/startFarmListRaid", {
                listIds: b,
                villageId: c.getActiveVillageId()
            }, function(b) {
                "undefined" != typeof b.errors && a.handleError(b, "error")
            })
        } else {
            for (var f = a.farmListCollection.data[a.currentListIndex].data.listId, e = 0; e < a.currentFarmListEntries.data.length; e++) {
                a.currentFarmListEntries.data[e].checked && b.push(a.currentFarmListEntries.data[e].data.entryId)
            }
            Travian.writeRequest("troops/startPartialFarmListRaid", {
                listId: f,
                entryIds: b,
                villageId: c.getActiveVillageId()
            }, function(b) {
                "undefined" != typeof b.errors && a.handleError(b, "error")
            })
        }
    }
    ;
    a.goBackToOverview = function() {
        a.currentListIndex = -1;
        0 <= t && a.currentFarmListEntries.unsubscribe(t);
        q();
        a.adjustTroopsInfo();
        a.handleError({})
    }
    ;
    a.deleteList = function(a) {
        Travian.writeRequest("farmList/deleteList", {
            listId: a
        })
    }
    ;
    a.deleteEntry = function(a) {
        Travian.writeRequest("farmList/deleteEntry", {
            entryId: a
        })
    }
    ;
    a.changeListOrder = function(b, c) {
        0 >= c || c >= a.farmListCollection.data.length || Travian.writeRequest("farmList/changeListOrder", {
            listIds: [b, a.farmListCollection.data[c].data.listId]
        })
    }
    ;
    a.checkAllChange = function() {
        if (a.checkAll.checked) {
            for (var b = 0; b < a.currentFarmListEntries.data.length; b++) {
                var c = a.entryAttackInfo[a.currentFarmListEntries.data[b].data.entryId];
                c && (0 < c.nightPeaceStatus || c.vacation == FarmList.INFO_TARGET_IS_ON_VACATION || c.vacation == FarmList.INFO_PLAYER_WILL_BE_ON_VACATION) || a.movementCounts[a.currentFarmListEntries.data[b].data.villageId] >= Travian.Config.movementLimitations.maxPerTarget || (a.currentFarmListEntries.data[b].checked = !0)
            }
            a.checkAll.checked = !0
        } else {
            for (b = 0; b < a.currentFarmListEntries.data.length; b++) {
                a.currentFarmListEntries.data[b].checked = !1
            }
        }
        a.adjustTroopsInfo(a.currentFarmListEntries)
    }
    ;
    var C = a.getParam("listId", !1, !0);
    a.subscribe(a.farmListCollection, function() {
        for (var b = 0; b < a.farmListCollection.data.length; b++) {
            a.farmListCollection.data[b].checked = a.farmListCollection.data[b].checked || !1
        }
        a.farmListCollection.data.sort(function(a, b) {
            return a.data.orderNr >= b.data.orderNr ? 1 : -1
        });
        n();
        null != C && (b = a.getParam("targets", !1, !0),
        a.openList(C, -1, b),
        C = null)
    });
    a.$on("activeVillageChanged", p);
    q();
    a.FarmListEntry = FarmListEntry;
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_FARM_LISTS);
    var A = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
    a.subscribe(A, function() {
        for (var b = 0; b < A.data.length; b++) {
            if (A.data[b].data.reservationTime) {
                a.pendingRelocation = !0;
                break
            }
        }
    })
}
;
window.farmListCtrl.$inject = "$scope VillageService SessionService TroopsService $timeout $filter".split(" ");
window.farmListEditCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "FarmList.ListEdit.headline",
        inWindowPopupContentTemplate: "tpl/building/rallypoint/tabs/partials/FarmListEdit.html"
    });
    a.listNamePlaceholder = Travian.translate("FarmList.ListCreation.listNamePlaceholder");
    a.input = {
        listName: ""
    };
    a.maxLength = Travian.Config.farmListNameMaxLength;
    a.editList = function() {
        Travian.request("farmList/editList", {
            name: a.input.listName,
            listId: a.getParam("listId")
        }, function(c) {
            "undefined" == typeof c.errors ? a.closeOverlay() : a.handleError(c, "editListError")
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("listId")
    })
}
;
window.farmListEditCtrl.$inject = ["$scope"];
window.farmListEditTroopsCtrl = function(a) {
    function c() {
        e || (!b.filled || g && !g.filled) || (a.troopDetails.tribeId = b.data.tribeId,
        g && (a.troopDetails.inputTroops = angular.copy(g.data.units)),
        h || (a.editTroopsError = "FarmList.Warning.MultipleVillages"),
        e = !0)
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "FarmList.EditTroops.Headline",
        inWindowPopupContentTemplate: "tpl/building/rallypoint/tabs/partials/FarmListEditTroops.html"
    });
    var b = Travian.Player
      , f = a.getParam("listId");
    0 < f && (a.list = FarmList.get(f));
    f = a.getParam("entryIds");
    a.troopDetails = {
        inputTroops: {
            1: 0,
            2: 0,
            3: 0,
            4: 0,
            5: 0,
            6: 0
        }
    };
    var g = null
      , e = !1
      , h = !0;
    if ("string" == typeof f) {
        a.entryIds = f.split(",");
        for (var f = null, m = 0; m < a.entryIds.length; m++) {
            var l = FarmListEntry.get(a.entryIds[m])
              , l = JSON.stringify(l.data.units);
            null == f && (f = l);
            l != f && (h = !1)
        }
        h && (g = FarmListEntry.get(a.entryIds[0]),
        a.subscribe(g, c))
    } else {
        g = FarmListEntry.get(f),
        a.subscribe(g, c),
        a.entryIds = [f]
    }
    a.subscribe(b, c);
    (a.checkInput = function() {
        a.noUnitSelected = !0;
        a.unitInputChanged = !g;
        for (var b in a.troopDetails.inputTroops) {
            a.noUnitSelected && 0 < a.troopDetails.inputTroops[b] && (a.noUnitSelected = !1),
            a.unitInputChanged || parseInt(a.troopDetails.inputTroops[b]) == parseInt(g.data.units[b]) || (a.unitInputChanged = !0)
        }
    }
    )();
    a.$on("$destroy", function() {
        a.l("listId");
        a.l("entryIds")
    });
    a.saveTroops = function() {
        a.editTroopsError = "";
        Travian.request("farmList/editTroops", {
            entryIds: a.entryIds,
            units: a.troopDetails.inputTroops
        }, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : (a.editTroopsError = "Error." + b.errors[0].message,
            delete b.errors)
        });
        a.handleError({})
    }
}
;
window.farmListEditTroopsCtrl.$inject = ["$scope", "SessionService"];
window.rallypointCtrl = function(a) {
    a.tabConfig.tabs = ["Overview", "CombatSimulator", "FarmList"];
    a.tabConfig.bodyTemplatePrefix = "tpl/building/rallypoint/tabs/";
    a.tabConfig.disableScrollingForTabs = ["Overview", "CombatSimulator", "FarmList"]
}
;
window.rallypointCtrl.$inject = ["$scope"];
window.rallypointOverviewCtrl = function(a, c, b) {
    function f(a, b) {
        null == n && (n = Ma(p));
        var c = Ma(b.villageIdLocation)
          , e = Pa(n, Ma(a.villageIdLocation))
          , c = Pa(n, c);
        return e < c ? -1 : e > c ? 1 : 0
    }
    function g(a, b) {
        return a.movement.timeFinish >= b.movement.timeFinish ? a.movement.timeFinish == b.movement.timeFinish && a.movement.orderId < b.movement.orderId ? -1 : 1 : -1
    }
    function e(b, c) {
        return 1 == a.troopsFilter[b].all || 1 == a.troopsFilter[b][c]
    }
    function h() {
        p = c.getActiveVillageId();
        null !== q && q.destroy();
        q = b.H([p], null, l, a)
    }
    function m(a, b) {
        for (var c = {}, e = 1; 5 >= e; e++) {
            c[e] = {
                troopId: -e,
                tribeId: e,
                tribeName: Travian.translate("Tribe_" + e),
                status: b,
                villageIdLocation: p,
                villageId: null,
                troopsGroup: [],
                units: {
                    1: 0,
                    2: 0,
                    3: 0,
                    4: 0,
                    5: 0,
                    6: 0,
                    7: 0,
                    8: 0,
                    9: 0,
                    10: 0,
                    11: 0
                },
                supplyTroops: 0
            }
        }
        for (var f = 0; f < a.length; f++) {
            var h = a[f]
              , e = h.tribeId;
            c[e].troopsGroup.push(h);
            c[e].supplyTroops += h.supplyTroops;
            for (var g in h.units) {
                c[e].units[g] += parseInt(h.units[g], 0)
            }
        }
        r.Local = r.Local || [];
        for (e in c) {
            if (0 != c[e].troopsGroup.length) {
                if (t[b][e]) {
                    1 == c[e].troopsGroup.length ? r.Local.push(c[e].troopsGroup[0]) : r.Local.push(c[e])
                } else {
                    for (f = 0; f < c[e].troopsGroup.length; f++) {
                        r.Local.push(c[e].troopsGroup[f])
                    }
                }
            }
        }
    }
    function l() {
        var b = q.v();
        a.hasSupportingTroops = !1;
        a.troopsOverview.troopsCount = {
            Local: 0,
            Deployed: 0,
            Incoming: 0,
            Outgoing: 0
        };
        r = {
            Local: [],
            Deployed: [],
            Incoming: [],
            Outgoing: []
        };
        for (var c = {}, h = [], l = [], n = null, t = null, C = 0; C < b.length; C++) {
            var A = b[C].data;
            if ("undefined" == typeof c[A.troopId]) {
                c[A.troopId] = A;
                A.villageIdLocation == p && (A.status == Troops.STATUS_HOME ? (n = A,
                a.troopsOverview.troopsCount.Local++) : A.tribeId == Player.TRIBE.NATURE && A.status == Troops.STATUS_SUPPORT ? (t = A,
                a.troopsOverview.troopsCount.Local++) : A.playerId == Travian.Player.data.playerId && A.status == Troops.STATUS_SUPPORT ? (h.push(A),
                a.troopsOverview.troopsCount.Local++) : A.playerId != Travian.Player.data.playerId && A.tribeId != Player.TRIBE.NATURE && A.status == Troops.STATUS_SUPPORT ? (h.push(A),
                a.troopsOverview.troopsCount.Local++,
                a.hasSupportingTroops = !0) : A.status == Troops.STATUS_TRAP && (l.push(A),
                a.troopsOverview.troopsCount.Local++));
                A.villageId == p && (A.villageIdLocation != p && A.status != Troops.STATUS_TRANSIT) && (r.Deployed.push(A),
                a.troopsOverview.troopsCount.Deployed++);
                if (A.villageId == p && A.villageIdLocation != p && A.status == Troops.STATUS_TRANSIT) {
                    switch (parseInt(A.movement.movementType, 0)) {
                    case Troops.MOVEMENT_TYPE_ATTACK:
                        ;
                    case Troops.MOVEMENT_TYPE_SIEGE:
                        e("Outgoing", "attack") && r.Outgoing.push(A);
                        a.troopsOverview.troopsCount.Outgoing++;
                        break;
                    case Troops.MOVEMENT_TYPE_RAID:
                        e("Outgoing", "raid") && r.Outgoing.push(A);
                        a.troopsOverview.troopsCount.Outgoing++;
                        break;
                    case Troops.MOVEMENT_TYPE_SPY:
                        e("Outgoing", "spy") && r.Outgoing.push(A);
                        a.troopsOverview.troopsCount.Outgoing++;
                        break;
                    case Troops.MOVEMENT_TYPE_SUPPORT:
                        e("Outgoing", "support") && r.Outgoing.push(A);
                        a.troopsOverview.troopsCount.Outgoing++;
                        break;
                    case Troops.MOVEMENT_TYPE_ADVENTURE:
                        e("Outgoing", "adventure") && r.Outgoing.push(A);
                        a.troopsOverview.troopsCount.Outgoing++;
                        break;
                    case Troops.MOVEMENT_TYPE_TRANSPORT:
                        e("Outgoing", "trade") && r.Outgoing.push(A);
                        a.troopsOverview.troopsCount.Outgoing++;
                        break;
                    case Troops.MOVEMENT_TYPE_SETTLE:
                        e("Outgoing", "settle") && r.Outgoing.push(A),
                        a.troopsOverview.troopsCount.Outgoing++
                    }
                    A.movement.playerIdTarget == Player.ID.ROBBER ? A.playerIdLocation = A.movement.playerIdTarget : A.movement.playerIdTarget == Player.ID.GOVERNOR_NPC && (A.playerIdLocation = A.movement.playerIdTarget,
                    A.villageNameLocation = Travian.translate("NPCGovernorVillage"))
                }
                if (A.status == Troops.STATUS_TRANSIT) {
                    if (A.villageIdLocation == p) {
                        switch (parseInt(A.movement.movementType, 0)) {
                        case Troops.MOVEMENT_TYPE_ATTACK:
                            ;
                        case Troops.MOVEMENT_TYPE_SIEGE:
                            e("Incoming", "attack") && r.Incoming.push(A);
                            a.troopsOverview.troopsCount.Incoming++;
                            break;
                        case Troops.MOVEMENT_TYPE_RAID:
                            e("Incoming", "raid") && r.Incoming.push(A);
                            a.troopsOverview.troopsCount.Incoming++;
                            break;
                        case Troops.MOVEMENT_TYPE_SUPPORT:
                            ;
                        case Troops.MOVEMENT_TYPE_RETURN:
                            e("Incoming", "support") && r.Incoming.push(A);
                            a.troopsOverview.troopsCount.Incoming++;
                            break;
                        case Troops.MOVEMENT_TYPE_REGENERATION:
                            e("Incoming", "healing") && r.Incoming.push(A);
                            a.troopsOverview.troopsCount.Incoming++;
                            break;
                        case Troops.MOVEMENT_TYPE_WOUNDED:
                            e("Incoming", "wounded") && r.Incoming.push(A);
                            a.troopsOverview.troopsCount.Incoming++;
                            break;
                        case Troops.MOVEMENT_TYPE_TRANSPORT:
                            ;
                        case Troops.MOVEMENT_TYPE_TRANSPORT_RETURN:
                            ;
                        case Troops.MOVEMENT_TYPE_RETURN_ADVENTURE:
                            e("Incoming", "trade") && r.Incoming.push(A);
                            a.troopsOverview.troopsCount.Incoming++;
                            break;
                        case Troops.MOVEMENT_TYPE_TREASURE_RESOURCES:
                            e("Incoming", "trade") && r.Incoming.push(A),
                            a.troopsOverview.troopsCount.Incoming++
                        }
                    } else {
                        A.villageId == p && A.villageIdLocation != p && (parseInt(A.movement.movementType, 0) == Troops.MOVEMENT_TYPE_RETURN_ADVENTURE ? (e("Incoming", "support") && r.Incoming.push(A),
                        a.troopsOverview.troopsCount.Incoming++) : parseInt(A.movement.movementType, 0) == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT && (e("Incoming", "tribute") && r.Incoming.push(A),
                        a.troopsOverview.troopsCount.Incoming++))
                    }
                }
            }
        }
        r.Local = [];
        null !== n && r.Local.push(n);
        m(h, Troops.STATUS_SUPPORT);
        m(l, Troops.STATUS_TRAP);
        null !== t && r.Local.push(t);
        r.Incoming.sort(g);
        r.Outgoing.sort(g);
        r.Deployed.sort(f);
        a.displayCurrentPage(a.currentPage)
    }
    var p = null
      , n = null
      , q = null
      , r = {
        Local: [],
        Deployed: [],
        Incoming: [],
        Outgoing: []
    };
    a.rallypointOverviewTabConfig = {};
    a.rallypointOverviewTabConfig.tabs = ["Local", "Deployed", "Incoming", "Outgoing"];
    a.rallypointOverviewTabConfig.disableScrolling = !0;
    a.rallypointOverviewTabConfig.bodyTemplatePrefix = "tpl/building/rallypoint/tabs/partials/";
    a.rallypointOverviewTabConfig.routeNamedParam = "subtab";
    a.rallypointOverviewTabConfig.tabName = "subtab";
    a.rallypointOverviewTabConfig.tabType = "subtab";
    a.troopsOverview = {
        displayTroops: {
            Local: [],
            Deployed: [],
            Incoming: [],
            Outgoing: []
        },
        troopsCount: {
            Local: 0,
            Deployed: 0,
            Incoming: 0,
            Outgoing: 0
        }
    };
    a.troopsFilter = {
        Local: {
            all: 1
        },
        Deployed: {
            all: 1
        },
        Incoming: {
            all: 1,
            attack: 0,
            raid: 0,
            support: 0,
            attackOasis: 0,
            supportOasis: 0,
            trade: 0,
            tribute: 0,
            healing: 0,
            wounded: 0
        },
        Outgoing: {
            all: 1,
            attack: 0,
            raid: 0,
            spy: 0,
            support: 0,
            adventure: 0,
            settle: 0,
            trade: 0
        }
    };
    a.itemsPerPage = 10;
    a.numberOfItems = 0;
    a.currentPage = 1;
    a.hasSupportingTroops = !1;
    a.$watch("w.maxWindowHeight", function() {
        a.w && a.w.maxWindowHeight && (a.itemsPerPage = Math.max(3, Math.ceil((Number(a.w.maxWindowHeight) - 400) / 120)),
        a.displayCurrentPage(a.currentPage))
    });
    a.displayCurrentPage = function(b) {
        b = b || 1;
        var c = a.tabData.currentTab;
        r[c] && (a.troopsOverview.displayTroops[c] = r[c].slice((b - 1) * a.itemsPerPage, b * a.itemsPerPage),
        a.numberOfItems = r[c].length)
    }
    ;
    a.$on("tabChanged", function() {
        a.currentPage = 1;
        a.displayCurrentPage(a.currentPage)
    });
    h();
    a.$on("activeVillageChanged", h);
    var t = {
        support: {
            1: !0,
            2: !0,
            3: !0
        },
        trap: {
            1: !0,
            2: !0,
            3: !0
        }
    };
    a.expandGroup = function(a, b) {
        "homeTrap" == a && (a = "trap");
        t[a][b] = !1;
        l()
    }
    ;
    a.sendTroops = function(b, c) {
        var e = [b.troopId];
        "undefined" != typeof b.groupTroopIds && (e = [b.groupTroopIds]);
        for (var f = 0; f < e.length; f++) {
            if ("Disband" == c) {
                Travian.writeRequest("troops/disband", {
                    troopId: e[f]
                })
            } else {
                if ("Release" == c) {
                    Travian.writeRequest("troops/release", {
                        troopId: e[f]
                    })
                } else {
                    var h = {
                        troopId: e[f],
                        moveHomeType: c
                    };
                    if ("Call" == c || "Send" == c) {
                        h.sendTroopsCallback = function() {
                            a.openWindow("building", {
                                location: a.locationId,
                                tab: a.$parent.tabData.currentTab,
                                subtab: a.tabData.currentTab
                            }, {})
                        }
                    }
                    a.openWindow("sendTroops", {}, h)
                }
            }
        }
    }
    ;
    a.abortTroopMovement = function(a) {
        Travian.writeRequest("troops/abortTroopMovement", {
            troopId: a
        })
    }
    ;
    a.filterTroops = function(b, c) {
        if ("all" != b && "undefined" !== typeof a.troopsFilter[c] && "undefined" !== typeof a.troopsFilter[c][b]) {
            if (1 == a.troopsFilter[c][b]) {
                a.troopsFilter[c][b] = 0;
                var e = 1, f;
                for (f in a.troopsFilter[c]) {
                    1 == a.troopsFilter[c][f] && (e = 0)
                }
                a.troopsFilter[c].all = e
            } else {
                a.troopsFilter[c][b] = 1,
                a.troopsFilter[c].all = 0
            }
            a.currentPage = 1;
            l()
        }
    }
}
;
window.rallypointOverviewCtrl.$inject = ["$scope", "VillageService", "TroopsService", "$timeout"];
window.sendBackAllConfirmCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "RallyPoint.ConfirmSendBackAll.Title",
        inWindowPopupContentTemplate: "tpl/building/rallypoint/tabs/partials/sendBackAllConfirm.html"
    });
    a.confirm = function() {
        Travian.writeRequest("troops/sendBackAll", {
            villageId: c.getActiveVillageId()
        }, function() {
            a.closeOverlay()
        })
    }
}
;
window.sendBackAllConfirmCtrl.$inject = ["$scope", "VillageService"];
window.resourceBuildingCtrl = function(a, c, b) {
    function f(a, b) {
        var c = "";
        1 == a && (c = Travian.translate("Building_" + b));
        2 == a && (c = Travian.translate("Oasis"));
        3 == a && (c = Travian.translate("ProductionOverview.HeroProduction"));
        return c
    }
    function g() {
        Travian.request("village/getProductionDetails", {
            villageId: b.i().data.villageId
        }, function(b) {
            var c = a.building.data
              , g = []
              , l = c.currentEffect.values[0];
            g.push({
                label: Travian.translate("ProductionOverview.ResourceField"),
                data: l,
                color: "#7ad900"
            });
            for (var p = b.production[c.buildingType].bonusFactors, n = 0; n < p.length; n++) {
                var q = f(p[n].category, p[n].type);
                g.push({
                    label: q,
                    data: Math.round(l * p[n].value),
                    color: "#4e9700"
                })
            }
            b = b.production[c.buildingType].globalBonus;
            c = l;
            for (n = 0; n < b.length; n++) {
                l = 1 < b[n].value ? l * b[n].value : l * (1 + b[n].value),
                q = f(b[n].category, b[n].type),
                g.push({
                    label: q,
                    data: l - c,
                    color: "#4e9700"
                }),
                c = l
            }
            for (n = 0; n < g.length; n++) {
                l = 1 / g.length * n;
                q = "#";
                b = ["4e9700"];
                for (c = 0; 3 > c; c++) {
                    col2 = 1 < b.length ? parseInt(b[c]) : parseInt("4e9700".substr(2 * c, 2), 16),
                    p = parseInt("#baf900".substr(2 * c + 1, 2), 16),
                    p = Math.round(p + (col2 - p) * l).toString(16),
                    2 > p.length && (p = "0" + p),
                    q += p
                }
                g[n].color = q
            }
            a.pieData = g
        })
    }
    g();
    a.$on("activeVillageChanged", g)
}
;
window.resourceBuildingCtrl.$inject = ["$scope", "BuildingService", "VillageService"];
window.trainTroopsCtrl = function(a) {
    a.tabConfig.disableScrollingForTabs = ["main"]
}
;
window.trainTroopsCtrl.$inject = ["$scope", "$timeout"];
window.trapperCtrl = function(a, c, b) {
    function f() {
        var c = UnitQueue.get(p.data.villageId);
        a.subscribe(c, function() {
            l = c.data.buildingTypes[a.building.data.buildingType];
            a.traps && ("undefined" !== typeof l ? (a.traps.queue = l[0],
            a.traps.maxAvailable = h()) : a.traps.queue = 0)
        });
        b.H([p.data.villageId], [Troops.COLLECTION_TRAPPED], g, a)
    }
    function g() {
        Travian.request("building/getTrapperInfos", {
            villageId: p.data.villageId,
            locationId: a.locationId
        }, e)
    }
    function e(b) {
        if ("undefined" != typeof b.unit) {
            a.traps = {
                total: parseInt(b.total),
                queueTotal: b.queue,
                used: parseInt(b.used),
                maxByBuildingLevel: b.max,
                amount: 0,
                costs: b.unit.costs,
                crop: b.unit.crop,
                time: b.unit.time,
                unitType: Troops.TYPE_TRAPS
            };
            l = UnitQueue.get(p.data.villageId).data.buildingTypes[a.building.data.buildingType];
            a.traps.queue = a.traps && "undefined" !== typeof l ? l[0] : 0;
            a.traps.maxAvailable = h();
            if ("undefined" != typeof a.unitQueue) {
                for (var c = b = 0; c < a.unitQueue.length; c++) {
                    b += Number(a.unitQueue[c].unitsLeft)
                }
                isNaN(b) || (a.traps.total = Number(a.traps.total) + (Number(a.traps.queue) - b))
            }
            a.activeItem = a.traps
        }
    }
    function h() {
        if ("undefined" == typeof a.traps.total) {
            return 0
        }
        var b = a.traps.maxByBuildingLevel - a.traps.total - a.traps.queueTotal
          , b = Math.max(b, 0);
        $.each(a.traps.costs, function(a, c) {
            if (0 < c) {
                var e = Math.floor(n[a] / c);
                e < b && (b = e)
            }
        });
        return Math.floor(0 > b ? 0 : b)
    }
    function m(a, b) {
        a *= b;
        return isNaN(a) ? 0 : a
    }
    a.tabConfig.disableScrollingForTabs = ["main"];
    var l = {};
    a.traps = {};
    a.activeItem = {};
    var p = c.i();
    f();
    var n = p.getResources();
    a.$on("resourcesChanged", function() {
        "undefined" != typeof a.traps && (n = p.getResources(),
        a.computeAvailableResources())
    });
    a.computeAvailableResources = function() {
        "undefined" != typeof a.traps && ((new Resources(a.traps.costs)).multiply(a.traps.value),
        a.traps.maxAvailable = h())
    }
    ;
    var q = a.building;
    a.$watch("building", function(b) {
        q !== b && (q = b,
        p = c.i(),
        f(),
        n = p.getResources(),
        a.computeAvailableResources())
    });
    var r = UnitQueue.get(p.data.villageId);
    a.subscribe(r, function() {
        a.unitQueue = r.data.buildingTypes[a.building.data.buildingType];
        Travian.request("building/getTrapperInfos", {
            villageId: p.data.villageId,
            locationId: a.locationId
        }, e)
    });
    a.startTraining = function() {
        Travian.writeRequest("building/buildTraps", {
            villageId: p.data.villageId,
            locationId: a.building.data.locationId,
            amount: a.traps.value
        }, e)
    }
    ;
    a.sliderChanged = function(b) {
        if ("undefined" !== typeof a.traps && (a.traps.value = b || 0,
        "undefined" !== typeof a.activeItem)) {
            a.traps.allTime = m(a.activeItem.value, a.activeItem.time);
            b = a.activeItem.value;
            var c = a.activeItem.costs, e = {}, f;
            for (f in c) {
                e[f] = m(b, c[f])
            }
            a.traps.allCosts = e
        }
    }
}
;
window.trapperCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.treasuryCtrl = function(a, c, b, f) {
    function g() {
        l = c.i();
        var b = !1;
        0 <= n && l.unsubscribe(n);
        n = l.subscribe(function() {
            if (b) {
                return !1
            }
            b = !0;
            a.treasures = l.data.treasures;
            a.treasuresUsable = l.data.treasuresUsable;
            a.treasureResourceBonus = {
                4: l.data.treasureResourceBonus
            };
            a.homeProductionPerDay = -1;
            a.king = h.isKing();
            a.isInKingdom = 0 < h.data.kingdomId;
            a.treasuryFilledPerc = Math.min(100, 100 * (a.treasures / l.data.treasuresUsable));
            Travian.request("village/getVictoryPointsAndInfluenceBonus", {
                villageId: l.data.villageId
            }, function(c) {
                a.homeProductionPerDay = c.homeProductionPerDay;
                a.currentTerritoryBonusBoundary = c.currentTerritoryBonusBoundary;
                m = c.currentTerritoryBonusFactor;
                a.currentLevelPercent = 0;
                a.territoryBonusLevel = -1;
                a.influenceLevels = angular.copy(Travian.Config.KingdomConfig.treasureInfluenceBonuses);
                a.treasuryLevelSum = 0;
                var e = f.aa(l.data.villageId);
                for (c = 0; c < e.data.length; c++) {
                    e.data[c].data.buildingType == Building.TYPE.TREASURY && (a.treasuryLevelSum += e.data[c].data.lvl)
                }
                for (var e = c = 0, h = !1; c < a.influenceLevels.length; c++) {
                    if (!h) {
                        var g = a.influenceLevels[c].treasures;
                        a.treasures < g && (a.currentLevelPercent = 100 * ((a.treasures - e) / (g - e)),
                        a.territoryBonusLevel = Math.min(c, a.treasuryLevelSum),
                        h = !0);
                        e = g
                    }
                    a.influenceLevels[c].factor = Math.round(100 * (a.influenceLevels[c].factor - 1))
                }
                -1 == a.territoryBonusLevel && (a.territoryBonusLevel = a.influenceLevels.length,
                a.currentLevelPercent = 100);
                a.currentTerritoryBonus = Math.round(100 * (m - 1));
                b = !1
            });
            e()
        })
    }
    function e() {
        Travian.request("building/getTreasuryTransformations", {}, function(b) {
            p = {};
            for (var c = 0; c < b.length; c++) {
                p[b[c].villageId] = b[c].finished
            }
            a.transformationFinished = 0;
            p[l.data.villageId] && (a.transformationFinished = parseInt(p[l.data.villageId]))
        })
    }
    var h = b.p(), m, l;
    a.tabConfig.tabs = ["Treasures"];
    a.tabConfig.bodyTemplatePrefix = "tpl/building/treasury/tabs/";
    a.tabConfig.routeNamedParam = "tabTreasury";
    var p = {}
      , n = -1;
    a.multipleTreasuries = "Normal";
    1 < f.vd(Building.TYPE.TREASURY) && (a.multipleTreasuries = "MultipleTreasuries");
    a.transformToHiddenTreasury = function() {
        a.openOverlay("deactivateTreasury")
    }
    ;
    g();
    a.$on("activeVillageChanged", g);
    a.$on("transformTreasury", e);
    a.$on("$destroy", function() {
        0 <= n && l.unsubscribe(n)
    })
}
;
window.treasuryCtrl.$inject = ["$scope", "VillageService", "SessionService", "BuildingService"];
window.celebrationsStartCtrl = function(a, c, b, f, g, e) {
    function h(b) {
        var c = a.building.data.lvl;
        if (a.building.data.buildingType == Building.TYPE.TOWN_HALL) {
            if (b.type == Travian.Config.celebrationConfig.celebrationTypeSmall && 1 <= c) {
                return !1
            }
            if (b.type == Travian.Config.celebrationConfig.celebrationTypeBig) {
                return c < Travian.Config.celebrationConfig.firstLevelOfTownHallForBigCelebration ? "level" : Travian.Player.data.villages.length < Travian.Config.celebrationConfig.villageCountForBigCelebration ? "villages" : !1
            }
        } else {
            if (a.building.isBreweryOrTeaHouse() && b.type == Travian.Config.celebrationConfig.celebrationTypeBrewery) {
                return !1
            }
        }
        return !0
    }
    function m() {
        e.S("type" + w, function(b) {
            if (null != b) {
                var c = {
                    villageId: r.data.villageId,
                    locationId: a.locationId
                };
                a.subscribe(a.building, function() {
                    0 < a.building.data.lvl && Travian.request("building/getCelebrationList", c, p)
                });
                a.celebrationsOptions = {
                    cols: a.building.isBreweryOrTeaHouse() ? 1 : 2
                };
                q()
            } else {
                a.closeWindow("building")
            }
        })
    }
    function l() {
        r = c.i();
        t = CelebrationQueue.get(r.data.villageId);
        a.subscribe(r, q);
        a.subscribe(t, q);
        m();
        q();
        var b = MapDetails.get(r.data.villageId);
        a.wwZone = b.data.wwZone
    }
    function p(b) {
        var c = [], e;
        for (e in b) {
            b[e].disabled = h(b[e]),
            b[e].type == Travian.Config.celebrationConfig.celebrationTypeBig && (b[e].requiredBuildings = [{
                buildingType: Building.TYPE.TOWN_HALL,
                currentLevel: a.w.building.data.lvl,
                requiredLevel: Travian.Config.celebrationConfig.firstLevelOfTownHallForBigCelebration,
                valid: a.w.building.data.lvl >= Travian.Config.celebrationConfig.firstLevelOfTownHallForBigCelebration
            }],
            b[e].otherRequirements = [{
                langKey: "TownHall.Celebration.VillageRequirement",
                currentValue: Travian.Player.data.villages.length,
                requiredValue: Travian.Config.celebrationConfig.villageCountForBigCelebration,
                valid: Travian.Player.data.villages.length >= Travian.Config.celebrationConfig.villageCountForBigCelebration
            }]),
            b[e].type == Travian.Config.celebrationConfig.celebrationTypeBrewery && (b[e].isTeaHouse = !1,
            a.w.building.isTeaHouse() && (b[e].isTeaHouse = !0)),
            c.push(b[e])
        }
        a.celebrations = c;
        q()
    }
    function n(b) {
        for (var c = 0; c < a.celebrations.length; c++) {
            var e = a.celebrations[c];
            if (e.type == b) {
                return e
            }
        }
    }
    function q() {
        a.celebrationQueueFull = !1;
        if ("undefined" !== typeof a.celebrations) {
            for (var b = 0; b < a.celebrations.length; b++) {
                a.celebrations[b].queue = {
                    count: 0,
                    timeFinishedNext: 0,
                    timeFinishedLast: 0,
                    durationPerItem: 0
                }
            }
            b = [];
            if (a.building.data.buildingType == Building.TYPE.TOWN_HALL) {
                b = t.getQueue(a.building.data.buildingType);
                a.totalCelebrationCount = 0;
                a.currentCulturePointReward = 0;
                a.queuedCelebrationType = 0;
                if ("undefined" !== typeof b) {
                    for (var c = 0; c < b.length; c++) {
                        for (var e = b[c].type, h = b[c], g = 0; g < a.celebrations.length; g++) {
                            a.celebrations[g].type == e && (a.celebrations[g].queue.count++,
                            1 === a.celebrations[g].queue.count && (a.celebrations[g].queue.timeFinishedFirst = h.endTime),
                            a.celebrations[g].queue.timeFinishedLast = h.endTime)
                        }
                        a.totalCelebrationCount++;
                        b[c].endTime == r.data.celebrationEnd ? a.currentCulturePointReward = b[c].culturePoints : a.queuedCelebrationType = b[c].type
                    }
                }
                a.celebrationQueueFull = a.totalCelebrationCount >= n(Travian.Config.celebrationConfig.celebrationTypeSmall).maxCount;
                a.currentCelebrationEnd = r.data.celebrationEnd
            }
            a.building.isBreweryOrTeaHouse() && u.data.brewCelebration > f.R() && (b = n(Travian.Config.celebrationConfig.celebrationTypeBrewery),
            b.queue = {
                count: 1,
                timeFinishedNext: u.data.brewCelebration,
                timeFinishedLast: u.data.brewCelebration,
                timeFinishedFirst: u.data.brewCelebration,
                durationPerItem: b.duration
            },
            a.celebrationQueueFull = b.queue.count >= b.maxCount)
        }
    }
    a.tabConfig.disableScrollingForTabs = ["main"];
    a.plusAccount = Travian.Player.hasPlusAccount();
    a.celebrationCfg = Travian.Config.celebrationConfig;
    a.buildingTypes = Building.TYPE;
    a.totalCelebrationCount = 0;
    var r, t, u = g.p(), w = a.building.data.buildingType;
    l();
    a.ongoingCelebration = !1;
    a.$on("activeVillageChanged", l);
    a.startCelebration = function(a) {
        Travian.writeRequest("building/startCelebration", {
            villageId: r.data.villageId,
            type: a.type
        })
    }
}
;
window.celebrationsStartCtrl.$inject = "$scope VillageService $filter ServertimeService SessionService BuildingService".split(" ");
window.unitsResearchCtrl = function(a, c) {
    function b() {
        e = c.i();
        h = e.data.villageId;
        Village.isWWVillage(e.data.type) && (a.isWorldWonder = !0);
        a.unitsResearch = Research.get(h);
        a.unitsInResearch = UnitResearchQueue.get(h);
        var b = BuildingQueue.get(h);
        a.subscribe(b, f);
        a.subscribe(a.unitsResearch, g);
        a.subscribe(a.unitsInResearch, g)
    }
    function f() {
        Cache.B(a.unitsResearch);
        Cache.B(a.unitsInResearch);
        a.unitsResearch = Research.get(h);
        a.unitsInResearch = UnitResearchQueue.get(h)
    }
    function g() {
        if ("undefined" != typeof a.unitsResearch.data.units) {
            a.units = a.unitsResearch.data.units.filter(a.filterUnitAvailable);
            for (var b = a.unitsInResearch.data.buildingTypes[a.building.data.buildingType], c = 0; c < a.units.length; c++) {
                a.units[c].troopInfo = getUnitTribeAndUnitNumber(a.units[c].unitType),
                a.units[c].canUpgrade || (a.units[c].disabledIcon = "lock",
                a.units[c].maxLevel == a.units[c].unitLevel && (a.units[c].disabledIcon = "star")),
                delete a.units[c].queue
            }
            if ("undefined" == typeof b) {
                a.researchesInProgress = 0
            } else {
                a.researchesInProgress = b.length;
                for (var e = 0; e < b.length; e++) {
                    for (var f = b[e].unitType, c = 0; c < a.units.length; c++) {
                        var h = a.units[c];
                        h.unitType == f && ("undefined" == typeof h.queue && (h.queue = []),
                        h.queue.push(b[e]))
                    }
                }
            }
        }
    }
    var e, h;
    a.buildingTypes = Building.TYPE;
    a.FinishNowFeatureName = PremiumFeature.FEATURE_NAME_FINISH_NOW;
    a.isWorldWonder = !1;
    a.research = function(b) {
        Travian.writeRequest("building/researchUnit", {
            villageId: h,
            locationId: a.building.data.locationId,
            buildingType: a.building.data.buildingType,
            unitType: b.unitType
        })
    }
    ;
    a.produceFirst = function(b) {
        if (!b.queue) {
            return !1
        }
        Travian.writeRequest("building/produceFirst", {
            villageId: e.data.villageId,
            locationId: a.building.data.locationId,
            buildingType: a.building.data.buildingType,
            unitsType: b.unitType
        })
    }
    ;
    a.filterUnitAvailable = function(b) {
        var c = a.building.data.buildingType;
        b.troopData = Travian.Config.troopConfig[b.unitType];
        if (c == Building.TYPE.ACADEMY) {
            if (-2 == b.unitLevel) {
                return !0
            }
        } else {
            if (c == Building.TYPE.BLACKSMITH && -2 != b.unitLevel && 0 != b.maxLevel) {
                return !0
            }
        }
        return !1
    }
    ;
    a.enoughResources = function(a) {
        if ("undefined" !== typeof e && "undefined" !== typeof a) {
            var b = e.getResources(), c;
            for (c in a.costs) {
                if (0 < a.costs[c] && b[c] < a.costs[c]) {
                    return !1
                }
            }
            return !0
        }
        return !1
    }
    ;
    b();
    a.$on("activeVillageChanged", b);
    a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
        return {
            villageId: e.data.villageId,
            buildingType: a,
            delayForNextRequest: 2E3
        }
    }
}
;
window.unitsResearchCtrl.$inject = ["$scope", "VillageService"];
window.unitsTrainCtrl = function(a, c, b, f) {
    function g() {
        p = c.i();
        n = nrToUnitId(Troops.TYPE_SETTLER, p.data.tribeId);
        q = nrToUnitId(Troops.TYPE_LEADER, p.data.tribeId)
    }
    function e() {
        for (var b = 0; b < a.units.length; b++) {
            delete a.units[b].queue
        }
        for (var c in r) {
            for (var e = r[c], b = 0; b < a.units.length; b++) {
                var f = a.units[b];
                if (f.unitType == e.unitType) {
                    f.queue = e;
                    f.queue.key = c;
                    a.units.splice(b, 1);
                    a.units.splice(c, 0, f);
                    break
                }
            }
        }
        if (a.building.data.buildingType == Building.TYPE.HEALING_TENT) {
            var h = {};
            Troops.getCollection(Troops.COLLECTION_WOUNDED, p.data.villageId).data.forEach(function(a) {
                Object.assign(h, a.data.units)
            });
            for (b = 0; b < a.units.length; b++) {
                a.units[b].limit = h[a.units[b].troopInfo.troopId] || 0
            }
        }
        setTimeout(function() {
            a.computeAvailableResources()
        })
    }
    function h() {
        if (a.units && a.unitsResearch && a.unitsResearch.filled) {
            for (var b = 0; b < a.units.length; b++) {
                a.units[b].unitLevel = a.unitsResearch.getUnitLevel(a.units[b].unitType),
                a.units[b].disabled && 0 <= a.units[b].unitLevel && delete a.units[b].disabled
            }
        }
    }
    function m() {
        a.units = [];
        null != u && u();
        var b = UnitQueue.get(p.data.villageId)
          , f = [b];
        a.building.data.buildingType == Building.TYPE.HEALING_TENT && f.push(Troops.getCollection(Troops.COLLECTION_WOUNDED, p.data.villageId));
        u = a.ja(f, function() {
            r = b.data.buildingTypes[a.building.data.buildingType];
            e();
            a.$parent.trainingInProgress = r && 0 < r.length
        });
        Travian.request("building/getRecruitList", {
            villageId: p.data.villageId,
            locationId: a.building.data.locationId
        }, function(b) {
            $.each(["buildable", "notResearched"], function(c, e) {
                for (var f in b[e]) {
                    b[e][f].amount = 0,
                    b[e][f].existing = 0,
                    b[e][f].limit = -1,
                    b[e][f].time = b[e][f].time,
                    b[e][f].unitType = f,
                    b[e][f].troopInfo = getUnitTribeAndUnitNumber(f),
                    b[e][f].troopData = Travian.Config.troopConfig[f],
                    "notResearched" === e && (b[e][f].disabled = !0,
                    b[e][f].disabledIcon = "academy"),
                    a.units.push(b[e][f])
                }
            });
            e();
            h();
            var f = c.qc();
            a.subscribe(f, function() {
                $.each(f.data.units, function(b, c) {
                    var e = nrToUnitId(b, p.data.tribeId);
                    for (b = 0; b < a.units.length; b++) {
                        if (a.units[b].unitType == e) {
                            a.units[b].existing = parseInt(c);
                            break
                        }
                    }
                })
            })
        })
    }
    function l() {
        b.S("type22", function(b) {
            null != b && (a.academyLocationId = b.data.locationId)
        });
        p = c.i();
        a.unitsResearch = Research.get(p.data.villageId);
        a.subscribe(a.unitsResearch, h)
    }
    var p, n, q, r = {}, t = a.building;
    a.buildingTypes = Building.TYPE;
    a.units = [];
    a.activeItem = {};
    a.allValue = 0;
    a.allTime = 0;
    a.allCosts = 0;
    g();
    m();
    a.$watch("building", function(b) {
        t !== b && (t = b,
        g(),
        m(),
        a.computeAvailableResources())
    });
    a.sliderChanged = function(b) {
        if ("undefined" === typeof a.activeItem) {
            return !1
        }
        a.allValue = b;
        a.allTime = b * a.activeItem.time;
        var c = a.activeItem.costs, e = {}, f;
        for (f in c) {
            e[f] = b * c[f]
        }
        a.allCosts = e;
        a.$$phase || a.$digest()
    }
    ;
    a.academyLocationId = null;
    a.$on("resourcesChanged", function() {
        a.computeAvailableResources()
    });
    a.$watch("activeItem", function() {
        a.$broadcast("setSliderTo", 1);
        a.sliderChanged(1)
    });
    a.computeAvailableResources = function() {
        for (var b = 0; b < a.units.length; b++) {
            var c = a.units[b];
            if (0 == c.limit) {
                c.maxAvailable = 0
            } else {
                var e = Infinity
                  , h = p.getResources();
                $.each(c.costs, function(a, b) {
                    if (0 < b) {
                        var c = Math.floor(h[a] / b);
                        c < e && (e = c)
                    }
                });
                e += parseInt(c.amount);
                0 < c.limit && (e = Math.min(e, c.limit));
                var g = c.troopInfo.troopId;
                if (g == Troops.TYPE_SETTLER || g == Troops.TYPE_LEADER) {
                    var l = 0
                      , m = p.data.availableControlPoints - p.data.usedControlPoints;
                    g == Troops.TYPE_SETTLER ? l = m : g == Troops.TYPE_LEADER && (l = Math.floor(m / 3));
                    l < e && (e = l);
                    0 >= l && (c.disabled || (c.disabled = !0,
                    c.disabledIcon = "lock"),
                    requestAngularApply())
                }
                f.p().isOnMap() || (e = Math.min(3, e));
                c.maxAvailable = Math.max(0, e)
            }
        }
        if (a.building.data.buildingType == Building.TYPE.HEALING_TENT) {
            g = new Resources;
            for (b = 0; b < a.units.length; b++) {
                c = a.units[b],
                0 < c.limit && g.addResources((new Resources(c.costs)).multiply(c.limit))
            }
            a.canTrainAll = 0 < g.getSum() && p.hasEnoughResources(g)
        }
    }
    ;
    a.building.data.buildingType == Building.TYPE.HEALING_TENT && a.$on("starveTroops", function() {
        e()
    });
    var u = null;
    a.startTraining = function(b) {
        if (!b) {
            return !1
        }
        "undefined" != typeof a.units.buildable && "undefined" != typeof a.units.buildable[q] && "undefined" != typeof a.units.buildable[n] && 0 < a.units.buildable[q].amount && 0 < a.units.buildable[n].amount && (a.showSettlerLeaderError = !0);
        if (!a.showSettlerLeaderError) {
            var c = {};
            c[b.unitType] = a.allValue;
            b = "building/recruitUnits";
            a.building.data.buildingType == Building.TYPE.HEALING_TENT && (b = "building/healUnits");
            Travian.writeRequest(b, {
                villageId: p.data.villageId,
                locationId: a.building.data.locationId,
                units: c
            })
        }
    }
    ;
    a.produceFirst = function(b) {
        if (!b.queue) {
            return !1
        }
        Travian.writeRequest("building/produceFirst", {
            villageId: p.data.villageId,
            locationId: a.building.data.locationId,
            buildingType: a.building.data.buildingType,
            unitsType: b.unitType
        })
    }
    ;
    l();
    a.$on("activeVillageChanged", l)
}
;
window.unitsTrainCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.worldWonderCtrl = function(a, c, b, f) {
    function g(a) {
        var b = a.data.playerId;
        "undefined" !== typeof t.resources[b] && (t.resources[b].data.playerName = a.getField("name"));
        "undefined" !== typeof t.troops[b] && (t.troops[b].playerName = a.getField("name"));
        h()
    }
    function e() {
        var b = q.v()
          , c = [];
        t.troops = {};
        b.forEach(function(a) {
            var b = a.getField("playerId")
              , e = -1;
            c.forEach(function(a, c) {
                a.playerId == b && (e = c)
            });
            if (0 > e) {
                f = {
                    playerId: b,
                    tribeId: a.getField("tribeId"),
                    playerName: "",
                    units: {},
                    unitSum: 0
                },
                angular.copy(a.data.units, f.units),
                c.push(f)
            } else {
                for (var f = c[e], h = 1; 11 >= h; h++) {
                    f.units[h] = parseInt(f.units[h] || 0) + parseInt(a.data.units[h] || 0)
                }
            }
        });
        c.forEach(function(b) {
            var c = b.playerId
              , e = Cache.get(Player, c);
            b.playerName = e.getField("name");
            for (var f = 1; 11 >= f; f++) {
                b.unitSum += parseInt(b.units[f] || 0)
            }
            t.troops[b.playerId] = b;
            "" == b.playerName && "undefined" === typeof r[c] && (r[c] = e,
            a.subscribe(e, g))
        });
        h()
    }
    function h() {
        a.contributors.resources = [];
        for (var b in t.resources) {
            a.contributors.resources.push(t.resources[b])
        }
        a.contributors.resources.sort(function(a, b) {
            return a.data.resources.sum > b.data.resources.sum ? -1 : a.data.resources.sum < b.data.resources.sum ? 1 : 0
        });
        a.contributors.troops = [];
        var c = [];
        for (b in t.troops) {
            c.push(t.troops[b])
        }
        c.sort(function(a, b) {
            return a.unitSum > b.unitSum ? -1 : a.unitSum < b.unitSum ? 1 : 0
        });
        for (b = 0; 3 > b && "undefined" !== typeof c[b]; b++) {
            a.contributors.troops.push(c[b])
        }
    }
    function m() {
        var b = c.getActiveVillageId();
        null !== q && q.destroy();
        q = f.H([b], Troops.COLLECTION_STATIONARY, e, a)
    }
    var l = c.getActiveVillageId()
      , p = b.va(l, Building.TYPE.WONDER_OF_WORLD)
      , n = WorldWonderResources.getCollection(l)
      , q = null
      , r = {};
    a.worldWonder = {
        rank: 0,
        currentLevel: p.getField("lvl"),
        maxLevel: Travian.Config.endWorldWithWorldWonderLevel,
        bonus: 0,
        ij: function(a) {
            this.rank = parseInt(a)
        },
        Xi: function(a) {
            this.bonus = 100 * a
        },
        cj: function(a) {
            this.currentLevel = parseInt(a)
        },
        Ai: function() {
            Travian.request("building/getWorldWonderRankByVillageId", {
                villageId: l
            }, function(b) {
                a.worldWonder.ij(b.rank);
                a.worldWonder.Xi(b.bonus)
            })
        }
    };
    a.contributors = {
        resources: [],
        troops: []
    };
    var t = {
        resources: {},
        troops: {}
    };
    m();
    a.$on("activeVillageChanged", m);
    a.subscribe(p, function() {
        a.worldWonder.cj(p.getField("lvl"));
        a.worldWonder.Ai()
    });
    a.subscribe(n, function() {
        var b = n.data;
        t.resources = {};
        for (var c = 0; c < b.length; c++) {
            var e = b[c].data.playerId
              , f = new Resources(b[c].data.resources);
            b[c].data.resources.sum = f.getSum();
            f = new Resources(b[c].data.resourcesToday);
            b[c].data.resourcesToday.sum = f.getSum();
            f = Cache.get(Player, e);
            b[c].data.playerName = f.getField("name");
            t.resources[e] = b[c];
            "" === b[c].data.playerName && "undefined" === typeof r[e] && (r[e] = f,
            a.subscribe(f, g))
        }
        h()
    })
}
;
window.worldWonderCtrl.$inject = ["$scope", "VillageService", "BuildingService", "TroopsService"];
window.upgradeFireworksCtrl = function(a, c) {
    function b(b, c) {
        delete a[b];
        for (var f in g.data) {
            if (g.data[f].data.itemId == c) {
                a[b] = g.data[f];
                break
            }
        }
        a[b] || (a[b] = new HeroItem,
        a[b].set({
            playerId: Travian.Player.data.playerId,
            itemType: c,
            images: [b],
            amount: 0
        }))
    }
    a.overlayConfig.k({
        inWindowPopupContentTemplate: "tpl/gameWorld/overlays/UpgradeFireworks.html"
    });
    a.min = Math.min;
    a.village = c.i();
    a.upgradeAmount = {
        value: 0
    };
    var f = {
        fireworks: HeroItem.TYPE_FIREWORKS,
        blackPowder: HeroItem.TYPE_BLACK_POWDER,
        superFireworks: HeroItem.TYPE_SUPER_FIREWORKS
    }
      , g = HeroItem.getCollection("own");
    a.subscribe(g, function() {
        $.each(f, b)
    });
    a.upgradeFireworks = function() {
        Travian.writeRequest("hero/useItem", {
            id: a.blackPowder.data.id,
            amount: a.upgradeAmount.value,
            villageId: c.getActiveVillageId()
        });
        a.closeOverlay()
    }
}
;
window.upgradeFireworksCtrl.$inject = ["$scope", "VillageService", "$timeout"];
window.challengeCtrl = function(a, c, b) {
    c.m(function() {
        a.settings = Settings.get(Travian.Player.data.playerId);
        Travian.request("player/getChallengeState", {}, function(b) {
            b = b.challenges;
            var c, e;
            for (e in b) {
                if (1 < b[e].levels.length) {
                    for (var h in b[e].levels) {
                        b[e].levels[h].buttonStyle = {},
                        c = 0 < b[e].levels[h].displayPosition ? b[e].levels[h].displayPosition / 100 : b[e].levels[h].value / b[e].levels[b[e].levels.length - 1].value,
                        b[e].levels[h].buttonStyle[getReadingDirectionFrom()] = Math.floor(160 + 685 * c) + "px"
                    }
                }
            }
            a.challengeState = b
        })
    });
    a.getChallengeUrl = function() {
        return "/api/challenge.php?game&intro&lang=" + a.settings.data.lang + (a.settings.data.disableAnimations ? "" : "&anim")
    }
    ;
    a.collectReward = function(c, g) {
        a.collecting || (a.collecting = !0,
        Travian.writeRequest("player/collectChallengeReward", {
            challengeName: a.challengeState[c].name,
            level: g + 1
        }, function(e) {
            e.errors ? a.collecting = !1 : (delayUntilAnimationFinish(b, function() {
                a.challengeState[c].levels[g].collected = Math.floor(Date.now() / 1E3);
                a.$$phase || a.$digest();
                a.collecting = !1
            }, "collectReward(id, lvl)"),
            Travian.rootScope.$broadcast("challengeCollected"))
        }))
    }
}
;
window.challengeCtrl.$inject = ["$scope", "SessionService", "$rootScope"];
window.fireworksCtrl = function(a, c) {
    function b(b, c) {
        for (var f in g.data) {
            if (g.data[f].data.itemId == c) {
                a.fireworksItems[b] = g.data[f];
                break
            }
        }
        a.fireworksItems[b] || (a.fireworksItems[b] = new HeroItem,
        a.fireworksItems[b].set({
            playerId: Travian.Player.data.playerId,
            itemType: c,
            images: [b],
            amount: 0
        }))
    }
    function f(b) {
        Travian.request("hero/distributeFireworks", {
            itemType: b
        }, function(b) {
            0 < b.length && (a.villageStockpiles = b)
        })
    }
    a.isNightTruce = Gameworld.isNightTruceActive;
    a.getNightTruce = Gameworld.getNightTruceTimes;
    var g = HeroItem.getCollection("own");
    a.subscribe(g, function() {
        a.fireworksItems = {};
        $.each({
            fireworks: HeroItem.TYPE_FIREWORKS,
            superFireworks: HeroItem.TYPE_SUPER_FIREWORKS
        }, b)
    });
    Travian.request("village/getPreparedFireworks", {}, function(b) {
        a.villageStockpiles = b
    });
    a.distributeFireworks = function(b, c) {
        Settings.get(Travian.Player.data.playerId).data.showFireworksDistributionWarning ? a.openWindow("confirmAction", {}, {
            action: b + "Distribution",
            cb: function() {
                f(c)
            },
            itemType: c
        }, !0) : f(c)
    }
    ;
    a.$on("itemUsed", function(b, c) {
        if (c.type == HeroItem.TYPE_FIREWORKS || c.type == HeroItem.TYPE_SUPER_FIREWORKS) {
            for (var f in a.villageStockpiles) {
                if (a.villageStockpiles[f].villageId == c.villageId || "all" == a.villageStockpiles[f].status) {
                    a.villageStockpiles[f][c.type == HeroItem.TYPE_FIREWORKS ? "fireworks" : "superFireworks"] += c.amount
                }
            }
            digestScope(a)
        }
    });
    a.subscribe(c.qf(), function(b) {
        for (var c in b.data) {
            if (b.data[c].data.type == Notifications.OBTAINED_ITEM && "fireworks" == b.data[c].data.payload.context.type) {
                for (var f in a.villageStockpiles) {
                    a.villageStockpiles[f].fireworks = 0,
                    a.villageStockpiles[f].superFireworks = 0
                }
                break
            }
        }
    })
}
;
window.fireworksCtrl.$inject = ["$scope", "NotificationService"];
window.fireworksTop10Ctrl = function(a) {
    function c(b, c) {
        if (b && (!a.rankings[b] || c)) {
            a.rankings[b] = a.rankings[b] || {};
            var g = {
                rankingType: "ranking_Player",
                rankingSubtype: "fireworks"
            };
            0 < Travian.Config.specialWorldsCluster.indexOf(b) && (g.gameWorld = b);
            Travian.request("ranking/getTop10", g, function(c) {
                c && !c.errors && (a.rankings[b] = c)
            })
        }
    }
    a.rankings = {};
    a.activeTab = Travian.Config.specialWorldsCluster ? Travian.Config.specialWorldsCluster[0] : "";
    a.$watch("activeTab", c);
    a.heroFace = HeroFace.get(Travian.Player.data.playerId);
    a.getNightTruce = Gameworld.getNightTruceTimes;
    a.$on("nightModeChanged", function(b, f) {
        !f || Travian.Config.specialWorldsCluster && a.activeTab != Travian.Config.specialWorldsCluster[0] || setTimeout(function() {
            c(a.activeTab, !0)
        }, 1E3)
    })
}
;
window.fireworksTop10Ctrl.$inject = ["$scope"];
window.confirmSellingCtrl = function(a, c, b, f) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Auction.Sell.Confirmation.Header",
        inWindowPopupContentTemplate: "tpl/hero/overlay/confirmSelling.html"
    });
    a.isStackable = !1;
    a.isNpcBuying = null;
    a.amount = 1;
    a.ownerMultiplier = 0;
    a.prices = [];
    var g = "";
    "undefined" != typeof a.getParam("itemId") && (g = a.getParam("itemId"));
    "undefined" != typeof a.getParam("amount") && (a.amount = a.getParam("amount"));
    var e = HeroItem.get(g);
    a.item = e;
    a.subscribe(e, function() {
        a.equipped = !1;
        0 < e.data.inSlot && (a.equipped = !0);
        a.isStackable = e.data.stackable;
        a.owners = e.data.previousOwners;
        a.ownerMultiplier = Travian.Config.auction.previousOwnersPriceInfluence[a.owners] || 0;
        Travian.writeRequest("auctions/getSellerPayout", {
            itemId: g,
            amount: e.data.amount
        }, function(b) {
            a.isNpcBuying = b.isNpcBuying;
            if (a.isNpcBuying) {
                a.maxAmount = b.amount;
                a.strengthFactor = parseInt(100 * b.strengthFactor);
                a.tier = b.tier;
                var c;
                c = b.pricePerItem;
                var e = Math.min(a.amount, a.maxAmount);
                b = b.strengthFactor;
                var f = Math.round(c / (Travian.Config.auction.previousOwnersPriceInfluence[a.owners] || 0));
                c = {
                    avgMarketPrice: Math.round(f / (b || 1)),
                    priceWithStrengthFactor: f,
                    priceWithOwnerFactor: c,
                    totalPrice: c * e
                };
                a.prices = c
            } else {
                a.closeOverlay()
            }
        })
    });
    a.sellItemAction = function() {
        Travian.writeRequest("auctions/sellItem", {
            itemId: g,
            amount: a.amount
        }, function(b) {
            "undefined" != typeof b.errors && "valueExceedsMax" == b.errors[0].message && (f.lb(Travian.translate("Error.NpcOfferInvalid"), "error", 4E3),
            delete b.errors);
            c.$broadcast("auctionsSellingConfirmed");
            a.closeOverlay()
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("itemId");
        a.l("amount")
    })
}
;
window.confirmSellingCtrl.$inject = ["$scope", "$rootScope", "VillageService", "NotificationService"];
window.heroEditorCtrl = function(a, c, b) {
    function f() {
        a.selectedOption = l[a.editorAvatar.gender][a.editorDropdown.selected];
        for (var b = angular.copy(e[a.editorAvatar.gender][a.selectedOption]), c = -1, f = 0; f < b.length; f++) {
            b[f] = {
                file: a.selectedOption + "/" + a.selectedOption + b[f],
                index: b[f],
                locked: Travian.Config.heroCustomizations.locked[a.selectedOption] && 0 <= Travian.Config.heroCustomizations.locked[a.selectedOption].indexOf(parseInt(b[f])) && (!a.privileges.data.heroCustomizations[a.selectedOption] || 0 > a.privileges.data.heroCustomizations[a.selectedOption].indexOf(parseInt(b[f]))),
                purchasable: Travian.Config.heroCustomizations.purchasable[a.selectedOption] && Travian.Config.heroCustomizations.purchasable[a.selectedOption][parseInt(b[f])],
                tag: HeroFace.getCustomizationTag(a.selectedOption, b[f])
            },
            b[f].locked && (b[f].purchasable && "candy" == b[f].purchasable.currency) && (0 > c && (c = HeroItem.getOwnItemsAmountByType(HeroItem.TYPE_CANDY)),
            b[f].purchasable.disabled = c < b[f].purchasable.price),
            b[f].locked && (!b[f].purchasable && h[a.selectedOption] && 0 <= h[a.selectedOption].indexOf(parseInt(b[f].index))) && b.splice(f--, 1)
        }
        if (Travian.Config.heroCustomizations.sortOrder[a.selectedOption]) {
            for (var c = [], f = 0, g = Travian.Config.heroCustomizations.sortOrder[a.selectedOption]; f < g.length; f++) {
                for (var m = 0; m < b.length; m++) {
                    if (g[f] == b[m].index) {
                        c.push(b[m]);
                        break
                    }
                }
            }
            b = c
        }
        a.optionItems = b;
        a.customizationRows = Math.ceil(b.length / a.customizationColumns)
    }
    function g() {
        a.editorDropdown.options = p[a.editorAvatar.gender];
        var b = a.getParam("option");
        a.editorDropdown.selected = b ? Math.max(0, Object.keys(e[a.editorAvatar.gender]).indexOf(b)) : 0;
        f()
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Hero.ChangeAppearance",
        inWindowPopupContentTemplate: "tpl/hero/partials/editor.html"
    });
    var e = angular.copy(Travian.Config.heroCustomizations.options);
    a.customizationColumns = 4;
    a.CUSTOMIZATION_TYPE_NONE = HeroFace.CUSTOMIZATION_TYPE_NONE;
    a.privileges = Privileges.get(Travian.Player.data.playerId);
    var h = [];
    a.premiumFeatureName = PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION;
    a[PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION] = function(b) {
        return {
            option: a.selectedOption,
            type: b
        }
    }
    ;
    var m = HeroFace.get(c.getPlayerId());
    a.heroFace = new HeroFace;
    a.editorAvatar = a.heroFace.getViewModel();
    a.somethingChanged = a.heroFace.somethingChanged;
    a.optionItems = [];
    var l = {
        male: [],
        female: []
    }
      , p = {
        male: [],
        female: []
    };
    a.editorDropdown = {
        options: [],
        bodyClass: "heroEditorDropDown",
        selected: 0,
        callback: f
    };
    if (Travian.Config.heroCustomizations.externs) {
        for (var n in Travian.Config.heroCustomizations.externs) {
            for (var q = 0; q < Travian.Config.heroCustomizations.externs[n].length; q++) {
                for (var r in l) {
                    if (e[r][n]) {
                        for (var t = 0; t < e[r][n].length; t++) {
                            Travian.Config.heroCustomizations.externs[n][q] == e[r][n][t] && e[r][n].splice(t--, 1)
                        }
                    }
                }
            }
        }
    }
    if (Travian.Config.heroCustomizations.availability) {
        for (q = 0; q < Travian.Config.heroCustomizations.availability.length; q++) {
            var u = Travian.Config.heroCustomizations.availability[q]
              , t = !0;
            switch (u.requirement) {
            case "date":
                u.from > Travian.rootScope.currentServerTime && (t = !1);
                break;
            case "privilege":
                h = u.types
            }
            if (!t) {
                for (n in u.types) {
                    for (r in l) {
                        if (e[r][n]) {
                            for (t = 0; t < e[r][n].length; t++) {
                                for (var w in u.types[n]) {
                                    if (u.types[n][w] == e[r][n][t]) {
                                        e[r][n].splice(t--, 1);
                                        break
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    for (r in l) {
        for (n in e[r]) {
            l[r].push(n),
            p[r].push(Travian.translate("Hero.Face_" + n))
        }
    }
    a.subscribe(m, function() {
        a.heroFace.set(m.data);
        a.editorAvatar = a.heroFace.getViewModel();
        g()
    });
    a.subscribe(a.privileges, f);
    a.changeAttribute = function(b, c) {
        "color" != b ? c == HeroFace.CUSTOMIZATION_TYPE_NONE ? delete a.heroFace.data.face[b] : a.heroFace.data.face[b] = c : a.heroFace.data.hairColor = c;
        a.heroFace.updateViewModel()
    }
    ;
    a.changeGender = function(b) {
        0 <= b && (1 >= b && a.heroFace.data.gender != b) && (a.heroFace.data.gender = b,
        a.heroFace.selectRandomFace(),
        g())
    }
    ;
    a.save = function() {
        Travian.writeRequest("hero/saveFace", {
            gender: a.heroFace.data.gender,
            hairColor: a.heroFace.data.hairColor,
            face: a.heroFace.data.face
        }, function() {
            0 <= Travian.Player.data.uiStatus && b.$broadcast("heroEditor.saveFace")
        });
        -1 === Travian.Player.data.uiStatus && a.closeOverlay()
    }
    ;
    a.selectRandomFace = function() {
        a.heroFace.selectRandomFace()
    }
    ;
    a.resetChanges = function() {
        a.heroFace.somethingChanged && (m = HeroFace.get(c.getPlayerId()),
        a.heroFace.set(m.data),
        g())
    }
    ;
    a.previousOption = function() {
        a.editorDropdown.selected = 0 == parseInt(a.editorDropdown.selected, 0) ? l[a.editorAvatar.gender].length - 1 : parseInt(a.editorDropdown.selected, 0) - 1;
        f()
    }
    ;
    a.nextOption = function() {
        a.editorDropdown.selected = parseInt(a.editorDropdown.selected, 0) == l[a.editorAvatar.gender].length - 1 ? 0 : parseInt(a.editorDropdown.selected, 0) + 1;
        f()
    }
    ;
    a.$on("$destroy", function() {
        a.l("option");
        a.l("scrollTo")
    })
}
;
window.heroEditorCtrl.$inject = ["$scope", "SessionService", "$rootScope"];
window.sellStolenGoodsCtrl = function(a, c, b, f, g) {
    function e() {
        var b = c.getActiveVillageId();
        null !== r && r.destroy();
        r = g.H([b], null, n, a)
    }
    function h() {
        a.village = c.i();
        m(a.useAmount.value);
        l()
    }
    function m(b) {
        a.treasurePrice = new Resources(q);
        a.village.data.belongsToKingdom !== Travian.Player.data.kingdomId && (a.treasurePrice[Resources.CROP] = 0);
        a.treasurePrice.multiply(b)
    }
    function l() {
        "undefined" !== typeof a.treasurePrice && Travian.request("hero/getDurationToClosestVillageWithInfluence", {
            villageId: c.getActiveVillageId()
        }, function(b) {
            a.treasureDuration = b.data;
            a.buyer = b.playerId ? Player.get(b.playerId) : new Player
        })
    }
    function p() {
        Travian.request("hero/getTreasureSellPrice", {}, function(b) {
            q = new Resources(b);
            m(a.useAmount.value);
            l()
        })
    }
    function n() {
        if (r && a.inboundTroopId) {
            for (var b = r.v(), c = 0; c < b.length; c++) {
                if (b[c].data.troopId == a.inboundTroopId) {
                    return !1
                }
            }
            a.closeOverlay();
            return !0
        }
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Hero.SellTreasures",
        inWindowPopupContentTemplate: "tpl/hero/overlay/sellStolenGoods.html"
    });
    var q = new Resources;
    a.village = c.i();
    a.robber = Player.ID.ROBBER;
    a.cropWarning = !1;
    a.currentPlayer = Travian.Player;
    a.treasurePrice = new Resources;
    a.useAmount = {
        value: 1
    };
    var r = null;
    e();
    a.$on("activeVillageChanged", e);
    a.fittingInStorage = function(b) {
        if ("undefined" !== typeof a.treasurePrice[b] && "" !== a.treasurePrice[b]) {
            var c = a.village.getResources();
            return parseInt(c[b]) + parseInt(a.treasurePrice[b]) <= a.village.data.storageCapacity[b]
        }
        return !0
    }
    ;
    if ("undefined" != typeof a.getParam("itemId")) {
        var t = a.getParam("itemId")
    }
    a.item = HeroItem.get(t);
    a.sellTreasures = function() {
        Travian.writeRequest("hero/useItem", {
            id: a.item.data.id,
            amount: a.item.data.stackable ? a.useAmount.value : 1,
            villageId: c.getActiveVillageId()
        }, function(b) {
            a[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT] = function(b) {
                return {
                    troopId: b,
                    callback: function() {
                        a.closeOverlay()
                    }
                }
            }
            ;
            a.soldResources = new Resources(b.resources);
            a.soldAmount = b.amount;
            a.inboundTroopId = b.troopId;
            a.inboundTroopArriveTime = b.destTime;
            a.premiumFeaturePrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT].price
        })
    }
    ;
    a.subscribe(a.item, function() {
        p();
        var b = a.item.data
          , c = b.maxCanUse;
        b.maxPerDay && (c = Math.min(b.maxCanUse, b.maxPerDay - b.usedPerDay));
        a.maxAmount = c;
        a.useAmount = {
            value: 1
        }
    });
    a.subscribe(a.village, h);
    a.$on("activeVillageChanged", h);
    a.$watch("useAmount.value", m);
    a.$on("$destroy", function() {
        a.l("itemId")
    })
}
;
window.sellStolenGoodsCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout", "TroopsService"];
window.unlockAdditionalLocationCtrl = function(a, c, b) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Hero.BuildingGround.Header",
        inWindowPopupContentTemplate: "tpl/hero/overlay/unlockAdditionalLocation.html"
    });
    a.maxPremiumLocations = Building.PREMIUM_LOCATIONS.length;
    a.unlockedGrounds = c.Ad();
    a.$on("activeVillageChanged", function() {
        a.unlockedGrounds = c.Ad()
    });
    a.unlockGround = function() {
        "undefined" != typeof a.getParam("itemId") && (Travian.writeRequest("hero/useItem", {
            id: a.getParam("itemId"),
            amount: 1,
            villageId: b.getActiveVillageId()
        }, y()),
        a.closeOverlay())
    }
}
;
window.unlockAdditionalLocationCtrl.$inject = ["$scope", "BuildingService", "VillageService"];
window.upgradeBandagesCtrl = function(a) {
    "undefined" === typeof a.getParam("bandageItemType") && a.closeOverlay();
    var c = a.getParam("bandageItemType")
      , b = HeroItem.getCollection("own");
    a.isSmallBandage = !0;
    a.bandages = null;
    a.healingPotions = null;
    b.subscribe(function() {
        for (var f = 0; f < b.data.length; f++) {
            if (b.data[f].data.inSlot == HeroItem.SLOT_INVENTORY) {
                switch (b.data[f].data.itemType) {
                case c:
                    a.bandages = b.data[f];
                    a.isSmallBandage = b.data[f].data.itemType === HeroItem.TYPE_BANDAGE_25;
                    break;
                case HeroItem.TYPE_HEALING_POTION:
                    a.healingPotions = b.data[f]
                }
            }
        }
        null != a.bandages && null != a.healingPotions || a.closeOverlay();
        a.maxUseableAmount = Math.min(a.bandages.data.amount, a.healingPotions.data.amount);
        a.useAmount = {
            value: Math.round(a.maxUseableAmount / 2)
        }
    });
    a.overlayConfig.k({
        inWindowPopupTitle: "Hero.ItemUpgradeBandagesHeadline",
        inWindowPopupContentTemplate: "tpl/hero/overlay/upgradeBandages.html"
    });
    a.upgradeBandage = function() {
        Travian.writeRequest("hero/bandagesUpgrade", {
            upgradedItemType: c,
            amount: a.useAmount.value
        });
        a.closeOverlay()
    }
    ;
    a.cancel = function() {
        a.closeOverlay();
        a.openOverlay("useItem", {
            itemId: a.healingPotions.data.id
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("bandageItemId")
    })
}
;
window.upgradeBandagesCtrl.$inject = ["$scope", "SessionService", "$timeout"];
window.upgradeItemCtrl = function(a, c, b) {
    function f(a, b) {
        if (a.data.upgradeLevel > b.data.upgradeLevel) {
            return -1
        }
        if (a.data.upgradeLevel < b.data.upgradeLevel) {
            return 1
        }
        if (a.data.upgradeLevel == b.data.upgradeLevel) {
            if (a.data.inventorySlotNr > b.data.inventorySlotNr) {
                return 1
            }
            if (a.data.inventorySlotNr < b.data.inventorySlotNr) {
                return -1
            }
        }
        return 0
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Hero.UseUpgradeItem",
        inWindowPopupContentTemplate: "tpl/hero/overlay/upgradeItem.html"
    });
    a.HeroItem = HeroItem;
    a.targetItem = {};
    a.maxPossibleUpgrades = Travian.Config.heroItems.maxUpgrades;
    a.itemDropdown = {};
    a.itemDropdown.selected = null;
    a.itemDropdown.options = [];
    a.itemDropdown.resize = !0;
    a.itemDropdown.placeholder = "Hero.Item.Upgrade.Placeholder";
    a.itemDropdown.bodyClass = "itemDropdownBody";
    a.itemDropdown.callback = function() {
        a.targetItem = a.itemDropdown.options[a.itemDropdown.selected];
        a.effect = {
            strength: 0,
            type: 0
        };
        var b = a.item.data.bonuses, c = a.targetItem.data.bonuses, e = a.targetItem.data.itemTier, f;
        for (f in c) {
            b.hasOwnProperty(f) ? (Array.isArray(b[f]) ? a.effect.strength = b[f][e - 1] : a.effect.strength = b[f],
            a.effect.type = f) : (a.effect.strength = b[Object.keys(b)[0]][e - 1],
            a.effect.type = HeroItem.BONUS_FIGHT_STRENGTH)
        }
    }
    ;
    a.itemDropdown.disabledEntries = [];
    var g = HeroFace.get(b.getPlayerId());
    a.subscribe(g, function() {
        a.avatar = g.getViewModel()
    });
    c = "";
    "undefined" != typeof a.getParam("itemId") && (c = a.getParam("itemId"));
    a.item = HeroItem.get(c);
    a.upgradeItem = function() {
        Travian.writeRequest("hero/upgradeItem", {
            upgradeItemId: a.item.data.id,
            targetItemId: a.targetItem.data.id
        });
        a.closeOverlay()
    }
    ;
    var e = HeroItem.getCollection("own");
    a.subscribe(e, function() {
        for (var b = a.itemDropdown, c = a.item.data.upgradableItemType, g = Travian.Filter.bidiRatio(), p = {
            enabled: [],
            disabled: [],
            maxUpgrade: []
        }, n = 0; n < e.data.length; n++) {
            var q = e.data[n].data;
            if (q.slot == c) {
                var r = ""
                  , r = q.upgradeLevel >= a.maxPossibleUpgrades ? Travian.translate("Hero.Item.Upgrade.maxLevel") : g("", q.upgradeLevel, a.maxPossibleUpgrades, !1)
                  , r = {
                    text: Travian.translate("Hero.Item.Upgrade.DropdownOption", {
                        itemName: Travian.translate("Hero.Item_" + q.itemType),
                        value: r
                    }),
                    nextUpgradeLevel: q.upgradeLevel + 1,
                    disabled: !1,
                    data: q
                };
                q.upgradeLevel >= a.maxPossibleUpgrades ? p.maxUpgrade.push(r) : q.clickDisabled && 0 < q.inSlot ? (r.disabled = !0,
                p.disabled.push(r)) : p.enabled.push(r)
            }
        }
        p.enabled.sort(f);
        p.disabled.sort(f);
        p.maxUpgrade.sort(f);
        b.options = p.enabled.concat(p.disabled, p.maxUpgrade);
        for (b = 0; b < a.itemDropdown.options.length; b++) {
            c = a.itemDropdown.options[b],
            (c.disabled || c.data.upgradeLevel >= a.maxPossibleUpgrades) && a.itemDropdown.disabledEntries.push(b)
        }
    });
    a.$on("$destroy", function() {
        a.l("itemId")
    })
}
;
window.upgradeItemCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout"];
window.useItemCtrl = function(a, c, b) {
    var f = HeroFace.get(b.getPlayerId());
    a.subscribe(f, function() {
        a.avatar = f.getViewModel()
    });
    b = "";
    "undefined" != typeof a.getParam("itemId") && (b = a.getParam("itemId"));
    a.item = HeroItem.get(b);
    var g = "Hero.ItemEnterAmount";
    a.isHealingPotion = !1;
    a.isArtwork = !1;
    a.useItem = function() {
        var b = {
            id: a.item.data.id,
            amount: a.item.data.stackable ? a.useAmount.value : 1,
            villageId: a.getParam("useInId") || c.getActiveVillageId()
        };
        Travian.writeRequest("hero/useItem", b);
        Travian.rootScope.$broadcast("itemUsed", {
            type: a.item.data.itemType,
            amount: b.amount,
            villageId: b.villageId
        });
        a.closeOverlay()
    }
    ;
    a.subscribe(a.item, function() {
        switch (a.item.data.itemType) {
        case HeroItem.TYPE_HEALING_POTION:
            g = "Hero.ItemUsePotionsHeadline";
            a.isHealingPotion = !0;
            a.smallBandagesId = HeroItem.TYPE_BANDAGE_25;
            a.largeBandagesId = HeroItem.TYPE_BANDAGE_33;
            break;
        case HeroItem.TYPE_ARTWORK:
            for (var b = c.W().data, f, m = 0, l = 0; l < b.length; l++) {
                f = b[l].data,
                m += f.culturePointProduction
            }
            a.cultureProduction = Math.min(m, a.item.data.bonuses[HeroItem.BONUS_CULTURE_POINTS]);
            g = "Hero.UseArtwork";
            a.isArtwork = !0;
            break;
        case HeroItem.TYPE_ADVENTURE_POINT:
            g = "Hero.UseAdventurePoint";
            break;
        case HeroItem.TYPE_BOOK:
            g = "Hero.UseBookOfWisdom";
            break;
        case HeroItem.TYPE_WATERBUCKET:
            g = "Hero.UseWaterbucket"
        }
        a.overlayConfig.k({
            inWindowPopupTitle: g,
            inWindowPopupContentTemplate: "tpl/hero/overlay/useItem.html"
        });
        a.itemName = Travian.translate("Hero.Item_" + a.item.data.itemType);
        Travian.txt["Hero.Item.Use_" + a.item.data.itemType] && (a.useText = "Hero.Item.Use_" + a.item.data.itemType);
        Travian.txt["Hero.UseItem_" + a.item.data.itemType] && (a.useButtonText = "Hero.UseItem_" + a.item.data.itemType);
        a.stackable = a.item.data.stackable && 1 != a.item.data.maxPerDay;
        if (!0 == a.item.data.stackable) {
            var b = a.item.data
              , p = Math.min(b.maxCanUse, a.getParam("maxCanUse") || b.maxCanUse);
            b.maxPerDay && (p = Math.min(b.maxCanUse, b.maxPerDay - b.usedPerDay));
            a.maxAmount = p;
            a.useAmount = {
                value: p
            };
            var n = HeroItem.getCollection("own");
            if (b.itemType == HeroItem.TYPE_OINTMENT && b.maxPerDay) {
                var q = !1;
                a.subscribe(n, function() {
                    if (!q) {
                        for (var b = n.data.length - 1; 0 <= b; b--) {
                            if (n.data[b].data.inSlot == HeroItem.SLOT_BAG) {
                                n.data[b].data.itemType == HeroItem.TYPE_OINTMENT && (b = n.data[b].data,
                                a.maxAmount = Math.min(p, b.maxPerDay - (b.usedPerDay + b.amount)));
                                break
                            }
                        }
                        q = !0
                    }
                })
            }
            a.smallBandagesAmount = 0;
            for (l = a.largeBandagesAmount = 0; l < n.data.length; l++) {
                if (n.data[l].data.inSlot == HeroItem.SLOT_INVENTORY) {
                    switch (n.data[l].data.itemType) {
                    case HeroItem.TYPE_BANDAGE_25:
                        a.smallBandagesAmount = n.data[l].data.amount;
                        break;
                    case HeroItem.TYPE_BANDAGE_33:
                        a.largeBandagesAmount = n.data[l].data.amount
                    }
                }
            }
        }
    });
    a.$on("$destroy", function() {
        a.l("itemId");
        a.l("maxCanUse");
        a.l("useInId")
    });
    a.showUpgradeBandageDialog = function(b) {
        a.closeOverlay();
        a.openOverlay("upgradeBandages", {
            bandageItemType: b
        })
    }
    ;
    a.HeroItem = HeroItem
}
;
window.useItemCtrl.$inject = ["$scope", "VillageService", "SessionService"];
window.useResourceBonusCtrl = function(a, c, b, f) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Hero.UseResourceBonus",
        inWindowPopupContentTemplate: "tpl/hero/overlay/useResourceBonus.html"
    });
    var g = HeroFace.get(b.getPlayerId());
    a.subscribe(g, function() {
        a.avatar = g.getViewModel()
    });
    a.resources = {
        1: 0,
        2: 0,
        3: 0,
        4: 0
    };
    a.screenState = "UseItem";
    a.timeForNextUse = function() {
        var a = new Date(1E3 * f.R());
        a.setHours(24, 0, 0, 0);
        return a.getTime() / 1E3
    }();
    b = "";
    "undefined" != typeof a.getParam("itemId") && (b = a.getParam("itemId"));
    a.item = HeroItem.get(b);
    a.bonusValue = 1;
    a.subscribe(a.item, function() {
        var b = 0, c;
        for (c in a.item.data.bonuses) {
            b = c,
            a.bonusValue = a.item.data.bonuses[c]
        }
        Travian.request("hero/getResourceForResourceChest", {
            percent: a.bonusValue,
            type: b
        }, function(b) {
            if (a.handleError(b)) {
                a.timeForNextUse = f.R() + parseInt(b.deltaForNextUse);
                for (var c = 1; 4 >= c; c++) {
                    a.resources[c] = b.resources[c]
                }
            }
        })
    });
    a.village = c.i();
    a.$on("activeVillageChanged", function() {
        a.village = c.i()
    });
    a.changeScreenStateToMerge = function() {
        a.screenState = "MergeItem";
        a.useAmount = {
            value: 2
        }
    }
    ;
    a.mergeItem = function() {
        Travian.writeRequest("hero/mergeItem", {
            id: a.item.data.id,
            amount: a.useAmount.value
        });
        a.closeOverlay()
    }
    ;
    a.useItem = function() {
        Travian.writeRequest("hero/useItem", {
            id: a.item.data.id,
            amount: 1,
            villageId: c.getActiveVillageId()
        });
        a.closeOverlay()
    }
}
;
window.useResourceBonusCtrl.$inject = ["$scope", "VillageService", "SessionService", "ServertimeService"];
window.useResourcePilesCtrl = function(a, c) {
    a.PILE_SIZE_FACTOR = Travian.Config.heroItems.pileSizeFactor;
    var b = a.getParam("itemId");
    a.item = HeroItem.get(b);
    a.resourceType = HeroItem.getPileResourceId(a.item.data.itemType);
    a.resourceType || a.closeOverlay();
    a.resourceName = Resources.STRING[a.resourceType];
    a.resourceNameFirstUpper = a.overlayConfig.k({
        inWindowPopupTitle: "Hero.UseResourcePiles_" + a.resourceType,
        inWindowPopupContentTemplate: "tpl/hero/overlay/useResourcePiles.html"
    });
    a.pileSize = HeroItem.getPileSize(a.item.data.itemType);
    for (var f in a.item.data.bonuses) {
        a.amountPerPile = a.item.data.bonuses[f]
    }
    a.sliderData = {
        value: a.item.data.amount
    };
    a.activeVillage = c.i();
    a.$on("activeVillageChanged", function() {
        a.activeVillage = c.i()
    });
    a.transformResources = function(c) {
        Travian.writeRequest("hero/transformPiles", {
            id: b,
            amount: a.sliderData.value,
            merge: c
        })
    }
    ;
    a.transferResources = function() {
        Travian.writeRequest("hero/useItem", {
            id: b,
            amount: a.sliderData.value,
            villageId: c.getActiveVillageId()
        })
    }
}
;
window.useResourcePilesCtrl.$inject = ["$scope", "VillageService"];
window.attributesCtrl = function(a, c, b) {
    function f() {
        for (var b = 0, c = 0; c < a.attributes.length; c++) {
            var e = a.attributes[c]
              , b = b + parseInt(a.changes[e])
        }
        for (c = 0; c < a.attributes.length; c++) {
            e = a.attributes[c],
            a.maxFreePoints[e] = Math.min(100 - a.hero[e], a.hero.freePoints + a.changes[e] - b)
        }
        a.freePoints = parseInt(a.hero.freePoints) - b
    }
    function g() {
        a.storage = m.getResources();
        a.newHomeVillage = m.data.name;
        a.hero = h.data;
        a.w.hero = a.hero;
        for (var c = 0; c < a.attributes.length; c++) {
            a.hero[a.attributes[c]] = parseInt(a.hero[a.attributes[c]]),
            a.disabledAttributes[a.attributes[c]] = ("attBonusPoints" === a.attributes[c] || "defBonusPoints" === a.attributes[c]) && 10 > a.hero.level ? !0 : !1
        }
        a.hero.resBonusName = Resources.STRING[h.data.resBonusType];
        a.hero.resBonusValue = 0 == h.data.resBonusType ? a.valuePoints.resBonusAll * a.hero.resBonusPoints : a.valuePoints.resBonusSingle * a.hero.resBonusPoints;
        a.hero.bonuses.hasOwnProperty(HeroItem.BONUS_XP) && (a.hero.bonusXp = a.hero.bonuses[HeroItem.BONUS_XP]);
        var c = a.hero.xp
          , e = a.hero.xpThisLevel
          , g = a.hero.xpNextLevel;
        a.hero.xpPerc = Math.floor(100 * ((c - e) / (g - e)));
        a.hero.xpToNextLevel = g - c;
        a.hero.nextLevel = a.hero.level + 1;
        a.dest = id2xy(a.hero.destVillageId);
        a.freePoints = a.hero.freePoints;
        a.changes.resBonusType = a.hero.resBonusType;
        c = b.qa(h.data.villageId);
        null != c && (a.homeVillageName = c.data.name);
        a.heroItemsHealthRegen = a.hero.bonuses[HeroItem.BONUS_HEALTH_REGEN] || 0;
        f()
    }
    function e() {
        a.hero && (f(),
        a.checkButtonClass())
    }
    a.HeroItem = HeroItem;
    a.HeroModel = Hero;
    a.saveBtnDisabled = !0;
    a.freePoints = 0;
    a.resBonusType = 0;
    a.attributes = ["fightStrengthPoints", "attBonusPoints", "defBonusPoints", "resBonusPoints"];
    a.changes = {
        fightStrengthPoints: 0,
        attBonusPoints: 0,
        defBonusPoints: 0,
        resBonusPoints: 0,
        resBonusType: 0
    };
    a.total = {
        fightStrengthPoints: 0,
        attBonusPoints: 0,
        defBonusPoints: 0,
        resBonusPoints: 0,
        resBonusType: 0
    };
    a.valuePoints = {
        fightStrengthPoints: 0,
        attBonusPoints: 0,
        defBonusPoints: 0,
        resBonusPoints: 1,
        resBonusAll: 0,
        resBonusSingle: 0,
        resBonusBaseAll: 0,
        resBonusBaseSingle: 0
    };
    a.maxFreePoints = {
        fightStrengthPoints: 0,
        attBonusPoints: 0,
        defBonusPoints: 0,
        resBonusPoints: 0
    };
    a.disabledAttributes = {
        fightStrengthPoints: !1,
        attBonusPoints: !1,
        defBonusPoints: !1,
        resBonusPoints: !1
    };
    a.resTypes = Resources.STRING;
    a.newHomeVillage = "";
    a.playerId = c.getPlayerId();
    c.m(function() {
        a.isOwner = c.Pb()
    });
    var h = Hero.get(a.playerId)
      , m = b.i();
    a.isRevivable = function() {
        return m ? m.hasEnoughResources(h.data.reviveCosts) : !1
    }
    ;
    a.saveChanges = function() {
        Travian.writeRequest("hero/addAttributePoints", a.changes, function() {
            a.changes.fightStrengthPoints = 0;
            a.changes.attBonusPoints = 0;
            a.changes.defBonusPoints = 0;
            a.changes.resBonusPoints = 0;
            a.changes.resBonusType = a.hero.resBonusType;
            a.checkButtonClass()
        })
    }
    ;
    a.checkButtonClass = function() {
        a.saveBtnDisabled = !(0 < a.changes.fightStrengthPoints || 0 < a.changes.attBonusPoints || 0 < a.changes.defBonusPoints || 0 < a.changes.resBonusPoints || a.changes.resBonusType != a.hero.resBonusType)
    }
    ;
    a.revive = function() {
        Travian.writeRequest("hero/revive", {
            villageId: m.data.villageId
        }, function(b) {
            a.handleError(b, "reviveError")
        })
    }
    ;
    a.changeResourceType = function(b) {
        0 <= b && (5 > b && a.changes.resBonusType != b) && (a.changes.resBonusType = b,
        a.checkButtonClass())
    }
    ;
    a.subscribe(h, g);
    a.$on("activeVillageChanged", function() {
        m = b.i();
        g()
    });
    a.$watch("changes.fightStrengthPoints", e);
    a.$watch("changes.attBonusPoints", e);
    a.$watch("changes.defBonusPoints", e);
    a.$watch("changes.resBonusPoints", e);
    (function() {
        Travian.request("hero/getValuePoints", null, function(b) {
            a.valuePoints.fightStrengthPoints = parseFloat(b.fightStrength);
            a.valuePoints.fightStrengthBaseLevel = parseFloat(b.fightStrengthBaseLevel);
            a.valuePoints.attBonusPoints = parseFloat(b.attBonus);
            a.valuePoints.defBonusPoints = parseFloat(b.defBonus);
            a.valuePoints.resBonusSingle = parseFloat(b.resBonusSingle);
            a.valuePoints.resBonusAll = parseFloat(b.resBonusAll);
            a.valuePoints.resBonusBaseSingle = parseFloat(b.resBonusBaseSingle);
            a.valuePoints.resBonusBaseAll = parseFloat(b.resBonusBaseAll);
            g()
        })
    }
    )();
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_HERO + "_" + PlayerProgressTrigger.HELP_PAGE_HERO_PRODUCTION)
}
;
window.attributesCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.auctionsBidsCtrl = function(a, c) {
    function b() {
        e = [];
        for (var b = 0; b < f.data.length; b++) {
            var c = f.data[b].data, h;
            h = -1 == c.slot || 7 == c.slot ? c.itemTypeId : "Slot" + c.slot;
            c.finished = a.currentServerTime >= c.timeEnd ? !0 : !1;
            h = h == a.showItemsType;
            (-2 == a.showItemsType || h) && e.push(c)
        }
        a.displayCurrentPage(a.currentPage)
    }
    a.itemsPerPage = 10;
    a.currentPage = 1;
    a.showItemsType = -2;
    a.player = c.p();
    a.bid = {
        error: ""
    };
    var f = Auction.getCollection("bidden")
      , g = Bid.getCollection("own")
      , e = []
      , h = [];
    a.displayCurrentPage = function(b) {
        null == b && (b = 1);
        a.numberOfItems = e.length;
        a.currentPage = b;
        e.sort(function(a, b) {
            return a.finished != b.finished ? a.finished ? 1 : -1 : b.timeEnd == a.timeEnd ? b.id - a.id : a.finished ? b.timeEnd - a.timeEnd : a.timeEnd - b.timeEnd
        });
        b = a.itemsPerPage * (b - 1);
        var c = Math.min(b + a.itemsPerPage, e.length);
        a.auctions = e.slice(b, c);
        for (b = 0; b < a.auctions.length; b++) {
            c = a.auctions[b],
            c.stackable && (c.pricePerItem = Math.round(100 * (c.price / c.amount)) / 100),
            "undefined" != typeof h[c.id] && (c.priceInput = h[c.id].maxBid),
            c.finished && "undefined" != typeof h[c.id] && (c.bidPlaceholder = h[c.id].maxBid)
        }
    }
    ;
    a.subscribe(f, b);
    a.subscribe(g, function() {
        h = [];
        for (var a = 0; a < g.data.length; a++) {
            var c = g.data[a].data;
            h[c.auctionId] = c
        }
        b()
    });
    a.filter = function(c, e) {
        a.foundAuctions = {
            active: !1,
            finished: !1
        };
        if ("undefined" !== typeof e) {
            var f = Travian.Config.heroItems[c].slot;
            -1 != f && 7 != f && (c = "Slot" + f)
        }
        a.showItemsType = a.showItemsType != c ? c : -2;
        b()
    }
    ;
    a.placeBid = function(b) {
        for (var c, e = 0; e < a.auctions.length; e++) {
            if (a.auctions[e].id == b) {
                c = a.auctions[e];
                break
            }
        }
        (c.priceInput || 0) > a.player.data.silver + c.highestBid ? (a.error = "Error.NotEnoughSilver",
        c.error = !0) : (c.priceInput || 0) <= c.price ? (a.error = "Auction.MinBidError",
        a.bid.minPrice = c.price) : Travian.writeRequest("auctions/placeBid", {
            auctionId: c.id,
            bidAmount: c.priceInput
        }, function(b) {
            "undefined" != typeof b.errors && (a.bid.error = "Error." + b.errors[0].message,
            delete b.errors)
        })
    }
    ;
    a.$on("$destroy", function() {
        for (var a = 0; a < f.data.length; a++) {
            delete f.data[a].priceInput,
            delete f.data[a].data.priceInput
        }
    });
    Cache.G(f, 1);
    Cache.G(g, 1)
}
;
window.auctionsBidsCtrl.$inject = ["$scope", "SessionService"];
window.auctionsBuyCtrl = function(a, c) {
    function b() {
        a.bidsById = {};
        for (var b = 0; b < e.data.length; b++) {
            a.hasBidById[e.data[b].data.id] = !0
        }
    }
    function f() {
        a.displayCurrentPage(a.currentPage)
    }
    a.itemsPerPage = 10;
    a.currentPage = 1;
    a.showItemsType = -2;
    a.bid = {
        error: ""
    };
    a.player = c.p();
    a.hasBidById = {};
    var g = Cache.Ta(Auction.getCollection, ["running"]);
    g.filled = !0;
    a.auctions = g;
    var e = Auction.getCollection("bidden")
      , h = Bid.getCollection("own")
      , m = null
      , l = 0
      , p = -2
      , n = ""
      , q = "";
    a.displayCurrentPage = function(c) {
        null == c && (c = 1);
        var e = {
            filterItemType: l,
            filterSlot: p
        };
        JSON.stringify(e) != n && (n = JSON.stringify(e),
        Travian.request("auctions/getRunningAuctionAmount", angular.copy(e), function(b) {
            a.numberOfItems = b.data
        }));
        e.page = c - 1;
        a.currentPage = c;
        null != m && JSON.stringify(e) != q && (q = JSON.stringify(e),
        Travian.request("auctions/getRunningAuctionPage", e, function() {
            for (var b = 0; b < a.auctions.data.length; b++) {
                var c = a.auctions.data[b];
                m[c.data.id] && !c.priceInput && (c.priceInput = m[c.data.id].maxBid)
            }
        }, y(), !0));
        b()
    }
    ;
    a.subscribe(g, f);
    a.subscribe(e, b);
    a.subscribe(h, function() {
        m = [];
        for (var a = 0; a < h.data.length; a++) {
            var b = h.data[a].data;
            m[b.auctionId] = b
        }
        f()
    });
    a.filter = function(b, c) {
        "Slot" == ("" + b).substr(0, 4) ? (l = 0,
        p = parseInt(b.substr(4))) : (l = b,
        p = -2);
        if ("undefined" !== typeof c) {
            var e = Travian.Config.heroItems[b].slot;
            -1 != e && 7 != e && (b = "Slot" + e)
        }
        a.showItemsType != b ? a.showItemsType = b : (a.showItemsType = -2,
        l = 0,
        p = -2);
        a.currentPage = 1;
        f()
    }
    ;
    a.placeBid = function(b) {
        for (var c, e = 0; e < a.auctions.data.length; e++) {
            if (a.auctions.data[e].data.id == b) {
                c = a.auctions.data[e];
                break
            }
        }
        (c.priceInput || 0) > a.player.data.silver + c.data.highestBid ? (a.error = "Error.NotEnoughSilver",
        c.error = !0) : (b = c.data.price,
        0 < c.data.highestBidderPlayerId && b++,
        (c.priceInput || 0) < b ? (a.error = "Auction.MinBidError",
        a.bid.minPrice = b) : (a.hasBidById[c.data.id] = !0,
        Travian.writeRequest("auctions/placeBid", {
            auctionId: parseInt(c.data.id),
            bidAmount: c.priceInput
        }, function(b) {
            a.error = "";
            "undefined" != typeof b.errors && (a.bid.error = "Error." + b.errors[0].message,
            delete b.errors)
        })))
    }
    ;
    a.$on("$destroy", function() {
        for (var a = 0; a < e.data.length; a++) {
            delete e.data[a].priceInput,
            delete e.data[a].data.priceInput
        }
    });
    Cache.G(e, 1)
}
;
window.auctionsBuyCtrl.$inject = ["$scope", "SessionService"];
window.auctionsCtrl = function(a, c) {
    a.auctionsTabs = {};
    a.auctionsTabs.tabs = ["Buy", "Sell", "Bids", "Silver", "ExchangeOffice"];
    a.auctionsTabs.bodyTemplatePrefix = "tpl/hero/tabs/auctions/";
    a.auctionsTabs.routeNamedParam = "subtab";
    a.auctionsTabs.tabName = "subtab";
    a.auctionsTabs.tabType = "subtab";
    a.auctionsTabs.disableScrolling = !0;
    a.auctionsTabs.disableScrollingForTabs = ["Buy", "Sell", "Silver"];
    a.player = c.p();
    a.blockedSilver = 0;
    a.silverBlockingAuctions = Auction.getCollection("highestBidder");
    a.subscribe(a.silverBlockingAuctions, function() {
        for (var b = a.blockedSilver = 0; b < a.silverBlockingAuctions.data.length; b++) {
            a.blockedSilver += a.silverBlockingAuctions.data[b].data.highestBid
        }
    });
    Cache.G(a.silverBlockingAuctions, 1);
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_HERO + "_" + PlayerProgressTrigger.HELP_PAGE_AUCTIONS)
}
;
window.auctionsCtrl.$inject = ["$scope", "SessionService"];
window.auctionsSellCtrl = function(a, c) {
    function b() {
        a.totalAmount = a.price * a.sellAmount.value
    }
    a.currentItem = null;
    a.sellAmount = {
        value: 0
    };
    a.price = 0;
    a.$watch("sellAmount.value", b);
    a.displayItem = function(f) {
        a.currentItem = f;
        a.currentItem.auction = !1;
        Travian.writeRequest("auctions/getSellerPayout", {
            itemId: a.currentItem.data.id,
            amount: 1
        }, function(g) {
            a.handleError(g, "exchangeError") && (a.isNpcBuying = g.isNpcBuying,
            a.isNpcBuying ? (a.price = g.pricePerItem,
            a.maxAmount = g.amount,
            b()) : (a.maxAmount = f.data.amount,
            a.price = 0,
            a.calcTimeEnd = +g.calcTimeEnd),
            c(function() {
                a.sellAmount.value = 1
            }, 1))
        })
    }
    ;
    a.displayAuction = function(b) {
        a.currentItem = b;
        a.currentItem.auction = !0
    }
    ;
    a.sellItem = function() {
        var b = 1;
        a.currentItem.data.stackable && (b = a.sellAmount.value);
        a.$on("auctionsSellingConfirmed", function() {
            a.currentItem = null
        });
        a.openOverlay("confirmSelling", {
            itemId: a.currentItem.data.id,
            amount: b
        })
    }
    ;
    a.clickHandling = a.displayItem
}
;
window.auctionsSellCtrl.$inject = ["$scope", "$timeout"];
window.auctionsSilverBookkeepingCtrl = function(a) {
    function c() {
        var b = a.player.data.silver + a.blockedSilver
          , c = a.silverEvents.data;
        if (0 != c.length) {
            for (var g = c.length - 1; 0 <= g; g--) {
                c[g].data.calcPreviousSilver = b,
                b -= c[g].data.silver
            }
            a.startingBalance = b
        }
    }
    a.showBlockedSilver = !1;
    a.startingBalance = 0;
    a.SilverChange = SilverChange;
    a.silverEvents = SilverChange.getCollection("lastWeek");
    a.subscribe(a.silverEvents, c);
    a.subscribe(a.player, c);
    Cache.G(a.silverEvents, 1);
    a.switchShowBlockedSilver = function() {
        a.showBlockedSilver = !a.showBlockedSilver
    }
}
;
window.auctionsSilverBookkeepingCtrl.$inject = ["$scope"];
window.cardGameCtrl = function(a, c, b, f) {
    function g(b) {
        if ("undefined" !== typeof b.result) {
            for (var f = 1; 5 >= f; f++) {
                a.cardResults[f] = b.result[f]
            }
            b.type === PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE ? (Cache.B("CardgameRolls:" + c.getPlayerId()),
            a.cardgameRolls = CardgameRolls.get(c.getPlayerId()),
            e(a.gameStates.yourWonCard)) : b.type === PremiumFeature.FEATURE_NAME_CARDGAME_4OF5 && e(a.gameStates.play4of5selectCards)
        }
    }
    function e(b) {
        a.currentState = b;
        b == a.gameStates.startPlay && (a.cardResults = {
            1: {
                rewardTypeId: 0,
                rewardAmount: 0
            },
            2: {
                rewardTypeId: 0,
                rewardAmount: 0
            },
            3: {
                rewardTypeId: 0,
                rewardAmount: 0
            },
            4: {
                rewardTypeId: 0,
                rewardAmount: 0
            },
            5: {
                rewardTypeId: 0,
                rewardAmount: 0
            }
        })
    }
    function h() {
        var b = !1
          , c = !1
          , e = !1;
        0 < a.chosenCard && ("prize_freePlay_huge_illu" == a.iconClasses[a.cardResults[a.chosenCard].rewardTypeId] ? c = !0 : "prize_gold_huge_illu" == a.iconClasses[a.cardResults[a.chosenCard].rewardTypeId] || "prize_silver_huge_illu" == a.iconClasses[a.cardResults[a.chosenCard].rewardTypeId] ? e = !0 : b = !0);
        for (var h = 1; 5 >= h; h++) {
            a.chosenCards4of5[h - 1] && ("prize_freePlay_huge_illu" == a.iconClasses[a.cardResults[h].rewardTypeId] ? c = !0 : "prize_gold_huge_illu" == a.iconClasses[a.cardResults[h].rewardTypeId] || "prize_silver_huge_illu" == a.iconClasses[a.cardResults[h].rewardTypeId] ? e = !0 : b = !0)
        }
        b && (x = f(p, 500));
        c && (v = f(q, 500));
        e && (D = f(r, 500))
    }
    function m() {
        a.cardgameRolls.data.hasDailyRoll ? a.updateVoucher() : Travian.request("player/getMidnight", {}, function(b) {
            a.midnight = parseInt(b.data, 10)
        })
    }
    function l() {
        a.chosenCard = 0;
        a.disablePremium = !1;
        a.chosenCards4of5 = [!1, !1, !1, !1, !1];
        a.amountChosen4of5 = 0;
        e(a.gameStates.startPlay)
    }
    function p() {
        $(".tabulation.maintab .tab:first-child").addClass("marked");
        s = f(function() {
            n()
        }, 400)
    }
    function n() {
        $(".tabulation.maintab .tab:first-child").removeClass("marked")
    }
    function q() {
        Cache.B("CardgameRolls:" + c.getPlayerId());
        a.cardgameRolls = CardgameRolls.get(c.getPlayerId());
        m()
    }
    function r() {
        Cache.B("Player:" + c.getPlayerId());
        Player.get(c.getPlayerId())
    }
    var t = 0
      , u = null
      , w = null
      , s = null
      , x = null
      , v = null
      , D = null;
    a.player = c.p();
    a.goldCost = Travian.Config.goldConfig;
    a.premiumFeatureNameSingle = PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE;
    a.premiumFeatureName4of5 = PremiumFeature.FEATURE_NAME_CARDGAME_4OF5;
    a.disablePremium = !1;
    a.chosenCard = 0;
    a.iconClasses = {
        1: "prize_healingPotion_huge_illu",
        2: "upgrade_armor_huge_illu",
        3: "upgrade_weapon_huge_illu",
        4: "upgrade_accessory_huge_illu",
        5: "upgrade_helmet_huge_illu",
        6: "upgrade_shoes_huge_illu",
        7: "prize_resourceBonusBronze_huge_illu",
        8: "prize_resourceBonusSilver_huge_illu",
        9: "prize_resourceBonusGold_huge_illu",
        10: "prize_cropBonusBronze_huge_illu",
        11: "prize_cropBonusSilver_huge_illu",
        12: "prize_cropBonusGold_huge_illu",
        13: "prize_adventurePoint_huge_illu",
        14: "prize_gold_huge_illu",
        15: "prize_silver_huge_illu",
        16: "prize_freePlay_huge_illu",
        17: "prize_buildingArea_huge_illu",
        18: "prize_finishNow_huge_illu",
        19: "prize_npcTrader_huge_illu",
        20: "prize_traderArriveInstantly_huge_illu",
        21: "prize_candy_huge_illu"
    };
    a.noAmountStarTypes = [14, 15];
    a.cardResults = {
        1: {
            rewardTypeId: 0,
            rewardAmount: 0
        },
        2: {
            rewardTypeId: 0,
            rewardAmount: 0
        },
        3: {
            rewardTypeId: 0,
            rewardAmount: 0
        },
        4: {
            rewardTypeId: 0,
            rewardAmount: 0
        },
        5: {
            rewardTypeId: 0,
            rewardAmount: 0
        }
    };
    a.chosenCards4of5 = [!1, !1, !1, !1, !1];
    a.amountChosen4of5 = 0;
    a.amountMax4of5 = 4;
    a.gameStates = {
        initial: 0,
        startPlay: 1,
        selectCard: 2,
        play4of5selectCards: 3,
        yourWonCard: 4,
        discardedCards: 5,
        discardedCardsRemove: 6,
        play4of5GainCards: 7
    };
    a.currentState = a.gameStates.initial;
    Cache.B("CardgameRolls:" + c.getPlayerId());
    a.cardgameRolls = CardgameRolls.get(c.getPlayerId());
    a.subscribe(a.cardgameRolls, m);
    Travian.request("player/getCardgameResult", {}, function(b) {
        null != b.result && (a.disablePremium = !0,
        e(a.gameStates.play4of5selectCards),
        g(b))
    });
    a[PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE] = function(b) {
        a.disablePremium = !0;
        a.chosenCard = b;
        a.cardgameRolls.data.hasDailyRoll ? (a.cardgameRolls.data.hasDailyRoll = 0,
        a.cardgameRolls.data.freeRolls -= 1,
        m()) : 0 < a.cardgameRolls.data.freeRolls && (a.cardgameRolls.data.freeRolls -= 1);
        return {
            selectedCard: b,
            callback: g,
            notEnoughGoldCallback: l
        }
    }
    ;
    a[PremiumFeature.FEATURE_NAME_CARDGAME_4OF5] = function() {
        a.disablePremium = !0;
        return {
            callback: g,
            notEnoughGoldCallback: l
        }
    }
    ;
    a.chooseCard4of5 = function(b) {
        if (a.currentState == a.gameStates.play4of5selectCards) {
            b -= 1;
            a.chosenCards4of5[b] = !a.chosenCards4of5[b];
            for (b = a.amountChosen4of5 = 0; b < a.chosenCards4of5.length; b++) {
                a.chosenCards4of5[b] && a.amountChosen4of5++
            }
            4 == a.amountChosen4of5 && Travian.writeRequest("player/selectCards", {
                selectedCards: a.chosenCards4of5
            }, function() {
                e(a.gameStates.play4of5GainCards);
                h();
                u = f(a.resetToStartPlay, 500)
            })
        }
    }
    ;
    a["continue"] = function() {
        e(a.gameStates.discardedCards);
        h()
    }
    ;
    a.resetToStartPlay = function() {
        e(a.gameStates.discardedCardsRemove);
        w = f(l, 1E3)
    }
    ;
    a.cardHoverStart = function() {
        if (a.currentState == a.gameStates.startPlay || a.currentState == a.gameStates.initial) {
            t = a.currentState,
            e(a.gameStates.selectCard)
        }
    }
    ;
    a.cardHoverStop = function() {
        a.currentState == a.gameStates.selectCard && e(t)
    }
    ;
    a.updateVoucher = function() {
        Cache.B("Voucher:" + c.getPlayerId());
        Voucher.get(c.getPlayerId())
    }
    ;
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_PREMIUM + "_" + PlayerProgressTrigger.HELP_PAGE_CARD_GAME);
    a.$on("$destroy", function() {
        f.cancel(u);
        f.cancel(w);
        f.cancel(x);
        f.cancel(v);
        s && (f.cancel(s),
        n());
        D && (f.cancel(D),
        r())
    })
}
;
window.cardGameCtrl.$inject = ["$scope", "SessionService", "ServertimeService", "$timeout"];
window.exchangeOfficeCtrl = function(a, c, b) {
    function f() {
        a.exchangeSuccess = {
            message: "",
            gold: 0,
            silver: 0
        }
    }
    function g(b) {
        var c = b.getType()
          , e = b.getAmount();
        a.exchangeError = "";
        a.exchangeErrorParam = "";
        b.result = c === ExchangeOffice.TYPE_SILVER ? Math.round(e / b.getRate()) : Math.round(e * b.getRate())
    }
    var e = c.p();
    this.cf = function(b) {
        f();
        a.handleError(b, "exchangeError");
        "undefined" !== typeof b.success && (a.exchangeSuccess.message = b.success.message,
        a.exchangeSuccess.silver = b.success.silver,
        a.exchangeSuccess.gold = b.success.gold)
    }
    ;
    a.exchangeSilver = new ExchangeOffice(e,this.cf);
    a.exchangeSilver.init(ExchangeOffice.TYPE_SILVER);
    a.exchangeGold = new ExchangeOffice(e,this.cf);
    a.exchangeGold.init(ExchangeOffice.TYPE_GOLD);
    a[PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE] = function(b) {
        return "gold" == b ? a.exchangeGold.premiumParamsCallback() : a.exchangeSilver.premiumParamsCallback()
    }
    ;
    a.PremiumFeatureName = PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE;
    f();
    g(a.exchangeSilver);
    g(a.exchangeGold);
    var h = e.subscribe(function() {
        a.exchangeSilver.calculateMaxAmount();
        a.exchangeGold.calculateMaxAmount();
        b(function() {
            a.exchangeSilver.initAmount();
            a.exchangeGold.initAmount()
        }, 10);
        g(a.exchangeSilver);
        g(a.exchangeGold)
    });
    a.$on("$destroy", function() {
        e.unsubscribe(h)
    });
    a.$watch("exchangeSilver.amount.value", function() {
        a.silverToGoldButtonTooltip = 0 == a.exchangeSilver.amount.value ? "ExchangeOffice.exchangeSilverToGoldDisabled" : "ExchangeOffice.exchangeSilverToGoldNow";
        g(a.exchangeSilver)
    });
    a.$watch("exchangeGold.amount.value", function() {
        a.goldToSilverButtonTooltip = 0 == a.exchangeGold.amount.value ? "ExchangeOffice.exchangeGoldToSilverDisabled" : "ExchangeOffice.exchangeGoldToSilverNow";
        g(a.exchangeGold)
    })
}
;
window.exchangeOfficeCtrl.$inject = ["$scope", "SessionService", "$timeout"];
window.inventoryCtrl = function(a, c, b, f) {
    function g(b) {
        "undefined" != typeof b.errors && (a.itemError = b.errors[0].message,
        delete b.errors)
    }
    a.lastView = 0;
    a.viewedItems = {};
    a.newHomeVillage = "";
    a.playerId = b.getPlayerId();
    var e = c.i()
      , h = f(function() {
        Travian.writeRequest("hero/setLastInventoryView", {})
    }, 5E3);
    a.checkDrop = function(b) {
        b = b();
        if ("heroitem" == b.name.toLowerCase()) {
            if (b.data.notUsableItem || 0 < b.data.inSlot) {
                return !1
            }
            a.useItem(b);
            requestAngularApply();
            return !0
        }
        return !1
    }
    ;
    a.dragObj = {
        dragStart: function() {
            a.dragItem = !0;
            requestAngularApply()
        },
        dragStop: function() {
            a.dragItem = !1;
            a.changeSlotHighlight(0)
        },
        dropable: function(b, c) {
            var e = b();
            if ("heroitem" == e.name.toLowerCase() && "heroitem" == c.name.toLowerCase()) {
                var f = e.data.itemType == HeroItem.TYPE_OINTMENT ? HeroItem.SLOT_BAG : e.data.slot
                  , h = c.data.itemType == HeroItem.TYPE_OINTMENT ? HeroItem.SLOT_BAG : c.data.slot;
                if (e.data.inSlot > HeroItem.SLOT_INVENTORY && c.filled && f != h || e.data.slot == HeroItem.SLOT_INSTANT_USE && c.data.inSlot > HeroItem.SLOT_INVENTORY && e.data.itemType !== HeroItem.TYPE_OINTMENT) {
                    return !1
                }
                if (h == HeroItem.SLOT_BAG && e.data.itemType != c.data.itemType && (c.data.inSlot == HeroItem.SLOT_BAG || e.data.inSlot == HeroItem.SLOT_BAG)) {
                    return c.data.inSlot == HeroItem.SLOT_INVENTORY && a.useItem(c),
                    e.data.inSlot == HeroItem.SLOT_INVENTORY && a.useItem(e),
                    !0
                }
                h = !0 == e.data.notUsableItem && "NoEquipItemHeroMoving" == e.data.notUsableReason;
                f = !0 == c.data.notUsableItem && "NoEquipItemHeroMoving" == c.data.notUsableReason;
                if (e.data.hasSpeedBonus && h || c.data.hasSpeedBonus && f || e.data.clickDisabled && c.data.inSlot > HeroItem.SLOT_INVENTORY) {
                    return !1
                }
                var f = {
                    id1: e.data.id,
                    id2: c.data.id
                }
                  , g = c.data.inventorySlotNr;
                c.data.inSlot > HeroItem.SLOT_INVENTORY ? (f = {
                    id1: c.data.id,
                    id2: e.data.id,
                    newSlotNr: 0,
                    equip: !0
                },
                e.data.inSlot = c.data.slot,
                c.data.inventorySlotNr = e.data.inventorySlotNr,
                c.data.inSlot = 0,
                e.data.inventorySlotNr = 0,
                a.buildViewModels()) : (0 < e.data.inSlot && (c.data.inSlot = e.data.slot,
                e.data.inventorySlotNr = c.data.inventorySlotNr,
                e.data.inSlot = 0,
                c.data.inventorySlotNr = 0,
                a.buildViewModels()),
                h = c.data.inventorySlotNr,
                e.data.inventorySlotNr && (c.data.inventorySlotNr = e.data.inventorySlotNr),
                h ? e.data.inventorySlotNr = h : e.data.inSlot = c.data.slot);
                doAngularApply();
                0 == f.id2 && (f.newSlotNr = g);
                Travian.writeRequest("hero/switchItems", f, function() {
                    z.Ab();
                    a.buildViewModels();
                    requestAngularApply()
                });
                return !0
            }
            return !1
        }
    };
    a.useItem = function(b) {
        z.Ab();
        a.dragItem = !1;
        a.viewedItems[b.data.id] = !0;
        if (b.data.premiumItem) {
            b.data.itemType == HeroItem.TYPE_NPC_TRADER && a.openWindow("npcTrader")
        } else {
            if (0 < b.data.inSlot) {
                a.disequip(b)
            } else {
                if (b.data.itemType == HeroItem.TYPE_CANDY) {
                    a.openOverlay("heroEditor", {
                        option: "cosmetic",
                        scrollTo: "halloween.locked,halloween"
                    })
                } else {
                    if (("undefined" == typeof b.data.stackable || !1 == b.data.stackable) && -1 != b.data.slot) {
                        Travian.writeRequest("hero/useItem", {
                            id: b.data.id,
                            amount: 1,
                            villageId: e.data.villageId
                        }, function(b) {
                            a.$root.$broadcast("heroItemUsed");
                            g(b)
                        })
                    } else {
                        if (!b.data.notUsableItem && 0 < b.data.maxCanUse && ("undefined" == typeof b.data.maxPerDay || b.data.usedPerDay < b.data.maxPerDay)) {
                            switch (a.closeOverlay(),
                            b.data.itemType) {
                            case HeroItem.TYPE_TREASURES:
                                a.openOverlay("sellStolenGoods", {
                                    itemId: b.data.id
                                });
                                break;
                            case HeroItem.TYPE_ARMOR_UPGRADE:
                                ;
                            case HeroItem.TYPE_WEAPON_UPGRADE:
                                ;
                            case HeroItem.TYPE_LEFT_HAND_UPGRADE:
                                ;
                            case HeroItem.TYPE_HELMET_UPGRADE:
                                ;
                            case HeroItem.TYPE_SHOE_UPGRADE:
                                a.openOverlay("upgradeItem", {
                                    itemId: b.data.id
                                });
                                break;
                            case HeroItem.TYPE_RESOURCE_BONUS_3:
                                ;
                            case HeroItem.TYPE_RESOURCE_BONUS_4:
                                ;
                            case HeroItem.TYPE_RESOURCE_BONUS_5:
                                ;
                            case HeroItem.TYPE_CROP_BONUS_3:
                                ;
                            case HeroItem.TYPE_CROP_BONUS_4:
                                ;
                            case HeroItem.TYPE_CROP_BONUS_5:
                                a.openOverlay("useResourceBonus", {
                                    itemId: b.data.id
                                });
                                break;
                            case HeroItem.TYPE_PILE_WOOD_SMALL:
                                ;
                            case HeroItem.TYPE_PILE_WOOD_MEDIUM:
                                ;
                            case HeroItem.TYPE_PILE_WOOD_LARGE:
                                ;
                            case HeroItem.TYPE_PILE_CLAY_SMALL:
                                ;
                            case HeroItem.TYPE_PILE_CLAY_MEDIUM:
                                ;
                            case HeroItem.TYPE_PILE_CLAY_LARGE:
                                ;
                            case HeroItem.TYPE_PILE_IRON_SMALL:
                                ;
                            case HeroItem.TYPE_PILE_IRON_MEDIUM:
                                ;
                            case HeroItem.TYPE_PILE_IRON_LARGE:
                                ;
                            case HeroItem.TYPE_PILE_CROP_SMALL:
                                ;
                            case HeroItem.TYPE_PILE_CROP_MEDIUM:
                                ;
                            case HeroItem.TYPE_PILE_CROP_LARGE:
                                a.openOverlay("useResourcePiles", {
                                    itemId: b.data.id
                                });
                                break;
                            case HeroItem.TYPE_BUILDING_GROUND:
                                a.openOverlay("unlockAdditionalLocation", {
                                    itemId: b.data.id
                                });
                                break;
                            case HeroItem.TYPE_FIREWORKS:
                                ;
                            case HeroItem.TYPE_SUPER_FIREWORKS:
                                a.openWindow("gameWorld", {
                                    tab: "Fireworks"
                                });
                                break;
                            case HeroItem.TYPE_BLACK_POWDER:
                                a.openWindow("gameWorld", {
                                    tab: "Fireworks",
                                    overlaygameWorld: "upgradeFireworks"
                                });
                                break;
                            default:
                                a.openOverlay("useItem", {
                                    itemId: b.data.id
                                })
                            }
                        }
                    }
                }
            }
        }
    }
    ;
    a.disequip = function(b) {
        b = b.data.id;
        "undefined" !== typeof b && Travian.writeRequest("hero/useItem", {
            id: b,
            villageId: e.data.villageId
        }, function(b) {
            a.$root.$broadcast("heroItemUsed");
            g(b)
        })
    }
    ;
    a.revive = function() {
        Travian.writeRequest("hero/revive", {
            villageId: e.data.villageId
        }, function(b) {
            a.handleError(b, "reviveError")
        })
    }
    ;
    a.changeSlotHighlight = function(b) {
        a.dragItem || (b > HeroItem.SLOT_INVENTORY ? a.highlightedSlot = b : delete a.highlightedSlot,
        requestAngularApply())
    }
    ;
    a.highlightObj = {
        turnOn: a.changeSlotHighlight,
        turnOff: a.changeSlotHighlight
    };
    a.clickHandling = a.useItem;
    a.filterTypes = ["cardGame", "consumable", "equipment"];
    a.activeFilter = null;
    a.setItemFilter = function(b) {
        a.activeFilter = a.activeFilter == b ? null : b
    }
    ;
    a.itemFilter = function(b) {
        switch (a.activeFilter) {
        case "cardGame":
            return b.data.cardGameItem;
        case "consumable":
            return !b.data.cardGameItem && (b.data.slot == HeroItem.SLOT_INSTANT_USE || b.data.slot == HeroItem.SLOT_BAG);
        case "equipment":
            return !b.data.cardGameItem && b.data.slot > HeroItem.SLOT_INVENTORY && b.data.slot < HeroItem.SLOT_BAG;
        default:
            return !0
        }
    }
    ;
    Travian.request("hero/getLastInventoryView", {}, function(b) {
        a.lastView = b.data
    });
    a.$on("activeVillageChanged", function() {
        e = c.i()
    });
    a.$on("$destroy", function() {
        clearTimeout(h)
    })
}
;
window.inventoryCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout"];
window.prestigeTabCtrl = function(a) {
    function c(a) {
        switch (a) {
        case "top10Attacker":
            return "movement_attack_small_flat_black";
        case "top10Climber":
            return "ranking_climber_small_flat_black";
        case "top10Defender":
            return "movement_defend_small_flat_black";
        case "top10Robber":
            return "unit_capacity_small_flat_black"
        }
    }
    a.weekPrestigeAmount = 0;
    a.PrestigeCondition = PrestigeCondition;
    Travian.request("player/getPrestigeConditions", {}, function(b) {
        a.remainingDays = b.remainingDays;
        a.conditions = b.conditions;
        a.weekPrestigeAmount = b.weekPrestigeAmount;
        for (var f = 0; f < a.conditions.length; f++) {
            a.conditions[f].title = Travian.translate("Prestige.ConditionName_" + a.conditions[f].type),
            a.conditions[f].type == PrestigeCondition.COMPLETE_ADVENTURE && (a.conditions[f].tooltipTranslationKey = "Prestige.Tooltip.AdventurePoints"),
            a.conditions[f].type == PrestigeCondition.ACQUIRE_VILLAGE && (a.conditions[f].tooltipTranslationKey = "Prestige.Tooltip.AcquireVillage")
        }
        for (f = 0; f < b.rankings.length; f++) {
            b.rankings[f].iconClass = c(b.rankings[f].type)
        }
        for (f = 0; f < b.top10rankings.length; f++) {
            b.top10rankings[f].iconClass = c(b.top10rankings[f].type),
            b.top10rankings[f].title = Travian.translate("Ranking.Top10Title." + b.top10rankings[f].type),
            a.weekPrestigeAmount += b.top10rankings[f].prestige
        }
        0 < a.weekPrestigeAmount && (a.weekPrestigeAmount = "+" + a.weekPrestigeAmount);
        a.stars = b.prestigeStars;
        a.top10rankings = b.top10rankings;
        a.rankings = b.rankings;
        a.gameworldPrestige = b.gameworldPrestige;
        a.nextLevelGlobalPrestige = b.nextLevelGlobalPrestige;
        a.globalPrestige = b.globalPrestige
    })
}
;
window.prestigeTabCtrl.$inject = ["$scope"];
window.abortVacationCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Settings.VacationMode.Abort.Title",
        inWindowPopupContentTemplate: "tpl/profile/settings/overlay/abortVacation.html"
    });
    a.floor = Math.floor;
    a.abortVacation = function() {
        Travian.writeRequest("player/changeVacationState")
    }
}
;
window.abortVacationCtrl.$inject = ["$scope"];
window.allPaymentMethodsCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Shop.Popup.AllPaymentMethods.Header",
        inWindowPopupContentTemplate: "tpl/shop/overlay/allPaymentMethods.html"
    });
    c.Xh(function(b) {
        a.pspUrl = b
    });
    c.Ch(function(b) {
        a.paymentMethods = b
    })
}
;
window.allPaymentMethodsCtrl.$inject = ["$scope", "PaynetService"];
window.goldFeaturesCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Shop.Popup.GoldFeatures.Header",
        inWindowPopupContentTemplate: "tpl/shop/overlay/goldFeatures.html"
    })
}
;
window.goldFeaturesCtrl.$inject = ["$scope", "PaynetService"];
window.orderHistoryCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Shop.Popup.OrderHistory.Header",
        inWindowPopupContentTemplate: "tpl/shop/overlay/orderHistory.html"
    });
    setTimeout(function() {
        c.gg("orders")
    });
    a.loading = !0;
    a.$on("shopSDKHistoryLoaded", function() {
        a.loading = !1;
        digestScope(a)
    })
}
;
window.orderHistoryCtrl.$inject = ["$scope", "PaynetService"];
window.sendEmailCtrl = function(a, c) {
    a.overlayConfig.k({
        overlayName: "sendEmail",
        inWindowPopupTitle: "InviteFriend.Email.SendInvitation",
        inWindowPopupContentTemplate: "tpl/shop/overlay/sendEmail.html"
    });
    a.valid = !1;
    a.input = {
        friendName: "",
        email: "",
        ownName: "",
        message: ""
    };
    a.placeholder = {
        friendName: Travian.translate("InviteFriend.Email.FriendName.Placeholder"),
        email: Travian.translate("InviteFriend.Email.Email.Placeholder"),
        ownName: Travian.translate("InviteFriend.Email.OwnName.Placeholder"),
        message: Travian.translate("InviteFriend.Email.Message.Placeholder")
    };
    a.checkInput = function() {
        a.valid = !0;
        if (1 > a.input.friendName.length || 1 > a.input.email.length || 1 > a.input.ownName.length) {
            a.valid = !1
        }
        if (4 > a.input.email.length || 0 > a.input.email.indexOf("@") || 0 > a.input.email.indexOf(".")) {
            a.valid = !1
        }
    }
    ;
    a.invite = function() {
        Travian.request("player/sendInvitation", a.input, function(b) {
            "undefined" != typeof b.errors ? a.handleError(b) : (c.$broadcast("referralEmailSent"),
            a.closeOverlay())
        })
    }
}
;
window.sendEmailCtrl.$inject = ["$scope", "$rootScope"];
window.inviteFriendCtrl = function(a, c) {
    function b() {
        Travian.request("player/getInvitationsList", {}, function(b) {
            null != b.pendingBonusCount && (a.bonusesToCollect = b.pendingBonusCount);
            null != b.open && (a.invitations.open = b.open);
            if (null != b.accepted) {
                var c = b.accepted
                  , h = [];
                for (b = 1; 4 >= b; b++) {
                    h.push({
                        id: b,
                        state: f.NOT_GRANTED,
                        nk: ""
                    })
                }
                angular.forEach(c, function(a, b) {
                    c[b].bonuses = angular.copy(h);
                    c[b].collectible = !1;
                    c[b].collectibleAmount = 0;
                    c[b].invitedAccountName || (c[b].invitedAccountName = c[b].invitedEmail);
                    a.bonus.length && angular.forEach(a.bonus, function(a) {
                        c[b].bonuses[a.id - 1].state = a.state;
                        c[b].bonuses[a.id - 1].worldName = a.grantedBy.worldName;
                        a.state == f.GRANTED && (c[b].collectible = !0,
                        c[b].collectibleAmount++)
                    })
                });
                a.invitations.accepted = c
            }
        })
    }
    a.tabConfig = {
        tabs: ["InviteFriend", "InvitationOverview"],
        bodyTemplatePrefix: "tpl/shop/tabs/subtabs/",
        routeNamedParam: "subtab",
        disableScrolling: !0,
        noLoadingDelay: !0
    };
    a.selectedTab = "invite";
    a.bonusesToCollect = 0;
    a.changeActiveTab = function(b) {
        a.selectedTab = b;
        c.o("subtab", b)
    }
    ;
    a.openSendEmailOverlay = function() {
        a.Ue();
        a.openOverlay("sendEmail")
    }
    ;
    a.copyLink = function() {
        copyTextToClipboard(a.refLink)
    }
    ;
    var f = {
        NOT_GRANTED: 0,
        GRANTED: 3,
        COLLECTED: 4
    };
    a.BONUS_STATE = f;
    a.BONUS_CONSTANT_MAP = {
        0: "rewardSecondVillage",
        1: "rewardThirdVillage",
        2: "rewardFirstPayment",
        3: "reward1000PrestigeReached"
    };
    a.invitations = {
        open: [],
        accepted: []
    };
    a.disableReferrals = !Travian.Config.features.inviteFriends;
    b();
    a.collectBonus = function(a) {
        var b = {
            invitedAccountIdentifier: a.invitedAccountId,
            bonusIdentifiers: []
        };
        angular.forEach(a.bonuses, function(a) {
            a.state == f.GRANTED && b.bonusIdentifiers.push(a.id)
        });
        Travian.request("player/fetchReferralBonus", b, function() {
            a.collectible = !1;
            angular.forEach(a.bonuses, function(b, c) {
                b.state == f.GRANTED && (a.bonuses[c].state = f.COLLECTED)
            })
        })
    }
    ;
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_PREMIUM + "_" + PlayerProgressTrigger.HELP_PAGE_INVITE_FRIEND);
    a.$on("$destroy", function() {
        a.l("subtab")
    });
    a.$on("referralEmailSent", function() {
        b()
    });
    Travian.request("player/getInvitationRefLink", {}, function(b) {
        null != b.refLink && (a.refLink = b.refLink)
    })
}
;
window.inviteFriendCtrl.$inject = ["$scope", "RoutingService"];
window.attacksCtrl = function(a, c, b, f, g) {
    function e() {
        if (l && m) {
            p = f.getActiveVillageId();
            n = m.Ne(p);
            a.total = {
                kingdom: 0
            };
            a.showMembers = {
                kingdom: {}
            };
            for (var b in n) {
                for (var c in n[b].villages) {
                    var h = n[b].villages[c];
                    null != r && (g.cancel(r),
                    r = null);
                    if (!1 === h.kingdom) {
                        r = g(e, 100);
                        break
                    }
                    b in a.showMembers.kingdom || (a.showMembers.kingdom[b] = {
                        attacks: {
                            villages: {}
                        }
                    },
                    a.showMembers.kingdom[b].name = h.playerName,
                    a.showMembers.kingdom[b].playerId = h.playerId);
                    a.showMembers.kingdom[b].attacks.villages[c] = h;
                    a.total.kingdom++
                }
            }
        }
    }
    function h() {
        if (a.changed) {
            var b = 0, c = 2, e;
            for (e in a.show) {
                a.show[e] && (b += Math.pow(2, c - 1)),
                c--
            }
            a.settings.data.attacksFilter = b;
            a.settings.persist()
        }
    }
    var m, l, p, n = null, q = null, r = null;
    a.changed = !1;
    a.showMembers = {
        kingdom: {}
    };
    a.total = {
        kingdom: 0
    };
    a.show = {
        kingdom: !0
    };
    c.m(function() {
        m = b.H(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], e, a);
        l = c.p();
        a.subscribe(l, e);
        p = f.getActiveVillageId();
        a.settings = Settings.get(Travian.Player.data.playerId);
        a.subscribe(a.settings, function() {
            a.show = a.settings.getAttackSettings()
        })
    });
    a.$on("activeVillageChanged", e);
    a.update = function() {
        a.changed = !0;
        e();
        null != q && (g.cancel(q),
        q = null);
        q = g(h, 1E3)
    }
    ;
    a.$on("$destroy", function() {
        null != q && (g.cancel(q),
        q = null);
        null != r && (g.cancel(r),
        r = null);
        h()
    });
    a.id2xy = function(a) {
        return Ma(a)
    }
}
;
window.attacksCtrl.$inject = ["$scope", "SessionService", "TroopsService", "VillageService", "$timeout"];
window.friendsCtrl = function(a, c, b, f) {
    function g(a) {
        return function() {
            return a.apply(f, arguments)
        }
    }
    var e = null;
    a.cancelFriendRequest = g(f.Pe);
    a.acceptFriend = g(f.Ie);
    a.declineFriend = g(f.We);
    a.currentPlayer = b.p();
    a.userAccountIdentifier = b.Cd();
    a.addFriendError = "";
    a.isNoSitter = !b.K();
    a.newFriend = "";
    a.friendlist = f.getViewModel();
    a.changeNewFriend = function(b) {
        e = b ? b : null;
        a.addFriendError = ""
    }
    ;
    a.sendAddRequest = function() {
        b.K() || null === e || (a.currentPlayer.data.playerId != e.playerId || b.Ia() || b.K() ? f.Ph(e.playerId) ? a.addFriendError = Travian.translate("FriendList.AddFriend.Error.IsPending") : f.Oh(e.playerId) ? a.addFriendError = Travian.translate("FriendList.AddFriend.Error.IsFriend") : (f.fd({
            addFriendAs: e.name,
            friendPlayerId: e.playerId
        }),
        a.newFriend = "") : a.addFriendError = Travian.translate("FriendList.AddFriend.Error.Yourself"))
    }
}
;
window.friendsCtrl.$inject = ["$scope", "ChatService", "SessionService", "FriendService"];
window.abdicateGovernorCtrl = function(a) {
    function c(b) {
        a.handleError(b, "governorError") && a.closeOverlay()
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.Kingdom.Dismiss.Governor",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/society/partials/kingdom/AbdicateGovernorConfirmation.html"
    });
    a.governorPlayerId = a.getParam("governorPlayerId");
    if ("undefined" == typeof a.governorPlayerId || -1 == parseInt(a.governorPlayerId, 10)) {
        a.overlayConfig.k({
            inWindowPopupTitle: "Society.Kingdom.Abdicate.Governor"
        }),
        a.governorPlayerId = -1
    }
    a.confirmAbdicate = function() {
        Travian.request("kingdom/cancelGovernor", {
            governorPlayerId: a.governorPlayerId
        }, c);
        a.l("subtab")
    }
}
;
window.abdicateGovernorCtrl.$inject = ["$scope"];
window.kingdomChangeTagCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Kingdom.ChangeTagHeader",
        inWindowPopupContentTemplate: "tpl/society/partials/kingdom/changeTag.html"
    });
    a.placeHolderKingdomTag = Travian.translate("Kingdom.KingdomTag");
    a.handleError({}, "kingdomTagError");
    var c = Kingdom.get(Travian.Player.data.kingdomId);
    a.newTag = c.data.tag;
    a.renameKingdom = function() {
        Travian.writeRequest("kingdom/changeTag", {
            tag: a.newTag
        }, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomTagError")
        })
    }
}
;
window.kingdomChangeTagCtrl.$inject = ["$scope"];
window.kingdomCtrl = function(a, c, b) {
    function f() {
        var c, f = b.getParam("subtab");
        h = Travian.Player.data.kingdomId;
        e = Travian.Player.data.kingdomRole;
        a.kingdomId = h;
        a.kingdomTabConfig = {};
        a.kingdomTabConfig.bodyTemplatePrefix = "tpl/society/partials/kingdom/";
        a.kingdomTabConfig.routeNamedParam = "subtab";
        a.kingdomTabConfig.tabName = "subtab";
        a.kingdomTabConfig.tabType = "subtab";
        0 < h ? (c = l[e].nd,
        a.kingdomTabConfig.tabs = l[e].je,
        0 > a.kingdomTabConfig.tabs.indexOf(f) && a.o("subtab", c)) : a.kingdomTabConfig.tabs = ["IndependentGovernor"];
        a.accountAge = Math.floor((Travian.ServerTime - Travian.Player.data.signupTime) / 86400)
    }
    function g() {
        for (var b = [], e = a.kingdom.data.members, f = a.villageCount = 0; f < e.length; f++) {
            b.push(e[f].playerId),
            a.villageCount += e[f].villages,
            e[f].chatUser = c.tc(e[f].playerId, e[f])
        }
    }
    var e = Travian.Player.data.kingdomRole
      , h = Travian.Player.data.kingdomId
      , m = null
      , l = {};
    a.kingdomId = h;
    l[Kingdom.RIGHT_GOVERNOR] = {
        je: ["Profile", "Intern", "Ranking", "Tributes"],
        nd: "Profile"
    };
    l[Kingdom.RIGHT_DUKE] = {
        je: ["Profile", "Intern", "Ranking", "Treasuries", "Tributes"],
        nd: "Profile"
    };
    l[Kingdom.RIGHT_KING] = {
        je: "Profile Intern Ranking Treasuries Tributes Diplomacy".split(" "),
        nd: "Profile"
    };
    l[Kingdom.RIGHT_VICEKING] = l[Kingdom.RIGHT_DUKE];
    var p = Travian.Player.subscribe(function() {
        a.kingdom = Kingdom.get(Travian.Player.data.kingdomId);
        null == m && (m = a.subscribe(a.kingdom, g),
        f());
        Travian.Player.data.kingdomRole == e && Travian.Player.data.kingdomId == h || f()
    });
    a.$on("$destroy", function() {
        null != p && Travian.Player.unsubscribe(p)
    })
}
;
window.kingdomCtrl.$inject = ["$scope", "ChatService", "RoutingService"];
window.kingdomDiplomacyCtrl = function(a) {
    a.TYPE = {
        BND: Kingdom.BND,
        NAP: Kingdom.NAP,
        WAR: Kingdom.WAR
    };
    a.subscribe(a.kingdom, function() {
        a.treaties = {};
        a.treaties[Kingdom.BND] = [];
        a.treaties[Kingdom.NAP] = [];
        a.treaties[Kingdom.WAR] = [];
        for (var c = 0; c < a.kingdom.data.diplomacy.treaties.length; c++) {
            var b = a.kingdom.data.diplomacy.treaties[c];
            a.treaties[b.type].push(b)
        }
    });
    a.deleteTreaty = function(c) {
        Travian.writeRequest("kingdomTreaty/deny", {
            id: c
        }, function(b) {
            a.handleError(b, "treatyAcceptError")
        })
    }
    ;
    a.acceptTreaty = function(c) {
        Travian.writeRequest("kingdomTreaty/accept", {
            id: c
        }, function(b) {
            a.handleError(b, "treatyAcceptError")
        })
    }
    ;
    a.cancelTreaty = function(c) {
        Travian.writeRequest("kingdomTreaty/cancel", {
            id: c
        }, function(b) {
            a.handleError(b, "existingTreatyError")
        })
    }
}
;
window.kingdomDiplomacyCtrl.$inject = ["$scope"];
window.kingdomEditDescriptionCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Kingdom.EditDescription.Headline",
        inWindowPopupContentTemplate: "tpl/society/partials/kingdom/editDescription.html"
    });
    a.kingdom = Kingdom.get(a.getParam("kingdomId"));
    var c = !1;
    a.subscribe(a.kingdom, function() {
        c || (a.description = a.kingdom.data.description.publicDescription,
        c = !0)
    });
    a.handleError({}, "kingdomChangeDescriptionError");
    a.editDescription = function() {
        var b = {};
        b.publicDescription = a.description;
        Travian.writeRequest("kingdom/changeDescription", b, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomChangeDescriptionError")
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("kingdomId")
    })
}
;
window.kingdomEditDescriptionCtrl.$inject = ["$scope"];
window.kingdomEditInternalInfoCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Kingdom.EditInternalInfo.Headline",
        inWindowPopupContentTemplate: "tpl/society/partials/kingdom/editInternalInfo.html"
    });
    a.description = null;
    a.user = c.p();
    a.subscribe(a.user, function() {
        a.kingdom = Kingdom.get(a.user.data.kingdomId);
        a.subscribe(a.kingdom, function() {
            a.description = angular.copy(a.kingdom.data.description)
        })
    });
    a.handleError({}, "kingdomChangeDescriptionError");
    a.editInfos = function() {
        var b = {};
        b.internalDescription = a.description.internalDescription;
        Travian.writeRequest("kingdom/changeInternalDescription", b, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomChangeDescriptionError")
        })
    }
}
;
window.kingdomEditInternalInfoCtrl.$inject = ["$scope", "SessionService"];
window.kingdomIndependentGovernorCtrl = function(a, c) {
    a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
    a.Player = Player;
    a.openChat = c.ka;
    a.getPrivateRoomName = c.pa;
    Travian.request("kingdom/getTop3NearbyKings", {
        villageId: Travian.Player.data.villages[0].villageId
    }, function(b) {
        a.nearestKings = b
    })
}
;
window.kingdomIndependentGovernorCtrl.$inject = ["$scope", "ChatService"];
window.kingdomInternCtrl = function(a, c) {
    function b(a, b) {
        for (var c = 0; c < g.data.length; c++) {
            var f = g.data[c];
            if (f.data.targetId === parseInt(a, 10)) {
                return Marker.COLORS[f.data.color]
            }
        }
        switch (parseInt(b, 10)) {
        case Kingdom.NAP:
            return Marker.TREATY_COLOR_NAP;
        case Kingdom.BND:
            return Marker.TREATY_COLOR_BND;
        case Kingdom.WAR:
            return Marker.COLOR_ENEMY
        }
    }
    a.Player = Player;
    a.itemsPerPage = 9;
    a.numberOfItems = 0;
    a.results = {};
    a.news = [];
    a.offStrength = {
        lastDay: 0,
        firstDay: 0,
        diff: 0
    };
    a.defStrength = {
        lastDay: 0,
        firstDay: 0,
        diff: 0
    };
    var f = KingdomFightvalues.getCollection(Travian.Player.data.kingdomId);
    a.subscribe(f, function() {
        a.offStrength = {
            lastDay: 0,
            firstDay: 0,
            diff: 0
        };
        a.defStrength = {
            lastDay: 0,
            firstDay: 0,
            diff: 0
        };
        var b = (new Date).getUTCDay();
        0 == b && (b = 7);
        for (var c = 0; c < f.data.length; c++) {
            var g = f.data[c].data;
            switch (g.type) {
            case KingdomFightvalues.TYPE_OFF_STRENGTH:
                a.offStrength.lastDay = g["d" + b];
                a.offStrength.firstDay = g.d1;
                a.offStrength.diff = a.offStrength.lastDay - a.offStrength.firstDay;
                break;
            case KingdomFightvalues.TYPE_DEF_STRENGTH:
                a.defStrength.lastDay = g["d" + b],
                a.defStrength.firstDay = g.d1,
                a.defStrength.diff = a.defStrength.lastDay - a.defStrength.firstDay
            }
        }
    });
    Travian.request("kingdom/getFightStrengthRanks", {}, function(b) {
        "undefined" == typeof b.errors && (a.offRank = b.offRank,
        a.defRank = b.defRank)
    });
    var g = Marker.getCollection();
    a.ja([a.kingdom, g], function() {
        a.treaties = [];
        for (var e = 0; e < a.kingdom.data.diplomacy.treaties.length; e++) {
            var f = a.kingdom.data.diplomacy.treaties[e];
            f.colorData = b(f.ik, f.type);
            a.treaties.push(f)
        }
        c(function() {
            a.$broadcast("scrollbarApi", "resetHeight")
        }, 0)
    });
    a.displayCurrentPage = function(b) {
        null == b && (b = 1);
        a.currentPage = b;
        Travian.request("kingdom/getNews", {
            start: (b - 1) * a.itemsPerPage,
            count: a.itemsPerPage
        }, function(b) {
            "undefined" == typeof b.errors ? (a.news = b.news,
            a.numberOfItems = b.count) : a.handleError(b, "kingdomNewsError")
        })
    }
    ;
    Cache.G(f, 1);
    c(function() {
        a.descriptionVisible = !0;
        a.$broadcast("scrollbarApi", "resetHeight")
    }, 0);
    a.$on("$destroy", y())
}
;
window.kingdomInternCtrl.$inject = ["$scope", "$timeout", "VillageService", "SessionService"];
window.kingdomInviteDukeCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Kingdom.Dukes.inviteDuke.Headline",
        inWindowPopupContentTemplate: "tpl/society/partials/kingdom/inviteDuke.html"
    });
    a.handleError({}, "dukeInviteError");
    a.input = {
        customText: ""
    };
    a.societyInvitationMaxLength = Travian.Config.charLimits.societyInvitationCharLimit;
    a.invitePlayer = "";
    a.selectedPlayer = null;
    a.selectInvitePlayer = function(c) {
        a.handleError({}, "dukeInviteError");
        a.selectedPlayer = c
    }
    ;
    a.invite = function() {
        if (null != a.selectedPlayer) {
            var c = {};
            c.playerId = a.selectedPlayer.playerId;
            c.customText = a.input.customText || "";
            Travian.writeRequest("kingdom/promoteToDuke", c, function(b) {
                "undefined" == typeof b.errors ? (a.selectedPlayer = null,
                a.invitePlayer = "",
                a.closeOverlay()) : a.handleError(b, "dukeInviteError")
            })
        }
    }
}
;
window.kingdomInviteDukeCtrl.$inject = ["$scope"];
window.kingdomInviteKingCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Kingdom.Union.inviteKing.Headline",
        inWindowPopupContentTemplate: "tpl/society/partials/kingdom/inviteKing.html"
    });
    a.handleError({}, "kingInviteError");
    a.ROLE_KING = Player.KINGDOM_ROLE_KING;
    a.ROLE_VICEKING = Player.KINGDOM_ROLE_VICEKING;
    a.invitePlayer = a.getParam("kingName") || "";
    a.selectedPlayer = null;
    a.selectInvitePlayer = function(c) {
        a.handleError({}, "kingInviteError");
        a.selectedPlayer = c;
        0 < a.selectedPlayer.kingdomId && Travian.request("kingdom/checkUnion", {
            kingId: a.selectedPlayer.playerId
        }, function(b) {
            a.canUnite = !b.errors;
            a.handleError(b, "kingInviteError");
            a.canUnite && Travian.request("ranking/getKingdomStats", {
                kingdomId: [Travian.Player.data.kingdomId, a.selectedPlayer.kingdomId]
            }, function(b) {
                a.kingdomStats = b;
                b = a.kingdomStats[Travian.Player.data.kingdomId].rank;
                var c = a.kingdomStats[a.selectedPlayer.kingdomId].rank;
                !1 === b || b > c ? (a.unitedKingdomId = a.selectedPlayer.kingdomId,
                a.joinKingdomId = Travian.Player.data.kingdomId) : (a.unitedKingdomId = Travian.Player.data.kingdomId,
                a.joinKingdomId = a.selectedPlayer.kingdomId)
            })
        })
    }
    ;
    a.invite = function() {
        if (null != a.selectedPlayer) {
            var c = {};
            c.kingId = a.selectedPlayer.playerId;
            Travian.writeRequest("kingdom/offerUnion", c, function(b) {
                "undefined" == typeof b.errors ? (Kingdom.get(a.selectedPlayer.kingdomId).callSubscribers(),
                a.closeOverlay()) : a.handleError(b, "kingInviteError")
            })
        }
    }
}
;
window.kingdomInviteKingCtrl.$inject = ["$scope"];
window.kingdomOfferTreatyCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Kingdom.Diplomacy.OfferTreaty.Headline",
        inWindowPopupTemplate: "tpl/society/partials/kingdom/offerTreaty.html"
    });
    a.input = {
        selectedTreaty: -1
    };
    a.placeHolderInvitationKingdomName = Travian.translate("Kingdom.Diplomacy.OfferTreaty.KingdomNamePlaceholder", !1);
    a.handleError({}, "kingdomTreatyError");
    a.selectedKingdom = null;
    a.selectTargetKingdom = function(c) {
        a.selectedKingdom = c
    }
    ;
    a.selectedKingdom = null;
    a.searchCallback = function(c) {
        a.selectedKingdom = null;
        null !== c && (a.selectedKingdom = c.groupId)
    }
    ;
    a.offerTreaty = function() {
        null === a.selectedKingdom ? a.kingdomTreatyError = Travian.translate("Error.KingdomNotFound") : (null !== a.kingdomTreatyError && delete a.kingdomTreatyError,
        Travian.writeRequest("kingdomTreaty/offer", {
            kingdomId: a.selectedKingdom,
            type: a.input.selectedTreaty
        }, function(c) {
            a.handleError(c, "kingdomTreatyError") && a.closeOverlay()
        }))
    }
}
;
window.kingdomOfferTreatyCtrl.$inject = ["$scope"];
window.kingdomProfileCtrl = function(a, c, b) {
    function f() {
        m && 0 <= l && m.unsubscribe(l);
        a.kingdom.data.groupId == Travian.Player.data.kingdomId ? (m = GroupInvitation.getCollection(GroupInvitation.COLLECTION_FOR_GROUP, GroupInvitation.TYPE_KINGDOM, Travian.Player.data.kingdomId),
        l = m.subscribe(g),
        a.myKingdom = Travian.Player.isKing() || Travian.Player.isViceKing(),
        a.unionAvailable = a.kingdom.canUnify()) : (m = null,
        g(),
        a.myKingdom = !1,
        0 < Travian.Player.data.kingdomId && (a.kingdom.canUnify() && Kingdom.get(Travian.Player.data.kingdomId).canUnify()) && Travian.request("kingdom/checkUnion", {
            kingId: a.kingdom.getKingId()
        }, function(b) {
            a.unionAvailable = !b.errors;
            a.alreadyInvited = b.errors && "AlreadyInvited" == b.errors[0].message;
            delete b.errors
        }));
        a.kingdom.isUnited() ? Travian.request("ranking/getKingdomStats", {
            kingdomId: a.kingdom.data.groupId
        }, function(b) {
            a.kingdomStats = b
        }) : a.kingdomStats = null;
        var b = a.kingdom.getKing();
        a.kingId = b.playerId;
        a.kingName = b.name;
        if (b = a.kingdom.getViceKing()) {
            a.viceKingId = b.playerId,
            a.viceKingName = b.name
        }
        b = a.kingdom.getGovernors();
        a.numberOfItems = b.length;
        a.governors = b.slice(0, h)
    }
    function g() {
        function b(f, h) {
            for (var g = 0, l = h || 0; g < c; g++,
            l = (l + 1) % c) {
                if (!a.dukeSlots[l]) {
                    a.dukeSlots[l] = f;
                    e++;
                    break
                }
            }
        }
        a.dukeSlots = {};
        var c = a.kingdom.isUnited() ? Travian.Config.KingdomConfig.unitedKingdomMaxDukes : Travian.Config.KingdomConfig.kingdomMaxDukes
          , e = 0;
        angular.forEach(a.kingdom.getDukes(), function(a) {
            b({
                type: "active",
                duke: a
            }, 1 == a.vicekingConnection ? c / 2 : 0)
        });
        m && 0 < m.data.length && angular.forEach(m.data, function(a) {
            a.data.invitedAs == Kingdom.RIGHT_DUKE && b({
                type: "invitation",
                duke: {
                    playerId: a.data.playerId,
                    name: a.data.playerName,
                    inviteId: a.data.id
                }
            })
        });
        if (e < c) {
            for (var f = e; f < c; f++) {
                b({
                    type: "available",
                    duke: null
                })
            }
        }
    }
    function e(b, c, e, f) {
        a.openOverlay("abdicateDuke", {
            dukePlayerId: b,
            hasActiveTreasury: c,
            victoryPointsLoss: e,
            dukeTreasures: f
        })
    }
    var h = 20;
    a.isSitter = b.K();
    a.itemsPerPage = h;
    a.numberOfItems = 0;
    a.currentPage = 1;
    a.ROLE_KING = Player.KINGDOM_ROLE_KING;
    a.ROLE_VICEKING = Player.KINGDOM_ROLE_VICEKING;
    a.ROLE_DUKE = Player.KINGDOM_ROLE_DUKE;
    var m = null
      , l = -1
      , p = null;
    a.$watch("kingdom.data.groupId", function(b) {
        b && (p && p(),
        p = a.subscribe(a.kingdom, f))
    });
    a.dukeAction = function(b) {
        switch (b.type) {
        case "active":
            c.openWindow("profile", {
                playerId: b.duke.playerId,
                profileTab: "playerProfile"
            }, null, !0);
            break;
        case "invitation":
            a.myKingdom && Travian.writeRequest("kingdom/declineInvitation", {
                id: b.duke.inviteId
            });
            break;
        case "available":
            a.myKingdom && a.openOverlay("kingdomInviteDuke")
        }
    }
    ;
    a.dismissDuke = function(a) {
        if (a == Travian.Player.data.playerId) {
            a = -1;
            for (var b = !1, c = Village.getCollection(Village.COLLECTION_OWN), f = 0; f < c.data.length; f++) {
                if (c.data[f].hasActiveTreasury()) {
                    b = !0;
                    break
                }
            }
            e(a, b, 0, 0)
        } else {
            Travian.request("kingdom/getDukeDismissalInformation", {
                dukePlayerId: a
            }, function(c) {
                e(a, b, c.victoryPointsLoss, c.dukeTreasures)
            })
        }
        return !1
    }
    ;
    a.openGovernorDismissOverlay = function(b) {
        (Travian.Player.isKing() || Travian.Player.isViceKing()) && a.openOverlay("abdicateGovernor", {
            governorPlayerId: b
        })
    }
    ;
    a.displayCurrentPage = function(b) {
        null === b && (b = 1);
        a.currentPage = b;
        b = (b - 1) * h;
        a.governors = a.kingdom.getGovernors().slice(b, b + h)
    }
    ;
    PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_KINGDOM + "_" + PlayerProgressTrigger.HELP_PAGE_DUKES)
}
;
window.kingdomProfileCtrl.$inject = ["$scope", "$rootScope", "SessionService"];
window.kingdomRankingCtrl = function(a) {
    function c(b) {
        for (var c = null, e = 0; e < b.length; e++) {
            if (b[e].playerId == a.player.data.playerId) {
                c = b[e];
                break
            }
        }
        return c
    }
    var b = Kingdom.get(a.player.data.kingdomId);
    Travian.request("ranking/getRanking", {
        start: 0,
        end: 1E3,
        rankingType: "ranking_KingdomInternal",
        rankingSubtype: "treasures"
    }, function(b) {
        a.treasuresRanking = b.results;
        var g = b.results.length;
        if (10 > g) {
            for (; 10 > g; g++) {
                a.treasuresRanking.push({
                    rank: g
                })
            }
        }
        a.ownTreasureRank = c(b.results)
    });
    Travian.request("ranking/getKingdomInternalRanking", {}, function(f) {
        b.setStats(f);
        a.ownRanks = {
            top10Attacker: c(b.stats.top10Attacker),
            top10Defender: c(b.stats.top10Defender),
            top10Climber: c(b.stats.top10Climber)
        }
    })
}
;
window.kingdomRankingCtrl.$inject = ["$scope"];
window.kingdomTreasuriesCtrl = function(a, c) {
    function b(b) {
        Travian.request("map/getKingdomInfluenceStatistics", {
            kingId: l.data.kingId
        }, function(c) {
            a.villagesWithActiveTreasury = [];
            for (var e in c) {
                var f = c[e];
                f.levelPerc = {};
                for (var h = f.level + 1, g = 1; 4 >= g; g++) {
                    f.levelPerc[g] = g < h ? 100 : g == h ? Math.round(100 * (f.population - f.currentFrom) / (f.currentTo - f.currentFrom)) : 0
                }
                f.treasureBonusValue = Math.round((f.treasureBonus - 1) * f.population);
                f.treasureBonus = Math.round(100 * (f.treasureBonus - 1));
                f.cells = {
                    own: 0,
                    kingdom: 0,
                    other: 0
                };
                for (var l in f.players) {
                    h = f.players[l].cells,
                    l == Travian.Player.data.kingId ? f.cells.own += h : f.cells.other += h
                }
                0 < f.influence && a.villagesWithActiveTreasury.push(e)
            }
            "function" == typeof b && b();
            a.villages = c
        })
    }
    function f(c) {
        var e = TreasurySlot.getAmountOfBlockedByCollection(n);
        a.currentTreasures = q.data.treasuresCurrent;
        a.amountOfAssignableTreasurySlots = TreasurySlot.getAmountOfAssignableByCollection(n, a.currentTreasures);
        a.assignedTreasurySlots = TreasurySlot.getAssignedByCollection(n);
        a.usedTreasurySlots = TreasurySlot.getUsedByCollection(n);
        a.inTransformingSlots = [];
        a.villagesWithActiveTreasury.length != a.usedTreasurySlots && (void 0 !== c && null != c ? b(f) : a.usedTreasurySlots.forEach(function(b) {
            ra(a.villagesWithActiveTreasury, b.data.villageId) || a.inTransformingSlots.push(b)
        }));
        c = (a.currentTreasures - a.currentTreasures % p) / p;
        var h = Math.max(0, e - c) + 1
          , l = a.currentTreasures - c * p;
        a.nextTreasurySlot = (Math.max(c, e) + 1) * p;
        a.percentageCurrentTreasures = 100 * (l / (p * h));
        m = TreasurySlot.getAmountOfUsedAndAssignedByCollection(n);
        x = Travian.Config.KingdomConfig.defaultTreasuriesForKingsAndDukes + 1;
        v = Number.MAX_VALUE;
        D = 0;
        for (var r in m) {
            D++,
            m[r].total > x && (x = m[r].total),
            m[r].total < v && (v = m[r].total)
        }
        g()
    }
    function g() {
        var b, c = r.data.filter(function(a) {
            return a.isDuke() || a.isViceKing()
        }), f = r.data.filter(function(a) {
            return a.isKing()
        })[0];
        if (f) {
            v == x && c.length + 1 == D && x++;
            h = [];
            b = void 0 !== m[f.data.playerId] ? Math.max(s, m[f.data.playerId].used) + m[f.data.playerId].assigned : s;
            e = [];
            e.push({
                name: f.data.name,
                playerId: f.data.playerId,
                currentSlots: b,
                maxSlotsOfPlayer: x,
                order: -1
            });
            b >= x && (h.push(f.data.playerId),
            a.kingHasMaxSlots = !0);
            for (f = 0; f < c.length; f++) {
                var g = c[f];
                b = void 0 !== m[g.data.playerId] ? Math.max(s, m[g.data.playerId].used) + m[g.data.playerId].assigned : s;
                e.push({
                    name: g.data.name,
                    playerId: g.data.playerId,
                    currentSlots: b,
                    maxSlotsOfPlayer: x,
                    order: b
                });
                b >= x && h.push(g.data.playerId)
            }
            a.dropdownData.options = e;
            a.dropdownData.disabledEntries = h
        }
    }
    var e = []
      , h = []
      , m = {}
      , l = c.p()
      , p = Travian.Config.KingdomConfig.treasuresNeededForTreasurySlot
      , n = TreasurySlot.getCollection()
      , q = KingdomStats.get(l.data.kingdomId)
      , r = Player.getCollection(Player.COLLECTION_KINGDOM, l.data.kingdomId)
      , t = null
      , u = null
      , w = null
      , s = Travian.Config.KingdomConfig.defaultTreasuriesForKingsAndDukes
      , x = s + 1
      , v = Number.MAX_VALUE
      , D = 0;
    a.currentPlayer = l;
    a.dropdownData = {
        selected: null,
        selectBy: "option.playerId",
        orderBy: "order",
        options: [],
        disabledEntries: [],
        callback: function(b) {
            l.isKing() && Travian.writeRequest("kingdom/assignTreasurySlot", {
                playerId: b
            }, function() {
                setTimeout(function() {
                    a.dropdownData.selected = null
                }, 0)
            })
        },
        placeholder: "Society.Kingdom.Treasuries.Slots.AssignableTreasurySlot.Dropdown.Assign",
        resize: !0
    };
    a.currentTreasures = 0;
    a.nextTreasurySlot = 0;
    a.percentageCurrentTreasures = 0;
    a.amountOfAssignableTreasurySlots = 0;
    a.assignedTreasurySlots = [];
    a.usedTreasurySlots = [];
    a.inTransformingSlots = [];
    a.kingHasMaxSlots = !1;
    a.villages = {};
    a.villagesWithActiveTreasury = [];
    u = r.subscribe(g);
    t = n.subscribe(f);
    w = q.subscribe(f);
    b(null);
    a.deleteSlotPermission = function(a) {
        l.isKing() && Travian.writeRequest("kingdom/deleteTreasurySlotPermission", {
            slotId: a
        }, y())
    }
    ;
    a.$on("$destroy", function() {
        null !== u && r.unsubscribe(u);
        null !== t && n.unsubscribe(t);
        null !== w && q.unsubscribe(w)
    })
}
;
window.kingdomTreasuriesCtrl.$inject = ["$scope", "SessionService"];
window.kingdomTributesCtrl = function(a, c, b, f, g) {
    function e() {
        if (u) {
            a.tributeOnTheWay = {};
            for (var c = u.v(), e = 0; e < c.length; e++) {
                var f = c[e];
                if (f.data.movement.movementType == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT) {
                    var h = 0;
                    angular.forEach(f.data.movement.resources, function(a) {
                        h += a
                    });
                    a.tributeOnTheWay[f.data.movement.villageIdStart] = {
                        time: parseInt(f.data.movement.timeFinish, 10),
                        resources: f.data.movement.resources,
                        resourcesSum: h,
                        treasures: parseInt(f.data.movement.treasures, 10),
                        targetVillage: b.qa(f.data.movement.villageIdTarget)
                    }
                }
            }
            a.filteredTributes = l()
        }
    }
    function h() {
        a.independentVillages = [];
        a.tributeVillages = [];
        a.foreignVillages = [];
        a.dukeVillages = [];
        a.notEnoughInfluenceVillages = [];
        null !== s && w.unsubscribe(s);
        "function" == typeof x && x();
        null !== v && C.unsubscribe(v);
        null !== D && A.unsubscribe(D);
        w = Village.getCollection(Village.COLLECTION_KINGDOM);
        a.activeVillage.hasActiveTreasury() ? (C = Player.getCollection(Player.COLLECTION_KINGDOM, Travian.Player.data.kingdomId),
        A = GroupInvitation.getCollection(GroupInvitation.COLLECTION_FOR_GROUP, GroupInvitation.TYPE_KINGDOM, Travian.Player.data.kingdomId),
        v = C.subscribe(p),
        D = A.subscribe(m),
        s = w.subscribe(p),
        x = PlayerKingdomMapper.Di(a.player.data.kingdomId, p),
        u = f.H(null, [Troops.COLLECTION_MOVING], function() {
            q(!0)
        }, a)) : a.dataLoaded = !0
    }
    function m() {
        a.invitations = {};
        A && 0 < A.data.length && angular.forEach(A.data, function(b) {
            b.isGovernorInvitation() && (a.invitations[b.data.playerId] = b.data.id)
        });
        p()
    }
    function l() {
        var b = {}
          , c = {
            resources: new Resources,
            treasures: 0,
            targetVillageId: "",
            targetName: ""
        };
        Object.keys(a.collectAllTributes).forEach(function(e) {
            a[e].forEach(function(f) {
                "undefined" === typeof b[e] && (b[e] = []);
                if ("undefined" !== typeof a.tributeOnTheWay[f.data.villageId]) {
                    for (var h = a.tributeOnTheWay[f.data.villageId].targetVillage, g = {}, l = -1, g = 0; g < b[e].length; g++) {
                        h.data.villageId == b[e][g].targetVillageId && (l = g)
                    }
                    0 <= l ? g = b[e][l] : (g = angular.copy(c),
                    g.targetName = h.data.name,
                    g.targetVillageId = h.data.villageId);
                    g.resources.addResources(a.tributeOnTheWay[f.data.villageId].resources);
                    g.treasures += a.tributeOnTheWay[f.data.villageId].treasures;
                    -1 == l && b[e].push(g)
                }
            });
            "undefined" !== typeof b[e] && b[e].sort(function(b, c) {
                return b.targetVillageId == a.activeVillage.data.villageId ? -1 : c.targetVillageId == a.activeVillage.data.villageId ? 1 : b.targetName.toLowerCase() < c.targetName.toLowerCase() ? -1 : 1
            })
        });
        return b
    }
    function p() {
        !0 != F && (F = !0,
        Travian.request("player/getPlayerInfluence", {
            villageId: b.getActiveVillageId()
        }, function(b) {
            var c = [];
            a.influences = b;
            a.tributeVillages = [];
            a.notEnoughInfluenceVillages = [];
            a.foreignVillages = [];
            a.dukeVillages = [];
            a.tributeBonusPercent = 0;
            if (a.player.finishedTutorial() && a.player.isKing() && a.player.getAge() <= Travian.Config.KingdomConfig.minimumStartTributesDays) {
                var e = 0;
                for (b = 0; b < w.data.length; b++) {
                    var f = w.data[b].data;
                    w.data[b].filled && (f.type < Village.TYPE_OASIS && f.playerId != a.player.data.playerId) && (e += w.data[b].data.tributeProductionWithCrop)
                }
                a.tributeBonusPercent = Math.min(Travian.Config.KingdomConfig.minimumStartTributesFactorMax, Math.max(0, Travian.Config.KingdomConfig.minimumStartTributes * Travian.Config.TG_SPEED / e - 1))
            }
            for (b = 0; b < w.data.length; b++) {
                if (f = w.data[b].data,
                w.data[b].filled && !(f.type >= Village.TYPE_OASIS || f.playerId == a.player.data.playerId)) {
                    if (f.type === Village.TYPE_GOVERNOR_NPC_VILLAGE && (a.influences[f.villageId] = {
                        connected: !0
                    }),
                    w.data[b].getResources(),
                    e = PlayerKingdomMapper.ba(f.playerId),
                    e != a.player.data.kingdomId && f.type !== Village.TYPE_GOVERNOR_NPC_VILLAGE) {
                        0 == e ? (c.push(w.data[b]),
                        a.invitations[w.data[b].data.playerId] && (a.influences[f.villageId] && a.influences[f.villageId].dominating) && (w.data[b].invitedForeignGovernor = !0,
                        a.foreignVillages.push(w.data[b]))) : f.tributeCollectorPlayerId === a.player.data.playerId && a.foreignVillages.push(w.data[b])
                    } else {
                        if (a.influences[f.villageId] && a.influences[f.villageId].dominating || f.type === Village.TYPE_GOVERNOR_NPC_VILLAGE) {
                            a: {
                                f = w.data[b].data.playerId;
                                for (e = 0; e < C.data.length; e++) {
                                    var h = C.data[e];
                                    if (h.isDuke() && h.data.playerId == f) {
                                        f = !0;
                                        break a
                                    }
                                }
                                f = !1
                            }
                            f ? a.dukeVillages.push(w.data[b]) : n(w.data[b].data.playerId) || a.tributeVillages.push(w.data[b])
                        } else {
                            !a.influences[f.villageId] || w.data[b].hasActiveTreasury() && a.player.isDuke() || n(w.data[b].data.playerId) || a.notEnoughInfluenceVillages.push(w.data[b])
                        }
                    }
                }
            }
            a.dataLoaded = !0;
            q(!0);
            a.independentVillages = [];
            if (0 < c.length) {
                b = {};
                for (f = 0; f < c.length; f++) {
                    "undefined" === typeof b[c[f].data.playerId] && (b[c[f].data.playerId] = []),
                    b[c[f].data.playerId].push(c[f])
                }
                a.independentVillages = b
            }
            F = !1
        }))
    }
    function n(a) {
        for (var b = 0; b < C.data.length; b++) {
            var c = C.data[b];
            if (c.isViceKing() && c.data.playerId == a) {
                return !0
            }
        }
        return !1
    }
    function q(a) {
        var b = (new Date).getTime();
        if (b > t + 1E3 || a) {
            t = b;
            if (w.data) {
                for (a = 0; a < w.data.length; a++) {
                    w.data[a].data.type >= Village.TYPE_OASIS || w.data[a].getTributes()
                }
            }
            r();
            e()
        }
    }
    function r() {
        var b = !1;
        Object.keys(a.collectAllTributes).forEach(function(c) {
            if (0 < a[c].length) {
                var e = B[c];
                B[c] = angular.copy(E);
                var f = a.collectAllTributes[c]
                  , h = 0
                  , g = 0;
                a.collectAllTributes[c] = -1;
                a[c].forEach(function(b) {
                    b.data.canFetchTributes && a.influences[b.data.villageId].connected && b.data.allowTributeCollection && "undefined" === typeof a.tributeOnTheWay[b.data.villageId] ? (angular.forEach(b.data.calculatedTributes, function(a, b) {
                        B[c].resources[b] += a
                    }),
                    B[c].treasures += b.data.tributeTreasures,
                    g++) : "undefined" !== typeof a.tributeOnTheWay[b.data.villageId] && h++
                });
                B[c].bonusResources = (new Resources(B[c].resources)).multiply(a.tributeBonusPercent).floor();
                a.collectAllTributes[c] = -1;
                3 <= h && (a.collectAllTributes[c] = a.COLLECT_NOW_BUTTON);
                3 <= g && (a.collectAllTributes[c] = -1 == a.collectAllTributes[c] ? a.COLLECT_ALL_BUTTON : a.COLLECT_ALL_NOW_BUTTONS);
                angular.equals(e, B[c]) && a.collectAllTributes[c] == f || (b = !0)
            }
        });
        a.tributeSum = B;
        b && requestAngularApply()
    }
    var t = 0
      , u = null
      , w = {}
      , s = null
      , x = null
      , v = null
      , D = null
      , C = {}
      , A = {}
      , F = !1;
    a.activeVillage = b.i();
    a.player = c.p();
    a.Village = Village;
    a.COLLECT_ALL_BUTTON = 0;
    a.COLLECT_NOW_BUTTON = 1;
    a.COLLECT_ALL_NOW_BUTTONS = 2;
    a.collectAllTributes = {
        tributeVillages: -1,
        dukeVillages: -1,
        foreignVillages: -1
    };
    var B = {
        tributeVillages: {},
        dukeVillages: {},
        foreignVillages: {}
    }
      , E = {
        resources: {
            1: 0,
            2: 0,
            3: 0
        },
        treasures: 0,
        bonusResources: {
            1: 0,
            2: 0,
            3: 0
        }
    };
    a.independentVillages = [];
    a.tributeVillages = [];
    a.notEnoughInfluenceVillages = [];
    a.foreignVillages = [];
    a.tributeSum = {};
    a.dukeVillages = [];
    a.dataLoaded = !1;
    a.invitations = {};
    a.animation = {};
    a.settings = Settings.get(Travian.Player.data.playerId);
    a.instantFetchAllTributePremiumFeatureName = PremiumFeature.FEATURE_NAME_FETCH_ALL_TRIBUTE_INSTANTLY;
    a.premiumFeaturePrice = function(b) {
        var c = 0
          , e = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_FETCH_ALL_TRIBUTE_INSTANTLY];
        "undefined" !== typeof a[b] && a[b].forEach(function(b) {
            "undefined" !== typeof a.tributeOnTheWay[b.data.villageId] && c++
        });
        return e.price * c
    }
    ;
    a[PremiumFeature.FEATURE_NAME_FETCH_ALL_TRIBUTE_INSTANTLY] = function(b) {
        var c = [];
        if ("undefined" !== typeof a[b]) {
            for (var e = 0; e < a[b].length; e++) {
                a.tributeOnTheWay[a[b][e].data.villageId] && c.push(a[b][e].data.villageId)
            }
        }
        return {
            destinationVillageIds: c,
            callback: function() {
                g(function() {
                    delete a.animation.collectNow
                }, 3E3)
            },
            requestDelay: a.settings.data.disableAnimations ? 0 : 600,
            notEnoughGoldCallback: function() {
                a.animation.notEnoughGold = !0
            }
        }
    }
    ;
    a.isEmpty = function(a) {
        return a && 0 != Object.keys(a).length ? !1 : !0
    }
    ;
    c.m(h, !0);
    a.$on("activeVillageChanged", function() {
        a.activeVillage = b.i();
        h()
    });
    var J = Travian.tick.bind(q);
    a.$on("$destroy", function() {
        Travian.tick.unbind(J);
        null != s && w.unsubscribe(s);
        null != v && C.unsubscribe(v);
        null != D && A.unsubscribe(D);
        "function" == typeof x && x()
    })
}
;
window.kingdomTributesCtrl.$inject = ["$scope", "SessionService", "VillageService", "TroopsService", "$timeout"];
window.secretSocietyDetailCtrl = function(a, c, b) {
    function f(b) {
        var c = SocietyStats.getCollection(b);
        b = !0;
        if ("undefined" != typeof a.stats) {
            for (var e = 0; e < a.society.data.members.length; e++) {
                if ("undefined" == typeof a.stats[a.society.data.members[e].playerId]) {
                    b = !1;
                    break
                }
            }
        } else {
            b = !1
        }
        b ? Cache.G(c, 300) : Cache.G(c, 0);
        a.subscribe(c, function() {
            a.stats = [];
            for (var b = 0; b < c.data.length; b++) {
                var e = c.data[b].data;
                a.stats[e.playerId] = e
            }
        })
    }
    function g() {
        if ("undefined" == typeof a.societyId || null == a.societyId) {
            var c = b.getParam("societyId");
            if ("undefined" !== typeof c && null != c) {
                a.societyId = c
            } else {
                a.noSociety = !0;
                return
            }
        }
        a.noSociety = !1;
        a.isFounder = !1;
        a.founder = null;
        a.society = Society.get(a.societyId);
        a.subscribe(a.society, e);
        a.invitations = GroupInvitation.getCollection("group", GroupInvitation.TYPE_SECRET_SOCIETY, a.societyId)
    }
    function e() {
        a.isSitter = c.K();
        a.orientation = a.society.data.attitude == Society.ATTITUDE_WHITE ? 1 : -1;
        for (var b = 0; b < a.society.data.members.length; b++) {
            a.society.data.members[b].playerId == a.user.data.playerId && (a.isFounder = a.society.data.members[b].isFounder),
            a.society.data.members[b].isFounder && (a.founder = a.society.data.members[b])
        }
        b = a.society.data.targetType;
        a.targetId = a.society.data.targetId;
        b == Society.TARGET_VILLAGE && (a.targetObj = Village.get(a.society.data.targetId));
        b == Society.TARGET_PLAYER && (a.targetObj = Player.get(a.society.data.targetId));
        b == Society.TARGET_KINGDOM && (a.targetObj = Kingdom.get(a.society.data.targetId));
        f(a.societyId);
        a.society.data.members.sort(function(a, b) {
            return parseInt(b.population) - parseInt(a.population)
        });
        a.numberOfItems = a.society.data.members.length;
        a.displayCurrentPage(a.currentPage)
    }
    a.target = {};
    a.target.village = Society.TARGET_VILLAGE;
    a.target.player = Society.TARGET_PLAYER;
    a.target.kingdom = Society.TARGET_KINGDOM;
    a.attitudeName = {};
    a.attitudeName[Society.ATTITUDE_WHITE] = "White";
    a.attitudeName[Society.ATTITUDE_BLACK] = "Black";
    a.user = c.p();
    a.noSociety = !1;
    a.societyId = a.getParam("societyId");
    a.itemsPerPage = 5;
    a.currentPage = 1;
    a.numberOfItems = 0;
    a.displayCurrentPage = function(b) {
        null == b && (b = 1);
        if ("undefined" != typeof a.society && "undefined" != typeof a.society.data) {
            var c = a.society.data.members;
            a.currentPage = b;
            b = a.itemsPerPage * (b - 1);
            var e = Math.min(b + a.itemsPerPage, c.length);
            a.rows = c.slice(b, e)
        }
    }
    ;
    a.selectSociety = function(a) {
        b.o("societyId", a)
    }
    ;
    var h = Society.getCollection();
    a.societies = h;
    a.subscribe(h, function() {
        ("undefined" == typeof a.societyId || null == a.societyId) && 0 < h.data.length && (a.societyId = h.data[0].data.groupId,
        a.o("societyId", a.societyId));
        a.societies = h;
        g()
    });
    a.$on("urlChanged", function() {
        var c = b.getParam("societyId");
        c != a.societyId && null != c && (a.societyId = c,
        g(),
        a.$broadcast("checkDynTabs"))
    });
    g()
}
;
window.secretSocietyDetailCtrl.$inject = ["$scope", "SessionService", "RoutingService"];
window.secretSocietyEditDescriptionCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.EditDescription.Headline",
        inWindowPopupTemplate: "tpl/society/partials/secretSociety/editDescription.html"
    });
    a.society = Society.get(a.getParam("groupId"));
    a.description = a.society.data.profile.description;
    a.handleError({}, "societyChangeDescriptionError");
    a.editDescription = function() {
        var c = {};
        c.groupId = a.society.data.groupId;
        c.description = a.description;
        Travian.writeRequest("society/changeDescription", c, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyChangeDescriptionError")
        })
    }
}
;
window.secretSocietyEditDescriptionCtrl.$inject = ["$scope"];
window.secretSocietyInviteCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.Invite.Headline",
        inWindowPopupTemplate: "tpl/society/partials/secretSociety/invite.html"
    });
    a.society = Society.get(a.getParam("groupId"));
    a.maxInvite = 5;
    a.customText = "";
    a.selectedPlayer = [];
    a.selectInvitePlayer = {};
    a.handleError({}, "societyInviteError");
    a.dummyModel = "";
    a.atLeastOnePlayer = !1;
    a.addNewPlayer = function() {
        var c = a.selectedPlayer.length;
        c >= a.maxInvite || (a.selectedPlayer[c] = null,
        a.selectInvitePlayer[c] = function(b) {
            a.selectedPlayer[c] = b;
            a.atLeastOnePlayer = !0;
            if (null == b) {
                a.atLeastOnePlayer = !1;
                for (var f in a.selectedPlayer) {
                    null != a.selectedPlayer[f] && (a.atLeastOnePlayer = !0)
                }
            }
            null !== b && "undefined" === typeof a.selectInvitePlayer[c + 1] && a.addNewPlayer()
        }
        )
    }
    ;
    a.addNewPlayer();
    a.inviteToSociety = function() {
        var c = {};
        c.groupId = a.society.data.groupId;
        c.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
        c.playerName = [];
        for (var b = 0; b < a.selectedPlayer.length; b++) {
            null != a.selectedPlayer[b] && "" != a.selectedPlayer[b].name && c.playerName.push(a.selectedPlayer[b].name)
        }
        0 != c.playerName.length && (c.customText = a.customText,
        Travian.writeRequest("society/invite", c, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyInviteError")
        }))
    }
}
;
window.secretSocietyInviteCtrl.$inject = ["$scope"];
window.secretSocietyKickCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.Kick",
        inWindowPopupContentTemplate: "tpl/society/partials/secretSociety/kick.html"
    });
    var c = a.getParam("playerId")
      , b = a.getParam("societyId");
    a.player = Player.get(c);
    a.confirmKick = function() {
        var f = {};
        f.groupId = b;
        f.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
        f.playerId = c;
        Travian.writeRequest("society/kick", f, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyKickError")
        })
    }
}
;
window.secretSocietyKickCtrl.$inject = ["$scope"];
window.secretSocietyOpenInvitationsCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Group.OpenInvitations.Headline",
        inWindowPopupTemplate: "tpl/society/partials/secretSociety/openInvitations.html"
    });
    a.society = Society.get(a.getParam("groupId"));
    a.invitations = GroupInvitation.getCollection("group", GroupInvitation.TYPE_SECRET_SOCIETY, a.society.data.groupId);
    a.itemsPerPage = 20;
    a.currentPage = 1;
    a.numberOfItems = 0;
    a.displayCurrentPage = function(c) {
        null == c && (c = 1);
        if ("undefined" != typeof a.invitations.data) {
            var b = a.invitations.data;
            a.currentPage = c;
            c = a.itemsPerPage * (c - 1);
            var f = Math.min(c + a.itemsPerPage, b.length);
            a.rows = b.slice(c, f)
        }
    }
    ;
    a.subscribe(a.invitations, function() {
        a.numberOfItems = a.invitations.data.length;
        a.displayCurrentPage(a.currentPage)
    });
    a.revokeInvitation = function(c) {
        var b = {};
        b.id = c;
        Travian.request("society/declineInvitation", b, function(b) {
            a.handleError(b, "societyInviteRevokeError")
        })
    }
}
;
window.secretSocietyOpenInvitationsCtrl.$inject = ["$scope"];
window.abdicateDukeCtrl = function(a) {
    function c(b) {
        a.handleError(b, "dukeError") && a.closeOverlay()
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Embassy.Communities.Kingdom.Abdicate.Duke.Title",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/embassy/overlay/kingdom/AbdicateDukeConfirmation.html"
    });
    a.dukePlayerId = -1;
    "undefined" != typeof a.getParam("dukePlayerId") && -1 != parseInt(a.getParam("dukePlayerId"), 10) && (a.dukePlayerId = a.getParam("dukePlayerId"),
    a.overlayConfig.k({
        inWindowPopupTitle: "Embassy.Communities.Kingdom.Dismiss.Duke.Title"
    }));
    a.confirmAbdicate = function() {
        Travian.writeRequest("kingdom/cancelDuke", {
            dukePlayerId: a.dukePlayerId
        }, c)
    }
    ;
    a.hasActiveTreasury = !1;
    for (var b = Village.getCollection(Village.COLLECTION_OWN), f = 0; f < b.data.length; f++) {
        if (b.data[f].hasActiveTreasury()) {
            a.hasActiveTreasury = !0;
            break
        }
    }
}
;
window.abdicateDukeCtrl.$inject = ["$scope"];
window.abdicateKingdomCtrl = function(a) {
    function c(b) {
        a.handleError(b, "kingError")
    }
    a.overlayConfig.k({
        inWindowPopupTitle: "Embassy.Communities.Kingdom.Abdicate.Title",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/embassy/overlay/kingdom/AbdicateConfirmation.html"
    });
    a.kingdom = Kingdom.get(Travian.Player.data.kingdomId);
    a.currentPlayer = Travian.Player;
    a.subscribe(a.currentPlayer, function() {
        a.coronationDuration = Travian.Player.data.coronationDuration / 3600
    });
    a.confirmAbdicate = function() {
        Travian.writeRequest("kingdom/cancelKingdom", {}, c);
        a.closeOverlay()
    }
    ;
    var b = Kingdom.get(Travian.Player.data.kingdomId);
    Travian.request("kingdom/getDukeCandidate", {
        kingdomId: b.data.groupId
    }, function(b) {
        a.successor = b
    })
}
;
window.abdicateKingdomCtrl.$inject = ["$scope"];
window.embassyKingdomCtrl = function(a, c, b, f) {
    function g() {
        a.treasuryAvailable = !1;
        f.va(c.getActiveVillageId(), Building.TYPE.HIDDEN_TREASURY) && (a.treasuryAvailable = !0)
    }
    function e(b) {
        a.handleError(b, "kingError")
    }
    var h = Travian.Player;
    a.Player = Player;
    a.Building = Building;
    a.coronationStatus = Player.CORONATION_STATUS.NONE;
    a.isSitter = !1;
    a.treasuryAvailable = !1;
    a.myKing = null;
    a.kingdom = {};
    g();
    a.subscribe(h, function() {
        a.user = h;
        a.isSitter = b.K();
        0 < h.data.kingdomId && (a.kingdom = Kingdom.get(h.data.kingdomId));
        var c = h.data.kingId;
        null != c && 0 < c && (a.myKing = Player.get(c));
        "undefined" != typeof a.invitations && Cache.B(a.invitations);
        a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
        a.coronationStatus = h.getCoronationStatus();
        g();
        a.user.isKing() ? a.becomeKingToolTip = Travian.translate("Kingdom.Become.AlreadyKing") : h.data.hasNoobProtection ? a.becomeKingToolTip = Travian.translate("Kingdom.Become.StillInNoobProtection") : a.user.isDuke() ? a.becomeKingToolTip = Travian.translate("Kingdom.Become.IsDuke") : a.becomeKingToolTip = a.treasuryAvailable ? Travian.translate("Kingdom.Become.Become") : Travian.translate("Kingdom.Become.TreasuryMissing")
    });
    a.cancelBecomeKing = function() {
        Travian.writeRequest("kingdom/cancelKingdom", {}, e)
    }
    ;
    a.canAbdicateAsKing = function() {
        if (a.coronationStatus != Player.CORONATION_STATUS.CROWNED || !h.isKing() || b.K() || h.data.hasNoobProtection) {
            return !1
        }
        var c = Kingdom.get(h.data.kingdomId);
        return c.isUnited() && !c.getViceKing() ? !1 : !0
    }
    ;
    a.$on("activeVillageChanged", g)
}
;
window.embassyKingdomCtrl.$inject = ["$scope", "VillageService", "SessionService", "BuildingService"];
window.foundKingdomCtrl = function(a, c, b) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Embassy.Communities.Kingdom.FoundKingdom.Title",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/embassy/overlay/kingdom/foundKingdomConfirmation.html"
    });
    a.placeHolderKingdomTag = Travian.translate("Kingdom.KingdomTag");
    var f = HeroItem.getCollection("own")
      , g = Travian.Config.noobProtection.days.king;
    a.currentPlayer = b.p();
    a.currentPlayer.data.hasNoobProtection && a.closeOverlay();
    a.form = {
        tag: ""
    };
    a.subscribe(a.currentPlayer, function() {
        a.coronationDuration = a.currentPlayer.data.coronationDuration / 3600;
        if (a.currentPlayer.data.hasNoobProtection) {
            var b = Math.ceil((Travian.ServerTime - a.currentPlayer.data.spawnedOnMap) / 86400);
            a.remainingNoobProtection = 0;
            b <= g && (a.remainingNoobProtection = a.currentPlayer.data.spawnedOnMap + 86400 * g - a.currentPlayer.data.coronationDuration)
        }
    });
    a.subscribe(f, function() {
        for (var b = 0; b < f.data.length; b++) {
            var c = f.data[b];
            if (c.data.itemType == HeroItem.TYPE_TREASURES) {
                a.amountStolenGoods = c.data.amount;
                break
            }
        }
    });
    a.confirmBecomeKing = function() {
        Travian.writeRequest("kingdom/startCoronationCeremony", {
            villageId: c.getActiveVillageId(),
            tag: a.form.tag
        }, function(b) {
            "undefined" == typeof b.errors && a.closeOverlay();
            a.handleError(b, "foundKingError")
        })
    }
}
;
window.foundKingdomCtrl.$inject = ["$scope", "VillageService", "SessionService"];
window.kingdomInvitationCtrl = function(a, c, b, f) {
    function g() {}
    function e() {
        a.Player = Player;
        a.openedFrom = a.getParam("window");
        l = "undefined" != typeof a.getParam(m) ? a.getParam("invitation") : "";
        if ("" == l) {
            a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM),
            a.subscribe(a.invitations, function() {
                0 == a.invitations.data.length && a.closeOverlay()
            }),
            a.overlayConfig.ed("inWindowPopupTemplate"),
            a.overlayConfig.k({
                inWindowPopupTitle: "Group.OpenInvitations.Headline",
                inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
                inWindowPopupContentTemplate: "tpl/building/embassy/overlay/kingdom/kingdomInvitationOverview.html"
            })
        } else {
            a.invitation = GroupInvitation.get(l);
            var e = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
            g();
            g = a.subscribe(e, function() {
                var b = !1;
                a.pendingRelocation = !1;
                for (var c = 0; c < e.data.length; c++) {
                    e.data[c].data.id == l ? b = !0 : e.data[c].data.reservationTime && (a.pendingRelocation = !0)
                }
                b || a.closeOverlay()
            });
            "undefined" != typeof a.invitation && a.player.data.playerId == a.invitation.data.playerId || a.l(m);
            a.overlayConfig.k({
                inWindowPopupTemplate: "tpl/building/embassy/overlay/kingdom/kingdomInvitationDetails.html"
            });
            a.handleError({}, "kingdomInviteError");
            if (a.invitation.isRelocationInvitation()) {
                a.resNames = angular.copy(Resources.STRING);
                delete a.resNames[0];
                a.getResourceFields = function(a, b) {
                    return getResourceAllocation(a.toString())[b]
                }
                ;
                a.relocationCellData = c.rc(a.invitation.data.cellId);
                var n = f.lf()
                  , q = [Troops.MOVEMENT_TYPE_TRANSPORT, Troops.MOVEMENT_TYPE_ADVENTURE, Troops.MOVEMENT_TYPE_REGENERATION, Troops.MOVEMENT_TYPE_WOUNDED]
                  , r = b.H([n], [Troops.COLLECTION_MOVING], function() {
                    a.disallowedTroopMovements = !1;
                    a.incomingAttack = 0;
                    for (var b = r.v(), c = 0; c < b.length; c++) {
                        !a.disallowedTroopMovements && (b[c].data.movement.villageIdStart == n && !ra(q, b[c].data.movement.movementType) && Object.values(b[c].data.units).reduce(function(a, b) {
                            return a + parseInt(b)
                        }, 0) > (b[c].data.units[Troops.TYPE_HERO] || 0)) && (a.disallowedTroopMovements = !0),
                        b[c].data.movement.villageIdTarget == n && ra(Troops.MOVEMENT_TYPES_ATTACK, b[c].data.movement.movementType) && (a.incomingAttack = Math.max(a.incomingAttack, b[c].data.movement.timeFinish))
                    }
                    a.confirmationStep = a.confirmationStep && h()
                }, a);
                a.totalTroopSupply = b.di()
            }
        }
    }
    function h() {
        if (a.invitation.isRelocationInvitation()) {
            if (a.incomingAttack) {
                return !0
            }
            var b = f.lf();
            if (0 < Troops.getCollection(Troops.COLLECTION_ELSEWHERE, b).data.length) {
                return !0
            }
            for (var b = Troops.getCollection(Troops.COLLECTION_STATIONARY, b), c = 0; c < b.data.length; c++) {
                if (b.data[c].data.status != Troops.STATUS_HOME && b.data[c].data.tribeId != Player.TRIBE.NATURE) {
                    return !0
                }
            }
        }
        return !1
    }
    var m = "invitation"
      , l = "";
    a.player = Travian.Player;
    a.subscribe(a.player, function() {
        "undefined" != typeof a.invitations && Cache.B(a.invitations);
        e()
    });
    a.$on("urlChanged", function() {
        e()
    });
    a.$on("$destroy", function() {
        a.l(m)
    });
    a.backToOverview = function() {
        a.l(m)
    }
    ;
    a.acceptInvitation = function() {
        !a.confirmationStep && h() ? a.confirmationStep = !0 : Travian.writeRequest("kingdom/acceptInvitation", {
            id: a.invitation.data.id
        }, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomInviteError")
        })
    }
    ;
    a.declineInvitation = function() {
        Travian.writeRequest("kingdom/declineInvitation", {
            id: a.invitation.data.id
        }, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomInviteError")
        })
    }
    ;
    a.cancelReservation = function() {
        Travian.writeRequest("kingdom/cancelInvitationReservation", {
            id: a.invitation.data.id
        })
    }
    ;
    a.handleError({}, "kingdomInviteError")
}
;
window.kingdomInvitationCtrl.$inject = ["$scope", "MapService", "TroopsService", "VillageService"];
window.townFoundingCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "MainBuilding.TownFounding",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/mainBuilding/overlay/townFoundingConfirmation.html"
    });
    a.$on("activeVillageChanged", function() {
        a.closeOverlay()
    });
    a.upgradeToTown = function() {
        Travian.writeRequest("village/upgradeToTown", {
            villageId: c.getActiveVillageId()
        }, function(b) {
            "undefined" != typeof b.errors && a.handleError(b, "errorUpgrade");
            a.closeOverlay()
        })
    }
}
;
window.townFoundingCtrl.$inject = ["$scope", "VillageService"];
window.embassySecretSocietyCtrl = function(a, c) {
    a.player = Travian.Player;
    a.ownSociety = null;
    a.societies = Society.getCollection();
    a.subscribe(a.societies, function() {
        a.isSitter = c.K();
        for (var b = 0; b < a.societies.data.length; b++) {
            for (var f = a.societies.data[b], g = f.data.members, e = 0; e < g.length; e++) {
                var h = g[e];
                if (h.playerId == a.player.data.playerId && h.isFounder) {
                    a.ownSociety = Society.get(f.data.groupId);
                    return
                }
            }
        }
        a.ownSociety = null
    });
    a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_SECRET_SOCIETY)
}
;
window.embassySecretSocietyCtrl.$inject = ["$scope", "SessionService"];
window.secretSocietyDissolveCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.Close.SecretSociety",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/embassy/overlay/secretSociety/secretSocietyDissolve.html"
    });
    a.society = Society.get(a.getParam("societyId"));
    a.confirmCloseSociety = function() {
        var c = {};
        c.groupId = a.society.data.groupId;
        Travian.writeRequest("society/close", c, function() {
            "undefined" == typeof c.errors ? (a.closeOverlay(),
            a.closeWindow("society")) : a.handleError(c, "societyCloseError")
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("societyId")
    })
}
;
window.secretSocietyDissolveCtrl.$inject = ["$scope"];
window.secretSocietyFoundCtrl = function(a) {
    var c = null;
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.FoundSociety",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/embassy/overlay/secretSociety/secretSocietyFound.html"
    });
    a.input = {
        chosenAttitude: 0,
        name: "",
        targetName: "",
        conditionValue: ""
    };
    a.selectedTarget = null;
    a.targetDropdown = {};
    a.targetDropdown.selected = null;
    a.targetDropdown.options = [];
    a.targetDropdown.disabled = !0;
    a.targetDropdown.resize = !0;
    a.targetDropdown.placeholder = "Society.Target.Placeholder";
    a.targetDropdown.bodyClass = "embassyFoundDropdownBody";
    a.conditionDropdown = {};
    a.conditionDropdown.selected = null;
    a.conditionDropdown.options = {};
    a.conditionDropdown.options[0] = Travian.translate("Society.Conditions.None");
    a.conditionDropdown.disabled = !0;
    a.conditionDropdown.resize = !0;
    a.conditionDropdown.placeholder = "Society.Conditions.None";
    a.conditionDropdown.bodyClass = "embassyFoundDropdownBody";
    a.placeHolderSocietyName = Travian.translate("Society.NamePlaceholder");
    a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Default");
    a.valuePlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Default");
    a.player = Travian.Player;
    a.target = {
        village: Society.TARGET_VILLAGE,
        player: Society.TARGET_PLAYER,
        kingdom: Society.TARGET_KINGDOM,
        society: Society.TARGET_SOCIETY
    };
    a.attitude = {
        white: Society.ATTITUDE_WHITE,
        black: Society.ATTITUDE_BLACK
    };
    Society.CONDITION_WHITE_SEND_RESOURCES = 1;
    Society.CONDITION_WHITE_LOST_UNITS = 2;
    Society.CONDITION_WHITE_PROVIDED_UNITS = 3;
    Society.CONDITION_BLACK_STOLE_RESOURCES = 4;
    Society.CONDITION_BLACK_DEFEAT_UNITS = 5;
    Society.CONDITION_BLACK_STOLE_TREASURE = 6;
    Society.Xc = 1;
    Society.Yc = 2;
    Society.ve = 3;
    Society.we = 4;
    a.processAttitudeChange = function() {
        if (c != a.input.chosenAttitude) {
            c = a.input.chosenAttitude;
            a.input.targetName = "";
            a.targetDropdown.options = {};
            a.targetDropdown.selected = null;
            a.targetDropdown.placeholder = "Society.Target.Placeholder";
            a.targetDropdown.disabled = !1;
            a.conditionDropdown.options = {};
            a.conditionDropdown.options[0] = Travian.translate("Society.Conditions.None");
            a.conditionDropdown.selected = null;
            a.conditionDropdown.placeholder = "Society.Conditions.None";
            a.conditionDropdown.disabled = !1;
            var b = a.targetDropdown.options
              , f = a.conditionDropdown.options;
            a.input.chosenAttitude == Society.ATTITUDE_WHITE ? (b[Society.TARGET_VILLAGE] = Travian.translate("Society.Target.White.Village"),
            b[Society.TARGET_PLAYER] = Travian.translate("Society.Target.White.Player"),
            b[Society.TARGET_KINGDOM] = Travian.translate("Society.Target.White.Kingdom"),
            b[Society.TARGET_SOCIETY] = Travian.translate("Society.Target.White.Society"),
            f[Society.Xc] = Travian.translate("Society.Stats.Resources1"),
            f[Society.Yc] = Travian.translate("Society.Stats.Troops1"),
            f[Society.we] = Travian.translate("Society.Stats.TroopsDeployed")) : (b[Society.TARGET_VILLAGE] = Travian.translate("Society.Target.Black.Village"),
            b[Society.TARGET_PLAYER] = Travian.translate("Society.Target.Black.Player"),
            b[Society.TARGET_KINGDOM] = Travian.translate("Society.Target.Black.Kingdom"),
            f[Society.Xc] = Travian.translate("Society.Stats.Resources2"),
            f[Society.Yc] = Travian.translate("Society.Stats.Troops2"),
            f[Society.ve] = Travian.translate("Society.Stats.Treasures"))
        }
    }
    ;
    a.$watch("targetDropdown.selected", function() {
        switch (parseInt(a.targetDropdown.selected, 10)) {
        case Society.TARGET_VILLAGE:
            a.serverAutocompleteName = "village,coords";
            a.autocompleteCallback = "selectTargetVillage";
            a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Village");
            break;
        case Society.TARGET_PLAYER:
            a.serverAutocompleteName = "player";
            a.autocompleteCallback = "selectTargetPlayer";
            a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Player");
            break;
        case Society.TARGET_KINGDOM:
            a.serverAutocompleteName = "kingdom",
            a.autocompleteCallback = "selectTargetKingdom",
            a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Kingdom")
        }
    });
    a.$watch("conditionDropdown.selected", function() {
        a.input.conditionValue = null;
        var b = a.conditionDropdown.selected;
        a.valuePlaceholder = b == Society.Yc || b == Society.we ? Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Units") : b == Society.Xc ? Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Resources") : b == Society.ve ? Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Treasures") : Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Default")
    });
    a.selectTargetVillage = function(b) {
        a.selectedTarget = {
            targetType: Society.TARGET_VILLAGE,
            targetId: b.villageId
        }
    }
    ;
    a.selectTargetPlayer = function(b) {
        a.selectedTarget = {
            targetType: Society.TARGET_PLAYER,
            targetId: b.playerId
        }
    }
    ;
    a.selectTargetKingdom = function(b) {
        a.selectedTarget = {
            targetType: Society.TARGET_KINGDOM,
            targetId: b.groupId
        }
    }
    ;
    a.shared = {};
    a.shared.reports = !1;
    a.shared.nextAttacks = !1;
    a.shared.villageDetails = !1;
    a.checkValid = function() {
        var b = !0;
        "" == a.input.name && (b = !1);
        null == a.selectedTarget && a.targetDropdown.selected != Society.TARGET_SOCIETY && (b = !1);
        return b
    }
    ;
    a.foundNew = function() {
        var b = {};
        b.name = a.input.name;
        b.attitude = a.input.chosenAttitude;
        a.targetDropdown.selected != Society.TARGET_SOCIETY ? (b.target = a.selectedTarget.targetType,
        b.targetId = a.selectedTarget.targetId) : (b.target = Society.TARGET_SOCIETY,
        b.targetId = 0);
        b.sharedInformations = a.shared;
        b.joinCondition = a.conditionDropdown.selected;
        b.conditionValue = a.input.conditionValue;
        Travian.writeRequest("society/create", b, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyFoundError")
        })
    }
}
;
window.secretSocietyFoundCtrl.$inject = ["$scope"];
window.secretSocietyInvitationCtrl = function(a, c) {
    function b() {
        var b = a.society.data.targetType;
        b == Society.TARGET_VILLAGE && (a.targetObj = Village.get(a.society.data.targetId));
        b == Society.TARGET_PLAYER && (a.targetObj = Player.get(a.society.data.targetId));
        b == Society.TARGET_KINGDOM && (a.targetObj = Kingdom.get(a.society.data.targetId));
        a.conditions = SocietyConditions.getCollection(h);
        Cache.G(a.conditions, 1);
        a.hasSharedInformation = !1;
        $.each(a.shared, function(b, c) {
            a.society.isShared(c) && (a.hasSharedInformation = !0)
        });
        a.allConditionsMet = !1;
        a.subscribe(a.conditions, function() {
            b == Society.TARGET_VILLAGE && a.targetObj.data.playerId == a.player.data.playerId && (a.conditions.data.length = 0);
            b == Society.TARGET_PLAYER && a.targetObj.data.playerId == a.player.data.playerId && (a.conditions.data.length = 0);
            0 < a.conditions.data.length && (a.hasConditions = !0);
            a.allConditionsMet = !0;
            for (var c = (new Date).getTime(), e = 0; e < a.conditions.data.length; e++) {
                if (a.conditions.data[e].data.type == SocietyConditions.TYPE_TROOPS_DEPLOYED && m + 1E3 < c) {
                    m = c;
                    break
                }
            }
            for (e = 0; e < a.conditions.data.length; e++) {
                if (c = a.conditions.data[e].data,
                c.ownValue < c.value) {
                    a.allConditionsMet = !1;
                    break
                } else {
                    c.ownValue = c.value
                }
            }
        })
    }
    function f() {
        e = "undefined" != typeof a.getParam(g) ? a.getParam("invitation") : "";
        "" == e ? (a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_SECRET_SOCIETY),
        a.subscribe(a.invitations, function() {
            0 == a.invitations.data.length && a.closeOverlay()
        }),
        a.overlayConfig.ed("inWindowPopupTemplate"),
        a.overlayConfig.k({
            inWindowPopupTitle: "Group.OpenInvitations.Headline",
            inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
            inWindowPopupContentTemplate: "tpl/building/embassy/overlay/secretSociety/secretSocietyInvitationOverview.html"
        })) : (a.invitation = GroupInvitation.get(e),
        "undefined" != typeof a.invitation && a.player.data.playerId == a.invitation.data.playerId || a.l(g),
        a.overlayConfig.k({
            inWindowPopupTemplate: "tpl/building/embassy/overlay/secretSociety/secretSocietyInvitationDetails.html"
        }),
        a.hasConditions = !1,
        h = a.invitation.data.groupId,
        a.society = Society.get(h),
        a.subscribe(a.society, b))
    }
    var g = "invitation"
      , e = ""
      , h = ""
      , m = 0;
    a.player = Travian.Player;
    a.shared = {
        reports: Society.SHARED_REPORTS,
        nextAttacks: Society.SHARED_NEXT_ATTACKS,
        villageDetails: Society.SHARED_VILLAGE_DETAILS
    };
    a.subscribe(a.player, function() {
        a.isSitter = c.K();
        "undefined" != typeof a.invitations && Cache.B(a.invitations);
        f()
    });
    a.$on("urlChanged", function() {
        f()
    });
    a.$on("$destroy", function() {
        a.l(g)
    });
    a.backToOverview = function() {
        a.l(g)
    }
    ;
    a.acceptInvitation = function() {
        Travian.writeRequest("society/acceptInvitation", {
            id: a.invitation.data.id
        }, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyInviteError")
        })
    }
    ;
    a.handleError({}, "societyInviteError");
    a.declineInvitation = function() {
        Travian.writeRequest("society/declineInvitation", {
            id: a.invitation.data.id
        }, function(b) {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyInviteError")
        })
    }
}
;
window.secretSocietyInvitationCtrl.$inject = ["$scope", "SessionService"];
window.secretSocietyLeaveCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Society.Leave.SecretSociety",
        inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
        inWindowPopupContentTemplate: "tpl/building/embassy/overlay/secretSociety/secretSocietyLeave.html"
    });
    if ("undefined" != typeof a.getParam("societyId")) {
        var c = a.getParam("societyId")
    }
    a.confirmLeaveSociety = function() {
        var b = {};
        b.groupId = c;
        b.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
        Travian.writeRequest("society/leave", b, function() {
            "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyLeaveError")
        })
    }
    ;
    a.$on("$destroy", function() {
        a.l("societyId")
    })
}
;
window.secretSocietyLeaveCtrl.$inject = ["$scope"];
window.noResourceSendToOthersCtrl = function(a) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Marketplace.Send.Button.SendResources",
        inWindowPopupContentTemplate: "tpl/building/marketplace/overlay/noResourceSendToOthers.html",
        isAWarning: !0
    })
}
;
window.noResourceSendToOthersCtrl.$inject = ["$scope"];
window.deactivateTreasuryCtrl = function(a, c, b, f) {
    a.overlayConfig.k({
        inWindowPopupTitle: "Treasury.DeactivateTreasury.Title",
        inWindowPopupContentTemplate: "tpl/building/treasury/overlay/deactivateTreasury.html",
        isAWarning: !0
    });
    a.isKing = Travian.Player.isKing();
    a.isDuke = Travian.Player.isDuke();
    a.treasuryAmount = f.vd(Building.TYPE.TREASURY);
    a.confirmDeactivation = function() {
        Travian.writeRequest("building/transformTreasury", {
            villageId: b.getActiveVillageId(),
            locationId: a.w.building.data.locationId
        }, function() {
            c.$broadcast("transformTreasury")
        })
    }
}
;
window.deactivateTreasuryCtrl.$inject = ["$scope", "$rootScope", "VillageService", "BuildingService"];
window.deleteFriendConfirmCtrl = function(a, c) {
    a.overlayConfig.k({
        inWindowPopupTitle: "FriendList.Friends.DeleteFriend.Header",
        inWindowPopupContentTemplate: "tpl/society/overlay/deleteFriendConfirm.html"
    });
    a.confirmDeletion = function() {
        var b = a.getParam("fuid");
        b && c.Ye(b)
    }
}
;
window.deleteFriendConfirmCtrl.$inject = ["$scope", "FriendService"];
window.foreignVillagesCtrl = function(a, c) {
    a.grantProtection = function(a) {
        Travian.writeRequest("village/grantProtection", {
            villageId: a
        })
    }
    ;
    a.collectAll = function() {
        var b = [];
        a.foreignVillages.forEach(function(c) {
            c.data.canFetchTributes && a.influences[c.data.villageId].connected && b.push(c.data.villageId)
        });
        0 < b.length && Travian.writeRequest("troops/fetchTributesForVillages", {
            villageId: c.getActiveVillageId(),
            destVillageIds: b
        }, function() {
            a.$broadcast("collectAllTributes")
        });
        a.collectAllTributes.foreignVillages = -1
    }
}
;
window.foreignVillagesCtrl.$inject = ["$scope", "VillageService"];
window.independentVillagesCtrl = function(a) {
    a.inviteToKingdom = function(a) {
        Travian.writeRequest("player/inviteToKingdom", {
            villageId: a
        })
    }
    ;
    a.cancelInvitation = function(a) {
        Travian.writeRequest("kingdom/declineInvitation", {
            id: a
        })
    }
    ;
    a.kingdomChangeDenied = Gameworld.get().isKingdomChangeDenied()
}
;
window.independentVillagesCtrl.$inject = ["$scope"];
window.ownVillagesCtrl = function(a) {
    var c = Village.getCollection(Village.COLLECTION_OWN)
      , b = Kingdom.get(Travian.Player.data.kingdomId);
    a.ownVillages = c.getSubCollection(function(a) {
        return !a.data.tributeCollectorPlayerId || a.data.tributeCollectorPlayerId == Travian.Player.data.playerId || -1 == a.data.belongsToKing || Travian.Player.isViceKing() && (b.getKingId() == a.data.tributeCollectorPlayerId || -1 < $.inArray(b.getDukeIds(), a.data.tributeCollectorPlayerId)) ? !1 : !0
    });
    a.toggleDenyTributes = function(a, b) {
        Travian.writeRequest("village/toggleAllowTributeCollection", {
            villageId: b
        })
    }
    ;
    var f = 0
      , g = Travian.tick.bind(function() {
        if (c.filled) {
            var a = (new Date).getTime();
            if (a > f + 1E3) {
                for (f = a,
                a = 0; a < c.data.length; a++) {
                    c.data[a].getTributes()
                }
            }
        }
    });
    a.$on("$destroy", function() {
        a.ownVillages.unsubscribe();
        Travian.tick.unbind(g)
    })
}
;
window.ownVillagesCtrl.$inject = ["$scope"];
window.tributeVillagesCtrl = function(a, c) {
    a.collectAll = function(b) {
        var f = []
          , g = a.tributeVillages;
        b && (g = a.dukeVillages);
        g.forEach(function(b) {
            b.data.canFetchTributes && a.influences[b.data.villageId].connected && f.push(b.data.villageId)
        });
        0 < f.length && Travian.writeRequest("troops/fetchTributesForVillages", {
            villageId: c.getActiveVillageId(),
            destVillageIds: f
        }, function() {
            a.$broadcast("collectAllTributes")
        });
        b ? a.collectAllTributes.dukeVillages = -1 : a.collectAllTributes.tributeVillages = -1
    }
}
;
window.tributeVillagesCtrl.$inject = ["$scope", "VillageService"];
Travian.Directive.troopDetailsRallypoint = function(a, c, b, f, g, e) {
    return {
        replace: !0,
        restrict: "EA",
        scope: {
            troopDetails: "=",
            unitInput: "=?",
            unitInputEnabled: "=?",
            callback: "&",
            abort: "&",
            sendTroops: "&",
            updateUnitSemaphore: "=?"
        },
        link: function(f, m, l) {
            function p() {
                function p() {
                    if (f.updateUnitSemaphore) {
                        f.updateUnitSemaphore = !1;
                        f.showDeadUnits = !1;
                        "undefined" != typeof f.troopDetails.deadUnits && (f.deadUnits = {},
                        f.showDeadUnits = !0);
                        f.units = [];
                        "undefined" == typeof f.unitInput && (f.unitInput = []);
                        "undefined" == typeof f.unitInputEnabled && (f.unitInputEnabled = []);
                        for (var a in f.troopDetails.units) {
                            var b = f.troopDetails.units[a];
                            -1 == b ? (f.units[a] = "?",
                            f.showDeadUnits && "undefined" != typeof f.troopDetails.deadUnits[a] && (f.deadUnits[a - 1] = f.troopDetails.deadUnits[a])) : 0 < b && (f.units[a] = b,
                            f.showDeadUnits && "undefined" != typeof f.troopDetails.deadUnits[a] && (f.deadUnits[a - 1] = f.troopDetails.deadUnits[a]))
                        }
                    }
                }
                if (!n) {
                    n = !0;
                    var q = b.getActiveVillageId()
                      , w = "";
                    f.showStolenGoods = !1;
                    f.showInputFields = !1;
                    "undefined" != typeof l.view && (w = l.view);
                    "undefined" != typeof l.showInputFields && (f.showInputFields = !0);
                    f.status = f.troopDetails.status;
                    f.showUnits = !0;
                    f.showAbort = !1;
                    f.showBounty = !1;
                    f.showSpy = !1;
                    f.oasis = !1;
                    f.showCatapults = !1;
                    f.showDeadUnits = !1;
                    f.settle = !1;
                    f.updateUnitSemaphore = !0;
                    f.isGroup = "undefined" != typeof f.troopDetails.troopsGroup && 0 < f.troopDetails.troopsGroup.length;
                    var s = g.Uh(f.troopDetails.troopId);
                    f.markerColor = r[s];
                    f.changeMarker = function() {
                        s++;
                        3 < s && (s = 0);
                        f.markerColor = r[s];
                        g.gj(f.troopDetails.troopId, s)
                    }
                    ;
                    p();
                    f.$watch("updateUnitSemaphore", p);
                    f.showAction = !1;
                    if (!f.showInputFields && ("support" == f.status && f.troopDetails.tribeId == Player.TRIBE.NATURE && (f.status = "nature"),
                    f.troopDetails.status == Troops.STATUS_SUPPORT && (f.troopDetails.villageId == q ? (f.action = "Call",
                    f.status = "awaySupport") : f.action = "Send",
                    "oasis" == w && (f.status = "oasisSupport"),
                    "ownSupport" == w && (f.status = "ownSupport"),
                    f.showAction = !0),
                    f.troopDetails.status == Troops.STATUS_TRAP && (f.troopDetails.villageIdLocation == q ? (f.action = "Release",
                    f.status = "homeTrap") : (f.action = "Disband",
                    f.status = "awayTrap"),
                    f.showAction = !0),
                    f.troopDetails.status == Troops.STATUS_TRANSIT)) {
                        f.movementIcon = Troops.MOVEMENT_ICON[f.troopDetails.movement.movementType];
                        w = new Troops;
                        w.set(f.troopDetails);
                        f.movementGroup = w.getMovementGroup(q);
                        0 < f.troopDetails.movement.catapultTarget1 && (f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_ATTACK || f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_SIEGE) && (f.showCatapults = !0);
                        0 < parseInt(f.troopDetails.movement.spyTarget) && (f.showSpy = !0);
                        f.troopDetails.villageId == q && f.troopDetails.villageId != f.troopDetails.villageIdLocation ? (f.isAdventure = f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_ADVENTURE,
                        f.status = "outgoing",
                        f.showAbort = !0,
                        f.abortButtonShowTime = Math.min(parseInt(f.troopDetails.movement.timeFinish), parseInt(f.troopDetails.movement.timeStart) + 90),
                        e.K() && (q = f.troopDetails.movement.movementType,
                        w = parseInt(f.troopDetails.movement.playerIdTarget),
                        (q == Troops.MOVEMENT_TYPE_ATTACK || q == Troops.MOVEMENT_TYPE_SIEGE) && 100 < w && (f.showAbort = !1),
                        q == Troops.MOVEMENT_TYPE_RAID && (!e.hasRight(Session.RIGHT_SEND_RAIDS) && 100 < w) && (f.showAbort = !1),
                        q != Troops.MOVEMENT_TYPE_SUPPORT || (f.troopDetails.playerIdLocation == f.troopDetails.playerId || e.hasRight(Session.RIGHT_SEND_SUPPORT)) || (f.showAbort = !1))) : (f.status = "incoming",
                        f.troopDetails.villageIdLocation != q && (f.oasis = !0),
                        "hide" == f.troopDetails.filter && (f.showUnits = !1));
                        if (f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT || f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN) {
                            f.showUnits = !1;
                            f.showAbort = !1;
                            f.showInstantDelivery = !1;
                            f.player = Travian.Player;
                            q = Voucher.get(Travian.Player.data.playerId);
                            f.hasVoucherInstantTrade = q.data.hasVouchers[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY];
                            var q = parseInt(f.troopDetails.movement.movementType)
                              , x = f.troopDetails.playerId
                              , w = parseInt(f.troopDetails.movement.playerIdTarget);
                            q == Troops.MOVEMENT_TYPE_TRANSPORT && (x == f.player.data.playerId && x == w) && (f.showInstantDelivery = !0);
                            f.premiumFeatureName = PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY;
                            1 == f.hasVoucherInstantTrade ? f.premiumFeaturePrice = -1 : (q = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY],
                            w = f.troopDetails.movement.timeFinish - Travian.ServerTime,
                            f.premiumFeaturePrice = w < 60 * q.minutesMin ? q.priceMin : w < 60 * q.minutesMid ? q.priceMid : q.priceMax);
                            f[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY] = function(a) {
                                return {
                                    troopId: a
                                }
                            }
                        }
                        f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_SETTLE && (q = id2xy(f.troopDetails.villageIdLocation),
                        f.troopDetails.villageNameLocation = Travian.translate("HabitableField") + " (" + q.x + "|" + q.y + ")",
                        f.settle = !0);
                        f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT && (f.status = "incoming",
                        f.showAbort = !1,
                        f.showUnits = !1,
                        f.showInstantDelivery = !0,
                        f.hideCapacity = !0,
                        f.premiumFeatureName = PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY,
                        f.premiumFeaturePrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY].price,
                        f[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY] = function() {
                            return {
                                destinationVillageId: f.troopDetails.villageIdLocation
                            }
                        }
                        ,
                        f.player = Travian.Player);
                        f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TREASURE_RESOURCES && (f.player = Travian.Player,
                        f.status = "incoming",
                        f.showUnits = !1,
                        f.hideCapacity = !0,
                        f.showInstantDelivery = !0,
                        f.premiumFeatureName = PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT,
                        f.premiumFeaturePrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT].price,
                        f[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT] = function(a) {
                            return {
                                troopId: a
                            }
                        }
                        );
                        f.totalResources = 0;
                        for (q = 1; 4 >= q; q++) {
                            0 < f.troopDetails.movement.resources[q] && (f.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN && (f.oldBounty = !0),
                            f.totalResources += +f.troopDetails.movement.resources[q],
                            f.showBounty = !0)
                        }
                        0 < f.troopDetails.movement.treasures && (f.showBounty = !0,
                        f.totalResources += +f.troopDetails.movement.treasures,
                        0 > parseInt(f.troopDetails.movement.villageIdStart) && !Travian.Player.data.isKing && (f.showStolenGoods = !0))
                    }
                    f.sendBack = function() {
                        f.sendTroops({
                            troops: f.troopDetails,
                            type: f.action
                        })
                    }
                    ;
                    f.abortMovement = function() {
                        f.abort({
                            troopId: f.troopDetails.troopId
                        })
                    }
                    ;
                    m.html(c.get("tpl/troopDetails/rallypoint/troopDetailsRallypoint.html"));
                    a(m.contents())(f);
                    requestAngularApply()
                }
            }
            m = $(m);
            f.openWindow = f.$root.openWindow;
            f.tribes = Player.TRIBE;
            f.tribe = Player.TRIBE_NAME[f.troopDetails.tribeId];
            f.heroId = Troops.TYPE_HERO;
            f.Troops = Troops;
            var n = !1
              , q = !1;
            "undefined" != typeof l.renderLazy && "true" === l.renderLazy && (q = !0);
            f.renderLazy = q;
            var r = {
                0: "grey",
                1: "green",
                2: "yellow",
                3: "red"
            };
            q ? (m[0].Aa = function() {
                p()
            }
            ,
            m.html('<div style="display: inline-block; height: 100px;"></div>'),
            m.addClass("waitForRender"),
            f.$on("$destroy", function() {
                m[0].Aa = null
            })) : p()
        }
    }
}
;
Travian.Directive.troopDetailsRallypoint.$inject = "$compile $templateCache VillageService $timeout TroopsService SessionService".split(" ");
Travian.Directive.autosize = function() {
    return function(a, c) {
        function b() {
            var a = -1 * Math.round(c.height() / 2);
            c.css("margin-top", a)
        }
        var f = null;
        null == f && (f = Travian.tick.bind(b));
        c.bind("$destroy", function() {
            Travian.tick.unbind(f)
        })
    }
}
;
Travian.Directive.bbCodeInput = function(a, c) {
    return {
        replace: !0,
        template: a.get("tpl/directive/bbCodeInput.html"),
        restrict: "A",
        scope: !0,
        require: "ngModel",
        link: function(a, f, g, e) {
            function h(c, e) {
                var g = $(f.find("textarea")), h = g[0], q;
                h.focus();
                var r = h.selectionStart || 0;
                if (!r && document.selection && (q = document.selection.createRange())) {
                    var r = h.createTextRange()
                      , t = r.duplicate();
                    r.moveToBookmark(q.getBookmark());
                    t.setEndPoint("EndToStart", r);
                    r = t.text.length
                }
                q = r;
                r = void 0 !== h.selectionStart ? h.selectionEnd - h.selectionStart : document.selection ? document.selection.createRange().text.length : 0;
                t = g.val();
                t = t.substr(0, q) + c + t.substr(q, r) + e + t.substr(q + r, t.length);
                a.localTextModel = t;
                g.val(t);
                g = q += c.length + r;
                h.selectionStart ? h.setSelectionRange(g, g) : h.createTextRange && (r = h.createTextRange(),
                r.move("character", g),
                r.select());
                g = q;
                q = $(h);
                var r = parseInt(q.css("lineHeight")), u, t = getTotalElementHeight(h, h.value.substr(0, g));
                u = parseInt(t / r);
                t = parseInt(q.css("padding-top"));
                $.browser.mozilla && q.scrollTop(q.scrollTop() + t);
                if (u * r >= q.scrollTop() + q.outerHeight() - t) {
                    var w = q.outerHeight() - 2 * (t - 1);
                    u = u * r - w;
                    $.browser.mozilla ? u += t : ($.browser.Sj || $.browser.opera) && 0 == (q.scrollTop() + w) % r && (h.value.substr(g, h.value.length).match(/\n/) ? u += (q.outerHeight() - r) / 2 - 1 : g < h.value.length && (u += t));
                    q.scrollTop(u)
                }
            }
            a.preview = !1;
            a.searchOpened = !1;
            a.localTextModel = "";
            a.searchModel = "";
            g.setFocus && a.$evalAsync(function() {
                $(f.find("textarea")).focus()
            });
            a.$watch("localTextModel", function() {
                e.$setViewValue(a.localTextModel)
            });
            e.$render = function() {
                e.$viewValue || (e.$viewValue = "");
                a.localTextModel = e.$viewValue
            }
            ;
            a.triggerSearch = function() {
                a.searchOpened = !a.searchOpened;
                c(function() {
                    $(f).find("input").focus()
                }, 0)
            }
            ;
            a.searchCallback = function(c) {
                c || (c = {});
                switch (c.searchType) {
                case "village":
                    h("[village:" + c.villageId + "]", "");
                    break;
                case "player":
                    h("[player:" + c.playerId + "]", "");
                    break;
                case "coords":
                    h("[cell:" + c.villageId + "]", "");
                    break;
                case "kingdom":
                    h("[kingdom:" + c.groupId + "]", "")
                }
                a.searchModel = "";
                a.searchOpened = !1
            }
            ;
            a.triggerPreview = function() {
                a.preview = !a.preview;
                a.preview && (a.searchModel = "",
                a.searchOpened = !1);
                var c = $(f).find("textarea")
                  , e = $(f).find(".previewWrapper");
                e.width(c.width());
                e.height(c.height() + 3)
            }
            ;
            f.on("keydown", function(a) {
                a.which == keyboard.Zc && (a.ctrlKey || a.altKey || a.metaKey) && h("\n", "")
            });
            f.on("keyup", function() {
                if (g.autoExpand && "undefined" != typeof g.minHeight && "undefined" != typeof g.maxHeight) {
                    var a = $(f.find("textarea"))
                      , b = parseInt(a.css("lineHeight"));
                    a.css("padding-top");
                    var c = getTotalElementHeight(a, a.val())
                      , e = "hidden"
                      , h = parseInt(g.maxHeight);
                    c + b > g.minHeight && c + b <= g.maxHeight ? h = c + b : c < g.minHeight ? h = parseInt(g.minHeight) : e = "auto";
                    a.css("height", h + "px");
                    a.css("overflow", e)
                }
            });
            a.insertCode = h;
            a.checkDrop = function(c) {
                if (c.link) {
                    var e = $(f.find("textarea"));
                    c = e.val() + c.link;
                    e.val(c);
                    e.focus();
                    a.localTextModel = c
                }
            }
            ;
            a.$on("$destroy", function() {
                f.off();
                angular.element(f).remove()
            })
        }
    }
}
;
Travian.Directive.bbCodeInput.$inject = ["$templateCache", "$timeout"];
Travian.Directive.fixedTableHeader = function() {
    return {
        restrict: "A",
        scope: !1,
        replace: !1,
        link: function(a, c) {
            function b() {
                var a = c.find("thead");
                a.addClass("fixedTableHeader");
                if (a) {
                    var b = a.height()
                      , g = a.find("th")
                      , l = c.find("tbody tr")
                      , p = null
                      , n = 0;
                    c.parents("[scrollable]").css("margin-top", b);
                    a.css("top", -1 * b).css("position", "absolute");
                    l.each(function(a, b) {
                        null === p && $(b).children("td").length === g.length && (p = b,
                        $(g).each(function(a, c) {
                            var e = $($(b).find("td")[a])
                              , f = $(c).width();
                            f > e.width() && e.width(f)
                        }))
                    });
                    null !== p && ($(a).width($(p).width()),
                    $(p).find("td").each(function(a, b) {
                        n = $(b).width();
                        $(g[a]).width(n)
                    }),
                    f())
                }
            }
            function f() {
                Travian.tick.unbind(g)
            }
            var g;
            g = Travian.tick.bind(function() {
                b()
            });
            c.bind("$destroy", function() {
                f()
            })
        }
    }
}
;
Travian.Directive.fixedTableHeader.$inject = [];
Travian.Directive.inlineAutoComplete = function(a) {
    return {
        restrict: "A",
        link: function(c, b, f) {
            function g(a) {
                void 0 !== a.originalEvent && a.originalEvent instanceof jQuery.Event && (a = g(a.originalEvent));
                return a
            }
            function e(b, c) {
                a.emit("autocomplete", {
                    type: r,
                    string: b,
                    lastSelected: null
                }, function(a) {
                    h(a, c)
                })
            }
            function h(a, b) {
                for (var c = [], e = 0; e < a.length; e++) {
                    var f = "@" + p
                      , g = "";
                    1 < r.length && ("undefined" != typeof a[e].groupId && (g = "(" + Travian.translate("Kingdom") + ")"),
                    "undefined" != typeof a[e].playerId && "undefined" == typeof a[e].villageId && 0 < a[e].playerId && (g = "(" + Travian.translate("Player") + ")"));
                    "undefined" != typeof a[e].groupId && (f = "[kingdom:" + a[e].groupId + "]");
                    "undefined" != typeof a[e].playerId && "undefined" == typeof a[e].villageId ? f = "[player:" + a[e].playerId + "]" : "undefined" != typeof a[e].villageId && (f = Player.isNPC(a[e].playerId) ? "[cell:" + a[e].villageId + "]" : "[village:" + a[e].villageId + "]");
                    var h = a[e].name.replace(/[&<>"]/g, function(a) {
                        return {
                            "&": "&amp;",
                            "<": "&lt;",
                            ">": "&gt;",
                            '"': "&#34;"
                        }[a] || a
                    });
                    "undefined" != typeof a[e].villageId && 0 < a[e].playerId && (g = u("", a[e].x, a[e].y));
                    c.push({
                        label: '<div class="resultRow"><span class="resultName">' + h + '</span><span class="resultType">' + g + "</span></div>",
                        value: n + f + q
                    })
                }
                "function" == typeof b && b(c)
            }
            var m = 0, l = $(b[0]), p, n = "", q = "", r = [], t = (new Date).getTime(), u = Travian.Filter.bidiCoordinate();
            void 0 === f.verticalAlign && (f.verticalAlign = "above");
            f.$observe("autocompletedata", function(a) {
                if ("undefined" != typeof a) {
                    var b = a.split(",");
                    1 == b.length && (b = a.split(" "));
                    r = b
                }
            });
            b = function() {
                var a = "undefined" !== typeof f.verticalAlign && "above" == f.verticalAlign ? "top" : "bottom"
                  , b = "top" == a ? "bottom" : "top"
                  , c = "ltr" == getDirection() ? "left" : "right";
                return {
                    my: c + " " + b,
                    at: c + " " + a
                }
            }();
            l.autocomplete({
                source: function(a, b) {
                    e(p, b)
                },
                search: function() {
                    m = l[0].selectionStart;
                    var a = /(\@[^\@]{3,})$/g;
                    n = l[0].value.substring(0, m) || "";
                    q = l[0].value.substring(m) || "";
                    p = n.match(a);
                    n = n.replace(a, "") || "";
                    null !== p && (p = p[0].substring(1));
                    if (null === p || 3 > p.length && (0 > r.indexOf("kingdom") || 1 > p.length) || (new Date).getTime() < t + 500) {
                        return !1
                    }
                },
                messages: {
                    noResults: "",
                    results: y()
                },
                close: function(a) {
                    a = g(a);
                    "keydown" != a.type || a.which != keyboard.ye && a.which != keyboard.Zc || (a.preventDefault(),
                    a.stopImmediatePropagation())
                },
                autoFocus: !0,
                position: b
            }).data("ui-autocomplete")._renderItem = function(a, b) {
                a.addClass("serverautocomplete dropdownBody");
                return $('<li class="autocomplete">').append($("<a>").html(b.label)).appendTo(a)
            }
            ;
            "true" === f.inputAutoFocus && c.$$postDigest(function() {
                l.focus()
            });
            c.$on("$destroy", function() {
                l.unbind();
                l.autocomplete("destroy");
                l.removeData("autocomplete")
            })
        }
    }
}
;
Travian.Directive.inlineAutoComplete.$inject = ["SocketService"];
Travian.Directive.mellonFrame = function(a) {
    return {
        restrict: "E",
        template: '<iframe ng-if="iframeUrl != \'\'" ng-src="{{iframeUrl}}" frameborder="0" allowtransparency="1" class="mellon_iframe {{additionalClass}}"> Your browser does not support iframes </iframe>',
        scope: {
            url: "@",
            additionalClass: "@"
        },
        link: function(c) {
            c.iframeUrl = a.trustAsResourceUrl(c.url)
        }
    }
}
;
Travian.Directive.mellonFrame.$inject = ["$sce"];
Travian.Directive.newScope = function() {
    return {
        scope: !0,
        link: y()
    }
}
;
Travian.Directive.playerProfile = function(a, c) {
    return {
        restrict: "E",
        scope: !0,
        template: a.get("tpl/directive/playerProfile.html"),
        link: function(a, f, g) {
            function e() {
                a.playerData = m.data;
                a.playerRole = m.data.kingdomRole;
                Travian.request("player/getPlayerInfo", {
                    playerId: a.playerId
                }, function(c) {
                    a.playerInfo = c
                })
            }
            function h() {
                var c = m.data.kingdomId;
                0 < c && Travian.request("ranking/getKingdomStats", {
                    kingdomId: c
                }, function(c) {
                    a.kingdomStats = c
                })
            }
            var m = null
              , l = null;
            a.playerModel = Player;
            a.myPlayerId = c.getPlayerId();
            a.kingdomProfile = !1;
            a.kingdomStats = !1;
            g.$observe("playerid", function(c) {
                a.playerId = c;
                m = Player.get(c);
                l = m.subscribe(function() {
                    e();
                    h()
                })
            });
            g.$observe("kingdomprofile", function(c) {
                c && (a.kingdomProfile = c)
            });
            a.$on("$destroy", function() {
                l && m && m.unsubscribe(l)
            })
        }
    }
}
;
Travian.Directive.playerProfile.$inject = ["$templateCache", "SessionService"];
Travian.Directive.serverautocomplete = function(a, c, b, f) {
    return {
        restrict: "E",
        replace: !0,
        template: b.get("tpl/directive/generalElements/serverautocomplete.html"),
        require: "ngModel",
        link: function(b, e, h, m) {
            function l(a) {
                var c = angular.copy(f.W().data);
                if (("true" === a || !0 === a) && 1 < c.length) {
                    for (b.showOwnVillages = !0,
                    b.ownVillages = [],
                    c.sort(function(a, b) {
                        return a.data.name.localeCompare(b.data.name)
                    }),
                    a = 0; a < c.length; a++) {
                        s.data.villageId != c[a].data.villageId && b.ownVillages.push(c[a].data)
                    }
                }
            }
            function p() {
                if ("undefined" === typeof h.lastSearchDataObj) {
                    return !1
                }
                for (var a = b, c = h.lastSearchDataObj.split("."), e = 0; e < c.length - 1; e++) {
                    a = a[c[e]]
                }
                return "object" == typeof a[c[c.length - 1]]
            }
            function n(a) {
                for (var c = b, e = h.lastSearchDataObj.split("."), f = 0; f < e.length - 1; f++) {
                    c = c[e[f]]
                }
                e = e[e.length - 1];
                "object" == typeof c[e] && (c[e].data = a)
            }
            function q(b) {
                null != b && null != b.item && (v = b.item.obj);
                null === v || "undefined" === typeof v.searchType || "playerVillages" != v.searchType && "kingdomVillages" != v.searchType ? (null !== v && null !== b && p() ? n([v]) : p() && "" == A.val() && n([]),
                "undefined" != typeof h.autocompletecb && r(b)) : "undefined" !== typeof h.lastSearchDataObj && p() ? a.emit("autocomplete", {
                    type: D,
                    string: v.name,
                    lastSelected: v
                }, function(a) {
                    n(a);
                    "undefined" != typeof h.autocompletecb && (r(null),
                    v = null)
                }) : c(function() {
                    null !== v && A.autocomplete("search", v.name)
                }, 160)
            }
            function r(a) {
                for (var c = b, e = h.autocompletecb.split("."), f = 0; f < e.length - 1; f++) {
                    c = c[e[f]]
                }
                e = e[e.length - 1];
                if ("function" == typeof c[e]) {
                    if (null != a && null != a.item) {
                        c[e](a.item.obj)
                    } else {
                        if (null != a && null != a.village) {
                            c[e](a.village)
                        } else {
                            c[e](null)
                        }
                    }
                }
                null !== v && b.$$postDigest(function() {
                    $(A).blur();
                    v = null
                });
                requestAngularApply()
            }
            function t(a, b) {
                if (null == v || "" == A.val()) {
                    if (null == b.item && "" != A.val()) {
                        if (0 < x.length) {
                            b.item = x[0],
                            A.val(b.item.value)
                        } else {
                            2 < A.val().length || q(null);
                            return
                        }
                    }
                    q(b)
                }
            }
            function u(a, b) {
                var c = [];
                v = null;
                if ("function" == typeof b && p() && -1 == D.indexOf("playerVillages") && -1 == D.indexOf("kingdomVillages")) {
                    n(a)
                } else {
                    for (var e = 0; e < a.length; e++) {
                        var f = "";
                        1 < D.length && ("undefined" != typeof a[e].groupId && (f = "(" + Travian.translate("Kingdom") + ")"),
                        "undefined" != typeof a[e].playerId && "undefined" == typeof a[e].villageId && 0 < a[e].playerId && (f = "(" + Travian.translate("Player") + ")"));
                        var g = a[e].name.replace(/[&<>"]/g, function(a) {
                            return {
                                "&": "&amp;",
                                "<": "&lt;",
                                ">": "&gt;",
                                '"': "&#34;"
                            }[a] || a
                        });
                        "undefined" != typeof a[e].villageId && 0 < a[e].playerId && (f = F("", a[e].x, a[e].y));
                        c.push({
                            label: '<div class="resultRow"><span class="resultName">' + g + '</span><span class="resultType">' + f + "</span></div>",
                            value: a[e].name,
                            obj: a[e]
                        })
                    }
                    x = c;
                    "function" == typeof b ? b(c) : t(0, {
                        item: null
                    })
                }
            }
            function w(b, c) {
                a.emit("autocomplete", {
                    type: D,
                    string: b,
                    lastSelected: v
                }, function(a) {
                    u(a, c)
                })
            }
            var s = f.i();
            e = $(e);
            var x = []
              , v = null
              , D = []
              , C = (new Date).getTime()
              , A = e.find("input")
              , F = Travian.Filter.bidiCoordinate()
              , B = parseInt($(A).css("width"))
              , E = e.find("label");
            $(E).css("width", B - 24 + "px");
            e = function() {
                var a = "undefined" !== typeof h.verticalAlign && "above" == h.verticalAlign ? "top" : "bottom"
                  , b = "top" == a ? "bottom" : "top"
                  , c = "ltr" == getDirection() ? "left" : "right";
                "top" == a && E.addClass("above");
                return {
                    my: c + " " + b,
                    at: c + " " + a
                }
            }();
            b.disabledInput = !1;
            b.showAllVillages = !1;
            b.showOwnVillagesList = !1;
            b.ownVillagesListVisible = !1;
            b.searchTypes = "";
            b.modelInput = "";
            b.changeInput = y();
            b.onFocus = y();
            h.$observe("autocompletedata", function(a) {
                if ("undefined" != typeof a) {
                    var c = a.split(",");
                    1 == c.length && (c = a.split(" "));
                    D = c;
                    a = [];
                    for (c = 0; c < D.length; c++) {
                        "" != D[c] && ("emptyCoords" != D[c] && "onlyPlayerVillage" != D[c]) && a.push(Travian.translate("Search." + D[c].charAt(0).toUpperCase() + D[c].slice(1)))
                    }
                    b.searchTypes = a.join(", ")
                }
            });
            h.$observe("disabledInput", function(a) {
                b.disabledInput = "true" == a
            });
            h.$observe("changeInput", function(a) {
                b.changeInput = a
            });
            h.$observe("onFocus", function(a) {
                "function" == typeof b[a] && (b.onFocus = b[a])
            });
            h.$observe("showOwnVillages", l);
            b.toggleOwnVillagesList = function() {
                v = null;
                b.ownVillagesListVisible = !b.ownVillagesListVisible
            }
            ;
            b.hideOwnVillagesList = function() {
                b.ownVillagesListVisible = !1
            }
            ;
            b.selectOwnVillage = function(a) {
                b.modelInput = b.ownVillages[a].name;
                b.hideOwnVillagesList();
                r({
                    village: b.ownVillages[a]
                })
            }
            ;
            b.$watch("modelInput", function() {
                m.$setViewValue(b.modelInput)
            });
            m.$render = function() {
                m.$viewValue || (m.$viewValue = "");
                b.modelInput = m.$viewValue
            }
            ;
            h.preSelection && setTimeout(function() {
                w(h.preSelection)
            });
            A.autocomplete({
                source: function(a, b) {
                    x = [];
                    3 > a.term.length && (0 > D.indexOf("kingdom") && 0 > D.indexOf("kingdomVillages") || 1 > a.term.length) ? p() && (n([]),
                    requestAngularApply()) : "undefined" != typeof h.disableSearch && h.disableSearch == a.term ? h.disableSearch = "" : (new Date).getTime() < C + 500 || w(a.term, b)
                },
                messages: {
                    noResults: "",
                    results: y()
                },
                close: t,
                select: function(b, c) {
                    a.Qc();
                    var e = q(c);
                    "undefined" !== typeof h.autoFocusAfterSelect && $(h.autoFocusAfterSelect).focus();
                    return e
                },
                autoFocus: !0,
                position: e
            }).data("ui-autocomplete")._renderItem = function(a, b) {
                a.addClass("serverautocomplete dropdownBody");
                return $('<li class="autocomplete">').append($("<a>").html(b.label)).appendTo(a)
            }
            ;
            $(A).bind("keyup", function(a) {
                switch (a.keyCode) {
                case 46:
                    ;
                case 8:
                    0 == A.val().length && q(null)
                }
            });
            $(A).attr("placeholder") || $(A).attr("placeholder", Travian.translate("AutoCompletion.Placeholder.Search"));
            "true" === h.inputAutofocus && b.$$postDigest(function() {
                A.focus()
            });
            h.$observe("inputAutofocus", function(a) {
                "true" === a && b.$$postDigest(function() {
                    A.focus()
                })
            });
            b.$on("activeVillageChanged", function() {
                s = f.i();
                l(b.showOwnVillages)
            });
            b.$on("$destroy", function() {
                $(A).unbind();
                $(A).autocomplete("destroy");
                $(A).removeData("autocomplete")
            })
        }
    }
}
;
Travian.Directive.serverautocomplete.$inject = ["SocketService", "$timeout", "$templateCache", "VillageService"];
Travian.Directive.tgCoords = function() {
    return function(a, c, b) {
        b.$observe("tgCoords", function(a) {
            c.attr("coords", a)
        })
    }
}
;
Travian.Directive.buildingLocation = function(a, c, b) {
    return {
        restrict: "EA",
        template: a.get("tpl/building/partials/buildingLocation.html"),
        link: function(a, g, e) {
            function h() {
                var b = a.building
                  , e = c.i()
                  , g = e.warehouseState
                  , h = e.granaryState
                  , n = b.data.buildingType
                  , q = config.village.imageSizes[n] || [0, 0]
                  , v = angular.copy(config.village.locationPos[b.data.locationId])
                  , D = "images";
                "rtl" == getDirection() && (D = "images_rtl");
                n == Building.TYPE.WONDER_OF_WORLD && Gameworld.isBirthday() && (D += "/birthday");
                var C = Travian.Config.cdnPrefix + "layout/" + D + "/building/thumb/"
                  , A = "";
                switch (n) {
                case Building.TYPE.WONDER_OF_WORLD:
                    v = angular.copy(config.village.worldWonderPos);
                    break;
                case Building.TYPE.WAREHOUSE:
                    ;
                case Building.TYPE.GREAT_WAREHOUSE:
                    A = ["e", "hf", "f"][g];
                    break;
                case Building.TYPE.GRANARY:
                    ;
                case Building.TYPE.GREAT_GRANARY:
                    A = ["e", "hf", "f"][h];
                    break;
                case Building.TYPE.RALLY_POINT:
                    A = Village.isWWVillage(e.data.type) ? "ww" : ""
                }
                g = b.getImageName(e.data.tribeId, A);
                if (0 < b.data.buildingType) {
                    a.viewBuilding.statusStyle[p] = Math.round(v.x) + "px";
                    a.viewBuilding.statusStyle.top = Math.round(v.y) + "px";
                    b.isRubble() && !b.isWall() ? (a.viewBuilding.imgStyle[p] = "42px",
                    a.viewBuilding.imgStyle.top = "143px") : (a.viewBuilding.imgStyle[p] = Math.round(v.x - q[0] / 2) + "px",
                    a.viewBuilding.imgStyle.top = Math.round(v.y - q[1]) + "px",
                    b.data.buildingType == Building.TYPE.RALLY_POINT && Village.isWWVillage(e.data.type) && (a.viewBuilding.imgStyle.margin = "1px 22px"),
                    b.data.locationId == Building.PREMIUM_LOCATIONS[0] && b.data.buildingType == Building.TYPE.GREAT_BARRACKS && (a.viewBuilding.imgStyle.margin = "13px -10px"));
                    g != a.viewBuilding.imgName && l();
                    a.viewBuilding.imgStyle["z-index"] = v.z;
                    a.viewBuilding.imgPath = C;
                    if (a.viewBuilding.imgName = g) {
                        Travian.Config.nightMode && (a.viewBuilding.nightImgPath = C.replace("thumb", "night"),
                        a.viewBuilding.nightImgName = 0 < b.data.lvl || n == Building.TYPE.WONDER_OF_WORLD ? "n" + g.substr(1) : ""),
                        Travian.Config.season && (a.viewBuilding.themeImgPath = C.replace("/building/thumb", "/themes/" + Travian.Config.season + "/building"),
                        a.viewBuilding.themeImgName = !b.isRubble() || b.isWall() ? g.replace(/(\/|^)g/, "$1" + Travian.Config.season[0]).replace(/_(e|hf|f)$/, "") : "")
                    }
                    a.viewBuilding.imgClass = "buildingId" + n;
                    a.viewBuilding.buildingType = 0 < b.data.lvl ? g : "Construction";
                    a.secondImage.visible = !1;
                    33 == b.data.locationId && 0 < n && (g = b.getImageName(e.data.tribeId, e.data.isTown ? "water" : "normal"),
                    q = "",
                    31 == n && (e.underAttack && 0 < b.data.lvl) && (q = "-close"),
                    a.viewBuilding.imgClass += " buildingWall",
                    a.viewBuilding.imgName = g + "_top" + q,
                    a.secondImage = angular.copy(a.viewBuilding),
                    a.secondImage.imgStyle["z-index"] = v.z2,
                    a.secondImage.imgName = g + "_bottom" + q,
                    Travian.Config.nightMode && (0 < b.data.lvl || Gameworld.isHalloween()) && (Gameworld.isHalloween() ? (a.viewBuilding.nightImgPath = Travian.Config.cdnPrefix + "layout/" + D + "/halloween/building/night/",
                    a.viewBuilding.nightImgName = "h" + a.viewBuilding.imgName.substr(1),
                    a.secondImage.nightImgName = "h" + a.secondImage.imgName.substr(1)) : (a.viewBuilding.nightImgName = "n" + a.viewBuilding.imgName.substr(1),
                    a.secondImage.nightImgName = "n" + a.secondImage.imgName.substr(1))),
                    Travian.Config.season && (a.viewBuilding.themeImgName = Travian.Config.season[0] + g.substr(1) + "_top",
                    a.secondImage.themeImgName = Travian.Config.season[0] + g.substr(1) + "_bottom"),
                    a.secondImage.visible = !0);
                    18 < b.data.locationId ? a.clickArea = config.village.svg[g] : (a.clickArea = config.village.svg["location" + b.data.locationId + "_" + a.resDistribution],
                    a.viewBuilding.imgStyle[p] = 0,
                    a.viewBuilding.imgStyle.top = 0,
                    a.viewBuilding.imgStyle["z-index"] = 0)
                } else {
                    a.viewBuilding.imgStyle[p] = 0,
                    a.viewBuilding.imgStyle.top = 0,
                    a.viewBuilding.imgStyle["z-index"] = 0,
                    a.clickArea = config.village.svg["location" + b.data.locationId]
                }
                "village" == a.currentView && m()
            }
            function m() {
                a.buildingAnimation || (0 < a.building.data.buildingType && a.building.data.lvl ? (a.buildingAnimation = b.ki(a.building),
                a.buildingAnimation && (digestScope(a),
                "village" != a.page && setTimeout(l),
                n || (a.$on("urlChanged", function(a, b) {
                    b.page && ("village" == b.page ? m() : l())
                }),
                n = !0))) : l())
            }
            function l() {
                a.buildingAnimation && (a.buildingAnimation.stop(),
                a.buildingAnimation = !1)
            }
            var p = "left";
            "rtl" == config.direction && (p = "right");
            a.viewBuilding = {
                statusStyle: {
                    yi: 0,
                    top: 0
                },
                imgStyle: {
                    yi: 0,
                    top: 0,
                    "z-index": 0
                },
                imgPath: "",
                imgName: "",
                imgClass: ""
            };
            a.secondImage = {
                visible: !1,
                imgName: ""
            };
            a.noStatus = e.noStatus;
            var n = !1;
            a.onTopAreas = $.browser.msie && 11 > $.browser.versionNumber;
            a.highlight = [!1];
            var q = a.building.subscribe(h);
            a.$on("attackStateChanged", h);
            a.$on("warehouseStateChanged", h);
            a.$on("$destroy", function() {
                a.building.unsubscribe(q);
                l()
            })
        }
    }
}
;
Travian.Directive.buildingLocation.$inject = ["$templateCache", "VillageService", "AnimationService"];
Travian.Directive.buildingNameTooltip = function(a) {
    return {
        restrict: "A",
        scope: !1,
        link: function(c, b, f) {
            function g() {
                a(function() {
                    if (l) {
                        return !1
                    }
                    m.hide()
                }, 10)
            }
            c = $(".location_" + f.locationId);
            var e = c.find(".bubble")
              , h = e.width()
              , m = c.find(".buildingName")
              , l = !1;
            b.on("mouseover", function() {
                m.css({
                    left: parseInt(e.css("left")) + h / 2 - m.width() / 2
                });
                m.show()
            });
            b.on("mouseout", function() {
                g()
            });
            m.on("mouseover", function() {
                l = !0
            });
            m.on("mouseout", function() {
                l = !1;
                g()
            });
            b.bind("$destroy", function() {
                m.unbind()
            })
        }
    }
}
;
Travian.Directive.buildingNameTooltip.$inject = ["$timeout"];
Travian.Directive.buildingRequirement = function(a) {
    return {
        restrict: "EA",
        template: a.get("tpl/building/partials/buildingRequirement.html"),
        replace: !0,
        scope: {
            buildings: "=",
            otherRequirements: "="
        },
        link: function(a) {
            a.openWindow = a.$parent.openWindow
        }
    }
}
;
Travian.Directive.buildingRequirement.$inject = ["$templateCache"];
Travian.Directive.buildingStatus = function(a, c, b, f, g, e, h, m, l, p) {
    return {
        restrict: "EA",
        template: h.get("tpl/mainlayout/partials/buildingStatus.html"),
        link: function(a, c) {
            function f(b) {
                a.premiumOptionMenu.masterAnimations[b.slotNr] = !1;
                for (var c = 0; c < a.premiumOptionMenu.masterAnimations.length; c++) {
                    if (a.premiumOptionMenu.masterAnimations[c]) {
                        return
                    }
                }
                b = {
                    villageId: g.getActiveVillageId(),
                    locationId: H.data.locationId,
                    buildingType: H.data.buildingType,
                    reserveResources: b.reserveResources && a.enoughRes,
                    count: a.premiumOptionMenu.requestedMasterSlots || 1
                };
                var e = a.premiumOptionMenu.requestedMasterSlots
                  , h = a.premiumOptionMenu.requestedUpgrades[H.data.locationId];
                p.Qc();
                Travian.request("building/useMasterBuilder", b, function() {
                    a.premiumOptionMenu.requestedMasterSlots = Math.max(0, a.premiumOptionMenu.requestedMasterSlots - e);
                    a.premiumOptionMenu.requestedUpgrades[H.data.locationId] = Math.max(0, a.premiumOptionMenu.requestedUpgrades[H.data.locationId] - h)
                });
                D()
            }
            function h(b, c) {
                if ("undefined" != typeof H && null != H && (null == c || c == E.data.villageId)) {
                    a.upgradeButtonDisabled = !1;
                    if (a.premiumOptionMenu.locationId == H.data.locationId) {
                        if (w()) {
                            var e = 0;
                            H.queue && (e = H.queue.length);
                            H.data.lvl + e >= H.data.lvlMax && x();
                            A();
                            return
                        }
                        x()
                    } else {
                        C()
                    }
                    a.isRubble = "undefined" !== typeof H.data.rubble ? !0 : !1;
                    if (0 == H.data.buildingType) {
                        a.upgradeButtonClass = Building.UPGRADE.POSSIBLE
                    } else {
                        a.enoughRes = E.hasEnoughResources(H.data.nextUpgradeCosts[u()]);
                        if (0 < L.getEntriesForLocation(H.data.locationId, BuildingQueue.TYPE_DESTRUCTION).length) {
                            a.upgradeButtonClass = Building.UPGRADE.DEMOLISH
                        } else {
                            if (H.data.isMaxLvl) {
                                a.upgradeButtonClass = H.data.lvl != H.data.lvlMax ? Building.UPGRADE.NOT_AT_ALL : Building.UPGRADE.MAX_LEVEL
                            } else {
                                if (H.data.lvlNext + L.getEntriesForLocation(H.data.locationId, BuildingQueue.TYPE_MASTER_BUILDER).length > H.data.lvlMax) {
                                    a.upgradeButtonClass = Building.UPGRADE.NOT_AT_ALL
                                } else {
                                    var e = !0, f = E.data.storageCapacity, g;
                                    for (g in f) {
                                        if (f[g] < H.data.upgradeCosts[g]) {
                                            e = !1;
                                            break
                                        }
                                    }
                                    e || a.isRubble ? a.isRubble ? a.upgradeButtonClass = 0 < L.data.queues[BuildingQueue.TYPE_DESTRUCTION].length ? Building.UPGRADE.NOT_NOW : Building.UPGRADE.POSSIBLE : (e = L.hasFreeBuildingSlots(H),
                                    a.upgradeButtonClass = a.enoughRes && e ? Building.UPGRADE.POSSIBLE : Building.UPGRADE.NOT_NOW) : a.upgradeButtonClass = Building.UPGRADE.NOT_AT_ALL
                                }
                            }
                        }
                        a.upgradeButtonTooltipUrl = "tpl/building/partials/upgradeCostsTooltip.html";
                        if (a.upgradeButtonClass == Building.UPGRADE.NOT_AT_ALL || a.upgradeButtonClass == Building.UPGRADE.MAX_LEVEL) {
                            a.upgradeButtonDisabled = !0
                        }
                        a.isRubble && (a.upgradeButtonClass == Building.UPGRADE.NOT_NOW && (a.upgradeButtonDisabled = !0),
                        a.upgradeButtonTooltipUrl = "tpl/building/partials/dismantleCostsTooltip.html");
                        a.premiumOptionMenu.locationId == H.data.locationId && (a.upgradeButtonTooltipUrl = "");
                        A()
                    }
                }
            }
            function u() {
                return H.data.lvl + H.queue.length
            }
            function w() {
                var b = g.i()
                  , c = BuildingQueue.get(g.getActiveVillageId())
                  , e = Village.isWWVillage(b.data.type);
                a.enoughRes = b.hasEnoughResources(H.data.nextUpgradeCosts[u()]);
                a.freeSlots = c.hasFreeBuildingSlots(H);
                a.enoughAfterNPCTrade = H.hasEnoughResourcesUsingNpcTrader(b.getResources(), b.getCapacity());
                C();
                if (!a.premiumOptionMenu.options.onlyQueue) {
                    a.premiumOptionMenu.options.npcTrader = H.hasCapacityForUpgrading(b.getResources(), b.getCapacity()) && !e;
                    var f = b.calculateNpcTradingTimeBoost(H.data.upgradeCosts)
                      , h = !1;
                    a.premiumOptionMenu.options.npcTrader && ((h = b.getCostsDistributionDifference(H.data.upgradeCosts) < PremiumFeature.NPC_TRADER_INSIGNIFICANCE_LIMIT) || 0 == f) && (a.premiumOptionMenu.options.npcTrader = !1);
                    a.npcTraderTooltip = function() {
                        if (e) {
                            return "WWVillage"
                        }
                        if (h || 0 == f) {
                            return "Insignificant"
                        }
                        if (!a.premiumOptionMenu.options.npcTrader) {
                            return "NotPossible"
                        }
                        var b = 1 == Voucher.get(Travian.Player.data.playerId).data.hasVouchers[PremiumFeature.FEATURE_NAME_NPC_TRADER];
                        return a.enoughRes ? "NotNeeded" : a.enoughAfterNPCTrade ? b ? "PossibleWithVoucher" : "Possible" : (a.npcTradingTimeBoost = f,
                        b ? "PossibleWithVoucherButNoEnoughRes" : "PossibleButNoEnoughRes")
                    }()
                }
                delete a.premiumOptionMenu.options.masterBuilder;
                if (b.hasEnoughResources(H.data.nextUpgradeCosts[u()]) && c.hasFreeBuildingSlots(H)) {
                    return requestAngularApply(),
                    !1
                }
                "undefined" != typeof a.freeMasterSlots && 0 < a.freeMasterSlots ? (a.premiumOptionMenu.options.masterBuilder = "useMasterBuilder",
                a.upgradeButtonClass = Building.UPGRADE.POSSIBLE) : (a.nextSlotPrice = !1,
                PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT) ? PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT) ? PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_THIRD_BUILD_MASTER_SLOT) || (a.nextSlotPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price3) : a.nextSlotPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price2 : a.nextSlotPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price,
                a.nextSlotPrice ? (a.premiumOptionMenu.options.masterBuilder = "buyMasterBuilder",
                a.upgradeButtonClass = Building.UPGRADE.NOT_NOW) : (a.premiumOptionMenu.options.masterBuilder = "disabledMasterBuilder",
                a.upgradeButtonClass = Building.UPGRADE.NOT_AT_ALL));
                a.canReserveResources = a.enoughRes && 0 < a.freeMasterSlots;
                if (H.queue) {
                    for (b = 0; b < H.queue.length; b++) {
                        if (!H.queue[b].paid) {
                            a.canReserveResources = !1;
                            break
                        }
                    }
                }
                return !0
            }
            function s() {
                function e() {
                    if (a.premiumOptionMenu.locationId == H.data.locationId) {
                        var f = $(c).find(".premiumOptionMenu");
                        0 < f.length ? (f.removeClass("openingAnimation"),
                        a.$broadcast("repositionTooltip")) : b(e, 100)
                    }
                }
                a.animationClass = "openingAnimation";
                a.premiumOptionMenu.locationId = H.data.locationId;
                a.premiumOptionMenu.options = {
                    onlyQueue: a.enoughRes
                };
                w();
                v();
                null == T && (T = a.$watch("premiumOptionMenu.locationId", function() {
                    a.premiumOptionMenu.locationId != H.data.locationId && x(0 != a.premiumOptionMenu.locationId)
                }));
                a.instantCompletionPrice = Travian.Config.PremiumFeatures.finishNow.price;
                a.npcTraderPrice = Travian.Config.PremiumFeatures.NPCTrader.price;
                a.upgradeButtonTooltipUrl = "tpl/building/partials/upgradeCostsTooltip.html";
                b(e, 100)
            }
            function x(b) {
                b || (a.premiumOptionMenu.locationId = 0,
                delete a.premiumOptionMenu.options);
                null != I && (I(),
                I = null);
                null != T && (T(),
                T = null);
                h();
                requestAngularApply();
                for (b = 0; b < a.premiumOptionMenu.masterAnimations.length; b++) {
                    if ("function" == typeof a.premiumOptionMenu.masterAnimations[b]) {
                        a.premiumOptionMenu.masterAnimations[b]()
                    }
                }
            }
            function v() {
                if (!I) {
                    if (N) {
                        var a = N[0].getBoundingClientRect();
                        J = {
                            x: a.left + a.width / 2,
                            y: a.top + a.height / 2
                        };
                        "undefined" != typeof window.pageYOffset ? (J.y += window.pageYOffset,
                        J.x += window.pageXOffset) : (J.y += $(window).scrollTop(),
                        J.x += $(window).scrollLeft())
                    } else {
                        J = angular.copy(z.O().current)
                    }
                    I = z.D("move", D)
                }
            }
            function D() {
                if (!Travian.rootScope.windows.confirmGoldUsage) {
                    for (var b = 0; b < a.premiumOptionMenu.masterAnimations.length; b++) {
                        if (a.premiumOptionMenu.masterAnimations[b]) {
                            return
                        }
                    }
                    b = z.O();
                    (a.premiumOptionMenu.options && (!a.premiumOptionMenu.options.manualTrader && 100 < Math.abs(b.current.x - J.x) || a.premiumOptionMenu.options.manualTrader && 100 < Math.abs(b.current.x - J.x - 10)) || 50 < Math.abs(b.current.y - J.y - 8)) && x()
                }
            }
            function C() {
                var b = BuildingQueue.get(g.getActiveVillageId());
                a.usedMasterSlots = b.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length;
                a.usedMasterSlots += a.premiumOptionMenu.requestedMasterSlots;
                a.freeMasterSlots = b.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER];
                a.freeMasterSlots -= a.premiumOptionMenu.requestedMasterSlots
            }
            function A() {
                var b = null;
                a.finished = 0;
                a.masterBuilderCount = 0;
                a.waiting = !1;
                a.busy = !1;
                if (H.queue) {
                    for (var c = 0; c < H.queue.length; c++) {
                        var e = H.queue[c];
                        e.queueType == BuildingQueue.TYPE_MASTER_BUILDER ? (a.masterBuilderCount++,
                        1 == a.masterBuilderCount && (a.finished = H.queue[c].paid ? 1 : E.getDestTimeForResources(H.data.upgradeCosts),
                        a.finished - 1 <= Travian.rootScope.currentServerTime ? 0 < a.finished ? (a.finished = -1,
                        a.masterBuilderDigit = parseInt(e.queuePosition) + 1 + ".") : a.masterBuilderDigit = "&infin;" : a.finished > Travian.rootScope.currentServerTime + 356400 && (a.finished = -1,
                        a.masterBuilderDigit = "&infin;"))) : (a.busy = !0,
                        b = e)
                    }
                }
                a.busy && (a.finished = b.finished,
                a.duration = b.finished - b.timeStart)
            }
            function F(b) {
                var h = H.data.lvlNext + L.getEntriesForLocation(H.data.locationId, BuildingQueue.TYPE_MASTER_BUILDER).length;
                e.Gb(H.data.upgradeSupplyUsageSums[h + a.premiumOptionMenu.requestedUpgrades[H.data.locationId]] - H.data.upgradeSupplyUsageSums[h - 1], function() {
                    if (Settings.get(Travian.Player.data.playerId).getSetting("disableAnimations")) {
                        Travian.request("building/useMasterBuilder", {
                            villageId: g.getActiveVillageId(),
                            locationId: H.data.locationId,
                            buildingType: H.data.buildingType,
                            reserveResources: b && a.enoughRes
                        }, y())
                    } else {
                        a.premiumOptionMenu.requestedMasterSlots++;
                        a.premiumOptionMenu.requestedUpgrades[H.data.locationId]++;
                        a.usedMasterSlots++;
                        a.freeMasterSlots--;
                        var e = a.usedMasterSlots
                          , h = $(c[0].querySelector(".feature_buildingMaster_medium_illu"));
                        0 == h.length && (h = $(c[0].querySelector(".buildingBubble")));
                        var m = $(".buildingQueueContainer .masterBuilderContainer .slot" + e + " i")
                          , p = $('<i class="feature_buildingMaster_medium_illu"></i>');
                        p.css("pointerEvents", "none");
                        var s = {
                            start: 1,
                            end: 1
                        };
                        if ("undefined" == typeof a.w) {
                            var t = $("." + a.page + ".viewBackground");
                            t[0] && t[0].re && (s.start = t[0].re)
                        }
                        h = l.zb(h, m, p, null, 500, 150, "ease", f, {
                            slotNr: e,
                            reserveResources: b
                        }, s);
                        a.premiumOptionMenu.masterAnimations[e] = h
                    }
                })
            }
            function B() {
                a.premiumOptionMenu.locationId == H.data.locationId && (a.premiumOptionMenu.options.onlyQueue = a.enoughRes);
                h()
            }
            var E = g.i()
              , J = {
                x: 0,
                y: 0
            }
              , I = null
              , T = null
              , Q = !1;
            a.storage = E.getResources();
            a.vouchers = Voucher.get(Travian.Player.data.playerId);
            var L = BuildingQueue.get(g.getActiveVillageId());
            a.buildingQueue = L;
            var H;
            void 0 !== a.w && "undefined" != typeof a.w.building ? (H = a.w.building,
            a.building = H) : H = a.building;
            a.premiumOptionMenu ? (a.premiumOptionMenu.masterAnimations || (a.premiumOptionMenu.masterAnimations = []),
            a.premiumOptionMenu.requestedMasterSlots || (a.premiumOptionMenu.requestedMasterSlots = 0),
            a.premiumOptionMenu.requestedUpgrades || (a.premiumOptionMenu.requestedUpgrades = {})) : a.premiumOptionMenu = {
                locationId: 0,
                masterAnimations: [],
                requestedMasterSlots: 0,
                requestedUpgrades: {}
            };
            a.premiumOptionMenu.requestedUpgrades[H.data.locationId] = 0;
            a.$watch("w.building", function(b) {
                "undefined" != typeof b && (H = a.building = b,
                A())
            });
            a.premiumOptionMenu.locationId == H.data.locationId && a.$evalAsync(s);
            a.openBuilding = function() {
                a.openWindow("building", {
                    location: H.data.locationId
                })
            }
            ;
            a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
                return {
                    villageId: E.data.villageId,
                    queueType: a,
                    delayForNextRequest: 2E3
                }
            }
            ;
            a.FinishNowFeatureName = PremiumFeature.FEATURE_NAME_FINISH_NOW;
            a[PremiumFeature.FEATURE_NAME_NPC_TRADER] = function() {
                return a.premiumOptionMenu.options.npcTrader ? {
                    villageId: g.getActiveVillageId(),
                    distributeRes: E.getCostsDistribution(H.data.upgradeCosts)
                } : !1
            }
            ;
            a.NPCTraderFeatureName = PremiumFeature.FEATURE_NAME_NPC_TRADER;
            a.callNPCTrader = function() {
                var b = E.getCostsDistribution(H.data.upgradeCosts);
                a.openWindow("npcTrader", {
                    wood: b[Resources.WOOD] || 0,
                    clay: b[Resources.CLAY] || 0,
                    iron: b[Resources.IRON] || 0,
                    crop: b[Resources.CROP] || 0
                })
            }
            ;
            a.upgradeBuilding = function() {
                if (a.premiumOptionMenu.locationId == H.data.locationId && a.premiumOptionMenu.options.masterBuilder) {
                    if (a.upgradeButtonClass == Building.UPGRADE.POSSIBLE) {
                        C();
                        var f = 0;
                        H.queue && (f = H.queue.length);
                        f = H.data.lvl + f + a.premiumOptionMenu.requestedMasterSlots;
                        if (0 >= a.freeMasterSlots || f >= H.data.lvlMax) {
                            return
                        }
                        F(!0);
                        return
                    }
                    if (a.upgradeButtonClass == Building.UPGRADE.NOT_NOW) {
                        a.openWindow("confirmGoldUsage", {
                            feature: PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT
                        });
                        return
                    }
                }
                if (0 < L.getEntriesForLocation(H.data.locationId, BuildingQueue.TYPE_DESTRUCTION).length) {
                    a.openBuilding()
                } else {
                    if (0 == H.data.buildingType) {
                        a.openWindow("building", {
                            location: H.data.locationId
                        })
                    } else {
                        if (a.upgradeButtonClass == Building.UPGRADE.POSSIBLE) {
                            if (Q) {
                                C();
                                f = a.premiumOptionMenu.requestedUpgrades[H.data.locationId];
                                0 < a.freeMasterSlots && f < H.data.lvlMax - H.data.lvl && F(!0);
                                return
                            }
                            m.U(db);
                            var r = {
                                villageId: g.getActiveVillageId(),
                                locationId: H.data.locationId,
                                buildingType: H.data.buildingType
                            };
                            if (H.isRubble()) {
                                Travian.writeRequest("building/upgrade", r);
                                return
                            }
                            return e.Gb(H.data.upgradeSupplyUsageSums[H.data.lvlNext] - H.data.upgradeSupplyUsageSums[H.data.lvl], function() {
                                var e = H.isResourceField() ? BuildingQueue.TYPE_RESOURCES : BuildingQueue.TYPE_VILLAGE
                                  , f = $(c[0].querySelector(".buildingStatus"))
                                  , e = $(".buildingQueueContainer .constructionContainer .slotIcon.queueType" + e)
                                  , g = {
                                    start: 1,
                                    end: 1
                                };
                                if ("undefined" == typeof a.w) {
                                    var m = $("." + a.page + ".viewBackground");
                                    m[0] && m[0].re && (g.start = m[0].re)
                                }
                                if (Q = l.zb(f, e, "feature_buildingQueue_medium_illu", null, 500, 150, "ease", function() {
                                    p.Qc();
                                    Travian.writeRequest("building/upgrade", r, function() {
                                        b(function() {
                                            Q = !1;
                                            h();
                                            var b = z.hf();
                                            b && 0 < $(c).find(b).length && (a.premiumOptionMenu.locationId != H.data.locationId && a.upgradeButtonClass == Building.UPGRADE.NOT_NOW) && a.upgradeBuilding()
                                        });
                                        a.premiumOptionMenu.requestedUpgrades[H.data.locationId]--
                                    })
                                }, null, g, "buildingUpgrade")) {
                                    a.premiumOptionMenu.requestedUpgrades[H.data.locationId]++,
                                    requestAngularApply()
                                }
                            })
                        }
                        a.upgradeButtonClass != Building.UPGRADE.NOT_NOW || H.isRubble() || s()
                    }
                }
            }
            ;
            a.onlyQueue = function() {
                F()
            }
            ;
            var N = $(c[0]).find(".buildingStatus > .buildingBubble")
              , P = null;
            z.V(N[0], function() {
                if (!P && a.premiumOptionMenu.locationId != H.data.locationId) {
                    var b = !1;
                    Travian.Player.filled && Travian.Player.isOnMap() && (P = window.setTimeout(function() {
                        if (0 == a.premiumOptionMenu.locationId) {
                            if (a.upgradeButtonClass == Building.UPGRADE.POSSIBLE && a.upgradeBuilding()) {
                                var c = L.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length
                                  , e = L.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER]
                                  , f = H.data.lvl + 1
                                  , g = H.data.lvlMax
                                  , h = function() {
                                    0 >= e || f >= g ? P = null : (a.usedMasterSlots = c++,
                                    a.freeMasterSlots = e--,
                                    F(!0),
                                    f++,
                                    P = window.setTimeout(h, 200))
                                };
                                P = window.setTimeout(h, 400)
                            }
                            b = !0
                        }
                        P = null
                    }, 500));
                    var c = z.D("up", function() {
                        P && (window.clearTimeout(P),
                        P = null);
                        c();
                        b || a.upgradeBuilding()
                    })
                }
            });
            var M = a.$on("resourcesChanged", h)
              , R = L.subscribe(B);
            a.$on("activeVillageChanged", function() {
                E = g.i();
                L.unsubscribe(R);
                L = BuildingQueue.get(g.getActiveVillageId());
                R = L.subscribe(B);
                a.buildingQueue = L
            });
            a.$on("urlChanged", function(a, b) {
                void 0 !== b.page && x()
            });
            a.$on("$destroy", function() {
                L.unsubscribe(R);
                M();
                null != I && I();
                z.s(N[0]);
                P && (window.clearTimeout(P),
                P = null)
            });
            a.startBuildingSound = function() {
                m.Ii(a.building.data.buildingType)
            }
        }
    }
}
;
Travian.Directive.buildingStatus.$inject = "$window $compile $timeout ServertimeService VillageService BuildingService $templateCache AudioService AnimationService SocketService".split(" ");
Travian.Directive.chatIgmEntry = function(a, c, b) {
    return {
        restrict: "EA",
        template: "",
        scope: {
            inboxEntry: "=",
            isOtherPlayerDeleted: "="
        },
        link: function(a, g, e) {
            function h() {
                l || (l = !0,
                g[0].innerHTML = m,
                b(g.contents())(a),
                requestAngularApply())
            }
            var m = c.get("tpl/igm/igmEntry.html")
              , l = !1;
            a.ChatRoom = ChatRoom;
            "false" != e.renderLazy ? (g[0].Aa = h,
            g.html('<div style="display: inline-block; height: 44px"></div>'),
            g.addClass("waitForRender")) : h();
            a.$on("$destroy", function() {
                g[0].Aa = null
            })
        }
    }
}
;
Travian.Directive.chatIgmEntry.$inject = ["ChatService", "$templateCache", "$compile"];
Travian.Directive.chatInput = function(a, c) {
    return {
        restrict: "A",
        link: function(b, f, g) {
            function e() {
                3E3 > (new Date).getTime() - m ? window.setTimeout(e, 3E3) : (h = !1,
                a.Rc(g.roomId, !1))
            }
            f = $(f);
            var h = !1
              , m = 0
              , l = 0;
            f.on("focus", function() {
                b.$root.$broadcast("setActiveChatRoom", g.roomId)
            });
            b.$on("roomUpdate", function() {
                c(function() {
                    f.focus()
                }, 10)
            });
            f.on("keydown", function(c) {
                if (c.which !== keyboard.Zc) {
                    return m = (new Date).getTime(),
                    h ? 1E4 < (new Date).getTime() - l && (a.Rc(g.roomId, !0),
                    l = m) : (h = !0,
                    a.Rc(g.roomId, !0),
                    window.setTimeout(e, 3E3),
                    l = m),
                    !keyboard.Af(c.which) && (c.which != keyboard.sg && c.which != keyboard.ug && c.ctrlKey && c.which != keyboard.Rg && 1E3 <= this.value.length) && c.preventDefault(),
                    !0
                }
                if (!(c.ctrlKey || c.altKey || c.metaKey || c.shiftKey || g.disableEnterSend)) {
                    var n = f.val()
                      , q = n.split("\n");
                    0 < n.replace(/^\s+|\s+$/g, "").length && 100 >= q.length && (b[g.sendFunction](n),
                    a.Rc(g.roomId, !1),
                    h = !1,
                    f.val(""));
                    c.preventDefault()
                }
            });
            f.on("keyup", function() {
                1E3 < this.value.length && $(this).val(this.value.substr(0, 1E3));
                if (g.autoExpand && "undefined" != typeof g.minHeight && "undefined" != typeof g.maxHeight) {
                    var a = $(f[0])
                      , b = parseInt(a.css("lineHeight"));
                    a.css("padding-top");
                    var c = getTotalElementHeight(a, a.val())
                      , e = "hidden"
                      , h = parseInt(g.maxHeight);
                    c + b > g.minHeight && c + b <= g.maxHeight ? h = c + b : c < g.minHeight ? h = parseInt(g.minHeight) : e = "auto";
                    a.css("height", h + "px");
                    a.css("overflow", e)
                }
            });
            b.checkDrop = function(a) {
                a.link && a.source != g.roomId && (f.val(f.val() + a.link),
                f.focus())
            }
            ;
            b.$on("channelSwitched", function() {
                f.val("")
            });
            b.$on("$destroy", function() {
                f.off();
                angular.element(f).remove()
            })
        }
    }
}
;
Travian.Directive.chatInput.$inject = ["ChatService", "$timeout"];
Travian.Directive.chatOnlineStatus = function() {
    return {
        restrict: "EA",
        template: '<i class="onlineStatus" ng-if="chatUser && chatUser.data.status !== ChatUser.STATUS_NOT_AVAILABLE" ng-class="{chat_status_offline_tiny_illu: chatUser.data.status === ChatUser.STATUS_OFFLINE,chat_status_online_tiny_illu: chatUser.data.status === ChatUser.STATUS_ONLINE,chat_status_afk_tiny_illu: chatUser.data.status === ChatUser.STATUS_AFK}"></i>',
        scope: {
            chatUser: "="
        },
        link: function(a) {
            a.ChatUser = ChatUser;
            a.$watch("chatUser", function(c) {
                c && (a.chatUser = c)
            })
        }
    }
}
;
Travian.Directive.chatOnlineStatus.$inject = [];
Travian.Directive.chatRoomMember = function(a, c) {
    return {
        restrict: "E",
        template: c.get("tpl/chat/partials/chatRoomMember.html"),
        scope: !0,
        link: function(b, c, g) {
            function e(a) {
                a && (p = a,
                b.member = ChatUser.get(p),
                b.memberForOnlineStatus = l ? ChatUser.get(p) : ChatRoomUser.get(p),
                ChatCache.G(b.member, 600))
            }
            var h = a.ka, m = a.pa, l = !1, p;
            void 0 !== b.member && e(b.member.data.playerId);
            b.ChatUser = ChatUser;
            b.showPrestige = !1;
            b.showTooltip = !0;
            g.$observe("showPrestige", function() {
                b.showPrestige = "true" == g.showPrestige
            });
            g.$observe("showTooltip", function() {
                b.showTooltip = "true" == g.showTooltip
            });
            g.$observe("playerId", function(a) {
                e(a)
            });
            g.$observe("privateChatMode", function() {
                l = "true" == g.privateChatMode;
                e(p)
            });
            b.clickPlayerAvatar = function(a) {
                l ? b.openWindow("profile", {
                    playerId: a,
                    profileTab: "playerProfile"
                }) : h(m(a))
            }
        }
    }
}
;
Travian.Directive.chatRoomMember.$inject = ["ChatService", "$templateCache"];
Travian.Directive.chatRoomMembers = function(a, c) {
    return {
        restrict: "E",
        template: c.get("tpl/chat/chatRoomMembers.html"),
        scope: {
            room: "=room"
        },
        link: function(b) {
            function c() {
                e = ChatRoomUser.getCollection(b.room.data.roomId);
                g = e.subscribe(function(a) {
                    a = a.data;
                    b.allMembers = [];
                    for (var c = 0; c < a.length; c++) {
                        a[c].data.playerId != Travian.Player.data.playerId && b.allMembers.push(a[c])
                    }
                    b.allMembers.sort(function(a, b) {
                        return a.data.status > b.data.status ? 1 : a.data.status < b.data.status ? -1 : a.lastFilled > b.lastFilled ? -1 : 1
                    });
                    b.startIndex = 0;
                    b.chatMembers = b.allMembers.slice(b.startIndex, b.maxAmount)
                })
            }
            var g = null
              , e = null;
            b.ChatUser = ChatUser;
            b.maxAmount = 6;
            b.startIndex = 0;
            b.allMembers = [];
            b.chatMembers = [];
            b.tooltipIndex = 0;
            b.highlightMember = function(a) {
                b.tooltipIndex = a
            }
            ;
            b.$watch("room", function() {
                b.room && (null !== g && e && (e.unsubscribe(g),
                g = null),
                b.startIndex = 0,
                b.chatMembers = [],
                0 !== b.room.data.joined && c())
            }, !0);
            b.prev = function() {
                0 < b.startIndex && (b.startIndex -= b.maxAmount,
                b.chatMembers = b.allMembers.slice(b.startIndex, b.startIndex + b.maxAmount))
            }
            ;
            b.next = function() {
                b.startIndex + b.maxAmount < b.allMembers.length && (b.startIndex += b.maxAmount,
                b.chatMembers = b.allMembers.slice(b.startIndex, b.startIndex + b.maxAmount))
            }
            ;
            b.openPrivateChat = a.ka;
            b.getPrivateRoomName = a.pa;
            b.clickPlayerAvatar = function(b) {
                a.ka(a.pa(b))
            }
            ;
            b.$on("$destroy", function() {
                g && e && e.unsubscribe(g)
            })
        }
    }
}
;
Travian.Directive.chatRoomMembers.$inject = ["ChatService", "$templateCache"];
Travian.Directive.chatRoomName = function() {
    return {
        restrict: "EA",
        templateUrl: "tpl/chat/partials/roomNameWithIcon.html",
        scope: {
            roomName: "=",
            lastClick: "=",
            online: "=",
            kingdomRole: "="
        },
        link: function(a) {
            a.$watch("kingdomRole", function() {
                a.role = Kingdom.ROLE_STRING[a.kingdomRole]
            })
        }
    }
}
;
Travian.Directive.chatRoomName.$inject = [];
Travian.Directive.chatRoomNotifications = function(a) {
    return {
        restrict: "E",
        template: "<div ng-if='text' class='roomNotification' ng-class='{red: [ChatNotification.PLAYER_LEFT, ChatNotification.PLAYER_OFFLINE].indexOf(type) !== -1}'><span>{{text}}</span></div>",
        scope: !0,
        link: function(c, b, f) {
            function g(a) {
                c.text = !1;
                l = null;
                ChatCache.B(a, !0)
            }
            c.text = !1;
            c.ChatNotification = ChatNotification;
            var e = null
              , h = null
              , m = null
              , l = null;
            f.$observe("roomId", function(b) {
                if (b) {
                    null !== e && (h.unsubscribe(e),
                    null !== l && (a.cancel(l),
                    g(m)));
                    h = ChatNotification.getCollection(b);
                    var f = h.filled;
                    e = h.subscribe(function() {
                        if (f) {
                            return f = !1
                        }
                        var b = h.data.pop();
                        if (b && b.data.playerId !== Travian.Player.data.playerId) {
                            null !== l && (a.cancel(l),
                            ChatCache.B(m, !0));
                            h.data = [];
                            if (!b.data.playerName) {
                                return !1
                            }
                            m = b;
                            c.text = Travian.translate("Chat.Notification." + m.data.type, {
                                playerName: m.data.playerName
                            });
                            c.type = m.data.type;
                            l = a(function() {
                                g(m)
                            }, 3E3)
                        }
                    })
                }
            });
            c.$on("$destroy", function() {
                null !== e && h.unsubscribe(e)
            })
        }
    }
}
;
Travian.Directive.chatRoomNotifications.$inject = ["$timeout"];
Travian.Directive.chatTimeDivider = function() {
    return {
        restrict: "EA",
        template: '<h6 class="divider" ng-if="timeTitle != \'\'"><span class="fadeIn"></span><span translate class="label" options="{{timeTitle}}">?</span><span class="fadeOut"></span></h6>',
        scope: {
            last: "@",
            current: "@",
            reverse: "@"
        },
        link: function(a) {
            function c(a) {
                return "" == a ? 0 : 10 < ("" + a).length ? parseInt(a) / 1E3 : parseInt(a)
            }
            function b() {
                a.timeTitle = "";
                if (0 == e) {
                    for (var b = 0; b < g.length; b++) {
                        var c = g[b];
                        if (h > c.timestamp) {
                            a.timeTitle = "Chat.Time_" + c.name;
                            break
                        }
                    }
                } else {
                    for (b = g.length - 2; 0 <= b; b--) {
                        if (c = g[b],
                        a.reverse) {
                            e <= c.timestamp && h > c.timestamp && (a.timeTitle = "Chat.Time_" + c.name)
                        } else {
                            if (h <= c.timestamp && e > c.timestamp) {
                                a.timeTitle = "Chat.Time_" + g[b + 1].name;
                                break
                            }
                        }
                    }
                }
            }
            var f = new Date
              , f = new Date(f.getFullYear(),f.getMonth(),f.getDate())
              , g = [];
            g.push({
                name: "Today",
                timestamp: f / 1E3
            });
            g.push({
                name: "Yesterday",
                timestamp: f / 1E3 - 86400
            });
            g.push({
                name: "Last7Days",
                timestamp: f / 1E3 - 604800
            });
            g.push({
                name: "OlderThan7Days",
                timestamp: 0
            });
            var e = 0
              , h = 0;
            a.$watch("last", function(a) {
                e = c(a);
                b()
            });
            a.$watch("current", function(a) {
                h = c(a);
                b()
            })
        }
    }
}
;
Travian.Directive.chatTimeDivider.$inject = ["ChatService"];
Travian.Directive.chatWindowBody = function(a, c, b, f, g) {
    return {
        restrict: "E",
        template: c.get("tpl/chat/partials/chatWindowBody.html"),
        scope: {
            room: "=room"
        },
        link: function(c, h) {
            function m() {
                var a = 0;
                $(h).find("ul li.line.new, ul li.unreadInfo").each(function() {
                    a += parseInt($(this).outerHeight(!0))
                });
                c.chatScrollPosition = a;
                g(function() {
                    u = !0
                })
            }
            var l = b.p()
              , p = null
              , n = null
              , q = {
                first: -1,
                last: -1
            }
              , r = {
                first: -1,
                last: -1
            }
              , t = !1
              , u = !1;
            c.player = l;
            c.openWindow = c.$root.openWindow;
            c.inputPlaceholder = Travian.translate("Chat.ClickToAnswer");
            c.isBannedFromMessaging = !1;
            c.isActivated = !1;
            c.isIgnored = !1;
            c.ChatRoom = ChatRoom;
            c.openPrivateChat = a.ka;
            c.getPrivateRoomName = a.pa;
            c.unsentLines = [];
            c.haveFirst = !0;
            c.chatLines = null;
            c.displayedChatLines = [];
            c.chatScrollPosition = 0;
            c.isPrivateChat = void 0 == c.room.chatRoom;
            c.send = function(b) {
                c.isBannedFromMessaging || (!c.isActivated || c.isIgnored) || (c.unsentLines.push({
                    data: {
                        playerName: Travian.Player.data.name,
                        playerId: Travian.Player.data.playerId,
                        text: b.substring(0, 1E3),
                        timestamp: f.R()
                    }
                }),
                c.room.chatRoom && (c.room.chatRoom.data.lastRead = (new Date).getTime()),
                a.sendMessage(c.room.roomId, b),
                c.room.markMessagesAsRead(),
                c.displayDesktopNotificationInfo = a.bg(c.room.roomId))
            }
            ;
            c.getPlayerOptions = function(a) {
                var b = [];
                0 == Player.get(a).data.playerId ? b.push({
                    text: Travian.translate("Chat.Other.Player.Deleted")
                }) : (c.isPrivateChat || b.push({
                    clickable: "openPrivateChat(getPrivateRoomName(" + a + "));",
                    text: Travian.translate("Chat.PrivateChat")
                }),
                b.push({
                    clickable: "openWindow('profile', {'playerId': " + a + ", 'profileTab': 'playerProfile'})",
                    text: Travian.translate("Chat.OpenProfile")
                }),
                b.push({
                    clickable: "reportConversation('" + c.room.roomId + "', " + a + ");",
                    text: Travian.translate("Chat.Report.Player")
                }),
                c.isPrivateChat && b.push({
                    clickable: "ignorePlayer('" + c.room.roomId + "'," + a + ")",
                    text: Travian.translate("Chat.Ignore.Player")
                }));
                return b
            }
            ;
            c.reportConversation = function(b, c) {
                a.Yd(b, c)
            }
            ;
            c.ignorePlayer = function(a, b) {
                c.openWindow("ignorePlayer", {
                    roomId: a,
                    playerId: b
                })
            }
            ;
            c.$watchGroup(["room", "room.chatRoom.data.joined", "room.indexOfFirstUnreadLine", "room.chatInbox.data.ignoreUntil"], function() {
                c.inputPlaceholder = Travian.translate("Chat.ClickToAnswer");
                if (c.room.chatRoom && 0 === c.room.chatRoom.data.joined) {
                    c.inputPlaceholder = Travian.translate("Chat.JoinToAnswer");
                    var a = new ChatRoom(c.room.roomId);
                    0 === Travian.Player.data.kingdomId && a.getRoomType() === ChatRoom.TYPE_KINGDOM && (c.inputPlaceholder = Travian.translate("Chat.JoinKingdomToAnswer"))
                }
                c.isBannedFromMessaging && (c.inputPlaceholder = Travian.translate("Chat.BannedFromMessaging.AnswerPlaceholder"));
                c.isActivated || (c.inputPlaceholder = Travian.translate("Chat.IsNotActivated"));
                c.isIgnored = !1;
                c.room.chatInbox && c.room.chatInbox.data.ignoreUntil > (new Date).getTime() && (c.isIgnored = !0,
                c.inputPlaceholder = Travian.translate("Chat.Ignore.Placeholder"));
                !c.room || c.room.chatRoom && !c.room.chatRoom.data.joined ? c.displayedChatLines = [] : (null !== n && c.chatLines.unsubscribe(n),
                c.unsentLines = [],
                c.chatLines = c.room.chatLines,
                c.haveFirst = !0,
                t = !1,
                c.displayedChatLines = [],
                n = c.chatLines.subscribe(function() {
                    if (c.chatLines && !c.room.chatRoom) {
                        c.unsentLines = [];
                        for (var a = !1, b = 0; b < c.chatLines.data.length; b++) {
                            if (c.chatLines.data[b].data.isFirst) {
                                a = !0;
                                break
                            }
                        }
                        10 > c.chatLines.data.length && (a = !0);
                        c.haveFirst = a
                    }
                    a: {
                        if (0 != c.chatLines.data.length) {
                            r.first = c.chatLines.data[0].data.timestamp;
                            r.last = c.chatLines.data[c.chatLines.data.length - 1].data.timestamp;
                            if (!t || c.chatLines.data[0].data.timestamp < q.first) {
                                c.displayedChatLines = [],
                                t = !1
                            } else {
                                if (t && q.last == r.last) {
                                    break a
                                }
                            }
                            a = c.displayedChatLines.length;
                            c.indexOfFirstUnreadLine = c.room.indexOfFirstUnreadLine;
                            for (b = 0; b < c.chatLines.data.length; b++) {
                                var f = c.chatLines.data[b]
                                  , g = a - 1
                                  , h = !1;
                                t && q.last < r.last && f.data.timestamp <= q.last || (c.room.indexOfFirstUnreadLine == b && (c.indexOfFirstUnreadLine = a),
                                (h = void 0 !== c.displayedChatLines[g] && c.displayedChatLines[g].data.playerId == f.data.playerId && c.displayedChatLines[g].data.timestamp > f.data.timestamp - 6E4 && c.indexOfFirstUnreadLine != a) ? c.displayedChatLines[g].data.text.push(f.data.text) : (c.displayedChatLines.push(angular.copy(f)),
                                c.displayedChatLines[g + 1].data.text = [c.displayedChatLines[a].data.text]),
                                a = c.displayedChatLines.length)
                            }
                            q = angular.copy(r);
                            t = !0
                        }
                    }
                }),
                $(h).find(".scrollContent").trigger("scroll"),
                0 < c.room.unreadLines && g(m),
                c.$broadcast("roomUpdate"))
            });
            p = l.subscribe(function() {
                c.isBannedFromMessaging = l.data.isBannedFromMessaging;
                c.isActivated = l.data.isActivated
            });
            c.loadOlder = function() {
                for (var b = -1, f = 0; f < c.chatLines.data.length; f++) {
                    var g = c.chatLines.data[f].data;
                    if (-1 == b || g.timestamp < b) {
                        b = g.timestamp
                    }
                }
                a.qb(c.room.roomId, b)
            }
            ;
            c.$on("scrolling", function(a) {
                a.targetScope == a.currentScope && u && c.room.markMessagesAsRead()
            });
            c.$on("$destroy", function() {
                null !== p && l.unsubscribe(p);
                null !== n && c.chatLines.unsubscribe(n)
            });
            c.cancelDisplayDesktopNotification = function() {
                a.Uf(!1)
            }
            ;
            c.acceptDisplayDesktopNotification = function() {
                a.Uf(!0);
                Notification.requestPermission()
            }
            ;
            c.displayDesktopNotificationInfo = !1;
            c.$on("NotificationPermissionChange", function() {
                c.displayDesktopNotificationInfo = a.bg(c.room.roomId)
            })
        }
    }
}
;
Travian.Directive.chatWindowBody.$inject = ["ChatService", "$templateCache", "SessionService", "ServertimeService", "$timeout"];
Travian.Directive.moreDropdown = function(a, c) {
    return {
        restrict: "A",
        template: '<a class="iconButton" clickable="openMoreDropdown()"><span class="number" ng-if="showCount">{{optionsCounts}}</span><i class="symbol_arrowDown_tiny_illu"></i></a>',
        link: function(b, f, g) {
            function e() {
                l = $('<div class="moreDropDownBody dropdownBody">');
                l.html('<ul><li ng-repeat="option in options" clickable="{{option.clickable}}; closeMoreDropdown()">{{option.text}}</li></ul>');
                p = b.$new();
                g.appendLocal ? (l.addClass("local"),
                f.append(l)) : m.append(l);
                a(l)(p);
                c(function() {
                    if (g.appendLocal) {
                        var a = l[0].getBoundingClientRect()
                          , b = $(window).height();
                        a.bottom > b && l.css("top", "-" + a.height + "px")
                    } else {
                        var a = f.children()[0].getBoundingClientRect()
                          , b = l.height()
                          , c = l.width()
                          , c = {
                            top: a.top + a.height,
                            left: dirVal(a.left + a.width - c, a.left)
                        };
                        c.top + b > $(window).height() && (c.top = a.top - b);
                        l.css(c).show()
                    }
                }, 0)
            }
            function h() {
                null != l && (p.$destroy(),
                angular.element(l).remove(),
                l = null)
            }
            f = $(f);
            var m = $("body");
            b.options = [];
            b.showCount = !1;
            b.optionsCounts = 0;
            var l = null
              , p = null;
            g.$observe("moreDropdownCount", function(a) {
                b.showCount = !1;
                a && (b.showCount = !0,
                b.optionsCounts = a)
            });
            b.closeMoreDropdown = h;
            b.$on("windowDragged", h);
            var n = z.D("up", function(a) {
                null != l && 0 == f.find(a.q).length && setTimeout(h)
            });
            b.openMoreDropdown = function() {
                b.options = b.$eval(g.moreDropdownOptions);
                null == l ? e() : h()
            }
            ;
            b.$on("$destroy", function() {
                h();
                n();
                angular.element(f).remove()
            })
        }
    }
}
;
Travian.Directive.moreDropdown.$inject = ["$compile", "$timeout"];
Travian.Directive.cheatElement = function(a) {
    return {
        restrict: "A",
        link: function(c, b, f) {
            f.$observe("html", function(f) {
                $(b).append(a(f)(c))
            })
        }
    }
}
;
Travian.Directive.cheatElement.$inject = ["$compile"];
Travian.Directive.placeholder = function() {
    return {
        link: function(a, c, b) {
            b.$observe("placeholder", function() {
                Modernizr.load({
                    test: Modernizr.input.placeholder,
                    nope: "library/js/modernizr/polyfills/jquery.placeholder.min.js",
                    callback: function() {
                        c.placeholder()
                    }
                })
            })
        }
    }
}
;
Travian.Directive.friendOnlineStatus = function() {
    return {
        restrict: "EA",
        template: '<i class="onlineStatus" ng-class="{chat_status_offline_tiny_illu: friend.data.online === Friend.STATUS_OFFLINE,chat_status_online_tiny_illu: friend.data.online === Friend.STATUS_ONLINE,chat_status_afk_tiny_illu: friend.data.online === Friend.STATUS_AFK}"></i>',
        scope: {
            friend: "="
        },
        link: function(a) {
            a.Friend = Friend;
            a.$watch("friend", function(c) {
                c && (a.friend = c)
            })
        }
    }
}
;
Travian.Directive.friendOnlineStatus.$inject = [];
Travian.Directive.friendlistEntry = function(a, c) {
    return {
        restrict: "EA",
        template: a.get("tpl/society/partials/friends/friendlistEntry.html"),
        scope: {
            friend: "="
        },
        link: function(a, f, g) {
            if (f = a.friend) {
                f = f.data.activeAvatar.type,
                a.isSitter = f === Session.TYPE_SITTER,
                a.isDual = f === Session.TYPE_DUAL
            }
            g.playerName && (a.playerName = g.playerName);
            a.friendPlayerId = g.playerId;
            a.showTooltip = !0;
            a.avatarImageCssUrl = "url(" + config.portal + "api/public/player/getPotrait?type=account&id=" + g.userAccountIdentifier + "&size=60)";
            a.openChat = function(a) {
                a && c.ka(c.pa(a))
            }
            ;
            g.$observe("showTooltip", function() {
                a.showTooltip = "true" === g.showTooltip
            })
        }
    }
}
;
Travian.Directive.friendlistEntry.$inject = ["$templateCache", "ChatService"];
Travian.Directive.achievementImage = function() {
    return {
        restrict: "E",
        template: '<i class="achievementFrame achievements_frame{{(achievementData.special == \'true\' || achievementData.special == true || achievementData.special == 1)?\'Mystery\' : achievementData.level}}_large_illu" tooltip tooltip-url="tpl/profile/playerProfile/achievementTooltip.html" tooltip-data="achievement-data:{{achievementData}}"><i class="achievementIcon achievements_type{{achievementData.type}}_medium_illu"></i>\t\t\t</i>',
        replace: !0,
        scope: !0,
        link: function(a, c, b) {
            var f = null
              , g = null;
            b.$observe("playerId", function() {
                0 < b.playerId && null == f && (f = Achievement.getCollection(b.playerId),
                Cache.G(f, 120),
                g = f.subscribe(function() {
                    for (var c, g = 0; g < f.data.length; g++) {
                        c = f.data[g],
                        c.data.id == b.id && (a.achievementData = c.data)
                    }
                }))
            });
            a.$on("$destroy", function() {
                null !== g && f.unsubscribe(g)
            })
        }
    }
}
;
Travian.Directive.animatedCounter = function() {
    return {
        restrict: "A",
        scope: {
            value: "=",
            baseStep: "@",
            duration: "@",
            animationClass: "@"
        },
        link: function(a, c) {
            function b(a, b) {
                var c = 1;
                100 < b && (c = b / 100);
                return {
                    step: c,
                    delay: a / (b / c)
                }
            }
            function f(a, b, e, f, g, h) {
                null != m && clearInterval(m);
                m = setInterval(function() {
                    a += e * Math.min(g, Math.abs(a - b));
                    c.html(parseInt(a));
                    b == a && (clearInterval(m),
                    h())
                }, f)
            }
            function g(a, g) {
                var m = 1;
                g < a && (m = -1);
                var q = b(e, Math.abs(g - a));
                h && c.addClass(h);
                f(a, g, m, q.delay, q.step, function() {
                    h && c.removeClass(h)
                })
            }
            var e = a.duration
              , h = a.animationClass
              , m = null;
            a.$watch("value", function(a, b) {
                a != b && (angular.isUndefined(a) || (angular.isUndefined(b) || isNaN(parseInt(a))) || g(b, a))
            });
            a.$on("$destroy", function() {
                null != m && clearInterval(m)
            })
        }
    }
}
;
Travian.Directive.animatedCounter.$inject = [];
Travian.Directive.avatarImage = function(a, c) {
    var b = "ltr" == getDirection() ? "images" : "images_rtl";
    Travian.Config.specialRules.halloween && (b += "/halloween");
    var f = new Ga(Travian.Config.cdnPrefix + "layout/" + b + "/heroAvatar/");
    return {
        restrict: "E",
        template: c.get("tpl/user/partials/avatar_image.html"),
        scope: {
            size: "@",
            scale: "@",
            hideHair: "=",
            hideEars: "=",
            avatar: "="
        },
        link: function(a, b, c) {
            function m() {
                var l = b[0].querySelector(".heroImage");
                if (null != r) {
                    try {
                        l.removeChild(r)
                    } catch (m) {}
                }
                var n = "125x125";
                "big" == c.size && (n = "350x350");
                void 0 !== c.scale && (t = parseFloat(c.scale));
                s = null;
                var p = [];
                if (void 0 !== q.gender) {
                    a.gender = q.gender;
                    var F = q.gender + "/head/" + n + "/face0";
                    u && (F += "_dead");
                    w && (F += "_1");
                    F += ".png";
                    p.push(F);
                    var B = [];
                    B.push({
                        url: F,
                        z: 10
                    });
                    if (!u) {
                        for (var E in q.face) {
                            var J = q.face[E];
                            "None" == J.type || ("hair" == E && a.hideHair || "ear" == E && a.hideEars) || (F = q.gender + "/head/" + n + "/" + E + "/" + E + J.type + ".png",
                            p.push(F),
                            B.push({
                                url: F,
                                z: J.z
                            }))
                        }
                    }
                    B.sort(function(a, b) {
                        return a.z < b.z ? -1 : 1
                    });
                    x++;
                    f.load(p, function(b, c) {
                        if (c == x) {
                            r = document.createElement("canvas");
                            for (var e = r.getContext("2d"), f = 0; f < B.length; f++) {
                                var h = B[f].url;
                                0 == f && (r.width = b[h].width * t,
                                r.height = b[h].height * t);
                                e.drawImage(b[h], 0, 0, b[h].width * t, b[h].height * t)
                            }
                            l.appendChild(r);
                            a.$$phase || a.$digest()
                        }
                    }, x);
                    1 != t && doAngularApply()
                }
            }
            function l() {
                null == s && (s = window.setTimeout(m, 50))
            }
            var p = 0
              , n = null
              , q = null;
            a.gender = void 0;
            a["class"] = "";
            var r = null
              , t = 1
              , u = !1
              , w = !1;
            a.robberId = Player.ID.ROBBER;
            a.npcGovernorId = Player.ID.GOVERNOR_NPC;
            var s = null
              , x = 0;
            a.avatar ? (q = a.avatar,
            a.$watch("avatar", l, !0)) : (q = {},
            "true" == c.random ? (n = new HeroFace,
            q = n.getViewModel()) : c.$observe("playerId", function(c) {
                a.playerId = parseInt(c);
                null != r && (b[0].querySelector(".heroImage").removeChild(r),
                r = null);
                q = {};
                a.playerId && !Player.isNPC(a.playerId) && ((n = HeroFace.get(a.playerId)) && p && n.unsubscribe(p),
                p = n.subscribe(function() {
                    q = n.getViewModel();
                    a.avatar = q;
                    l()
                }))
            }));
            c.$observe("avatarClass", function(b) {
                b && (a["class"] = b,
                l())
            });
            c.$observe("dead", function(a) {
                u = "true" == a;
                l()
            });
            c.$observe("noShoulders", function(a) {
                w = "true" == a;
                l()
            });
            a.$watch("hideHair", l);
            a.$watch("hideEars", l);
            a.$on("$destroy", function() {
                n && p && n.unsubscribe(p)
            })
        }
    }
}
;
Travian.Directive.avatarImage.$inject = ["$http", "$templateCache"];
Travian.Directive.button = function(a, c, b, f) {
    return {
        transclude: !0,
        restrict: "E",
        priority: -1,
        scope: !0,
        template: a.get("tpl/directive/generalElements/button.html"),
        link: function(a, c, h) {
            function m() {
                c.hasClass("disabled") || ("undefined" != typeof h.playOnClick ? b.U(h.playOnClick) : c.hasClass("cancel") ? b.U(ib) : b.U(fb))
            }
            function l() {
                c.removeClass("animating");
                c.removeClass("disableAnimation");
                f.$broadcast("animationFinished", c.attr("clickable"))
            }
            function p() {
                if (!q) {
                    return !1
                }
                c.attr("class") && -1 < c.attr("class").indexOf("disabled") ? setTimeout(function() {
                    c.addClass("disableAnimation")
                }, 0) : r && setTimeout(function() {
                    c.addClass("animating")
                }, 0)
            }
            a.price = h.price;
            a.currency = h.currency || "gold";
            a.forceGoldUsage = h.forceGoldUsage;
            ("undefined" == typeof h.playOnClick || "undefined" == typeof h.clickable && "undefined" == typeof h.premiumFeature) && z.ya(c[0], m);
            var n = null
              , q = !0
              , r = c.hasClass("animate");
            if (Travian.Player) {
                var t = Settings.get(Travian.Player.data.playerId)
                  , n = t.subscribe(function() {
                    q = !t.getSetting("disableAnimations")
                })
            }
            var u = whichAnimationEvent();
            z.ya(c[0], p);
            u && c[0].addEventListener(u, l);
            h.$observe("price", function(b) {
                a.price = b
            });
            a.$on("$destroy", function() {
                z.Kc(c[0], m);
                z.Kc(c[0], p);
                u && c[0].removeEventListener(u, l);
                n && t.unsubscribe(n)
            })
        }
    }
}
;
Travian.Directive.button.$inject = ["$templateCache", "$timeout", "AudioService", "$rootScope"];
Travian.Directive.coordinates = function() {
    return {
        restrict: "EA",
        templateUrl: "tpl/coordinates/coordinates.html",
        replace: !0,
        scope: !0,
        link: function(a, c, b) {
            a.hasLink = !0;
            multiObserve(b, ["x", "y"], function() {
                if ("id" == b.x) {
                    var c = parseInt(b.y)
                      , g = id2xy(c);
                    a.x = g.x;
                    a.y = g.y;
                    a.link = c
                } else {
                    a.x = parseInt(b.x),
                    a.y = parseInt(b.y),
                    a.link = xy2id(a.x, a.y)
                }
            });
            b.$observe("nolink", function(b) {
                void 0 != b && "true" == b && (a.hasLink = !1)
            });
            b.$observe("aligned", function(b) {
                a.aligned = "";
                void 0 != b && "true" == b && (a.aligned = "coordinatesAligned")
            })
        }
    }
}
;
Travian.Directive.countdown = function(a) {
    return function(c, b, f) {
        function g() {
            if ("undefined" != typeof a.R()) {
                e = b.attr("countdown");
                var g = e - a.R();
                f.multiply && (g *= f.multiply);
                if (0 > g || isNaN(g)) {
                    return Travian.tick.unbind(h),
                    h = null,
                    b.text(f.dhms ? qa(0) : pa(0)),
                    f.callback && c.$eval(f.callback)(),
                    requestAngularApply(),
                    !1
                }
                var n = "";
                f.showDaysLimit && g >= f.showDaysLimit ? (g = Math.round(g / 86400),
                g == l ? n = m : (n = Travian.translate("ForDays", {
                    x: g
                }),
                l = g)) : n = f.dhms ? qa(g) : pa(g, f.countdownShort && g < f.countdownShort);
                m != n && (m = n,
                b.text(n))
            }
        }
        var e, h = null, m = "", l = 0;
        f.showDaysLimit && c.$on("newTranslation", function() {
            l = 0
        });
        f.$observe("countdown", function(a) {
            "undefined" != typeof a && null == h && (h = Travian.tick.bind(g))
        });
        b.bind("$destroy", function() {
            Travian.tick.unbind(h)
        })
    }
}
;
Travian.Directive.countdown.$inject = ["ServertimeService"];
Travian.Directive.displayResources = function(a, c) {
    return {
        restrict: "EA",
        scope: {
            consumption: "@",
            population: "@",
            resources: "=",
            productionPerHour: "=",
            capacity: "=",
            treasures: "=",
            stolenGoods: "=",
            available: "=",
            checkStorage: "@",
            old: "@",
            time: "@",
            signed: "@",
            colorPositive: "@",
            flyingResTrigger: "=",
            hideCrop: "=",
            additionalResources: "=",
            checkStorageVillageId: "@",
            onlyProductionPerHour: "@"
        },
        templateUrl: "tpl/building/partials/displayResources.html",
        link: function(b, f, g) {
            function e() {
                if ("undefined" !== typeof b.resources && b.resources) {
                    b.capacityHint = null;
                    b.enoughResSecs = null;
                    for (var a = !0, c = 1; 4 >= c; c++) {
                        if (b.resourceVisibility[c] = !1,
                        "undefined" != typeof b.resources[c] && "" !== b.resources[c]) {
                            if (0 < b.resources[c] || !g.hideZero) {
                                b.resourceVisibility[c] = !0
                            }
                            var e = "Warehouse";
                            4 == c && (e = "Granary");
                            !0 == b.checkStorage || "true" == b.checkStorage ? a && !b.enoughStorage(c) && (a = !1,
                            b.capacityHint = Travian.translate("Missing" + e + "Storage")) : b.enoughResources(c) || (a = !1,
                            b.resources[c] > h.data.storageCapacity[c] && (b.capacityHint = Travian.translate("Missing" + e + "Capacity")))
                        }
                    }
                    a || b.capacityHint || (b.enoughResSecs = h.getDestTimeForResources(b.resources))
                }
            }
            var h = a.i();
            b.resTypes = angular.copy(Resources.STRING);
            delete b.resTypes[0];
            "true" == g.hideCrop && delete b.resTypes[4];
            b.Math = Math;
            b.numberUnit = "";
            g.percent && (b.numberUnit = "percent");
            g.production && (b.numberUnit = "production");
            b.imageSize = "small";
            g.imageSize && (b.imageSize = g.imageSize);
            b.resourceVisibility = {};
            b.enoughResources = function(a) {
                return "undefined" !== typeof b.available && "undefined" !== typeof b.available[a] && "undefined" !== typeof b.resources && "undefined" !== typeof b.resources[a] && "" !== b.resources[a] && b.available[a] < parseInt(b.resources[a]) && 0 < parseInt(b.resources[a]) ? !1 : !0
            }
            ;
            b.enoughStorage = function(c) {
                if ((!0 == b.checkStorage || "true" == b.checkStorage) && "undefined" !== typeof b.resources && "undefined" !== typeof b.resources[c] && "" !== b.resources[c]) {
                    var e = h;
                    "undefined" !== typeof b.checkStorageVillageId && (e = a.qa(b.checkStorageVillageId));
                    var f = e.getResources()
                      , f = parseInt(f[c]) + parseInt(b.resources[c]);
                    b.additionalResources && (f += parseInt(b.additionalResources[c]));
                    return f <= e.data.storageCapacity[c]
                }
                return !0
            }
            ;
            b.showAsOldResources = "true" == b.old;
            b.resourceIsSigned = "true" == g.signed;
            b.colorPositive = "true" == g.colorPositive;
            b.$on("activeVillageChanged", function() {
                h = a.i();
                e()
            });
            "undefined" !== typeof g.resources && b.$watch("resources", e, !0);
            "undefined" !== typeof g.available && b.$watch("available", e, !0);
            if (g.flyingResTrigger || "" == g.flyingResTrigger) {
                var m = []
                  , l = [];
                b.$watch("flyingResTrigger", function(a) {
                    if (!Settings.get(Travian.Player.data.playerId).getSetting("disableAnimations")) {
                        if (a || "true" == a) {
                            b.$root.$broadcast("freezeStockBar");
                            var e = $(f)
                              , g = $("body .mainContentWrapper #layoutHeader #resourceBar");
                            a = 1;
                            for (var h = 0; 4 >= a; a++) {
                                if (b.resources[a]) {
                                    var t = {
                                        1: 0,
                                        2: 0,
                                        3: 0,
                                        4: 0
                                    };
                                    t[a] = b.resources[a];
                                    (function(a, f, h) {
                                        f = window.setTimeout(function() {
                                            if (!1 !== b.flyingResTrigger && "false" !== b.flyingResTrigger) {
                                                var f = e.find(".resType" + a)
                                                  , m = g.find(".stockContainer .resType" + a)
                                                  , p = f.clone().css("zIndex", 5E3)
                                                  , f = c.zb(f, m, p, "body", 600, 100, "linear", function() {
                                                    b.$root.$broadcast("freezeStockBar", {
                                                        addResources: h,
                                                        duration: c.fc + 200
                                                    })
                                                });
                                                l.push(f)
                                            }
                                        }, f * c.fc);
                                        m.push(f)
                                    }
                                    )(a, h++, t)
                                }
                            }
                        } else {
                            if (!1 === a || "false" === a) {
                                for (a = 0; a < l.length; a++) {
                                    l[a](!0),
                                    l.splice(a--, 1)
                                }
                            }
                        }
                    }
                });
                b.$on("$destroy", function() {
                    for (var a = 0; a < m.length; a++) {
                        window.clearTimeout(m[a])
                    }
                })
            }
        }
    }
}
;
Travian.Directive.displayResources.$inject = ["VillageService", "AnimationService"];
Travian.Directive.dropdown = function(a, c, b) {
    return {
        replace: !0,
        scope: {
            data: "=",
            loggedIn: "="
        },
        restrict: "EA",
        template: '<div class="dropdownContainer"><div class="dropdownHead openDownwards closed" clickable="clickDropdown()"><span class="selectedItem truncated"></span><i class="symbol_arrowDown_tiny_illu"></i></div><input class="dropdownInput" type="text"></div>',
        transclude: "element",
        compile: function(f, g, e) {
            return {
                pre: function(a) {
                    e(a, function(b) {
                        a.template = b.html();
                        a.$on("$destroy", function() {
                            b.remove()
                        })
                    })
                },
                post: function(e, f) {
                    function l() {
                        if (!I) {
                            return !1
                        }
                        var a = z.O().q;
                        I.find(a);
                        f.find(a);
                        e.data.hoverContainer && ("undefined" != typeof H && null != H) && H.find(a)
                    }
                    function p(a) {
                        var b = null
                          , c = J;
                        do {
                            b = E[c + a],
                            c += a
                        } while ("" === b);
                        "undefined" != typeof b && v(b, !0)
                    }
                    function n() {
                        e.data.hoverable && u(R)
                    }
                    function q() {
                        R = !0;
                        b(n, 10)
                    }
                    function r() {
                        F && (R = !1,
                        b(n, 10))
                    }
                    function t() {
                        if (I) {
                            var b, c, l, n = I.css("display");
                            I.css("display", "block");
                            var p = f[0].getBoundingClientRect();
                            "undefined" != typeof a.pageYOffset ? (b = a.pageYOffset,
                            c = a.pageXOffset,
                            l = a.outerHeight) : (b = $(window).scrollTop(),
                            c = $(window).scrollLeft(),
                            l = $(window).height());
                            I.css("left", p.left + c + "px");
                            I.height(0);
                            c = I.find(".scrollContentInnerWrapper").outerHeight(!0);
                            var q = I.outerHeight(!0);
                            b = p.top + b;
                            p = l - b - f.outerHeight(!0);
                            l = !0;
                            b > p && "true" != g.openDownwards && (l = !1);
                            p = f.find(".dropdownHead");
                            l ? (p.addClass("openDownwards"),
                            I.addClass("openDownwards"),
                            p.removeClass("openUpwards"),
                            I.removeClass("openUpwards")) : (p.addClass("openUpwards"),
                            I.addClass("openUpwards"),
                            p.removeClass("openDownwards"),
                            I.removeClass("openDownwards"));
                            p = 200;
                            "undefined" != typeof e.data.maxHeight && (p = e.data.maxHeight);
                            c > p && (c = p);
                            l ? I.css("top", b + f.outerHeight(!0) + "px") : I.css("top", b - c - q + "px");
                            I.css("height", c + "px");
                            I.find(".scrollContent").css("display", "block");
                            "undefined" != typeof e.data.bodyStyle && I.css(e.data.bodyStyle);
                            "undefined" != typeof e.data.resize && !0 === e.data.resize && ("undefined" != typeof e.scrollbarApi && "undefined" != typeof e.scrollbarApi.update && e.scrollbarApi.update(),
                            c = L.outerWidth(),
                            q = I.outerWidth(),
                            q > c ? (c = q - c,
                            q = L.outerWidth(!1),
                            L.css("width", q + c + "px")) : c > q && (c -= q,
                            q = I.width(),
                            I.css("width", q + c + "px")));
                            I.css("display", n)
                        }
                    }
                    function u(a) {
                        if (!T && !0 === e.data.lazyRendering && !1 !== a) {
                            D(!0)
                        } else {
                            if (null != I) {
                                0 < arguments.length && (F = !a);
                                var b = f.find(".dropdownHead")
                                  , c = f.find(".dropdownArrow");
                                F ? (F = !1,
                                I.css("display", "none"),
                                I.find(".scrollContent").css("display", "inline"),
                                b.addClass("closed"),
                                b.removeClass("opened"),
                                g.openDownwards ? (c.addClass(N),
                                c.removeClass(P)) : (c.addClass(P),
                                c.removeClass(N))) : (e.$parent && e.$parent.w && e.$parent.Ej(e.$parent.w.name),
                                F = !0,
                                I.css("display", "block"),
                                b.addClass("opened"),
                                b.removeClass("closed"),
                                g.openDownwards ? (c.addClass(P),
                                c.removeClass(N)) : (c.addClass(N),
                                c.removeClass(P)),
                                t(),
                                "touch" != z.Ga() && f.find("input").focus())
                            }
                        }
                    }
                    function w() {
                        if (null == I) {
                            f.find(".selectedItem").text(B[e.data.selected])
                        } else {
                            var a = e.data.selected;
                            if (null === e.data.selected) {
                                f.find(".selectedItem").addClass("empty"),
                                "undefined" != typeof e.data.placeholder && f.find(".selectedItem").text(Travian.translate(e.data.placeholder)),
                                J = -1
                            } else {
                                f.find(".selectedItem").removeClass("empty");
                                var b = I.find(".dropDownItem" + a).html();
                                f.find(".selectedItem").html(b);
                                J = B[a]
                            }
                            I.find(".dropdownOption").removeClass("selected");
                            I.find(".dropDownItem" + a).addClass("selected");
                            e.data.noTruncate ? f.find(".selectedItem").removeClass("truncated") : f.find(".selectedItem").addClass("truncated")
                        }
                    }
                    function s() {
                        null != I && "undefined" != typeof e.data.disabledEntries && (I.find(".dropdownOption").removeClass("disable"),
                        $.each(e.data.disabledEntries, function(a, b) {
                            I.find(".dropdownOption.dropDownItem" + b).addClass("disable")
                        }))
                    }
                    function x() {
                        "undefined" != typeof e.data.disabled && (f.find("input").prop("disabled", e.data.disabled),
                        e.data.disabled ? (f.find(".dropdownHead").addClass("disabled"),
                        u(!1)) : f.find(".dropdownHead").removeClass("disabled"))
                    }
                    function v(a, b) {
                        if ("" !== a && "undefined" != typeof a && null !== a) {
                            if (-1 < $.inArray(a, e.data.disabledEntries)) {
                                return
                            }
                            e.data.selected = a;
                            b || e.data.stayAtClickOpen || u(!1);
                            w();
                            J = B[a]
                        }
                        "function" == typeof e.data.callback && e.data.callback(a);
                        t()
                    }
                    function D(a) {
                        a = a || !1;
                        T = !0;
                        I = $("<div scrollable>");
                        I.addClass("dropdownBody");
                        I.addClass(e.data.bodyClass);
                        e.data.hoverable && (z.onPointerOver(I[0], q),
                        z.onPointerOut(I[0], r));
                        $(Q).append(I);
                        u(!1);
                        J = -1;
                        var f = e.data.selectBy || "key"
                          , g = ""
                          , g = "undefined" != typeof e.data.orderBy ? g + ("<li ng-repeat=\"option in data.options | orderBy:'" + e.data.orderBy + "'\" ") : g + '<li ng-repeat="(key, option) in data.options track by $index" '
                          , l = "truncated";
                        e.data.noTruncate && (l = "");
                        g = g + (' class="dropdownOption dropDownItem{{' + f + "}} " + l + '" ') + (" ng-class=\"{selected: '{{" + f + "}}' == data.selected, disabledEntries: data.disabledEntries.indexOf('{{" + f + "}}') > -1}\" clickable=\"selectItem({{'" + f + "'}})\">");
                        g = "" != e.template ? g + (e.template + "</li>") : g + "{{option}}</li>";
                        f = $("<ul>" + g + "</ul>");
                        I.html(f);
                        M = e.$new();
                        c(I)(M);
                        b(function() {
                            t();
                            "undefined" != typeof e.scrollbarApi && "undefined" != typeof e.scrollbarApi.updateHeight && e.scrollbarApi.updateHeight();
                            w();
                            s();
                            x();
                            u(a)
                        }, 0);
                        w();
                        s();
                        x()
                    }
                    function C() {
                        u(!1)
                    }
                    var A = f;
                    f = $(f);
                    var F = !1
                      , B = {}
                      , E = []
                      , J = -1
                      , I = null
                      , T = !1
                      , Q = $("body")[0]
                      , L = f.find(".dropdownHead")
                      , H = null
                      , N = "symbol_arrowUp_tiny_illu"
                      , P = "symbol_arrowDown_tiny_illu"
                      , M = null;
                    f.find("input").on("focus", function() {
                        f.find(".dropdownHead").addClass("focus")
                    });
                    f.find("input").on("blur", function() {
                        f.find(".dropdownHead").removeClass("focus")
                    });
                    f.find("input").on("keyup", function(a) {
                        a = a.keyCode;
                        40 == a && p(1);
                        38 == a && p(-1);
                        13 == a && u()
                    });
                    var R = !1
                      , aa = z.D("up", l)
                      , ga = z.D("down", l);
                    e.data.hoverable && (H = $("#" + e.data.hoverContainer),
                    "undefined" != typeof H[0] ? (z.onPointerOver(H[0], q),
                    z.onPointerOut(H[0], r)) : (z.onPointerOver(L[0], q),
                    z.onPointerOut(L[0], r)));
                    e.clickDropdown = function() {
                        e.data.hoverable || u()
                    }
                    ;
                    e.selectItem = v;
                    var U = e.$watch("data.selected", w)
                      , ca = e.$watch("data.disabledEntries", function() {
                        b(s)
                    })
                      , K = e.$watch("data.disabled", x);
                    e.$on("newTranslation", function() {
                        b(w, 100)
                    });
                    "undefined" != typeof e.data.placeholder ? f.find(".selectedItem").text(Travian.translate(e.data.placeholder)) : f.find(".selectedItem").html("&nbsp;");
                    e.$on("openDropdown", function(a, b) {
                        b && (e.$parent && e.$parent.w && b == e.$parent.w.name) && u(!1)
                    });
                    e.$on("windowDragged", t);
                    e.$on("scrolling", function(a) {
                        a.targetScope != a.currentScope && u(!1)
                    });
                    $(window).on("resize", C);
                    var O = e.$watch("data.options", function() {
                        !0 === e.data["static"] && O();
                        var a = 0;
                        B = {};
                        E = [];
                        for (var b in e.data.options) {
                            if (e.data.selectBy) {
                                var c = e.data.options[b][e.data.selectBy.substr(7)];
                                B[c] = a;
                                E[a] = c
                            } else {
                                B[b] = a,
                                E[a] = b
                            }
                            a++
                        }
                        null != I && function() {
                            var a = I;
                            window.setTimeout(function() {
                                angular.element(a).remove()
                            }, 10)
                        }();
                        L = f.find(".dropdownHead");
                        L.addClass("closed");
                        !0 !== e.data.lazyRendering && D(F)
                    }, !0);
                    A.bind("$destroy", function() {
                        aa();
                        ga();
                        z.s(f[0]);
                        f.find("input").off();
                        ca();
                        K();
                        O();
                        U();
                        $(window).off("resize", C);
                        L && z.s(L[0]);
                        "undefined" != typeof e.data.hoverContainer && z.s(H[0]);
                        I && (M.$destroy(),
                        z.s(I[0]),
                        angular.element(I).remove())
                    })
                }
            }
        }
    }
}
;
Travian.Directive.dropdown.$inject = ["$window", "$compile", "$timeout"];
Travian.Directive.dynamicTabulation = function(a, c) {
    return {
        restrict: "E",
        scope: !0,
        link: function(a, f, g) {
            function e(c) {
                "undefined" === typeof c && (c = p);
                a.showHiddenTabsDropdown = c
            }
            function h(a, b) {
                u || (u = f.clone().insertAfter(f),
                t.css("opacity", 0));
                n.init();
                c(function() {
                    var a;
                    a: {
                        a = t.width();
                        x = 0;
                        for (var c = t.children(), e = 0, f = 0, g = 0; g < c.length; g++) {
                            var l = c[g];
                            if (l != r[0]) {
                                var m = $(l).outerWidth(!0);
                                x += m;
                                if (x < a) {
                                    e++,
                                    f = m
                                } else {
                                    x -= $(l).outerWidth(!0);
                                    x > a - 45 && (e--,
                                    x -= f);
                                    a = e;
                                    break a
                                }
                            }
                        }
                        a = b ? w : 99
                    }
                    a !== w ? (w = a,
                    h(0, !0)) : (r.css(getReadingDirectionFrom(), x + parseFloat(t.css("left")) + "px"),
                    t.css("opacity", 1),
                    u && (u.remove(),
                    u = null))
                }, 10)
            }
            function m(a, b) {
                for (var c = a, e = b.split("."), f = 0; f < e.length - 1; f++) {
                    c = c[e[f]]
                }
                return c[e[e.length - 1]]
            }
            var l = f;
            f = $(f);
            var p = !0
              , n = new function() {
                this.visible = [];
                this.hidden = [];
                this.init = function() {
                    var c = m(a, g.watchVar);
                    if (null != c) {
                        this.visible.splice(0, this.visible.length);
                        this.hidden.splice(0, this.hidden.length);
                        for (var e = null, f = 0; f < c.length; f++) {
                            if (f < w) {
                                this.visible.push(c[f])
                            } else {
                                var h = this.hidden.push(c[f]);
                                m(c[f], g.collectionKey) == g.activeTab && (e = h - 1)
                            }
                        }
                        null != e && (null != g.activeTab && 0 < this.visible.length) && this.eg(e)
                    }
                }
                ;
                this.eg = function(c) {
                    var e = m(a, g.watchVar);
                    c = e.splice(this.visible.length + c, 1);
                    e.splice(this.visible.length - 1, 0, c[0]);
                    this.init(e)
                }
            }
              , q = f.find(".dynamicTabulationDropdown")
              , r = f.find(".showHidden")
              , t = f.find(".tabWrapper")
              , u = null
              , w = 99;
            if ("undefined" !== typeof a.dynTabConfig) {
                for (var s in a.dynTabConfig) {
                    a["dynTab" + s.charAt(0).toUpperCase() + s.slice(1)] = a.dynTabConfig[s]
                }
            }
            a.tabs = n.visible;
            a.tabsMore = n.hidden;
            a.showHiddenTabsDropdown = !1;
            a["debugger"] = n;
            a.toggleDropdown = function() {
                e(!a.showHiddenTabsDropdown)
            }
            ;
            var x = 0;
            a.$watch(g.watchVar + ".length", h);
            $(window).on("resize", h);
            a.$on("checkDynTabs", function() {
                var a = f[0].style.display;
                f[0].style.display = "none";
                var b = f[0].offsetHeight;
                f[0].style.display = a;
                h();
                return b
            });
            a.showHiddenTab = function(a) {
                n.eg(a);
                e(!1)
            }
            ;
            var v = z.D("down", function() {
                if (!q) {
                    return !1
                }
                var c = z.O().q
                  , f = q.find(c).length || q[0] == c
                  , c = r.find(c).length || r[0] == c;
                f || (c || !a.showHiddenTabsDropdown) || (e(!1),
                requestAngularApply())
            });
            l.bind("$destroy", function() {
                v()
            })
        }
    }
}
;
Travian.Directive.dynamicTabulation.$inject = ["RoutingService", "$timeout"];
Travian.Directive.elementSizeChecker = function(a) {
    return {
        restrict: "A",
        scope: {
            width: "=",
            height: "=",
            result: "="
        },
        link: function(c, b) {
            a(function() {
                var a = b.prop("offsetWidth")
                  , g = b.prop("offsetHeight");
                if ("object" == typeof c.width) {
                    var e = parseInt(c.width.gt)
                      , h = parseInt(c.width.lt);
                    !isNaN(e) && a <= e && (c.result = !1);
                    !isNaN(h) && a >= h && (c.result = !1)
                }
                "object" == typeof c.height && (a = parseInt(c.height.gt),
                e = parseInt(c.height.lt),
                !isNaN(a) && g <= a && (c.result = !1),
                !isNaN(e) && g >= e && (c.result = !1))
            })
        }
    }
}
;
Travian.Directive.elementSizeChecker.$inject = ["$timeout"];
Travian.Directive.expandableContent = function() {
    return {
        transclude: !0,
        replace: !0,
        restrict: "EA",
        scope: !0,
        template: '<div class="expandableContent"><div class="expandButton closed" clickable="expandMe()"><span ng-bind-html="myTitle"></span></div><div class="collapser collapsed"><div class="collapserContent" ng-transclude></div></div></div>',
        link: function(a, c, b) {
            c = $(c);
            var f = !1;
            a.myTitle = "";
            b.$observe("headerText", function(b) {
                a.myTitle = Travian.translate(b)
            });
            b.$observe("expandDisabled", function(a) {
                "true" == a && c.find(".expandButton").attr("disabled", "disabled")
            });
            b.$observe("expanded", function(b) {
                "true" == b ? f || a.expandMe() : f && a.expandMe()
            });
            a.expandMe = function() {
                c.find(".collapser").hasClass("collapsed") ? ("undefined" != typeof a.$parent.groupCollapse && a.$parent.groupCollapse(),
                c.find(".expandButton").addClass("opened"),
                c.find(".expandButton").removeClass("closed"),
                c.find(".collapser").removeClass("collapsed"),
                f = !0) : (c.find(".expandButton").addClass("closed"),
                c.find(".expandButton").removeClass("opened"),
                c.find(".collapser").addClass("collapsed"),
                f = !1)
            }
            ;
            b.expanded && a.expandMe()
        }
    }
}
;
Travian.Directive.expandableContentGroup = function() {
    return {
        restrict: "EA",
        scope: !0,
        link: function(a, c) {
            c = $(c);
            a.groupCollapse = function() {
                c.find(".expandButton").removeClass("opened");
                c.find(".expandButton").addClass("closed");
                c.find(".collapser").addClass("collapsed")
            }
        }
    }
}
;
Travian.Directive.hover = function(a, c, b, f) {
    var g = 100;
    return {
        restrict: "A",
        link: function(a, h, m) {
            function l() {
                t ? (r.show(),
                r.setPosition()) : r.hide();
                q = null
            }
            function p() {
                t = !0;
                null != q && c.cancel(q);
                q = c(l, g)
            }
            function n() {
                a.stayOpen || (t = !1,
                null != q && c.cancel(q),
                q = c(l, g))
            }
            var q = null;
            m = b.get(m.hover);
            var r = new Ca(h,m,"","class");
            r.parentElement = h;
            m = r.I;
            m[0].className = "buildingQueueDetails";
            f(r.I)(a);
            var t = !1;
            l();
            z.onPointerOver(h[0], p);
            z.onPointerOut(h[0], n);
            z.onPointerOver(m[0], p);
            z.onPointerOut(m[0], n);
            h.bind("$destroy", n)
        }
    }
}
;
Travian.Directive.hover.$inject = ["$window", "$timeout", "$templateCache", "$compile"];
Travian.Directive.input = function() {
    return {
        restrict: "E",
        priority: -1,
        link: function(a, c) {
            c = $(c);
            var b = c.attr("type")
              , f = {
                checkbox: "action_check_tiny_flat_black",
                radio: "symbol_dot_tiny_illu"
            };
            "checkbox" == b && c.hasClass("switch") || ("checkbox" == b || "radio" == b ? (c.wrap("<div class='clickInputWrapper' />"),
            $('<i class="' + f[b] + '"></i>').insertAfter(c),
            c.parents("label").addClass("clickInputLabel"),
            $.browser.msie && z.ya(c[0], function() {
                a.$emit("forceWindowRerender")
            })) : "text" != b && "password" != b || c.parents("label").addClass("insertInputLabel"),
            $.browser.msie && a.$on("$destroy", function() {
                z.s(c[0])
            }))
        }
    }
}
;
Travian.Directive.input.$inject = [];
Travian.Directive.mapPart = function(a, c) {
    return {
        restrict: "EA",
        replace: !1,
        scope: !1,
        link: function(b, f, g) {
            function e() {
                for (var a = !0, b = 0, f = m.length; b < f; b++) {
                    h.oc(m[b].x, m[b].y) || (a = !1)
                }
                a || c(e, 500)
            }
            var h = a.kh(g.villageid, f, b);
            h.yb("lineWidth", 1, !0);
            h.yb("borderAlpha", 0.8, !0);
            h.yb("villageAlpha", 1, !0);
            var m = [];
            f = id2xy(g.villageid);
            g = parseFloat(g.size);
            for (var l = Math.floor(f.x - g); l <= f.x + g; l++) {
                for (var p = Math.floor(f.y - g); p <= f.y + g; p++) {
                    Math.sqrt((l - f.x) * (l - f.x) + (p - f.y) * (p - f.y)) <= g && m.push({
                        x: l,
                        y: p
                    })
                }
            }
            e();
            b.$on("$destroy", function() {
                h.$d({});
                a.oh(h)
            })
        }
    }
}
;
Travian.Directive.mapPart.$inject = ["MapService", "$timeout"];
Travian.Directive.medalImage = function() {
    return {
        restrict: "E",
        template: '<i class="medalImage medal_{{MedalModel.TypeString[type]}}Rank{{Math.min(4,rank)}}_large_illu" ng-class="{lowRank:rank>3}"tooltip tooltip-url="tpl/profile/playerProfile/medalTooltip.html" tooltip-data="type:{{type}},rank:{{rank}},week:{{week}}"><span class="rankNumber">{{rank}}</span></i>',
        replace: !0,
        scope: !0,
        link: function(a, c, b) {
            a.MedalModel = Medal;
            a.Math = Math;
            a.type = b.type;
            a.rank = b.rank;
            a.week = b.week
        }
    }
}
;
Travian.Directive.npcTraderButton = function(a, c) {
    return {
        restrict: "E",
        replace: !1,
        template: '<div clickable="useNpcTrader()" tooltip tooltip-show="true" tooltip-data="{{tooltipData}}" tooltip-translate="{{tooltipText}}" class="iconButton premium npcTrade {{status}}"><i class="feature_npcTrader_small_flat_black"></i></div>',
        link: function(b, f, g) {
            function e() {
                if ("undefined" == typeof l) {
                    return 0
                }
                var a = new Resources(h.getResources()), b = new Resources(l), c = Infinity, e;
                for (e in r) {
                    a[r[e]] = 0,
                    b[r[e]] = 0,
                    c = Math.min(c, Math.floor(p[r[e]] / l[r[e]]))
                }
                c = Math.min(c, Math.floor(a.getSum() / b.getSum()));
                if (0 < c) {
                    for (b.multiply(c),
                    e = 1; 4 >= e; e++) {
                        b[e] > n[e] && (c = Math.min(c, Math.floor(n[e] / l[e])))
                    }
                }
                return c
            }
            b.tooltipText = "Marketplace.NpcTrade.UseNpc";
            b.type = g.type;
            if (!f.find("button")) {
                return !1
            }
            var h = c.i(), m = !0, l, p, n, q, r = PremiumFeature.getNotTradableResTypes();
            b.status = "";
            if (Village.isWWVillage(h.data.type)) {
                return b.status = "notAvailable",
                b.tooltipText = "Error.NotAvailableInWW",
                !1
            }
            g.$observe("useNpc", function(a) {
                "undefined" != typeof a && (m = "true" === a)
            });
            g.$observe("costs", function(a) {
                "undefined" != typeof a && a && (l = b.$eval(a))
            });
            if ("unitTrain" == g.type) {
                b.currentMax = 0;
                b.currentLimit = Infinity;
                var t = function() {
                    var a = b.currentLimit - b.currentMax
                      , c = e() - b.currentMax;
                    return "max:" + Math.min(a, Math.max(0, c))
                };
                g.$observe("currentMax", function(a) {
                    "undefined" != typeof a && a && (b.currentMax = a,
                    b.tooltipData = t())
                });
                g.$observe("currentLimit", function(a) {
                    "undefined" != typeof a && a && (b.currentLimit = Math.floor(a),
                    b.tooltipData = t())
                });
                b.$on("resourcesChanged", function() {
                    b.tooltipData = t()
                })
            }
            b.$on("activeVillageChanged", function() {
                h = c.i();
                b.tooltipData = t();
                null != b.getParam("npcOverlay", !0, !1) && (b.closeOverlay(),
                a(b.useNpcTrader, 50))
            });
            b.canUseNpcTrader = function() {
                p = new Resources(h.getResources());
                q = new Resources(l);
                n = new Resources(h.getCapacity());
                b.tooltipText = "Marketplace.NpcTrade.UseNpc";
                m || (b.tooltipText = "Marketplace.NpcTrade.NotNeeded");
                var a = n.getSum() == p.getSum();
                a && (b.tooltipText = "Marketplace.NpcTrade.NotNeeded");
                var c = p.getSum() >= q.getSum();
                c || (b.tooltipText = "Error.NotEnoughResources");
                var e;
                switch (b.type) {
                case "celebration":
                    (e = !b.ongoingCelebration) || (b.tooltipText = "Celebration.QueueFull");
                    break;
                case "unitUpgrade":
                    (e = !b.unitsResearch.data.upgradeQueueFull) || (b.tooltipText = "Units.Research.UpgradeQueueFull");
                    break;
                case "unitResearch":
                    (e = !b.unitsResearch.data.researchQueueFull) || (b.tooltipText = "Units.Research.ResearchQueueFull");
                    break;
                case "unitTrain":
                    b.tooltipText = "Units.Tooltip.MaxWithTrader";
                    break;
                default:
                    e = !0
                }
                return m && !a && c && e
            }
            ;
            b.canUseNpcTrader();
            b.useNpcTrader = function() {
                n = new Resources(h.getCapacity());
                p = new Resources(h.getResources());
                q = new Resources(l);
                if ("unitTrain" == b.type) {
                    var a = e();
                    0 < a && q.multiply(a)
                }
                for (var c in r) {
                    q[r[c]] = p[r[c]]
                }
                a = p.distribute(n, q, null, Resources.allTypes(r));
                b.overlayConfig.routeNamedParam = "npcOverlay";
                b.openOverlay("npcMerchantOverlay", {
                    wood: a[Resources.WOOD] || 0,
                    clay: a[Resources.CLAY] || 0,
                    iron: a[Resources.IRON] || 0,
                    crop: a[Resources.CROP] || 0,
                    closeWindow: !0
                })
            }
        }
    }
}
;
Travian.Directive.npcTraderButton.$inject = ["$timeout", "VillageService"];
Travian.Directive.numberAdjuster = function(a) {
    return {
        restrict: "E",
        transclude: !0,
        replace: !0,
        scope: {
            numberModel: "=",
            min: "@",
            max: "@"
        },
        templateUrl: "tpl/directive/generalElements/numberAdjuster.html",
        link: function(c, b) {
            function f() {
                c.numberModel > c.min && (c.numberModel--,
                c.$apply());
                null !== m && !1 === z.O().ga && (Travian.tick.unbind(m),
                m = null)
            }
            function g() {
                c.numberModel < c.max && (c.numberModel++,
                c.$apply());
                null !== l && !1 === z.O().ga && (Travian.tick.unbind(l),
                l = null)
            }
            b = $(b);
            var e = b.find(".decr"), h = b.find(".incr"), m, l, p;
            z.V(e[0], function() {
                f();
                p = a(function() {
                    p = null;
                    m = Travian.tick.bind(f)
                }, 400)
            });
            z.V(h[0], function() {
                g();
                p = a(function() {
                    p = null;
                    l = Travian.tick.bind(g)
                }, 400)
            });
            var n = z.D("up", function() {
                null !== p && a.cancel(p)
            });
            c.$on("$destroy", function() {
                n();
                z.s(e[0]);
                z.s(h[0]);
                null !== m && Travian.tick.unbind(m);
                null !== l && Travian.tick.unbind(l)
            })
        }
    }
}
;
Travian.Directive.numberAdjuster.$inject = ["$timeout"];
Travian.Directive.onlineStatus = function() {
    return {
        restrict: "E",
        template: '<i class="{{iconClass}}_{{colorFlag}} {{additionalClass}}" alt="{{alt}}" tooltip tooltip-translate="{{title}}" tooltip-data="{{titleData}}"</i>',
        replace: !0,
        scope: !0,
        link: function(a, c, b) {
            function f() {
                var c;
                a.iconClass = b.iconClass;
                a.additionalClass = b.additionalClass;
                0 == b.status ? c = 0 : 1 == b.status || "true" == b.status || 1 == b.isOnline || "true" == b.isOnline ? c = 1 : (c = a.$root.currentServerTime - b.status,
                c = 86400 > c ? 2 : 86400 <= c && 259200 > c ? 3 : 259200 <= c && 604800 > c ? 4 : 5,
                10 > b.status && (c = b.status));
                a.colorFlag = g[c];
                a.alt = Travian.translate("Player.OnlineStatus_" + c);
                a.titleData = "";
                "undefined" != typeof b.text && "" != b.text ? 0 < c ? (a.title = b.text + "_onlineState",
                a.titleData = "state:" + Travian.translate("Player.OnlineStatus_" + c)) : a.title = b.text : a.title = "Player.OnlineStatus_" + c
            }
            var g = {
                0: "black",
                1: "online",
                2: "24h",
                3: "3d",
                4: "7d",
                5: "inactive"
            };
            multiObserve(b, ["status"], f);
            multiObserve(b, ["iconClass"], f);
            multiObserve(b, ["additionalClass"], f);
            multiObserve(b, ["isOnline"], f);
            multiObserve(b, ["text"], f);
            f()
        }
    }
}
;
Travian.Directive.pagination = function(a, c) {
    return {
        templateUrl: "tpl/mainlayout/modals/partials/pagination.html",
        restrict: "EA",
        transclude: !0,
        scope: {
            itemsPerPage: "=",
            numberOfItems: "=",
            currentPage: "=",
            displayPageFunc: "=",
            routeNamedParam: "@"
        },
        link: function(b, f, g) {
            function e() {
                var c = a.getParam(g.routeNamedParam);
                "undefined" != typeof c ? (c = parseInt(c),
                b.currentPage = isNaN(c) ? p || null : c) : b.currentPage = p || null;
                h()
            }
            function h() {
                if ("undefined" != typeof m && l) {
                    var a = []
                      , c = [];
                    n = Math.max(1, Math.ceil(m / l));
                    b.currentPage = b.currentPage || 1;
                    b.currentPage > n && (b.currentPage = n);
                    for (var e = 0; e < n; e++) {
                        a.push(e + 1)
                    }
                    5 < a.length ? (c.push(1, n),
                    a = b.currentPage,
                    1 == a ? c.splice(1, 0, 2, "...") : 2 == a ? c.splice(1, 0, 2, 3, "...") : 3 == a ? c.splice(1, 0, 2, 3, 4, "...") : 3 < a && 2 < n - a ? c.splice(1, 0, "...", a - 1, a, a + 1, "...") : 3 < a && 2 == n - a ? c.splice(1, 0, "...", a - 1, a, a + 1) : 3 < a && 1 == n - a ? c.splice(1, 0, "...", a - 2, a - 1, a) : 3 < a && 0 == n - a && c.splice(1, 0, "...", a - 2, a - 1)) : c = a;
                    b.filteredPageNumbers = c;
                    b.requiredNumberOfPages = n
                }
            }
            var m, l, p, n;
            g.$observe("startupPosition", function() {
                "undefined" != typeof g.startupPosition && 0 < b.itemsPerPage && (p = Math.floor(g.startupPosition / b.itemsPerPage) + 1,
                b.setPage(p),
                b.currentPage = p)
            });
            b.$watch("itemsPerPage", function(a) {
                "undefined" == typeof a || 0 == a ? b.visible = !1 : (b.visible = a < b.numberOfItems,
                b.visible && l != a && (b.currentPage = 1),
                c(h),
                l = a)
            });
            b.$watch("numberOfItems", function(a) {
                "undefined" == typeof a || 0 == a || a <= b.itemsPerPage ? (b.currentPage = p || null,
                b.visible = !1,
                m = a,
                e()) : b.itemsPerPage <= a && (b.visible = !0,
                m = a,
                h())
            });
            b.$watch("currentPage", function(a) {
                "undefined" == typeof a && (b.currentPage = p || null);
                b.setPage(b.currentPage);
                b.$parent[g.displayPageFunc](b.currentPage)
            });
            e();
            b.$on("urlChanged", function(a, c) {
                "undefined" != typeof c[b.routeNamedParam] && e()
            });
            f.bind("$destroy", function() {
                a.l(b.routeNamedParam)
            });
            b.nextPage = function() {
                b.currentPage != n && b.setPage(b.currentPage + 1)
            }
            ;
            b.prevPage = function() {
                1 != b.currentPage && b.setPage(b.currentPage - 1)
            }
            ;
            b.firstPage = function() {
                1 != b.currentPage && b.setPage(1)
            }
            ;
            b.lastPage = function() {
                b.currentPage != n && b.setPage(n)
            }
            ;
            b.setPage = function(b) {
                null != b && a.o(g.routeNamedParam, b)
            }
            ;
            b.disableNext = function() {
                return b.currentPage == b.requiredNumberOfPages
            }
        }
    }
}
;
Travian.Directive.pagination.$inject = ["RoutingService", "$timeout"];
Travian.Directive.pieChart = function() {
    return {
        restrict: "EA",
        replace: !1,
        scope: {
            data: "="
        },
        link: function(a, c, b) {
            a.$watch("data", function() {
                if ("undefined" != typeof a.data) {
                    var f = !0;
                    "undefined" != typeof b.labelInPie && (f = a.$eval(b.labelInPie));
                    var g = !1;
                    "undefined" != typeof b.percentInPie && (g = a.$eval(b.percentInPie));
                    $.plot(c, a.data, {
                        series: {
                            pie: {
                                show: !0,
                                radius: 0.98,
                                label: {
                                    show: f,
                                    radius: 0.6,
                                    formatter: function(a, b) {
                                        return g ? "<div>" + Travian.Filter.bidiNumber()(Math.round(b.percent), "percent") + "</div>" : "<div>" + b.data[0][1] + "</div>"
                                    }
                                }
                            }
                        },
                        legend: {
                            backgroundColor: "transparent",
                            labelBoxBorderColor: "none",
                            labelFormatter: function(a, b) {
                                var c = Travian.Filter.bidiNumber()(Math.round(b.percent), "percent");
                                return "<div>" + a + "<br>" + c + " (" + b.data[0][1] + ")</div>"
                            }
                        },
                        grid: {
                            hoverable: !0
                        }
                    });
                    c.find(".legend table").addClass("transparent");
                    var e = -1;
                    c.find(".pieLabel").bind("mouseover", function(a) {
                        var b = a.currentTarget.id
                          , b = b.substr(b.length - 1);
                        $(a.relatedTarget).trigger("plothover", [{}, {
                            seriesIndex: b
                        }])
                    });
                    c.bind("plothover", function(a, b, f) {
                        null == f ? -1 != e && (c.find(".legend table .legendLabel").css("font-weight", "normal"),
                        e = -1) : f.seriesIndex != e && (e = f.seriesIndex,
                        c.find(".legend table .legendLabel").css("font-weight", "normal"),
                        c.find(".legend table .legendLabel")[e].style.fontWeight = "bold")
                    })
                }
            })
        }
    }
}
;
Travian.Directive.prestigeStars = function(a) {
    return {
        restrict: "E",
        scope: {
            stars: "=",
            size: "@",
            playerId: "@"
        },
        template: a.get("tpl/directive/generalElements/prestigeStars.html"),
        replace: !0,
        link: function(a, b, f) {
            function g(a) {
                for (var b = Travian.Config.prestige, c = {
                    bronze: 0,
                    silver: 0,
                    gold: 0
                }, e = Object.keys(b).map(function(a) {
                    return parseInt(a, 10)
                }).sort(function(a, b) {
                    return a - b
                }).reverse(), f = 0; f < e.length; f++) {
                    var g = e[f];
                    if (a >= g) {
                        c = b[g];
                        break
                    }
                }
                return c
            }
            function e(b) {
                a.star = ["Empty", "Empty", "Empty"];
                a.badge = !1;
                angular.forEach("bronze silver gold bronzeBadge silverBadge goldBadge diamondBadge".split(" "), function(e) {
                    if (b[e]) {
                        if (-1 !== e.indexOf("Badge")) {
                            a.badge = !0,
                            a.badgeType = e
                        } else {
                            for (var f = b[e]; 0 < f; ) {
                                f--,
                                a.star[f] = e.charAt(0).toUpperCase() + e.slice(1)
                            }
                        }
                    }
                })
            }
            var h = 0
              , m = null;
            a.badge = !1;
            a.star = ["Empty", "Empty", "Empty"];
            f.$observe("playerid", function(a) {
                h = a;
                Player.fetchPrestige(h, function(a) {
                    m = g(a);
                    e(m)
                })
            });
            a.$watch("stars", function() {
                a.stars && e(a.stars)
            })
        }
    }
}
;
Travian.Directive.prestigeStars.$inject = ["$templateCache"];
Travian.Directive.progressbar = function(a, c) {
    var b = 20
      , f = 1.5;
    return {
        restrict: "EA",
        replace: !0,
        template: c.get("tpl/directive/generalElements/progressbar.html"),
        scope: !0,
        link: function(c, e, h) {
            function m(a) {
                var b = !0;
                h.interpolationThreshold && (b = Math.abs(D - a) > h.interpolationThreshold);
                D = a;
                c.$evalAsync(function() {
                    p(b && "true" == h.valueInterpolation)
                })
            }
            function l(a) {
                var b = !0;
                h.interpolationThreshold && (b = Math.abs(C - a) > h.interpolationThreshold);
                C = a;
                c.$evalAsync(function() {
                    n(b && "true" == h.valueInterpolation)
                })
            }
            function p(a) {
                a && (F = h.interpolationDuration ? Math.abs(D - v.main.current) / (1E3 * parseFloat(h.interpolationDuration) / b) : h.interpolationSpeed || f,
                h.gainLossMarkers && (v.additional.current = D,
                r("additional")),
                h.gainLossMarkers && D < v.main.current ? (v.marker.current = Math.max(v.marker.current, v.main.current),
                r("marker"),
                "undefined" != typeof v.main.tmp && (v.main.tmp = D)) : "undefined" == typeof v.main.tmp && (v.main.tmp = v.main.current),
                x || (h.gainLossMarkers && D > v.main.current && (v.main.tmp = v.main.current),
                t()),
                c.labelIcon && w(D > v.main.current));
                v.main.current = D;
                r("main")
            }
            function n(a) {
                D = 100 * Math.min(A, C) / A;
                if (D < v.main.current || !a) {
                    v.main.digitElemAmount && (v.main.digitElemAmount.textContent = E(C, 99999, 0)),
                    v.main.digitElemCapacity && (v.main.digitElemCapacity.textContent = E(A, 99999, 0))
                }
                p(a)
            }
            function q() {
                var b = a.R();
                b < J + 0.5 || (J = b,
                v.main.current = 100 - 100 * ((c.finishTime - b) / c.duration),
                r("main"))
            }
            function r(a) {
                var b = "current";
                "undefined" != typeof v[a].tmp && (b = "tmp");
                isNaN(v[a][b]) || (v[a][b] = Math.max(0, Math.min(v[a][b], 100)),
                v[a][b] = Math.round(10 * v[a][b]) / 10,
                v[a].last != v[a][b] && (0 >= v[a][b] ? (v[a].elem.style.zIndex = -1,
                v[a].elem.style.width = "0%") : (v[a].elem.style.zIndex = v[a].z,
                v[a].elem.style.width = v[a][b] + "%"),
                100 > v[a].last && 100 == v[a][b] ? $(v[a].elem).addClass("full") : 100 == v[a].last && 100 > v[a][b] && $(v[a].elem).removeClass("full"),
                v[a].last = v[a][b],
                "main" == a && h.percTooltip && (c.barTooltip = za(new wa({
                    value: v.main[b],
                    Pa: "percent"
                })))))
            }
            function t() {
                var a = 0;
                x = window.setTimeout(function Q() {
                    x = window.setTimeout(Q, b);
                    a++;
                    var e = !1
                      , f = !1;
                    if (h.gainLossMarkers) {
                        if ("undefined" != typeof v.main.tmp && v.main.tmp < v.main.current) {
                            if (v.main.tmp += u(a),
                            v.main.tmp >= v.main.current && (v.main.tmp = v.main.current,
                            e = !0),
                            r("main"),
                            v.main.digitElemAmount) {
                                var l = parseInt(A * v.main.tmp / 100);
                                v.main.digitElemAmount.textContent = E(l, 99999, 0)
                            }
                        } else {
                            e = !0
                        }
                        e && 0 < v.additional.current && (v.additional.current = 0,
                        r("additional"));
                        v.marker.current > v.main.current ? (v.marker.current -= u(a),
                        v.marker.current <= v.main.current && (v.marker.current = v.main.current,
                        f = !0),
                        r("marker")) : f = !0;
                        f && 0 < v.marker.current && (v.marker.current = 0,
                        r("marker"))
                    } else {
                        if ("undefined" != typeof v.main.tmp) {
                            v.main.tmp < v.main.current ? (v.main.tmp += u(a),
                            v.main.tmp >= v.main.current && (e = !0)) : (v.main.tmp -= u(a),
                            v.main.tmp <= v.main.current && (f = !0));
                            if (e || f) {
                                v.main.tmp = v.main.current,
                                e = f = !0
                            }
                            r("main");
                            v.main.digitElemAmount && (l = parseInt(A * v.main.tmp / 100),
                            v.main.digitElemAmount.textContent = E(l, 99999, 0))
                        }
                    }
                    e && f && (delete v.main.tmp,
                    v.main.digitElemAmount && (C = parseInt(h.value),
                    v.main.digitElemAmount.textContent = E(C, 99999, 0)),
                    h.onInterpolationEnd && (c.$eval(h.onInterpolationEnd),
                    requestAngularApply()),
                    window.clearTimeout(x),
                    x = 0)
                }, 200)
            }
            function u(a) {
                switch (h.interpolationCurve) {
                default:
                    ;
                case "linear":
                    return F;
                case "ease-in":
                    ;
                case "ease-out":
                    if (h.interpolationDuration) {
                        var c = 1E3 * parseFloat(h.interpolationDuration) / b
                          , e = 1
                          , e = "ease-in" == h.interpolationCurve ? Math.max(0.1, Math.min(2, 1.5 * (a - c / 2) / c + 1)) : Math.max(0.1, Math.min(2, 1.5 * (c / 2 - a) / c + 1));
                        return F * e
                    }
                    return F = "ease-in" == h.interpolationCurve ? 1.1 * F : Math.max(0.1, 0.99 * F)
                }
            }
            function w(a) {
                var b = $(e);
                if (a) {
                    a = b.find(".labelIcon.increase").length;
                    var f = c.labelIcon;
                    h.gainAnimationIcon && (f = h.gainAnimationIcon + " downscale");
                    var l = $('<i class="labelIcon ' + f + ' animated increase" style="z-index: ' + (15 + a) + '"></i>')
                } else {
                    a = b.find(".labelIcon.decrease").length,
                    l = $('<i class="labelIcon ' + c.labelIcon + ' animated decrease" style="z-index: ' + (5 + a) + '"></i>')
                }
                b.prepend(l);
                window.setTimeout(function() {
                    l && l.remove()
                }, 1E3)
            }
            var s = null
              , x = 0
              , v = {
                main: {
                    current: 0,
                    last: -1,
                    z: 2,
                    elem: e[0].querySelector(".perc")
                },
                additional: {
                    current: 0,
                    last: -1,
                    z: 1,
                    elem: e[0].querySelector(".additionalPerc")
                },
                marker: {
                    current: 0,
                    last: -1,
                    z: 3,
                    elem: e[0].querySelector(".marker")
                }
            }
              , D = 0
              , C = 0
              , A = 0
              , F = 0;
            $.each(["labelIcon", "showCountdown", "percTooltip"], function(a, b) {
                if (h[b] || "" == h[b]) {
                    c[b] = h[b]
                }
            });
            $.each("perc additionalPerc marker finishTime finishTimeTotal duration type value maxValue label steps".split(" "), function(a, b) {
                (h[b] || "" == h[b]) && h.$observe(b, function(a) {
                    if ("undefined" != typeof a) {
                        switch (b) {
                        case "perc":
                            m(a);
                            h.additionalPerc && (v.additional.current = parseFloat(a) + parseFloat(h.additionalPerc),
                            r("additional"));
                            break;
                        case "additionalPerc":
                            v.additional.current = parseFloat(h.perc) + parseFloat(a);
                            r("additional");
                            break;
                        case "marker":
                            v.marker.current = a;
                            r("marker");
                            break;
                        case "value":
                            l(a);
                            break;
                        case "maxValue":
                            A = a;
                            n(!1);
                            break;
                        case "finishTime":
                            ;
                        case "duration":
                            c[b] = a;
                            null !== s || (isNaN(c.finishTime) || isNaN(c.duration)) || (s = Travian.tick.bind(q));
                            break;
                        default:
                            c[b] = a
                        }
                    }
                })
            });
            h.perc && (D = h.perc,
            p());
            if (h.maxValue) {
                var B = '<div class="values">' + Aa(new wa({
                    current: h.value,
                    pb: h.value,
                    threshold: 99999,
                    bc: !0
                })) + (h.unitLabelKey ? ' <span class="unit">' + Travian.translate(h.unitLabelKey) + "</span>" : "") + "</div>";
                $(e).prepend(B);
                v.main.digitElemAmount = e[0].querySelector(".amount");
                v.main.digitElemCapacity = e[0].querySelector(".capacity")
            }
            (h.valueInterpolation || "" == h.valueInterpolation) && h.gainLossMarkers && (v.additional.elem.className += " increaseBar",
            v.marker.elem.className += " decreaseBar",
            v.marker.z = 0,
            $(e).find(".bar").css("transition", "none"));
            var E = Travian.Filter.shortBigNumber()
              , J = 0;
            e.bind("$destroy", function() {
                null !== s && Travian.tick.unbind(s)
            });
            c.$on("$destroy", function() {
                null !== s && Travian.tick.unbind(s);
                x && window.clearTimeout(x)
            })
        }
    }
}
;
Travian.Directive.progressbar.$inject = ["ServertimeService", "$templateCache", "$timeout"];
Travian.Directive.reward = function(a) {
    return {
        restrict: "E",
        scope: {
            type: "=",
            value: "=",
            checkStorage: "=?",
            size: "@",
            flyingResTrigger: "="
        },
        template: a.get("tpl/directive/generalElements/reward.html"),
        link: function(a) {
            a.Quest = Quest;
            a.tribeId = Travian.Player.data.tribeId;
            a.heroItems = Travian.Config.heroItems
        }
    }
}
;
Travian.Directive.reward.$inject = ["$templateCache"];
Travian.Directive.searchVillage = function(a) {
    return {
        restrict: "E",
        replace: !0,
        scope: {
            checkTargetFct: "=",
            callback: "=",
            api: "=",
            showDuration: "@",
            showDistance: "@"
        },
        templateUrl: "tpl/mainlayout/partials/searchVillage.html",
        link: function(c, b, f) {
            "undefined" == typeof c.api.result && (c.api.result = {});
            var g = parseInt(c.api.x)
              , e = parseInt(c.api.y);
            b.find(".villageName");
            c.villageNamePlaceHolder = Travian.translate("SearchVillage.Villagename");
            c.inputAutoFocus = !1;
            c.showOwnVillages = !1;
            f.$observe("showOwnVillages", function(b) {
                a.m(function() {
                    "true" === b && 1 < Travian.Player.data.villages.length && (c.showOwnVillages = !0)
                })
            });
            c.selectVillage = function(a) {
                if (null == a) {
                    c.api.result.villageSearched = "",
                    c.api.result.villageReturned = "",
                    c.api.result.villageCoordX = "",
                    c.api.result.villageCoordY = ""
                } else {
                    var b = id2xy(a.villageId);
                    c.api.result = {
                        villageSearched: a.name,
                        villageCoordX: b.x,
                        villageCoordY: b.y,
                        villageReturned: a.name
                    }
                }
                c.checkTargetFct()
            }
            ;
            c.searchByVillageCoords = function() {
                c.api.result.villageSearched = "";
                c.api.result.villageReturned = "";
                "" !== c.api.result.villageCoordX && "" !== c.api.result.villageCoordY && c.checkTargetFct()
            }
            ;
            c.api.getVillageId = function() {
                if ("undefined" == typeof c.api.result) {
                    return 0
                }
                var a = xy2id(parseInt(c.api.result.villageCoordX, 10), parseInt(c.api.result.villageCoordY, 10));
                isNaN(a) && (a = 0);
                return a
            }
            ;
            c.api.setData = function(a, b, e) {
                "undefined" === typeof c.api.result && (c.api.result = {});
                null != a && (c.api.result.villageReturned = a,
                c.api.result.villageSearched = a);
                null != b && (c.api.result.villageCoordX = b);
                null != e && (c.api.result.villageCoordY = e);
                c.disableSearch = a
            }
            ;
            c.api.resetData = function() {
                c.api.result = {
                    villageSearched: "",
                    villageCoordX: "",
                    villageCoordY: "",
                    villageReturned: "",
                    showDuration: !1
                }
            }
            ;
            isNaN(g) || isNaN(e) ? c.inputAutoFocus = !0 : (c.api.setData(null, g, e),
            c.callback())
        }
    }
}
;
Travian.Directive.searchVillage.$inject = ["SessionService"];
Travian.Directive.slider = function(a) {
    return {
        scope: {
            sliderData: "=",
            sliderMax: "=",
            sliderMin: "=",
            sliderShowMaxButton: "=",
            iconClass: "@",
            sliderChanged: "=",
            sliderSteps: "=",
            forceSteps: "@",
            sliderLock: "=",
            sliderMarkers: "=",
            inputAutofocus: "=",
            hideSteps: "@"
        },
        restrict: "E",
        templateUrl: "tpl/mainlayout/partials/slider.html",
        link: function(c, b, f) {
            function g() {
                z.s(b);
                z.s(r[0]);
                z.s(t[0])
            }
            function e() {
                z.onPointerOver(r[0], function() {
                    v.hide();
                    E = !0;
                    return !1
                });
                z.onPointerOut(r[0], function() {
                    E = !1;
                    q.css("pointer-events", "none");
                    v.css("opacity", 0);
                    setTimeout(function() {
                        q.css("pointer-events", "auto");
                        v.css("opacity", 1);
                        p()
                    }, 100)
                });
                z.V(r[0], l);
                z.V(t[0], l);
                z.Jf(t[0], p);
                z.Kf(t[0], function() {
                    "touch" != z.Ga() && s.focus()
                });
                z.onPointerOver(t[0], function() {
                    if (C.Sb || E) {
                        return !1
                    }
                    v.show()
                });
                z.onPointerOut(t[0], function() {
                    v.hide()
                })
            }
            function h() {
                var a = u.offset()
                  , b = z.O()
                  , a = {
                    x: b.current.x - a.left,
                    y: b.current.y - a.top
                };
                "right" == n && (a.x = u.width() - a.x);
                return a
            }
            function m(a, b) {
                if ("function" === typeof c.sliderChanged) {
                    var e = c.sliderChanged(a, b, c.sliderData);
                    "undefined" != typeof e && (a = e)
                }
                isNaN(a) || (r.css(n, a * C.width / C.max),
                w.css("width", 100 * a / C.max + "%"),
                c.value = a,
                "undefined" !== typeof c.sliderData && (c.sliderData.value = a),
                requestAngularApply());
                return a
            }
            function l() {
                if (!C.Sb) {
                    C.moveStart(h());
                    var a = E
                      , b = z.D("move", function() {
                        C.move(h());
                        a = !0
                    })
                      , c = z.D("up", function() {
                        C.Bi();
                        q.css("cursor", "default");
                        q.css("pointer-events", "auto");
                        b();
                        c();
                        a || ("touch" != z.Ga() ? (C.na(D[0].innerHTML),
                        s.focus()) : C.na(C.uf(h().x + window.scrollX)));
                        p();
                        E = !1
                    });
                    q.css("pointer-events", "none")
                }
            }
            function p() {
                var a = h().x;
                v.css(n, a + "px");
                var b = C.uf(a);
                if (b > C.max || b < C.min || -8 > a || a > C.width + 8) {
                    return v.hide(),
                    !1
                }
                D[0].innerHTML = b
            }
            b = $(b);
            var n = getReadingDirectionFrom()
              , q = b.find(".sliderContainer")
              , r = b.find(".handle")
              , t = b.find(".trackContainer")
              , u = b.find(".track")
              , w = b.find(".progressMarker")
              , s = b.find(".value")
              , x = b.find(".maxButton")
              , v = b.find(".hoverIndicator")
              , D = v.find(".hoverValue")
              , C = new Ea({
                min: c.sliderMin || 0,
                max: c.sliderMax || 1,
                customSteps: c.sliderSteps || 1,
                width: u.width(),
                headChanged: m
            });
            c.sliderSteps && (c.stepCount = C.Oa);
            var A = "undefined" == typeof c.forceSteps || "true" == c.forceSteps;
            "function" === typeof c.sliderChanged && ("undefined" !== typeof c.sliderData ? c.sliderChanged(c.sliderData.value, 0, c.sliderData) : c.sliderChanged(c.sliderMin, 0, c.sliderData));
            "undefined" !== typeof c.sliderData ? (C.na(c.sliderData.value || 0, A),
            0 == c.sliderData.value && m(0, 0)) : m(0, 0);
            "true" == f.inputAutofocus && c.$$postDigest(function() {
                s.focus()
            });
            var F = null
              , B = [37, 38, 39, 40];
            s.keyup(function(b) {
                null !== F && (a.cancel(F),
                F = null);
                if (0 <= $.inArray(b.keyCode ? b.keyCode : b.which, B)) {
                    return !1
                }
                b = $(this).val();
                b != parseInt(b, 0) && (b = parseInt(b, 0),
                isNaN(b) && (b = 0),
                $(this).val(b));
                F = a(function() {
                    F = null;
                    C.na(c.value, A)
                }, 500)
            });
            s.blur(function() {
                C.na(c.value, A);
                null !== F && (a.cancel(F),
                F = null)
            });
            c.$watch("sliderShowMaxButton", function(a) {
                return !1 !== a ? x.show() : x.hide()
            }, !0);
            c.$watch("sliderSteps", function(a) {
                "undefined" != typeof a && (C.update({
                    customSteps: parseInt(a) || 1
                }),
                c.sliderSteps && (c.stepCount = C.Oa))
            }, !0);
            c.$watch("sliderMin", function(a) {
                if ("undefined" != typeof a) {
                    var b = C.Mb();
                    C.update({
                        min: a
                    });
                    c.sliderSteps && (c.stepCount = C.Oa);
                    C.na(b, A);
                    a = C.Mb();
                    r.css(n, C.Qh());
                    s.val(isNaN(a) ? 0 : a)
                }
            }, !0);
            c.$watch("sliderMax", function(a) {
                if ("undefined" != typeof a) {
                    var b = C.Mb();
                    C.update({
                        max: a
                    });
                    a < b && C.na(b, A);
                    a = C.Mb();
                    c.sliderSteps && (c.stepCount = C.Oa);
                    C.na(a, A)
                }
            }, !0);
            c.$watch("sliderData", function(a) {
                if ("undefined" === typeof a) {
                    return !1
                }
                C.na(a.value, A)
            }, !0);
            c.$watch("sliderLock", function(a) {
                a ? (g(),
                s.prop("disabled", !0)) : (e(),
                s.prop("disabled", !1))
            }, !0);
            c.$on("setSliderTo", function(a, b) {
                C.na(b, A)
            });
            c.Math = Math;
            c.setMax = function() {
                C.Wf(100)
            }
            ;
            var E = !1;
            c.$on("$destroy", function() {
                g();
                s.unbind()
            })
        }
    }
}
;
Travian.Directive.slider.$inject = ["$timeout"];
Travian.Directive["switch"] = function(a, c) {
    return {
        restrict: "E",
        priority: -1,
        scope: {
            switchCallback: "=",
            switchDisabled: "=?",
            "switch": "=?switchModel",
            switchId: "="
        },
        template: a.get("tpl/directive/generalElements/switch.html"),
        link: function(a, f, g) {
            a.switchName1 = "";
            a.switchName2 = "";
            "undefined" !== typeof g.switchName1 && "" !== g.switchName1 && (a.switchName1 = Travian.translate(g.switchName1));
            "undefined" !== typeof g.switchName2 && "" !== g.switchName2 && (a.switchName2 = Travian.translate(g.switchName2));
            a.switchChanged = function() {
                "function" === typeof a.switchCallback && c(function() {
                    a.switchCallback(a["switch"], a.switchId)
                })
            }
        }
    }
}
;
Travian.Directive["switch"].$inject = ["$templateCache", "$timeout"];
Travian.Directive.tab = function(a) {
    return {
        restrict: "E",
        replace: !0,
        template: a.get("tpl/directive/generalElements/tab.html")
    }
}
;
Travian.Directive.tab.$inject = ["$templateCache"];
Travian.Directive.tabulation = function(a, c) {
    function b(a) {
        this.routeNamedParam = "tab";
        this.bodyTemplatePrefix = "";
        this.bodyTemplateSuffix = ".html";
        this.tabType = "maintab";
        this.tabs = [""];
        this.tabLangKeys = {};
        this.activeTab = this.currentTab = "";
        this.loadedTabs = [];
        this.disableScrollingForTabs = [];
        this.disableCaching = this.disableScrolling = !1;
        this.loadingDelay = 0;
        this.soundType = jb;
        this.k = function(a) {
            $.extend(this, a)
        }
        ;
        "undefined" !== typeof a && (this.k(a),
        "subtab" == a.tabType && (this.soundType = kb))
    }
    return {
        restrict: "EA",
        transclude: !0,
        templateUrl: function(a, b) {
            var c = "tpl/mainlayout/modals/partials/tabulation.html";
            "undefined" != typeof b.templateUrl && (c = b.templateUrl);
            return c
        },
        link: function(f, g, e) {
            function h() {
                function b() {
                    if (!f.tabData.currentTab || e) {
                        var a = f.tabData.currentDisableScrolling;
                        f.tabData.currentDisableScrolling = f.tabData.disableScrolling;
                        if ("undefined" !== typeof f.tabData.disableScrollingForTabs) {
                            for (var c = 0; c < f.tabData.disableScrollingForTabs.length; c++) {
                                f.tabData.disableScrollingForTabs[c] === e && (f.tabData.currentDisableScrolling = !0)
                            }
                        }
                        f.tabData.currentTab != e && (a != f.tabData.currentDisableScrolling && (f.tabData.currentDisableScrolling ? l.find(".scrollContent").first().attr("dynamic-height", !1) : l.find(".scrollContent").first().attr("dynamic-height", "" == l.attr("dynamic"))),
                        m.find(".tab" + (f.tabData.currentTab || "Main")).addClass("hiddenTab"),
                        m.find(".tab" + e).removeClass("hiddenTab"),
                        f.$emit("requestDynamicHeightUpdate"),
                        m.find(".tab" + (f.tabData.currentTab || "Main")).removeClass("hiddenTab"),
                        m.find(".tab" + e).addClass("hiddenTab"),
                        f.w && f.w.ready && (n && f.$emit("applyHeightTransition"),
                        f.w.fixedOverlayHeight = !0,
                        f.$$postDigest(function() {
                            delete f.w.fixedOverlayHeight
                        })),
                        f.tabData.disableCaching && e && (a = f.tabData.loadedTabs.indexOf(f.tabData.currentTab),
                        0 <= a && f.tabData.loadedTabs.splice(a, 1)),
                        m.find(".naviTab" + e).removeClass("loading"),
                        a = f.tabData.currentTab,
                        f.tabData.currentTab = e,
                        0 > f.tabData.loadedTabs.indexOf(f.tabData.currentTab) && f.tabData.loadedTabs.push(e),
                        n = !0,
                        "subtab" != f.tabData.tabType && "vertical" != f.tabData.tabType || f.tabData.disableCaching || f.$emit("tabChanged", e, a));
                        f.$broadcast("scrollbarApi", "update")
                    }
                }
                var e = ""
                  , g = a.getParam(f.tabData.routeNamedParam);
                g ? e = g : f.tabData.tabs && (e = f.tabData.tabs[0]);
                if (!(0 > f.tabData.tabs.indexOf(e))) {
                    if (g = !0,
                    0 > f.tabData.loadedTabs.indexOf(e) && (f.tabData.loadedTabs.push(e),
                    g = !1),
                    f.tabData.activeTab = e,
                    "maintab" != f.tabData.tabType || f.tabData.disableCaching || f.$broadcast("tabChanged", e, f.tabData.currentTab),
                    f.tabData.noLoadingDelay) {
                        b()
                    } else {
                        var h = 100;
                        if (g || f.w && !f.w.ready) {
                            h = 0
                        }
                        var p = 0;
                        (function x(a) {
                            var e = Date.now();
                            p = p || e;
                            setTimeout(function() {
                                var a = Date.now();
                                Travian.pendingRequests.Re() && 1E3 > a - p ? x(20) : c(b)
                            }, a)
                        }
                        )(h + f.tabData.loadingDelay)
                    }
                }
            }
            var m = $(g)
              , l = m.find(".tabulationContent").first();
            e = e.tabConfigName || "tabConfig";
            f.tabData = new b(f[e]);
            var p = f.$watch(e, function(a) {
                "undefined" != typeof a && (f.tabData.k(a),
                void 0 !== f.w && 1 < f.tabData.tabs.length && (f.w.parametersToRemove[f.tabData.routeNamedParam] = !0),
                h())
            }, !0);
            f.selectTab = function(b) {
                b != f.tabData.currentTab && m.find(".naviTab" + b).addClass("loading");
                a.o(f.tabData.routeNamedParam, b)
            }
            ;
            var n = !1;
            f.$on("urlChanged", function(a, b) {
                "undefined" != typeof b[f.tabData.routeNamedParam] && h()
            });
            f.$on("tabChanged", function(a) {
                a.targetScope != a.currentScope && 0 <= f.tabData.tabs.indexOf(f.tabData.currentTab) && (f.tabData.loadedTabs = [f.tabData.currentTab])
            });
            g.bind("$destroy", function() {
                p()
            })
        }
    }
}
;
Travian.Directive.tabulation.$inject = ["RoutingService", "$timeout"];
Travian.Directive.tooltip = function(a, c, b, f) {
    var g = 300
      , e = null
      , h = null
      , m = 0;
    return {
        restrict: "A",
        scope: !0,
        link: function(l, p, n) {
            function q() {
                if (n.tooltipDataRequest && "string" == typeof n.tooltipDataRequest && "undefined" == typeof l.tooltipRequestData) {
                    var a = n.tooltipDataRequest.split(";");
                    if ("function" == typeof l[a[0]]) {
                        var b = l[a[0]];
                        v = f(function() {
                            a[0] = function(a, b) {
                                l.tooltipRequestData = a;
                                v = f(u, Math.max(0, 150 - b))
                            }
                            ;
                            b.apply(this, a)
                        }, g - 150);
                        return !1
                    }
                }
                return !0
            }
            function r() {
                D = null;
                null === h || (e.parentElement != p || Travian.Config.ke) || (h.$destroy(),
                h = null);
                null != e && (m = 0,
                e.parentElement != p || Travian.Config.ke || (e.remove(),
                e = null))
            }
            function t(a) {
                null != v && (f.cancel(v),
                v = null,
                !1 === l.tooltipRequestData && delete l.tooltipRequestData);
                null != D && (f.cancel(D),
                D = null,
                B = !0);
                a ? r() : B && (D = f(r, 10));
                B = !1
            }
            function u() {
                if (!A) {
                    var b;
                    null != e && e.remove();
                    if (E) {
                        l.tOptions = E,
                        b = a.get(w.translate)
                    } else {
                        if (void 0 !== n.tooltipUrl && "" != n.tooltipUrl) {
                            b = a.get(n.tooltipUrl)
                        } else {
                            if (void 0 !== n.tooltipContent) {
                                b = n.tooltipContent
                            } else {
                                if (void 0 !== n.tooltipTranslate) {
                                    l.tOptions = n.tooltipTranslate,
                                    b = a.get(w.translate)
                                } else {
                                    if (null != F) {
                                        l.tOptions = F,
                                        b = a.get(w.translate)
                                    } else {
                                        if ("" == n.tooltip) {
                                            return
                                        }
                                        b = n.tooltip
                                    }
                                }
                            }
                        }
                    }
                    e = new Ca(p,b,s,C,!1,n.tooltipOffset);
                    e.parentElement = p;
                    void 0 != n.tooltipData && e.I.children().attr("data", n.tooltipData);
                    if (void 0 != n.tooltipUrl || void 0 != n.tooltipTranslate || null != F || E) {
                        h = l.$new(),
                        c(e.I)(h)
                    }
                    B = !0;
                    v = f(function() {
                        v = null;
                        A || null == e || (e.setPosition(),
                        e.show())
                    }, 10)
                }
            }
            var w = {
                translate: "tpl/tooltip/tooltipTranslate.html"
            }
              , s = n.tooltipPlacement
              , x = !0
              , v = null
              , D = null
              , C = ""
              , A = !1
              , F = null
              , B = !1
              , E = "";
            n.$observe("tooltipHide", function() {
                "undefined" != typeof n.tooltipHide && (x = !l.$eval(n.tooltipHide))
            });
            n.$observe("tooltipShow", function() {
                "undefined" != typeof n.tooltipShow && (x = l.$eval(n.tooltipShow))
            });
            n.$observe("tooltipClass", function(a) {
                "undefined" != typeof a && (C = a)
            });
            n.$observe("tooltipChildClass", function(a) {
                "undefined" != typeof a && (a = p.children("." + a),
                0 < a.length && (p = angular.element(a[0])))
            });
            n.$observe("tooltipData", function(a) {
                if ("undefined" != typeof a) {
                    var b = "";
                    $.each(a.split(","), function(a, c) {
                        var e = c.trim()
                          , f = e.indexOf(":");
                        0 < f ? (b = e.substr(0, f),
                        l[b] = e.substr(f + 1)) : l[b] = l[b] + "," + e
                    })
                }
            });
            n.$observe("tooltipTranslateSwitch", function(a) {
                if ("undefined" != typeof a) {
                    a = b(a)(l);
                    F = null;
                    for (var c in a) {
                        if (!0 == a[c]) {
                            F = c;
                            break
                        }
                    }
                    t(!0)
                }
            });
            l.$on("repositionTooltip", function() {
                null != e && e.setPosition()
            });
            l.$on("hideTooltip", function() {
                B && t()
            });
            l.$on("tooltipOverwrite", function(a, b) {
                E = b
            });
            z.onPointerOver(p[0], function() {
                if ((x || E) && !B && !A && null == D) {
                    var a = (new Date).getTime();
                    a < m + 10 || (null != v && (f.cancel(v),
                    v = null,
                    !1 === l.tooltipRequestData && delete l.tooltipRequestData),
                    m = a,
                    q() && (v = f(u, g)))
                }
            });
            p.bind("$destroy", function() {
                A || (z.s(p[0]),
                A = !0,
                t(!0))
            });
            z.onPointerOut(p[0], t);
            z.V(p[0], function() {
                "false" !== n.tooltipHideOnClick && t()
            })
        }
    }
}
;
Travian.Directive.tooltip.$inject = ["$templateCache", "$compile", "$parse", "$timeout"];
Travian.Directive.translate = function(a) {
    return {
        restrict: "EA",
        scope: !0,
        link: function(c, b, f) {
            function g() {
                if ("undefined" != typeof f.data) {
                    var a = "{" === f.data[0] ? f.data.replace(/[{"}]/g, "").split(",") : f.data.split(",")
                      , b = "";
                    $.each(a, function(a, e) {
                        var f = e.trim()
                          , g = f.indexOf(":");
                        0 < g ? (b = f.substr(0, g),
                        c[b] = f.substr(g + 1).trim()) : c[b] = c[b] + "," + f
                    })
                }
                if ("undefined" != typeof f.options) {
                    var g = h.match(/\?/g)
                      , a = f.options.split(",");
                    if (null == g || g.length == a.length) {
                        for (var g = h, l = 0; l <= a.length; l++) {
                            g = g.replace("?", a[0].trim()),
                            a.shift()
                        }
                        e($.trim(g))
                    }
                } else {
                    null == h.match(/\?/g) && e($.trim(h))
                }
            }
            function e(e) {
                var f = window.Travian.txt[e];
                if ("undefined" == typeof f) {
                    b.html("!!" + e + "!!")
                } else {
                    if (Travian.Config.showLangKeys) {
                        b.html(e)
                    } else {
                        f = bbCodeParser(f);
                        if (-1 < f.indexOf("{{") && -1 < f.indexOf("}}") && -1 < f.indexOf("|")) {
                            e = function(a, b) {
                                for (var c = 0, e = a.length, f = []; -1 < (c = b.indexOf(a, c)); ) {
                                    f.push(c),
                                    c += e
                                }
                                return f
                            }
                            ;
                            var g = e("{{", f)
                              , h = e("}}", f);
                            if (g.length != h.length) {
                                return
                            }
                            var l = [];
                            $.each(g, function(a, b) {
                                var c = f.substr(b, h[a] + 2 - b)
                                  , e = c.replace("{{", "").replace("}}", "").split("|");
                                if (!(1 >= e.length)) {
                                    var g = e.splice(0, 1)[0].split(",");
                                    $.each(e, function(a, e) {
                                        var h = {
                                            replaceable: f.substr(b, c.length)
                                        };
                                        if ("undefined" == typeof Travian.htmlFilters[e]) {
                                            h.injectable = ""
                                        } else {
                                            if ("string" == typeof Travian.htmlFilters[e]) {
                                                var m = 0
                                                  , n = Travian.htmlFilters[e].match(/_\?_/g);
                                                n && (m = n.length);
                                                h.injectable = Travian.htmlFilters[e];
                                                for (a = 0; a < m; a++) {
                                                    h.injectable = h.injectable.replace("_?_", (g[a] || "").trim())
                                                }
                                            } else {
                                                "object" == typeof Travian.htmlFilters[e] && Travian.htmlFilters[e].tag && (m = Travian.htmlFilters[e].tag,
                                                h.injectable = "<" + m + ">{{" + g[0] + "}}</" + m + ">")
                                            }
                                        }
                                        l.push(h)
                                    })
                                }
                            });
                            $.each(l, function(a, b) {
                                f = f.replace(b.replaceable, b.injectable)
                            })
                        }
                        p && (f = f.slice(0, p));
                        b.html(f);
                        m = c.$new();
                        a(b.contents())(m)
                    }
                }
            }
            var h = b.text()
              , m = null
              , l = []
              , p = 0;
            "data"in f && "" != f.data && l.push("data");
            "options"in f && l.push("options");
            "limit"in f && (p = +f.limit);
            0 < l.length ? multiObserve(f, l, g) : g();
            c.$on("newTranslation", g);
            c.$on("$destroy", function() {
                null !== m && m.$destroy();
                b.remove()
            })
        }
    }
}
;
Travian.Directive.translate.$inject = ["$compile"];
Travian.Directive.userTextParse = function(a) {
    var c = {
        decorations: {
            tags: [{
                start: "[b]",
                end: "[/b]",
                param: "font-weight: bold"
            }, {
                start: "[i]",
                end: "[/i]",
                param: "font-style: italic"
            }, {
                start: "[u]",
                end: "[/u]",
                param: "text-decoration: underline"
            }, {
                start: "[s]",
                end: "[/s]",
                param: "text-decoration: line-through"
            }, {
                start: "[h]",
                end: "[/h]",
                param: "color: red"
            }],
            replace: function(a, c, g, e) {
                return '<span style="' + e + '">' + a + "</span>"
            }
        },
        linkings: {
            tags: [{
                start: "[player:",
                end: "]",
                param: "player"
            }, {
                start: "[village:",
                end: "]",
                param: "village"
            }, {
                start: "[cell:",
                end: "]",
                param: "village"
            }, {
                start: "[kingdom:",
                end: "]",
                param: "kingdom"
            }],
            replace: function(a, c, g, e) {
                g = c = "";
                if (isNaN(a)) {
                    if (0 < a.indexOf('"')) {
                        return !1
                    }
                    c = a
                } else {
                    g = a
                }
                return "<" + e + "-link " + e + 'id="' + g + '" ' + e + 'name="' + c + '"  showmissinglink></' + e + "-link>"
            }
        },
        reports: {
            tags: [{
                start: "[report:",
                end: "]"
            }],
            replace: function(a, c, g) {
                c = a.replace(/[^a-fx0-9]/g, "");
                if (a != c) {
                    return !1
                }
                if (33 > c.length) {
                    a = c.slice(0, -7);
                    var e = Report.COLLECTION_PERSONAL
                      , h = c.slice(-7, -5)
                } else {
                    a = c.slice(0, -9),
                    e = Report.ALL_COLLECTIONS[parseInt(c.slice(-9, -7))],
                    h = c.slice(-7, -5)
                }
                c = c.slice(-5);
                return '<i class="reportIcon reportTypes_reportIcon' + parseInt(h) + "_flat colorIcon draggableReport\" clickable=\"openWindow('reportSingle', {'tab': '" + e + "','reportId': '" + a + "', 'collection': '" + e + "', 'reportToken': '" + c + "'}, null, true)\" draggable=\"{link: '[report:" + a + h + c + "]'" + (g.roomId ? ", source:'" + g.roomId + "'" : "") + '}"tooltip tooltip-translate="Chat.ReportIcon.Tooltip"></i>'
            }
        },
        medals: {
            tags: [{
                start: "[medal:",
                end: "]"
            }],
            replace: function(a) {
                a = a.split("|");
                if (4 != a.length) {
                    return !1
                }
                for (var c = 0; c < a.length; c++) {
                    if (!a[c] || isNaN(a[c])) {
                        return !1
                    }
                }
                return '<medal-image type="' + a[1] + '" rank="' + a[2] + '" week="' + a[3] + '"></medal-image>'
            }
        },
        achievements: {
            tags: [{
                start: "[achievement:",
                end: "]"
            }],
            replace: function(a) {
                a = a.split("|");
                if (2 != a.length) {
                    return !1
                }
                for (var c = 0; c < a.length; c++) {
                    if (!a[c] || isNaN(a[c])) {
                        return !1
                    }
                }
                return '<achievement-image player-id="' + a[0] + '" id="' + a[1] + '"></achievement-image>'
            }
        },
        coordinates: {
            tags: [{
                start: "(",
                end: ")"
            }],
            replace: function(a) {
                if (0 > a.indexOf("|")) {
                    return !1
                }
                a = a.replace(/[^0-9\.|-]+/gi, "");
                a = a.split("|");
                return 2 != a.length || isNaN(a[0]) || isNaN(a[1]) || "" == a[0] || "" == a[1] || !Ra(a[0], a[1]) ? !1 : '<coordinates x="' + a[0] + '" y="' + a[1] + '"></coordinates>'
            }
        }
    };
    return {
        restrict: "A",
        link: function(b, f, g) {
            function e() {
                var a = b.$eval(g.userTextParse);
                if ("undefined" == typeof a || null == a) {
                    a = ""
                }
                a = escapeHtmlTags("" + a);
                a = a.replace(/\n/g, "<br/>");
                a = a.replace(/{/g, "\u200b{");
                h(a)
            }
            function h(e) {
                function h() {}
                function n() {
                    r = -1;
                    w = {};
                    for (var a = 0; a < m.length; a++) {
                        var b = c[m[a]];
                        if (b) {
                            for (var f = 0; f < b.tags.length; f++) {
                                var g = e.indexOf(b.tags[f].start, t);
                                0 > g || (!(0 < e.indexOf(b.tags[f].end, g)) || 0 <= r && g >= r) || (r = g,
                                w = b.tags[f],
                                h = b.replace)
                            }
                        }
                    }
                }
                var q = ""
                  , r = 0
                  , t = 0
                  , u = 0
                  , w = {};
                do {
                    n(),
                    0 <= r && (t = e.indexOf(w.end, r) + 1,
                    0 < t && (u != r && (q += e.substring(u, r)),
                    (u = h(e.substring(r + w.start.length, t - 1), b, g, w.param)) ? (q += u,
                    t += w.end.length - 1) : (q += w.start,
                    t = r + w.start.length),
                    u = t))
                } while (0 <= r && 0 < t);
                q += e.substring(u);
                f.html(q);
                q = b.$new();
                a(f.contents())(q)
            }
            var m = [];
            g.parse && (m = g.parse.split(";"));
            b.$watch(g.userTextParse, e);
            e()
        }
    }
}
;
Travian.Directive.userTextParse.$inject = ["$compile"];
Travian.Directive.warning = function() {
    return {
        transclude: !0,
        replace: !0,
        restrict: "E",
        scope: {
            baseKey: "@",
            any: "="
        },
        template: '<div ng-show="any" class="dialogWarning"><div class="warningHeader"><i class="symbol_warning_tiny_flat_white"></i><span translate>Warning</span></div><div class="warningContent" ng-class="{single:warnings.length == 1}"><ul><li ng-repeat="w in warnings track by $index" options="{{baseKey + w.key}}" data="{{w.data}}" translate>?</li></ul></div></div>',
        link: function(a, c, b) {
            function f() {
                a.warnings = g.concat(e);
                a.any = 0 < a.warnings.length
            }
            var g = [];
            b.keys && b.$observe("keys", function(a) {
                if (a) {
                    g = [];
                    a = a.split(",");
                    for (var b = 0; b < a.length; b++) {
                        var c = a[b].split(":");
                        if (1 < c.length && "true" == c[1]) {
                            var e = {
                                key: c[0]
                            };
                            if (3 < c.length) {
                                for (e.data = c[2],
                                b = 3; b < c.length; b++) {
                                    e.data += (b % 2 ? ":" : ",") + c[b]
                                }
                            }
                            g.push(e)
                        }
                    }
                    f()
                }
            });
            var e = [];
            if (b.content) {
                var h = a.$parent.$watch(b.content, function(a) {
                    if (a && "object" == typeof a) {
                        e = [];
                        var b = function(a) {
                            var b = {
                                key: a.key || a.text || a
                            };
                            a.param ? b.data = "param:" + a.param : a.params && (b.data = JSON.stringify(a.params).replace(/[\{"\}]/g, ""));
                            e.push(b)
                        };
                        if (angular.isArray(a)) {
                            for (var c = 0; c < a.length; c++) {
                                b(a[c])
                            }
                        } else {
                            b(a)
                        }
                        f()
                    }
                }, !0);
                a.$on("$destroy", function() {
                    h()
                })
            }
        }
    }
}
;
Travian.Directive.window = function(a, c, b, f, g) {
    function e(a) {
        function b(a) {
            "function" == typeof a ? a() : a.cacheObj.unsubscribe(a.idx)
        }
        a.windowParams = a.w.params;
        a.windowName = a.w.name;
        a.tabConfig = {};
        a.getParam = function(b, e, f) {
            e || (a.w.parametersToRemove[b] = !0);
            e = c.getParam(b);
            /^(-|\+)?\d+$/.test(e) && 20 > e.length && (e = parseInt(e));
            return a.windowParams && a.windowParams[b] ? (e || (0 == e || f) || c.o(b, a.windowParams[b]),
            "undefined" != typeof e ? e : a.windowParams[b]) : e
        }
        ;
        a.o = function(b, e) {
            a.windowParams = a.windowParams || {};
            b && "undefined" != typeof e && (a.windowParams[b] = e,
            c.o(b, e))
        }
        ;
        a.l = function(b) {
            a.windowParams = a.windowParams || {};
            delete a.windowParams[b];
            c.l(b)
        }
        ;
        a.Ej = function(b) {
            a.$broadcast("openDropdown", b)
        }
        ;
        a.handleError = function(b, c) {
            a.Ue(c);
            if ("undefined" != typeof b.errors) {
                if (isNaN(b.errors[0].params)) {
                    var e = {}, f;
                    for (f in b.errors[0].params) {
                        e[f] = b.errors[0].params[f]
                    }
                } else {
                    var e = {
                        param: b.errors[0].params
                    }
                }
                a[c || "error"] = Travian.translate("Error." + b.errors[0].message, e);
                delete b.errors;
                return !1
            }
            return !0
        }
        ;
        a.Ue = function(b) {
            a[b || "error"] = ""
        }
        ;
        var e = [];
        a.subscribe = function(a, c) {
            var f = e.push({
                idx: a.subscribe(c),
                cacheObj: a
            });
            return function() {
                var a = e.splice(f - 1, 1)[0];
                b(a)
            }
        }
        ;
        a.ja = function(a, c) {
            var f = e.push(Cache.ja(a, c));
            return function() {
                var a = e.splice(f - 1, 1)[0];
                b(a)
            }
        }
        ;
        a.$on("$destroy", function() {
            for (var a = 0; a < e.length; a++) {
                b(e[a])
            }
            e = []
        });
        a.$on("forceWindowRerender", function() {
            window.setTimeout(function() {
                element[0].style.display = "none";
                element[0].style.display = "block"
            }, 100)
        })
    }
    function h(a, b) {
        function c(f) {
            e.some(function(c) {
                if ((c = b[0].querySelector(c)) && !c.draggable && !c.className.match(/( |^)static( |$)/)) {
                    a.$on("$destroy", z.Gd(c, g, h, {}, b[0], !1, f));
                    var e = y()
                      , g = function() {
                        a.$broadcast("windowDragged");
                        e = z.D("move", function() {
                            a.$broadcast("windowDragged")
                        })
                    }
                      , h = function() {
                        e();
                        return !0
                    };
                    return !0
                }
            })
        }
        z.V(b[0], function() {
            l(a, b)
        });
        for (var e = [".contentHeader h2", ".modalDecoration", ".draggableHeader"], f = 0; f < e.length; f++) {
            var g = $(e[f]);
            0 < g.length && z.V(g[0], c)
        }
        c("window" + a.w.name)
    }
    function m(a, b) {
        function c() {
            var a = Date.now();
            s = s || a;
            setTimeout(function() {
                var a = Date.now();
                (Travian.pendingRequests.Re() || 100 > a - u) && 2E3 > a - s ? c() : (g(e),
                w.disconnect())
            }, Math.max(10, 100 - (a - u)))
        }
        function e() {
            h(a, b);
            m();
            $(window).on("resize", m);
            $(".windowLoading").hide();
            b[0].style.opacity = 1;
            a.w.ready = !0
        }
        function m() {
            var c = z.Vh(b)
              , e = Math.max(10, Math.min(c[0] * dirVal(), window.innerWidth - b[0].offsetWidth - 10)) * dirVal()
              , f = Math.max(10, Math.min(c[1], window.innerHeight - b[0].offsetHeight - 10));
            if (c[0] != e || c[1] != f) {
                c[0] = e,
                c[1] = f,
                b.css("transform", "translate3d(" + c.join("px, ") + "px)")
            }
            a.w.maxWindowHeight = window.innerHeight - b[0].getBoundingClientRect().top - 120;
            a.w.params.modalParams.maxHeight && (a.w.windowHeight = a.w.maxWindowHeight)
        }
        l(a, b);
        a.windowParams.modalParams.noLoadingSpinner || $(".windowLoading").show();
        (a.windowParams.modalParams.modal || a.windowParams.modal) && $("#modalWindowBlocker").css({
            display: "block",
            zIndex: b.css("zIndex") - 1
        });
        var u = Date.now()
          , w = new MutationObserver(function(a) {
            a.forEach(function() {
                u = Date.now()
            })
        }
        )
          , s = 0;
        setTimeout(function() {
            f(b.contents())(a);
            w.observe(b[0], {
                attributes: !0,
                childList: !0,
                subtree: !0
            });
            if (!b.css("transform") && !a.windowParams.modalParams.noPosition || a.windowParams.modalParams.resetPosition) {
                var e = [0, 0, 0];
                e[0] = Math.round(Math.max(10, ($(window).width() - b[0].offsetWidth) / 2) * dirVal());
                e[1] = Math.round(Math.max(10, Math.min(125, ($(window).height() - b[0].offsetHeight) / 2)));
                b.css("transform", "translate3d(" + e.join("px, ") + "px)")
            }
            c()
        });
        a.$on("$destroy", function() {
            if (a.windowParams.modalParams.modal || a.windowParams.modal) {
                var c = !1;
                angular.forEach(a.windows, function(a) {
                    if (a.params.modalParams.modal || a.params.modal) {
                        c = a
                    }
                });
                c ? $("#modalWindowBlocker").css("zIndex", $("window." + c.name).css("zIndex") - 1) : $("#modalWindowBlocker").hide()
            }
            z.s(b[0]);
            $(window).off("resize", m)
        })
    }
    function l(b, c) {
        b.windowParams = b.w.params;
        c[0].style.zIndex = b.windowParams.modalParams && b.windowParams.modalParams.zIndex ? b.windowParams.modalParams.zIndex : a.tf(c[0].style.zIndex);
        a.Wi(b.w.name) && b.w.params.modalParams.setFocusWhenActive && c.find("input").first().focus()
    }
    return {
        restrict: "E",
        scope: !0,
        replace: !0,
        link: function(a, c) {
            var f = b.get(a.w.border)
              , g = b.get(a.w.inner);
            "string" != typeof g && a.closeWindow(a.w.params.modalParams.windowName);
            f = f.replace("%REPLACE_WITH_INNER_TEMPLATE%", g);
            c[0].innerHTML = f;
            e(a);
            m(a, c)
        }
    }
}
;
Travian.Directive.window.$inject = ["WindowService", "RoutingService", "$templateCache", "$compile", "$timeout"];
Travian.Directive.windowBottomDock = function() {
    return {
        restrict: "A",
        link: function(a, c) {
            var b = c.closest(".modalContent");
            b.addClass("hasBottomDock");
            c.hasClass("bars") ? b.addClass("queueWithBars") : b.addClass("queueWithThumbs");
            c.bind("$destroy", function() {
                b.removeClass("hasBottomDock");
                b.removeClass("queueWithBars");
                b.removeClass("queueWithThumbs")
            })
        }
    }
}
;
Travian.Directive.windowOverlay = function(a, c, b, f) {
    function g() {
        this.defaultConfig = {
            routeNamedParam: "overlay",
            overlayName: "",
            inWindowPopupTemplate: "tpl/mainlayout/modals/partials/inWindowPopup.html",
            inWindowPopupTitle: "",
            inWindowPopupContentTemplate: "",
            isAWarning: !1
        };
        this.k = function(a) {
            $.extend(this, a)
        }
        ;
        this.ed = function(a) {
            if ("undefined" != typeof a) {
                var b = {};
                b[a] = this.defaultConfig[a];
                this.k(b)
            } else {
                this.k(this.defaultConfig)
            }
        }
        ;
        this.ed()
    }
    return {
        restrict: "EA",
        template: c.get("tpl/mainlayout/modals/partials/windowOverlay.html"),
        scope: !0,
        link: function(a, c) {
            function m() {
                a.$parent.overlayConfig.k({
                    overlayName: a.getParam(a.$parent.overlayConfig.routeNamedParam)
                });
                a.overlayController = window[a.getParam(a.$parent.overlayConfig.routeNamedParam) + "Ctrl"];
                a.$parent.inWindowPopupOpened = !0
            }
            function l(b) {
                if (b && b != a.overlayMaxScrollHeight && p) {
                    var c = $(".inWindowPopup", p);
                    if (0 != c.length) {
                        var c = c.height() - $(".inWindowPopupContent", p).height()
                          , f = p.outerHeight() - p.height();
                        a.overlayMaxScrollHeight = Math.max(150, b - c - f);
                        a.$broadcast("scrollbarApi", "handleResize")
                    }
                }
            }
            a.$parent.overlayConfig = new g;
            a.$parent.overlayConfig.routeNamedParam = "overlay" + a.w.name;
            var p = null
              , n = null;
            a.$parent.openOverlay = function(b, c) {
                var f = a.getParam(a.$parent.overlayConfig.routeNamedParam);
                a.$parent.inWindowPopupOpened && f != b && a.closeOverlay();
                a.o(a.$parent.overlayConfig.routeNamedParam, b);
                "undefined" != typeof c && $.each(c, function(b, c) {
                    a.o(b, c)
                });
                a.overlayMaxScrollHeight = 0
            }
            ;
            a.$parent.closeOverlay = function() {
                a.l(a.$parent.overlayConfig.routeNamedParam);
                a.$parent.inWindowPopupOpened = !1;
                a.$parent.overlayConfig = new g;
                a.$parent.overlayConfig.routeNamedParam = "overlay" + a.w.name;
                n = p = a.overlayController = null;
                a.$emit("requestDynamicHeightUpdate")
            }
            ;
            var q = null
              , r = null
              , t = a.$on("$includeContentLoaded", function() {
                a.$parent.inWindowPopupOpened && (f.cancel(q),
                q = f(function() {
                    n && 0 != n.length || (p = $(".windowOverlay", c),
                    0 < p.length ? n = $(".inWindowPopup", p) : p = null);
                    var b = $(".scrollContent", c);
                    0 < b.length && (l(a.w.maxWindowHeight),
                    r && r(),
                    r = a.$watch("w.maxWindowHeight", function(a) {
                        l(a, b.outerHeight())
                    }))
                }, 100))
            })
              , u = 0;
            a.w.getOverlayHeightWithPadding = function(b) {
                if (!a.$parent.inWindowPopupOpened || !p) {
                    return "none"
                }
                var f = c[0].querySelector(".inWindowPopup");
                if (null == f) {
                    return "none"
                }
                if (a.w.fixedOverlayHeight) {
                    return u
                }
                u = f.offsetHeight;
                f = parseInt(p.css("paddingTop")) - 5;
                return u = u + f + (b || 0) + "px"
            }
            ;
            a.$on("urlChanged", function(b, c) {
                a.w.isActiveWindow && (c[a.$parent.overlayConfig.routeNamedParam] && "undefined" != typeof a.getParam(a.$parent.overlayConfig.routeNamedParam) && !c.window) && m()
            });
            b.m(function() {
                "undefined" != typeof a.getParam(a.$parent.overlayConfig.routeNamedParam) && m()
            });
            a.$on("$destroy", function() {
                a.l(a.$parent.overlayConfig.routeNamedParam);
                t()
            })
        }
    }
}
;
Travian.Directive.windowOverlay.$inject = ["RoutingService", "$templateCache", "SessionService", "$timeout"];
Travian.Directive.attributeInput = function() {
    return {
        replace: !0,
        restrict: "EA",
        templateUrl: "tpl/hero/partials/attributeInput.html",
        scope: {
            value: "=",
            change: "=",
            freePoints: "=",
            name: "@",
            max: "@",
            callback: "&"
        },
        link: function(a, c) {
            function b() {
                a.total = parseInt(a.value) + parseInt(a.change)
            }
            a.total = 0;
            c.bind("blur", function() {
                a.total = parseInt(a.total);
                a.total != parseInt(a.value) + parseInt(a.change) && "function" == typeof a.callback && a.callback({
                    name: a.name,
                    total: a.total
                });
                b()
            });
            a.$watch("value", b);
            a.$watch("change", b)
        }
    }
}
;
Travian.Directive.attributeInput.$inject = [];
Travian.Directive.heroImageFile = function() {
    return {
        restrict: "E",
        template: '<img ng-src="{{cdnPrefix}}layout/{{imageFolder}}/heroAvatar/{{file}}.png">',
        replace: !0,
        scope: {
            file: "@"
        },
        link: function(a, c) {
            var b = $(c);
            a.cdnPrefix = Travian.Config.cdnPrefix;
            a.imageFolder = "images";
            "rtl" == getDirection() && (a.imageFolder = "images_rtl");
            Travian.Config.specialRules.halloween && (a.imageFolder += "/halloween");
            a.$watch("file", function() {
                b.hide();
                setTimeout(function() {
                    b.show()
                })
            })
        }
    }
}
;
Travian.Directive.heroImageFile.$inject = [];
Travian.Directive.heroItemContainer = function(a, c) {
    return {
        restrict: "E",
        templateUrl: "tpl/hero/partials/heroItemContainer.html",
        scope: {
            itemObject: "=item",
            useDifferentImage: "=?differentItemImage",
            dragObject: "=?dragObj",
            highlightObject: "=?highlightObj",
            clickHandler: "=?clickCallback",
            tooltipCond: "=?tooltipCondition",
            nextUpgradeCond: "=?displayNextUpgrade",
            hideStates: "=?hideItemStates",
            hideAmountContainer: "=?hideAmount",
            hideUpgradeContainer: "=?hideUpgrade",
            hideEquippedState: "=?hideEquipped",
            highlighted: "&highlighted",
            ownerGender: "=?gender"
        },
        priority: 999,
        compile: function(b, f) {
            var g = angular.element(b[0].querySelector(".entityBox"));
            f.dragObj || (g.removeClass("draggableItem"),
            g.removeClass("draggable"),
            g.removeAttr("draggable"),
            g.removeAttr("dropable"),
            g.removeAttr("on-drag-init"),
            g.removeAttr("on-drag-stop"),
            g.removeAttr("disable-touch-drag"));
            f.clickCallback || (g.addClass("noClick"),
            g.removeAttr("clickable"));
            f.highlightObj || (g.removeAttr("on-pointer-over"),
            g.removeAttr("on-pointer-out"));
            return {
                post: function(b) {
                    function f() {
                        b.showTooltip = !0;
                        "undefined" === typeof b.tooltipCond || null == b.tooltipCond ? "undefined" !== typeof b.itemObject && null != b.itemObject && "undefined" !== typeof b.itemObject.data && b.itemObject.filled || (b.showTooltip = !1) : b.showTooltip = b.tooltipCond;
                        b.itemObject && b.itemObject.data && (!Travian.Player.isOnMap() && 0 <= HeroItem.DISABLED_DURING_TUTORIAL.indexOf(b.itemObject.data.itemType) ? b.$broadcast("tooltipOverwrite", "Tutorial.Tooltip.ButtonDisabled") : 0 <= HeroItem.DISABLED_FOR_SITTERS_AND_DUALS.indexOf(b.itemObject.data.itemType) && (a.K() ? b.$broadcast("tooltipOverwrite", "Sitter.Tooltip.Disabled") : a.Ia() && b.$broadcast("tooltipOverwrite", "Dual.Tooltip.Disabled")))
                    }
                    b.showNextUpgrade = "undefined" === typeof b.nextUpgradeCond || null == b.nextUpgradeCond ? !1 : b.nextUpgradeCond;
                    b.itemImageIndex = "undefined" === typeof b.useDifferentImage || null == b.useDifferentImage ? 0 : b.useDifferentImage;
                    b.heroItem = HeroItem;
                    b.avatar = null;
                    b.showTooltip = !0;
                    b.ownerGender || (b.heroFace = HeroFace.get(a.getPlayerId()));
                    b.getItem = function() {
                        return b.itemObject
                    }
                    ;
                    b.isDisabled = function() {
                        return b.itemObject ? !b.hideStates && (b.itemObject.data.clickDisabled || !Travian.Player.isOnMap() && 0 <= HeroItem.DISABLED_DURING_TUTORIAL.indexOf(b.itemObject.data.itemType) || Travian.Player.isOnVacation() && 0 <= HeroItem.DISABLED_ON_VACATION.indexOf(b.itemObject.data.itemType) || !a.Pb() && 0 <= HeroItem.DISABLED_FOR_SITTERS_AND_DUALS.indexOf(b.itemObject.data.itemType)) : !1
                    }
                    ;
                    b.$watch("itemObject", f);
                    f();
                    b.onPointerOverHandler = function() {
                        if (b.itemObject) {
                            var a = b.itemObject.data.slot;
                            b.itemObject.data.itemType == HeroItem.TYPE_OINTMENT && (a = HeroItem.SLOT_BAG);
                            void 0 != b.highlightObject && b.highlightObject.turnOn(a)
                        }
                    }
                    ;
                    c(g)(b);
                    b.$on("destroy", function() {
                        "undefined" !== typeof subscribeIdx && null != subscribeIdx && heroFace.unsubscribe(subscribeIdx)
                    })
                }
            }
        }
    }
}
;
Travian.Directive.heroItemContainer.$inject = ["SessionService", "$compile"];
Travian.Directive.itemDescription = function(a, c) {
    return {
        template: a.get("tpl/hero/partials/itemDescriptionDirective.html"),
        replace: !0,
        link: function(a, f, g) {
            function e() {
                var c = {}
                  , e = null
                  , f = null
                  , n = {};
                a.id = g.itemDescription;
                a.hideInfo = !1;
                if ("true" == g.hideInfo) {
                    a.hideInfo = !0
                } else {
                    "true" === a.nextUpgradeLevel ? a.nextUpgradeLevel = !0 : "false" !== a.nextUpgradeLevel && a.nextUpgradeLevel || (a.nextUpgradeLevel = !1);
                    if ("auctionItem"in g && "false" != g.auctionItem && g.auctionItem) {
                        for (var q = ["running", "highestBidder", "bidden"], r = 0; r < q.length; r++) {
                            for (var f = Auction.getCollection(q[r]), t = 0; t < f.data.length; t++) {
                                if (a.id == f.data[t].data.id) {
                                    e = f.data[t].data;
                                    c = JSON.parse(JSON.stringify(e.bonuses));
                                    a.itemType = e.itemTypeId;
                                    break
                                }
                            }
                            if (null != e) {
                                break
                            }
                        }
                    } else {
                        for (var f = HeroItem.getCollection("own"), q = [], r = 0; r < f.data.length; r++) {
                            0 < f.data[r].data.inSlot && (q[f.data[r].data.inSlot] = f.data[r])
                        }
                        for (r = 0; r < f.data.length; r++) {
                            if (f.data[r].data.id == a.id) {
                                f.data[r].setUseInfos(h, q);
                                e = f.data[r].data;
                                c = JSON.parse(JSON.stringify(e.bonuses));
                                a.itemType = e.itemType;
                                n.level = e.upgradeLevel;
                                a.nextUpgradeLevel && (e.slot > HeroItem.SLOT_INVENTORY && e.slot < HeroItem.SLOT_BAG && (n.level += 1),
                                HeroItem.ITEM_IMPROVEMENTS[a.itemType] && (c[HeroItem.BONUS_RESOURCES] && (c[HeroItem.BONUS_RESOURCES] += HeroItem.ITEM_IMPROVEMENTS[a.itemType].bonus),
                                c[HeroItem.BONUS_CROP] && (c[HeroItem.BONUS_CROP] += HeroItem.ITEM_IMPROVEMENTS[a.itemType].bonus),
                                a.itemType = HeroItem.ITEM_IMPROVEMENTS[a.itemType].id));
                                0 < n.level && (n.type = Object.keys(e.baseUpgradeBonus)[0],
                                n.maxUpgrades = Travian.Config.heroItems.maxUpgrades,
                                a.nextUpgradeLevel && (c[n.type] = "undefined" == typeof c[n.type] ? e.baseUpgradeBonus[n.type] : c[n.type] + e.baseUpgradeBonus[n.type]),
                                n.value = e.baseUpgradeBonus[n.type] * n.level,
                                n.slot = e.slot);
                                break
                            }
                        }
                    }
                    if (null != e) {
                        c.hasOwnProperty(HeroItem.BONUS_UNIT_ID) && (f = nrToUnitId(c[HeroItem.BONUS_UNIT_ID], e.tribeId),
                        a.unitName = Travian.translate("Troop_" + f),
                        a.bonusUnitStrength = c[HeroItem.BONUS_UNIT_STRENGTH],
                        delete c[HeroItem.BONUS_UNIT_ID],
                        delete c[HeroItem.BONUS_UNIT_STRENGTH]);
                        c.hasOwnProperty(HeroItem.BONUS_TROOP_HEALING) && delete c[HeroItem.BONUS_TROOP_HEALING];
                        c.hasOwnProperty(HeroItem.BONUS_POTION) && delete c[HeroItem.BONUS_POTION];
                        $.each(["BONUS_SPEED_HERO", "BONUS_SPEED_HORSE"], function(a, b) {
                            c.hasOwnProperty(HeroItem[b]) && (c[HeroItem[b]] *= Travian.Config.TG_TROOP_SPEED)
                        });
                        a.instantUse = e.slot == HeroItem.SLOT_INSTANT_USE;
                        a.consumable = (e.slot == HeroItem.SLOT_INSTANT_USE || e.slot == HeroItem.SLOT_BAG) && !e.cardGameItem;
                        a.perDay = {
                            max: e.maxPerDay,
                            used: e.usedPerDay,
                            maxWithoutLock: e.maxPerDayWithoutLock
                        };
                        a.bonuses = c;
                        a.hasBonuses = !1;
                        for (var u in c) {
                            a.hasBonuses = !0
                        }
                        a.upgradeBonus = n
                    }
                }
            }
            var h = Hero.get(c.getPlayerId());
            a.heroItem = HeroItem;
            !g.itemDescription && g.itemType ? (a.itemType = g.itemType,
            a.instantUse = Travian.Config.heroItems[a.itemType].slot == HeroItem.SLOT_INSTANT_USE) : g.$observe("itemDescription", function() {
                a.unitName = null;
                a.bonusUnitStrength = null;
                e()
            })
        }
    }
}
;
Travian.Directive.itemDescription.$inject = ["$templateCache", "SessionService"];
Travian.Directive.itemFilter = function(a) {
    return {
        restrict: "E",
        template: a.get("tpl/hero/partials/itemFilter.html"),
        scope: !0,
        link: function(a, b, f) {
            a.itemFilter = function(b) {
                a[f.func](b)
            }
            ;
            a.types = ["Slot1", "Slot4", "Slot3", "Slot2", "Slot5", "Slot6", HeroItem.TYPE_OINTMENT, HeroItem.TYPE_SCROLLS, HeroItem.TYPE_WATERBUCKET, HeroItem.TYPE_BOOK, HeroItem.TYPE_ARTWORK, HeroItem.TYPE_BANDAGE_25, HeroItem.TYPE_BANDAGE_33, HeroItem.TYPE_CAGES];
            a.iconNames = HeroItem.IconName
        }
    }
}
;
Travian.Directive.itemFilter.$inject = ["$templateCache"];
Travian.Directive.itemIcon = function() {
    return {
        restrict: "E",
        template: '<i class="heroItem" tooltip tooltip-url="tpl/hero/partials/itemTooltip.html" tooltip-data="id:{{id}},itemType:{{itemType}},auctionitem:{{auctionItem}},hideInfo:{{!auctionItem}}"></i>',
        replace: !0,
        scope: !0,
        link: function(a, c, b) {
            a.auctionItem = "auctionitem"in b ? !0 : !1;
            a.itemType = b.itemType;
            a.id = "auctionId"in b ? b.auctionId : b.itemType;
            b = a.itemType;
            a = Travian.Config.heroItems[a.itemType];
            a.cg && (b = "cardGame");
            a = a.slot;
            b = "undefined" != typeof HeroItem.IconName[b] ? "heroItem item_category_" + HeroItem.IconName[b] + "_small_flat_black" : "heroItem item_category_" + HeroItem.IconName["Slot" + a] + "_small_flat_black";
            $(c).addClass(b)
        }
    }
}
;
Travian.Directive.itemIcon.$inject = [];
Travian.Directive.buildingQuicklinks = function(a, c, b) {
    return {
        replace: !0,
        restrict: "EA",
        template: function(a, c) {
            return "undefined" != typeof c.showActive ? b.get("tpl/villagesOverview/partials/activeBuildings.html") : b.get("tpl/mainlayout/partials/buildingQuicklinks.html")
        },
        link: function(b, g, e) {
            function h() {
                var a = {
                    buildingType: Building.TYPE.MARKET,
                    locationId: 0,
                    state: "disabled",
                    queue: null
                };
                c.S("type" + Building.TYPE.MARKET, function(b) {
                    null != b && (a.locationId = b.data.locationId,
                    a.state = "normal",
                    0 < q.data.inTransport || 0 < q.data.inOffers) && (a.state = "active")
                }, e.villageId);
                b.merchants = q;
                b.market = a
            }
            function m() {
                for (var a = 0; a < b.unitBuilding.length; a++) {
                    b.unitBuilding[a].locationId = 0;
                    b.unitBuilding[a].state = "disabled";
                    for (var c = 0; c < b.unitBuilding[a].data.length; c++) {
                        var e = b.unitBuilding[a].data[c].buildingType;
                        b.unitBuilding[a].data[c].queue = null;
                        for (var g = 0; g < n.data.length; g++) {
                            var h = n.data[g].data;
                            if (!n.data[g].isRubble() && h.buildingType == e) {
                                if (0 == b.unitBuilding[a].locationId || e == b.unitBuilding[a].mainType) {
                                    b.unitBuilding[a].locationId = h.locationId,
                                    b.unitBuilding[a].state = "normal"
                                }
                                e = r.data.buildingTypes[h.buildingType];
                                "undefined" != typeof e && (0 < e.length && 0 >= e[0].pause) && (b.unitBuilding[a].state = "active",
                                b.unitBuilding[a].data[c].queue = e,
                                b.unitBuilding[a].data[c].lastFinished = e[e.length - 1].timeFinishedLast);
                                break
                            }
                        }
                    }
                }
            }
            function l() {
                var g = a.i();
                e.villageId && (g = a.qa(e.villageId));
                null != g.data.villageId && (p(),
                n = c.aa(g.data.villageId),
                r = UnitQueue.get(g.data.villageId),
                t = n.subscribe(m),
                u = r.subscribe(m),
                b.hideMarketplace || (q = new Merchants.get(g.data.villageId),
                w = q.subscribe(h)))
            }
            function p() {
                t && n.unsubscribe(t);
                u && r.unsubscribe(u);
                w && q.unsubscribe(w)
            }
            var n = null
              , q = null
              , r = null
              , t = null
              , u = null
              , w = null;
            b.unitBuilding = [{
                mainType: Building.TYPE.BARRACKS,
                data: [{
                    buildingType: Building.TYPE.BARRACKS
                }, {
                    buildingType: Building.TYPE.GREAT_BARRACKS
                }]
            }, {
                mainType: Building.TYPE.STABLE,
                data: [{
                    buildingType: Building.TYPE.STABLE
                }, {
                    buildingType: Building.TYPE.GREAT_STABLE
                }]
            }, {
                mainType: Building.TYPE.WORKSHOP,
                data: [{
                    buildingType: Building.TYPE.WORKSHOP
                }]
            }, {
                mainType: Building.TYPE.HEALING_TENT,
                data: [{
                    buildingType: Building.TYPE.HEALING_TENT
                }],
                tooltipType: Building.TYPE.HEALING_TENT
            }];
            b.gotoBuilding = function(c) {
                0 < c && (e.villageId != a.getActiveVillageId() && a.ea(e.villageId),
                b.openWindow("building", {
                    location: c
                }))
            }
            ;
            l();
            e.villageId || b.$on("activeVillageChanged", l);
            b.$on("$destroy", p)
        }
    }
}
;
Travian.Directive.buildingQuicklinks.$inject = ["VillageService", "BuildingService", "$templateCache"];
Travian.Directive.notepad = function(a, c, b) {
    return {
        restrict: "EA",
        scope: !0,
        template: c.get("tpl/mainlayout/notepad.html"),
        replace: !1,
        link: function(c, g) {
            var e = !1;
            c.over = !1;
            c.deleteQuestion = !1;
            z.onPointerOver(g[0], function() {
                c.over = !0;
                requestAngularApply();
                $(m).addClass("hovered")
            });
            z.onPointerOut(g[0], function() {
                c.over = !1;
                requestAngularApply();
                $(m).removeClass("hovered")
            });
            z.Ei(g[0], function() {
                c.deleteQuestion || (c.n.inEditor = !0,
                requestAngularApply())
            });
            var h = z.D("up", function() {
                e && ($(m).removeClass("clicked"),
                e = !1);
                if (c.n.inEditor || c.deleteQuestion) {
                    var a = z.O().q;
                    $(g).find(a).length || g[0] == a || $(a).parents(".autocomplete").length || (c.save(),
                    c.deleteQuestion = !1)
                }
            });
            c.startEdit = function() {
                c.n.inEditor = !0;
                b(function() {
                    $(g).find("textarea").focus();
                    var a = $(g).find("textarea")[0];
                    a.selectionStart ? a.setSelectionRange(0, 0) : a.createTextRange && (a = a.createTextRange(),
                    a.move("character", 0),
                    a.select())
                }, 0)
            }
            ;
            c.askDelete = function() {
                c.deleteQuestion = !0
            }
            ;
            c.save = function() {
                c.n.inEditor = !1;
                c.n.data.text = c.n.editText;
                c.n.persist()
            }
            ;
            c.cancel = function() {
                c.n.inEditor = !1;
                c.deleteQuestion = !1;
                c.n.editText = c.n.data.text
            }
            ;
            c["delete"] = function() {
                c.n["delete"]()
            }
            ;
            c.addNew = function() {
                c.n.requestNewNote()
            }
            ;
            c.resize = function(a) {
                if (c.n.data.sizeX != a.x || c.n.data.sizeY != a.y) {
                    c.n.set({
                        sizeX: a.x,
                        sizeY: a.y
                    }),
                    c.n.persist()
                }
                return !1
            }
            ;
            c.setActive = function() {
                c.n.style.zIndex = a.tf(c.n.style.zIndex)
            }
            ;
            c.setActive();
            var m = g[0].querySelector(".header");
            z.Gd(m, null, function() {
                $(m).removeClass("clicked");
                var a = $("body")[0]
                  , b = g[0].getBoundingClientRect()
                  , e = 100 * (dirVal(b.left, a.scrollWidth - b.left - b.width) / a.scrollWidth);
                c.n.set({
                    positionX: e,
                    positionY: 100 * (b.top / a.scrollHeight)
                });
                c.n.persist();
                return !0
            }, {}, g[0], !1, void 0, function() {
                $(m).addClass("clicked");
                e = !0;
                c.setActive()
            });
            c.$on("$destroy", function() {
                h();
                z.s(g[0])
            })
        }
    }
}
;
Travian.Directive.notepad.$inject = ["WindowService", "$templateCache", "$timeout"];
Travian.Directive.uiHint = function() {
    return {
        restrict: "EA",
        link: function(a, c) {
            a.closeUIHint = function() {
                c.parent().parent().remove()
            }
        }
    }
}
;
Travian.Directive.uiHint.$inject = [];
Travian.Directive.kingdomInvitationList = function(a) {
    return {
        restrict: "E",
        template: a.get("tpl/directive/kingdom/kingdomInvitationList.html"),
        link: function(a) {
            a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
            a.Player = Player
        }
    }
}
;
Travian.Directive.kingdomInvitationList.$inject = ["$templateCache"];
Travian.Directive.heightTransition = function() {
    return {
        restrict: "A",
        link: function(a, c) {
            function b() {
                f.height("auto");
                var a = Math.max(0, Date.now() - e - m);
                a <= h ? (a = g - (g - f.height()) * Math.sqrt(a / h),
                f.height(a),
                l(b)) : f.css("overflow", "visible")
            }
            var f = $(c).find(".heightTransitionContent")
              , g = 0
              , e = 0
              , h = 0
              , m = 0
              , l = window.requestAnimationFrame || function(a) {
                setTimeout(a, 20)
            }
            ;
            a.$on("applyHeightTransition", function(a, c, m) {
                f.css("overflow", "hidden");
                m = m || 100;
                a = Date.now() - e;
                a > h ? (l(b),
                e = Date.now() + m) : e = Date.now();
                100 < a && (g = f.height(),
                f.height(g));
                h = Math.max((c || 200) + m, 300)
            })
        }
    }
}
;
Travian.Directive.resourceFilter = function() {
    return {
        restrict: "EA",
        templateUrl: "tpl/building/marketplace/partials/resourceFilter.html",
        scope: {
            resourceObj: "=",
            onChange: "&",
            deselectable: "@",
            disabledEntry: "=?"
        },
        link: function(a) {
            a.select = function(c) {
                !0 != a.deselectable && "true" != a.deselectable || c != a.resourceObj.type || (c = 0);
                a.resourceObj.type = c;
                a.onChange()
            }
        }
    }
}
;
Travian.Directive.tradeRoute = function(a) {
    return {
        restrict: "E",
        scope: {
            timeCode: "=",
            minutesOffset: "=",
            travelDuration: "=",
            recurrences: "=",
            editable: "@",
            paused: "="
        },
        templateUrl: "tpl/building/marketplace/partials/tradeRoute.html",
        link: function(c, b) {
            function f() {
                for (var a = !1, b = 0; 24 > b; b++) {
                    var e = (b + 24 + x) % 24;
                    c.timeCode & Math.pow(2, b) ? c.startMarkers[e] || (h(e, !0),
                    a = !0) : c.startMarkers[e] && (m(e, !0),
                    a = !0)
                }
                return a
            }
            function g() {
                var a = c.travelDuration * c.recurrences / 3600;
                q = Math.max(0, Math.floor(a));
                c.travelBarWidth = a * r - r / 2 + 1;
                if (!(0 >= q)) {
                    for (var b = a = 0; 24 > b; b++) {
                        if (c.startMarkers[b] || 0 < a) {
                            0 < a && !c.startMarkers[b] && (h(b),
                            a--);
                            for (var e = b + 1; e <= b + q; e++) {
                                if (24 > e) {
                                    c.startMarkers[e] && (m(e),
                                    a++)
                                } else {
                                    if (c.startMarkers[e % 24]) {
                                        m(b);
                                        break
                                    }
                                }
                            }
                            b += q
                        }
                    }
                }
                n()
            }
            function e() {
                c.hourOffsetPercentage = 100 * ((w.timeZoneOffsetSeconds % 3600 / 60 - (c.minutesOffset || 0)) / 60)
            }
            function h(a, e) {
                if (!e) {
                    var f = Math.pow(2, (a + 24 - x) % 24);
                    if (c.timeCode & f) {
                        return
                    }
                    c.timeCode += f
                }
                f = b[0].querySelectorAll(".timeMarker .hour-" + a);
                0 < f.length && (c.startMarkers[a] = !0,
                "false" != c.editable && z.V(f[0], l, a))
            }
            function m(a, e) {
                if (!e) {
                    var f = Math.pow(2, (a + 24 - x) % 24);
                    if (!(c.timeCode & f)) {
                        return
                    }
                    c.timeCode -= f
                }
                f = b[0].querySelectorAll(".timeMarker .hour-" + a);
                0 < f.length && (c.startMarkers[a] = !1,
                z.s(f[0]))
            }
            function l(a) {
                var b = p(a);
                if (b[0] != b[1]) {
                    var e = a
                      , f = z.D("move", function(f) {
                        var g = e
                          , h = b[1]
                          , l = b[0];
                        f = f.start.x - f.current.x;
                        f *= dirVal(1, -1);
                        0 > f && (f += r);
                        f = a - Math.floor(f / r);
                        f = Math.min(h, Math.max(l, f));
                        g != f && (c.startMarkers[g] = !1,
                        c.startMarkers[f] = !0,
                        requestAngularApply());
                        e = f
                    });
                    c.dragging = !0;
                    var g = z.D("up", function() {
                        f();
                        g();
                        c.dragging = !1;
                        a != e && (h(e),
                        m(a),
                        n());
                        requestAngularApply()
                    });
                    requestAngularApply()
                }
            }
            function p(a) {
                for (var b = !1, e = a, f = 0; e < 24 + q; e++) {
                    if (f = 23 <= e ? e - 23 : e + 1,
                    c.startMarkers[f] && f != a) {
                        b = !0;
                        break
                    }
                }
                for (var g = !1, h = a; h > 0 - q; h--) {
                    if (f = 0 >= h ? h + 23 : h - 1,
                    c.startMarkers[f] && f != a) {
                        g = !0;
                        break
                    }
                }
                e = b ? Math.min(23, e - q) : 23;
                h = g ? Math.max(0, h + q) : 0;
                return [h, e]
            }
            function n() {
                var a = 0;
                c.freeSpace = !1;
                for (var b = 0; b < q; b++) {
                    c.startMarkers[23 - b] && (a = b - q)
                }
                for (b = 0; 24 > b; b++) {
                    if (a++,
                    c.startMarkers[b] && (a = 0,
                    b += q),
                    a > q) {
                        c.freeSpace = !0;
                        break
                    }
                }
                requestAngularApply()
            }
            c.freeSpace = !0;
            c.dragging = !1;
            c.startMarkers = [];
            var q = 0
              , r = 0
              , t = a.p()
              , u = null
              , w = Settings.get(t.data.playerId)
              , s = null
              , x = 0;
            c.$watch("timeCode", function() {
                f() && g()
            }, !0);
            c.$watch("recurrences", function(a) {
                isNaN(a) && (c.recurrences = 1);
                g()
            }, !0);
            c.$watch("travelDuration", g, !0);
            c.editable && "false" != c.editable || c.$watch("minutesOffset", e);
            c.addStartMarker = function() {
                for (var a = (new Date(Date.now() + 1E3 * w.timeZoneOffsetSeconds)).getUTCHours(), b = 0; 24 > b; b++) {
                    for (var a = (a + 1) % 24, e = !0, f = -q; f <= q; f++) {
                        var g = (a + f) % 24;
                        0 > g && (g += 24);
                        if (c.startMarkers[g]) {
                            e = !1;
                            break
                        }
                    }
                    if (e) {
                        h(a);
                        n();
                        break
                    }
                }
            }
            ;
            c.removeStartMarker = function(a) {
                m(a);
                n()
            }
            ;
            c.getTimelineOverflowWidth = function() {
                if (0 == c.timeCode) {
                    return 0
                }
                for (var a = 0, b = 24; 0 <= b; b--) {
                    if (c.startMarkers[b]) {
                        a = b;
                        break
                    }
                }
                return Math.max(0, Math.ceil(c.travelBarWidth - (24 - a) * r + r / 2))
            }
            ;
            u = t.subscribe(function() {
                null !== s && w.unsubscribe(s);
                w = Settings.get(t.data.playerId);
                s = w.subscribe(function() {
                    x = Math.me(w.timeZoneOffsetSeconds / 3600);
                    c.editable && "false" != c.editable || e();
                    f()
                })
            });
            c.$evalAsync(function() {
                f();
                r = b[0].querySelector(".timeline").offsetWidth / 24;
                g()
            });
            c.$on("$destroy", function() {
                null !== u && t.unsubscribe(u);
                null !== s && w.unsubscribe(s);
                for (var a = 0; 24 > a; a++) {
                    m(a)
                }
            })
        }
    }
}
;
Travian.Directive.tradeRoute.$inject = ["SessionService"];
Travian.Directive.buildingLink = function() {
    return {
        restrict: "EA",
        template: "<a class=\"buildingLink\" clickable=\"$root.openWindow('building', {'location': 'type{{buildType}}'})\"></a>",
        replace: !0,
        link: function(a, c, b) {
            multiObserve(b, ["buildingType"], function() {
                $(c).html(Travian.translate("Building_" + b.buildingType));
                a.buildType = b.buildingType
            })
        }
    }
}
;
Travian.Directive.kingdomLink = function(a) {
    return {
        restrict: "EA",
        template: '<a ng-class="{disabled: kingdomId <= 0 || nolink}" class="kingdomLink truncated" clickable="$root.openWindow(\'kingdom\', {\'kingdomId\': {{kingdomId}}}, null, true)">{{kingdomName}}</a>',
        replace: !0,
        scope: !0,
        link: function(c, b, f) {
            function g() {
                var h = parseInt(f.kingdomid, 10);
                e = window.setTimeout(g, 1E3);
                Travian.nameService && Travian.nameService.getNameForId(h, function(g) {
                    if (g) {
                        c.kingdomName = g
                    } else {
                        if ("undefined" != typeof f.showmissinglink) {
                            f.nolink || (c.nolink = !0);
                            b.html('<i class="bbCodes_missingLink_small_illu" tooltip tooltip-translate="MissingLink.Kingdom.Tooltip"></i>');
                            a(b.contents())(c);
                            window.clearTimeout(e);
                            return
                        }
                    }
                    null != e && window.clearTimeout(e)
                }, "kingdom")
            }
            c.kingdomName = f.kingdomname || "";
            c.kingdomId = f.kingdomid || 0;
            c.nolink = !1;
            var e = null;
            f.$observe("kingdomid", function(a) {
                a && (c.kingdomId = f.kingdomid,
                "" !== f.kingdomname && "undefined" != typeof f.kingdomname || g())
            });
            f.$observe("kingdomname", function(a) {
                a && (c.kingdomName = a)
            });
            !f.nolink || "true" != f.nolink && !0 !== f.nolink || (c.nolink = !0)
        }
    }
}
;
Travian.Directive.kingdomLink.$inject = ["$compile"];
Travian.Directive.playerLink = function(a, c) {
    return {
        restrict: "EA",
        template: '<a ng-class="{disabled: playerId <= 2 || nolink || deleted}" class="playerLink  truncated" clickable="openPlayerWindow()" tooltip tooltip-show="{{deleted}}" tooltip-translate="Player.AlreadyDeleted">{{playerName}}</a>',
        replace: !0,
        scope: !0,
        link: function(b, f, g) {
            function e() {
                var c = parseInt(g.playerid, 10);
                h = window.setTimeout(e, 1E3);
                Travian.nameService && Travian.nameService.getNameForId(c, function(e) {
                    b.nolink = g.nolink;
                    if (e) {
                        g.nolink || (b.nolink = !1),
                        b.deleted = "deleted" == Travian.nameService.mf(c) ? !0 : !1,
                        b.playerName = e
                    } else {
                        if ("undefined" != typeof g.showmissinglink) {
                            g.nolink || (b.nolink = !0);
                            f.html('<i class="bbCodes_missingLink_small_illu" tooltip tooltip-translate="MissingLink.Player.Tooltip"></i>');
                            a(f.contents())(b);
                            window.clearTimeout(h);
                            return
                        }
                    }
                    null != h && window.clearTimeout(h)
                })
            }
            b.playerName = g.playername || "";
            b.playerId = g.playerid || 0;
            b.nolink = !1;
            b.deleted = !1;
            b.openPlayerWindow = function() {
                c.openWindow("profile", {
                    playerId: b.playerId,
                    profileTab: "playerProfile"
                }, null, !0);
                return !1
            }
            ;
            var h = null;
            g.$observe("playerid", function(a) {
                "" != a && (b.playerId = g.playerid,
                "" == g.playername || void 0 === g.playername ? e() : b.playerName = g.playername)
            });
            g.$observe("playername", function(a) {
                a && (window.clearTimeout(h),
                b.playerId = g.playerid,
                b.playerName = g.playername)
            });
            g.nolink && g.$observe("nolink", function(a) {
                b.nolink = "true" == a || !0 === a ? !0 : !1
            })
        }
    }
}
;
Travian.Directive.playerLink.$inject = ["$compile", "$rootScope"];
Travian.Directive.secretSocietyLink = function() {
    return {
        restrict: "EA",
        template: "<a class=\"secretSocietyLink  truncated\" clickable=\"$root.openWindow('society', {'societyId': {{socId}}, 'tab': 'SecretSociety'})\"></a>",
        replace: !0,
        link: function(a, c, b) {
            multiObserve(b, ["societyid", "societyname"], function() {
                $(c).text(b.societyname);
                a.socId = b.societyid
            })
        }
    }
}
;
Travian.Directive.troopLink = function() {
    return {
        restrict: "EA",
        template: "<a class=\"troopLink\" clickable=\"$root.openOverlay('manual',{'overlaytab': 'Units', 'glossarId':{{tt}}})\"></a>",
        replace: !0,
        link: function(a, c, b) {
            multiObserve(b, ["trooptype"], function() {
                $(c).text(Travian.translate("Troop_" + b.trooptype));
                a.tt = b.trooptype
            })
        }
    }
}
;
Travian.Directive.villageLink = function(a, c) {
    return {
        restrict: "EA",
        template: '<a ng-class="{disabled: villId <= 2 || nolink}" class="villageLink truncated" clickable="$root.openWindow(\'mapCellDetails\', {\'cellId\': {{villId}}}, null, true)"></a>',
        replace: !0,
        scope: !0,
        link: function(a, f, g) {
            function e() {
                var l = parseInt(g.villageid, 0);
                m = window.setTimeout(e, 1E3);
                Travian.nameService && Travian.nameService.getNameForId(l, function(e) {
                    if (e) {
                        h = e
                    } else {
                        if (e = Ma(l),
                        Ra(e.x, e.y)) {
                            h = "[" + e.x + "|" + e.y + "]",
                            "" != g.villagename && "0" != g.villagename && (h = g.villagename)
                        } else {
                            if ("undefined" != typeof g.showmissinglink) {
                                if (a.nolink = g.nolink ? g.noLink : !0,
                                "" != g.villagename && "0" != g.villagename) {
                                    h = g.villagename
                                } else {
                                    f.html('<i class="bbCodes_missingLink_small_illu" tooltip tooltip-translate="MissingLink.Village.Tooltip"></i>');
                                    c(f.contents())(a);
                                    window.clearTimeout(m);
                                    return
                                }
                            } else {
                                "" != g.villagename && "0" != g.villagename && (h = g.villagename)
                            }
                        }
                    }
                    $(f).text(h);
                    a.villId = g.villageid;
                    null != m && window.clearTimeout(m)
                }, "village")
            }
            var h = "";
            a.nolink = !1;
            var m = null;
            g.$observe("villageid", function(a) {
                "" != a && e()
            });
            g.nolink && g.$observe("nolink", function(c) {
                a.nolink = "true" == c || !0 === c ? !0 : !1
            })
        }
    }
}
;
Travian.Directive.villageLink.$inject = ["VillageService", "$compile"];
Travian.Directive.governorRow = function() {
    return {
        restrict: "A",
        templateUrl: "tpl/directive/governorRow.html",
        replace: !0,
        scope: {
            playerId: "@",
            playerName: "@",
            rank: "@",
            points: "@",
            chatUser: "=",
            showDismissGovernorButton: "=",
            callback: "="
        },
        link: function(a) {
            a.isKing = Travian.Player.isKing();
            a.isViceKing = Travian.Player.isViceKing()
        }
    }
}
;
Travian.Directive.governorRow.$inject = [];
Travian.Directive.playerRank = function() {
    return {
        restrict: "A",
        templateUrl: "tpl/directive/playerRank.html",
        replace: !0,
        scope: {
            playerId: "@",
            playerName: "@",
            accountId: "@?",
            rank: "@",
            points: "@",
            chatUser: "=",
            kingdomId: "@?",
            kingdomName: "@?",
            hoverIn: "=?",
            hoverOut: "=?",
            hidePrestige: "=?"
        },
        link: function(a) {
            a.Player = Player
        }
    }
}
;
Travian.Directive.playerRank.$inject = [];
Travian.Directive.playerVillage = function(a, c) {
    return {
        restrict: "A",
        templateUrl: "tpl/directive/playerVillage.html",
        replace: !0,
        scope: {
            village: "=",
            playerId: "=",
            showMeta: "="
        },
        link: function(b) {
            var f = a.i();
            b.playerVillages = [];
            if ("undefined" == typeof b.showMeta || "true" == b.showMeta) {
                b.showMeta = !0
            }
            b.$watch("village", function(a) {
                if (a) {
                    var e = [];
                    b.chatUser = c.tc(b.playerId);
                    b.playerVillages = [];
                    angular.isArray(a) ? e = a : e.push(a);
                    for (a = 0; a < e.length; a++) {
                        var h = e[a];
                        h.distance = Pa(f.data.coordinates, h.data.coordinates);
                        b.playerVillages.push(h)
                    }
                }
            })
        }
    }
}
;
Travian.Directive.playerVillage.$inject = ["VillageService", "ChatService"];
Travian.Directive.premiumFeature = function(a, c, b, f) {
    return {
        restrict: "A",
        priority: -1,
        link: function(g, e, h) {
            function m() {
                if ($(e).hasClass("disabled") || "undefined" !== typeof h.disabled) {
                    return !1
                }
                if (c.hasRight(Session.RIGHT_SPEND_GOLD)) {
                    var a = 0 != g.price && h.confirmGoldUsage;
                    a && "force" != a && (a = Settings.get(Travian.Player.data.playerId),
                    a = s.data.hasVouchers[u] && 0 < s.data.hasVouchers[u] ? !a.hasPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_PREMIUM_USAGE_CONFIRMATION) : !a.hasPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_GOLD_USAGE_CONFIRMATION));
                    if (a) {
                        a = {
                            feature: u,
                            crid: g.getConfirmationRequestId(),
                            skipable: "force" != h.confirmGoldUsage
                        };
                        h.confirmationParams && (a.confirmationParams = h.confirmationParams);
                        if (u == PremiumFeature.FEATURE_NAME_FINISH_NOW || PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION) {
                            a.price = g.price
                        }
                        g.$root.openWindow("confirmGoldUsage", {}, a)
                    } else {
                        l()
                    }
                } else {
                    g.$root.openWindow("notEnoughSitterRights", {})
                }
            }
            function l(a) {
                var c = [u, w];
                (u == PremiumFeature.FEATURE_NAME_FINISH_NOW || PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION) && c.push(g.price);
                r.setData(c, a);
                r.bookFeature();
                b.U(lb)
            }
            function p() {
                if (s && !(h.premiumFeature && !u || h.premiumCallbackParam && !w)) {
                    var b = Travian.Config.PremiumFeatures[u]
                      , c = function(a) {
                        a ? g.price = -1 : "undefined" != typeof h.price ? g.price = parseInt(h.price) : b && b.price && (g.price = b.price);
                        q()
                    };
                    n();
                    if (h.premiumFeature == PremiumFeature.FEATURE_NAME_FINISH_NOW) {
                        if (!g.finishNowQueueType && !g.finishNowBuildingType) {
                            return
                        }
                        var e = function(e) {
                            e = e[0].finished - Travian.ServerTime;
                            if (!(0 >= e)) {
                                if (e > b.timeFree) {
                                    var f = e;
                                    e > b.timeReduced ? (g.price = b.price,
                                    f -= b.timeReduced) : (g.price = b.priceReduced,
                                    f -= b.timeFree);
                                    D = a(c, 1E3 * Math.min(parseInt(f), 10));
                                    s.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] && (g.price = -1)
                                } else {
                                    g.price = 0
                                }
                            }
                        };
                        if (g.finishNowBuildingType) {
                            var l = UnitResearchQueue.get(f.getActiveVillageId())
                              , c = function() {
                                D && (a.cancel(D),
                                D = null);
                                var b = l.data.buildingTypes[g.finishNowBuildingType || w]
                                  , c = f.i().isWWVillage();
                                !b || 0 == b.length || c ? (g.price = s.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] ? -1 : 0,
                                q(!0)) : (e(b),
                                q(!1))
                            };
                            C.push([l, l.subscribe(c)])
                        }
                        if (g.finishNowQueueType) {
                            g.price = b.price;
                            var m = Travian.Config.buildingConfig
                              , p = BuildingQueue.get(f.getActiveVillageId())
                              , c = function() {
                                D && (a.cancel(D),
                                D = null);
                                var b = p.data.queues[g.finishNowQueueType || w]
                                  , c = f.i().isWWVillage();
                                !b || 0 == b.length || c || m[b[0].buildingType] && !m[b[0].buildingType].canFinishInstantly ? (g.price = s.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] ? -1 : 0,
                                q(!0)) : (e(b),
                                q(!1))
                            };
                            C.push([p, p.subscribe(c)])
                        }
                    } else {
                        D && (a.cancel(D),
                        D = null)
                    }
                    if ("undefined" != typeof s.data.hasVouchers[h.premiumFeature]) {
                        var r = s.data.hasVouchers[h.premiumFeature];
                        C.push([s, s.subscribe(function() {
                            r != s.data.hasVouchers[h.premiumFeature] && (r = s.data.hasVouchers[h.premiumFeature],
                            c(r))
                        })]);
                        h.premiumFeature != PremiumFeature.FEATURE_NAME_FINISH_NOW && c(r)
                    } else {
                        c()
                    }
                    s.filled && null != x && (s.unsubscribe(x),
                    x = null)
                }
            }
            function n() {
                for (var a = 0; a < C.length; a++) {
                    var b = C[a];
                    "function" == typeof b ? b() : b[0].unsubscribe(b[1])
                }
                C = []
            }
            function q(a) {
                0 >= g.price ? ($(e).removeClass("premium"),
                $(e).addClass("free")) : ($(e).addClass("premium"),
                $(e).removeClass("free"));
                a = a || Travian.Config.PremiumFeatures[h.premiumFeature] && Travian.Config.PremiumFeatures[h.premiumFeature].disabledOnVacation && Travian.Player.isOnVacation() && 0 != g.price;
                !0 == a && $(e).addClass("disabled");
                !1 == a && $(e).removeClass("disabled")
            }
            var r = new PremiumFeature(g,e,a)
              , t = 0
              , u = ""
              , w = null
              , s = null
              , x = null
              , v = null
              , D = null
              , C = [];
            Travian.Player && Travian.Player.filled ? (s = Voucher.get(Travian.Player.data.playerId),
            s.filled || (x = s.subscribe(p))) : c.m(function() {
                s = Voucher.get(Travian.Player.data.playerId);
                s.filled || (x = s.subscribe(p))
            });
            h.$observe("premiumFeature", function(a) {
                if ("undefined" !== typeof a && (u = a,
                p(),
                Travian.Config.PremiumFeatures[u] && Travian.Config.PremiumFeatures[u].disabledOnVacation)) {
                    null != v && Travian.Player.unsubscribe(v);
                    var b = function() {
                        g.$broadcast("tooltipOverwrite", Travian.Player.isOnVacation() && 0 != g.price ? "Vacation.Tooltip.FeatureDisabled" : "")
                    }
                      , c = -1;
                    v = Travian.Player.subscribe(function() {
                        Travian.Player.data.vacationState != c && (-1 != c && p(),
                        b(),
                        c = Travian.Player.data.vacationState)
                    });
                    g.$watch("price", b)
                }
            });
            h.$observe("premiumCallbackParam", function(a) {
                "undefined" !== typeof a && ("string" == typeof a && 0 <= a.indexOf(":") ? (a = a.split(":"),
                g[a[0]] = a[1],
                w = a[1]) : w = a,
                p())
            });
            z.ya(e[0], m);
            g.getConfirmationRequestId = function() {
                t || (t = Date.now());
                return t
            }
            ;
            g.$on("confirmGoldUsage", function(a, b, c) {
                b === t && (l(c && c.confirmation ? {
                    confirmation: !0
                } : void 0),
                t = 0)
            });
            g.$on("$destroy", function() {
                z.Kc(e[0], m);
                null != x && s.unsubscribe(x);
                null != v && Travian.Player.unsubscribe(v);
                n();
                D && a.cancel(D)
            })
        }
    }
}
;
Travian.Directive.premiumFeature.$inject = ["$timeout", "SessionService", "AudioService", "VillageService"];
Travian.Directive.questGiver = function(a, c) {
    return {
        scope: {
            data: "="
        },
        templateUrl: "tpl/directive/questGiver.html",
        link: function(b, f) {
            b.QuestGiver = QuestGiver;
            b.questGiverDirectionMapping = {};
            b.questGiverDirectionMapping[QuestGiver.WREN] = "from";
            b.questGiverDirectionMapping[QuestGiver.SCOUT] = "from";
            b.questGiverDirectionMapping[QuestGiver.CHIEF] = "to";
            b.questGiverDirectionMapping[QuestGiver.ENVOY] = "to";
            b.questGiverDirectionMapping[QuestGiver.ADVENTURER] = "to";
            b.startDialog = a.startDialog;
            var g = null;
            if (QuestGiver.ANIMATIONS[b.data.npcId]) {
                var e = $(f).find(".questGiver")
                  , h = {};
                (function(a) {
                    a.delay = 50 + Math.ceil(150 * Math.random());
                    var c = Math.ceil(Math.random() * QuestGiver.ANIMATIONS[b.data.npcId].length);
                    a.baseClass = QuestGiver.STRING[b.data.npcId] + "_anim" + c + "_frame";
                    a.frames = QuestGiver.ANIMATIONS[b.data.npcId][c - 1]
                }
                )(h);
                g = c.Ma(e, h.baseClass, h.frames, h.delay)
            }
            b.$on("$destroy", function() {
                "function" == typeof g && g()
            })
        }
    }
}
;
Travian.Directive.questGiver.$inject = ["TutorialService", "AnimationService", "$timeout"];
Travian.Directive.playerColumn = function() {
    return {
        restrict: "A",
        templateUrl: "tpl/directive/tableElements/playerColumn.html",
        replace: !1,
        scope: {
            playerId: "@",
            playerName: "@",
            accountId: "@?",
            chatUser: "=",
            kingdomId: "@?",
            kingdomName: "@?",
            hidePrestige: "=?"
        },
        link: function(a, c) {
            c.addClass("playerColumn")
        }
    }
}
;
Travian.Directive.playerColumn.$inject = [];
Travian.Directive.villageColumn = function() {
    return {
        restrict: "A",
        templateUrl: "tpl/directive/tableElements/villageColumn.html",
        replace: !1,
        scope: {
            villageId: "@",
            villageName: "@",
            population: "@",
            villageType: "@",
            tribeId: "@",
            isActive: "@"
        },
        link: function(a, c, b) {
            c.addClass("villageColumn");
            a.$watch("villageId", function(b) {
                a.coordinates = id2xy(b)
            });
            a.villageClassName = "";
            multiObserve(b, ["population", "villageType", "tribeId", "isActive"], function() {
                a.villageClassName = Village.getPlayerVillageImageClass(b.tribeId, "true" == b.isActive || !0 == b.isActive ? 1 : 0, b.villageType, b.population)
            })
        }
    }
}
;
Travian.Directive.villageColumn.$inject = [];
Travian.Directive.troopsDetails = function(a, c, b, f) {
    return {
        restrict: "EA",
        replace: !0,
        scope: {
            troopData: "=",
            unitInputEnabled: "=",
            unitInput: "=",
            unitInputCallback: "=",
            unitIconCallback: "=",
            renderLazy: "@"
        },
        link: function(c, e) {
            function h() {
                !c.troopData.originalTroops && c.troopData.units && (c.troopData.originalTroops = c.troopData.units);
                $.each(["lost", "trapped"], function(a, b) {
                    var e = !1;
                    if (c.troopData[b + "Troops"]) {
                        for (var f in c.troopData[b + "Troops"]) {
                            if (0 != c.troopData[b + "Troops"][f]) {
                                e = !0;
                                break
                            }
                        }
                    }
                    e || delete c.troopData[b + "Troops"]
                });
                c.unitInputCallback && c.troopData.inputTroops && c.$watch("troopData.inputTroops", function(a, b) {
                    c.unitInputCallback(a, b)
                }, !0);
                c.troopData.unitLevels && (c.troopData.unitValues = {},
                c.$watch("troopData.unitLevels", function(a, b) {
                    for (var e in c.troopData.unitLevels) {
                        a[e] != b[e] && (c.troopData.unitValues || (c.troopData.unitValues = {}),
                        c.troopData.unitValues[e] = {},
                        $.each(["attack", "defence", "defenceCavalry"], function(a, b) {
                            var f = Troops.getUnitValue(b, e, c.troopData.unitLevels[e], c.troopData.tribeId);
                            c.troopData.unitValues[e][b] = f
                        }))
                    }
                }, !0));
                c.troopData.unitValues = {};
                c.troopData.unitValues[Troops.TYPE_HERO] = {
                    attack: -1,
                    defence: -1,
                    defenceCavalry: -1
                };
                if ("undefined" != typeof c.troopData.units && "undefined" != typeof c.troopData.units[Troops.TYPE_HERO] && 1 == c.troopData.units[Troops.TYPE_HERO] || "undefined" != typeof c.troopData.originalTroops && 0 < c.troopData.originalTroops[Troops.TYPE_HERO]) {
                    var f = Hero.get(c.troopData.playerId)
                      , h = f.subscribe(function() {
                        var a = -1;
                        c.troopData.playerId == Travian.Player.data.playerId && (a = parseInt(f.data.fightStrength) + (parseInt(f.data.bonuses[HeroItem.BONUS_FIGHT_STRENGTH]) || 0));
                        c.troopData.unitValues[Troops.TYPE_HERO] = {
                            heroLvl: f.data.level,
                            attack: a,
                            defence: a,
                            defenceCavalry: a
                        }
                    });
                    m.push({
                        heroObj: f,
                        heroObjSubscription: h
                    })
                }
                e.html(b.get("tpl/troopDetails/partials/troopTable.html"));
                a(e.contents())(c);
                requestAngularApply()
            }
            var m = [];
            c.tribeNames = Player.TRIBE_NAME;
            c.Troops = Troops;
            c.troopConfig = Travian.Config.troopConfig;
            c.$watch("troopData", function() {
                !c.troopData.originalTroops && c.troopData.units && (c.troopData.originalTroops = c.troopData.units);
                c.troopData.autofocus && f(function() {
                    $(e).find("input:enabled:first").focus()
                }, 0)
            });
            c.addUnit = function(a) {
                c.troopData.inputTroops[a] = c.troopData.originalTroops[a]
            }
            ;
            c.getTroopId = function(a, b) {
                return b == Troops.TYPE_HERO ? "hero" : nrToUnitId(b, a)
            }
            ;
            "true" == c.renderLazy ? (e[0].Aa = function() {
                h()
            }
            ,
            e.html('<div style="display: inline-block; height: 100px"></div>'),
            e.addClass("waitForRender")) : h();
            c.$on("$destroy", function() {
                e[0].Aa = null;
                for (var a = 0; a < m.length; a++) {
                    m[a].heroObj.unsubscribe(m[a].heroObjSubscription)
                }
            })
        }
    }
}
;
Travian.Directive.troopsDetails.$inject = ["$compile", "VillageService", "$templateCache", "$timeout"];
Travian.Directive.unitIcon = function() {
    return {
        restrict: "EA",
        replace: !0,
        template: '<i class="unitSmall"/>',
        link: function(a, c, b) {
            function f() {
                var f = b.data.split(","), m = -1, l;
                1 == f.length && ("merchant" == f[0] ? c.addClass("merchant_illu") : "hero" == f[0] || 98 == f[0] ? c.addClass("hero_illu") : (f[0] = a.$eval(f[0]),
                m = parseInt(f[0]),
                98 == m ? c.addClass("hero_illu") : l = (m - 1) % 10 + 1,
                m = Math.floor((m - 1) / 10) + 1));
                2 == f.length && (m = f[0],
                f[0] = a.$eval(f[0]),
                f[1] = a.$eval(f[1]),
                11 == parseInt(f[1]) || "hero" == m ? (c.addClass("hero_illu"),
                m = -1) : (m = parseInt(f[0]),
                l = parseInt(f[1])));
                0 < m && (0 < g && g != m && c.removeClass(Player.TRIBE_NAME[g]),
                g = m,
                0 < e && e != l && c.removeClass("unitType" + e),
                e = l,
                c.addClass(Player.TRIBE_NAME[m] + " unitType" + l))
            }
            "true" == b.big ? (c.removeClass("unitSmall"),
            c.addClass("unitMedium")) : (c.removeClass("unitMedium"),
            c.addClass("unitSmall"));
            var g = 0
              , e = 0;
            b.$observe("data", f);
            f()
        }
    }
}
;
Travian.Directive.unitIcon.$inject = [];
Travian.Directive.unitImage = function() {
    return {
        restrict: "EA",
        replace: !0,
        template: '<img src="layout/images/x.gif" />',
        link: function(a, c, b) {
            function f() {
                var f = b.data.split(",");
                if (1 == f.length) {
                    f[0] = a.$eval(f[0]);
                    var l = parseInt(f[0]);
                    l == Troops.TYPE_TRAPS ? (troopId = l,
                    h = Player.TRIBE.GAUL) : (troopId = (l - 1) % 10 + 1,
                    h = Math.floor((l - 1) / 10) + 1)
                }
                2 == f.length && (h = parseInt(a.$eval(f[0])),
                troopId = parseInt(a.$eval(f[1])));
                0 < h && (0 < g && g != h && c.removeClass(Player.TRIBE_NAME[g]),
                g = h,
                0 < e && e != troopId && c.removeClass("unitType" + e),
                e = troopId,
                c.addClass(Player.TRIBE_NAME[h] + " unitType" + troopId))
            }
            var g = 0
              , e = 0
              , h = 0;
            b.$observe("data", f);
            f();
            b.$observe("size", function() {
                c.removeClass("unitBig");
                c.removeClass("unitFull");
                c.removeClass("unitThumb");
                "big" == b.size ? c.addClass("unitBig") : "full" == b.size ? c.addClass("unitFull") : c.addClass("unitThumb")
            })
        }
    }
}
;
Travian.Directive.unitImage.$inject = [];
Travian.Directive.number = function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(a, c, b, f) {
            function g(a, b) {
                a !== "" + b && a !== b && (f.$setViewValue(b),
                f.$render())
            }
            var e = b.number
              , h = "true" == b.hideZero
              , m = "true" == b.hideNegative
              , l = "true" == b.negative
              , p = b["float"];
            c.attr("type", "tel");
            var n = null;
            c.on("focus", function() {
                n = window.setTimeout(function() {
                    n = null;
                    c[0].select()
                }, 10)
            });
            c.on("blur", function() {
                null != n && window.clearTimeout(n)
            });
            b.$observe("number", function(a) {
                e = parseInt(a);
                isNaN(e) && (e = -1)
            });
            b.$observe("hideZero", function(a) {
                h = "true" == a
            });
            f.$parsers.push(function(a) {
                if ("undefined" != typeof a) {
                    if ("" !== a && null !== a) {
                        var c = "";
                        l && (c += "-");
                        c += "0-9";
                        p && (c += "\\.,");
                        c = a.toString().replace(RegExp("[^" + c + "]", "g"), "");
                        if (l && "-" == c) {
                            g(a, c),
                            a = c
                        } else {
                            var f = 0;
                            if (p) {
                                var c = c.replace(",", ".")
                                  , f = parseFloat(c) || 0
                                  , h = parseInt(b["float"]);
                                h && (h = Math.pow(10, h),
                                f = Math.floor(f * h) / h);
                                "." == c.slice(-1) && (c.indexOf(".") == c.length - 1 && f < e) && (f += ".")
                            } else {
                                f = parseInt(c, 0) || 0
                            }
                            0 <= e && f > e && (f = e);
                            g(a, f);
                            a = f
                        }
                    }
                } else {
                    a = void 0
                }
                return a
            });
            f.$formatters.push(function(a) {
                if (h && 0 == a || m && 0 > a) {
                    a = ""
                }
                return a
            })
        }
    }
}
;
Travian.Directive.number.$inject = [];
Travian.Directive.afterInput = function(a) {
    return function(c, b, f) {
        var g = 200
          , e = null;
        f.$observe("afterInputTime", function(a) {
            void 0 != a && (g = parseInt(a))
        });
        $(b).bind("keyup", function() {
            null != e && (a.cancel(e),
            e = null);
            e = a(function() {
                c.$evalAsync(f.afterInput);
                e = null
            }, g)
        })
    }
}
;
Travian.Directive.afterInput.$inject = ["$timeout"];
Travian.Directive.autoFocus = function(a) {
    return {
        restrict: "A",
        link: function(c, b, f) {
            "undefined" != typeof f.autoFocus && "resetCursor" == f.autoFocus ? a(function() {
                var a = b[0];
                a.setSelectionRange ? (a.focus(),
                a.setSelectionRange(0, 0)) : a.createTextRange && (a = a.createTextRange(),
                a.collapse(!0),
                a.moveStart("character", 0),
                a.select())
            }, 0) : b[0].focus()
        }
    }
}
;
Travian.Directive.autoFocus.$inject = ["$timeout"];
Travian.Directive.carousel = function(a, c, b) {
    return {
        restrict: "E",
        scope: {
            carouselTemplate: "@",
            carouselItems: "=",
            carouselActiveItem: "=",
            carouselWindowHeight: "=",
            carouselRows: "@",
            carouselCols: "=",
            carouselItemPrimaryKey: "@",
            carouselWideCols: "=",
            carouselCallback: "=",
            carouselArrowClass: "@",
            carouselOnPageChange: "="
        },
        templateUrl: "tpl/mainlayout/partials/carousel.html",
        link: function(f, g, e) {
            function h() {
                f.player = Travian.Player;
                p && (f.carousel = new Ba({
                    Aa: function(a) {
                        return a
                    },
                    cols: r,
                    element: g,
                    compile: a,
                    rg: f,
                    template: p,
                    jh: g.find(".items"),
                    wi: f.carouselItemPrimaryKey,
                    rows: l(n),
                    Ki: "false" !== e.carouselPreselectFirst,
                    Zg: m,
                    Td: f.carouselOnPageChange
                }),
                f.carousel.setItems(q))
            }
            function m() {
                1 >= f.carousel.pages.length ? (g.addClass("arrowsHidden"),
                t.hide(),
                u.width(g.find(".carousel").width())) : (g.removeClass("arrowsHidden"),
                t.show(),
                u.width(g.find(".carousel").width() - 2 * t.width()));
                u.find(".item").width(Math.floor(u.width() / r - 2))
            }
            function l(a) {
                return q && q.length <= r ? 1 : f.carouselRows || (660 < a ? 2 : 1)
            }
            g = $(g);
            var p = null
              , n = 0
              , q = null
              , r = f.carouselCols || 4
              , t = g.find(".carouselArrow")
              , u = g.find(".items");
            b.get(f.carouselTemplate, {
                cache: c
            }).success(function(a) {
                p = a;
                h()
            });
            g.addClass("col_" + r);
            f.$watch("carouselItems", function(a) {
                q = a;
                if (!a || "undefined" === typeof f.carousel) {
                    return !1
                }
                f.carousel.setItems(q);
                m()
            }, !0);
            f.$watch("carouselWindowHeight", function(a) {
                if (!a || "undefined" === typeof a) {
                    return !1
                }
                n = a;
                "undefined" !== typeof f.carousel && f.carousel.setRows(l(a))
            }, !0)
        }
    }
}
;
Travian.Directive.carousel.$inject = ["$compile", "$templateCache", "$http"];
Travian.Directive.clickable = function(a, c) {
    return function(a, f, g) {
        g.clickable && ($(f).addClass("clickable"),
        z.ya(f[0], function() {
            var e = $(f).attr("disabled");
            if ($(f).hasClass("disabled") || "undefined" !== typeof e && !1 !== e || $(f).hasClass("animating")) {
                return !0
            }
            "undefined" != typeof g.playOnClick && c.U(g.playOnClick);
            return a.$apply(g.clickable)
        }),
        a.$on("$destroy", function() {
            z.s(f[0])
        }))
    }
}
;
Travian.Directive.clickable.$inject = ["$timeout", "AudioService", "SocketService"];
Travian.Directive.draggable = function() {
    return function(a, c, b) {
        function f() {
            "function" == typeof e && e();
            var f = a.$eval(b.draggable);
            f && (e = z.Gd(c[0], function() {
                b.onDragInit && (a.$eval(b.onDragInit, {
                    object: f
                }),
                requestAngularApply());
                b.dragOut && g();
                return f
            }, function() {
                b.onDragStop && (a.$eval(b.onDragStop, {
                    object: f,
                    dragOut: h
                }),
                requestAngularApply())
            }, f))
        }
        function g() {
            var a = $("." + b.dragOut);
            if (0 < a.length) {
                var c = parseInt(b.dragOutDistance) || 0
                  , e = z.D("move", function(b) {
                    var e = a[0].getBoundingClientRect()
                      , e = b.current.x < e.left - c || b.current.x > e.right + c || b.current.y < e.top - c || b.current.y > e.bottom + c;
                    e != h && b.u && (h ? $(b.u).removeClass("dragOut") : $(b.u).addClass("dragOut"));
                    h = e
                })
                  , f = z.D("up", function() {
                    e();
                    f()
                })
            }
        }
        if ("touch" != z.Ga() || "true" != b.disableTouchDrag) {
            var e = null
              , h = !1;
            b.$observe("draggable", f);
            a.$on("$destroy", function() {
                "function" == typeof e && e()
            })
        }
    }
}
;
Travian.Directive.draggable.$inject = ["$timeout"];
Travian.Directive.dropable = function() {
    return function(a, c, b) {
        if ("touch" != z.Ga() || "true" != b.disableTouchDrag) {
            a.$eval(b.draggable),
            z.ri(c[0], function(c, g, e) {
                return a.$eval(b.dropable, {
                    object: e
                })
            }),
            a.$on("$destroy", function() {
                z.s(c[0])
            })
        }
    }
}
;
Travian.Directive.dropable.$inject = ["$timeout"];
Travian.Directive.dynamicHeight = function() {
    return {
        scope: !0,
        link: function(a, c, b) {
            function f(c) {
                c = Math.max(h, c);
                b.dynamicMaxHeight || e.css("maxHeight", c + "px");
                var f = 0
                  , l = 0
                  , m = e.find("[dynamic-height=true]:not([dynamic-max-height])");
                0 < m.length && m.each(function(a, b) {
                    var c = $(b);
                    0 < c.parents(".hiddenDynamicHeight").first().length || (c = c.parents("[dynamic-height=true]").first(),
                    0 < c.length && c[0] === e[0] && (f += b.offsetHeight,
                    l++))
                });
                0 < l && (m = g() - f,
                a.$broadcast("updateDynamicHeight", e, (c - m) / l),
                requestAngularApply())
            }
            function g() {
                if ("" == b.heightTransition) {
                    p = p || e.find(".heightTransitionContent");
                    var a = p[0].style.height;
                    p.height("auto");
                    var c = p[0].scrollHeight;
                    p.height(a);
                    return c
                }
                return e[0].scrollHeight
            }
            var e = $(c)
              , h = b.dynamicMinHeight || 150
              , m = 0;
            b.$observe("dynamicMaxHeight", function(a) {
                0 < a && (a > m && e.find("[dynamic-height=true]").css("maxHeight", "none"),
                m = a,
                f(a))
            });
            a.$on("updateDynamicHeight", function(a, c, g) {
                a.targetScope == a.currentScope || "false" === e.attr("dynamic-height") || b.dynamicMaxHeight || 0 < e.parents(".hiddenDynamicHeight").length || e.parents("[dynamic-height=true]").first()[0] === c[0] && f(g)
            });
            var l = null;
            a.$on("requestDynamicHeightUpdate", function(a, c, e) {
                c && a.targetScope == a.currentScope || (a.defaultPrevented || !b.dynamicMaxHeight) || (c ? l || (l = setTimeout(function() {
                    f(b.dynamicMaxHeight);
                    l = null
                }, 20)) : (f(b.dynamicMaxHeight),
                "function" == typeof e && e()),
                a.preventDefault())
            });
            var p;
            b.dynamicMaxHeight || ("" == b.dynamicMaxHeight || "false" === e.attr("dynamic-height")) || ("" == e.attr("reset-height") && e.css("maxHeight", h),
            a.$emit("requestDynamicHeightUpdate", !0))
        }
    }
}
;
Travian.Directive.i18ndt = function(a, c) {
    function b(b, c, f, g) {
        "undefined" === typeof c && (c = "mediumDate");
        return void 0 !== Travian.datetimeFormats && void 0 !== Travian.datetimeFormats[f] && void 0 !== Travian.datetimeFormats[f][c] ? a("date")(b, Travian.datetimeFormats[f][c], g) : a("date")(b, c, g)
    }
    function f(a) {
        var b = ""
          , b = a / 1E3;
        a = Math.me(b / 3600);
        var c = Math.abs(60 * (b / 3600 % 1))
          , b = 0 <= a ? "+" : "-";
        10 > Math.abs(a) && (b += "0");
        0 === c && (c = "00");
        return b += String(Math.abs(a)) + String(c)
    }
    var g = null;
    return {
        link: function(a, h, m) {
            var l = null;
            a.$on("$destroy", function() {
                null != l && clearInterval(l)
            });
            m.$observe("i18ndt", function(a) {
                function e() {
                    var c, f = new Date(a), g = new Date((new Date).getTime()), l = +new Date(g.getFullYear(),g.getMonth(),g.getDate() - 1), n = +new Date(g.getFullYear(),g.getMonth(),g.getDate()), q = +new Date(g.getFullYear(),g.getMonth(),g.getDate() + 1), u = +new Date(g.getFullYear(),g.getMonth(),g.getDate() + 2);
                    c = c || m.format;
                    g = null;
                    l <= f && n > f ? g = Travian.translate("Chat.Time_Yesterday") + " " : q <= f && u > f ? g = Travian.translate("Chat.Time_Tomorrow") + " " : n <= f && q > f && (g = Travian.translate("Chat.Time_Today") + " ");
                    l = "";
                    if (g) {
                        switch (c) {
                        case "fullDate":
                            ;
                        case "longDate":
                            ;
                        case "mediumDate":
                            ;
                        case "shortDate":
                            l = g.trim();
                            break;
                        case "medium":
                            ;
                        case "short":
                            l = g + b(f, c + "Time", t, r);
                            break;
                        case "veryShort":
                            l = n < f && q > f ? b(f, "shortTime", t, r) : b(f, c, t, r);
                            break;
                        default:
                            l = b(f, c, t, r)
                        }
                    } else {
                        l = b(f, c, t, r)
                    }
                    h.text(l)
                }
                var q = 0
                  , r = "UTC"
                  , t = Travian.Config.defaultTimeFormat;
                if ("undefined" !== typeof a) {
                    if (a = 1E3 * parseInt(a, 10),
                    null != Travian.Player && 0 < Travian.Player.data.playerId && (null == g && (g = Settings.get(Travian.Player.data.playerId)),
                    q = 1E3 * g.timeZoneOffsetSeconds,
                    t = g.data.timeFormat),
                    0 !== q && (r = f(q)),
                    "undefined" !== typeof m.relative) {
                        if (a += c.Wh(),
                        6048E5 < 1E3 * c.R() - a) {
                            e()
                        } else {
                            var u = moment(a)
                              , q = function() {
                                h.text(u.fromNow())
                            };
                            q();
                            null != l && clearInterval(l);
                            l = setInterval(q, 5E3)
                        }
                    } else {
                        "undefined" !== typeof m.fastOffset ? (null != l && clearInterval(l),
                        l = setInterval(function() {
                            h.text(b(new Date(a + 1E3 * Math.floor(c.R())), m.format, t, r))
                        }, 100)) : e()
                    }
                }
            })
        }
    }
}
;
Travian.Directive.i18ndt.$inject = ["$filter", "ServertimeService"];
Travian.Directive.onPointerOut = function() {
    return function(a, c, b) {
        z.onPointerOut(c[0], function() {
            a.$eval(b.onPointerOut);
            requestAngularApply()
        });
        a.$on("$destroy", function() {
            z.s(c[0])
        })
    }
}
;
Travian.Directive.onPointerOver = function() {
    return function(a, c, b) {
        z.onPointerOver(c[0], function() {
            a.$eval(b.onPointerOver);
            requestAngularApply()
        });
        a.$on("$destroy", function() {
            z.s(c[0])
        })
    }
}
;
Travian.Directive.rerender = function(a) {
    return {
        hk: !0,
        transclude: "element",
        priority: 600,
        terminal: !0,
        restrict: "A",
        Gj: !0,
        link: function(c, b, f, g, e) {
            var h, m;
            c.$watch(f.rerender, function() {
                m && (m.$destroy(),
                m = null);
                h && (h.remove(),
                h = null);
                e(function(c, e) {
                    m = e;
                    h = c;
                    a.enter(c, b.parent(), b)
                });
                return !1
            })
        }
    }
}
;
Travian.Directive.rerender.$inject = ["$animate"];
Travian.Directive.resizable = function(a) {
    return {
        restrict: "A",
        scope: {
            onResize: "=",
            maxHeightSync: "="
        },
        link: function(c, b, f) {
            function g() {
                t = !1;
                r.css({
                    display: "none"
                });
                if ("function" != typeof c.onResize || c.onResize(s)) {
                    var a = b[0].getBoundingClientRect().width - b.width()
                      , e = b[0].getBoundingClientRect().height - b.height();
                    b.css({
                        width: s.x - a + "px",
                        height: s.y - e + "px",
                        display: "block"
                    });
                    c.maxHeightSync = s.y - e;
                    requestAngularApply()
                }
            }
            b = $(b);
            var e = parseInt(f.minWidth, 10) || 100
              , h = parseInt(f.maxWidth, 10) || Number.MAX_VALUE
              , m = parseInt(f.minHeight, 10) || 100
              , l = parseInt(f.maxHeight, 10) || Number.MAX_VALUE
              , p = Math.min(h, Math.max(e, parseInt(f.initWidth, 10) || 300));
            f = Math.min(l, Math.max(m, parseInt(f.initHeight, 10) || 300));
            var n = "";
            e == h && (n = "restrictVertical");
            m == l && (n = "restrictHorizontal");
            var q = $("<div>", {
                "class": "resizer " + n + " window_resizehandle_small_illu"
            })
              , r = $("<div>", {
                "class": "resizeHelper"
            });
            b.append(q);
            b.append(r);
            var t = !1
              , u = null
              , w = null;
            z.V(q[0], function() {
                t = !0;
                var a = z.O();
                u = {
                    x: a.current.x,
                    y: a.current.y
                };
                w = {
                    x: r.outerWidth(),
                    y: r.outerHeight()
                };
                r.css({
                    display: "block"
                });
                return !1
            });
            var s = {
                x: p,
                y: f
            }
              , x = z.D("move", function() {
                if (t) {
                    var a = z.O();
                    s.x = Math.min(h, Math.max(e, w.x + (a.current.x - u.x) * dirVal()));
                    s.y = Math.min(l, Math.max(m, w.y + (a.current.y - u.y)));
                    r.css({
                        width: s.x + "px",
                        height: s.y + "px"
                    })
                }
            })
              , v = z.D("up", g);
            a(g);
            c.$on("$destroy", function() {
                x();
                v();
                z.s(b[0]);
                z.s(q[0]);
                q.remove();
                r.remove()
            })
        }
    }
}
;
Travian.Directive.resizable.$inject = ["$timeout"];
Travian.Directive.scrollable = function(a) {
    return {
        restrict: "A",
        transclude: !0,
        templateUrl: "tpl/mainlayout/partials/scrollable.html",
        compile: function() {
            return {
                pre: function(a, b, f) {
                    $(b).find(".scrollContent").attr("dynamic-height", "" == f.dynamic);
                    "" == f.resetHeight && $(b).find(".scrollContent").attr("reset-height", "")
                },
                post: function(c, b, f) {
                    function g() {
                        c.scrollbarApi = new Da({
                            element: e,
                            autoUpdate: !0,
                            scrollDown: "" == f.scrollDown,
                            dynamicWidth: "" == f.dynamicWidth,
                            initUpdateTick: function(a) {
                                return c.$watch(a)
                            },
                            onScrolling: function() {
                                c.$broadcast("scrolling")
                            }
                        })
                    }
                    var e = $(b);
                    e.addClass("scrollable");
                    var h = e.find(".scrollContent").first()
                      , m = !1;
                    f.$observe("scrollPosition", function(a) {
                        c.scrollbarApi.scrollTo(a, !0, !0)
                    });
                    f.$observe("scrollToClass", function(b) {
                        b && a(function() {
                            for (var a = b.split(","), f = 0; f < a.length; f++) {
                                if ($scrollToElem = e.find("." + a[f]),
                                $scrollToElem[0]) {
                                    c.scrollbarApi.scrollTo($scrollToElem[0].offsetTop - 5, !1, !0);
                                    break
                                }
                            }
                        })
                    });
                    f.$observe("scrollingDisabled", function(a) {
                        !0 === a || "true" == a ? (m = !0,
                        h.attr("dynamic-height", !1),
                        e.attr("style", ""),
                        e.addClass("scrollingDisabled"),
                        c.scrollbarApi.destroy()) : m && (e.removeClass("scrollingDisabled"),
                        h.attr("dynamic-height", "" == f.dynamic),
                        g())
                    });
                    g();
                    c.$on("scrollbarApi", function(a, b) {
                        if (c.scrollbarApi && "function" == typeof c.scrollbarApi[b]) {
                            c.scrollbarApi[b]()
                        }
                    });
                    c.$on("$destroy", function() {
                        c.scrollbarApi.destroy()
                    })
                }
            }
        }
    }
}
;
Travian.Directive.scrollable.$inject = ["$timeout"];
Travian.Directive.swipeable = function() {
    return function(a, c, b) {
        $(c).addClass("swipeable");
        z.Fi(c[0], function(f) {
            var g = $(c).attr("disabled");
            if ($(c).hasClass("disabled") || "undefined" !== typeof g && !1 !== g) {
                return !1
            }
            f = b.swipeable.replace("{direction}", f);
            a.$apply(f)
        })
    }
}
;
Travian.Directive.touchTooltips = function() {
    return function(a, c, b) {
        z.V(c[0], function() {
            z.Jb && "undefined" == typeof b.forceTouchTooltips || z.ag()
        });
        a.$on("$destroy", function() {
            z.s(c[0])
        })
    }
}
;
Travian.Directive.visibleTabUpdate = function() {
    return {
        restrict: "A",
        scope: {
            resizable: "="
        },
        link: function(a, c, b) {
            a.$on("setVisibleTab", function(a, g) {
                g == b.visibleTabUpdate ? c.css("display", "block") : c.css("display", "none")
            });
            a.$root.$broadcast("setVisibleTab", b.visibleTabUpdate)
        }
    }
}
;
Travian.Directive.zoom = function() {
    return {
        restrict: "A",
        scope: !1,
        link: function(a, c, b) {
            function f(a) {
                var g = $(c)
                  , m = $(document).height()
                  , l = $(c[0].parentNode).width();
                if (0 == l) {
                    a || window.setTimeout(function() {
                        f(!0)
                    }, 10)
                } else {
                    a = parseInt(b.orgHeight);
                    var p = parseInt(b.orgWidth)
                      , n = parseInt(b.offsetHeight)
                      , q = Math.min(1, m / parseInt(b.minHeight), l / parseInt(b.minWidth))
                      , r = Math.max(m / a, l / p);
                    1 == q && 1 < r && (q = r);
                    m = Math.round((m - a) / 2 + n);
                    l = Math.round((l - p) / 2);
                    g[0].lh = q;
                    g.css({
                        top: m + "px",
                        left: l,
                        right: "auto",
                        height: a + "px"
                    });
                    1 != q ? (l = Math.round(50 * q) / 50,
                    0.98 < l && 1 > l && (l = 1),
                    g.css({
                        transform: "perspective(1000px) scale3d(" + l + ", " + l + ", 1)",
                        "transform-origin": "50% 50%",
                        webkitFilter: "blur(0)",
                        webkitPerspective: "1000px"
                    }),
                    g[0].zoomScale = l) : (g.css({
                        transform: "none",
                        zoom: 1
                    }),
                    g[0].zoomScale = 1)
                }
            }
            a.$on("urlChanged", function(a, b) {
                "undefined" != typeof b.page && f()
            });
            f();
            $(window).on("resize", f);
            var g = a.$watch("page", f);
            a.$on("$destroy", function() {
                $(window).off("resize", f);
                g()
            })
        }
    }
}
;
Travian.Directive.zoom.$inject = ["$compile", "$timeout"];
Travian.Directive.villageTribute = function(a, c) {
    return {
        restrict: "AE",
        templateUrl: "tpl/directive/villageTribute.html",
        replace: !0,
        scope: {
            village: "=",
            influences: "=",
            troopMovement: "=",
            currentServerTime: "=",
            tributeBonusPercent: "=",
            onlyProgress: "="
        },
        link: function(b) {
            function f() {
                !isNaN(b.tributeBonusPercent) && b.village.filled && (b.tributeBonusResources = (new Resources(b.village.data.calculatedTributes)).multiply(b.tributeBonusPercent).floor().cap(Travian.Config.KingdomConfig.maxStarterTributes));
                b.village.data.allowTributeCollection || (b.progressBarType = "disabled")
            }
            b.player = Travian.Player;
            b.instantFetchTributePremiumFeatureName = PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY;
            b.animation = {};
            b.settings = Settings.get(Travian.Player.data.playerId);
            b.progressBarType = "green";
            b.activeVillage = a.i();
            b[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY] = function(a) {
                return {
                    destinationVillageId: a,
                    callback: function() {
                        c(function() {
                            delete b.animation.collectNow
                        }, 3E3)
                    },
                    requestDelay: b.settings.data.disableAnimations ? 0 : 600,
                    notEnoughGoldCallback: function() {
                        b.animation.notEnoughGold = !0
                    }
                }
            }
            ;
            "undefined" == typeof b.troopMovement && (b.troopMovement = {
                time: 0,
                resources: {},
                jk: 0,
                treasures: 0
            });
            var g = Pa(b.activeVillage.data.coordinates, b.village.data.coordinates);
            b.durationToKingVillage = Math.round(3600 * (g / Travian.Config.fetchingDurationMultiplier / Travian.Config.TG_TROOP_SPEED));
            b.fetchTribute = function() {
                Travian.writeRequest("troops/fetchTributesForVillages", {
                    villageId: a.getActiveVillageId(),
                    destVillageIds: [b.village.data.villageId]
                }, function(a) {
                    "undefined" != typeof a.errors || b.settings.data.disableAnimations || (b.animation.collect = !0)
                })
            }
            ;
            b.showCollectNowAnimation = function() {
                b.animation.notEnoughGold || b.settings.data.disableAnimations || (b.animation.collectNow = !0);
                delete b.animation.notEnoughGold
            }
            ;
            b.tributeBonusResources = new Resources;
            b.$watch("tributeBonusPercent", f);
            b.$watch("village.data.calculatedTributes", f);
            b.$on("activeVillageChanged", function() {
                b.activeVillage = a.i()
            });
            b.$on("collectAllTributes", function() {
                b.settings.data.disableAnimations || (!b.village.data.canFetchTributes || b.troopMovement) || (b.animation.collect = !0)
            })
        }
    }
}
;
Travian.Directive.villageTribute.$inject = ["VillageService", "$timeout"];
Travian.Filter.DHHMMSS = function() {
    return function(a) {
        return a && "undefined" !== typeof a ? qa(parseInt(a)) : 0
    }
}
;
Travian.Filter.HHMM = function() {
    return function(a) {
        return a && "undefined" !== typeof a ? pa(parseInt(a), !0) : 0
    }
}
;
Travian.Filter.HHMMSS = function() {
    return function(a) {
        return a && "undefined" !== typeof a ? pa(parseInt(a)) : 0
    }
}
;
Travian.Filter.bidiCoordinate = function() {
    Travian.Filter.bidiNumber();
    return function(a, c, b) {
        a = new wa({
            value: a,
            pe: c,
            qe: b
        });
        c = a.od.surroundingDirection === a.config.ec ? a.config.ad : a.config.De;
        var f = a.ac + c + ")" + a.config.Cb;
        b = '<span class="coordinateX">' + (a.ac + c + "(" + a.config.Cb) + xa(a, a.pe) + "</span>";
        f = '<span class="coordinateY">' + xa(a, a.qe) + f + "</span>";
        return a.ac + c + b + '<span class="coordinatePipe">|</span>' + f + a.config.Cb
    }
}
;
Travian.Filter.bidiNumber = function() {
    return function(a, c, b, f, g, e, h) {
        return za(new wa({
            value: a,
            Pa: c,
            ge: b,
            zc: f,
            threshold: g,
            mc: e,
            ob: h
        }))
    }
}
;
Travian.Filter.bidiRatio = function() {
    return function(a, c, b, f, g, e) {
        return Aa(new wa({
            current: c,
            pb: b,
            threshold: 99999,
            mc: 0,
            bc: f,
            zc: !0,
            Pa: g,
            ie: e
        }))
    }
}
;
Travian.Filter.firstUpper = function() {
    return function(a) {
        return a.charAt(0).toUpperCase() + a.slice(1)
    }
}
;
Travian.Filter.range = function() {
    return function(a, c, b) {
        c = parseInt(c);
        for (b = parseInt(b); c <= b; c++) {
            a.push(c)
        }
        return a
    }
}
;
Travian.Filter.rank = function() {
    return function(a) {
        return !a && 0 !== a || "undefined" === typeof a ? "" : isNaN(a) ? a : parseInt(a, 10) + 1
    }
}
;
Travian.Filter.resource = function() {
    return function(a) {
        return 1 == a ? "wood" : 2 == a ? "clay" : 3 == a ? "iron" : 4 == a ? "crop" : "unkown"
    }
}
;
Travian.Filter.shortBigNumber = function() {
    return function(a, c, b) {
        if (!a || "undefined" === typeof a) {
            return 0
        }
        var f = parseInt(a, 10);
        "undefined" !== typeof c && Math.abs(f) <= parseInt(c) ? f = za(new wa({
            value: a
        })) : (a = b,
        a = "undefined" !== typeof a ? a : 1,
        f = Math.abs(f),
        1E3 <= f ? (f = f / 1E3 * Math.pow(10, a),
        f = Math.floor(f),
        f /= Math.pow(10, a),
        f += "k") : f = parseInt(f));
        return f
    }
}
;
Travian.Filter.sortObjectsByNumericProperty = function() {
    return function(a, c, b) {
        var f = [], g;
        for (g in a) {
            a[g].key = g,
            f.push(a[g])
        }
        f.sort(function(a, b) {
            a = parseInt(a[c]);
            b = parseInt(b[c]);
            return a - b
        });
        b && f.reverse();
        return f
    }
}
;
Travian.Filter.toHtml = function() {
    return function(a) {
        return "" == a || "undefined" == typeof a || null == a ? "" : escapeHtmlTags(a).replace(/\\n/g, "<br/>")
    }
}
;
"use strict";
Travian.Service.AnimationService = function(a, c, b, f) {
    function g() {
        return !w || w.getSetting("disableAnimations")
    }
    function e() {
        if (g()) {
            for (var a = 0; a < t.length; a++) {
                var b = t[a];
                b.oe();
                b.currentFrame = -p(b.delay);
                if ("function" == typeof b.onEnd) {
                    b.onEnd(b, !0)
                }
                b.loop || (n(b.index),
                a--)
            }
            null != u && (Travian.tick.unbind(u),
            u = null)
        } else {
            h()
        }
    }
    function h() {
        !u && (0 < t.length && !g()) && (u = Travian.tick.bind("animationService", m))
    }
    function m() {
        for (var a = 0; a < t.length; a++) {
            var b = t[a]
              , c = b.displayFrame;
            b.displayFrame = b.frameOrder && 0 <= b.currentFrame ? b.frameOrder[b.currentFrame] : b.currentFrame;
            if (b.displayFrame != c && (0 <= c && b.oe(c),
            0 <= b.displayFrame && (b.Vf(b.displayFrame),
            b.frameCalls && b.frameCalls[b.displayFrame]))) {
                b.frameCalls[b.displayFrame](b)
            }
            b.currentFrame++;
            if (b.currentFrame >= (b.frameOrder ? b.frameOrder.length : b.frames)) {
                if ("function" == typeof b.onEnd) {
                    b.onEnd(b)
                }
                b.loop ? (b.randomized && l(b),
                b.currentFrame = -p(b.delay)) : n(b.index)
            }
        }
    }
    function l(a) {
        a.originalFrameCount && (a.frames = a.originalFrameCount);
        a.frameOrder = [];
        for (var b = 0, c = a.frames, e = 0; b < c; b++) {
            var f = a.reverse ? c - b - 1 : b;
            if (a.frameDelays && a.frameDelays[b]) {
                for (var g = 0, h = p(a.frameDelays[b], a); g < h; g++) {
                    a.frameOrder.push(f)
                }
            }
            a.frameOrder.push(f);
            a.frameLoops && a.frameLoops[b] && (0 == e && (e = Array.isArray(a.frameLoops[b]) ? p(a.frameLoops[b][1], a) + 1 : 2),
            0 < e && (1 < e && (b = (Array.isArray(a.frameLoops[b]) ? a.frameLoops[b][0] : a.frameLoops[b]) - 1),
            e--))
        }
        a.randomized && !a.originalFrameCount && (a.originalFrameCount = a.frames);
        a.frames = a.frameOrder.length
    }
    function p(a, b) {
        if ("object" === typeof a) {
            b && (b.randomized = !0);
            if (Array.isArray(a)) {
                return p(a[Math.floor(Math.random() * a.length)])
            }
            if (0 <= a.max && 0 <= a.min) {
                return a.min + Math.floor(Math.random() * (a.max - a.min + 1))
            }
        } else {
            return a
        }
    }
    function n(a) {
        "undefined" != typeof t[a].displayFrame && t[a].elem[0] && (t[a].elem[0].className = t[a].elem[0].className.replace(RegExp(t[a].baseClass + "\\d+", "g"), "").trim().replace(/  +/g, " "));
        t[a].index = -1;
        t.splice(a, 1);
        if (0 == t.length) {
            null != u && (Travian.tick.unbind(u),
            u = null)
        } else {
            for (; a < t.length; a++) {
                t[a].index--
            }
        }
    }
    function q(a, b, c, e) {
        var f = this;
        this.elem = a instanceof jQuery ? a : $(a);
        this.baseClass = b;
        this.frames = c;
        $.extend(this, e);
        this.delay = this.delay || 0;
        this.loop = !1 !== this.loop;
        (this.frameDelays || this.frameLoops || this.reverse) && l(this);
        this.currentFrame = -p(this.delay);
        this.Vf = function(a) {
            f.elem instanceof jQuery && f.elem.addClass(f.baseClass + a)
        }
        ;
        this.oe = function(a) {
            f.elem instanceof jQuery && f.elem.removeClass(f.baseClass + (void 0 !== a ? a : f.displayFrame))
        }
        ;
        this.stop = function() {
            0 <= f.index && n(f.index)
        }
        ;
        this.index = t.push(this) - 1;
        h()
    }
    var r = {
        animationEnd: "animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd",
        animationIteration: "animationiteration webkitAnimationIteration oanimationiteration MSAnimationIteration",
        transitionEnd: "transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"
    }
      , t = []
      , u = null
      , w = null;
    c.m(function() {
        w = Settings.get(Travian.Player.data.playerId);
        w.subscribe(e)
    });
    var s = {};
    s[Building.TYPE.BLACKSMITH] = {
        animations: [{
            name: "1",
            frameCount: 9
        }],
        trigger: 2
    };
    s[Building.TYPE.BARRACKS] = {
        animations: [{
            name: "1",
            frameCount: 22,
            startAnimation: !0
        }, {
            name: "2",
            frameCount: 10,
            animationOptions: {
                frameDelays: {
                    0: [0, {
                        min: 20,
                        max: 40
                    }]
                }
            },
            cutOnEnd: !0,
            alternate: {
                min: 0,
                max: 1
            }
        }, {
            name: "3",
            frameCount: 10,
            animationOptions: {
                frameDelays: {
                    0: [0, {
                        min: 20,
                        max: 40
                    }]
                }
            },
            cutOnEnd: !0,
            alternate: {
                min: 0,
                max: 1
            }
        }, {
            name: "1",
            frameCount: 22,
            animationOptions: {
                reverse: !0
            },
            endAnimation: !0
        }],
        trigger: 1
    };
    s[Building.TYPE.STABLE] = {
        animations: [{
            name: "1",
            buildingLevel: [1, 19],
            frameCount: 11,
            animationOptions: {
                delay: [10, {
                    max: 60,
                    min: 100
                }, {
                    max: 80,
                    min: 140
                }],
                frameLoops: {
                    7: [3, {
                        max: 3,
                        min: 6
                    }]
                }
            }
        }, {
            name: "2",
            buildingLevel: [10, 20],
            frameCount: 12,
            staticFrame: 0,
            animationOptions: {
                delay: {
                    max: 40,
                    min: 60
                },
                frameLoops: {
                    11: [0, {
                        max: 2,
                        min: 6
                    }]
                }
            }
        }, {
            name: "3",
            buildingLevel: 20,
            frameCount: 12,
            animationOptions: {
                delay: {
                    max: 20,
                    min: 40
                },
                frameLoops: {
                    6: [5, {
                        max: 10,
                        min: 30
                    }]
                }
            }
        }, {
            name: "4",
            buildingLevel: 20,
            frameCount: 15,
            staticFrame: 0,
            animationOptions: {
                delay: {
                    max: 20,
                    min: 40
                }
            }
        }],
        trigger: 1
    };
    s[Building.TYPE.WORKSHOP] = {
        animations: [{
            name: "1",
            frameCount: 12,
            weight: 6,
            cutOnEnd: !0,
            alternate: !0,
            animationOptions: {
                delay: [0, 1, 2, 3, 4, 5, 6, 7, 8, {
                    max: 40,
                    min: 60
                }]
            }
        }, {
            name: "2",
            frameCount: 12,
            weight: 3,
            cutOnEnd: !0,
            animationOptions: {
                delay: [0, 1, 2, 3, 4, 5, 6, 7, 8, {
                    max: 40,
                    min: 60
                }]
            }
        }, {
            name: "3",
            frameCount: 12,
            weight: 1,
            cutOnEnd: !0,
            animationOptions: {
                delay: [0, 1, 2, 3, 4, 5, 6, 7, 8, {
                    max: 40,
                    min: 60
                }]
            }
        }],
        trigger: 1
    };
    s[Building.TYPE.GREAT_BARRACKS] = angular.copy(s[Building.TYPE.BARRACKS]);
    s[Building.TYPE.GREAT_STABLE] = angular.copy(s[Building.TYPE.STABLE]);
    s[Building.TYPE.HEALING_TENT] = {
        animations: [{
            name: "1",
            frameCount: 42,
            staticFrame: 0,
            animationOptions: {
                frameDelays: {
                    0: {
                        max: 40,
                        min: 60
                    },
                    9: {
                        max: 0,
                        min: 20
                    },
                    35: {
                        max: 0,
                        min: 20
                    }
                }
            }
        }],
        trigger: 1,
        tribe: !0
    };
    return new function() {
        function e(a) {
            $(".nightModeDarkness").css("opacity", (Gameworld.isHalloween() ? 1 : 0.55) * a);
            $(".nightModeContrast").css("filter", "contrast(" + (1 + 0.3 * a) + ") blur(0)");
            $(".nightModeContrastExclude").css("filter", "contrast(" + (1 - 0.3 * a) + ") blur(0)");
            $(".nightModeBrightness").css("filter", "brightness(" + (1 - 0.45 * a) + ") blur(0)");
            var c = b.Th();
            c ? c.Zi(a) : window.setTimeout(h.Fb, 100)
        }
        var h = this;
        this.$c = this.fc = 300;
        this.Eg = 5;
        this.Ma = function(a, b, c, e) {
            return (new q(a,b,c,e)).stop
        }
        ;
        this.ub = {};
        this.zb = function(a, b, c, e, f, l, m, n, p, q, s) {
            function u(a) {
                c.remove();
                a || "function" != typeof n || n(p);
                s && h.ub[s] && window.setTimeout(function() {
                    delete h.ub[s]
                }, 1E3)
            }
            if (s) {
                if (h.ub[s]) {
                    return
                }
                h.ub[s] = !0
            }
            if (g() || "hidden" == $(b).css("visibility")) {
                return "function" == typeof n && n(p),
                s && s && h.ub[s] && window.setTimeout(function() {
                    delete h.ub[s]
                }, 1E3),
                !0
            }
            e = $(e || "body");
            if (0 == e.length) {
                return !1
            }
            "string" == typeof c && (c = $('<i class="' + c + '"></i>'));
            if (!(c instanceof jQuery)) {
                return !1
            }
            c.css("pointerEvents", "none");
            q || (q = {
                start: 1,
                end: 1
            });
            var t = {}
              , w = !1;
            $.each({
                start: a,
                end: b
            }, function(a, b) {
                var c = b;
                "string" == typeof c && (c = $(c));
                c instanceof jQuery && 0 < c.length && (t[a] = c.offset(),
                t[a].top += c.outerHeight() * q[a] / 2,
                t[a].left += c.outerWidth() * q[a] / 2);
                "object" == typeof c && (c.top && c.left) && (t[a] = c);
                if (t[a]) {
                    t[a].top -= e.offset().top,
                    t[a].left -= e.offset().left,
                    e[0].zoomScale && (t[a].top /= e[0].zoomScale,
                    t[a].left /= e[0].zoomScale)
                } else {
                    return w = !0,
                    !1
                }
                return !0
            });
            if (w) {
                return !1
            }
            a = (f || 1E3) / 1E3 + "s " + (m || "linear");
            l && (a += " " + l / 1E3 + "s");
            e.append(c.css({
                position: "absolute",
                top: t.start.top,
                left: t.start.left,
                transition: "top " + a + ", left " + a,
                zIndex: 9999
            }));
            c.css({
                marginTop: "-" + c.outerHeight() / 2 + "px",
                marginLeft: "-" + c.outerWidth() / 2 + "px"
            });
            c.one(r.transitionEnd, function() {
                c.unbind(r.transitionEnd);
                u()
            });
            c.show().css(t.end);
            return u
        }
        ;
        this.showAnimatedElement = function(a, b) {
            a = $(a);
            b = $(b || "body");
            a.one(r.animationEnd, function() {
                a.remove()
            });
            b.append(a)
        }
        ;
        this.cc = function(a, b, c, e, f, h, l, m) {
            function n() {
                if (c) {
                    var f = a;
                    a = $('<i class="' + c + " " + b + '"></i>').insertAfter(f);
                    e && f.hide();
                    if (!1 !== m) {
                        a.one(r.animationEnd, function() {
                            a.unbind(r.animationEnd);
                            a.remove();
                            e && f.show()
                        })
                    }
                } else {
                    if (a.removeClass(b),
                    a[0].offsetWidth,
                    a.addClass(b),
                    m) {
                        a.one(r.animationEnd, function() {
                            a.unbind(r.animationEnd);
                            a.removeClass(b)
                        })
                    }
                }
                h && (s++,
                q())
            }
            function p(b) {
                if (!l || b) {
                    n()
                } else {
                    a.one(r.animationIteration + " " + r.animationEnd, function() {
                        a.unbind(r.animationIteration + " " + r.animationEnd);
                        n()
                    })
                }
            }
            function q() {
                if (f) {
                    if ("function" == typeof f) {
                        var a = f(s);
                        t = window.setTimeout(function() {
                            p(0 > a)
                        }, Math.max(0, a))
                    } else {
                        t = window.setTimeout(p, f)
                    }
                } else {
                    n()
                }
            }
            if (!g()) {
                if (!(a instanceof jQuery) && (a = $(a),
                0 == a.length)) {
                    return !1
                }
                var s = 0
                  , t = 0;
                q();
                return function() {
                    a && 0 != a.length && (t && window.clearTimeout(t),
                    c ? !1 !== m && a.remove() : m && a.removeClass(b),
                    a.unbind(r.animationIteration + " " + r.animationEnd))
                }
            }
        }
        ;
        this.showScreenFlashNotification = function(a, b) {
            function c() {
                return !Travian.rootScope.windows.screenFlashNotification && !Travian.rootScope.windows.questVictory
            }
            b = b || {};
            b.notificationType = a;
            if (c()) {
                Travian.rootScope.openWindow("screenFlashNotification", {}, b, !0)
            } else {
                var e = Travian.rootScope.$watch("windows", function() {
                    c() && (Travian.rootScope.openWindow("screenFlashNotification", {}, b, !0),
                    e())
                }, !0)
            }
        }
        ;
        var m = !1
          , n = 0;
        this.Fb = function() {
            if (Gameworld.hasNightTruce()) {
                var b = (new Date).getUTCSeconds()
                  , c = 60 - b
                  , f = Gameworld.isNightTruceActive();
                m != f && ((m = f) ? ($(".ingameContentContainer").addClass("nightMode"),
                e(1)) : ($(".ingameContentContainer").removeClass("nightMode"),
                e(0)),
                a.$broadcast("nightModeChanged", f));
                var g = f ? "end" : "start"
                  , g = (new Date).setUTCHours(Travian.Config.nightPeace[g + "Hour"] || 0, Travian.Config.nightPeace[g + "Minute"] || 0, Travian.Config.nightPeace[g + "Second"] || 0, 0)
                  , g = Math.floor((g - Date.now()) / 1E3);
                0 > g && (g += 86400);
                g <= h.$c && (g /= h.$c,
                f || (g = 1 - g),
                e(g),
                f = h.Eg,
                c = Math.min(c, f - (b - Math.floor(b / f) * f)));
                n && window.clearTimeout(n);
                n = window.setTimeout(h.Fb, 1E3 * c)
            } else {
                Gameworld.isHalloween() && ($(".ingameContentContainer").addClass("nightMode"),
                e(1))
            }
        }
        ;
        Travian.Config.nightMode && c.m(function() {
            a.$on("urlChanged", function(a, b) {
                b.page && window.setTimeout(h.Fb)
            });
            a.$on("buildingQueueChanged", function() {
                window.setTimeout(h.Fb)
            })
        });
        this.ki = function(a) {
            function b() {}
            var c = a.data.buildingType
              , e = a.data.locationId;
            if (!s[c]) {
                return !1
            }
            var m = angular.copy(s[c]);
            if ("rtl" == getDirection()) {
                for (var n = 0; n < m.animations.length; n++) {
                    m.animations[n].animationOptions = m.animations[n].animationOptions || {},
                    m.animations[n].animationOptions.reverse = !m.animations[n].animationOptions.reverse
                }
            }
            m.animations = m.animations.filter(function(b) {
                return void 0 == b.buildingLevel || (Array.isArray(b.buildingLevel) ? b.buildingLevel[0] <= a.data.lvl && b.buildingLevel[1] >= a.data.lvl : b.buildingLevel == a.data.lvl)
            });
            ["startAnimation", "endAnimation"].forEach(function(a) {
                m[a] = m.animations.findIndex(function(b) {
                    return b[a]
                })
            });
            var q = [];
            setTimeout(function() {
                function a(c, e) {
                    if (e) {
                        t(c, m.startAnimation, !0)
                    } else {
                        if (r()) {
                            t(c)
                        } else {
                            if (b(),
                            t(c, m.startAnimation),
                            0 <= m.endAnimation) {
                                m.animations[m.endAnimation].animationOptions.loop = !1;
                                m.animations[m.endAnimation].animationOptions.onEnd = function() {
                                    fa = !1;
                                    n()
                                }
                                ;
                                fa = !0;
                                var f = m.animations[m.endAnimation]
                                  , g = A[f.name];
                                f.delay || g.addClass("frame" + (f.animationOptions.reverse ? f.frameCount - 1 : 0));
                                h.Ma(g, "frame", f.frameCount, f.animationOptions)
                            }
                        }
                    }
                }
                function n() {
                    fa || g() || (r() ? O || (m.animations[C].animationOptions = m.animations[C].animationOptions || {},
                    m.animations[C].animationOptions.onEnd = a,
                    s = h.Ma(K, "frame", m.animations[C].frameCount, m.animations[C].animationOptions),
                    O = !0) : m.animations[C].cutOnEnd && a())
                }
                function r() {
                    return !0
                }
                function s() {}
                function t(a, c, f) {
                    if (m.animations && 1 != m.animations.length) {
                        if (0 > c || void 0 === c) {
                            c = u()
                        }
                        var g = m.animations[c];
                        if (A[g.name]) {
                            K = A[g.name]
                        } else {
                            var h = $(".buildingLocation" + e + " .buildingAnimation");
                            h[c] ? K = $(h[c]) : b()
                        }
                        a && K && (delete a.frameDelays,
                        delete a.frameLoops,
                        delete a.frameOrder,
                        delete a.reverse,
                        Object.assign(a, g.animationOptions),
                        a.frames = a.originalFrameCount = g.frameCount,
                        (a.frameDelays || a.frameLoops || a.reverse) && l(a),
                        delete a.randomized,
                        a.oe(),
                        I(a.elem, C),
                        a.elem = K,
                        !O || (a.delay || f) || (a.displayFrame = a.reverse ? g.frameCount - 1 : 0,
                        a.Vf(a.displayFrame)));
                        C = c
                    } else {
                        I(K, C)
                    }
                }
                function u() {
                    for (var a = 0, b = m.animations.filter(function(a, b) {
                        return b != m.startAnimation && b != m.endAnimation && (b != C || !p(m.animations[C].alternate))
                    }), c = 0; c < b.length; c++) {
                        a += b[c].weight || 1
                    }
                    for (var c = Math.floor(Math.random() * a), e = -1, a = 0; c >= a; a += b[e].weight || 1) {
                        e++
                    }
                    return m.animations.indexOf(b[e])
                }
                function I(a, b) {
                    if (m.animations[b] && 0 <= m.animations[b].staticFrame) {
                        var c = m.animations[b].staticFrame;
                        m.animations[b].animationOptions && m.animations[b].animationOptions.reverse && (c = m.animations[b].frameCount - c - 1);
                        (a || K).addClass("frame" + c)
                    }
                }
                var x = $(".buildingLocation" + e)
                  , D = "a" + (m.baseName || c);
                m.tribe && (D += "_" + Player.TRIBE_NAME[Travian.Player.data.tribeId][0]);
                var A = {};
                x.find(".buildingAnimation").each(function(a, b) {
                    m.animations[a] && !A[m.animations[a].name] && (b.className = b.className.replace(/( a\d+(_[rtg])?_\d| frame\d+)/g, ""),
                    $(b).addClass(D + "_" + m.animations[a].name),
                    A[m.animations[a].name] = $(b))
                });
                var C = 0
                  , K = A[m.animations[C].name];
                t(null, m.startAnimation);
                for (var O = !1, x = 0; x < m.animations.length; x++) {
                    x == C && O || I(A[m.animations[x].name], x)
                }
                b = function() {
                    O && (O = !1,
                    s())
                }
                ;
                var fa = !1
                  , x = [w];
                switch (m.trigger) {
                case 1:
                    ;
                case 2:
                    var W = (1 == m.trigger ? UnitQueue : UnitResearchQueue).get(f.getActiveVillageId())
                      , r = function() {
                        return W.data.buildingTypes[c] && 0 > W.data.buildingTypes[c][0].pause
                    };
                    x.push(W)
                }
                0 <= m.startAnimation && (r() && !g()) && t();
                q.push(Cache.ja(x, n))
            });
            return {
                parts: m.animations.map(function(a) {
                    return a.name
                }).unique().length,
                stop: function() {
                    b();
                    q.forEach(function(a) {
                        a()
                    })
                }
            }
        }
    }
}
;
Travian.Service.AnimationService.$inject = ["$rootScope", "SessionService", "MapService", "VillageService"];
"use strict";
Travian.Service.AudioService = function(a, c, b, f) {
    function g() {
        if (e) {
            0 < Travian.Player.data.tribeId && (h || "undefined" == typeof c || (h = new mb(b,c)),
            m || "undefined" == typeof f.page || (m = new nb(f.page)));
            l || (l = new ob);
            p || (p = new pb);
            n || (n = new qb);
            var a = 0
              , g = 0
              , t = 0;
            e.data.muteAll && 0 !== e.data.muteAll || (a = e.data.musicVolume / 100,
            g = e.data.soundVolume / 100,
            t = e.data.uiSoundVolume / 100);
            h && h.Zb(a);
            m && m.Zb(g);
            l.Zb(g);
            p.Zb(g);
            n.Zb(t)
        }
    }
    var e = null, h, m, l, p, n;
    f.UISound = {};
    f.UISound.BUTTON_CLICK = fb;
    f.UISound.BUTTON_CANCEL = ib;
    f.UISound.BUTTON_ZOOM_IN = Oa;
    f.UISound.BUTTON_ZOOM_OUT = Na;
    f.UISound.BUILDING_UPGRADE = db;
    f.UISound.BUILDING_UPGRADE_CANCEL = rb;
    f.UISound.BUTTON_CLOSE = sb;
    f.UISound.TAB_SWITCH = jb;
    f.UISound.BUTTON_MASTER_BUILDER = tb;
    f.UISound.SUBTAB_SWITCH = kb;
    f.UISound.BUTTON_SPEND_GOLD = lb;
    f.UISound.BUTTON_TRAIN_TROOPS = ub;
    f.UISound.BUTTON_SEND_RESSOURCES = vb;
    f.UISound.BUTTON_SEND_TROOPS = wb;
    f.UISound.BUTTON_CANCEL_TROOP_MOVEMENT = xb;
    f.UISound.BUTTON_COLLECT_TRIBUTES = cb;
    f.UISound.BUTTON_SELL_ITEM = yb;
    f.UISound.BUTTON_SELL_STOLEN_GOODS = zb;
    f.UISound.BUTTON_BET_ON_ITEM = Ab;
    f.UISound.OPEN_REPORT = Bb;
    f.UISound.BUTTON_SQUARE_CLICK = Cb;
    f.UISound.BUTTON_COLLECT_OASIS_RES = Db;
    a.m(function() {
        e = Settings.get(Travian.Player.data.playerId);
        e.subscribe(g);
        if (0 >= Travian.Player.data.tribeId) {
            var a = Travian.Player.subscribe(function() {
                0 < Travian.Player.data.tribeId && (Travian.Player.unsubscribe(a),
                g())
            })
        }
    });
    f.$on("urlChanged", function(a, b) {
        !m && ("undefined" != typeof f && Travian.Player && 0 != Travian.Player.data.tribeId) && (m = new nb(f.page));
        m && (b.page && 0 < m.volume) && m.Td(b.page)
    });
    f.$on("notificationReceived", function(a, b) {
        for (var c = 0; c < b.length; c++) {
            "undefined" != typeof p && p.Va && p.play(b[c].data.type)
        }
    });
    return new function() {
        this.tj = function() {
            "undefined" != typeof h && h.play()
        }
        ;
        this.ig = function() {
            g()
        }
        ;
        this.Ii = function(a) {
            "undefined" == typeof l && (l = new ob);
            l.Zf(a);
            0 < l.volume && (l.Va || l.Ha(),
            l.play(a))
        }
        ;
        this.wj = function(a) {
            "undefined" != typeof l && (l.Zf(0),
            l.stop(a))
        }
        ;
        this.Ud = function(a) {
            "undefined" != typeof p && p.Va && p.play(a)
        }
        ;
        this.U = function(a) {
            "undefined" != typeof n && n.Va && n.play(a)
        }
        ;
        this.Aj = function() {
            null != e && (e.data.muteAll = 1 == e.data.muteAll ? 0 : 1,
            e.persist())
        }
    }
}
;
function Eb(a, c, b, f, g) {
    function e() {
        this.T = !0
    }
    function h() {
        this.T = !1
    }
    this.hg = !1;
    this.pg = c;
    this.Hc = !1;
    a = Travian.Config.cdnPrefix + a;
    f || (f = function() {
        this.loop() || (this.T = !1);
        b && this.play()
    }
    );
    "undefined" != typeof g && (this.hg = g);
    this.mi = function() {
        this.Xa = new Howl({
            src: [a + ".ogg", a + ".mp3"],
            volume: this.pg,
            onend: f,
            onplay: e,
            onpause: h,
            onloaderror: function() {
                console.log("unable to load", this)
            }
        });
        this.Hc = !0
    }
    ;
    this.T = !1;
    this.play = function() {
        this.Hc || this.mi();
        this.Xa.T && !this.hg || this.Xa.play()
    }
    ;
    this.stop = function() {
        this.Hc && (this.Xa.stop(),
        this.Xa.T = !1)
    }
    ;
    this.pause = function() {
        this.Hc && this.Xa.pause()
    }
    ;
    this.volume = function(a) {
        this.pg = a;
        "undefined" != typeof this.Xa && this.Xa.volume(a)
    }
}
function Fb() {
    this.tribeId = 0;
    this.path = "";
    this.volume = 0;
    this.Va = !1;
    this.C = {};
    this.Ea = [];
    this.Ci = this.loop = !1;
    this.play = function(a) {
        0 < this.volume && this.C.hasOwnProperty(a) && this.C[a].play()
    }
    ;
    this.pause = function(a) {
        this.C.hasOwnProperty(a) && this.C[a].pause()
    }
    ;
    this.Od = this.stop = function() {
        for (var a in this.C) {
            this.C[a].stop()
        }
    }
    ;
    this.vb = this.play;
    this.Zb = function(a) {
        if (!(0 > this.volume || this.volume == a)) {
            var c = this.volume;
            this.volume = a;
            0 == a ? this.Od() : (this.Va || this.Ha(),
            0 == c && this.vb());
            for (var b in this.C) {
                a = this.C[b],
                this.C[b].audioTrack && (a = this.C[b].audioTrack),
                a.volume(this.volume)
            }
        }
    }
    ;
    this.Ha = function() {
        for (var a = 0; a < this.Ea.length; a++) {
            this.C[this.Ea[a].key] = new Eb(this.path + this.Ea[a].name,this.volume,this.loop,this.Ci,this.Ea[a].simultaneousPlay)
        }
        this.Va = !0
    }
    ;
    this.parent = this
}
function mb(a, c) {
    var b = "Travian_tribe_" + Player.TRIBE_NAME[Travian.Player.data.tribeId] + "s_master_part", f, g, e = c.H(null, [Troops.COLLECTION_MOVING, TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]), h = this;
    this.$g = 4;
    this.T = !1;
    this.path = "audio/music/";
    this.Ha = function() {
        for (var a = 1; a <= this.$g; a++) {
            4 > a ? (f = 30,
            g = 20) : (f = 10,
            g = 40),
            this.C[a] = {
                audioTrack: new Eb(this.path + b + a,this.volume,!1,this.Ji),
                normalChance: f,
                intenseChance: g
            }
        }
        this.Va = !0
    }
    ;
    this.Ji = function() {
        this.T = !1;
        h.C[h.kc].audioTrack.T = !1;
        h.kc = h.nf();
        h.C[h.kc].audioTrack.play()
    }
    ;
    this.nf = function() {
        var b = Math.floor(100 * Math.random() + 1), c, f, g = 0;
        a: {
            c = e.v();
            for (var h = 0; h < c.length; h++) {
                if (300 > c[h].data.movement.timeFinish - a.R()) {
                    c = !0;
                    break a
                }
            }
            c = !1
        }
        c = c ? "intenseChance" : "normalChance";
        for (var r in this.C) {
            if (b <= this.C[r][c] + g) {
                f = r;
                break
            }
            g += this.C[r][c]
        }
        return f
    }
    ;
    this.play = function() {
        !this.T && 0 < this.volume && (this.kc = this.nf(),
        this.T = !0,
        this.C[this.kc].audioTrack.play())
    }
    ;
    this.Od = this.stop = function() {
        this.T = !1;
        for (var a in this.C) {
            this.C[a].audioTrack.stop()
        }
    }
    ;
    this.vb = this.play;
    0 < this.volume && this.Ha()
}
mb.prototype = new Fb;
function nb(a) {
    var c = Travian.Player.data.tribeId
      , b = "T5AS_" + Player.TRIBE_NAME[c] + "Village"
      , c = "T5AS_" + Player.TRIBE_NAME[c] + "VillageResources";
    this.T = !1;
    this.Ca = a;
    this.path = "audio/AmbientSounds/";
    this.Ea = [{
        key: "village",
        name: b
    }, {
        key: "resources",
        name: c
    }, {
        key: "map",
        name: "T5AS_strategic"
    }];
    this.loop = !0;
    this.play = function(a) {
        this.Ca = void 0 === a ? Travian.rootScope.page : a;
        this.T || (this.C[this.Ca].play(),
        this.T = !0)
    }
    ;
    this.pause = function() {
        this.T = !1;
        this.parent.pause(this.Ca)
    }
    ;
    this.Td = function(a) {
        this.Ca != a && (this.C[this.Ca].pause(),
        this.Ca = a,
        this.C[this.Ca].play())
    }
    ;
    this.Od = this.pause;
    this.vb = this.play;
    0 < this.volume && (this.Ha(),
    this.play(this.Ca))
}
nb.prototype = new Fb;
function ob() {
    this.path = "audio/BuildingSounds/";
    this.Pd = 0;
    this.Ea = [{
        key: Building.TYPE.WOOD,
        name: "T5BS_" + Building.TYPE.WOOD
    }, {
        key: Building.TYPE.CLAY,
        name: "T5BS_" + Building.TYPE.CLAY
    }, {
        key: Building.TYPE.IRON,
        name: "T5BS_" + Building.TYPE.IRON
    }, {
        key: Building.TYPE.CROP,
        name: "T5BS_" + Building.TYPE.CROP
    }, {
        key: Building.TYPE.SAWMILL,
        name: "T5BS_" + Building.TYPE.SAWMILL
    }, {
        key: Building.TYPE.CLAY_BAKERY,
        name: "T5BS_" + Building.TYPE.CLAY_BAKERY
    }, {
        key: Building.TYPE.IRON_FOUNDRY,
        name: "T5BS_" + Building.TYPE.IRON_FOUNDRY
    }, {
        key: Building.TYPE.MILL,
        name: "T5BS_" + Building.TYPE.MILL
    }, {
        key: Building.TYPE.BAKERY,
        name: "T5BS_" + Building.TYPE.BAKERY
    }, {
        key: Building.TYPE.WAREHOUSE,
        name: "T5BS_" + Building.TYPE.WAREHOUSE
    }, {
        key: Building.TYPE.GREAT_WAREHOUSE,
        name: "T5BS_" + Building.TYPE.WAREHOUSE
    }, {
        key: Building.TYPE.GRANARY,
        name: "T5BS_" + Building.TYPE.GRANARY
    }, {
        key: Building.TYPE.GREAT_GRANARY,
        name: "T5BS_" + Building.TYPE.GRANARY
    }, {
        key: Building.TYPE.BLACKSMITH,
        name: "T5BS_" + Building.TYPE.BLACKSMITH
    }, {
        key: Building.TYPE.TOURNAMENT_SQUARE,
        name: "T5BS_" + Building.TYPE.TOURNAMENT_SQUARE
    }, {
        key: Building.TYPE.MAIN_BUILDING,
        name: "T5BS_" + Building.TYPE.MAIN_BUILDING
    }, {
        key: Building.TYPE.RALLY_POINT,
        name: "T5BS_" + Building.TYPE.RALLY_POINT
    }, {
        key: Building.TYPE.MARKET,
        name: "T5BS_" + Building.TYPE.MARKET
    }, {
        key: Building.TYPE.EMBASSY,
        name: "T5BS_" + Building.TYPE.EMBASSY
    }, {
        key: Building.TYPE.BARRACKS,
        name: "T5BS_" + Building.TYPE.BARRACKS
    }, {
        key: Building.TYPE.GREAT_BARRACKS,
        name: "T5BS_" + Building.TYPE.BARRACKS
    }, {
        key: Building.TYPE.STABLE,
        name: "T5BS_" + Building.TYPE.STABLE
    }, {
        key: Building.TYPE.GREAT_STABLE,
        name: "T5BS_" + Building.TYPE.STABLE
    }, {
        key: Building.TYPE.WORKSHOP,
        name: "T5BS_" + Building.TYPE.WORKSHOP
    }, {
        key: Building.TYPE.ACADEMY,
        name: "T5BS_" + Building.TYPE.ACADEMY
    }, {
        key: Building.TYPE.CRANNY,
        name: "T5BS_" + Building.TYPE.CRANNY
    }, {
        key: Building.TYPE.TOWN_HALL,
        name: "T5BS_" + Building.TYPE.TOWN_HALL
    }, {
        key: Building.TYPE.RESIDENCE,
        name: "T5BS_" + Building.TYPE.RESIDENCE
    }, {
        key: Building.TYPE.PALACE,
        name: "T5BS_" + Building.TYPE.PALACE
    }, {
        key: Building.TYPE.TREASURY,
        name: "T5BS_" + Building.TYPE.TREASURY
    }, {
        key: Building.TYPE.TRADE_OFFICE,
        name: "T5BS_" + Building.TYPE.TRADE_OFFICE
    }, {
        key: Building.TYPE.CITY_WALL,
        name: "T5BS_" + Building.TYPE.CITY_WALL
    }, {
        key: Building.TYPE.EARTH_WALL,
        name: "T5BS_" + Building.TYPE.EARTH_WALL
    }, {
        key: Building.TYPE.PALLISADE,
        name: "T5BS_" + Building.TYPE.PALLISADE
    }, {
        key: Building.TYPE.STONEMASON,
        name: "T5BS_" + Building.TYPE.STONEMASON
    }, {
        key: Building.TYPE.BREWERY,
        name: "T5BS_" + Building.TYPE.BREWERY
    }, {
        key: Building.TYPE.TRAPPER,
        name: "T5BS_" + Building.TYPE.TRAPPER
    }, {
        key: Building.TYPE.WONDER_OF_WORLD,
        name: "T5BS_" + Building.TYPE.WONDER_OF_WORLD
    }, {
        key: Building.TYPE.HORSE_DRINKING_TROUGH,
        name: "T5BS_" + Building.TYPE.HORSE_DRINKING_TROUGH
    }, {
        key: Building.TYPE.TEAHOUSE,
        name: "T5BS_" + Building.TYPE.TEAHOUSE
    }, {
        key: Building.TYPE.HEALING_TENT,
        name: "T5BS_" + Building.TYPE.HEALING_TENT
    }, {
        key: "active_" + Building.TYPE.BLACKSMITH,
        name: "T5BS_active_" + Building.TYPE.BLACKSMITH
    }, {
        key: "active_" + Building.TYPE.MARKET,
        name: "T5BS_active_" + Building.TYPE.MARKET
    }, {
        key: "active_" + Building.TYPE.BARRACKS,
        name: "T5BS_active_" + Building.TYPE.BARRACKS
    }, {
        key: "active_" + Building.TYPE.STABLE,
        name: "T5BS_active_" + Building.TYPE.STABLE
    }, {
        key: "active_" + Building.TYPE.WORKSHOP,
        name: "T5BS_active_" + Building.TYPE.WORKSHOP
    }, {
        key: "active_" + Building.TYPE.ACADEMY,
        name: "T5BS_active_" + Building.TYPE.ACADEMY
    }, {
        key: "active_" + Building.TYPE.BREWERY,
        name: "T5BS_active_" + Building.TYPE.BREWERY
    }, {
        key: "active_" + Building.TYPE.TEAHOUSE,
        name: "T5BS_active_" + Building.TYPE.TEAHOUSE
    }];
    this.sa = {};
    this.sa[Building.TYPE.BLACKSMITH] = Building.TYPE.BLACKSMITH;
    this.sa[Building.TYPE.MARKET] = Building.TYPE.MARKET;
    this.sa[Building.TYPE.BARRACKS] = Building.TYPE.BARRACKS;
    this.sa[Building.TYPE.STABLE] = Building.TYPE.STABLE;
    this.sa[Building.TYPE.WORKSHOP] = Building.TYPE.WORKSHOP;
    this.sa[Building.TYPE.ACADEMY] = Building.TYPE.ACADEMY;
    this.sa[Building.TYPE.BREWERY] = Building.TYPE.BREWERY;
    this.sa[Building.TYPE.TEAHOUSE] = Building.TYPE.TEAHOUSE;
    this.play = function(a) {
        if (this.C.hasOwnProperty(a)) {
            var c = a;
            this.sa.hasOwnProperty(a) && (c = "active_" + a);
            0 < this.volume && this.C.hasOwnProperty(c) && this.C[c].play()
        }
    }
    ;
    this.vb = function() {
        0 != this.Pd && this.play(this.Pd)
    }
    ;
    this.Zf = function(a) {
        this.Pd = a
    }
    ;
    0 < this.volume && this.Ha()
}
ob.prototype = new Fb;
function pb() {
    this.path = "audio/EventSounds/";
    this.Ea = [{
        key: Notifications.BUILDING_FINISHED,
        name: "T5ES_" + Gb
    }, {
        key: Notifications.BUILDING_COMPLETELY_DESTROYED,
        name: "T5ES_" + Ib
    }, {
        key: Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES,
        name: "T5ES_" + Jb
    }, {
        key: Notifications.REPORT_ATTACKER_WON_WITH_LOSSES,
        name: "T5ES_" + Kb
    }, {
        key: Notifications.REPORT_ATTACKER_LOST,
        name: "T5ES_" + Lb
    }, {
        key: Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES,
        name: "T5ES_" + Jb
    }, {
        key: Notifications.REPORT_DEFENDER_WON_WITH_LOSSES,
        name: "T5ES_" + Kb
    }, {
        key: Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES,
        name: "T5ES_" + Lb
    }, {
        key: Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES,
        name: "T5ES_" + Lb
    }, {
        key: Notifications.REPORT_SUPPORT_ARRIVED,
        name: "T5ES_" + Mb
    }, {
        key: Notifications.TROOPS_RETURNED,
        name: "T5ES_" + Mb
    }, {
        key: Notifications.REPORT_TRADE,
        name: "T5ES_" + Nb
    }, {
        key: Notifications.REPORT_TRADE_WOOD,
        name: "T5ES_" + Nb
    }, {
        key: Notifications.REPORT_TRADE_CLAY,
        name: "T5ES_" + Nb
    }, {
        key: Notifications.REPORT_TRADE_IRON,
        name: "T5ES_" + Nb
    }, {
        key: Notifications.REPORT_TRADE_CROP,
        name: "T5ES_" + Nb
    }, {
        key: Notifications.TRIBUTE_COLLECTED,
        name: "T5ES_" + Ob
    }, {
        key: Notifications.REPORT_ADVENTURE,
        name: "T5ES_" + Pb
    }, {
        key: Notifications.ATTACK_VILLAGE_STARTED,
        name: "T5ES_" + Qb
    }, {
        key: eb,
        name: "T5ES_" + eb
    }, {
        key: "fireworks",
        name: "T5ES_" + gb,
        simultaneousPlay: !0
    }];
    this.vb = y();
    0 < this.volume && this.Ha()
}
var Gb = 1
  , Ib = 2
  , Jb = 3
  , Kb = 4
  , Lb = 5
  , Mb = 6
  , Nb = 7
  , Pb = 8
  , Ob = 9
  , Qb = 10
  , eb = "questComplete"
  , gb = "fireworks";
pb.prototype = new Fb;
function qb() {
    this.path = "audio/UISounds/";
    this.Ea = [{
        key: fb,
        name: "T5UIS_" + fb,
        simultaneousPlay: !0
    }, {
        key: ib,
        name: "T5UIS_" + ib
    }, {
        key: Oa,
        name: "T5UIS_" + Oa,
        simultaneousPlay: !0
    }, {
        key: Na,
        name: "T5UIS_" + Na,
        simultaneousPlay: !0
    }, {
        key: db,
        name: "T5UIS_" + db
    }, {
        key: rb,
        name: "T5UIS_" + rb
    }, {
        key: sb,
        name: "T5UIS_" + sb
    }, {
        key: jb,
        name: "T5UIS_" + jb,
        simultaneousPlay: !0
    }, {
        key: tb,
        name: "T5UIS_" + tb
    }, {
        key: kb,
        name: "T5UIS_" + kb,
        simultaneousPlay: !0
    }, {
        key: lb,
        name: "T5UIS_" + lb
    }, {
        key: ub,
        name: "T5UIS_" + ub
    }, {
        key: vb,
        name: "T5UIS_" + vb
    }, {
        key: wb,
        name: "T5UIS_" + wb
    }, {
        key: xb,
        name: "T5UIS_" + xb
    }, {
        key: cb,
        name: "T5UIS_" + cb
    }, {
        key: yb,
        name: "T5UIS_" + yb
    }, {
        key: zb,
        name: "T5UIS_" + zb
    }, {
        key: Ab,
        name: "T5UIS_" + Ab
    }, {
        key: Bb,
        name: "T5UIS_" + Bb,
        simultaneousPlay: !0
    }, {
        key: Cb,
        name: "T5UIS_" + Cb,
        simultaneousPlay: !0
    }, {
        key: Db,
        name: "T5UIS_" + Db
    }];
    this.vb = y();
    0 < this.volume && this.Ha()
}
var fb = 1
  , ib = 2
  , Oa = 3
  , Na = 4
  , db = 5
  , rb = 6
  , sb = 7
  , jb = 8
  , tb = 9
  , kb = 10
  , lb = 11
  , ub = 12
  , vb = 13
  , wb = 14
  , xb = 15
  , cb = 16
  , yb = 17
  , zb = 18
  , Ab = 19
  , Bb = 20
  , Cb = 21
  , Db = 22;
qb.prototype = new Fb;
Travian.Service.AudioService.$inject = ["SessionService", "TroopsService", "ServertimeService", "$rootScope"];
"use strict";
Travian.Service.BuildingService = function(a, c) {
    function b(a) {
        var b = a.data.villageId + "_" + a.data.locationId;
        0 == l[b] ? l[b] = 1 : 2 > Cache.Vb && e[a.data.villageId].callSubscribers()
    }
    function f(a) {
        for (var c = 0; c < e[a].data.length; c++) {
            var f = e[a].data[c]
              , h = f.data.locationId;
            if ("undefined" != typeof m[a][h]) {
                for (var p = 0; p < m[a][h].length; p++) {
                    m[a][h][p](f)
                }
                delete m[a][h]
            }
            var w = "type" + f.data.buildingType;
            if ("undefined" != typeof m[a][w] && "undefined" == typeof f.data.rubble) {
                for (p = 0; p < m[a][w].length; p++) {
                    m[a][w][p](f)
                }
                delete m[a][w]
            }
            h = a + "_" + h;
            "undefined" == typeof l[h] && (l[h] = 0,
            f.subscribe(b))
        }
        for (var s in m[a]) {
            for (p = 0; p < m[a][s].length; p++) {
                m[a][s][p](null)
            }
            delete m[a][s]
        }
        g(a)
    }
    function g(a) {
        if ("undefined" != typeof e[a] && null != c.qa(a)) {
            var b = h[a];
            if ("undefined" == typeof b) {
                b = BuildingQueue.get(a),
                h[a] = b,
                b.subscribe(function() {
                    g(a);
                    requestAngularApply()
                })
            } else {
                for (b = 0; b < e[a].data.length; b++) {
                    var f = e[a].data[b];
                    f.setQueue(h[a].getEntriesForLocation(f.data.locationId))
                }
            }
        }
    }
    var e = {}
      , h = {}
      , m = {}
      , l = {}
      , p = {
        0: "constructBuilding",
        1: "resources",
        2: "resources",
        3: "resources",
        4: "resources",
        15: "mainBuilding",
        16: "rallypoint",
        17: "marketplace",
        19: "trainTroops",
        18: "embassy",
        13: "smithy",
        20: "trainTroops",
        21: "trainTroops",
        22: "academy",
        23: "hideout",
        24: "townHall",
        25: "palace",
        26: "palace",
        27: "treasury",
        29: "trainTroops",
        30: "trainTroops",
        35: "drinkHouse",
        36: "trapper",
        40: "worldWonder",
        41: "drinkingTrough",
        44: "drinkHouse",
        45: "hiddenTreasury",
        46: "healingTent"
    };
    a.$on("resourcesChanged", function(a, b) {
        g(b)
    });
    return new function() {
        var b = this;
        this.Hh = function(a) {
            if (!a || "undefined" === typeof a || 0 > a) {
                a = 0
            }
            return "undefined" == typeof p[a] ? "default" : p[a]
        }
        ;
        this.S = function(a, b, e) {
            e || (e = c.i().data.villageId);
            "undefined" == typeof m[e] && (m[e] = {});
            "undefined" == typeof m[e][a] && (m[e][a] = []);
            m[e][a].push(b);
            this.aa(e)
        }
        ;
        this.aa = function(a) {
            "undefined" == typeof m[a] && (m[a] = {});
            "undefined" == typeof e[a] ? (e[a] = Building.getCollection(a),
            e[a].subscribe(function() {
                f(a)
            })) : e[a].filled && f(a);
            return e[a]
        }
        ;
        this.dc = function(a, b) {
            for (var c = Building.getCollection(a), e = 0; e < c.data.length; e++) {
                var f = c.data[e];
                if (f.data.buildingType == b && 0 < f.data.lvl) {
                    return !0
                }
            }
            return !1
        }
        ;
        this.va = function(a, b) {
            for (var c = Building.getCollection(a), e = 0; e < c.data.length; e++) {
                var f = c.data[e];
                if (f.data.buildingType == b && (0 < f.data.lvl || b == Building.TYPE.WONDER_OF_WORLD)) {
                    return f
                }
            }
            return !1
        }
        ;
        this.Gh = function(a, b, e, f) {
            b = Building.getCollection(b || c.getActiveVillageId());
            for (var g = 100, h = !1, l = 0; l < b.data.length; l++) {
                var m = b.data[l];
                m.data.buildingType == a && (m.data.lvl >= (e || 0) && m.data.lvl < (f || 100) && m.data.lvl < g) && (g = m.data.lvl,
                h = m)
            }
            return h
        }
        ;
        this.Ad = function() {
            var a;
            a || (a = c.getActiveVillageId());
            a = this.aa(a);
            for (var b = 0, e = 0; e < a.data.length; e++) {
                0 <= $.inArray(a.data[e].data.locationId, Building.PREMIUM_LOCATIONS) && b++
            }
            return b
        }
        ;
        this.vd = function(a) {
            var b;
            b || (b = c.getActiveVillageId());
            b = this.aa(b);
            for (var e = 0, f = 0; f < b.data.length; f++) {
                b.data[f].data.buildingType == a && e++
            }
            return e
        }
        ;
        this.Hi = function(e, f, g) {
            b.S("type" + Building.TYPE.EMBASSY, function(h) {
                var l = {
                    tab: "Communities"
                };
                e && (l.subtab = e);
                f && (l.overlaybuilding = f);
                if (null != h && 0 < h.data.lvl) {
                    l.location = h.data.locationId,
                    a.openWindow("building", l)
                } else {
                    h = c.W();
                    for (var m = !1, p = 0; p < h.data.length && !(m = b.va(h.data[p].data.villageId, Building.TYPE.EMBASSY),
                    !1 !== m && 0 < m.data.lvl); p++) {}
                    !1 !== m && 0 < m.data.lvl ? (c.ea(h.data[p].data.villageId),
                    l.location = m.data.locationId,
                    a.openWindow("building", l)) : "function" == typeof g && g()
                }
            })
        }
        ;
        this.Gb = function(b, c) {
            if (!b || !Travian.Player.data.hasNoobProtection || !Travian.Player.isOnMap() || Travian.Player.data.population >= Travian.Config.noobProtection.populationLimit || !Settings.get(Travian.Player.data.playerId).data.showPopulationWarning) {
                return c(),
                !0
            }
            var e = 0, f = !1, g;
            for (g in Travian.Player.data.villages) {
                var h = Travian.Player.data.villages[g].villageId
                  , l = Building.getCollection(h)
                  , m = [];
                angular.forEach(BuildingQueue.get(h).data.queues[BuildingQueue.TYPE_MASTER_BUILDER], function(a) {
                    var b = l.data.find(function(b) {
                        return b.data.locationId == a.locationId
                    });
                    b && (m[b.data.locationId] = m[b.data.locationId] ? m[b.data.locationId] + 1 : b.data.lvlNext,
                    e += b.data.upgradeSupplyUsageSums[m[b.data.locationId]] - b.data.upgradeSupplyUsageSums[m[b.data.locationId] - 1])
                });
                var n = [];
                angular.forEach(Troops.getCollection(Troops.COLLECTION_MOVING, h).data, function(a) {
                    a.data.movement.movementType == Troops.MOVEMENT_TYPE_SETTLE && n.push(MapDetails.get(a.data.movement.villageIdTarget))
                });
                if (0 < n.length) {
                    var p = Cache.ja(n, function() {
                        for (var a in n) {
                            e += Village.getNewVillagePopulation(n[a].data.resType)
                        }
                        setTimeout(function() {
                            p()
                        })
                    })
                      , f = !0
                }
            }
            if (Travian.Player.data.population + e < Travian.Config.noobProtection.populationLimit && Travian.Player.data.population + e + b >= Travian.Config.noobProtection.populationLimit) {
                return a.openWindow("confirmAction", {}, {
                    action: "population",
                    cb: c,
                    settlersOnTheWay: f
                }, !0),
                !1
            }
            c();
            return !0
        }
    }
}
;
Travian.Service.BuildingService.$inject = ["$rootScope", "VillageService"];
Travian.Service.ChatService = function(a, c, b, f, g, e, h) {
    function m(a) {
        var b = ("" + a.data.roomId).split(".")
          , c = b[0];
        a.data.roomType = c;
        if (c == ChatRoom.TYPE_PRIVATE) {
            var e = b[2];
            b[1] != Travian.Player.data.playerId && (e = b[1]);
            a.data.isPrivateChat = !0;
            a.data.playerId = parseInt(e, 10);
            -1 === parseInt(e, 10) ? (a.data.isMassMail = !0,
            a.data.roomViewName = "Admin",
            a.data.playerName = a.data.roomViewName,
            a.data.otherPlayer = {
                data: {
                    playerId: -1
                }
            }) : Travian.nameService.getNameForId(e, function(b) {
                a.data.roomViewName = b;
                a.data.playerName = a.data.roomViewName;
                a.data.otherPlayer = L.tc(e)
            })
        } else {
            if (3 == b.length && (a.data.isMassMail = !0),
            c == ChatRoom.TYPE_KINGDOM && Travian.nameService.getNameForId(b[1], function() {
                a.data.roomViewName = Travian.translate("Chat.KingdomChat")
            }),
            c == ChatRoom.TYPE_SECRET_SOCIETY) {
                for (b = b[1],
                c = 0; c < A.data.length; c++) {
                    if (A.data[c].data.groupId == b) {
                        a.data.roomViewName = A.data[c].data.name;
                        break
                    }
                }
            }
        }
    }
    function l(a) {
        var b = a.data.playerId
          , c = a.data.roomId
          , f = ("" + c).split(".")
          , g = f[0];
        a.data.roomViewName || m(a);
        if (a.data.isMassMail) {
            a.data.ownUnread = !1;
            -1 == a.data.lastOwnRead ? a.data.linePlayerId != Travian.Player.data.playerId ? a.data.ownUnread = !0 : a.data.linePlayerId == Travian.Player.data.playerId && a.data.timestamp != a.data.lastTimestamp && (a.data.ownUnread = !0) : 0 < a.data.lastOwnRead && a.data.lastOwnRead < a.data.lastTimestamp && (a.data.ownUnread = !0);
            a.data.otherRead = 0;
            "undefined" != typeof a.data.playersRead[Travian.Player.data.playerId] && (a.data.lastOwnRead = a.data.playersRead[Travian.Player.data.playerId],
            a.data.ownUnread = a.data.lastOwnRead < a.data.lastTimestamp);
            var h = [];
            g == ChatRoom.TYPE_KINGDOM && (h = e.Sh());
            g == ChatRoom.TYPE_SECRET_SOCIETY && (h = e.ci(f[1]));
            if (null === h) {
                e.Mi(function() {
                    l(a)
                });
                return
            }
            a.data.totalParticipents = h.length - 1;
            for (b in a.data.playersRead) {
                if (b != a.data.linePlayerId) {
                    for (f = 0,
                    g = h.length; f < g; f++) {
                        if (h[f].playerId == b) {
                            a.data.otherRead++;
                            break
                        }
                    }
                }
            }
        }
        a.data.roomType == ChatRoom.TYPE_PRIVATE && (a.data.totalParticipents = 1,
        a.data.ownUnread = !1,
        a.data.otherRead = !1,
        a.data.linePlayerId != Travian.Player.data.playerId || ChatRoom.isMonologue(c) ? a.data.ownUnread = a.data.lastOwnRead < a.data.lastTimestamp : a.data.otherRead = a.data.lastOtherRead >= a.data.lastTimestamp);
        p();
        2 > Cache.Vb && (C = !0,
        B.inbox.callSubscribers(),
        C = !1)
    }
    function p() {
        B.newIGMs = 0;
        B.hasUnreadEntries = !1;
        for (var a = [], b = 0; b < B.inbox.data.length; b++) {
            var c = B.inbox.data[b];
            c.data.ownUnread && (B.hasUnreadEntries = !0,
            -1 === c.data.lastOwnRead && (B.newIGMs++,
            a.push(c)))
        }
        g.nj(a, B.newIGMs)
    }
    function n() {
        if (F) {
            for (var a = [], b = B.openChatWindows.length - 1; 0 <= b; b--) {
                a.push(B.openChatWindows[b].data.roomId)
            }
            Travian.writeRequest("player/setOpenChatWindows", {
                windows: a
            })
        }
    }
    function q() {
        null !== J && Travian.tick.unbind(J);
        var a = 0
          , b = 0
          , c = 0
          , e = 0
          , f = ChatUser.get(Travian.Player.data.playerId);
        J = Travian.tick.bind(function() {
            a++;
            if (0 == a % 100) {
                var g = z.O();
                g.current.clientX === b && g.current.clientY === c ? 0 === e ? e = (new Date).getTime() : 6E5 < (new Date).getTime() - e && f.data.status === ChatUser.STATUS_ONLINE && (f.data.status = ChatUser.STATUS_AFK,
                L.Yf(ChatUser.STATUS_AFK)) : (e = 0,
                f.data.status === ChatUser.STATUS_AFK && (f.data.status = ChatUser.STATUS_ONLINE,
                L.Yf(ChatUser.STATUS_ONLINE)));
                b = g.current.clientX;
                c = g.current.clientY
            }
        })
    }
    function r() {
        for (var b = 0, c = 0; c < B.inbox.data.length; c++) {
            var e = B.inbox.data[c];
            if (e.data.isPrivateChat && 0 < e.data.unread) {
                for (var f = !1, g = 0; g < B.openChatWindows.length; g++) {
                    B.openChatWindows[g].data.roomId == e.data.roomId && (f = !0)
                }
                f || (e = L.Ua(e.data.roomId),
                e.data.isNew = !0,
                B.openChatWindows.push(e),
                b++)
            }
        }
        0 < b && a.$broadcast("checkDynTabs")
    }
    function t() {
        var a = 10;
        if (void 0 === a || isNaN(a)) {
            a = 10
        }
        null === T && (T = setTimeout(function() {
            var a = I[0].data.roomId
              , b = u(I);
            (new Notification(b.title,b.options)).onclick = function() {
                L.ka(a);
                window.focus();
                this.cancel ? this.cancel() : this.close && this.close()
            }
            ;
            T = null;
            I = []
        }, 1E3 * a))
    }
    function u(a) {
        var b;
        if (1 == I.length) {
            b = Travian.translate("DesktopNotifications.Chat.newMessage"),
            a = a[0].data.linePlayerName + ": " + a[0].data.line
        } else {
            b = Travian.translate("DesktopNotifications.Chat.newMessages", {
                amount: a.length
            });
            var c = {};
            a.forEach(function(a) {
                var b = a.data.linePlayerId;
                c[b] || (c[b] = {
                    name: a.data.linePlayerName,
                    text: ""
                });
                c[b].text += "\n" + a.data.line
            });
            a = "";
            for (var e in c) {
                var f = c[e];
                a += f.name + ": " + f.text.substring(0, 50) + (50 < f.text.length ? "..." : "") + "\n\n"
            }
        }
        return {
            title: b,
            options: {
                body: a,
                dir: Travian.Config.direction,
                icon: "layout/images/illustration/chat/logoTK.png"
            }
        }
    }
    function w(a) {
        Q = "focus" == a.type;
        "focus" == a.type && (null !== T && (clearTimeout(T),
        T = null),
        I = [])
    }
    function s() {
        v = b.Bd();
        void 0 === v.Pg && (v.Pg = !0,
        v.on("chatCache", function(a) {
            ChatCache.fill(a);
            requestAngularApply()
        }),
        v.on("chatTyping", function(a) {
            "undefined" == typeof B.typingStatus[a.roomId] && (B.typingStatus[a.roomId] = {});
            a.playerId != Travian.Player.data.playerId && (B.typingStatus[a.roomId][a.playerId] = a.status);
            requestAngularApply()
        }),
        ChatCache.be(v),
        Travian.tick.bind("chatConnection", function() {
            B.connected = b.Nb()
        }));
        A = Society.getCollection();
        a.openChat = L.ka;
        B.chatRooms = ChatRoom.getCollection();
        void 0 !== E.chatRooms && B.chatRooms.unsubscribe(E.chatRooms);
        B.inbox = ChatInbox.getCollection();
        void 0 === E.inbox && (B.inbox.sd = !0);
        void 0 !== E.inbox && B.inbox.unsubscribe(E.inbox);
        E.inbox = B.inbox.subscribe(function() {
            if (!C) {
                for (var b = 0; b < B.inbox.data.length; b++) {
                    var c = B.inbox.data[b];
                    "undefined" == typeof D[c.serverId] && c.filled && (D[c.serverId] = c.subscribe(l));
                    for (var e = 0; e < B.openChatWindows.length; e++) {
                        if (B.openChatWindows[e].data.roomId == c.data.roomId) {
                            B.openChatWindows[e].setChatInbox(c);
                            break
                        }
                    }
                }
                for (var g in D) {
                    e = !1;
                    for (b = 0; b < B.inbox.data.length; b++) {
                        if (c = B.inbox.data[b],
                        c.serverId == g) {
                            e = !0;
                            break
                        }
                    }
                    e || delete D[g]
                }
                p();
                B.inbox.data.sort(function(a, b) {
                    return a.data.lastTimestamp > b.data.lastTimestamp ? -1 : a.data.lastTimestamp < b.data.lastTimestamp ? 1 : 0
                });
                if (0 < B.inbox.data.length) {
                    c = B.inbox.data[0].data;
                    g = !1;
                    if (f.xa("igm") || f.xa(c.roomId)) {
                        f.xa(c.roomId) || a.windows.igm.params.roomId != c.roomId ? f.xa(c.roomId) && (g = !0) : g = !0
                    }
                    if (!g) {
                        for (e = L.getViewModel().openChatWindows,
                        b = 0; b < e.length; b++) {
                            e[b].data.isDocked && e[b].data.roomId == c.roomId && (g = !0)
                        }
                    }
                    c.linePlayerId == c.myPlayerId || (!c.ownUnread || g || B.inbox.sd) || a.$broadcast("chatInboxUpdated", {
                        roomId: c.roomId
                    })
                }
                if (B.inbox.sd) {
                    B.inbox.sd = !1,
                    x()
                } else {
                    for (b = 0; b < B.inbox.data.length; b++) {
                        0 < B.inbox.data.length && (B.inbox.data[b].data.isPrivateChat && B.inbox.data[b].data.linePlayerId != Travian.Player.data.playerId && B.inbox.data[b].data.timestamp + 5E3 >= (new Date).getTime()) && ("undefined" != typeof Notification && ("undefined" != typeof Notification.requestPermission && !Q) && "granted" === Notification.permission) && (I.push(angular.copy(B.inbox.data[b])),
                        t())
                    }
                    r()
                }
            }
        });
        q();
        window.removeEventListener("blur", w, !1);
        window.removeEventListener("focus", w, !1);
        window.addEventListener("blur", w, !1);
        window.addEventListener("focus", w, !1);
        a.$broadcast("chatServiceReady")
    }
    function x() {
        Travian.request("player/getOpenChatWindows", {}, function(a) {
            F = !0;
            if ($.isArray(a)) {
                for (var b = [], c = 0; c < a.length; c++) {
                    var e = L.Ua(a[c]);
                    b.push(e.data.roomId);
                    -1 == B.openChatWindows.indexOf(e) && B.openChatWindows.push(e)
                }
                for (c = 0; c < B.openChatWindows.length; c++) {
                    -1 == b.indexOf(B.openChatWindows[c].data.roomId) && L.Dc(B.openChatWindows[c].data.roomId)
                }
            }
            r()
        })
    }
    var v = null
      , D = {}
      , C = !1
      , A = null
      , F = !1
      , B = {
        connected: !1,
        inbox: null,
        friendList: null,
        friendRequests: null,
        chatRooms: null,
        openChatWindows: [],
        unreadChatLines: {},
        newIGMs: 0,
        hasUnreadEntries: !1,
        typingStatus: {}
    }
      , E = {}
      , J = null
      , I = []
      , T = null
      , Q = !0;
    a.$on("getOpenChatWindows", x);
    var L = new function() {
        var c = this;
        this.getViewModel = function() {
            return B
        }
        ;
        this.tc = function(a, b) {
            var c = ChatUser.get(a);
            if (!c.filled) {
                for (var e in b) {
                    c.data[e] = b[e]
                }
            }
            return c
        }
        ;
        this.Uf = function(b) {
            h.putObject("desktopNotifications", {
                action: b ? "accept" : "cancel",
                timestamp: (new Date).getTime()
            });
            a.$broadcast("NotificationPermissionChange")
        }
        ;
        this.bg = function(a) {
            a = ChatRoom.isPrivate(a);
            var b = h.getObject("desktopNotifications")
              , c = "undefined" !== typeof Notification && "undefined" !== typeof Notification.permission && "default" == Notification.permission
              , b = "undefined" == typeof b || b.timestamp + 864E5 < (new Date).getTime();
            return a && c && b
        }
        ;
        this.Ua = function(a) {
            for (var b = 0; b < B.openChatWindows.length; b++) {
                if (B.openChatWindows[b].data.roomId == a) {
                    return B.openChatWindows[b]
                }
            }
            var c = new PrivateChat(a);
            c.getPlayerId() && c.setChatUser(L.tc(c.getPlayerId()));
            for (var e = null, b = 0; b < B.inbox.data.length; b++) {
                var f = B.inbox.data[b];
                if (f.data.roomId == a) {
                    e = f;
                    break
                }
            }
            c.setChatInbox(e);
            return c
        }
        ;
        this.pa = function(a) {
            return Travian.Player.data.playerId > parseInt(a, 10) ? "1." + Travian.Player.data.playerId + "." + a : "1." + a + "." + Travian.Player.data.playerId
        }
        ;
        this.qb = function(a, b) {
            return "undefined" != typeof b ? ChatLine.getCollection(a, b) : ChatLine.getCollection(a)
        }
        ;
        this.sendMessage = function(a, c) {
            b.emit("chat", "sendMessage", {
                roomId: a,
                text: c
            })
        }
        ;
        this.Vi = function(a, c) {
            b.emit("chat", "sendPrivMessage", {
                uid: a,
                text: c
            })
        }
        ;
        this.Ja = function(a) {
            b.emit("chat", "markAsRead", a)
        }
        ;
        this.Rc = function(a, c) {
            parseInt(("" + a).split(".")[0], 10) === ChatRoom.TYPE_PRIVATE && b.emit("chat", "setTypingStatus", {
                roomId: a,
                status: c
            })
        }
        ;
        this.mh = function(a) {
            b.emit("chat", "deleteInboxEntry", a)
        }
        ;
        this.Yf = function(a) {
            b.emit("chat", "setOnlineStatus", a)
        }
        ;
        this.xi = function(a) {
            b.emit("chat", "joinRoom", a)
        }
        ;
        this.zh = function(a) {
            b.emit("chat", "enterRoom", a)
        }
        ;
        this.$h = function(a) {
            b.emit("chat", "getRoomOnlinePlayers", a)
        }
        ;
        this.Dc = function(a) {
            for (var e = 0; e < B.openChatWindows.length; e++) {
                if (B.openChatWindows[e].data.roomId == a) {
                    B.openChatWindows.splice(e, 1);
                    n();
                    break
                }
            }
            ("" + a).split(".")[0] != ChatRoom.TYPE_PRIVATE && b.emit("chat", "leaveRoom", a);
            c.Gc(a)
        }
        ;
        this.ka = function(b, e, g) {
            e = "undefined" == typeof e ? b : c.pa(b);
            b = c.Ua(b);
            b.data.isDocked ? g ? (b.data.isDocked = !1,
            a.$broadcast("setActiveChatRoom", null)) : a.$broadcast("setActiveChatRoom", e) : f.xa(e) || (b.data.isNew ? (b.data.isNew = !1,
            n()) : c.Yg(b),
            b.data.isDocked = !0,
            a.$broadcast("checkDynTabs"),
            a.$broadcast("setActiveChatRoom", e))
        }
        ;
        this.Yg = function(b) {
            for (var c = !1, e = 0; e < B.openChatWindows.length; e++) {
                B.openChatWindows[e].data.roomId == b.data.roomId && (c = !0)
            }
            c || (B.openChatWindows.push(b),
            a.$broadcast("setActiveChatRoom", b.data.roomId),
            n())
        }
        ;
        this.Gc = function(b, c) {
            L.Ua(b).data.isDocked = c;
            a.$broadcast("checkDynTabs")
        }
        ;
        this.Yd = function(b, c) {
            b !== ChatRoom.GLOBAL && b !== ChatRoom.BEGINNER || !Travian.Config.features.chatAutoBan ? Travian.request("player/reportConversation", {
                roomId: b
            }, function() {
                var e = {
                    roomId: b
                };
                c && (e.playerId = c);
                a.openWindow("reportConversation", e)
            }) : a.openWindow("reportConversation", {
                roomId: b,
                playerId: c
            })
        }
        ;
        this.Qi = function(b, c) {
            Travian.request("player/reportConversationFinalize", {
                roomId: b,
                comment: c
            }, function() {
                a.closeWindow("reportConversation")
            })
        }
        ;
        this.ih = function(a) {
            b.emit("chat", "closeRoom", a)
        }
        ;
        this.Gi = function(a) {
            b.emit("chat", "openRoom", a)
        }
        ;
        this.Ri = function(a, b, c, e) {
            Travian.request("player/reportPlayer", {
                roomId: a,
                playerId: b,
                reason: c
            }, function(a) {
                e(a)
            })
        }
        ;
        this.yf = function(a) {
            b.emit("chat", "ignorePlayer", a)
        }
    }
    ;
    b.Ac() && s();
    a.$on("socketConnected", s);
    return L
}
;
Travian.Service.ChatService.$inject = "$rootScope SessionService SocketService WindowService NotificationService MembershipService $cookies FriendService".split(" ");
Travian.Service.FriendService = function(a, c) {
    function b(a, b) {
        this.Sg = a;
        this.jb = b;
        this.kb = {
            connected: !1,
            friends: void 0,
            friendRequests: void 0
        };
        this.mg = {};
        b.Ac() && this.He();
        a.$on("socketConnected", this.He.bind(this))
    }
    b.prototype = {
        getViewModel: function() {
            return this.kb
        },
        ti: function(a) {
            return !!this.wd(a)
        },
        vi: function(a) {
            return !!this.xd(a)
        },
        He: function() {
            var a = this.jb
              , b = this.kb
              , c = a.Bd();
            void 0 === c.Tg && (c.Tg = !0,
            c.on("friendCache", function(a) {
                FriendCache.fill(a);
                requestAngularApply()
            }),
            FriendCache.be(c),
            Travian.tick.bind("chatConnection", function() {
                b.connected = a.Nb()
            }));
            b.friendRequests = FriendRequest.getCollection();
            b.friends = Friend.getCollection();
            void 0 !== this.mg.friends && b.friends.unsubscribe(this.mg.friends);
            this.Sg.$broadcast("friendServiceReady")
        },
        wd: function(a) {
            var b = this.kb;
            if (b.connected) {
                for (var c = 0; c < b.friends.data.length; c++) {
                    if (b.friends.data[c].data.playerId == a) {
                        return b.friends.data[c]
                    }
                }
            }
        },
        Oh: function(a) {
            var b = this.kb;
            if (b.connected) {
                for (var c = 0; c < b.friends.data.length; c++) {
                    if (b.friends.data[c].data.userAccountIdentifier == a) {
                        return b.friends.data[c]
                    }
                }
            }
        },
        xd: function(a) {
            var b = this.kb;
            if (b.connected) {
                for (var c = 0; c < b.friendRequests.data.length; c++) {
                    if (b.friendRequests.data[c].data.playerId == a) {
                        return b.friendRequests.data[c]
                    }
                }
            }
        },
        Ph: function(a) {
            var b = this.kb;
            if (b.connected) {
                for (var c = 0; c < b.friendRequests.data.length; c++) {
                    if (b.friendRequests.data[c].data.userAccountIdentifier == a) {
                        return b.friendRequests.data[c]
                    }
                }
            }
        },
        fd: function(a) {
            this.jb.emit("Friend", "addFriend", {
                addFriendAs: a.addFriendAs,
                friendPlayerId: a.friendPlayerId
            })
        },
        Ye: function(a) {
            this.jb.emit("Friend", "deleteFriend", {
                friendUserAccountIdentifier: a
            })
        },
        Ie: function(a, b) {
            this.jb.emit("Friend", "acceptFriend", {
                userAccountIdentifier: a,
                timestamp: b
            })
        },
        We: function(a, b) {
            this.jb.emit("Friend", "declineFriend", {
                friendUserAccountIdentifier: a,
                timestamp: b
            })
        },
        Pe: function(a, b) {
            this.jb.emit("Friend", "cancelFriendRequest", {
                friendUserAccountIdentifier: a,
                timestamp: b
            })
        }
    };
    return new b(a,c)
}
;
Travian.Service.FriendService.$inject = ["$rootScope", "SocketService"];
var hb = new function() {
    function a(b, c) {
        a.bd = 1;
        a.dd = 2;
        this.Kb = c;
        this.Qd = null;
        this.type = b;
        this.If = this.Nd = null
    }
    function c(a, b, c, e) {
        var f = a.getContext("2d");
        a.width = b;
        a.height = c;
        if (3 < arguments.length) {
            for (var g = 0; g < e.length; g++) {
                e[g].hasAttribute("crossOrigin") || e[g].setAttribute("crossOrigin", "anonymous"),
                f.drawImage(e[g], 0, 0)
            }
        }
        if (f.getImageData) {
            return f.getImageData(0, 0, b, c)
        }
        if (f.createImageData) {
            return f.createImageData(b, c)
        }
    }
    function b(a, b, e) {
        var f = document.createElement("canvas")
          , g = new Image;
        g.setAttribute("crossOrigin", "anonymous");
        if (f.getContext) {
            if ("undefined" != typeof n[a]) {
                return n[a]
            }
            var q = 1
              , r = function() {
                if (q < b.length + 1) {
                    q++
                } else {
                    var a = document.createElement("canvas")
                      , n = [g]
                      , r = g.width
                      , t = g.height;
                    if (0 < b.length) {
                        for (var u = 0; u < n.length; u++) {
                            b[u].width > r && (r = b[u].width),
                            b[u].height > t && (t = b[u].height)
                        }
                        n = b.concat(n)
                    }
                    n = c(a, r, t, n).data;
                    r = m;
                    e && (r = e);
                    for (var t = a.width + 2 * r, u = c(f, t, a.height + 2 * r), A = u.data, F = [], C = 0; C < a.width; C++) {
                        for (var N = 0; N < a.height; N++) {
                            var P = n[4 * (C + N * a.width) + 3]
                              , M = !1;
                            if (0 == C || 0 == N || C == a.width - 1 || N == a.height - 1) {
                                P > p && (M = !0)
                            } else {
                                if (P > p) {
                                    for (var R = C - 1; R <= C + 1; R++) {
                                        for (var aa = N - 1; aa <= N + 1; aa++) {
                                            if (n[4 * (R + aa * a.width) + 3] <= p) {
                                                M = !0;
                                                R = C + 2;
                                                break
                                            }
                                        }
                                    }
                                }
                            }
                            M && (A[4 * (C + r + (N + r) * t)] = h.r,
                            A[4 * (C + r + (N + r) * t) + 1] = h.g,
                            A[4 * (C + r + (N + r) * t) + 2] = h.b,
                            A[4 * (C + r + (N + r) * t) + 3] = 255,
                            hash = 1E4 * (C + r) + (N + r),
                            F[hash] = 0)
                        }
                    }
                    M = [];
                    for (R = -1; 1 >= R; R++) {
                        for (M[R] = [],
                        aa = -1; 1 >= aa; aa++) {
                            M[R][aa] = Math.sqrt(Math.pow(R, 2) + Math.pow(aa, 2))
                        }
                    }
                    for (rr = 1; rr <= r; rr++) {
                        newOutlineHash = [];
                        for (coord in F) {
                            for (var ga = F[coord], C = Math.floor(coord / 1E4), N = coord % 1E4, R = C - 1; R <= C + 1; R++) {
                                for (aa = N - 1; aa <= N + 1; aa++) {
                                    if (R != C || aa != N) {
                                        d = M[R - C][aa - N];
                                        var U = A[4 * (R + aa * t) + 3]
                                          , ca = 0;
                                        if (1 == rr) {
                                            var P = R - r
                                              , K = aa - r;
                                            0 <= P && (0 <= K && P < a.width && K < a.height) && (ca = n[4 * (P + K * a.width) + 3])
                                        }
                                        P = 2 * (127 - Math.ceil(120 * (ga + d) / r * l));
                                        U < P && (ca < p && 0 < P) && (A[4 * (R + aa * t)] = h.r,
                                        A[4 * (R + aa * t) + 1] = h.g,
                                        A[4 * (R + aa * t) + 2] = h.b,
                                        A[4 * (R + aa * t) + 3] = P,
                                        hash = 1E4 * R + aa,
                                        newOutlineHash[hash] = ga + d)
                                    }
                                }
                            }
                        }
                        F = newOutlineHash
                    }
                    f.getContext("2d").putImageData(u, 0, 0)
                }
            };
            if (b) {
                for (var t = 0; t < b.length; t++) {
                    var F = new Image;
                    F.setAttribute("crossOrigin", "anonymous");
                    F.src = b[t];
                    F.onload = r;
                    b[t] = F
                }
            } else {
                b = []
            }
            g.setAttribute("crossOrigin", "anonymous");
            g.src = a;
            g.onload = r;
            return n[a] = f
        }
        g.src = "api/getGlowImage.php?file=" + a;
        return g
    }
    function f(a) {
        if ("IMG" == a.tagName) {
            return {
                el: a,
                imgName: a.src
            }
        }
        var b = computedStyle(a, "background-image");
        if (null != b && "none" != b) {
            "url" == b.substring(0, 3) && (b = b.substring(b.indexOf("(") + 1),
            b = b.substring(0, b.indexOf(")")));
            if ('"' == b.substring(0, 1) || "'" == b.substring(0, 1)) {
                b = b.substring(1),
                b = b.substring(0, b.length - 1)
            }
            return {
                el: a,
                imgName: b
            }
        }
        for (; 0 < a.childNodes; ) {
            return f(a.childNodes[0])
        }
        return !1
    }
    function g(a) {
        var b = 0
          , c = 0;
        if ("absolute" == computedStyle(a, "position")) {
            var b = parseInt(computedStyle(a, "left")) + parseInt(computedStyle(a, "margin-left"))
              , e = parseInt(computedStyle(a, "right")) + parseInt(computedStyle(a, "margin-right"))
              , c = parseInt(computedStyle(a, "top")) + parseInt(computedStyle(a, "margin-top"));
            return e ? {
                x: e,
                y: c,
                el: a,
                dir: "rtl"
            } : {
                x: b,
                y: c,
                el: a,
                dir: "ltr"
            }
        }
        for (; a.offsetParent; ) {
            b += a.offsetLeft;
            c += a.offsetTop;
            e = computedStyle(a.offsetParent, "position");
            if ("absolute" == e || "relative" == e) {
                return {
                    x: b,
                    y: c,
                    el: a
                }
            }
            a = a.offsetParent
        }
        b += a.offsetLeft;
        c += a.offsetTop;
        return {
            x: b,
            y: c,
            el: a
        }
    }
    function e(a) {
        for (var b = 0, c = r.length; b < c; b++) {
            var e = r[b];
            if (e.Kb == a || e.Qd == a || e.Nd == a) {
                return e
            }
        }
        return null
    }
    var h = {
        r: 255,
        g: 255,
        b: 255
    }
      , m = 2
      , l = 0
      , p = 100
      , n = {}
      , q = []
      , r = []
      , t = this;
    this.Pi = function(b) {
        b = e(b);
        if (null != b) {
            b.type == a.dd && null != b.Kb && (b.Kb.style.textShadow = b.If);
            b.type == a.bd && null != b.Kb.parentNode && b.Kb.parentNode.removeChild(b.Nd);
            for (var c = 0, f = r.length; c < f; c++) {
                if (r[c] == b) {
                    r.splice(c, 1);
                    break
                }
            }
        }
    }
    ;
    this.Sd = function(c, h, l, n) {
        if ("undefined" != typeof c && null == e(c)) {
            var p = null
              , q = f(c);
            if (!1 !== q) {
                var t = g(q.el);
                h = b(q.imgName, h, n);
                h.style.position = "absolute";
                "rtl" == t.dir ? h.style.right = parseInt(t.x) - m + 1 + "px" : h.style.left = parseInt(t.x) - m + 1 + "px";
                h.style.top = parseInt(t.y) - m + "px";
                h.style.zIndex = computedStyle(q.el, "z-index");
                l && (h.style.zIndex = l);
                q.el.parentNode && (q.el.parentNode.insertBefore(h, q.el),
                p = new a(a.bd,q.el),
                p.type = a.bd,
                p.Qd = c,
                p.Nd = h)
            } else {
                p = new a(a.dd,c),
                p.type = a.dd,
                p.Qd = c,
                p.If = computedStyle(c, "text-shadow")
            }
            null != p && (p.animation = !1,
            r.push(p))
        }
    }
    ;
    this.fg = function(a, b, c) {
        t.Xd(a);
        computedStyle(a, "width");
        computedStyle(a, "height");
        var e = 2;
        c && (e = 15);
        b = b.split(",");
        for (var f = 9999, g = 0, h = 9999, l = 0, m = 0; m < b.length; m += 2) {
            var n = parseInt(b[m])
              , p = parseInt(b[m + 1]);
            n > g && (g = n);
            p > l && (l = p);
            n < f && (f = n);
            p < h && (h = p)
        }
        var q = document.createElement("canvas")
          , r = q.getContext("2d");
        q.width = (g - f + 2 * e) / e;
        q.height = (l - h + 2 * e) / e;
        r.fillStyle = c ? "rgba(255,255,255,0.6)" : "rgba(255,255,255,0.2)";
        r.strokeStyle = "rgba(255,255,255,1)";
        r.lineWidth = 1;
        r.beginPath();
        for (m = 0; m < b.length; m += 2) {
            n = parseInt(b[m]) - f + e,
            p = parseInt(b[m + 1]) - h + e,
            0 == m ? r.moveTo(n / e, p / e) : r.lineTo(n / e, p / e)
        }
        r.closePath();
        c ? r.fill() : (r.fill(),
        r.stroke());
        q.style.position = "absolute";
        q.style.zIndex = 1;
        q.style.left = f - e + "px";
        q.style.top = h - e + "px";
        q.style.width = g - f + 2 * e + "px";
        q.style.height = l - h + 2 * e + "px";
        q.style.filter = "blur(8px)";
        a.Ed = q;
        a.appendChild(q)
    }
    ;
    this.Xd = function(a) {
        "undefined" != typeof a.Ed && (a.removeChild(a.Ed),
        delete a.Ed)
    }
    ;
    this.Vg = function(a, b) {
        var c = void 0
          , e = ""
          , f = {};
        "undefined" != typeof a.elem && (f = a,
        e = a.additionalClass,
        a = a.elem);
        if (0 == a.length) {
            return !1
        }
        var g = a[0].getBoundingClientRect()
          , h = $(window).scrollTop()
          , l = $(window).scrollLeft()
          , g = {
            width: g.right - g.left,
            height: g.bottom - g.top,
            top: g.top + h,
            left: g.left + l
        };
        if (g.top <= h && g.left <= l && 0 == g.width && 0 == g.height) {
            return !1
        }
        "undefined" != typeof a.arrowOffset && (g.top += a.arrowOffset.top,
        g.left += a.arrowOffset.left);
        "undefined" != typeof f.offset && (g.top += f.offset.top,
        g.left += f.offset.left);
        h = null;
        for (l = 0; l < q.length; l++) {
            q[l].target[0] == a[0] && (h = q[l].el)
        }
        var l = "up"
          , m = "tutorial_arrowUp_large_illu";
        c || (c = "tutorialArrow");
        "questMarker" == c && (l = "down");
        "undefined" != typeof f.direction && (l = f.direction,
        m = "tutorial_arrow" + (l.charAt(0).toUpperCase() + l.slice(1)) + "_large_illu");
        "undefined" != typeof f.type && (c = f.type);
        "undefined" != typeof f.width && (g.width = f.width);
        f = "";
        typeof c && (f = c + " " + l + " " + e + " " + m);
        null == h ? (h = document.createElement("div"),
        h.className = f,
        document.body.appendChild(h),
        q.push({
            target: a,
            el: h,
            group: b
        }),
        window.getComputedStyle(h).opacity,
        h.style.opacity = 1) : h.className != f && (h.className = f);
        h.style.left = g.left + g.width / 2 + "px";
        "up" == l && (h.style.top = g.top + g.height + "px");
        "down" == l && (h.Oe || (h.Oe = $(h).height()),
        h.style.top = g.top - h.Oe + "px");
        h.style.zIndex = 4060;
        return !0
    }
    ;
    this.Pc = function(a, b) {
        for (var c = 0; c < b.length; c++) {
            this.Vg(b[c], a) || (b.splice(c, 1),
            c--)
        }
        for (var e = 0; e < q.length; e++) {
            if (q[e].group == a) {
                for (var f = !1, c = 0; c < b.length; c++) {
                    "undefined" != typeof b[c].elem && (b[c] = b[c].elem),
                    q[e].target[0] == b[c][0] && (f = !0)
                }
                f || (document.body.removeChild(q[e].el),
                q.splice(e, 1),
                e--)
            }
        }
    }
}
;
window.Highlighting = hb;
"use strict";
Travian.Service.MapService = function(a, c, b, f, g) {
    function e() {
        for (var a = 0; a < x.length; a++) {
            var b = x[a];
            null != w && b.bj(w.getTreaties());
            b.Z()
        }
    }
    function h(a, b) {
        x.push(a);
        s ? e() : (s = !0,
        b.subscribe(function() {
            w = Kingdom.get(b.data.kingdomId);
            w.subscribe(e);
            b.isOnMap() ? q.Ka = Travian.Config.worldRadius : q.Ka = 4
        }),
        KingdomMemberlist.getCollection().subscribe(e))
    }
    function m() {
        for (var a = {}, b = u.v(null, [Troops.COLLECTION_MOVING]), c = [], e = 0; e < b.length; e++) {
            var f = b[e]
              , g = 0;
            if ("undefined" != typeof f.data.movement && "undefined" != typeof f.data.movement.villageIdTarget) {
                var h = f.data.movement.villageIdTarget
                  , g = h
                  , l = f.data.movement.movementType;
                if (1 == h) {
                    var n = r.P("1_1", Ka, 0);
                    0 < n.Rb && window.setTimeout(m, 100);
                    "undefined" != typeof n.village && null != n.village && (h = n.id);
                    n = r.P("0_1", Ka, 0);
                    "undefined" != typeof n.village && null != n.village && (h = n.id)
                }
                1 == f.data.movement.villageIdStart && 0 > h && (h = 536887296);
                0 < f.data.movement.coordinateID && (h = f.data.movement.coordinateID);
                f.isAttacking && (l = Troops.MOVEMENT_TYPE_ATTACK)
            } else {
                if (g = h = f.data.toVillageId,
                l = Troops.MOVEMENT_TYPE_TRANSPORT,
                0 != f.data.direction) {
                    continue
                }
            }
            "undefined" == typeof a[h] && (a[h] = {});
            "undefined" == typeof a[h][l] && (g = f.getMovementGroup(g),
            a[h][l] = {
                cnt: 0,
                first: -1,
                group: g,
                icon: Troops.MOVEMENT_ICON[f.data.movement.movementType],
                realPlayer: !1
            });
            c.push(f.data.troopId);
            h = a[h][l];
            h.cnt++;
            if (-1 == h.first || h.first > f.data.movement.timeFinish) {
                h.first = f.data.movement.timeFinish
            }
            !h.realPlayer && 0 <= f.data.movement.villageIdStart && (h.realPlayer = !0)
        }
        b = u.v(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]);
        for (e = 0; e < b.length; e++) {
            if (f = b[e],
            !(0 <= c.indexOf(f.data.troopId))) {
                h = f.data.villageIdTarget;
                f.data.movement = f.data;
                l = Troops.MOVEMENT_TYPE_RAID;
                "undefined" == typeof a[h] && (a[h] = {});
                "undefined" == typeof a[h][l] && (a[h][l] = {
                    cnt: 0,
                    first: -1,
                    group: "incoming_attacks",
                    icon: "movement_attack_small_flat_black",
                    realPlayer: !1
                });
                h = a[h][l];
                h.cnt++;
                if (-1 == h.first || h.first > f.data.movement.timeFinish) {
                    h.first = f.data.movement.timeFinish
                }
                !h.realPlayer && 0 <= f.data.movement.villageIdStart && (h.realPlayer = !0)
            }
        }
        r.mj(a)
    }
    function l(a) {
        var b = new V($(document).width(),$(document).height())
          , e = new V(126,68)
          , l = Travian.Config.cdnPrefix + ""
          , s = c.p()
          , t = Marker.getCollection();
        n = new Ga(l);
        r = new Wa(t);
        var l = Gameworld.isNightTruceActive() || Gameworld.isHalloween() && !Gameworld.hasNightTruce() ? 1 : 0
          , w = Travian.Config.season && Settings.get(Travian.Player.data.playerId).data.showSeasonalTheme ? Travian.Config.season : "";
        q = new $a(r,b,e,e,n,s,l,w);
        $(window).on("resize", function() {
            var a = new V($(document).width(),$(document).height());
            q.fj(a);
            p.Z()
        });
        p = new Ia(r,q,a,s,g);
        t.subscribe(function() {
            r.Qf();
            p.Z()
        });
        h(p, s);
        u = f.H(null, [Troops.COLLECTION_MOVING, TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], m)
    }
    var p = null
      , n = null
      , q = null
      , r = null
      , t = null
      , u = null
      , w = null
      , s = !1
      , x = [];
    b.$on("activeVillageChanged", function() {
        var b = a.i();
        null != p && p.oa(b.data.x, b.data.y)
    });
    b.$on("mapChanged", function(a, b) {
        null != p && r.nh(b)
    });
    b.$on("mapReport", function(a, b) {
        null != p && r.ej(b)
    });
    b.$on("reload", function() {
        null != p && (p.wb(),
        r.wb())
    });
    b.$on("clearCache", function() {
        null != p && (p.wb(),
        r.wb())
    });
    return new function() {
        var e = null;
        this.init = function(b) {
            null == p && l(this);
            q.Je($("#map")[0]);
            if (null != t) {
                p.oa(t.x, t.y, !1, !0)
            } else {
                var c = a.i();
                p.oa(c.x, c.y, !1, !0)
            }
            p.Z();
            p.$d(b);
            return p
        }
        ;
        this.dj = function(a) {
            "function" == typeof a && (e = a)
        }
        ;
        this.kh = function(a, b, e) {
            null == p && l(this);
            var f = new V($(b).width(),$(b).height())
              , m = new V(126,68)
              , m = m.multiply(0.15)
              , q = c.p()
              , f = new $a(r,f,new V(126,68),m,n,q);
            f.Je($(b)[0]);
            b = new Ia(r,f,this,q,g);
            b.ce(2, 0.08, !0);
            h(b, q);
            a = id2xy(a);
            b.oa(a.x, a.y, !0, !1, !0);
            b.Z();
            b.$d(e);
            return b
        }
        ;
        this.Th = function() {
            return p
        }
        ;
        this.rc = function(a, b) {
            r || l(this);
            if (void 0 === b) {
                var c = Ma(a);
                a = c.x;
                b = c.y
            }
            return r.P(a + "_" + b, Ka, 0)
        }
        ;
        this.Bh = function(a, c) {
            b.$broadcast("contextMenuOpen", a, c)
        }
        ;
        this.Ah = function() {
            b.$broadcast("contextMenuClose", void 0)
        }
        ;
        this.fh = function(b) {
            a.ea(b)
        }
        ;
        this.Cj = function(a) {
            t = {
                x: a.x,
                y: a.y
            };
            "function" == typeof e && e({
                x: Math.round(t.x),
                y: Math.round(t.y)
            })
        }
        ;
        this.Tf = function(a) {
            null != p && (a = id2xy(a),
            p.oa(a.x, a.y))
        }
        ;
        this.sc = function() {
            if (null != p) {
                var a = p.sc();
                return {
                    x: Math.round(a.x),
                    y: Math.round(a.y)
                }
            }
        }
        ;
        this.setSeason = function(a) {
            p && p.setSeason(a)
        }
        ;
        this.Zh = function(a) {
            return null != p ? r.vc(a) : null
        }
        ;
        this.oh = function(a) {
            a = x.indexOf(a);
            0 <= a && x.splice(a, 1)
        }
    }
}
;
Travian.Service.MapService.$inject = ["VillageService", "SessionService", "$rootScope", "TroopsService", "AudioService"];
"use strict";
Travian.Service.MellonService = function(a, c, b, f, g) {
    function e() {
        p = new MellonBridge(l);
        var b = c.url();
        if (b && -1 !== b.indexOf("msid=")) {
            var b = b.match(/msid=([a-z0-9]+)/)[1] || !1
              , e = p.getCookie("msid");
            b && b != e && p.setCookie("msid", b)
        }
        window.mellonBridgeInit || (window.mellonBridgeInit = function(b) {
            var c = p.getNewChannel(b);
            c.on("close", function() {
                var a = $("div.jqFensterModal:visible");
                a.length && $.fensterFinder(a).close().destroy()
            }).on("redirect", function(a) {
                window.location.href = a.url
            }).on("resize", function(a, b) {
                0 < $(".jqEbony").length && ($(".jqFensterModalContent iframe").css({
                    width: a,
                    height: b + 10
                }),
                $(".jqFensterModal").css("opacity", 1),
                $(".jqEbony").removeClass("loading"))
            }).on("marketingTracking", function(a) {
                p.getTrackingIframeCallback()(a, y())
            }).on("event", function(b) {
                a.$broadcast("mellonEvent", b)
            });
            return c.createInstance(b)
        }
        )
    }
    function h(a) {
        l.application.languageId = getLocale(a);
        e()
    }
    var m = {
        getBase: ba("")
    };
    config.mellon.url && (m = new MellonUrl(config.mellon.url));
    var l = {
        url: m.getBase(),
        application: {
            id: config.mellon.applicationId,
            countryId: config.mellon.applicationCountryId,
            instanceId: config.mellon.applicationInstanceId,
            languageId: "en_US",
            inGame: !0,
            styles: config.mellon.styles
        },
        mellon: {
            cookie: {
                domain: config.mellon.cookieDomain,
                expires: 14
            }
        }
    }
      , p = null;
    f.m(function() {
        var a = Settings.get(Travian.Player.data.playerId);
        h(a.data.lang);
        a.subscribe(function() {
            h(a.data.lang)
        });
        var b = f.Cd();
        if (b) {
            var c = f.Dh();
            c && (m.getAjaxSessionValidate && null != p) && (b = m.getAjaxSessionValidate(b, c),
            b = b + "?msid=" + p.getCookie("msid"),
            $.ajax({
                url: b,
                type: "GET",
                Zj: "json",
                success: function(a) {
                    a.isValid || ("undefined" == typeof config.mellon.checkSession || !config.mellon.checkSession || f.qi()) || (g.remove("msid"),
                    f.Wa())
                }
            }))
        }
    });
    $(window).on("mellon.modalOpen", function() {
        $(".jqEbony").addClass("loading");
        window.setTimeout(function() {
            $(".jqEbony").addClass("fadeIn")
        }, 1200)
    });
    $(window).on("mellon.modalClose", function() {
        $(".jqFensterModal").css("opacity", 0)
    });
    e();
    a.$on("mellonEvent", function(a, b) {
        switch (b) {
        case "instantUpgradeDone":
            $(".jqFensterModalClose").trigger("click");
            break;
        case "instantMergeDone":
            $(".jqFensterModalClose").trigger("click");
            break;
        case "accountActivated":
            $(".jqFensterModalClose").trigger("click")
        }
    });
    return new function() {
        this.wa = function() {
            return m
        }
        ;
        this.Xf = function(a) {
            h(a)
        }
        ;
        this.Fa = function(a, c) {
            var e = $.fenster("#jqFensterModalLayout");
            e.element.data("mellonIframeUrl", a);
            e.options.delayOpen = 100;
            e.options.callbackOpen = function() {
                b.getParam("mellonPopup") != c && b.o("mellonPopup", c)
            }
            ;
            $(".jqFensterHolder").on("jqFensterCallbackClose", function() {
                b.l("mellonPopup")
            });
            return e
        }
    }
}
;
Travian.Service.MellonService.$inject = ["$rootScope", "$location", "RoutingService", "SessionService", "$cookies"];
"use strict";
Travian.Service.MembershipService = function(a, c) {
    function b() {
        var a = n;
        n = [];
        for (var b = 0; b < a.length; b++) {
            a[b]()
        }
    }
    function f() {
        p = !0;
        0 < Travian.Player.data.kingdomId && Travian.Player.data.kingdomId != g && (g = Travian.Player.data.kingdomId,
        null != m && e.unsubscribe(m),
        e = Player.getCollection(Player.COLLECTION_KINGDOM, Travian.Player.data.kingdomId),
        m = e.subscribe(function() {
            h = [];
            for (var a = 0; a < e.data.length; a++) {
                h.push(e.data[a].data)
            }
            b()
        }));
        b()
    }
    var g = -1
      , e = null
      , h = []
      , m = null
      , l = null
      , p = !1
      , n = [];
    c.m(function() {
        Travian.Player.subscribe(f);
        l = Society.getCollection()
    });
    return new function() {
        this.Mi = function(a) {
            n.push(a)
        }
        ;
        this.Sh = function() {
            return p ? null == e ? [] : e.filled ? h : null : null
        }
        ;
        this.ci = function(a) {
            if (!l.filled) {
                return null
            }
            for (var b = 0, c = l.data.length; b < c; b++) {
                if (l.data[b].data.groupId == a) {
                    return l.data[b].data.members
                }
            }
            return []
        }
    }
}
;
Travian.Service.MembershipService.$inject = ["$rootScope", "SessionService"];
Travian.Service.NotificationService = function(a, c, b) {
    function f(a, b) {
        b || (b = Notifications.TYPE_FLASH);
        if (b == Notifications.TYPE_FLASH) {
            for (var c = 0, e = h.length; c < e; c++) {
                if (h[c].id == a.id) {
                    h.splice(c, 1);
                    return
                }
            }
        }
        if (b == Notifications.TYPE_CHAT) {
            for (c = 0,
            e = l.length; c < e; c++) {
                if (l[c].id == a.id) {
                    l.splice(c, 1);
                    break
                }
            }
        }
    }
    function g(b) {
        if ((0 < p || 0 < m.data.length) && !0 == r) {
            for (var e = 0, f = 0; f < m.data.length; f++) {
                e += m.data[f].data.count
            }
            a.webPageTitle = "(" + (e + p) + ") ";
            a.webPageTitle = b ? 0 < p && 0 < e ? Travian.translate("TravianTitle.ReportsAndChat", {
                amount: e + p
            }) : 0 < p ? 1 == n.length ? Travian.translate("TravianTitle.ChatRoom", {
                amount: p,
                name: n[0].data.roomViewName
            }) : Travian.translate("TravianTitle.ChatMessages", {
                amount: e + p
            }) : Travian.translate("TravianTitle.Reports", {
                amount: e + p
            }) : a.webPageTitle + (Travian.translate("TravianTitle") + " " + config.gameWorld);
            null == q && (q = c(function() {
                q = null;
                g(!b)
            }, 3E3))
        } else {
            a.webPageTitle = Travian.translate("TravianTitle") + " " + config.gameWorld
        }
    }
    function e() {
        var a = b.getPlayerId();
        0 < a ? (r = Settings.get(a).data.enableTabNotifications,
        Cache.B(m),
        m = Notifications.getCollection(),
        m.subscribe(g)) : window.setTimeout(e, 50)
    }
    var h = []
      , m = Cache.Ta(Notifications.getCollection)
      , l = []
      , p = 0
      , n = null
      , q = null
      , r = !0;
    b.m(e);
    return new function() {
        this.lb = function(a, b, e) {
            e || (e = -1);
            for (var g = null, l = 0, m = h.length; l < m; l++) {
                if (h[l].text == a) {
                    g = h[l];
                    g.count++;
                    break
                }
            }
            null == g && (g = {
                id: b + "_" + Math.random(),
                text: a,
                type: b,
                timeout: e,
                "class": "",
                count: 1,
                timer: null
            },
            h.push(g));
            0 < e && (c(function() {
                g["class"] = "fadeOut"
            }, e),
            null != g.timer && c.cancel(g.timer),
            g.timer = c(function() {
                f(g)
            }, e + 1E3))
        }
        ;
        this.jd = function(a) {
            null != a.fadeOutTimeout && c.cancel(a.fadeOutTimeout);
            null != a.timer && c.cancel(a.timer)
        }
        ;
        this.setTimeout = function(a) {
            a.fadeOutTimeout = c(function() {
                a["class"] = "fadeOut"
            }, a.timeout);
            a.timer = c(function() {
                f(a, a.type)
            }, a.timeout + 1E3)
        }
        ;
        this.Wg = function(a) {
            for (var b = 0; b < l.length; b++) {
                if (l[b].timestamp == a.timestamp && l[b].text == a.text && l[b].playerId == a.playerId) {
                    return
                }
            }
            a.id = Notifications.TYPE_CHAT + "_" + Math.random();
            a.timeout = 3500;
            a.type = Notifications.TYPE_CHAT;
            a.fadeOutTimeout = null;
            a.timer = null;
            a["class"] = "";
            3 <= l.length && (this.jd(a),
            this.remove(l[0], Notifications.TYPE_CHAT));
            l.push(a);
            this.setTimeout(a)
        }
        ;
        this.remove = function(a, b) {
            f(a, b)
        }
        ;
        this.Nh = function() {
            return h
        }
        ;
        this.qf = function() {
            return m
        }
        ;
        this.Jh = function() {
            return l
        }
        ;
        this.nj = function(a, b) {
            p = b;
            n = a;
            g()
        }
        ;
        this.$i = function(a) {
            r = a;
            null == q && g()
        }
    }
}
;
Travian.Service.NotificationService.$inject = ["$rootScope", "$timeout", "SessionService"];
"use strict";
Travian.Service.PaynetService = function(a, c) {
    var b, f, g, e, h, m;
    function l(b, c) {
        !F || c ? (J.push(b),
        1 == J.length && Travian.request("payment/getShopParameters", {}, function(b) {
            if (b && b.session && !b.errors) {
                F = b;
                r(F.session);
                for (var c in J) {
                    J[c](F)
                }
            } else {
                a.$broadcast("shopUnavailable"),
                E && console.log("Fetching shop parameters failed")
            }
            J = []
        })) : b(F)
    }
    function p(a, b, c, e, f) {
        I.push(arguments);
        1 == I.length && q.apply(null, I[0])
    }
    function n() {
        I.shift();
        0 < I.length && q.apply(null, I[0])
    }
    function q(b, e, f, g, h) {
        l(function() {
            if (F && F.accessToken && F.session && F.checkoutUrl) {
                r();
                var h = [F.checkoutUrl + "/" + b.mb + (g ? "/" + g : ""), {
                    headers: {
                        Authorization: "Bearer " + F.accessToken,
                        Session: F.session
                    }
                }];
                "post" != b.type && "put" != b.type || h.splice(1, 0, f);
                c[b.type].apply(this, h).success(function(a, b, c) {
                    r(c("session"));
                    n();
                    e(a)
                }).error(function(a, c, g) {
                    r(g("session"));
                    n();
                    switch (parseInt(a.message.split(":")[0])) {
                    case s.Ce:
                        p(w.xe, function() {
                            p(b, e, f)
                        });
                        break;
                    default:
                        E && console.log("Paynet error: " + a.message)
                    }
                })
            } else {
                F = null,
                a.$broadcast("shopUnavailable"),
                n()
            }
        }, h)
    }
    function r(a) {
        if (F) {
            var b = t();
            a ? (F.session = a,
            b && (b.session = a)) : b && (F.session = b.session)
        }
    }
    function t() {
        var a = $("#shop-layout, #shop-vouchers, #shop-orders, #all-payment-methods");
        return 0 < a.length ? a[0].__vue__.$store.state : !1
    }
    var u = !0
      , w = {
        Be: {
            type: "get",
            mb: "shop/v2/init"
        },
        Nj: {
            type: "post",
            mb: "v1/sessions"
        },
        Kg: {
            type: "put",
            mb: "shop/v2/cart"
        },
        Ae: {
            type: "get",
            mb: "shop/v1/product-list"
        },
        wg: {
            type: "get",
            mb: "shop/v1/promotions"
        },
        xe: {
            type: "delete",
            mb: "shop/v1/cart"
        }
    }
      , s = {
        Kj: 1001,
        zg: 1002,
        Gg: 2010,
        Mj: 2011,
        Ce: 2012
    }
      , x = {
        BRL: "R$x",
        CHF: "x Fr",
        CZK: "x K\u010d",
        EUR: "x \u20ac",
        MXN: "MX$x",
        TRY: "\u20bax",
        USD: "US$x",
        GBP: "\u00a3x"
    }
      , v = {
        ARE: "ae",
        AUT: "at",
        BEL: "be",
        CAN: "ca",
        CHE: "ch",
        CZE: "cs",
        DEU: "de",
        ESP: "es",
        FRA: "fr",
        ITA: "it",
        KWT: "kw",
        NLD: "nl",
        POL: "pl",
        PRT: "pt",
        RUS: "ru",
        SAU: "sa",
        SVK: "sk",
        AAA: "en",
        BRA: "br",
        MEX: "mx",
        TUR: "tr",
        GBR: "gb",
        UKR: "ua",
        USA: "us"
    };
    h = "credit_package";
    m = "bundle";
    f = "bank";
    g = "sms";
    e = "plus";
    b = "mobile_payment_methods";
    var D = {
        Og: "tkTopSeller",
        Ij: "tkBestValue"
    }
      , C = {
        TK_I_GOLD: "gold",
        TK_I_SILVER: "silver",
        TK_I_TPLUS: "plusAccount",
        TK_I_MERCH_REPET: "merchantRepetition",
        TK_I_CARD_ROLLS: "cardRolls",
        TK_I_NPC_MERCH: HeroItem.TYPE_NPC_TRADER,
        TK_I_MERCH_DLVRY: HeroItem.TYPE_INSTANT_TRADE_DELIVERY,
        TK_I_FIREWORKS: HeroItem.TYPE_FIREWORKS,
        TK_I_FIREWORKS_XL: HeroItem.TYPE_SUPER_FIREWORKS,
        TK_I_BLACKPOWDER: HeroItem.TYPE_BLACK_POWDER,
        TK_I_WATERBUCKET: HeroItem.TYPE_WATERBUCKET,
        TK_I_BOOK: HeroItem.TYPE_BOOK,
        TK_I_OINTMENT: HeroItem.TYPE_OINTMENT,
        TK_I_BANDAGE_33_UPGRADED: HeroItem.TYPE_BANDAGE_33_UPGRADED,
        TK_I_ADVENTURE_POINT: HeroItem.TYPE_ADVENTURE_POINT,
        TK_I_CAGES: HeroItem.TYPE_CAGES,
        TK_I_SCROLLS: HeroItem.TYPE_SCROLLS,
        TK_I_CANDY: HeroItem.TYPE_CANDY
    }
      , A = {};
    A[f] = [0, 100, 200, 400, 1E3, 3E3];
    A[g] = [0, 50, 200];
    A[e] = [0];
    var F, B, E = "live" != config.SERVER_ENV, J = [], I = [];
    return new function() {
        function c(b) {
            B = {
                country: b.sessionCountry.code,
                Hb: b.countries,
                Y: {},
                nb: {},
                Eb: []
            };
            for (var e in B.Hb) {
                B.Hb[e].language = v[B.Hb[e].code]
            }
            B.Hb.sort(function(a, b) {
                return "en" == a.language ? -1 : "en" == b.language ? 1 : a.name < b.name ? -1 : 1
            });
            H(b.allPaymentMethods);
            B.Y[B.country] = [];
            B.nb[B.country] = [];
            q(b.products, b.promotions);
            a.$broadcast("shopSDKProductsUpdate", B);
            ca = !1
        }
        function n(c, l) {
            if (!1 !== c.isActive) {
                var q = {
                    productId: c.id,
                    productName: c.name,
                    paynetCode: c.code,
                    price: c.price / 100,
                    currency: x[c.currencyCode] || "x " + c.currencyCode,
                    type: 0 > c.tags.indexOf(b) ? f : 0 > c.tags.indexOf("internet_plus") ? g : e,
                    tags: snakeToCamel(c.tags.join(" "))
                };
                if (u) {
                    var r = $("#product-" + c.id + " .product-add")[0];
                    q.select = function() {
                        if (r) {
                            var e = $("#cart-layout .cart-product")
                              , f = e.attr("product-tags");
                            void 0 != f && Boolean(f.match(b)) != 0 <= c.tags.indexOf(b) ? p(w.xe, function() {
                                r.click()
                            }, null, e.attr("product-id")) : r.click()
                        } else {
                            a.$broadcast("shopSDKError", "Product not found")
                        }
                    }
                }
                switch (c.type) {
                case m:
                    q.features = U.Of(c.content);
                    c.creditAmount && q.features.unshift({
                        name: C.TK_I_GOLD,
                        amount: c.creditAmount,
                        paynetCode: "TK_I_GOLD"
                    });
                    B.nb[B.country].push(q);
                    break;
                case h:
                    l ? (q.gold = c.creditAmount + Math.round(c.creditAmount * l / 100),
                    q.originalGold = c.creditAmount,
                    q.promotionPercentage = l) : q.gold = c.creditAmount,
                    q.icon = U.rf(c.originalCreditAmount || c.creditAmount, q.type),
                    B.Y[B.country].push(q)
                }
            }
        }
        function q(a, b) {
            for (var c in a) {
                n(a[c])
            }
            for (c in b) {
                for (var g in b[c].products) {
                    n(b[c].products[g], b[c].creditIncreasePercentage)
                }
            }
            B.Y[B.country].sort(function(a, b) {
                return a.type != b.type ? a.type == e || b.type == f ? 1 : -1 : a.currency != b.currency ? "\u20ac" == a.currency || "$" == a.currency && "\u20ac" != b.currency ? -1 : 1 : a.price > b.price ? 1 : -1
            });
            for (c = 1; B.Y[B.country][c] && B.Y[B.country][c].type == f; ) {
                g = B.Y[B.country][c].price / B.Y[B.country][0].price * B.Y[B.country][0].gold,
                B.Y[B.country][c].saving = Math.round(100 * ((B.Y[B.country][c].gold - g) / g)),
                c++
            }
        }
        function H(a) {
            B.Eb[B.country] = [];
            a.sort(function(a, b) {
                return a.type != b.type && "Mobile" == b.type ? -1 : 1
            });
            for (var b in a) {
                B.Eb[B.country].push({
                    name: a[b].name,
                    icon: "" + a[b].icon
                })
            }
        }
        function N(a, b) {
            if (F && F.session && F.checkoutUrl && F.shopUrl) {
                if (0 < I.length) {
                    setTimeout(function() {
                        N(a, b)
                    }, 100)
                } else {
                    a = "string" == typeof a && a || "run";
                    var c = "paynetCheckout";
                    "run" != a && (c = "paynet" + a.charAt(0).toUpperCase() + a.slice(1));
                    var e = {
                        sessionToken: F.session,
                        htmlContainerId: c,
                        locale: F.locale,
                        host: F.checkoutUrl
                    };
                    u && (e.components = {
                        product: {
                            cart: {}
                        },
                        promotion: !0
                    });
                    window.Shop ? (window.Shop[a](e),
                    "function" == typeof b && b()) : $.ajax({
                        type: "GET",
                        url: F.shopUrl,
                        success: function() {
                            P();
                            window.Shop[a](e);
                            "function" == typeof b && b()
                        },
                        dataType: "script",
                        cache: !0
                    })
                }
            } else {
                E && console.log("Missing Paynet sdk parameters")
            }
        }
        function P() {
            window.Shop.listen("Initialized", function() {
                window.setTimeout(function() {
                    $("#shop-countries, #shop-products, #shop-promotions").remove();
                    u && $("#shop-cart .product-remove").click()
                })
            });
            var b = 0;
            window.Shop.listen("PaymentMethodsLoaded", function() {
                setTimeout(function() {
                    M();
                    a.$broadcast("shopSDKPaymentMethodsLoaded")
                });
                clearTimeout(b)
            });
            window.Shop.listen("ProductAdded", function() {
                setTimeout(function() {
                    0 == $("#cart-layout .cart-product").length && (a.$broadcast("shopSDKError", "Cart not found"),
                    U.ld(),
                    U.yc())
                });
                b = setTimeout(function() {
                    a.$broadcast("shopSDKError", "Timeout");
                    U.ld();
                    U.yc()
                }, 1E4)
            });
            window.Shop.listen("OrdersLoaded", function() {
                setTimeout(function() {
                    var b = $("#shop-orders");
                    0 == t().orders.length && ($('<div class="noOrders">' + Travian.translate("Shop.Popup.OrderHistory.Empty") + "</div>").insertBefore(b),
                    b.remove());
                    a.$broadcast("shopSDKHistoryLoaded")
                })
            });
            window.Shop.listen("PaymentCreated", function() {
                $("#shop-modal .modal-close-button").click();
                a.$broadcast("shopSDKPaymentCreated")
            });
            E && "PaymentAnonymousSession CartUpdated CartFetched RemoveProduct ProductAdded OrdersLoaded PaymentMethodsLoaded PaymentCreated VoucherRedeemed PromotionFinished Initialized CountriesLoaded ProductsLoaded CloseModal OkModal ShowPaymentMethodsModal ClosePaymentMethodsModal ShowVoucherModal CloseVoucherModal PaymentWindowClosed".split(" ").forEach(function(a) {
                window.Shop.listen(a, function() {
                    console.log(a)
                })
            })
        }
        function M() {
            var a = $("#shop-layout .payment-method:not(.dummy)");
            if (0 == a.length) {
                $("#shop-layout .providerArrow, #shop-layout .payment-method.dummy").remove()
            } else {
                fa = 1 + Math.floor((a.length - 1) / K);
                for (var b = $("#shop-layout .payment-method.dummy").length; b < K; b++) {
                    $('<div class="dummy payment-method"></div>').insertAfter(a.last())
                }
                var c = function(a) {
                    O = Math.max(Math.min(a, fa), 1);
                    $("#shop-layout .payment-method").first()[0].style["margin-" + getReadingDirectionFrom()] = -100 * K * (O - 1) + "px";
                    1 == O ? $("#shop-layout .providerArrow.from").addClass("disabled") : $("#shop-layout .providerArrow.from").removeClass("disabled");
                    O == fa ? $("#shop-layout .providerArrow.to").addClass("disabled") : $("#shop-layout .providerArrow.to").removeClass("disabled")
                };
                0 == $("#shop-layout .providerArrow").length && (a = $('<div class="providerArrow from"></div>'),
                z.ya(a[0], function() {
                    c(O - 1)
                }),
                a.insertBefore("#shop-methods"),
                a = $('<div class="providerArrow to"></div>'),
                z.ya(a[0], function() {
                    c(O + 1)
                }),
                a.insertAfter("#shop-methods"));
                c(1)
            }
        }
        function R() {
            var a = $("#voucher-field-button")
              , b = $("#voucher-field-input");
            a.toggleClass("disabled", !b[0].value);
            b.on("input", function(b) {
                a.toggleClass("disabled", !b.target.value)
            })
        }
        function J() {
            W || (W = XMLHttpRequest.prototype.open);
            XMLHttpRequest.prototype.open = function() {
                this.addEventListener("load", function() {
                    if (F && this.responseURL.match(F.checkoutUrl)) {
                        this.getAllResponseHeaders().match("session:") && r(this.getResponseHeader("session"));
                        if (200 == this.status && u) {
                            var b = this.responseURL.match(/\/init$|\/redeem$/) || [];
                            switch (b[0]) {
                            case "/init":
                                c(JSON.parse(this.responseText));
                                break;
                            case "/redeem":
                                $("#voucher-field-button").addClass("disabled")
                            }
                        }
                        if (204 == this.status) {
                            switch (b = this.responseURL.match(/\/cart$|\/cancel-open$/) || [],
                            b[0]) {
                            case "/cart":
                                a.$broadcast("shopSDKCartEmptied");
                                break;
                            case "/cancel-open":
                                U.Mf()
                            }
                        }
                        if (400 <= this.status) {
                            var b = (this.responseText.match(/.*message":"\d+: [^"]*".*/) || ["0: Request failed"])[0].replace(/.*message":"(\d+: [^"]*)".*/, "$1").split(": ")
                              , e = b[1];
                            switch (parseInt(b[0])) {
                            case s.zg:
                                l(function() {
                                    a.$broadcast("shopSDKError", e)
                                }, !0);
                                break;
                            case s.Gg:
                                $("#shop-overlay .modal-close-button").click();
                                $("#shop-modal").show();
                                break;
                            case s.Ce:
                                if (!u) {
                                    break
                                }
                                ;
                            default:
                                a.$broadcast("shopSDKError", e)
                            }
                        }
                    }
                });
                W.apply(this, arguments)
            }
        }
        function ga() {
            0 < $("#shop-layout").length && (angular.forEach($("#shop-layout .providerArrow"), function(a) {
                z.s(a)
            }),
            $('<div id="paynetCheckout"></div>').insertBefore("#shop-layout"),
            $("#shop-layout").remove());
            window.Shop && window.Shop.reset()
        }
        var U = this;
        this.Hg = D;
        var ca = !1;
        this.yc = function() {
            B ? a.$broadcast("shopSDKProductsUpdate", B) : ca || (ca = !0,
            J(),
            u ? l(N) : p(w.Be, c))
        }
        ;
        this.gg = function(a, b) {
            J();
            l(function() {
                N(a, b)
            })
        }
        ;
        this.pj = function() {
            U.gg("voucher", R)
        }
        ;
        this.Xh = function(a) {
            l(function() {
                if (F.pspUrl) {
                    a(F.pspUrl)
                } else {
                    var b = t();
                    if (b) {
                        F.pspUrl = b.pspUrl,
                        a(F.pspUrl)
                    } else {
                        var c = $('<div style="display: none"><div id="paynetAllPaymentMethods"></div></div>');
                        $("body").append(c);
                        N("allPaymentMethods", function() {
                            var b = t();
                            b && (F.pspUrl = b.pspUrl,
                            a(F.pspUrl));
                            c.remove()
                        })
                    }
                }
            })
        }
        ;
        this.Ch = function(a) {
            B && B.Eb[B.country] ? a(B.Eb[B.country]) : p(w.Be, function(b) {
                H(b.allPaymentMethods);
                a(B.Eb[B.country])
            })
        }
        ;
        this.eh = function(b) {
            b != B.country && (delete B.Y[B.country],
            B.country = b,
            B.Y[b] = [],
            B.nb[b] = [],
            a.$broadcast("shopSDKProductsUpdate", B),
            u ? p(w.Ae, function() {
                ga();
                B = null;
                U.yc()
            }, null, b) : p(w.Ae, function(c) {
                p(w.wg, function(b) {
                    q(c.products, b.promotions);
                    a.$broadcast("shopSDKProductsUpdate", B)
                }, null, b)
            }, null, b))
        }
        ;
        this.Ti = function(a) {
            u ? a ? a.select() : $("#shop-cart .product-remove").click() : a ? p(w.Kg, N, {
                id: a.productId,
                quantity: 1
            }) : ga()
        }
        ;
        this.Mf = function() {
            $("#shop-layout .product-pay").click()
        }
        ;
        this.rf = function(a, b) {
            b = b || f;
            var c;
            a: {
                for (c in A[b]) {
                    if (a < A[b][c]) {
                        break a
                    }
                }
                c = ++c
            }
            return b + "Package" + c
        }
        ;
        this.Of = function(a) {
            var b = [], c;
            for (c in a) {
                var e = {
                    name: C[a[c].code || a[c].paynetCode],
                    amount: a[c].quantity || a[c].amount || 1,
                    paynetCode: a[c].code || a[c].paynetCode
                };
                isNaN(e.name) || (e.heroItemType = e.name,
                e.name = "item" + e.heroItemType);
                b.push(e)
            }
            return b
        }
        ;
        var K = 4, O = 1, fa = 1, W;
        this.ld = function() {
            ga();
            B = F = null;
            W && (XMLHttpRequest.prototype.open = W,
            W = null);
            ca = !1
        }
    }
}
;
Travian.Service.PaynetService.$inject = ["$rootScope", "$http"];
var PlayerKingdomMapper = new function() {
    function a(a) {
        f[a] && !g[a] && (g[a] = setTimeout(function() {
            for (var b = 0; b < f[a].length; b++) {
                if (f[a][b]) {
                    f[a][b]()
                }
            }
            g[a] = 0
        }, 10))
    }
    var c = {}
      , b = {};
    this.removeMemberships = function(a) {
        for (var f = 0, g = a.length; f < g; f++) {
            var l = c[a[f]];
            if ("undefined" != typeof l && 0 != l) {
                for (var p = 0; p < b[l].length; p++) {
                    if (b[l][p] == a[f]) {
                        b[l].splice(p, 1);
                        break
                    }
                }
            }
            c[a[f]] = 0
        }
    }
    ;
    this.setMemberships = function(e, f) {
        b[e] = f;
        for (var g = 0, l = f.length; g < l; g++) {
            c[f[g]] = e
        }
        a(e)
    }
    ;
    this.hj = function(e, f) {
        c[e] = f;
        0 != f && (b[f] ? b[f].push(e) : b[f] = Array(e));
        a(f)
    }
    ;
    this.ba = function(a) {
        a = c[a];
        "undefined" == typeof a && (a = 0);
        return a
    }
    ;
    this.Di = function(a, b) {
        f[a] || (f[a] = []);
        var c = f[a].push(b) - 1;
        return function() {
            if (f[a]) {
                delete f[a][c];
                for (var b = 0; b < f[a].length && !f[a][b]; b++) {}
                b == f[a].length && delete f[a]
            }
        }
    }
    ;
    var f = {}
      , g = {}
}
  , z = new function() {
    function a(a) {
        a || (a = window.event);
        if ("touch" == x) {
            return "undefined" == typeof a.changedTouches && (a.identifier = a.pointerId,
            a.changedTouches = [a],
            a.touches = [a]),
            a
        }
        a.pageX || a.pageY || (a.pageX = a.clientX + document.body.scrollLeft,
        a.pageY = a.clientY + document.body.scrollTop);
        return a
    }
    function c(a) {
        for (var b = 0; b < F[a].length; b++) {
            if (null != F[a][b]) {
                F[a][b](s)
            }
        }
    }
    function b(a, b) {
        if (1 == s.touches.length) {
            var c = s.touches[0]
              , e = window.pageXOffset
              , g = window.pageYOffset
              , h = c.clientX
              , l = c.clientY;
            if (0 === c.pageY && Math.floor(l) > Math.floor(c.pageY) || 0 === c.pageX && Math.floor(h) > Math.floor(c.pageX)) {
                h -= e,
                l -= g
            } else {
                if (l < c.pageY - g || h < c.pageX - e) {
                    h = c.pageX - e,
                    l = c.pageY - g
                }
            }
            s.current.x = h;
            s.current.y = l;
            s.current.clientX = s.current.x;
            s.current.clientY = s.current.y
        } else {
            e = [];
            c = [];
            s.current.x = 0;
            for (g = s.current.y = 0; g < s.touches.length; g++) {
                h = s.touches[g].identifier,
                e.push({
                    x: s.le[h].x,
                    y: s.le[h].y
                }),
                c.push({
                    x: a.touches[g].clientX,
                    y: a.touches[g].clientY
                }),
                s.status != w ? h == s.td && (s.current.x = a.touches[g].clientX,
                s.current.y = a.touches[g].clientY) : (s.current.x += a.touches[g].clientX,
                s.current.y += a.touches[g].clientY)
            }
            s.status == w && (s.current.x /= 2,
            s.current.y /= 2);
            2 == s.touches.length && (e = Math.sqrt(Math.pow(e[0].x - e[1].x, 2) + Math.pow(e[0].y - e[1].y, 2)),
            c = Math.sqrt(Math.pow(c[0].x - c[1].x, 2) + Math.pow(c[0].y - c[1].y, 2)),
            s.status != w && f(s.q, "touchZoomStart", !0, c / e),
            s.Df = c / e,
            s.status = w,
            f(s.q, "touchZoom", !0, c / e))
        }
        s.status != w && (s.q = window.document.elementFromPoint(s.current.x, s.current.y),
        b || (s.Ic != s.q ? (f(s.Ic, "touchOut"),
        f(s.q, "touchOver")) : f(s.q, "touchMove")))
    }
    function f(a, b, c, e, g) {
        if (null == a || g instanceof MouseEvent && 2 < g.which) {
            return !0
        }
        if ("undefined" != typeof a.la) {
            var h = !0;
            a.Md || (h = a.la.fire(b, e));
            if (!1 === h) {
                return h = window.event || g,
                void 0 !== h && (void 0 !== h.stopPropagation && h.stopPropagation(),
                void 0 !== h.preventDefault && h.preventDefault()),
                !1
            }
        }
        (c || 3 > arguments.length) && f(a.parentNode, b, !0, e, g)
    }
    function g() {
        var a = [];
        this.removeAll = function(b) {
            if (0 == arguments.length || null == b) {
                return a = [],
                !0
            }
            a[b] = []
        }
        ;
        this.remove = function(b) {
            for (var c in a) {
                for (var e = 0; e < a[c].length; e++) {
                    a[c][e].rd == b && (a[c].splice(e, 1),
                    e--)
                }
            }
        }
        ;
        this.add = function(b, c, e) {
            "undefined" == typeof a[b] && (a[b] = []);
            for (var f = a[b], g = !1, h = 0, l = f.length; h < l; h++) {
                c == f[h].rd && (g = !0)
            }
            g || a[b].push({
                rd: c,
                param: e
            })
        }
        ;
        this.fire = function(b, c) {
            if ("undefined" == typeof a[b]) {
                return null
            }
            for (var e = a[b], f = !0, g = 0, h = e.length; g < h; g++) {
                !1 === e[g].rd(e[g].param, c) && (f = !1)
            }
            return f
        }
    }
    function e(a, b, c, e, l) {
        null != a && ("undefined" == typeof a.la && (a.la = new g,
        a.Md = !1,
        "mouse" == x && (a.onclick = function(a) {
            if (5 > Math.abs(s.start.x - s.current.x) && 5 > Math.abs(s.start.y - s.current.y)) {
                return f(this, "onclick", !0, void 0, a)
            }
        }
        ,
        a.ondblclick = function(a) {
            return f(this, "ondblclick", !0, void 0, a)
        }
        ,
        a.onmousedown = function(a) {
            return f(this, "onmousedown", !0, void 0, a)
        }
        ,
        a.onmouseup = function(a) {
            return f(this, "onmouseup", !0, void 0, a)
        }
        ,
        a.onmousewheel = function(a) {
            return h(a, this)
        }
        )),
        "mouse" == x ? ("onmouseover" == b && "undefined" == typeof a.mouseEventName && (a.onmouseover = function() {
            return f(this, "onmouseover")
        }
        ),
        "onmouseout" == b && "undefined" == typeof a.mouseEventName && (a.onmouseout = function(a) {
            a = a.toElement || a.relatedTarget;
            if (a != this) {
                for (var b = 0; 6 > b && null != a; b++) {
                    if (a.parentNode == this) {
                        return
                    }
                    a = a.parentNode
                }
                return f(this, "onmouseout", !1)
            }
        }
        ),
        "onmousemove" == b && "undefined" == typeof a.mouseEventName && (a.onmousemove = function() {
            return f(this, "onmousemove")
        }
        ),
        a.la.add(b, e, l)) : a.la.add(c, e, l))
    }
    function h(a, b) {
        var c = 0;
        a || (a = window.event);
        a.detail ? c = -a.detail / 3 : a.wheelDelta && (c = a.wheelDelta / 120,
        window.opera && (c = -c));
        if (c) {
            var e = null;
            0 < c ? (f(b, "touchZoomStart"),
            e = f(b, "onmousewheel", !0, 1.2),
            f(b, "touchZoomEnd", !0, 1.2)) : (f(b, "touchZoomStart"),
            e = f(b, "onmousewheel", !0, 1 / 1.2),
            f(b, "touchZoomEnd", !0, 1 / 1.2));
            return e
        }
    }
    function m(a, b) {
        b.la = a.la;
        b.onmousemove = a.onmousemove;
        b.onclick = a.onclick;
        b.onmousedown = a.onmousedown;
        b.onmouseup = a.onmouseup
    }
    function l(a) {
        var b = a.obj;
        if (null != s.A) {
            v.Ab()
        } else {
            b.Md = !0;
            s.A = b;
            s.pd = a;
            if (a.doClone) {
                var c = b.getBoundingClientRect();
                s.M = [];
                s.M.width = computedStyle(b, "width");
                s.M.height = computedStyle(b, "height");
                s.M.top = computedStyle(b, "top");
                s.M.left = computedStyle(b, "left");
                s.M.display = computedStyle(b, "display");
                0 < s.M.width.indexOf("%") && (s.M.width = b.clientWidth,
                s.M.height = b.clientHeight);
                b.style.visibility = "hidden";
                s.u = b.cloneNode(!0);
                s.u.className += " msAntiScroll drag";
                s.u.Bf = !0;
                m(b, s.u);
                var e = s.u;
                e.style.display = "block";
                e.style.visibility = "visible";
                e.style.position = "absolute";
                e.style.width = s.M.width;
                e.style.height = s.M.height;
                e.style.top = c.top + "px";
                e.style.left = c.left + "px";
                e.style.right = "auto";
                e.style.zIndex = 99999;
                document.body.appendChild(e);
                s.u.ondragstart = ba(!1)
            } else {
                c = {
                    left: parseInt(computedStyle(b, "left")),
                    top: parseInt(computedStyle(b, "top"))
                },
                e = b,
                s.M = b.style,
                s.u = b
            }
            s.M.sj = c.top;
            s.M.rj = c.left;
            b = p(b);
            s.M.uj = parseInt(b[0]);
            s.M.vj = parseInt(b[1]);
            s.A.ondragstart = ba(!1);
            null != s.A && ("undefined" != typeof s.A.nc && null != s.A.nc) && (s.bf = s.A.nc(e, a.callBackParams))
        }
    }
    function p(a) {
        a = $(a).css("transform").match(/matrix(?:(3d)\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))(?:, (-{0,1}\d+)), -{0,1}\d+\)|\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))\))/);
        if (!a) {
            return [0, 0, 0]
        }
        if ("3d" == a[1]) {
            return a.slice(2, 5)
        }
        a.push(0);
        return a.slice(5, 8)
    }
    function n() {
        if (s.ga) {
            var a = Math.round(s.M.uj + (s.current.x - s.start.x) / C) + "px"
              , b = Math.round(s.M.vj + (s.current.y - s.start.y) / C) + "px";
            r(s.u, a, b);
            q()
        }
    }
    function q() {
        !J && s.u.attributes["drop-class"] && (J = window.setTimeout(function() {
            if (s.u) {
                s.u.style.display = "none";
                var a = window.document.elementFromPoint(s.current.x, s.current.y);
                s.u.style.display = "block";
                if (a && s.ha != a) {
                    if (s.ha && s.ha.attributes.dropable) {
                        var b = s.ha.className.replace(RegExp("[s]?" + s.u.attributes["drop-class"].value, "g"), "");
                        s.ha.className = b
                    }
                    a.attributes.dropable && (a.className += " " + s.u.attributes["drop-class"].value);
                    s.ha = a
                }
            }
            J = null
        }, 250))
    }
    function r(a, b, c) {
        a.style.transform = "translate3d(" + b + ", " + c + ",0)";
        a.style.msTransform = "translate3d(" + b + ", " + c + ",0)";
        a.style.gk = "translate3d(" + b + ", " + c + ",0)";
        a.style.Lj = "translate3d(" + b + ", " + c + ",0)";
        a.style.webkitTransform = "translate3d(" + b + ", " + c + ",0)"
    }
    function t() {
        var a = Math.round(Math.sqrt(Math.pow(s.start.x - s.current.x, 2) + Math.pow(s.start.y - s.current.y, 2)));
        if (null == s.A) {
            70 < a && (Math.abs(s.start.x - s.current.x) > Math.abs(s.start.y - s.current.y) ? s.start.x > s.current.x ? f(s.start.Ub, "onSwipeLeft") : f(s.start.Ub, "onSwipeRight") : s.start.y > s.current.y ? f(s.start.Ub, "onSwipeUp") : f(s.start.Ub, "onSwipeDown"))
        } else {
            s.ha && (s.ha.attributes.dropable && (a = s.ha.className.replace(RegExp("[s]?" + s.u.attributes["drop-class"].value, "g"), ""),
            s.ha.className = a),
            s.ha = null);
            s.pd && s.pd.saveTransformInName && (A[s.pd.saveTransformInName] = p(s.A));
            if (s.u.Bf) {
                s.u.style.display = "none";
                var b = window.document.elementFromPoint(s.current.clientX, s.current.clientY);
                s.u.style.display = "block"
            }
            b = u(b);
            a = !0;
            if (null != b) {
                if (a = !1,
                b.wh(s.A, b, s.bf)) {
                    if (null == s.A) {
                        return
                    }
                    "function" == typeof s.A.Sa && s.A.Sa(!0)
                } else {
                    a = !0
                }
            }
            "function" == typeof s.A.Sa && (a = !s.A.Sa(!1));
            a ? v.vh() : null != b && "undefined" != typeof b.Ff && b.Ff || v.Ab()
        }
    }
    function u(a) {
        return null == a ? null : a.xh ? a : u(a.parentNode)
    }
    var w = 2
      , s = {
        ga: !1,
        td: -1,
        touches: [],
        le: [],
        Df: 1,
        status: 0,
        start: {
            x: 0,
            y: 0,
            obj: null
        },
        current: {
            x: 0,
            y: 0,
            clientX: 0,
            clientY: 0
        },
        M: {
            top: 0,
            left: 0,
            display: ""
        },
        startTime: 0,
        bf: null,
        A: null,
        u: null,
        ha: null,
        q: null,
        Ic: null
    }
      , x = "mouse"
      , v = this
      , D = navigator.userAgent.toLowerCase()
      , C = 1
      , A = {}
      , F = {
        down: [],
        move: [],
        up: []
    }
      , B = !0
      , E = !1;
    this.Bb = !0;
    this.Jb = !1;
    this.gf = function() {
        return s.current
    }
    ;
    this.O = function() {
        return s
    }
    ;
    this.li = function() {
        -1 < D.search(/(iphone|ipod|ipad|opera mini|fennec|palm|blackberry|android|symbian|touch;)/) ? v.oi() : v.zf()
    }
    ;
    this.zf = function(b) {
        x = "mouse";
        var e = document;
        0 < arguments.length && (e = document.getElementById(b));
        document.onmouseout = function(b) {
            if (void 0 === b || void 0 === b.pageX) {
                b = a(b)
            }
            if (null == b.relatedTarget || "HTML" == b.relatedTarget.tagName) {
                s.ga = !1,
                t()
            }
        }
        ;
        e.onmousemove = function(b) {
            if (void 0 === b || void 0 === b.pageX) {
                b = a(b)
            }
            s.current.x = b.pageX;
            s.current.y = b.pageY;
            s.current.clientX = b.clientX;
            s.current.clientY = b.clientY;
            null != s.A && n();
            c("move")
        }
        ;
        e.onmousedown = function(b) {
            if (void 0 === b || void 0 === b.pageX) {
                b = a(b)
            }
            s.ga = !0;
            s.start.x = b.pageX;
            s.start.y = b.pageY;
            s.current.x = b.pageX;
            s.current.y = b.pageY;
            s.current.clientX = b.clientX;
            s.current.clientY = b.clientY;
            s.q = document.elementFromPoint(s.current.clientX, s.current.clientY);
            s.start.Ub = s.q;
            c("down")
        }
        ;
        e.onmouseup = function() {
            s.ga = !1;
            t();
            c("up")
        }
        ;
        window.addEventListener && window.addEventListener("DOMMouseScroll", function(a) {
            s.q = document.elementFromPoint(s.current.x, s.current.y);
            return h(a, s.q)
        }, !1)
    }
    ;
    this.oi = function(e) {
        if ("touch" != x) {
            v.zf = y();
            x = "touch";
            var g = document;
            0 < arguments.length && (g = document.getElementById(e));
            g.ontouchstart = function(e) {
                e = a(e);
                s.q = e.target;
                s.ga = !0;
                s.touches = e.touches;
                for (var g = 0; g < e.changedTouches.length; g++) {
                    s.le[e.changedTouches[g].identifier] = {
                        x: e.changedTouches[g].clientX,
                        y: e.changedTouches[g].clientY
                    }
                }
                s.start.Ub = s.q;
                if (null != s.q && "INPUT" == s.q.tagName) {
                    return !0
                }
                1 == s.touches.length && (s.td = s.touches[0].identifier,
                s.startTime = (new Date).getTime(),
                b(e, !0),
                s.start.x = s.current.x,
                s.start.y = s.current.y,
                f(s.q, "touchStart"),
                f(s.q, "touchOver"));
                c("down");
                if (!v.Bb) {
                    return e.preventDefault(),
                    !1
                }
            }
            ;
            g.ontouchmove = function(e) {
                e = a(e);
                s.q = e.target;
                b(e);
                if (null != s.q && "INPUT" == s.q.tagName) {
                    return !0
                }
                s.touches = e.touches;
                s.Ic = s.q;
                null != s.A && n();
                c("move");
                if (!v.Bb) {
                    return e.preventDefault(),
                    !1
                }
            }
            ;
            g.ontouchend = function(b) {
                b = a(b);
                null != s.q && f(s.q, "touchOut");
                s.q = b.target;
                s.ga = !1;
                s.yh = (new Date).getTime();
                s.touches = b.touches;
                if (null != s.q && "INPUT" == s.q.tagName) {
                    return !0
                }
                E && v.Si();
                c("up");
                if (s.status == w) {
                    0 == s.touches.length && (f(s.q, "touchZoomEnd", !0, s.Df),
                    s.status = 0)
                } else {
                    if (0 == s.touches.length || 1 === s.touches.length && "MSPointerUp" === s.touches[0].type) {
                        f(s.q, "touchEnd"),
                        s.td = -1
                    }
                }
                500 > s.yh - s.startTime && f(s.q, "touchClick");
                t();
                if (!v.Bb) {
                    return !1
                }
            }
            ;
            g.addEventListener("MSPointerDown", g.ontouchstart, !1);
            g.addEventListener("MSPointerMove", g.ontouchmove, !1);
            g.addEventListener("MSPointerUp", g.ontouchend, !1)
        }
    }
    ;
    this.hf = function() {
        return window.document.elementFromPoint(s.current.x, s.current.y)
    }
    ;
    this.Ga = function() {
        return x
    }
    ;
    this.onPointerOver = function(a, b, c) {
        e(a, "onmouseover", "touchOver", b, c)
    }
    ;
    this.onPointerOut = function(a, b, c) {
        e(a, "onmouseout", "touchOut", b, arguments[2])
    }
    ;
    this.V = function(a, b, c) {
        e(a, "onmousedown", "touchStart", b, arguments[2])
    }
    ;
    this.Jf = function(a, b) {
        e(a, "onmousemove", "touchMove", b, void 0)
    }
    ;
    this.Kf = function(a, b) {
        e(a, "onmouseup", "touchEnd", b, void 0)
    }
    ;
    this.ya = function(a, b) {
        e(a, "onclick", "touchClick", b, void 0)
    }
    ;
    this.Ei = function(a, b) {
        e(a, "ondblclick", "touchClick", b, void 0)
    }
    ;
    this.Fi = function(a, b) {
        a.onmousedown = ba(!1);
        e(a, "onSwipeLeft", "onSwipeLeft", b, "left");
        e(a, "onSwipeRight", "onSwipeRight", b, "right");
        e(a, "onSwipeUp", "onSwipeUp", b, "up");
        e(a, "onSwipeDown", "onSwipeDown", b, "down")
    }
    ;
    this.Lf = function(a, b) {
        e(a, "onmousewheel", "touchZoom", b)
    }
    ;
    this.s = function(a, b) {
        "undefined" != typeof a && null != a && "undefined" != typeof a.la && a.la.removeAll(b)
    }
    ;
    this.Kc = function(a, b) {
        "undefined" != typeof a && null != a && "undefined" != typeof a.la && a.la.remove(b)
    }
    ;
    this.D = function(a, b) {
        for (var c = -1, e = 0; e < F[a].length; e++) {
            if (null == F[a][e] || F[a][e] == b) {
                c = e;
                break
            }
        }
        -1 != c ? F[a][c] = b : (c = F[a].length,
        F[a].push(b));
        return function() {
            F[a][c] = null
        }
    }
    ;
    this.ag = function() {
        B = v.Bb;
        v.Bb = !1;
        E = !0
    }
    ;
    this.Si = function() {
        v.Bb = B
    }
    ;
    this.Vh = p;
    var J = null;
    this.vh = function() {
        if ("undefined" != typeof AnimationManager) {
            var a = new Animation(s.u,"top",parseInt(s.u.style.top),parseInt(s.M.sj));
            a.Xj = "px";
            a.duration = 300;
            a.timing = Animation.Jj;
            null != s.A && "undefined" != typeof s.A.Sa && (a.callback = s.A.Sa);
            var b = a.clone();
            b.Wj = "left";
            b.lk = parseInt(s.u.style.left);
            b.ak = parseInt(s.M.rj);
            AnimationManager.Ug(a);
            AnimationManager.Ug(b);
            b.callback = function() {
                v.Ab()
            }
        } else {
            v.Ab()
        }
    }
    ;
    this.Ab = function() {
        null != s.A && (s.A.Md = !1,
        s.u.Bf && (document.body.removeChild(s.u),
        s.u.style.display = "none",
        s.A.style.display = s.M.display,
        s.A.style.visibility = "visible"),
        s.A = null,
        s.u = null)
    }
    ;
    this.Gd = function(a, b, c, g, h, m, n, p) {
        function q(a) {
            void 0 !== p && p();
            var b = {
                x: s.current.x,
                y: s.current.y
            };
            v.ag();
            var c = v.D("move", function() {
                var e = {
                    x: s.current.x,
                    y: s.current.y
                };
                5 > Math.sqrt(Math.pow(e.x - b.x, 2) + Math.pow(e.y - b.y, 2)) || (c(),
                s.A != a.obj && s.ga ? (l(a),
                v.s(a.obj, "onmousemove"),
                v.s(a.obj, "touchMove")) : s.A == a.obj ? f(s.Ic, "onmouseout") : (v.s(a.obj, "onmousemove"),
                v.s(a.obj, "touchMove")))
            })
        }
        if (null == a) {
            return !1
        }
        a.className += " msAntiScroll";
        var t = a;
        h && (t = h);
        "undefined" == typeof m && (m = !0);
        e(a, "onmousedown", "touchStart", q, {
            obj: t,
            callBackParams: g,
            doClone: m,
            saveTransformInName: n
        });
        a.ondragstart = ba(!1);
        a.draggable = !0;
        a.nc = b;
        a.Sa = c;
        t.nc = b;
        t.Sa = c;
        n && void 0 !== A[n] && (a = A[n],
        r(t, a[0] + "px", a[1] + "px"));
        return function() {
            v.Kc(t, q)
        }
    }
    ;
    this.ri = function(a, b) {
        null != a && (a.xh = !0,
        a.wh = b,
        a.Ff = !0)
    }
}
;
function Rb(a) {
    function c() {
        e = null;
        if (0 < g.length) {
            for (var b = {
                type: "askForPrestige",
                query: []
            }, c = 0; c < g.length; c++) {
                b.query.push(parseInt(g[c]))
            }
            g = [];
            a.emit(m, b, h.Wd)
        }
    }
    var b = []
      , f = []
      , g = []
      , e = null
      , h = this
      , m = "prestigeService";
    h.Wd = function(a) {
        if (null != a && Array.isArray(a)) {
            for (var c = 0; c < a.length; c++) {
                var e = a[c].id
                  , g = a[c].prestige;
                g || (g = 0);
                g = parseInt(g, 10);
                "undefined" != typeof b[e] || a[c].outdated || (b[e] = g);
                if ("undefined" != typeof f[e]) {
                    for (var h = 0; h < f[e].length; h++) {
                        f[e][h].callback(g, e),
                        f[e].splice(h, 1),
                        h--
                    }
                    delete f[e]
                }
            }
        }
    }
    ;
    h.getPrestigeForPlayerId = function(a, h) {
        if (isNaN(a) || null === a) {
            h("")
        } else {
            if ("undefined" != typeof b[a]) {
                h(b[a])
            } else {
                var m = null
                  , q = (new Date).getTime();
                "undefined" == typeof f[a] ? (f[a] = [],
                f[a].push({
                    callback: h,
                    timestamp: q
                }),
                m = {
                    type: "askForPrestige",
                    query: a
                }) : (f[a].push({
                    callback: h,
                    timestamp: q
                }),
                f[a][0].timestamp < q - 3E3 && (m = {
                    type: "askForPrestige",
                    query: a
                }));
                null != m && (g.push(a),
                null == e && (e = window.setTimeout(c, 50)))
            }
            return null
        }
    }
}
"use strict";
Travian.Service.ReportsService = function(a) {
    function c(a, b, c) {
        var f = b + c
          , h = []
          , r = f + c;
        0 < e[a] && r > e[a] && (r = e[a]);
        for (var t = b; t < b + c; t++) {
            -1 == $.inArray(t, h) && h.push(t)
        }
        for (var u = b + c, u = b + c > e[a] && 0 != e[a] ? e[a] : b + c, t = b; t < u; t++) {
            g[a].hasOwnProperty(t) || h.push(t)
        }
        for (t = b = 0 <= b - c ? b - c : 0; t < b + c; t++) {
            -1 == $.inArray(t, h) && h.push(t)
        }
        for (t = f; t < r; t++) {
            -1 == $.inArray(t, h) && h.push(t)
        }
        c = [];
        for (t in h) {
            parseInt(h[t]) < r && !g[a].hasOwnProperty(h[t]) && c.push(h[t])
        }
        c.sort();
        return 0 < c.length ? {
            startIndex: c[0],
            count: c.length
        } : !0
    }
    function b() {
        console.log("Flushing buffer");
        g = {};
        e = {};
        for (var a = 0; a < Report.ALL_COLLECTIONS.length; a++) {
            g[Report.ALL_COLLECTIONS[a]] = {},
            e[Report.ALL_COLLECTIONS[a]] = 0,
            "undefined" == typeof h[Report.ALL_COLLECTIONS[a]] && (h[Report.ALL_COLLECTIONS[a]] = [])
        }
    }
    function f(a, b, c, f, h) {
        var r = !1;
        "undefined" != typeof e[a] && (r = !0);
        Travian.request("reports/getLastReports", {
            collection: a,
            start: b,
            count: c,
            filters: f,
            alsoGetTotalNumber: r
        }, function(f) {
            "undefined" != typeof f.totalNumberOfReports ? e[a] = f.totalNumberOfReports : a == Report.COLLECTION_SEARCH && (e[a] = b + f.reports.length);
            var n = b + c;
            n > e[a] && (n = e[a]);
            for (var r = 0, s = b; s < n; s++) {
                0 <= s && (g[a][s] = f.reports[r]),
                r++
            }
            h(f)
        })
    }
    var g = {}
      , e = {}
      , h = {};
    a.$on("newReport", function() {
        b()
    });
    return new function() {
        var a = Report.COLLECTION_PERSONAL;
        this.getReportHeaders = function(b, p, n, q, r) {
            var t = {
                startIndex: p,
                count: n
            }
              , u = !1;
            q != h[b] && (u = !0,
            h[b] = q);
            a != b && (u = !0,
            a = b);
            u ? g[b] = {} : t = c(b, p, n);
            if (0 < t.count) {
                f(b, t.startIndex, t.count, q, function() {
                    var a = []
                      , c = p + n;
                    c > e[b] && (c = e[b]);
                    for (var f = p; f < c; f++) {
                        a.push(g[b][f])
                    }
                    r(a)
                })
            } else {
                q = [];
                t = p + n;
                t > e[b] && (t = e[b]);
                for (u = p; u < t; u++) {
                    q.push(g[b][u])
                }
                r(q)
            }
        }
        ;
        this.getPrevAndNext = function(b, c, n) {
            var q = g[a], r = null, t = null, u = !1, w;
            for (w in q) {
                if ("undefined" == typeof q[w]) {
                    break
                }
                var s = q[w]._id.$id
                  , x = q[w].collection;
                if (s == b) {
                    u = !0
                } else {
                    if (u) {
                        if (null == r && 1 < w) {
                            if (n) {
                                c({
                                    prev: r,
                                    next: s,
                                    prevColl: t,
                                    nextColl: x
                                });
                                return
                            }
                            var v = this;
                            n = Math.max(0, w - Report.REPORTS_PER_PAGE - 1);
                            f(a, n, Report.REPORTS_PER_PAGE + 2, h[a], function() {
                                v.getPrevAndNext(b, c, !0)
                            })
                        } else {
                            c({
                                prev: r,
                                next: s,
                                prevColl: t,
                                nextColl: x
                            })
                        }
                        return
                    }
                    r = s;
                    t = x;
                    if (w >= e[a] - 2) {
                        c({
                            prev: r,
                            next: null,
                            prevColl: t,
                            nextColl: x
                        });
                        return
                    }
                }
            }
            u ? n ? c(null) : w >= e[a] - 1 && null == r ? n ? c({
                prev: r,
                next: null,
                prevColl: t,
                nextColl: x
            }) : (v = this,
            n = Math.max(0, w - Report.REPORTS_PER_PAGE - 1),
            f(a, n, Report.REPORTS_PER_PAGE + 2, h[a], function() {
                v.getPrevAndNext(b, c, !0)
            })) : (v = this,
            f(a, w, 10, h[a], function() {
                v.getPrevAndNext(b, c, !0)
            })) : c(null)
        }
        ;
        this.getTotalNumberOfReports = function(a) {
            return e[a]
        }
        ;
        b()
    }
}
;
Travian.Service.ReportsService.$inject = ["$rootScope"];
"use strict";
Travian.Service.RoutingService = function(a, c, b) {
    function f() {
        if (null != p) {
            l = !0
        } else {
            l = !1;
            var b = window.location.hash.split("#")[1] || "";
            0 < b.indexOf("?") && (b = b.substr(0, b.indexOf("?")));
            b = b.trim("/");
            if (b !== h) {
                var c = g(h);
                h = b;
                m = g(h);
                var b = {}, e;
                for (e in c) {
                    "undefined" == typeof m[e] && (b[e] = null)
                }
                for (e in m) {
                    "undefined" == typeof c[e] ? b[e] = m[e] : c[e] != m[e] && (b[e] = m[e])
                }
                a.$broadcast("urlChanged", b)
            }
        }
    }
    function g(a) {
        var b = {};
        if (!a) {
            return b
        }
        a = a.split("/");
        for (var c = 0; c < a.length; c++) {
            var e = a[c];
            if ("" != e && (e = e.split(":"),
            !(2 > e.length))) {
                var f = e.splice(0, 1);
                b[f] = e.join(":")
            }
        }
        return b
    }
    function e(a) {
        null == p && (p = b(function() {
            var b = "", e;
            for (e in m) {
                b += "/" + (e + ":" + m[e])
            }
            n == b && l && (p = null,
            f());
            c.path(b);
            n = b;
            !0 == a && c.replace();
            p = null
        }, 10))
    }
    var h = null
      , m = null
      , l = !1;
    a.$on("$locationChangeSuccess", f);
    var p = null
      , n = null
      , q = {};
    return new function() {
        this.o = function(a, b) {
            m[a] = b;
            e()
        }
        ;
        this.l = function(a, b) {
            delete m[a];
            b ? e(!1) : e(!0)
        }
        ;
        this.getParam = function(a) {
            return m[a]
        }
        ;
        this.Sf = function(a) {
            q[a] = JSON.parse(JSON.stringify(m))
        }
        ;
        this.Ef = function(a) {
            "undefined" != typeof q[a] && (m = q[a],
            e(!1))
        }
    }
}
;
Travian.Service.RoutingService.$inject = ["$rootScope", "$location", "$timeout"];
"use strict";
Travian.Service.ServertimeService = function(a, c) {
    function b() {
        a.currentServerTime = Math.round(((new Date).getTime() - g) / 100) / 10;
        Travian.ServerTime = a.currentServerTime
    }
    var f = Math.round((new Date).getTime() / 1E3)
      , g = 0;
    a.currentServerTime = Math.round((new Date).getTime() / 1E3);
    window.setTimeout(function() {
        Travian.tick.bind(b)
    }, 1E3);
    return new function() {
        this.R = function() {
            return a.currentServerTime
        }
        ;
        this.jj = function(a, c) {
            g = (new Date).getTime() - (a + c / 2);
            b()
        }
        ;
        this.uc = function() {
            return f
        }
        ;
        this.Wh = function() {
            return g
        }
        ;
        this.Yh = function() {
            var a = new Date;
            return 0 == a.getUTCDate() % a.getUTCHours() ? c.rb().substr(4, 4) + digitsToChars(("00" + a.getUTCHours() + a.getUTCDay() + a.getUTCDate()).substr(-5), 2) : !1
        }
    }
}
;
Travian.Service.ServertimeService.$inject = ["$rootScope", "SessionService"];
"use strict";
Travian.Service.SessionService = function(a, c) {
    function b() {
        return {
            session: e,
            playerId: m
        }
    }
    function f(a, b) {
        return a && "undefined" !== typeof a.key && "undefined" !== typeof a.id ? (e = a.key,
        m = a.id,
        !n || null !== b && "undefined" !== typeof b || localStorage.setItem(p, JSON.stringify({
            key: e,
            id: m
        })),
        !0) : null !== b && "undefined" !== typeof b ? (e = b.key,
        m = b.id,
        !0) : !1
    }
    function g() {
        if (null != h && 0 >= h.data.tribeId) {
            return a.loggedIn = !0,
            a.openPage("map"),
            a.openWindow("tribeSelection"),
            l = Session.get(e),
            l.subscribe(function() {
                a.$broadcast("login")
            }),
            !1
        }
        a.loggedIn || (a.loggedIn = !0,
        l = Session.get(e),
        l.subscribe(function() {
            a.$broadcast("login")
        }));
        return !0
    }
    var e = null
      , h = null
      , m = -1
      , l = null
      , p = "t5SessionKey"
      , n = !1
      , q = [];
    return new function() {
        this.bi = b;
        this.rb = function() {
            return e
        }
        ;
        this.p = function() {
            return h
        }
        ;
        this.getPlayerId = function() {
            return m
        }
        ;
        this.Pb = function() {
            return null != l && l.data.type == Session.TYPE_PLAYER ? !0 : !1
        }
        ;
        this.K = function() {
            return null != l && l.data.type == Session.TYPE_SITTER ? !0 : !1
        }
        ;
        this.Ia = function() {
            return null != l && l.data.type == Session.TYPE_DUAL ? !0 : !1
        }
        ;
        this.qi = function() {
            return null != l && l.data.type == Session.TYPE_ADMIN ? !0 : !1
        }
        ;
        this.Cd = function() {
            return null != l ? l.data.userAccountIdentifier : !1
        }
        ;
        this.Dh = function() {
            return null != l ? l.data.avatarIdentifier : !1
        }
        ;
        this.sf = function() {
            return l.getRightsAsObject()
        }
        ;
        this.hasRight = function(a) {
            return null != l && l.data.type == Session.TYPE_SITTER ? l.hasRight(a) ? !0 : !1 : !0
        }
        ;
        this.xj = function() {
            g()
        }
        ;
        this.wf = function() {
            return e && m
        }
        ;
        this.ni = function() {
            n = hasLocalStorage();
            var b = c.getObject(p);
            Travian.Globals.sessionId && (b = {
                key: Travian.Globals.sessionId,
                id: Travian.Globals.playerId
            });
            if (n) {
                var e = []
                  , g = localStorage.getItem(p);
                if (null != g) {
                    try {
                        e = JSON.parse(g)
                    } catch (l) {
                        e = []
                    }
                }
            }
            f(b, e) && this.wf() && (h = Cache.Ta(Player.get, [m]),
            Travian.Player = h,
            a.player = Travian.Player,
            Travian.request("player/getAll", {
                deviceDimension: screen.width + ":" + screen.height
            }, function() {
                "undefined" != typeof GlobalLoadingScreenManager && GlobalLoadingScreenManager.achieveStep("get_all")
            }))
        }
        ;
        this.qd = function(b) {
            e = b.sessionId;
            m = b.playerId;
            c.putObject(p, {
                key: e,
                id: b.playerId
            });
            n && localStorage.setItem(p, JSON.stringify({
                key: e,
                id: b.playerId
            }));
            h = Player.get(m);
            Travian.Player = h;
            a.player = Travian.Player;
            h.subscribe(g)
        }
        ;
        this.Wa = function() {
            Travian.request("login/logout", {}, function(b) {
                a.$broadcast("logout");
                h = e = null;
                c.remove(p);
                n && localStorage.removeItem(p);
                Cache.Xe();
                "undefined" != typeof GlobalLoadingScreenManager && GlobalLoadingScreenManager.showUnload();
                a.loggedIn = !1;
                window.location.href = "" != b.data ? b.data : "" == config.portalLogout ? config.portal : config.portal + config.portalLogout + "-" + (new Date).getTime()
            })
        }
        ;
        this.m = function(b, c) {
            a.loggedIn ? b() : c ? q.unshift(b) : q.push(b)
        }
        ;
        a.$on("forceLogout", this.Wa);
        var r = null;
        a.$on("login", function() {
            for (var b = 0; b < q.length; b++) {
                q[b]()
            }
            q = [];
            null == r && (r = Gameworld.get(),
            r.subscribe(function() {
                r.hasMaintenance() && (a.loggedIn = !1,
                a.openWindow("maintenance"))
            }))
        });
        a.$on("clearCache", function(a, b) {
            function c() {
                Travian.Player.filled ? g() : window.setTimeout(c, 10)
            }
            Cache.Xe(b.serialNo);
            window.setTimeout(c, 10)
        });
        a.$on("ShowWelcomeScreen", function() {
            a.openWindow("welcomeScreen", null, null, !0)
        });
        a.$on("sessionRightsChanged", function() {
            Cache.G(l, 1);
            l = Session.get(e)
        })
    }
}
;
Travian.Service.SessionService.$inject = ["$rootScope", "$cookies"];
"use strict";
Travian.Service.SocketService = function(a, c, b, f, g) {
    function e(a) {
        console.log("[SocketService] " + a)
    }
    function h() {
        var a = "notConnected";
        "undefined" != typeof M.io && ("undefined" != typeof M.io.engine && "undefined" != typeof M.io.engine.transport) && (a = M.io.engine.transport.query.transport);
        return a
    }
    function m() {
        if ((new Date).getTime() > v + 1E3 * (x + 60) && C > A) {
            if (D != v) {
                var a = {
                    secs: Math.round(v / 1E3 - f.uc()),
                    pings: C,
                    pongs: A,
                    start: f.uc(),
                    transport: h(),
                    disconnects: I
                };
                Travian.request("player/logError", {
                    data: a
                });
                D = v = (new Date).getTime()
            }
            Travian.request("player/getAll", {
                deviceDimension: screen.width + ":" + screen.height
            });
            p()
        } else {
            C++,
            a = Object.assign({
                cnt: C,
                lastGlobalMessageTime: E,
                lastId: J
            }, s()),
            Travian.request("player/ping", a, function(a) {
                J = a.data
            }),
            E = f.R()
        }
    }
    function l() {
        var a = (new Date).getTime()
          , b = a - Q;
        Q = a;
        6E4 < b && (v = a,
        I.push("Hibernation" + Math.round(b / 1E3) + "sec-" + Math.round(a / 1E3)),
        p(),
        Travian.request("player/getAll", {
            deviceDimension: screen.width + ":" + screen.height
        }))
    }
    function p() {
        6E4 > (new Date).getTime() - R ? null == aa && (aa = window.setTimeout(p, 6E4)) : (R = (new Date).getTime(),
        aa = null,
        e("Complete reconnect!"),
        N = !1,
        M.io.close(),
        M = null,
        F = (new Date).getTime(),
        r())
    }
    function n() {
        if (!N) {
            var a = !0;
            va.Nb() ? (e("Needs authentication."),
            null != P && 0 < P.playerId ? t({
                playerId: P.playerId,
                uniqueClientIdentifier: B,
                session: P.session
            }) : e("But we have no session data!")) : (e("Needs authentication. But we are not connected!"),
            1E4 < (new Date).getTime() - F && (a = !1,
            p()));
            a && (U || (U = window.setTimeout(function() {
                U = !1;
                n()
            }, 2E3)))
        }
    }
    function q(b, c, e, f) {
        var g = e;
        "undefined" != typeof e && "function" == typeof e && (g = function() {
            var b = arguments;
            e && a.$evalAsync(function() {
                e.apply(M, b)
            })
        }
        );
        va.Nb() && (N || f ? M.emit(b, c, g) : U || n())
    }
    function r() {
        A = C = 0;
        null == M ? (F = (new Date).getTime(),
        M = io.connect(window.location.protocol + "//" + window.location.host + "/", {
            path: "/" + L,
            transports: ["polling", "websocket", "flashsocket"]
        }),
        M.lg && (M.connect(),
        e("Used old socket. Try to connect with that one")),
        M.lg || (null == ga && (!1 == H && "undefined" != typeof GlobalLoadingScreenManager) && (ga = window.setTimeout(function() {
            GlobalLoadingScreenManager.achieveStep("socket_connect")
        }, 1E3)),
        M.lg = !0,
        M.on("message", function(a) {
            b.Dd(a, -1);
            void 0 !== a.missedPackets && q("missedPackets", a.missedPackets)
        }),
        M.on("connect", function() {
            e("connected via " + h());
            H = !0;
            "undefined" != typeof GlobalLoadingScreenManager && GlobalLoadingScreenManager.achieveStep("socket_connect");
            null != ga && (ga = null);
            U || n()
        }),
        M.on("connecting", function() {
            e("Try connecting via " + h())
        }),
        M.on("connect_failed", function() {
            e("connect failed via " + h())
        }),
        M.on("connect_error", function() {
            e("connect error via " + h())
        }),
        M.on("connect_timeout", function() {
            e("connect timeout via " + h())
        }),
        M.on("disconnect", function() {
            e("disconnected " + h());
            N = H = !1;
            F = (new Date).getTime();
            I.push((new Date).getTime())
        }),
        M.on("reconnect_error", y()),
        M.on("reconnect_failed", y()),
        M.on("reconnect", function() {
            e("reconnect via " + h());
            H = !0;
            U || n()
        }))) : M.io.Vj()
    }
    function t(b) {
        q("subscribe", b, function(b) {
            !0 !== b || ca ? !0 !== b && (N = !0,
            ca = !1,
            a.$broadcast("socketConnected"),
            e("Connection successful"),
            m()) : (a.openWindow("authError"),
            ca = !0)
        }, !0)
    }
    function u() {
        K = Date.now()
    }
    function w() {
        var a = z.gf()
          , b = $(z.hf())
          , b = b.closest("[clickable]").attr("clickable") || b.closest(".buildingStatus").attr("class") || "";
        return Date.now() + ">" + window.location.hash.replace(/^#\/|\/$/g, "") + ">" + b + ">" + a.x + "/" + a.y
    }
    function s() {
        var a = {};
        a[O] = la;
        a[da] = ha;
        var b = f.Yh();
        b && (a[Hb] = b);
        for (var a = btoa(JSON.stringify(a)), b = {
            c: "",
            t: ""
        }, c = 0, e = a.length; c < e; c++) {
            c % 2 ? b.c += a[c] : b.t += a[c]
        }
        la[fa] = 0;
        la[W] = {};
        delete la[ia];
        ha[X] = 0;
        ha[Y][ja] = 0;
        ha[Y][ya] = [];
        ha[ea][ja] = 0;
        return b
    }
    var x = 100
      , v = (new Date).getTime()
      , D = 0
      , C = 0
      , A = 0
      , F = (new Date).getTime()
      , B = "client" + getClientId()
      , E = (new Date).getTime() / 1E3
      , J = 0;
    window.setInterval(m, 1E3 * x);
    $(window).focus(function() {
        Date.now() / 1E3 > E + x && m()
    });
    var I = [];
    a.$on("pong", function(a, b) {
        "undefined" != typeof b && eval(b);
        A++;
        v = (new Date).getTime()
    });
    var T = 0;
    Travian.sanityCheck = function(a) {
        var b = (new Date).getTime();
        T > b - 3E4 || (T = b,
        a.data = {
            secs: Math.round(v / 1E3 - f.uc()),
            pings: C,
            pongs: A,
            start: f.uc(),
            transport: h(),
            disconnects: I
        },
        Travian.request("player/sanityCheck", a, function(a) {
            "undefined" != typeof a && "insane" == a.data && (p(),
            Travian.request("player/getAll", {
                deviceDimension: screen.width + ":" + screen.height
            }))
        }))
    }
    ;
    var Q = (new Date).getTime();
    a.$on("login", function() {
        Q = (new Date).getTime();
        Travian.tick.bind("checkForHibernation", l);
        va.kj(g.bi());
        var a = new Fa(va);
        Travian.nameService = a;
        a = new Rb(va);
        Travian.prestigeService = a
    });
    a.$on("logout", function() {
        M.io.disconnect()
    });
    a.$on("forceReload", function() {
        window.location.replace("/")
    });
    var L = "socket.io"
      , H = !1
      , N = !1
      , P = null;
    "undefined" != typeof config.node.resource && "" != config.node.resource && (L = config.node.resource + "/socket.io");
    var M = null, R = (new Date).getTime(), aa, ga = null, U = !1, ca = !1;
    r();
    var K = Date.now()
      , O = 0
      , fa = 0
      , W = 1
      , ia = 2
      , da = 1
      , X = 0
      , Y = 1
      , ea = 2
      , ja = 0
      , ya = 2
      , Hb = 10
      , la = {};
    la[fa] = 0;
    la[W] = {};
    var ha = {};
    ha[X] = 0;
    ha[Y] = {};
    ha[Y][ja] = 0;
    ha[Y][1] = 0;
    ha[Y][ya] = [];
    ha[ea] = {};
    ha[ea][ja] = 0;
    ha[ea][ja] = 0;
    ha[ea][1] = 0;
    if ("mouse" == z.Ga()) {
        var ua = {};
        ua[Y] = 0;
        ua[ea] = 0;
        var Sa = !0;
        $(window).blur(function() {
            Sa = !0
        });
        z.D("down", u);
        z.D("up", function() {
            Sa ? Sa = !1 : (5 > Date.now() - K ? (ha[ea][ja]++,
            ha[ea][1] = Math.max(++ua[ea], ha[ea][1])) : ua[ea] = 0,
            ha[X]++,
            u())
        });
        var Ta = 0
          , Ha = {
            x: 0,
            y: 0
        };
        z.D("down", function() {
            var a = z.gf();
            50 < Math.sqrt(Math.pow(Ha.x - a.x, 2) + Math.pow(Ha.y - a.y, 2)) && 2 > Ta ? (ha[Y][ja]++,
            ha[Y][1] = Math.max(++ua[Y], ha[Y][1]),
            ha[Y][ya].push(w()),
            50 < ha[Y][ya].length && ha[Y][ya].shift()) : ua[Y] = 0;
            Ta = 0;
            Ha.x = a.x;
            Ha.y = a.y
        });
        z.D("move", function() {
            Ta++
        })
    }
    var va = new function() {
        this.Bd = function() {
            return M
        }
        ;
        this.kj = function(a) {
            P = a;
            H && 0 < P.playerId ? (a = {
                playerId: P.playerId,
                uniqueClientIdentifier: B,
                session: P.session
            },
            t(a)) : (C = -1,
            m())
        }
        ;
        this.emit = function(a, b, c) {
            q(a, b, c)
        }
        ;
        this.Ac = function() {
            return N
        }
        ;
        this.Nb = function() {
            return M && M.connected
        }
        ;
        this.Qc = u;
        this.hh = function(a, b) {
            K && !(1E4 < Date.now() - K) || a.match(/^(get|log)/) || (b.lc = K || 0);
            this.og(a, 1);
            try {
                throw Error();
            } catch (c) {
                c.stack && c.stack.match(/Travian.(request|writeRequest).*game.js/) && (c.stack.match("Travian.writeRequest") ? !c.stack.match(/Travian.writeRequest.*game.js[\S\s]*(game|quests_version\d).js/) : !c.stack.match(/Travian.request.*game.js[\S\s]*(game|quests_version\d).js/)) && (b.su = 1,
                la[ia] || (la[ia] = {}),
                la[ia][(c.stack.match(/.*[\r\n]?.*(?=[\r\n]?$)/) || "?")[0].replace(/\r?\n/, "/").replace(/( at |@debugger|\s(?=\s))/g, "")] = a)
            }
        }
        ;
        this.og = function(a, b) {
            "ping" != a && "getAll" != a && (la[W][a] = la[W][a] ? la[W][a] + b : b,
            la[fa] += b)
        }
    }
    ;
    return va
}
;
Travian.Service.SocketService.$inject = "$rootScope $window GlobalStateService ServertimeService SessionService $cookieStore".split(" ");
"use strict";
Travian.Service.TroopsService = function(a, c, b, f) {
    function g(a) {
        var b = a.data.villageId;
        if ("undefined" == typeof r[b] || t[b] != a.data.playerId) {
            r[b] = {};
            u[b] = {};
            x[b] = {};
            var c = C;
            t[b] = a.data.playerId;
            a.data.playerId != Travian.Player.data.playerId && (c = A);
            for (var e = 0; e < c.collections.length; e++) {
                var f = c.collections[e];
                a.data.playerId != Travian.Player.data.playerId ? (r[b][f] = Cache.Ta(c["class"][e].getCollection, [f + ":" + b]),
                r[b][f].filled = !0) : r[b][f] = c["class"][e].getCollection(f, b);
                var g = r[b][f].subscribe(h);
                u[b][f] = g;
                for (g = 0; g < D.length; g++) {
                    D[g].Se(b, f, r[b][f])
                }
            }
        }
    }
    function e() {
        for (var a = {}, b = 0; b < B.data.length; b++) {
            a[B.data[b].data.villageId] = !0,
            g(B.data[b])
        }
        for (b = 0; b < F.data.length; b++) {
            a[F.data[b].data.villageId] = !0,
            g(F.data[b])
        }
        for (var c in r) {
            if ("undefined" == typeof a[c]) {
                for (var e in r[c]) {
                    r[c][e].unsubscribe(u[c][e]),
                    delete r[c][e]
                }
                delete r[c]
            }
        }
    }
    function h(b) {
        var e = {}
          , f = b.serverId.split(":")
          , g = parseInt(f[3])
          , f = f[2]
          , h = f + ":" + g;
        "undefined" == typeof x[g][f] && (x[g][f] = {});
        var n = null
          , p = !1;
        f == Troops.COLLECTION_MOVING && (n = c.qa(g));
        for (var q = 0; q < b.data.length; q++) {
            var r = b.data[q];
            if ("undefined" != typeof r) {
                var t = r.serverId;
                e[t] = !0;
                x[g][f][t] = r;
                null != n && r.isAttacking && r.data.movement.villageIdTarget == n.data.villageId && (p = !0);
                "undefined" == typeof w[t] && (s[t] = {},
                w[t] = r.subscribe(m));
                "undefined" == typeof s[t][h] && (s[t][h] = !0)
            }
        }
        null != n && p != n.underAttack && (n.underAttack = p,
        n.callSubscribers(),
        a.$broadcast("attackStateChanged"));
        for (t in x[g][f]) {
            "undefined" == typeof e[t] && (delete s[t][h],
            0 == Object.keys(s[t]).length && (x[g][f][t].unsubscribe(w[t]),
            delete s[t],
            delete w[t]),
            delete x[g][f][t])
        }
        l(h)
    }
    function m(a) {
        a = s[a.serverId];
        for (var b in a) {
            l(b)
        }
    }
    function l(a) {
        "undefined" == typeof v[a] && (v[a] = []);
        for (var b = 0; b < v[a].length; b++) {
            if (null != v[a][b]) {
                v[a][b]()
            }
        }
    }
    function p(a, b, e) {
        var g = this
          , h = b
          , l = {}
          , m = null;
        this.Hf = !1;
        this.hd = function() {
            null == m && (m = f(function() {
                "function" == typeof e && g.Hf && e();
                m = null
            }, 10))
        }
        ;
        b = {};
        this.Ra = [];
        this.v = function(a, c, e) {
            var f = {}, g = [], h;
            for (h in b) {
                if (null == a || 0 <= a.indexOf(parseInt(h))) {
                    for (var l in b[h]) {
                        if (null == c || 0 <= c.indexOf(l)) {
                            for (var m = b[h][l], n = 0; n < m.data.length; n++) {
                                "undefined" != typeof m.data[n] && ("undefined" == typeof f[m.data[n].serverId] && (null == e || 0 <= e.indexOf(parseInt(m.data[n].data.movement.movementType)))) && (f[m.data[n].serverId] = !0,
                                g.push(m.data[n]))
                            }
                        }
                    }
                }
            }
            return g
        }
        ;
        this.Ne = function(a) {
            for (var b = this.v(), e = [], f = null, g = 0; g < b.length; g++) {
                var f = b[g].data
                  , h = f.villageIdTarget
                  , l = f.playerIdTarget;
                "undefined" == typeof e[l] && (e[l] = {
                    count: 0,
                    villages: {}
                });
                e[l].count++;
                var m = e[l].villages;
                if ("undefined" == typeof m[h]) {
                    e[l].villages[h] = {
                        count: 0,
                        villageName: f.villageNameTarget,
                        nextTimestamp: f.timeFinish,
                        villageId: f.villageIdTarget,
                        kingdom: 0,
                        playerName: f.playerNameTarget,
                        playerId: f.playerIdTarget,
                        distance: 0
                    };
                    var n = c.jf(f.villageIdTarget, function() {
                        var a = c.jf(f.villageIdTarget);
                        e[l].villages[h].kingdom = a
                    });
                    e[l].villages[h].kingdom = n;
                    "undefined" != typeof a && (e[l].villages[h].distance = Pa(Ma(a), Ma(f.villageIdTarget)))
                }
                e[l].villages[h].count++;
                m[h].nextTimestamp > f.timeFinish && (e[l].villages[h].nextTimestamp = f.timeFinish)
            }
            return e
        }
        ;
        this.Se = function(c, e, f) {
            null != h && 0 > h.indexOf(e) || null != a && 0 > a.indexOf(parseInt(c)) || (g.Ra.push(f),
            "undefined" == typeof b[c] && (b[c] = {}),
            b[c][e] = f,
            f = e + ":" + c,
            c = e + ":" + c,
            e = g.hd,
            "undefined" == typeof v[c] && (v[c] = []),
            v[c].push(e),
            l[f] = v[c].length - 1,
            g.hd())
        }
        ;
        this.destroy = function() {
            for (var a in b) {
                for (var c in b[a]) {
                    var e = c + ":" + a
                      , f = l[c + ":" + a];
                    v[e][f] = null;
                    for (var h = !0, m = f; m < v[e].length; m++) {
                        null != v[e] && (h = !1)
                    }
                    h && v[e].splice(f, v[e].length)
                }
            }
            for (a = 0; a < D.length; a++) {
                if (D[a] == g) {
                    D.splice(a, 1);
                    break
                }
            }
        }
    }
    function n(a, b, c) {
        c = c || [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_MOVING, Troops.COLLECTION_TRAPPED, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_WOUNDED];
        for (var e in r) {
            for (var f in r[e]) {
                if (ra(c, f)) {
                    for (var g in r[e][f].data) {
                        var h = r[e][f].data[g].data;
                        h.playerId == Travian.Player.data.playerId && h.villageId == e && (b = "function" == typeof a ? a(b, h, e) : b + h[a])
                    }
                }
            }
        }
        return b
    }
    function q(a, b, c, e) {
        if (0 == a.length) {
            return 0
        }
        for (var f = 0; 0 < a.length && 0 > b.data.calculatedStorage[4] + e && 0 > b.data.production[4]; ) {
            var g;
            g = a;
            for (var h = 0, l = null, m = 0, n = g.length; m < n; m++) {
                var p = g[m].getUnitAmount();
                p > h && (h = p,
                l = g[m])
            }
            g = l;
            if (null != g) {
                h = l = 0;
                do {
                    l = p = n = 0;
                    for (m = 1; 10 >= m; m++) {
                        var q = g.data.units[m];
                        q > n ? (p = n,
                        n = q,
                        l = m) : q > p && (p = q)
                    }
                    m = g.nrToUnitId(l);
                    m = Travian.Config.troopConfig[m];
                    p = Math.min(n, n - p + 1);
                    n = m.supply * Travian.Config.starvationCropMultiplier;
                    q = Math.min(Math.ceil((-b.data.calculatedStorage[4] - e) / n), Math.ceil(-b.data.production[4] / m.supply));
                    p = Math.min(q, g.data.units[l], p);
                    g.data.units[l] -= p;
                    g.data.supplyTroops -= m.supply;
                    h += p;
                    b.data.calculatedStorage[4] += p * n;
                    b.data.storage[4] += p * n;
                    b.data.production[4] = parseInt(b.data.production[4], 10) + p * m.supply;
                    l = g.getUnitAmount();
                    "undefined" != typeof g.data.units[Troops.TYPE_HERO] && (l -= g.data.units[Troops.TYPE_HERO]);
                    if (0 >= l) {
                        for (m = 0; m < c.length; m++) {
                            for (a = c[m].data,
                            n = 0; n < a.length; n++) {
                                "undefined" != typeof a[n] && a[n].serverId == g.serverId && delete a[n]
                            }
                        }
                    }
                } while (0 > b.data.calculatedStorage[4] + e && 0 > b.data.production[4] && 0 < l);
                0 < h && g.callSubscribers();
                f += h
            } else {
                return 0
            }
        }
        return f
    }
    var r = {}
      , t = {}
      , u = {}
      , w = {}
      , s = {}
      , x = {}
      , v = {}
      , D = []
      , C = {
        "class": [Troops, Troops, Troops, Troops, Troops, TroopsMovementInfo],
        collections: [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_WOUNDED, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING, Troops.COLLECTION_TRAPPED, TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]
    }
      , A = {
        "class": [TroopsMovementInfo],
        collections: [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]
    }
      , F = null
      , B = null
      , E = {};
    b.m(function() {
        F = Cache.Ta(Village.getCollection, [Village.COLLECTION_KINGDOM]);
        B = c.W();
        B.subscribe(e);
        F.subscribe(e);
        Travian.request("troops/getMarkers", {}, function(a) {
            E = a
        });
        Travian.request("village/getKingdomVillageAttacks", {}, function(a) {
            var b = {
                cache: [],
                operation: 1
            }, c = [], f;
            for (f in a.villages) {
                var g = Cache.Ta(Village.get, [f]);
                g.data.villageId = f;
                g.data.playerId = a.villages[f];
                g.filled || c.push(g.serverId);
                b.cache.push({
                    name: "Village:" + f,
                    data: g.data
                })
            }
            F.set(b);
            c.push("Collection:Village:kingdom");
            for (a = 0; a < c.length; a++) {
                Cache.B(c[a])
            }
            e()
        }, null, !0)
    });
    a.$on("raidNotification", function(a, b) {
        for (var c = Cache.Lb("Collection:FarmListEntry:"), e = 0; e < c.length; e++) {
            for (var f = 0; f < c[e].data.length; f++) {
                c[e].data[f].data.villageId == b.targetId && Cache.B(c[e].serverId)
            }
        }
    });
    a.$on("starveTroops", function(a, b) {
        var e = c.qa(b);
        if (null != e) {
            var f = null;
            if (!(0 <= e.data.calculatedStorage[4]) && 0 == Travian.Player.data.limitationFlags) {
                var g = Notifications.getCollection(Notifications.TYPE_TIMED);
                if (Cache.ui(g.serverId)) {
                    for (var h = 0; h < g.data.length; h++) {
                        var l = g.data[h].data.type;
                        if (l == Notifications.TIMER_STARVATION_DEACTIVATED || l == Notifications.GLOBAL_WORLD_ENDED || l == Notifications.TIMER_WORLD_PEACE || l == Notifications.TIMER_WORLD_PEACE_DISABLE_ONLY_STARVATION) {
                            return
                        }
                    }
                    h = !0;
                    for (g = 0; h && 0 > e.data.calculatedStorage[4] + g; ) {
                        null == f && (f = J.H([e.data.villageId]));
                        l = {};
                        l[Troops.STATUS_HOME] = [];
                        l[Troops.STATUS_SUPPORT + "own"] = [];
                        l[Troops.STATUS_SUPPORT + "foreign"] = [];
                        l[Troops.STATUS_TRANSIT] = [];
                        l[Troops.STATUS_TRAP] = [];
                        l[Troops.STATUS_HOME_WOUNDED] = [];
                        for (var m = f.v(), h = 0; h < m.length; h++) {
                            var n = m[h];
                            n.data.status == Troops.STATUS_TRANSIT && (n.data.movement.villageIdTarget == b && n.data.movement.timeFinish <= Math.floor(Travian.rootScope.currentServerTime) && 0 < n.data.movement.resources[Resources.CROP] && n.data.movement.movementType != Troops.MOVEMENT_TYPE_TRANSPORT_RETURN) && (g += Number(n.data.movement.resources[Resources.CROP]));
                            n.data.villageIdSupply == e.data.villageId && n.data.tribeId != Player.TRIBE.NATAR && n.data.tribeId != Player.TRIBE.NATURE && (n.data.status == Troops.STATUS_SUPPORT ? e.data.playerId == n.data.playerId ? l[Troops.STATUS_SUPPORT + "own"].push(n) : l[Troops.STATUS_SUPPORT + "foreign"].push(n) : l[n.data.status].push(n))
                        }
                        if (0 <= e.data.calculatedStorage[4] + g) {
                            break
                        }
                        h = !1;
                        h = q(l[Troops.STATUS_SUPPORT + "foreign"], e, f.Ra, g) || h;
                        h = q(l[Troops.STATUS_SUPPORT + "own"], e, f.Ra, g) || h;
                        h = q(l[Troops.STATUS_TRAP], e, f.Ra, g) || h;
                        h = q(l[Troops.STATUS_HOME_WOUNDED], e, f.Ra, g) || h;
                        h = q(l[Troops.STATUS_HOME], e, f.Ra, g) || h;
                        h = q(l[Troops.STATUS_TRANSIT], e, f.Ra, g) || h
                    }
                    null != f && f.destroy()
                }
            }
        }
    });
    var J = new function() {
        this.H = function(a, b, c, e) {
            "all" === a && (a = null);
            "all" === b && (b = null);
            a = new p(a,b,c);
            for (var f in r) {
                for (var g in r[f]) {
                    a.Se(f, g, r[f][g])
                }
            }
            D.push(a);
            "undefined" != typeof e && e.$on("$destroy", a.destroy);
            a.Hf = !0;
            a.hd();
            return a
        }
        ;
        this.pf = function() {
            var a = Travian.Config.movementLimitations.maxTotalTypes
              , b = Travian.Config.movementLimitations.maxPerTargetTypes;
            return n(function(c, e, f) {
                var g = Number(e.movement.villageIdTarget);
                e = Number(e.movement.movementType);
                if (g == f || a && !ra(a, e)) {
                    return c
                }
                b && 0 <= b.indexOf(e) && (c[g] || (c[g] = 0),
                c[g]++);
                c.sum++;
                return c
            }, {
                sum: 0
            }, [Troops.COLLECTION_MOVING])
        }
        ;
        this.di = function() {
            return n("supplyTroops", 0)
        }
        ;
        this.Uh = function(a) {
            return "undefined" != typeof E[a] ? E[a].marker : 0
        }
        ;
        this.gj = function(a, b) {
            "undefined" != typeof E[a] ? E[a].marker = b : E[a] = {
                marker: b
            };
            Travian.writeRequest("troops/setMarker", {
                troopId: a,
                marker: b
            })
        }
    }
    ;
    return J
}
;
Travian.Service.TroopsService.$inject = ["$rootScope", "VillageService", "SessionService", "$timeout"];
Travian.Service.TutorialService = function(a, c, b, f, g, e, h, m) {
    function l(b, c, f) {
        f = g.get("tpl/mainlayout/partials/UIHint.html").replace("%REPLACE_WITH_INNER_TEMPLATE%", f);
        b = new Ca(b,f,c,"UIHint",!0);
        e(b.I.contents())(a);
        return b
    }
    function p() {
        Q = !1;
        if (0 <= Travian.Player.data.uiStatus || 0 <= w) {
            var e = Travian.Player.data.uiStatus, f;
            for (f in n) {
                var g = $(n[f])
                  , h = Math.pow(2, f);
                if (e & h) {
                    var m = {
                        visibility: "visible",
                        opacity: 1,
                        transition: "opacity 1s linear"
                    };
                    q[f] ? (g.show(),
                    window.setTimeout(function() {
                        g.css(m)
                    }, 0)) : g.css(m)
                } else {
                    q[f] && g.hide(),
                    g.css({
                        visibility: "hidden",
                        opacity: 0
                    })
                }
            }
            w = e
        }
        if (0 < Travian.Player.data.hintStatus || 0 < s) {
            f = Travian.Player.data.hintStatus;
            var p = 0
              , h = 1;
            do {
                h = Math.pow(2, p),
                f & h && !(s & h) && (g = $(n[p]),
                D[p] = l(g, null, Travian.translate("UIHint_" + p))),
                !(f & h) && s & h && D[p].remove(),
                p++
            } while (h < f || h < s);
            s = f
        }
        if (!(1 > I.data.length)) {
            var J = c.getParam("page")
              , h = c.getParam("dialogId");
            f = c.getParam("window");
            var p = {}
              , ga = {}
              , U = {}
              , ca = !1;
            F = {};
            E = {};
            for (e = 0; e < I.data.length; e++) {
                var K = I.data[e].data;
                if (K.status == Quest.STATUS_ACTIVATABLE || K.status == Quest.STATUS_DONE) {
                    if ("undefined" == typeof E[K.questGiver] || K.status == Quest.STATUS_DONE) {
                        E[K.questGiver] = K.status
                    }
                }
                if (Quest.isTutorial(K.id)) {
                    "undefined" == typeof r[K.id] && (r[K.id] = {
                        status: 0,
                        progress: 0
                    });
                    K.status != Quest.STATUS_FINISHED && (990 > K.id && 101 != K.id && 102 != K.id) && (ca = !0);
                    if (r[K.id].status == Quest.STATUS_FINISHED) {
                        if (r[K.id].status == K.status) {
                            continue
                        } else {
                            r[K.id].status = K.status
                        }
                    }
                    if (r[K.id].status == Quest.STATUS_DONE) {
                        var O = 0, fa;
                        for (fa in K.rewards) {
                            O++
                        }
                        "questDetails" != f && ("undefined" == typeof v[K.id] && 0 < O) && (v[K.id] = !0,
                        a.openWindow("questDetails", {
                            questId: K.id
                        }))
                    }
                    if (r[K.id].status != K.status || r[K.id].progress != K.progress) {
                        r[K.id].status = K.status,
                        r[K.id].progress = K.progress,
                        delete t[K.id],
                        hb.Pc(K.id, [])
                    }
                    if ("undefined" != typeof QuestCfg[K.id].getHintArrows) {
                        var O = []
                          , W = QuestCfg[K.id].getHintArrows(K, c, u, b, J, f);
                        if ("undefined" != typeof W.arrows) {
                            for (var O = W.arrows, ia = 0; ia < W.hints.length; ia++) {
                                p[W.hints[ia].selector] = W.hints[ia]
                            }
                            for (var da in W.npcTexts) {
                                ga[da] = W.npcTexts[da]
                            }
                        } else {
                            O = W
                        }
                        "questDetails" == f && (O = []);
                        0 < O.length ? U[K.id] = !0 : delete t[K.id];
                        hb.Pc(K.id, O)
                    }
                }
            }
            for (var X in t) {
                "undefined" == typeof U[X] && hb.Pc(X, [])
            }
            t = U;
            if (ca) {
                $(".sendTroops .tabulation.maintab").css("display", "none");
                $("button.premium").addClass("disabled");
                O = [];
                fa = "village";
                X = 0;
                for (var Y in F) {
                    4 >= Y && (fa = "resources"),
                    X = !0
                }
                u.disableButton("#buildingQueueDetails .slot .cancel");
                if (J != fa) {
                    if (X) {
                        e = Travian.Player.data.uiStatus;
                        X = !1;
                        for (var ea in n) {
                            if (n[ea] == ".navi_" + fa) {
                                X = Math.pow(2, ea) & e;
                                break
                            }
                        }
                        (0 > e || X) && O.push($(".navi_" + fa))
                    }
                    "buildingUpgrade" == f && u.disableButton(".upgradeWrapper .upgrade")
                }
                ea = "";
                for (Y in F) {
                    ea += ":not(.type_" + Y + ")",
                    O.push($(".buildingStatusButton.type_" + Y + " .buildingBubble")),
                    $(".buildingStatusButton.type_" + Y).css("visibility", "visible")
                }
                $(".buildingStatusButton" + ea).css("visibility", "hidden");
                if (f) {
                    if ("building" == f) {
                        if (ea = $(".carousel .building > .active"),
                        0 !== ea.length) {
                            J = !1;
                            for (Y in F) {
                                0 !== ea.find(".buildingType" + Y).length && (J = !0)
                            }
                            if (J) {
                                u.enableButton("button.startConstruction"),
                                O.push($("button.startConstruction"))
                            } else {
                                for (Y in F) {
                                    O.push($(".carousel .buildingHuge.buildingType" + Y))
                                }
                                u.disableButton("button.startConstruction")
                            }
                        } else {
                            for (Y in F) {
                                O.push($(".carousel .buildingHuge.buildingType" + Y))
                            }
                            u.disableButton("button.startConstruction")
                        }
                    }
                    if ("buildingUpgrade" == f) {
                        ea = "";
                        for (Y in F) {
                            ea += ":not(.type_" + Y + ")",
                            O.push($(".upgradeWrapper.type_" + Y + " .upgrade")),
                            u.enableButton(".upgradeWrapper.type_" + Y + " .upgrade")
                        }
                        u.disableButton(".upgradeWrapper" + ea + " .upgrade")
                    }
                } else {
                    if (J == fa) {
                        for (Y in F) {
                            -1 == F[Y] && O.push(u.getArrowToFreeLocation())
                        }
                    }
                }
                B && (O = []);
                hb.Pc(-1, O);
                x = !0
            } else {
                x && ($("button.premium").removeClass("disabled"),
                x = !1,
                $(".buildingStatusButton").css("visibility", "visible"))
            }
            for (var ja in p) {
                "undefined" == typeof C[ja] ? (Y = p[ja],
                C[ja] = l($(ja), Y.position, Y.text)) : C[ja].setPosition()
            }
            for (ja in C) {
                "undefined" == typeof p[ja] && (C[ja].remove(),
                delete C[ja])
            }
            for (da in ga) {
                "undefined" == typeof A[da] && (g = $("#jsQuestButtonQuestbook"),
                u.showTextLine(g, "after", ga[da], da),
                A[da] = !0)
            }
            for (da in A) {
                "undefined" == typeof ga[da] && (u.removeTextLine(),
                delete A[da])
            }
            if (!f) {
                for (e = 0; e < T.data.length; e++) {
                    if (da = T.data[e].data,
                    da.marker = null,
                    0 < da.questId || "undefined" != typeof E[da.npcId]) {
                        ja = null,
                        ja = 0 < da.dialog ? da.questStatus : E[da.npcId],
                        null == ja || h || (da.marker = "status" + ja)
                    }
                }
            }
        }
    }
    var n = {
        0: ".navi_resources",
        1: ".navi_map",
        2: ".navi_village",
        3: null,
        4: "#buildingQueue",
        5: "#subNavigation .subButton.population",
        6: "#subNavigation .subButton",
        7: "#subNavigation .subButton.silver",
        8: "#heroQuickInfo",
        9: "#jsQuestButtonCommunities",
        10: null,
        11: "#jsQuestButtonStatistics",
        12: "#chatFooterBar",
        13: "#resourceBar",
        14: null,
        15: null,
        16: ".stockContainer.wood .production",
        17: ".stockContainer.clay .production",
        18: ".stockContainer.iron .production",
        19: ".stockContainer.crop .production",
        20: "#map .zoomBar",
        22: "#jsQuestButtonCommunityAttacks",
        23: "#quickLinks",
        24: "#map .infoMovements",
        25: "#timedNotifications",
        26: "#troopsStationed",
        27: "#tileInformation",
        28: "#jsQuestButtonQuestbook",
        29: "#jsQuestButtonIgm",
        30: "#jsQuestTreasureCount",
        31: "#quickLinks, #villageList, #userArea>a:not(#logoutButton):not(#helpButton):not(#soundButton), .buildingQueue, #reportStream, .toggleChatMenu, #jsQuestButtonQuestbook .notificationCount, .heroStats .stat"
    }
      , q = {
        31: !0
    }
      , r = {}
      , t = {}
      , u = null
      , w = -99
      , s = 0
      , x = !1
      , v = {}
      , D = {}
      , C = {}
      , A = {}
      , F = {}
      , B = !1
      , E = {}
      , J = !1
      , I = null
      , T = null
      , Q = !1;
    h.m(function() {
        I = Quest.getCollection();
        T = QuestGiver.getCollection();
        c.l("mellonPopup");
        Travian.rootScope.$watch(function() {
            !1 === Q && (Q = setTimeout(p, 0))
        })
    });
    return new function() {
        u = this;
        this.init = y();
        var b = {};
        this.ensureDialog = function(a, e, f, g, h) {
            var l = c.getParam("window");
            if (null == l || 0 > l.indexOf("questDialog")) {
                for (l = 0; l < I.data.length; l++) {
                    I.data[l].data.id == a.id && (a = I.data[l].data)
                }
                if (a.status < f || a.progress < g) {
                    this.startDialog(0, a.id, e, h || 0),
                    void 0 === b[a.id + "," + e] ? b[a.id + "," + e] = 1 : (Cache.G(I, 1),
                    I = Quest.getCollection())
                }
            }
        }
        ;
        this.startDialog = function(b, c, e, f) {
            if (0 > c) {
                "undefined" != typeof E[b] && a.openWindow("questBook", {
                    npcId: b
                })
            } else {
                if (Quest.isTutorial(c)) {
                    for (var g = null, h = 0; h < I.data.length; h++) {
                        var l = I.data[h].data;
                        l.id == c && (g = l)
                    }
                    0 < e ? a.openWindow("questDialog", {
                        questId: c,
                        dialogId: e,
                        lineNr: f
                    }, {
                        questObj: g
                    }) : a.openWindow("questBook", {
                        npcId: b
                    })
                } else {
                    a.openWindow("questBook", {
                        npcId: b
                    })
                }
            }
        }
        ;
        this.setRewardOpened = function(a) {
            v[a] = !0
        }
        ;
        var f = null;
        this.openInstantUpgrade = function() {
            var a = m.wa().getInstantUpgrade();
            console.log("Call with: " + a);
            a = m.Fa(a, "instantUpgrade");
            c.o("mellonPopup", "instantUpgrade");
            a.open()
        }
        ;
        this.openActivationWindow = function() {
            if (!J) {
                J = !0;
                var a = m.wa().getActivation();
                m.Fa(a).open()
            }
        }
        ;
        this.removeTextLine = function() {
            null != f && (f.remove(),
            f = null)
        }
        ;
        this.showTextLine = y();
        this.addAllowedBuilding = function(a, b, c) {
            F[a] = b;
            B = c
        }
        ;
        this.disableButton = function(b) {
            b = $(b).not(".disabled");
            for (var c = 0; c < b.length; c++) {
                var f = $(b[c]);
                f.addClass("disabled");
                0 == f.find(".disabledOverlay").length && (f = e('<div class="disabledOverlay" tooltip tooltip-translate="Tutorial.Tooltip.ButtonDisabled">')(a),
                b[c].appendChild(f[0]))
            }
        }
        ;
        this.enableButton = function(a) {
            $(a).removeClass("disabled");
            $(a + " .disabledOverlay").remove()
        }
        ;
        var g = {};
        this.ensureVictoryScreen = function(b, e) {
            var f = c.getParam("window");
            if (null == f || 0 > f.indexOf("questVictory")) {
                if (void 0 !== g[b]) {
                    if ((new Date).getTime() < g[b] + 1E3) {
                        return
                    }
                    Cache.G(I, 1);
                    I = Quest.getCollection()
                }
                f = b;
                "undefined" != typeof e && !0 == e && (f += "_" + Travian.Player.data.tribeId);
                a.openWindow("questVictory", {
                    questId: b
                }, {
                    victoryScreenId: f
                })
            }
            g[b] = (new Date).getTime()
        }
        ;
        this.setActiveQuest = function(b) {
            for (var c = 0; c < I.data.length; c++) {
                var e = I.data[c];
                if (e.data.id == b) {
                    a.activeQuest = e;
                    return
                }
            }
            a.activeQuest = null
        }
        ;
        this.showClickForCurrentTask = function() {
            a.activeQuest = 0
        }
        ;
        this.getArrowToFreeLocation = function() {
            for (var a = 29; 40 > a; a++) {
                if (0 == $(".buildingStatusButton.location.location_" + a).length) {
                    var b = $("#tutorialAnchor" + a);
                    0 == b.length && (b = config.village.locationPos[a],
                    b = $('<div id="tutorialAnchor' + a + '" style="position: absolute; top: ' + b.y + "px; " + getReadingDirectionFrom() + ": " + b.x + 'px">'),
                    $("#villageView")[0].appendChild(b[0]),
                    b = $("#tutorialAnchor" + a));
                    return b
                }
            }
        }
        ;
        this.Lh = function(a, b, c, e) {
            return Number(Object.values(a).concat(Object.values(b)).reduce(function(a, b) {
                return Number("" + a + b)
            }).toString(c)) + e + Travian.Player.data.avatarIdentifier
        }
    }
}
;
Travian.Service.TutorialService.$inject = "$rootScope RoutingService VillageService $timeout $templateCache $compile SessionService MellonService MapService".split(" ");
"use strict";
Travian.Service.VillageService = function(a, c, b, f, g, e) {
    function h(a) {
        0 == q[a.data.villageId] ? q[a.data.villageId] = 1 : (2 > Cache.Vb && (r = !0,
        u.callSubscribers(),
        r = !1),
        t = f("orderBy")(u.data, "data.name"))
    }
    function m(a) {
        for (var b = 0; b < u.data.length; b++) {
            if (u.data[b].data.villageId == a) {
                return u.data[b]
            }
        }
        return null
    }
    function l(a) {
        a = Number(a);
        var c = m(a);
        if (!c) {
            return !1
        }
        null == w && (w = Travian.tick.bind(function() {
            p.getResources()
        }));
        x = UnitQueue.get(a);
        null == s && (s = Travian.tick.bind(function() {
            x.checkUnits()
        }));
        p && p.data.villageId == a || (p.isActive = !1,
        c.isActive = !0,
        p = c,
        Travian.rootScope.$broadcast("activeVillageChanged", a),
        b.put("village", a));
        return !0
    }
    var p = new Village
      , n = !0
      , q = {}
      , r = !1
      , t = []
      , u = Cache.Ta(Village.getCollection, Village.COLLECTION_OWN);
    u.subscribe(function() {
        if (!r) {
            if (n && 0 < u.data.length) {
                n = !1;
                var a = c.getParam("villId");
                a || (a = b.get("village"),
                a || (a = u.data[0].data.villageId));
                l(a) || (a = u.data[0].data.villageId,
                l(a))
            }
            for (a = 0; a < u.data.length; a++) {
                var e = u.data[a].data.villageId;
                "undefined" == typeof q[e] && (q[e] = 0,
                u.data[a].subscribe(h))
            }
            t = f("orderBy")(u.data, "data.name")
        }
    });
    a.$on("urlChanged", function(a, b) {
        b.villId && l(b.villId)
    });
    a.$on("resetHeroItemsDailyUsage", function() {
        Hero.get(e.getPlayerId()).resetHeroItemsDailyUsage()
    });
    var w = null
      , s = null
      , x = null;
    return new function() {
        function a() {
            var h = {
                type: "kingdomsForVillages",
                villageIds: c
            };
            c = [];
            f = null;
            g.emit("kingdomService", h, function(a) {
                if (null != a) {
                    for (var c = 0; c < a.length; c++) {
                        b[a[c].villageId] = a[c].kingdomId
                    }
                    for (c = 0; c < e.length; c++) {
                        e[c]()
                    }
                }
            })
        }
        this.W = function() {
            return u
        }
        ;
        this.getActiveVillageId = function() {
            return p.data.villageId
        }
        ;
        this.lf = function() {
            for (var a = 0; a < u.data.length; a++) {
                var b = u.data[a];
                if (b.isMainVillage()) {
                    return b.data.villageId
                }
            }
            return -1
        }
        ;
        this.i = function() {
            return p
        }
        ;
        this.ea = function(a) {
            return l(a)
        }
        ;
        this.qa = function(a) {
            return m(a)
        }
        ;
        this.qc = function() {
            for (var a = Troops.getCollection(Troops.COLLECTION_STATIONARY, p.data.villageId), b = 0; b < a.data.length; b++) {
                var c = a.data[b];
                if (c.data.status == Troops.STATUS_HOME) {
                    return c
                }
            }
        }
        ;
        this.of = function(a) {
            for (var b = 0; b < t.length; b++) {
                if (t[b].data.villageId == p.data.villageId) {
                    return a = b + a,
                    0 > a && (a += t.length),
                    a >= t.length && (a -= t.length),
                    t[a].data.villageId
                }
            }
        }
        ;
        var b = {}
          , c = []
          , e = []
          , f = null;
        this.jf = function(g, h) {
            if (void 0 === b[g]) {
                b[g] = !1,
                c.push(g),
                null === f && (f = window.setTimeout(a, 50))
            } else {
                if (!1 !== b[g]) {
                    return b[g]
                }
            }
            void 0 !== h && e.push(h);
            return !1
        }
        ;
        this.Eh = function(a, b) {
            var c = Building.getCollection(a), e = {}, f;
            for (f in Resources.ID) {
                var g = Resources.ID[f];
                if (!b || b[g]) {
                    for (var h = e[g] = 0; h < c.data.length; h++) {
                        c.data[h].data.buildingType == g && (e[g] += Math.round(c.data[h].data.currentEffect.values[0] * b[g] / 100))
                    }
                }
            }
            return e
        }
        ;
        this.Hd = function(a, b) {
            var c = FarmList.getCollection()
              , e = c.subscribe(function() {
                for (var f = !1, g = 0; g < c.data.length; g++) {
                    if (0 < c.data[g].data.villageIds.length && -1 < c.data[g].data.villageIds.indexOf("" + a)) {
                        f = !0;
                        break
                    }
                }
                c.unsubscribe(e);
                b(f)
            })
        }
    }
}
;
Travian.Service.VillageService.$inject = "$rootScope RoutingService $cookieStore $filter SocketService SessionService".split(" ");
"use strict";
Travian.Service.WindowService = function(a, c, b, f) {
    function g() {
        var b = c.getParam("page");
        if (!b) {
            b = "village",
            c.o("page", "village")
        } else {
            if (b != a.page) {
                for (var e = 0; e < t.length; e++) {
                    t[e](b, a.page)
                }
            }
        }
        a.page = b;
        e = c.getParam("window");
        b = [];
        null != e && (b = e.split(":"));
        for (e = 0; e < b.length; e++) {
            var f = b[e];
            if ("undefined" == typeof a.windows[f]) {
                var g = {};
                "building" == f && (g.window = f,
                g.location = c.getParam("location"));
                h(f, g, null, !0)
            }
        }
        if (0 == b.length) {
            for (f in a.windows) {
                m(f)
            }
        }
    }
    function e() {
        var b = [], e;
        for (e in a.windows) {
            b.push(e)
        }
        0 < b.length ? c.o("window", b.join(":")) : c.l("window", !0)
    }
    function h(b, e, f, g) {
        var h = {};
        if (!g && 0 > $.inArray(b, r)) {
            for (var l in a.windows) {
                !0 !== a.windows[l].params.modalParams.unclosable && l != b && m(l)
            }
        }
        g = {};
        if ("undefined" != typeof e && null != e) {
            var h = e, n;
            for (n in e) {
                c.o(n, e[n]),
                g[n] = !0
            }
        }
        if (f) {
            for (n in f) {
                h[n] = f[n]
            }
        }
        l = q["default"];
        "undefined" !== typeof q[b] && (l = q[b]);
        e = "tpl/mainlayout/modals/default.html";
        l.customTemplate && (e = "tpl/mainlayout/modals/" + l.customTemplate + ".html");
        h.modalParams = {};
        for (n in l) {
            h.modalParams[n] = "undefined" != typeof h[n] ? h[n] : l[n]
        }
        h.modalParams.windowName = b;
        n = "tpl/" + b + "/" + b + ".html";
        f && f.hasOwnProperty("windowName") && (b = f.windowName);
        a.windows[b] = {
            border: e,
            inner: n,
            name: b,
            params: h,
            parametersToRemove: g
        }
    }
    function m(b) {
        if (void 0 !== a.windows[b]) {
            for (var e in a.windows[b].parametersToRemove) {
                c.l(e)
            }
        }
        delete a.windows[b];
        b = Object.keys(a.windows);
        0 < b.length ? l(b[b.length - 1]) : l("")
    }
    function l(a) {
        var b = u != a;
        Travian.rootScope.windows[u] && (Travian.rootScope.windows[u].isActiveWindow = !1);
        Travian.rootScope.windows[a] && (Travian.rootScope.windows[a].isActiveWindow = !0);
        u = a;
        return b
    }
    function p(a) {
        return a == w ? w : w = 1050 > w || 1950 < w ? 1050 : w + 5
    }
    var n = {
        additionalClass: "",
        closeable: !0,
        customTemplate: !1,
        modal: !1,
        noPosition: !1,
        staticPosition: !1,
        setFocusWhenActive: !1,
        unclosable: !1,
        noLoadingSpinner: !1,
        maxHeight: !1,
        resetPosition: !1,
        backgroundFlare: !1
    }
      , q = {
        "default": n,
        chat: $.extend({}, n, {
            customTemplate: "chat",
            unclosable: !0
        }),
        questDialog: $.extend({}, n, {
            customTemplate: "noLayout",
            noPosition: !0
        }),
        questDetails: $.extend({}, n, {
            customTemplate: "small"
        }),
        questPuzzle: $.extend({}, n, {
            customTemplate: "small"
        }),
        kingOrGovernor: $.extend({}, n, {
            customTemplate: "small"
        }),
        questDirectionSelection: $.extend({}, n, {
            customTemplate: "small"
        }),
        enterMail: $.extend({}, n, {
            customTemplate: "small"
        }),
        farmListAdd: $.extend({}, n, {
            customTemplate: "small"
        }),
        tribeSelection: $.extend({}, n, {
            customTemplate: "noLayout",
            closeable: !1,
            noPosition: !0,
            modal: !0
        }),
        sendTroops: $.extend({}, n, {
            customTemplate: "noTabulation",
            unclosable: !0
        }),
        startVillage: $.extend({}, n, {
            closeable: !1
        }),
        maintenance: $.extend({}, n, {
            closeable: !1
        }),
        notEnoughGold: $.extend({}, n, {
            customTemplate: "smallNoOverlay",
            modal: !0
        }),
        confirmGoldUsage: $.extend({}, n, {
            customTemplate: "small",
            modal: !0,
            zIndex: 5E3,
            noLoadingSpinner: !0
        }),
        confirmAction: $.extend({}, n, {
            customTemplate: "small",
            modal: !0,
            zIndex: 5E3,
            noLoadingSpinner: !0,
            staticPosition: !0,
            noPosition: !0
        }),
        notEnoughSitterRights: $.extend({}, n, {
            customTemplate: "small",
            modal: !1
        }),
        infoPopup: $.extend({}, n, {
            customTemplate: "small",
            modal: !0
        }),
        logout: $.extend({}, n, {
            customTemplate: "small",
            modal: !0
        }),
        playerLocked: $.extend({}, n, {
            customTemplate: "warning",
            closeable: !0,
            noPosition: !1,
            modal: !0,
            unclosable: !0
        }),
        authError: $.extend({}, n, {
            customTemplate: "modern",
            closeable: !0,
            noPosition: !1,
            modal: !0,
            unclosable: !0
        }),
        questVictory: $.extend({}, n, {
            customTemplate: "noLayout",
            closeable: !1,
            noPosition: !0
        }),
        screenFlashNotification: $.extend({}, n, {
            customTemplate: "noLayout",
            closeable: !1,
            noPosition: !0,
            unclosable: !0,
            noLoadingSpinner: !0
        }),
        worldEnded: $.extend({}, n, {
            customTemplate: "worldEnd"
        }),
        worldEndedModal: $.extend({}, n, {
            customTemplate: "simple",
            modal: !0
        }),
        welcomePackage: $.extend({}, n, {
            customTemplate: "noLayout",
            modal: !0,
            noPosition: !0
        }),
        welcomeScreen: $.extend({}, n, {
            customTemplate: "default",
            unclosable: !0,
            noPosition: !0,
            noLoadingSpinner: !0
        }),
        achievementNotifications: $.extend({}, n, {
            customTemplate: "noLayout",
            modal: !0,
            noPosition: !0
        }),
        reportConversation: $.extend({}, n, {
            customTemplate: "smallNoOverlay",
            modal: !0
        }),
        ignorePlayer: $.extend({}, n, {
            customTemplate: "smallNoOverlay",
            modal: !0
        }),
        igm: $.extend({}, n, {
            maxHeight: !0,
            resetPosition: !0
        }),
        kingdomUnionSuccess: $.extend({}, n, {
            customTemplate: "smallCustom",
            unclosable: !0
        }),
        gameWorld: $.extend({}, n, {
            customTemplate: "gameWorld"
        }),
        obtainedItemNotification: $.extend({}, n, {
            customTemplate: "small",
            modal: !0,
            noLoadingSpinner: !0,
            staticPosition: !0,
            noPosition: !0,
            backgroundFlare: !0
        })
    };
    a.windows = {};
    var r = "buildingPopup npcTrader chat questDetails farmListAdd notEnoughGold confirmGoldUsage screenFlashNotification logout reportConversation ignorePlayer obtainedItemNotification".split(" ")
      , t = [];
    $().ready(function() {
        b.m(g)
    });
    a.$on("urlChanged", function() {
        b.wf() && g()
    });
    a.$on("openWindow", function(b, c) {
        a.openWindow(c.window, c.params)
    });
    a.openWindow = function(a, b, c, f) {
        h(a, b, c, f);
        e()
    }
    ;
    a.closeWindow = function(a, b) {
        f(function() {
            m(a);
            b || e()
        }, 10)
    }
    ;
    a.openChatTab = function(b) {
        a.$broadcast("openChatMenu", b)
    }
    ;
    var u = ""
      , w = -1;
    $(window).bind("keyup", function(b) {
        keyboard.zd(b) == keyboard.ye && (a.windows[u] && a.windows[u].params.modalParams.closeable) && a.closeWindow(u)
    });
    return new function() {
        this.tf = p;
        this.Wi = l;
        this.zi = function(b) {
            for (var c = !1, e = 0; e < t.length; e++) {
                t.toString() == b.toString() && (c = !0)
            }
            c || (t.push(b),
            b(a.page))
        }
        ;
        this.xa = function(b) {
            return "undefined" != typeof a.windows[b]
        }
    }
}
;
Travian.Service.WindowService.$inject = ["$rootScope", "RoutingService", "SessionService", "$timeout"];
Travian.ServiceArr = ["filters", "directives", "ngCookies"];
for (var Sb in Travian.Service) {
    angular.module(Sb, []).factory(Sb, Travian.Service[Sb]),
    Travian.ServiceArr.push(Sb)
}
Travian.app = angular.module("t5", ["ngSanitize", "ngLocale", "ngRoute", "tmh.dynamicLocale"].concat(Travian.ServiceArr));
Travian.app.Ze = angular.module("directives", []);
Travian.app.filters = angular.module("filters", []);
for (var Tb in Travian.Filter) {
    Travian.app.filters.filter(Tb, Travian.Filter[Tb])
}
for (var Ub in Travian.Directive) {
    Travian.app.Ze.directive(Ub, Travian.Directive[Ub])
}
config.useTemplateCache && Travian.app.factory("$templateCache", ["$cacheFactory", "$http", "$injector", function(a, c, b) {
    var f = a("templates")
      , g = !1;
    return {
        get: function(a) {
            var h = f.get(a);
            if (h) {
                return h
            }
            g || (g = c.get(config.templates).then(function(a) {
                b.get("$compile")(a.data);
                return a
            }));
            return g.then(function(b) {
                return {
                    status: b.status,
                    headers: b.headers,
                    data: f.get(a)
                }
            })
        },
        put: function(a, b) {
            f.put(a, b)
        }
    }
}
]);
Travian.app.config(["$routeProvider", function(a) {
    a.when("/:page/", {});
    a.when("/:page/:params", {})
}
]);
Travian.app.config(["$controllerProvider", function(a) {
    "function" === typeof a.allowGlobals && a.allowGlobals()
}
]);
Travian.app.config(["tmhDynamicLocaleProvider", function(a) {
    "undefined" != typeof config.live && config.live && ($.ajaxSetup({
        cache: !0
    }),
    a.localeLocationPattern(Travian.Config.cdnPrefix + "lang/{{locale}}.js?v=" + Travian.Config.apiVersion))
}
]);
Travian.app.config(["$compileProvider", function(a) {
    "undefined" != typeof config.live && config.live && a.debugInfoEnabled(!1)
}
]);
Travian.app.config(["$provide", function(a) {
    a.decorator("$exceptionHandler", ["$delegate", function(a) {
        return function(b, f) {
            a(b, f);
            logJsErrorToBackend(b.stack, f)
        }
    }
    ])
}
]);
window.addEventListener("error", function(a) {
    logJsErrorToBackend(a.error.stack)
});
Travian.app.run(["$rootScope", "$cookies", "GlobalStateService", "RoutingService", "SessionService", "$http", "$location", "WindowService", "TutorialService", "NotificationService", "ChatService", "MellonService", "AudioService", "tmhDynamicLocale", "SocketService", function(a, c, b, f, g, e, h, m, l, p, n, q, r, t, u) {
    function w() {
        1 > $(".ingameContentContainer").length ? window.setTimeout(w, 100) : z.Lf($(".ingameContentContainer")[0], function(b, c) {
            if (!z.Jb && Travian.Player.isOnMap()) {
                var e = 0;
                for (k in a.windows) {
                    a.windows.hasOwnProperty(k) && e++
                }
                0 < e || (new Date).getTime() < v + 500 || (e = f.getParam("page"),
                1 > c ? "village" == e ? (r.U(Na),
                a.openPage("resources"),
                a.$broadcast("hideTooltip")) : "resources" == e && (r.U(Na),
                a.openPage("map"),
                a.$broadcast("hideTooltip")) : "resources" == e && (r.U(Oa),
                a.openPage("village"),
                a.$broadcast("hideTooltip")))
            }
        })
    }
    function s() {
        function a(b, c, e) {
            for (var f = 0; f < c.length; f++) {
                var g = c[f];
                e < g ? ($("body").addClass("smallerThan" + b + g),
                $("html").addClass("smallerThan" + b + g)) : ($("body").removeClass("smallerThan" + b + g),
                $("html").removeClass("smallerThan" + b + g));
                e >= g && (f == c.length - 1 || e < c[f + 1]) ? $("body").addClass(b.toLowerCase() + g) : $("body").removeClass(b.toLowerCase() + g)
            }
        }
        var b = $(window).width()
          , c = $(window).height();
        a("Width", [850, 1E3, 1050, 1150, 1280, 1350, 1400], b);
        a("Height", [750], c);
        z.Jb = 750 >= c || 1E3 >= b ? !0 : !1
    }
    a.gameWorld = config.gameWorld;
    a.timeToCheckApiVersion = Date.now();
    Travian.kg = t;
    Travian.tick = new function() {
        var a = {};
        (function B() {
            window.setTimeout(B, 100);
            var b = {}, c;
            for (c in a) {
                a.hasOwnProperty(c) && "function" === typeof a[c] && (a[c](),
                b[c] = a[c])
            }
            a = b
        }
        )();
        return {
            bind: function(b, c) {
                "function" === typeof b && (c = b,
                b = ka("tick"));
                c();
                a[b] = c;
                return b
            },
            unbind: function(b) {
                a[b] = null
            }
        }
    }
    ;
    Travian.translate = function(a, b, c) {
        if ("undefined" != typeof Travian.txt[a]) {
            if (b) {
                var e = Travian.txt[a];
                c && (e = bbCodeParser(e, !0));
                for (a in b) {
                    e = e.replace("{{" + a + "}}", b[a])
                }
                return e
            }
            return bbCodeParser(Travian.txt[a], !0)
        }
        return "!!" + a + "!!"
    }
    ;
    Travian.pendingRequests = new function() {
        function b() {
            e = (new Date).getTime();
            0 !== c && c--;
            0 === c && $(".pendingAjaxRequest").hide();
            a.$broadcast("ajaxPendingRequestsChanged")
        }
        var c = 0
          , e = 0
          , f = -1;
        Travian.tick.bind(function() {
            e + 1E3 < (new Date).getTime() && 0 !== c && b();
            0 === c && f != c && $(".pendingAjaxRequest").hide();
            f = c
        });
        return {
            ajaxStart: function() {
                e = (new Date).getTime();
                $(".pendingAjaxRequest").show();
                c++;
                a.$broadcast("ajaxPendingRequestsChanged")
            },
            ajaxStop: function() {
                b()
            },
            Re: function() {
                return 0 < c
            }
        }
    }
    ;
    Travian.request = function(c, f, h, l, m) {
        c = c.split("/");
        var n = c[0]
          , q = c[1]
          , r = 0;
        if ("undefined" === typeof f || null === f) {
            f = {}
        }
        a.timeToCheckApiVersion + 1E3 * config.checkApiVersionInterval <= Date.now() && (f.sendAPIVersion = !0,
        a.timeToCheckApiVersion = Date.now());
        u.hh(q, f);
        f = {
            controller: n,
            action: q,
            params: f,
            clientId: getClientId()
        };
        (c = g.rb()) && (f.session = c);
        c = config[(config.SERVER_ENV || "devPHP") + "Url"];
        var s = "";
        Travian.Player && Travian.Player.data.playerId && (s += "&p" + Travian.Player.data.playerId);
        g.Pb() || (s += "&u" + g.Cd());
        r = (new Date).getTime();
        e.post(c + "?c=" + n + "&a=" + q + s + "&t" + r, f).success(function(c, e, f) {
            void 0 !== f()["api-version"] && f()["api-version"] !== String(a.config.balancing.apiVersion) && p.lb(Travian.translate("Error.apiIsOutDated"), "error");
            f = (new Date).getTime() - r;
            m && b.Dd(c, f);
            "function" == typeof h && (e = h(c.response),
            "undefined" != typeof e && (null != e && "object" == typeof e) && (c = e));
            if ("undefined" != typeof c.performance) {
                e = c.performance;
                var g = console.log;
                "undefined" != typeof console.info && (g = function(a) {
                    console.info(a)
                }
                );
                var l = {
                    select: {
                        count: 0,
                        sum: 0
                    },
                    insert: {
                        count: 0,
                        sum: 0
                    },
                    update: {
                        count: 0,
                        sum: 0
                    },
                    "delete": {
                        count: 0,
                        sum: 0
                    }
                };
                "undefined" != typeof e.sql.select && (l.select.count = e.sql.select.count,
                l.select.sum = e.sql.select.sum);
                "undefined" != typeof e.sql.insert && (l.insert.count = e.sql.insert.count,
                l.insert.sum = e.sql.insert.sum);
                "undefined" != typeof e.sql.update && (l.update.count = e.sql.update.count,
                l.update.sum = e.sql.update.sum);
                "undefined" != typeof e.sql["delete"] && (l["delete"].count = e.sql["delete"].count,
                l["delete"].sum = e.sql["delete"].sum);
                var s = "Request " + n + "/" + q + "\n"
                  , s = s + (" Total Time: " + f + "ms, Backend: " + e.global.total.sum + "ms MaxMemory: " + bytesToSize(e.global.total.memory_peak, 2) + "\n")
                  , s = s + (" SQL: " + e.sql.total.count + " Querys - " + e.sql.total.sum + "ms total")
                  , s = s + (" (" + l.select.count + "/" + l.insert.count + "/" + l.update.count + "/" + l["delete"].count + ")")
                  , s = s + (" - (" + l.select.sum + "ms/" + l.insert.sum + "ms/" + l.update.sum + "ms/" + l["delete"].sum + "ms)\n")
                  , s = s + (" Redis: " + e.redis.total.count + " Querys - " + e.redis.total.sum + "ms total\n")
                  , s = s + (" Mongo: " + e.mongo.total.count + " Querys - " + e.mongo.total.sum + "ms total\n");
                g(s);
                g(e)
            }
            "undefined" != typeof c.requestId && Travian.request("login/reportPerformance", {
                requestId: c.requestId,
                duration: f
            });
            m || b.Dd(c, f);
            c.error && u.og(q, -1);
            if ("undefined" !== typeof c.response && "undefined" !== typeof c.response.errors) {
                for (f = 0; f < c.response.errors.length; f++) {
                    g = c.response.errors[f];
                    e = "";
                    if ("undefined" !== typeof g.params) {
                        for (f in g.params) {
                            e = e + " " + f + ": " + g.params[f]
                        }
                    }
                    p.lb(g.message + " " + e, "error")
                }
            }
            Travian.pendingRequests.ajaxStop()
        }).error(function() {
            Travian.pendingRequests.ajaxStop();
            "function" == typeof l && l()
        });
        Travian.pendingRequests.ajaxStart()
    }
    ;
    var x = !1;
    Travian.writeRequest = function(a, b, c, e) {
        if (x) {
            return !1
        }
        x = !0;
        Travian.request(a, b, function(a) {
            "function" == typeof c && c(a);
            requestAngularApply(function() {
                x = !1
            })
        }, function() {
            x = !1
        }, e);
        return !0
    }
    ;
    a.config = config;
    a.config.balancing = Travian.Config;
    Travian.rootScope = a;
    g.ni();
    var v = 0;
    a.openPage = function(a, b, c) {
        v = (new Date).getTime();
        f.o("page", a);
        "undefined" != typeof b && "undefined" != typeof c && f.o(b, c);
        if ("object" == typeof b) {
            for (var e in b) {
                f.o(e, b[e])
            }
        }
    }
    ;
    a.saveRoute = f.Sf;
    a.loadRoute = f.Ef;
    a.goldCost = Travian.Config.goldConfig;
    z.li();
    Travian.Player = g.p();
    a.player = Travian.Player;
    c = getUrlVar("token");
    null == Travian.Player && null != c ? (c = {
        token: c
    },
    console.log("-----------login/loginWithToken"),
    Travian.request("login/loginWithToken", c, function(a) {
        "undefined" != typeof a.errors ? ($scope.error = a.errors[0].message,
        delete a.errors) : a.success && (a = window.location.href,
        -1 != window.location.href.indexOf("?") && (a = window.location.href.slice(0, window.location.href.indexOf("?"))),
        console.log("--------URL", a),
        window.location.href = a)
    })) : null == Travian.Player && (null == c && "live" == config.SERVER_ENV) && (window.location.href = "" == config.portalLogout ? config.portal : config.portal + config.portalLogout + "-" + (new Date).getTime());
    $html = $("html");
    if ($.browser.edge) {
        $html.addClass("Edge"),
        $html.addClass("Edge" + $.browser.versionNumber)
    } else {
        c = navigator.userAgent;
        h = navigator.appName;
        var D;
        m = c.match(/(opera|chrome|safari|firefox|msie|trident)\/?\s*([\d\.]+)/i) || [];
        (m = m[2] ? [m[1], m[2]] : [h, navigator.appVersion, "-?"]) && null != (D = c.match(/version\/([\.\d]+)/i)) && (m[2] = D[1]);
        0 < m[1].indexOf(".") && (m[1] = m[1].substr(0, m[1].indexOf(".")));
        $html.addClass(m[0]);
        $html.addClass(m[0] + m[1])
    }
    a.$on("login", w);
    $(window).on("resize", s);
    s();
    for (var C in Travian.Config.specialRules) {
        Travian.Config.specialRules[C] && $("body").addClass(C + "World")
    }
    window.keyboard = new ta
}
]);

/**
 * @constructor
 * @param {Object} modelClass
 */
;window['AbstractCollection'] = function AbstractCollection(modelClass) {
    this.parent = this;
    this.cacheService = Cache;
    this.modelClass = modelClass;
    this.data = [];
    // Used to save serials for each oparation corresponding to collection entries
    this.operationSerials = {};
    this.lastRemovedEntries = [];

    this.set = function(data, recursive, serialNo) {
        var myself = this;
        var myClass = {};
        // Was this a valid className?
        if (typeof (window[this.modelClass]) != 'undefined') {
            myClass = window[this.modelClass];
        }
        myself.lastRemovedEntries = [];

        // Adds new entries to this collection
        var addEntries = function(entries, serialNo, dontUpdateSerials) {
            for (var i = 0; i < entries.length; i++) {
                // Check if this object is already in the list
                var newId = entries[i].serverId;
                if (myself.operationSerials[newId] && myself.operationSerials[newId] > serialNo) {
                    continue;
                }
                if (!dontUpdateSerials) {
                    myself.operationSerials[newId] = serialNo;
                }
                var found = false;
                for (var j = 0; j < myself.data.length; j++) {
                    if (myself.data[j].serverId == newId) {
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    myself.data.push(entries[i]);
                }
            }
        };

        // Removes specified entries from this collection
        var removeEntries = function(entries, serialNo) {
            for (var i = 0; i < entries.length; i++) {
                // Get the object for this entry
                var obj = myself.cacheService.c[entries[i].name];
                if (!obj || (myself.operationSerials[obj.serverId] && myself.operationSerials[obj.serverId] > serialNo)) {
                    continue;
                }
                // Search it in this collection
                for (var j = 0; j < myself.data.length; j++) {
                    if (myself.data[j] == obj) {
                        // Remove it from the collection (don't delete it!)
                        myself.data.splice(j, 1);
                        myself.operationSerials[obj.serverId] = serialNo;
                        myself.lastRemovedEntries.push(obj);
                        break;
                    }
                }
            }
        };

        // Loops over the whole collection and removes all entries
        var resetCollection = function(entries, serialNo) {
            for (var i = 0; i < entries.length; i++) {
                if (!myself.operationSerials[entries[i].serverId] || myself.operationSerials[entries[i].serverId] <= serialNo || typeof (serialNo) == 'undefined') {
                    if (typeof (serialNo) != 'undefined') {
                        myself.operationSerials[entries[i].serverId] = serialNo;
                    }
                    // Remove it from the collection (don't delete it!)
                    myself.data.splice(i--, 1);
                }
            }
        };

        // REPLACE
        if (data.operation == 1) {
            resetCollection(this.data, serialNo);
            var newObjects = this.cacheService.fill(data, serialNo);
            addEntries(newObjects, serialNo);
        } else {
            // Every other operation is invalid until we have the initial data for this collection
            if ((!this.filled) && (myClass.preventUpdateWithoutFirstFill)) {
                return "retry";
            }
        }

        // ADD
        if (data.operation == 2) {
            // Do a REPLACE-OR-ADD instead. Slower, but safer. We had a problem where the user received the same adventure twice. Once via normal collection get and once via push.
            data.operation = 5;
            /*
			 var newObjects = this.cacheService.fill(data);
			 for ( var i = 0; i < newObjects.length; i++ )
			 {
			 this.data.push(newObjects[i]);
			 }*/
        }
        // REMOVE
        if (data.operation == 3) {
            // We don't delete objects in the cache. We only remove it from the collection (objects might be used somewhere else)
            removeEntries(data.cache, serialNo);
        }
        // INNER UPDATE
        if (data.operation == 4) {
            var newObjects = this.cacheService.fill(data, serialNo);
        }
        // ADD OR REPLACE
        if (data.operation == 5) {
            var newObjects = this.cacheService.fill(data, serialNo);
            addEntries(newObjects, serialNo);
            // Does this class wants to do something special with the new elements
            if (typeof (myClass.collectionUpdatedFct) == 'function') {
                myClass.collectionUpdatedFct(newObjects);
            }
        }
        if (typeof (myClass.collectionSortFct) == 'function') {
            this.data.sort(myClass.collectionSortFct);
        }
        fillSubcollection(this);
    }
    ;

    var subCollections = [];

    function fillSubcollection(myself) {
        for (var i = 0; i < subCollections.length; i++) {
            subCollections[i].data = [];
            for (var j = 0; j < myself.data.length; j++) {
                if (subCollections[i].cmpFct(myself.data[j])) {
                    subCollections[i].data.push(myself.data[j]);
                }
            }
            subCollections[i].callSubscribers();
        }
    }

    /**
	 * Will return an object that will contain only a subset of data.
	 * You have to pass a filtering function.
	 * This function will be called with every data object and it is required to return a boolean value.
	 * You may call subscribe() on the returned object just like on a normal cache object.
	 * Once you call unsubscribe(), this object will be destroyed!
	 * @param cmpFct function
	 * @returns {AbstractCollection}
	 */
    this.getSubCollection = function(cmpFct) {
        var parentObj = this;
        var newObj = new AbstractCollection();
        subCollections.push(newObj);
        newObj.subscribe = parentObj.subscribe;
        newObj.unsubscribe = function() {
            parentObj.unsubscribe();
            subCollections.splice(subCollections.indexOf(newObj), 1);
        }
        ;
        newObj.cmpFct = cmpFct;
        newObj.filled = true;
        fillSubcollection(parentObj);
        return newObj;
    }
    ;
}
Cache.register(AbstractCollection, 'Collection:');
Cache.collectionModel = AbstractCollection;

/**
 * @constructor
 * @param {Object} data
 */
;window['AbstractModel'] = function AbstractModel(data) {
    this.name = 'abstract';

    /**
	 * @returns {Object}
	 */
    this.get = function() {
        return this.data;
    }
    ;

    /**
	 * @param {String} field
	 * @returns {Number|String|Object|Array}
	 */
    this.getField = function(field) {
        return this.data[field];
    }
    ;

    /**
	 * @param {String} data
	 * @returns {void}
	 */
    this.set = function(data, recursive) {
        if (typeof recursive === 'undefined') {
            var recursive = true;
        }

        // merge objects recursively
        if (recursive) {
            $.extend(recursive, this.data, data);
        } else {
            this.data = data;
        }
        // Cast everything that seems to be an number to a number 
        for (var key in this.data) {
            var checkVal = Number(this.data[key]);
            if ("" + checkVal === this.data[key]) {
                this.data[key] = checkVal;
            }
        }
    }
    ;

    this.parent = this;
}

module.exports = AbstractModel;
/**
 * Achievement Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Achievement'] = function Achievement() {
    this.defaultData = {
        'id': 0,
        'playerId': 0,
        'type': 0,
        'level': 0,
        'special': false,
        'extraData': null,
        'langKeySuffix': ''// some achievements use different language keys depending on specific conditions (see set())
    };

    this.set = function(data) {
        if (data['extraData']) {
            data['extraData'] = JSON.parse(data['extraData']);
        }

        if (data['type'] == Achievement.TYPE_FINISHED_A_GAMEWORLD && data['extraData']) {
            if (data['extraData']['allianceName']) {
                data['langKeySuffix'] = '_hasAlliance';
            } else if (data['extraData']['kingdomTag']) {
                data['langKeySuffix'] = '_hasKingdom';
            }
        } else if (data['type'] == Achievement.TYPE_WON_A_GAMEWORLD && data['extraData']['kingdomTag']) {
            data['langKeySuffix'] = '_hasKingdom';
        }
        this.parent.set.call(this, data);
    }
    ;

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Achievement';
}

Achievement.TYPE_WON_A_GAMEWORLD = 62;
Achievement.TYPE_FINISHED_A_GAMEWORLD = 63;

Achievement.prototype = new AbstractModel();
Cache.register(Achievement);

;window['Auction'] = function Auction() {
    this.defaultData = {
        'id': 0,
        'tribeId': 0,
        'itemTypeId': 0,
        'strength': 0,
        'bonuses': {},
        'amount': 0,
        'status': 0,
        'timeStart': 0,
        'timeEnd': 0,
        'price': 0,
        'bids': 0,
        'highestBid': 0,
        'highestBidderPlayerId': 0,
        'highestBidderName': '',
        'slot': 0,
        'images': [],
        'stackable': false
    };

    this.data = {};
    this.set = function(data) {
        if (data['stackable']) {
            data['pricePerItem'] = Math.round((data['price'] / data['amount']) * 100) / 100;
        }
        this.parent.set.call(this, data);
    }
    ;
    this.set(this.defaultData);
    this.name = 'Auction';
}

Auction.prototype = new AbstractModel();
Cache.register(Auction);

Auction.STATUS_RUNNING = 1;
Auction.STATUS_FINISHED = 2;
Auction.STATUS_CANCELED = 3;

/**
 * Only needed for translations. Every translation will be parsed here.
 *
 * simple bbCode Parser. Contains:
 * bold,
 * italic,
 * underline,
 * list (simple listPoints without any ul- or ol-container)
 * breaks (newLine)
 *
 * When we need a more complex structure look here maybe it is a solution
 * https://github.com/patorjk/Extendible-BBCode-Parser
 *
 * @param src {string}
 * @param dontEscape {bool}
 * @returns {string}
 */
;window['bbCodeParser'] = function bbCodeParser(src, dontEscape) {
    function escape(html, encode) {
        if (dontEscape) {
            return html;
        }
        return html.replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#39;');
    }

    var bbCode = {
        br: /^\[br]/,
        strong: /^\[b]([\s\S]+?)\[\/b]/,
        //em: /^\[i]([\s\S]+?)\[\/i]/,
        //underline: /^\[u]([\s\S]+?)\[\/u]/,
        list: /^\[list]([\s\S]+?)\[\/list]/,
        text: /^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/
    };

    this.rules = bbCode;
    this.renderer = this.renderer || new BBCodeRenderer;

    this.output = function(src) {
        var out = '', cap;

        while (src) {
            // strong
            if (cap = this.rules.strong.exec(src)) {
                src = src.substring(cap[0].length);
                out += this.renderer.strong(this.output(cap[2] || cap[1]));
                continue;
            }

            /*
			 until now not needed

			 // em
			 if (cap = this.rules.em.exec(src)) {
			 src = src.substring(cap[0].length);
			 out += this.renderer.em(this.output(cap[2] || cap[1]));
			 continue;
			 }

			 // underline
			 if (cap = this.rules.underline.exec(src)) {
			 src = src.substring(cap[0].length);
			 out += this.renderer.underline(this.output(cap[2] || cap[1]));
			 continue;
			 }
			 */

            // list
            if (cap = this.rules.list.exec(src)) {
                src = src.substring(cap[0].length);
                out += this.renderer.list(this.output(cap[2] || cap[1]));
                continue;
            }

            // br
            if (cap = this.rules.br.exec(src)) {
                src = src.substring(cap[0].length);
                out += this.renderer.br();
                continue;
            }

            // text
            if (cap = this.rules.text.exec(src)) {
                src = src.substring(cap[0].length);
                out += escape(cap[0]);
                continue;
            }

            if (src) {
                throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));
            }
        }
        return out;
    }
    ;

    var result = this.output(src);
    // Add <ul> tags for lists
    result = result.replace(/((<li>([\s\S]+?)<\/li>[\s]?)+)/g, '<ul class="uList">$1</ul>');

    return result;
}

function BBCodeRenderer() {}

BBCodeRenderer.prototype.strong = function(text) {
    return '<strong>' + text + '</strong>';
}
;

BBCodeRenderer.prototype.em = function(text) {
    return '<em>' + text + '</em>';
}
;

BBCodeRenderer.prototype.underline = function(text) {
    return '<u>' + text + '</u>';
}
;

BBCodeRenderer.prototype.list = function(text) {
    return '<li>' + text + '</li>';
}
;

BBCodeRenderer.prototype.br = function() {
    return '<br>';
}
;
;window['Bid'] = function Bid() {
    this.defaultData = {
        'id': 0,
        'playerId': 0,
        'auctionId': 0,
        'maxBid': 0,
        'time': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'Bid';
}

Bid.prototype = new AbstractModel();
Cache.register(Bid);

/**
 * @constructor
 * @extends {AbstractModel}
 * @param villageId
 * @param locationId
 * @param {Object} [data]
 * @param {VillageService} VillageService
 */
;window['Building'] = function Building(villageId, locationId, data, VillageService) {
    this.data = {
        'buildingType': null,
        'villageId': null,
        'locationId': null,
        'lvl': null,
        'lvlMax': null,
        'lvlNext': null,
        'upgradeCosts': {},
        'nextUpgradeCosts': [],
        'upgradeTime': null,
        'nextUpgradeTimes': [],
        'upgradeSupplyUsage': null,
        'upgradeSupplyUsageSums': [],
        'rubble': {},
        'rubbleDismantleTime': null,
        'effect': [],
        'currentEffect': null,
        'inQueueEffects': [],
        'nextEffect': null
    };

    var that = this;

    this.name = 'Building';
    this.queue = null;
    this.isActive = false;

    this.data.villageId = villageId;
    this.data.locationId = locationId;

    this.isResourceField = function() {
        return (this.data['locationId'] <= 18);
    }
    ;

    /**
	 * @param {Object} storage
	 * @returns {Boolean}
	 */
    function hasEnoughResources(storage) {
        for (var resType in storage) {
            if (storage[resType] < that.data['upgradeCosts'][resType]) {
                return false;
            }
        }
        return true;
    }

    /**
	 * Checks if a building type is a wall
	 * @returns {boolean}
	 */
    this.isWall = function() {
        return Building.isWall(this.data['buildingType']);
    }
    ;

    /**
	 * Checks if a building is the wonder of the world
	 * @returns {boolean}
	 */
    this.isWorldWonder = function() {
        return (this.data['buildingType'] == Building.TYPE.WONDER_OF_WORLD);
    }
    ;

    /**
	 * Check if there are sufficient resources by using the npc trader
	 * @param villageStorage
	 * @param capacity
	 * @param levelOffset
	 * @returns {boolean}
	 */
    this.hasEnoughResourcesUsingNpcTrader = function(villageStorage, capacity, levelOffset) {
        var combinedCosts = 0;
        var combinedStorage = 0;
        var level = that.data['lvl'] + (levelOffset || 0);
        if (!that.data['nextUpgradeCosts'][level]) {
            return false;
        }
        var costs = angular.copy(that.data['nextUpgradeCosts'][level]);
        var storage = angular.copy(villageStorage);
        // First check if some not tradable resources are missing (only special servers)
        var notTradableResTypes = PremiumFeature.getNotTradableResTypes();
        for (var i in notTradableResTypes) {
            if (costs[notTradableResTypes[i]] > storage[notTradableResTypes[i]]) {
                return false;
            }
            costs[notTradableResTypes[i]] = 0;
            storage[notTradableResTypes[i]] = 0;
        }
        // Then check if there are enough other resources to cover the upgrade costs
        for (var resType in storage) {
            if (costs[resType] > capacity[resType]) {
                return false;
            }
            combinedCosts += costs[resType];
            combinedStorage += storage[resType];
        }
        return combinedCosts <= combinedStorage;
    }
    ;

    /**
	 * Check if there are sufficient capacity for upgrading
	 * @param storage
	 * @param capacity
	 * @returns {boolean}
	 */
    this.hasCapacityForUpgrading = function(storage, capacity) {
        for (var resType in storage) {
            if (that.data['upgradeCosts'][resType] > capacity[resType]) {
                return false;
            }
        }
        return true;
    }
    ;

    /**
	 * Checks if maximum buildings level has been reached
	 * @returns {Boolean}
	 */
    this.hasReachedMaxLvl = function() {
        return !(this.data['lvlNext'] <= this.data['lvlMax']);
    }
    ;

    this.setQueue = function(queueData) {
        this.queue = queueData;
        this.calculateEffect();
    }
    ;

    function getEffectViewModel(data, additionalLevel) {
        var i = additionalLevel;
        var effect = {
            'level': Number(data['lvl']) + Number(i),
            'values': [data['effect'][i]]
        };
        // If the effect is an array of values
        if ($.isArray(effect['values'][0])) {
            effect['values'][1] = effect['values'][0][1];
            effect['values'][0] = effect['values'][0][0];
        }
        // there is currently only one effect per building
        effect['values'].splice(1, 1);
        return effect;
    }

    this.getRubbleResourcesSum = function() {
        var sum = 0;
        angular.forEach(this.data.rubble, function(value) {
            sum += parseInt(value, 10);
        });
        return sum;
    }
    ;

    this.calculateEffect = function() {
        this.data['inQueueEffects'] = [];
        this.data['nextEffect'] = null;
        var additionalLevel = 0;
        var inConstruction = false;

        if (typeof (this.data['effect']) != "undefined") {
            this.data['currentEffect'] = getEffectViewModel(this.data, 0);

            if (this.queue != null && this.queue.length > 0) {
                for (var i = 0; i < this.queue.length; i++) {
                    if (this.queue[i]['locationId'] == this.data['locationId']) {
                        if (this.queue[i]['queueType'] == BuildingQueue.TYPE_VILLAGE || this.queue[i]['queueType'] == BuildingQueue.TYPE_RESOURCES || this.queue[i]['queueType'] == BuildingQueue.TYPE_MASTER_BUILDER) {
                            additionalLevel++;
                            this.data['inQueueEffects'].push(getEffectViewModel(this.data, additionalLevel));
                            if (this.queue[i]['queueType'] != BuildingQueue.TYPE_MASTER_BUILDER) {
                                inConstruction = true;
                            }
                        }
                    }
                }
            }

            this.data['nextEffect'] = getEffectViewModel(this.data, inConstruction ? 2 : 1);
        }
    }
    ;

    this.isRubble = function() {
        return (this.data['lvlNext'] == 1 && !this.isWorldWonder() && (this.data['buildingType'] != Building.TYPE.MOAT) && typeof (this.data['rubble']) !== 'undefined');
    }
    ;

    this.set = function(data) {
        if (typeof (data) != 'undefined') {
            this.parent.set.call(this, data, false);
        }
        this.calculateEffect();
    }
    ;

    this.set(data);

    this.isBreweryOrTeaHouse = function() {
        return (this.data['buildingType'] == Building.TYPE.BREWERY) || (this.data['buildingType'] == Building.TYPE.TEAHOUSE);
    }
    ;

    this.isTeaHouse = function() {
        return (this.data['buildingType'] == Building.TYPE.TEAHOUSE);
    }
    ;

    this.getImageName = function(tribe, state, small) {
        var cfg = config['buildings'][this.data['buildingType']];
        var fileName = 'g' + this.data['buildingType'];
        if (this.data['buildingType'] <= 4 || this.data['buildingType'] == Building.TYPE['MOAT']) {
            return '';
        }

        if (this.data['lvl'] === 0) {
            if (this.isRubble() && !this.isWall()) {
                // Show building rubble
                var rubbleSum = this.getRubbleResourcesSum();
                if (rubbleSum < 2000) {
                    fileName = 'destruction/low';
                } else if (rubbleSum >= 2000 && rubbleSum < 20000) {
                    fileName = 'destruction/middle';
                } else {
                    fileName = 'destruction/high';
                }
                fileName += "/location_" + this.data['locationId'];
                // Ugly exeption for the rallypoint: there is another graphic in the WW
                if ((state != "") && (this.data['buildingType'] == Building.TYPE.RALLY_POINT)) {
                    fileName += '_' + state;
                }
            } else if (this.data['lvlNext'] >= 1 // building is in construction from 0 to 1, or from 0 to 1 to 2 or waiting in a queue
            && this.data['buildingType'] != Building.TYPE.WONDER_OF_WORLD // there won't be a picture for the building state of the natar and WW wall
            && this.data['buildingType'] != Building.TYPE.NATAR_CITY_WALL) {
                if ((this.data['buildingType'] == Building.TYPE.EARTH_WALL || this.data['buildingType'] == Building.TYPE.PALLISADE || this.data['buildingType'] == Building.TYPE.CITY_WALL)) {
                    if (this.data['lvlNext'] > 1) {
                        // is in construction
                        fileName = 'construction/' + fileName;
                        if (state == 'water') {
                            fileName += '_' + state;
                        }
                    } else {
                        if (state == 'water') {
                            fileName += '_00_' + state;
                        } else {
                            fileName += '_00_normal';
                        }
                    }
                } else {
                    // Buildings in Constructions
                    fileName = 'construction/' + fileName;
                }
                if (!small) {
                    return fileName;
                }
            }
        }
        if (typeof (cfg) != 'undefined' && !(this.isRubble() && !this.isWall())) {
            if (cfg['tribe'] || cfg['levels']) {
                fileName += '_';
                if (state == "ww") {
                    // Ugly exeption for the rallypoint: Normally there are levels and tribes, but in a WW village, we only have one graphic
                    fileName += '00_ww';
                } else {
                    // Is this building tribe specific?
                    if (cfg['tribe']) {
                        if (tribe == Player.TRIBE.ROMAN) {
                            fileName += 'r';
                        }
                        if (tribe == Player.TRIBE.GAUL) {
                            fileName += 'g';
                        }
                        if (tribe == Player.TRIBE.TEUTON) {
                            fileName += 't';
                        }
                    }
                    // Has this building different levels?
                    if (cfg['levels']) {
                        //Search for the max lvl the building reached
                        for (var i = cfg['levels'].length - 1; i >= 0; i--) {
                            var lvl = cfg['levels'][i];
                            if (this.data['lvl'] >= lvl) {
                                if (lvl < 10) {
                                    fileName += '0';
                                }
                                fileName += lvl;
                                break;
                            }
                        }
                    }
                    if (state && cfg['states']) {
                        fileName += '_';
                        for (var i = cfg['states'].length; i >= 0; i--) {
                            if (cfg['states'][i] == state) {
                                break;
                            }
                        }
                        fileName += cfg['states'][i];
                    }
                }
            }
        }
        return fileName;
    }
    ;
}

Building.isWall = function(buildingType) {
    switch (buildingType) {
    case Building.TYPE.NATAR_CITY_WALL:
    case Building.TYPE.EARTH_WALL:
    case Building.TYPE.PALLISADE:
    case Building.TYPE.CITY_WALL:
        return true;
    }
    return false;
}
;

Building.getDescriptionParamByType = function(buildingType) {
    if (buildingType == Building.TYPE.TOURNAMENT_SQUARE) {
        return config['balancing']['tournamentSquareMinDistance'];
    }
}
;

Building.EXPANSION_SLOTS = {
    '25': 2,
    '26': 3
};

Building.RESIDENCE_EXPANSION_UNLOCKS = {
    '0': 10,
    '1': 20
};

Building.PALACE_EXPANSION_UNLOCKS = {
    '0': 10,
    '1': 15,
    '2': 20
};

Building.EXPANSION_SLOT_UNLOCKS = {
    '25': Building.RESIDENCE_EXPANSION_UNLOCKS,
    '26': Building.PALACE_EXPANSION_UNLOCKS
};

/**
 * Type IDs
 * @type {Object}
 */
Building.TYPE = {
    WOOD: 1,
    CLAY: 2,
    IRON: 3,
    CROP: 4,
    SAWMILL: 5,
    CLAY_BAKERY: 6,
    IRON_FOUNDRY: 7,
    MILL: 8,
    BAKERY: 9,
    WAREHOUSE: 10,
    GRANARY: 11,
    BLACKSMITH: 13,
    TOURNAMENT_SQUARE: 14,
    MAIN_BUILDING: 15,
    RALLY_POINT: 16,
    MARKET: 17,
    EMBASSY: 18,
    BARRACKS: 19,
    STABLE: 20,
    WORKSHOP: 21,
    ACADEMY: 22,
    CRANNY: 23,
    TOWN_HALL: 24,
    RESIDENCE: 25,
    PALACE: 26,
    TREASURY: 27,
    TRADE_OFFICE: 28,
    GREAT_BARRACKS: 29,
    GREAT_STABLE: 30,
    // roman wall
    CITY_WALL: 31,
    // natar wall
    NATAR_CITY_WALL: 43,
    // teuton wall
    EARTH_WALL: 32,
    // gaul wall
    PALLISADE: 33,
    STONEMASON: 34,
    BREWERY: 35,
    TRAPPER: 36,
    GREAT_WAREHOUSE: 38,
    GREAT_GRANARY: 39,
    WONDER_OF_WORLD: 40,
    HORSE_DRINKING_TROUGH: 41,
    MOAT: 42,
    TEAHOUSE: 44,
    HIDDEN_TREASURY: 45,
    HEALING_TENT: 46
};

Building.WALL_TYPES = {
    1: Building.TYPE['CITY_WALL'],
    2: Building.TYPE['EARTH_WALL'],
    3: Building.TYPE['PALLISADE'],
    5: Building.TYPE['NATAR_CITY_WALL']
};

/**
 * Building categories
 * @type {Object}
 */
Building.CATEGORY = {
    INFRASTRUCTURE: 1,
    MILITARY: 2,
    RESOURCES: 3
};

/* Building upgrade possibilities */
Building.UPGRADE = {
    // free slot in buildingqueue and enough resources
    POSSIBLE: 'possible',
    // buildingqueue full or not enough resources
    NOT_NOW: 'notNow',
    // fully upgraded
    MAX_LEVEL: 'maxLevel',
    // not enough free supply
    NOT_AT_ALL: 'notAtAll',
    // currently demolished
    DEMOLISH: 'demolish'
};

Building.MAX_LEVEL = 20;
Building.WW_MAX_LEVEL = 100;

Building.MIN_FREE_CROP_AVAILABLE = 2;

Building.PREMIUM_LOCATIONS = [42, 43];

Building.RALLY_POINT_LOCATION = 32;

Building.initConstants = function() {
    Building.CATAPULT_TARGETS = {
        1: {
            RANDOM_TARGET: 99
        },
        3: {
            RANDOM_TARGET: 99,
            INFRASTRUCTURE: [10, 11]
        },
        5: {
            RANDOM_TARGET: 99,
            RESOURCES: [1, 2, 3, 4, 5, 6, 7, 8, 9],
            INFRASTRUCTURE: [10, 11]
        },
        10: {
            RANDOM_TARGET: 99,
            RESOURCES: [1, 2, 3, 4, 5, 6, 7, 8, 9],
            INFRASTRUCTURE: [10, 11, 15, 17, 18, 24, 25, 26, 27, 28, 38, 39],
            MILITARY: [13, 14, 16, 19, 20, 21, 22, 29, 30, 46],
            TRIBE_SPECIFIC: {
                1: [41],
                2: [(Travian.Config['teahouse'] == "true" || Travian.Config['teahouse'] === true) ? 44 : 35],
                3: []
            }
        },
        NO_TARGET: -1
    };
}
;

onConfigLoaded.push(Building.initConstants);

Building.prototype = new AbstractModel();
Cache.register(Building);
/**
 * @constructor
 * @extends {AbstractData}
 */
;window['BuildingQueue'] = function BuildingQueue() {
    this.defaultData = {
        'villageId': 0,
        'tribeId': 0,
        'freeSlots': [],
        'queues': [],
        'levelDifference': 0 // Difference between the level this order will upgrade to and the current building level (see set())
    };

    this.data = {};

    var buildingFinishedTimer = null;
    var myself = this;

    function queryForSanity(entry, inSeconds) {
        buildingFinishedTimer = window.setTimeout(function() {
            Travian.sanityCheck({
                'villageId': myself.data['villageId'],
                'eventType': 'Building',
                'eventId': entry['id'],
                'eventData': entry
            });
        }, (inSeconds + 300) * 1000);
    }

    this.set = function(data) {
        this.parent.set.call(this, data, false);

        if (buildingFinishedTimer != null) {
            window.clearTimeout(buildingFinishedTimer);
            buildingFinishedTimer = null;
        }
        var nextFinished = null;
        var inQueue = {};
        for (var queueType in this.data['queues']) {
            for (var i = 0; i < this.data['queues'][queueType].length; i++) {
                var entry = this.data['queues'][queueType][i];

                entry['paid'] = (entry['paid'] == 1);

                if (queueType != BuildingQueue.TYPE_DESTRUCTION) {
                    if (typeof inQueue[entry['locationId']] == 'undefined') {
                        inQueue[entry['locationId']] = 0;
                    } else {
                        inQueue[entry['locationId']]++;
                    }
                    entry['levelDifference'] = inQueue[entry['locationId']];
                }

                // Check if this entry is the next finishing construction
                if (queueType == BuildingQueue.TYPE_VILLAGE || queueType == BuildingQueue.TYPE_RESOURCES) {
                    var secsLeft = entry['finished'] - Travian.rootScope['currentServerTime'];
                    // Find the entry that is finished next
                    if ((nextFinished == null) || (nextFinished > secsLeft)) {
                        if (secsLeft > 0) {
                            nextFinished = secsLeft;
                        }
                    }
                }

            }
        }

        if (nextFinished != null) {
            // If there is some entry, set a timer to the expected ending time plus 30 seconds. After that query the server
            queryForSanity(entry, secsLeft);
        }
    }
    ;

    /**
	 * Returns all the queue entries for this location ID
	 */
    this.getEntriesForLocation = function(locationId, type) {
        var returnArr = [];
        for (var queueType in this.data['queues']) {
            for (var i = 0; i < this.data['queues'][queueType].length; i++) {
                var entry = this.data['queues'][queueType][i];
                if (entry['locationId'] == locationId && (typeof (type) == 'undefined' || type == queueType)) {
                    entry['queuePosition'] = i;
                    returnArr.push(entry);
                }
            }
        }
        return returnArr;
    }
    ;

    /**
	 * Checks if there is a building slot (instantly or waiting queue) available for the given building
	 */
    this.hasFreeBuildingSlots = function(building) {
        if (building.isResourceField()) {
            return this.data['freeSlots'][BuildingQueue.TYPE_RESOURCES] > 0;
        } else {
            return this.data['freeSlots'][BuildingQueue.TYPE_VILLAGE] > 0;
        }
    }
    ;

    /**
	 * Returns the type of the queue that prevents a given building from getting upgraded
	 * @param building
	 * @returns {number}
	 */
    this.getBlockingQueueType = function(building) {
        var queueType = BuildingQueue.TYPE_VILLAGE;
        if (building.isResourceField()) {
            queueType = BuildingQueue.TYPE_RESOURCES;
        }
        if (myself.data['tribeId'] != Player.TRIBE.ROMAN) {
            if (myself.data['queues'][BuildingQueue.TYPE_RESOURCES].length > 0) {
                return BuildingQueue.TYPE_RESOURCES;
            }
            if (myself.data['queues'][BuildingQueue.TYPE_VILLAGE].length > 0) {
                return BuildingQueue.TYPE_VILLAGE;
            }
        }
        return queueType;
    }
    ;

    this.set(this.defaultData);

    this.name = 'BuildingQueue';
}

BuildingQueue.getQueueType = function(building) {
    return (building.isResourceField() ? BuildingQueue.TYPE_RESOURCES : BuildingQueue.TYPE_VILLAGE);
}
;

BuildingQueue.TYPE_VILLAGE = 1;
BuildingQueue.TYPE_RESOURCES = 2;
BuildingQueue.TYPE_MASTER_BUILDER = 4;
BuildingQueue.TYPE_DESTRUCTION = 5;

BuildingQueue.MASTER_BUILDER_SLOTS = 4;
BuildingQueue.FREE_MASTER_BUILDER_SLOTS = 1;

BuildingQueue.prototype = new AbstractModel();
Cache.register(BuildingQueue);

/**
 * @constructor
 * @extends {AbstractData}
 */
;window['CardgameRolls'] = function CardgameRolls() {
    this.defaultData = {
        'playerId': 0,
        'freeRolls': 0,
        'hasDailyRoll': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'CardgameRolls';
}

CardgameRolls.prototype = new AbstractModel();
Cache.register(CardgameRolls);
/**
 * @constructor
 * @extends {AbstractData}
 */
;window['CelebrationQueue'] = function CelebrationQueue() {
    'use strict';

    this.defaultData = {
        'villageId': 0,
        'lastFinished': [],
        'queues': []
    };

    this.data = {};

    this.set = function(data) {
        this.parent.set.call(this, data, false);

    }
    ;

    this.set(this.defaultData);

    this.getQueue = function getQueue(buildingType) {
        return this.data.queues[buildingType];
    }
    ;

    this.getLastFinished = function getLastFinished(buildingType) {
        return this.data.lastFinished[buildingType];
    }
    ;

    this.name = 'CelebrationQueue';
}

CelebrationQueue.prototype = new AbstractModel();
Cache.register(CelebrationQueue);

/**
 * ExchangeOffice Model
 * @class
 * @constructor
 */
;window['ExchangeOffice'] = function ExchangeOffice(player, callback) {
    /**
	 * the type which should be changed to another (result type)
	 * @see ExchangeOffice.TYPE_*
	 * @type {string}
	 * @private
	 */
    var exchangeType;
    /**
	 * the rate between the exchangeType amount and the result
	 * @type {number}
	 * @private
	 */
    var rate = 0;
    /**
	 * maximum amount which can be chosen
	 * @type {number}
	 * @private
	 */
    var maxAmount = 0;

    /**
	 * @type {number}
	 * @public incl. template
	 */
    this['result'] = 1;
    /**
	 * has to be an Object for the slider-directive
	 * @link slider.js
	 * @public incl. template
	 */
    this['amount'] = {
        'value': 0
    };

    var requestCallback = callback;
    /**
	 * getter for rate
	 * @returns {number}
	 * @public incl. template
	 */
    this['getRate'] = function() {
        return rate;
    }
    ;

    /**
	 * Getter for maxAmount
	 * @returns {number}
	 * @public incl. template
	 */
    this['getMaxAmount'] = function() {
        return maxAmount;
    }
    ;

    /**
	 * Set the value of amount, NOT the amount-Object
	 * @param value {number}
	 * @public only for the Ctrl
	 */
    this.setAmount = function(value) {
        this['amount']['value'] = value;
    }
    ;

    /**
	 * initialize the amount
	 * @public only for the Ctrl
	 */
    this.initAmount = function() {
        var minAmount = 0;

        if (exchangeType == ExchangeOffice.TYPE_SILVER) {
            minAmount = rate;
        } else {
            minAmount = 1;
        }
        var amount = Math.max(0, Math.min(player['data'][exchangeType], minAmount));
        this.setAmount(amount);
    }
    ;

    /**
	 * Get the value of amount, NOT the amount-Object
	 * @returns {number}
	 * @public only for the Ctrl
	 */
    this.getAmount = function() {
        return this['amount']['value'];
    }
    ;

    /**
	 * get the exchangeType
	 * @returns {string} => 'silver' or 'gold' @see ExchangeOffice.TYPE_*
	 * @public only for the Ctrl
	 */
    this.getType = function() {
        return exchangeType;
    }
    ;

    /**
	 * calculate the maxAmount
	 * @public only for the Ctrl
	 */
    this.calculateMaxAmount = function() {
        if (exchangeType == ExchangeOffice.TYPE_SILVER || exchangeType == ExchangeOffice.TYPE_GOLD) {
            maxAmount = Math.max(0, Math.min(player['data'][exchangeType], Travian.Config['exchangeOffice']['maxAmount']));
        }
    }
    ;

    /**
	 * Initialized this Object for the given type
	 * @param type {string} => 'silver' or 'gold' @see ExchangeOffice.TYPE_*
	 * @public only for the Ctrl
	 */
    this.init = function(type) {
        exchangeType = type;
        this.calculateMaxAmount();
        if (exchangeType == ExchangeOffice.TYPE_SILVER) {
            rate = Travian.Config['exchangeOffice']['silverToGoldRate'];
        } else {
            rate = Travian.Config['exchangeOffice']['goldToSilverRate'];
            this['result'] = rate;
        }
        this.initAmount();
    }
    ;
    /**
	 * This Function is a callback function for PremiumFeature-Class to get the parameters for the Backend
	 * Both functions will be handles by the PremiumFeature class
	 * @returns {{amount: number, type: string, callback: function}}
	 */
    this.premiumParamsCallback = function() {
        return {
            'amount': this.getAmount(),
            'type': this.getType(),
            'callback': requestCallback
        };
    }
}

ExchangeOffice.TYPE_SILVER = 'silver';
ExchangeOffice.TYPE_GOLD = 'gold';
;window['ExpansionListEntry'] = function ExpansionListEntry() {
    this.defaultData = {
        'villageId': 0,
        'villageName': "",
        'ownerName': "",
        'population': 0,
        'coordinates': {
            'x': 0,
            'y': 0
        },
        'foundingTime': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'ExpansionListEntry';
}

ExpansionListEntry.prototype = new AbstractModel();
Cache.register(ExpansionListEntry);

;window['FarmList'] = function FarmList() {
    this.defaultData = {
        'listId': 0,
        'listName': 0,
        'lastSent': 0,
        'units': {},
        'troopsAmount': 0,
        'orderNr': 0,
        'villageIds': [],
        'entryIds': [],
        'isDefault': true,
        'maxEntriesCount': 0
    };

    this.data = {};
    this.set = function(data) {
        this.parent.set.call(this, data, false);
        this.data['troopsAmount'] = 0;
        for (var i in this.data['units']) {
            this.data['troopsAmount'] += parseInt(this.data['units'][i]);
        }
    }
    ;
    this.set(this.defaultData);
    this.name = 'FarmList';
}

FarmList.INFO_TARGET_WILL_BE_ON_VACATION = 1;
FarmList.INFO_TARGET_IS_ON_VACATION = 2;
FarmList.INFO_PLAYER_WILL_BE_ON_VACATION = 3;

FarmList.prototype = new AbstractModel();
Cache.register(FarmList);

module.exports = FarmList;
;window['FarmListEntry'] = function FarmListEntry() {
    this.defaultData = {
        'entryId': 0,
        'villageId': 0,
        'units': {},
        'troopsAmount': 0,
        'targetOwnerId': 0,
        'belongsToKing': 0,
        'villageName': '',
        'population': 0,
        'coords': {},
        'lastReport': {},
        'isOasis': false
    };

    this.data = {};
    this.set = function(data) {
        this.parent.set.call(this, data);
        this.data['troopsAmount'] = 0;
        for (var i in this.data['units']) {
            this.data['troopsAmount'] += parseInt(this.data['units'][i]);
        }
    }
    ;
    this.set(this.defaultData);
    this.name = 'FarmListEntry';
}

FarmListEntry.preventUpdateWithoutFirstFill = true;

/*
	Is only used in this Frontend, because we used in the past the farmListCtrl/moveEntry for adding, moving and coping a FarmListEntry.
	to separate those actions by using still just one template we are using now those actions
 */
FarmListEntry.ACTION = {
    ADD: 1,
    COPY: 2,
    TOGGLE: 3
};

FarmListEntry.prototype = new AbstractModel();
Cache.register(FarmListEntry);

;window['FieldMarkerGlobal'] = function FieldMarkerGlobal() {
    this.defaultData = {
        'id': 0,
        'regionId': 0,
        'cellId': 0,
        'creatorPlayerId': 0,
        'isGlobal': 0,
        'playerId': 0,
        'kingdomId': 0,
        'societyId': 0,
        'text': 0,
        'timestamp': 0,
        'duration': 0,
        'isMinimized': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'FieldMarkerGlobal';

    this.getTimeAgoString = function() {
        var s = Travian.ServerTime - this.data.timestamp;
        var m = Math.floor(s / 60) % 60;
        var h = Math.floor(s / 3600);
        // Set the correct display type of the time
        var agoType = 1;
        if ((m > 1) || (h > 0)) {
            agoType = 2;
            if (h > 0) {
                agoType = 3;
                if (m < 10) {
                    m = '0' + m;
                }
            }
            if (h >= 2) {
                agoType = 4;
            }
        }
        return Travian.translate('FieldMarker.TimeAgo_' + agoType, {
            'minutes': m,
            'hours': h
        });
    }
    ;

    this.getDisappearTime = function() {
        return this.data.timestamp + this.data.duration - Travian.ServerTime;
    }
    ;
}
FieldMarkerGlobal.prototype = new AbstractModel();
Cache.register(FieldMarkerGlobal);

FieldMarkerGlobal.TYPE_GOVERNOR_RELOCATE = 'FieldMarker.GovernorRelocate';

FieldMarkerGlobal.CREATOR_FIREWORKS = 50;
;window['FieldMarkerPersonal'] = function FieldMarkerPersonal() {
    this.defaultData = {
        'id': 0,
        'regionId': 0,
        'cellId': 0,
        'creatorPlayerId': 0,
        'isGlobal': 0,
        'playerId': 0,
        'kingdomId': 0,
        'societyId': 0,
        'text': 0,
        'timestamp': 0,
        'duration': 0,
        'minimizedState': 0,
        'isClosed': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'FieldMarkerPersonal';
}
FieldMarkerPersonal.prototype = new FieldMarkerGlobal();
Cache.register(FieldMarkerPersonal);

FieldMarkerPersonal.KINGDOM = 2;
FieldMarkerPersonal.SOCIETY = 4;
FieldMarkerPersonal.PLAYER = 5;

FieldMarkerPersonal.MINIMIZED_DEFAULT = 0;
FieldMarkerPersonal.MINIMIZED_MINIMIZED = 1;
FieldMarkerPersonal.MINIMIZED_MAXIMIZED = 2;

;window['Gameworld'] = function Gameworld() {
    this.defaultData = {
        'status': 0,
        'data': '',
        'messageTitle': '',
        'messageText': '',
        'startTime': 0,
        'worldWonderActivated': 0,
        'maintenance': false,
        'kingdomChangeDenied': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Gameworld';
    this.hasMaintenance = function() {
        return this.data['maintenance'];
    }
    ;

    this.isKingdomChangeDenied = function() {
        return this.data['kingdomChangeDenied'] > 0;
    }
    ;

    this.isWorldWonderActivated = function() {
        return this.data['worldWonderActivated']
    }
}

Gameworld.STATUS_OPEN = 0;
Gameworld.STATUS_CLOSED = 1;
Gameworld.STATUS_ENDED = 2;
Gameworld.STATUS_SETUP = 3;

Gameworld.isNightTruceActive = function(timestamp) {
    timestamp = timestamp || (Date.now() / 1000);
    var nightTruce = Gameworld.getNightTruceTimes(timestamp);
    return (nightTruce['start'] <= timestamp && timestamp <= nightTruce['end']);
}
;

Gameworld.getNightPeaceDuration = function() {
    var nightTruce = Gameworld.getNightTruceTimes();
    return nightTruce['end'] - nightTruce['start'];
}
;

/**
 * Returns the start and end timestamps of the current or next night truce
 *
 * @param timestamp Can be used to get the start and end timestamps of the current or next night truce for at a different point of time
 * @param next If true and night truce is currently active, the start and end timestamps of the next night truce will be returned
 * @returns {{start: *, end: *}|{start: number, end: number}}
 */
Gameworld.getNightTruceTimes = function(timestamp, next) {
    if (!Travian.Config['specialRules']['nightPeace'] || !Travian.Config['nightPeace']) {
        return {
            'start': 0,
            'end': 0
        };
    }
    timestamp = timestamp || (Date.now() / 1000);
    var midnight = Math.floor(timestamp / 86400) * 86400;
    var start = midnight + Travian.Config['nightPeace']['startHour'] * 3600 + (Travian.Config['nightPeace']['startMinute'] || 0) * 60 + (Travian.Config['nightPeace']['startSecond'] || 0);
    var end = midnight + Travian.Config['nightPeace']['endHour'] * 3600 + (Travian.Config['nightPeace']['endMinute'] || 0) * 60 + (Travian.Config['nightPeace']['endSecond'] || 0);
    if (start > end) {
        if (timestamp > end) {
            end += 86400;
        } else {
            start -= 86400;
        }
    } else if (timestamp > end) {
        start += 86400;
        end += 86400;
    }
    if (next && start <= timestamp && timestamp >= end) {
        start += 86400;
        end += 86400;
    }
    return {
        'start': start,
        'end': end
    };
}
;

Gameworld.hasNightTruce = function() {
    return (Travian.Config['specialRules'] && Travian.Config['specialRules']['nightPeace']);
}
;

Gameworld.isHalloween = function() {
    return (Travian.Config['specialRules'] && Travian.Config['specialRules']['halloween']);
}
;

Gameworld.isBirthday = function() {
    return (Travian.Config['specialRules'] && Travian.Config['specialRules']['birthday']);
}
;

Gameworld.isMayhem = function() {
    return (Travian.Config['specialRules'] && Travian.Config['specialRules']['mayhem']);
}
;

Gameworld.isDynasty = function() {
    return (Travian.Config['specialRules'] && Travian.Config['specialRules']['dynasty']);
}
;

Gameworld.getGameWorldType = function() {
    var gameWorldType = '';

    if (Gameworld.isHalloween()) {
        gameWorldType = 'halloween';
    } else if (Gameworld.isBirthday()) {
        gameWorldType = 'birthday';
    } else if (Gameworld.isMayhem()) {
        gameWorldType = 'mayhem';
    } else if (Gameworld.isDynasty()) {
        gameWorldType = 'dynasty';
    }

    return gameWorldType;
}

Gameworld.prototype = new AbstractModel();
Cache.register(Gameworld);
;window['GroupInvitation'] = function GroupInvitation(id) {
    this.defaultData = {
        'id': id,
        'groupId': 0,
        'groupName': '',
        'playerId': 0,
        'playerName': '',
        'invitedBy': 0,
        'invitedByName': '',
        'invitedByRole': 0,
        'invitedAs': 0,
        'invitationTime': 0,
        'customText': '',
        'cellId': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'GroupInvitation';

    var that = this;

    this.isGovernorInvitation = function() {
        return (that.data['invitedAs'] == Kingdom.RIGHT_GOVERNOR && !that.isRelocationInvitation());
    }
    ;

    this.isDukeInvitation = function() {
        return (that.data['invitedAs'] == Kingdom.RIGHT_DUKE && !that.isRelocationInvitation());
    }
    ;

    this.isUnionInvitation = function(role) {
        return ((that.data['invitedAs'] == Kingdom.RIGHT_KING || that.data['invitedAs'] == Kingdom.RIGHT_VICEKING) && (!role || that.data['invitedAs'] == role));
    }
    ;

    this.isRelocationInvitation = function(cellId) {
        return (that.data['cellId'] > 0 && (!cellId || that.data['cellId'] == cellId));
    }
    ;
}
GroupInvitation.prototype = new AbstractModel();
Cache.register(GroupInvitation);

GroupInvitation.TYPE_SECRET_SOCIETY = 2;
GroupInvitation.TYPE_KINGDOM = 3;

GroupInvitation.COLLECTION_FOR_GROUP = 'group';

;window['Hero'] = function Hero($playerId) {

    this.defaultData = {
        'playerId': 0,
        'villageId': 0,
        'destVillageId': 0,
        'level': 0,
        'status': 0,
        'xp': 0,
        'health': 0,
        'lastHealthTime': 0,
        'fightStrengthPoints': 0,
        'baseRegenerationRate': 0,
        'attBonusPoints': 0,
        'defBonusPoints': 0,
        'resBonusPoints': 0,
        'resBonusType': 0,
        'freePoints': 0,
        'speed': 0,
        'untilTime': 0,
        'bonuses': {},
        'maxScrollsPerDay': 0,
        'scrollsUsedToday': 0,
        'artworkUsedToday': 0,
        'waterbucketUsedToday': 0,
        'ointmentsUsedToday': 0,
        'resourceChestsUsedToday': 0,
        'cropChestsUsedToday': 0,
        'adventurePointCardUsedToday': 0,
        'isMoving': false,
        'adventurePoints': 0,
        'adventurePointTime': 0,
        'heroCreationTime': 0,
        'adventurePointsSpeedup': 0,
        'levelUp': 0
    };
    var myself = this;
    var tick = null;
    var skip = 0;

    var lastHealthValue = 0;
    var lastHealthTime = 0;

    var lastReviveValue = {
        'duration': 0
    };

    this.getBonus = function(bonusType) {
        if (this.data['bonuses'].hasOwnProperty(bonusType)) {
            return this.data['bonuses'][bonusType];
        }
        return null;
    }
    ;

    this.data = {};

    /**
	 * Extrapolates the actual health of the hero once per second.
	 */
    function extrapolate() {
        // only execute every 10th tick -> once per second
        skip++;
        if (skip % 10 != 1 || myself.data['health'] >= 100 || myself.data['health'] <= 0)
            return;
        var diff = Travian.ServerTime - myself.data['lastHealthTime'];
        var heroItemsHealthRegen = parseFloat(myself.data['bonuses'][HeroItem.BONUS_HEALTH_REGEN] || 0);
        // Calculate actual Health of the Hero
        var actualHealthValue = lastHealthValue + ((myself.data['baseRegenerationRate'] + heroItemsHealthRegen) * diff) / 86400;
        if (actualHealthValue > 100)
            actualHealthValue = 100;
        myself.data['health'] = Math.ceil(actualHealthValue);
        //If Hero is dead, calculate actual revive Costs
        if (myself.data['status'] == Hero.STATUS_DEAD) {
            //Reduce Duration
            var duration = lastReviveValue['duration'] - myself.data['reviveDurationReduction'] * (diff / 1000);
            if (duration < myself.data['reviveDurationMinimal'])
                duration = myself.data['reviveDurationMinimal'];
            myself.data['reviveDuration'] = Math.ceil(duration);
            //Reduce Costs
            for (var i = 1; i <= 4; i++) {
                var cost = lastReviveValue['costs'][i] - myself.data['reviveCostReduction'][i] * (diff / 1000);
                if (cost < myself.data['reviveCostMinimal'][i])
                    cost = myself.data['reviveCostMinimal'][i];
                myself.data['reviveCosts'][i] = Math.ceil(cost);
            }
        }
    }

    this.set = function(data) {
        data = data || {};
        lastHealthValue = parseFloat(data['health']);
        data['health'] = Math.ceil(lastHealthValue);
        if (data['status'] == Hero.STATUS_DEAD) {
            lastReviveValue['duration'] = data['reviveDuration'];
            lastReviveValue['costs'] = data['reviveCosts'];
        }
        if ((data['status'] == Hero.STATUS_DEAD) || (data['status'] == Hero.STATUS_REVIVING)) {
            data['notAlive'] = true;
        } else {
            data['notAlive'] = false;
        }
        if (data['levelUp'] > this.data['levelUp']) {
            // This update contains a level up, show an according screen flash notification
            getAngularService('AnimationService').showScreenFlashNotification('heroLevelUp');
        }
        this.parent.set.call(this, data, false);
        // We should wait until player loaded - data['playerId'] will be filled in
        // Afterwards bind heroRegeneration only for your hero, and not others (others player profiles), which will not have health
        if (tick == null && data['playerId'] && !isNaN(data['health'])) {
            tick = Travian.tick.bind('heroRegeneration', extrapolate);
        }
    }
    ;

    this.resetHeroItemsDailyUsage = function() {
        angular.forEach(myself.data, function(value, key) {
            if (key.indexOf('UsedToday') > -1) {
                myself.data[key] = 0;
            }
        });
        this.callSubscribers();
    }
    ;

    this.set(this.defaultData);

    this.name = 'Hero';
}
Hero.STATUS_IDLE = 0;
Hero.STATUS_RETURNING = 1;
Hero.STATUS_TO_VILLAGE = 2;
Hero.STATUS_TO_OASIS = 3;
Hero.STATUS_TO_ADVENTURE = 4;
Hero.STATUS_SUPPORTING = 5;
Hero.STATUS_TRAPPED = 6;
Hero.STATUS_DEAD = 7;
Hero.STATUS_REVIVING = 8;

//Remember: you have to change the zIndex in heroImage.php, too
Hero.zIndex = {
    'cosmetic': 95,
    'hair': 90,
    'nose': 80,
    'beard': 70,
    'mouth': 60,
    'eyebrow': 40,
    'eye': 30,
    'face0': 10,
    'ear': 5
};

Hero.prototype = new AbstractModel();
Cache.register(Hero);
;window['HeroFace'] = function HeroFace() {
    this.defaultData = {
        'playerId': 0,
        'fetchedFromLobby': 0,
        'gender': null,
        'hairColor': 0,
        'face': null
    };

    var viewModel = {
        'gender': 'male',
        'hairColor': 'black',
        'face': {}
    };

    var lastData = viewModel;
    var somethingChanged = false;
    this.data = {};
    this.set = function(data) {
        this.data['face'] = {};
        if (data['face'] == null) {
            this.data['face'] = {};
            this.data['gender'] = Math.floor(Math.random() * 2);
            if (!Travian.Config['features']['femaleHero']) {
                this.data['gender'] = 0;
            }
            this.selectRandomFace();
            data = angular.copy(this.data);
        }
        lastData = data;
        this.parent.set.call(this, data);
        this.updateViewModel();
    }
    ;
    this.name = 'HeroFace';

    var genders = ['male', 'female'];
    var attrsWithColor = ['femalehair', 'malehair', 'malebeard'];

    // Generates the view model
    // Only adds some values to the "face" object and takes care of the hair color
    this.updateViewModel = function() {
        var charCustomisations = Travian.Config['heroCustomizations']['options'];
        var colors = Travian.Config['heroCustomizations']['hairColors'];
        viewModel['gender'] = genders[this.data['gender']];
        viewModel['hairColor'] = colors[this.data['hairColor']];
        somethingChanged = (this.data['hairColor'] != lastData['hairColor']);
        if (!viewModel['hairColor']) {
            // Fallback, if this hair color isn't available anymore (hero customisations have changed!)
            var colorId = charCustomisations[viewModel['gender']]['color'].slice(-1)[0];
            viewModel['hairColor'] = colors[colorId];
            this.data['hairColor'] = colorId;
        }
        viewModel['face'] = {};
        var attributes = this.data['face'];
        for (var attr in attributes) {
            if (!charCustomisations[viewModel['gender']][attr]) {
                continue;
            }
            var type = this.data['face'][attr];
            if (type != lastData['face'][attr]) {
                somethingChanged = true;
            }
            if (!charCustomisations[viewModel['gender']][attr][type]) {
                // Fallback, if this customization isn't available anymore (hero customisations have changed!)
                type = charCustomisations[viewModel['gender']][attr][0];
                this.data['face'][attr] = type;
            }
            if ($.inArray(viewModel['gender'] + attr, attrsWithColor) > -1) {
                if (type != 'None') {
                    type = type + '-' + viewModel['hairColor'];
                }
            }
            viewModel['face'][attr] = {
                'attr': attr,
                'type': type,
                'z': Hero.zIndex[attr]
            };
        }
        applyCustomizationRules();
    }
    ;

    function applyCustomizationRules() {
        var rules = Travian.Config['heroCustomizations']['rules'];
        viewModel['hideHelmet'] = false;
        for (var attr in viewModel['face']) {
            if (!rules[attr]) {
                continue;
            }
            var type = viewModel['face'][attr]['type'];
            var typeRules = rules[attr][type] || rules[attr]['all'];
            if (!typeRules) {
                continue;
            }
            for (var rule in typeRules) {
                switch (rule) {
                case 'hide':
                    angular.forEach(typeRules[rule], function(attr) {
                        if (attr == 'helmet') {
                            viewModel['hideHelmet'] = true;
                        } else {
                            delete viewModel['face'][attr];
                        }
                    });
                }
            }
        }
    }

    this.getViewModel = function() {
        return viewModel;
    }
    ;

    this.somethingChanged = function() {
        return somethingChanged;
    }
    ;

    this.selectRandomFace = function() {
        var attributes = Travian.Config['heroCustomizations']['options'][genders[this.data['gender']]];
        var externs = Travian.Config['heroCustomizations']['externs'] || {};
        var locked = Travian.Config['heroCustomizations']['locked'] || {};
        function getRandomOption(attr) {
            var random = Math.floor(Math.random() * attributes[attr].length);
            if (locked[attr]) {
                for (var i in locked[attr]) {
                    if (locked[attr][i] == attributes[attr][random]) {
                        // This option is not unlocked for the player, use an other random option
                        return getRandomOption(attr);
                    }
                }
            }
            if (externs[attr] && externs[attr].length < attributes[attr].length) {
                for (var i in externs[attr]) {
                    if (externs[attr][i] == attributes[attr][random]) {
                        // This option is not available on this game world, use an other random option
                        return getRandomOption(attr);
                    }
                }
            }
            return attributes[attr][random];
        }
        this.data['hairColor'] = getRandomOption('color');
        this.data['face'] = {};
        for (var attr in attributes) {
            if (attr == 'cosmetic') {
                continue;
            }
            if (attr != 'color' && attr != 'colorStrings') {
                this.data['face'][attr] = getRandomOption(attr);
            }
        }
        this.updateViewModel();
    }
    ;

    this.resetChangeStatus = function() {
        somethingChanged = false;
    }
    ;

    this.set(this.defaultData);
}

HeroFace.prototype = new AbstractModel();
Cache.register(HeroFace);

HeroFace.CUSTOMIZATION_TYPE_NONE = 'None';

HeroFace.getCustomizationTag = function(option, type) {
    if (option == 'cosmetic') {
        if (type == 'None') {
            return 'none';
        }
        return {
            10: 'birthday2021',
            27: 'birthday2022',
            37: 'winterBundle2022',
            38: 'birthday2023',
            44: 'halloweenChallenge',
            50: 'winterBundle2023',
            51: 'dynasty2024',
            52: 'birthday2024'
        }[type] || ((type <= 9 || type >= 17 && type <= 26 || type >= 32 && type <= 36 || type >= 44 && type <= 49) ? 'halloween' : 'birthday');
    }
    if (option == 'color') {
        return (type >= 9 && type <= 12) ? 'birthday' : 'none';
    }
    return 'none';
}
;
;window['HeroItem'] = function HeroItem() {
    this.defaultData = {
        'id': 0,
        'playerId': 0,
        'tribeId': 0,
        'inSlot': 0,
        'itemId': 0,
        'itemType': 0,
        'amount': 0,
        'strength': 100,
        'images': [],
        'bonuses': [],
        'stackable': false,
        'slot': 0,
        'lastChange': 0,
        'hasSpeedBonus': false,
        'inventorySlotNr': 0,
        'previousOwners': 0,
        'upgradeLevel': 0,
        'upgradableItemType': 0,
        'itemQuality': 0,
        'itemTier': 0,
        'baseUpgradeBonus': 0,
        'cardGameItem': false,
        'premiumItem': false,
        'upgradedItem': false
    };

    this.data = {};
    this.set = function(data) {
        this.parent.set.call(this, data, false);
        if (typeof this.data['maxPerDay'] != 'undefined') {
            if (typeof this.data['usedPerDay'] == 'undefined') {
                this.data['usedPerDay'] = 0;
            }
            this.data['maxCanUse'] = Math.min(this.data['amount'], this.data['maxPerDay'] - this.data['usedPerDay']);
        } else {
            this.data['maxCanUse'] = this.data['amount'];
        }
        this.data['zIndex'] = this.getZIndex();
    }
    ;

    this.getZIndex = function() {
        if (this.data['inSlot'] <= HeroItem.SLOT_INVENTORY) {
            return 0;
        }
        // The hero body should have a zIndex of 2
        switch (this.data['inSlot']) {
        case HeroItem.SLOT_BAG:
            return 10;
        case HeroItem.SLOT_HELMET:
            return 9;
        case HeroItem.SLOT_RIGHT_HAND:
            return 8;
        case HeroItem.SLOT_BODY:
            return 6;
        case HeroItem.SLOT_SHOES:
            return 3;
        case HeroItem.SLOT_LEFT_HAND:
            if (this.data['images'][0].indexOf('shield') != -1) {
                // Shields are the only left hand items that need to be displayed in front of the body
                // If there are more exceptions than shields we should use a config instead of this
                return 7;
            }
            return 1;
        }
        return 0;
    }
    ;

    this.setUseInfos = function(hero, equippedItems) {
        if (!hero || !hero.filled) {
            return;
        }
        var isHeroMoving = hero.data['isMoving'];
        var isHeroDeadOrReviving = hero.data['status'] == Hero.STATUS_DEAD || hero.data['status'] == Hero.STATUS_REVIVING;
        var isWaterBucket = this.data['itemType'] == HeroItem.TYPE_WATERBUCKET;
        var isOintment = this.data['itemType'] == HeroItem.TYPE_OINTMENT;
        var itemSpeedBonus = this.data['hasSpeedBonus'];
        var isArtwork = this.data['itemType'] == HeroItem.TYPE_ARTWORK;
        var isScroll = this.data['itemType'] == HeroItem.TYPE_SCROLLS;
        var isBook = this.data['itemType'] == HeroItem.TYPE_BOOK;

        // Hero-Status specific things
        var speedBonusWhileMoving = isHeroMoving && itemSpeedBonus;
        var waterBucketWhileAlive = isWaterBucket && !isHeroDeadOrReviving;
        var ointmentWhileDead = isOintment && isHeroDeadOrReviving;
        var artworkWhileDead = isArtwork && isHeroDeadOrReviving;
        var bookWhileDead = isBook && isHeroDeadOrReviving;
        var scrollWhileDead = isScroll && isHeroDeadOrReviving;

        // Item modifications
        this.data['notUsableItem'] = speedBonusWhileMoving || waterBucketWhileAlive || ointmentWhileDead || artworkWhileDead || bookWhileDead || scrollWhileDead;
        this.data['notUsableReason'] = false;

        if (speedBonusWhileMoving) {
            this.data['notUsableReason'] = "NoEquipItemHeroMoving";
        } else if (waterBucketWhileAlive) {
            this.data['notUsableReason'] = "NoEquipItemHeroAlive";
        } else if (ointmentWhileDead || artworkWhileDead || bookWhileDead || scrollWhileDead) {
            this.data['notUsableReason'] = "NoEquipItemHeroDead";
        }

        // Is there some item currently equipped that may not be unequipped?
        if (equippedItems && equippedItems[this.data['slot']] !== undefined) {
            var otherItem = equippedItems[this.data['slot']];
            if (otherItem != this && otherItem.data['notUsableReason'] == 'NoEquipItemHeroMoving') {
                this.data['notUsableReason'] = "NoEquipItemHeroMoving2";
                this.data['notUsableItem'] = true;
            }
        }

        //is item stackable consumable with limited daily use?
        switch (this.data['itemType']) {
        case HeroItem.TYPE_ARTWORK:
            this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxArtworksPerDay'];
            this.data['usedPerDay'] = hero.data['artworkUsedToday'];
            break;
        case HeroItem.TYPE_WATERBUCKET:
            this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxWaterbucketsPerDay'];
            this.data['usedPerDay'] = hero.data['waterbucketUsedToday'];
            break;
        case HeroItem.TYPE_OINTMENT:
            this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxOintmentsPerDay'];
            this.data['usedPerDay'] = hero.data['ointmentsUsedToday'];
            break;
        case HeroItem.TYPE_ADVENTURE_POINT:
            this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxAdventurePointsCardPerDay'];
            this.data['usedPerDay'] = hero.data['adventurePointCardUsedToday'];
            break;
        case HeroItem.TYPE_RESOURCE_BONUS_3:
        case HeroItem.TYPE_RESOURCE_BONUS_4:
        case HeroItem.TYPE_RESOURCE_BONUS_5:
            this.data['maxPerDayWithoutLock'] = Travian.Config['heroConfig']['MaxResourceChestsPerDay'];
            this.data['usedPerDay'] = hero.data['resourceChestsUsedToday'];
            break;
        case HeroItem.TYPE_CROP_BONUS_3:
        case HeroItem.TYPE_CROP_BONUS_4:
        case HeroItem.TYPE_CROP_BONUS_5:
            this.data['maxPerDayWithoutLock'] = Travian.Config['heroConfig']['MaxCropChestsPerDay'];
            this.data['usedPerDay'] = hero.data['cropChestsUsedToday'];
            break;
        case HeroItem.TYPE_SCROLLS:
            if (hero.data['maxScrollsPerDay'] > 0) {
                this.data['maxPerDay'] = hero.data['maxScrollsPerDay'];
            } else {
                this.data['maxPerDay'] = (hero.data['xpNextLevel'] - hero.data['xpThisLevel']) / 10;
            }
            this.data['usedPerDay'] = hero.data['scrollsUsedToday'];
            break;
        }
        if (this.data['itemType'] == HeroItem.TYPE_WATERBUCKET) {
            if (hero.data['health'] != 0) {
                this.data['maxCanUse'] = 0;
            } else {
                this.data['maxCanUse'] = this.data['amount'];
            }
        }
    }
    ;

    this.set(this.defaultData);

    this.name = 'HeroItem';
}

HeroItem.getOwnItemsByType = function(itemType) {
    var items = [];
    var inventory = HeroItem.getCollection('own');
    for (var i = 0; i < inventory.data.length; i++) {
        if (inventory.data[i].data['itemType'] == itemType) {
            items.push(inventory.data[i]);
        }
    }
    return items;
}
;

HeroItem.getOwnItemsAmountByType = function(itemType) {
    return HeroItem.getOwnItemsByType(itemType).reduce(function(a, b) {
        return a + parseInt(b.data['amount'])
    }, 0)
}
;

HeroItem.getImages = function(itemType) {
    return Travian.Config.heroItemImages[itemType];
}
;

HeroItem.getPileResourceId = function(itemType) {
    switch (itemType) {
    case HeroItem.TYPE_PILE_WOOD_SMALL:
    case HeroItem.TYPE_PILE_WOOD_MEDIUM:
    case HeroItem.TYPE_PILE_WOOD_LARGE:
        return Resources.WOOD;
    case HeroItem.TYPE_PILE_CLAY_SMALL:
    case HeroItem.TYPE_PILE_CLAY_MEDIUM:
    case HeroItem.TYPE_PILE_CLAY_LARGE:
        return Resources.CLAY;
    case HeroItem.TYPE_PILE_IRON_SMALL:
    case HeroItem.TYPE_PILE_IRON_MEDIUM:
    case HeroItem.TYPE_PILE_IRON_LARGE:
        return Resources.IRON;
    case HeroItem.TYPE_PILE_CROP_SMALL:
    case HeroItem.TYPE_PILE_CROP_MEDIUM:
    case HeroItem.TYPE_PILE_CROP_LARGE:
        return Resources.CROP;
    }
    return 0;
}
;

HeroItem.getPileSize = function(itemType) {
    switch (itemType) {
    case HeroItem.TYPE_PILE_WOOD_SMALL:
    case HeroItem.TYPE_PILE_CLAY_SMALL:
    case HeroItem.TYPE_PILE_IRON_SMALL:
    case HeroItem.TYPE_PILE_CROP_SMALL:
        return 'S';
    case HeroItem.TYPE_PILE_WOOD_MEDIUM:
    case HeroItem.TYPE_PILE_CLAY_MEDIUM:
    case HeroItem.TYPE_PILE_IRON_MEDIUM:
    case HeroItem.TYPE_PILE_CROP_MEDIUM:
        return 'M';
    case HeroItem.TYPE_PILE_WOOD_LARGE:
    case HeroItem.TYPE_PILE_CLAY_LARGE:
    case HeroItem.TYPE_PILE_IRON_LARGE:
    case HeroItem.TYPE_PILE_CROP_LARGE:
        return 'L';
    }
    return '';
}
;

HeroItem.isResourceItem = function(itemType) {
    return (HeroItem.RESOURCE_ITEMS.indexOf(itemType) >= 0);
}
;

HeroItem.SLOT_INSTANT_USE = -1;
HeroItem.SLOT_INVENTORY = 0;
HeroItem.SLOT_HELMET = 1;
HeroItem.SLOT_RIGHT_HAND = 2;
HeroItem.SLOT_LEFT_HAND = 3;
HeroItem.SLOT_BODY = 4;
HeroItem.SLOT_SHOES = 5;
HeroItem.SLOT_HORSE = 6;
HeroItem.SLOT_BAG = 7;

HeroItem.BONUS_XP = 1;
HeroItem.BONUS_BARRACKS = 2;
HeroItem.BONUS_STABLE = 3;
HeroItem.BONUS_WORKSHOP = 4;
HeroItem.BONUS_SPEED_RETURN = 5;
HeroItem.BONUS_SPEED_OWN_VILLAGES = 6;
HeroItem.BONUS_SPEED_KINGDOM_VILLAGES = 7;
HeroItem.BONUS_SPEED_STAMINA = 8;
HeroItem.BONUS_RAID = 9;
HeroItem.BONUS_NATARS = 10;
HeroItem.BONUS_UNIT_ID = 11;
HeroItem.BONUS_UNIT_STRENGTH = 12;
HeroItem.BONUS_FIGHT_STRENGTH = 13;
HeroItem.BONUS_HEALTH_REGEN = 14;
HeroItem.BONUS_CULTURE_POINTS = 15;
HeroItem.BONUS_ARMOR = 16;
HeroItem.BONUS_SPEED_HERO = 17;
HeroItem.BONUS_SPEED_HORSE = 18;
HeroItem.BONUS_RESKILL = 20;
HeroItem.BONUS_TROOP_HEALING = 21;
HeroItem.BONUS_EYESIGHT = 22;
HeroItem.BONUS_CHICKEN = 23;
HeroItem.BONUS_RESOURCES = 24;
HeroItem.BONUS_CROP = 25;
HeroItem.BONUS_POTION = 26;
HeroItem.BONUS_COOLDOWN = 30;

HeroItem.TYPE_OINTMENT = 112;
HeroItem.TYPE_SCROLLS = 113;
HeroItem.TYPE_WATERBUCKET = 114;
HeroItem.TYPE_BOOK = 115;
HeroItem.TYPE_ARTWORK = 116;
HeroItem.TYPE_BANDAGE_25 = 117;
HeroItem.TYPE_BANDAGE_33 = 118;
HeroItem.TYPE_CAGES = 119;
HeroItem.TYPE_TREASURES = 120;
HeroItem.TYPE_HEALING_POTION = 124;
HeroItem.TYPE_ARMOR_UPGRADE = 125;
HeroItem.TYPE_WEAPON_UPGRADE = 126;
HeroItem.TYPE_LEFT_HAND_UPGRADE = 127;
HeroItem.TYPE_HELMET_UPGRADE = 128;
HeroItem.TYPE_SHOE_UPGRADE = 129;
HeroItem.TYPE_RESOURCE_BONUS_3 = 130;
HeroItem.TYPE_RESOURCE_BONUS_4 = 131;
HeroItem.TYPE_RESOURCE_BONUS_5 = 132;
HeroItem.TYPE_CROP_BONUS_3 = 133;
HeroItem.TYPE_CROP_BONUS_4 = 134;
HeroItem.TYPE_CROP_BONUS_5 = 135;
HeroItem.TYPE_ADVENTURE_POINT = 136;
HeroItem.TYPE_BUILDING_GROUND = 137;
HeroItem.TYPE_FINISH_IMMEDIATELY = 138;
HeroItem.TYPE_NPC_TRADER = 139;
HeroItem.TYPE_INSTANT_TRADE_DELIVERY = 140;
HeroItem.TYPE_BANDAGE_25_UPGRADED = 141;
HeroItem.TYPE_BANDAGE_33_UPGRADED = 142;
HeroItem.TYPE_PILE_WOOD_SMALL = 143;
HeroItem.TYPE_PILE_WOOD_MEDIUM = 144;
HeroItem.TYPE_PILE_WOOD_LARGE = 145;
HeroItem.TYPE_PILE_CLAY_SMALL = 146;
HeroItem.TYPE_PILE_CLAY_MEDIUM = 147;
HeroItem.TYPE_PILE_CLAY_LARGE = 148;
HeroItem.TYPE_PILE_IRON_SMALL = 149;
HeroItem.TYPE_PILE_IRON_MEDIUM = 150;
HeroItem.TYPE_PILE_IRON_LARGE = 151;
HeroItem.TYPE_PILE_CROP_SMALL = 152;
HeroItem.TYPE_PILE_CROP_MEDIUM = 153;
HeroItem.TYPE_PILE_CROP_LARGE = 154;
HeroItem.TYPE_FIREWORKS = 155;
HeroItem.TYPE_SUPER_FIREWORKS = 156;
HeroItem.TYPE_BLACK_POWDER = 157;
HeroItem.TYPE_SINGLE_WOOD = 158;
HeroItem.TYPE_SINGEL_CLAY = 159;
HeroItem.TYPE_SINGEL_IRON = 160;
HeroItem.TYPE_SINGEL_CROP = 161;
HeroItem.TYPE_CANDY = 162;

HeroItem.IconName = {};
HeroItem.IconName['Slot1'] = 'helmet';
HeroItem.IconName['Slot4'] = 'body';
HeroItem.IconName['Slot3'] = 'leftHand';
HeroItem.IconName['Slot2'] = 'rightHand';
HeroItem.IconName['Slot5'] = 'shoes';
HeroItem.IconName['Slot6'] = 'horse';
HeroItem.IconName['cardGame'] = 'cardGame';
HeroItem.IconName[HeroItem.TYPE_OINTMENT] = 'ointment';
HeroItem.IconName[HeroItem.TYPE_SCROLLS] = 'scroll';
HeroItem.IconName[HeroItem.TYPE_WATERBUCKET] = 'bucket';
HeroItem.IconName[HeroItem.TYPE_BOOK] = 'bookOfWisdom';
HeroItem.IconName[HeroItem.TYPE_ARTWORK] = 'artwork';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_25] = 'smallBandage';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_25_UPGRADED] = 'smallBandage';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_33] = 'bandage';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_33_UPGRADED] = 'bandage';
HeroItem.IconName[HeroItem.TYPE_CAGES] = 'cage';

HeroItem.UPGRADE_ITEMS = [HeroItem.TYPE_ARMOR_UPGRADE, HeroItem.TYPE_WEAPON_UPGRADE, HeroItem.TYPE_LEFT_HAND_UPGRADE, HeroItem.TYPE_HELMET_UPGRADE, HeroItem.TYPE_SHOE_UPGRADE];

HeroItem.RESOURCE_ITEMS = [HeroItem.TYPE_SINGLE_WOOD, HeroItem.TYPE_PILE_WOOD_SMALL, HeroItem.TYPE_PILE_WOOD_MEDIUM, HeroItem.TYPE_PILE_WOOD_LARGE, HeroItem.TYPE_SINGEL_CLAY, HeroItem.TYPE_PILE_CLAY_SMALL, HeroItem.TYPE_PILE_CLAY_MEDIUM, HeroItem.TYPE_PILE_CLAY_LARGE, HeroItem.TYPE_SINGEL_IRON, HeroItem.TYPE_PILE_IRON_SMALL, HeroItem.TYPE_PILE_IRON_MEDIUM, HeroItem.TYPE_PILE_IRON_LARGE, HeroItem.TYPE_SINGEL_CROP, HeroItem.TYPE_PILE_CROP_SMALL, HeroItem.TYPE_PILE_CROP_MEDIUM, HeroItem.TYPE_PILE_CROP_LARGE];

HeroItem.ITEM_IMPROVEMENTS = {};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_BANDAGE_25] = {
    'id': HeroItem.TYPE_BANDAGE_25_UPGRADED,
    'bonus': 5
};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_BANDAGE_33] = {
    'id': HeroItem.TYPE_BANDAGE_33_UPGRADED,
    'bonus': 5
};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_RESOURCE_BONUS_3] = {
    'id': HeroItem.TYPE_RESOURCE_BONUS_4,
    'bonus': 1
};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_RESOURCE_BONUS_4] = {
    'id': HeroItem.TYPE_RESOURCE_BONUS_5,
    'bonus': 1
};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_CROP_BONUS_3] = {
    'id': HeroItem.TYPE_CROP_BONUS_4,
    'bonus': 1
};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_CROP_BONUS_4] = {
    'id': HeroItem.TYPE_CROP_BONUS_5,
    'bonus': 1
};

HeroItem.DISABLED_ON_VACATION = [HeroItem.TYPE_FINISH_IMMEDIATELY, HeroItem.TYPE_NPC_TRADER, HeroItem.TYPE_INSTANT_TRADE_DELIVERY];

HeroItem.DISABLED_DURING_TUTORIAL = [HeroItem.TYPE_FIREWORKS, HeroItem.TYPE_SUPER_FIREWORKS, HeroItem.TYPE_BLACK_POWDER];

HeroItem.DISABLED_FOR_SITTERS_AND_DUALS = [HeroItem.TYPE_CANDY];

HeroItem.preventUpdateWithoutFirstFill = true;
HeroItem.prototype = new AbstractModel();
Cache.register(HeroItem);
;window['IngameHelp'] = function IngameHelp() {
    var config = {
        'Buildings': {
            'type': IngameHelp.Topic,
            'order': 0,
            'children': {
                'Buildings_Infrastructure': {
                    'type': IngameHelp.Group,
                    'order': 0,
                    'children': {// will be filled later
                    }
                },
                'Buildings_Military': {
                    'type': IngameHelp.Group,
                    'order': 1,
                    'children': {// will be filled later
                    }
                },
                'Buildings_Resources': {
                    'type': IngameHelp.Group,
                    'order': 2,
                    'children': {// will be filled later
                    }
                }
            }
        },
        'Troops': {
            'type': IngameHelp.Topic,
            'order': 1,
            'children': {
                'Troops_Romans': {
                    'type': IngameHelp.Group,
                    'order': 0,
                    'children': {// will be filled later
                    }
                },
                'Troops_Teutons': {
                    'type': IngameHelp.Group,
                    'order': 1,
                    'children': {// will be filled later
                    }
                },
                'Troops_Gauls': {
                    'type': IngameHelp.Group,
                    'order': 2,
                    'children': {// will be filled later
                    }
                }
            }
        },
        'Village': {
            'order': 2,
            'type': IngameHelp.Topic,
            'children': {
                'Village_Rubble': {
                    'type': IngameHelp.View,
                    'order': 0
                },
                'Village_ProtectingYourself': {
                    'type': IngameHelp.View,
                    'order': 1
                },
                'Village_Research': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083678',
                    'kbArticleLang': 'en',
                    'order': 2
                },
                'Village_ExpansionRequirements': {
                    'type': IngameHelp.View,
                    'order': 3
                },
                'Village_Cities': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000080263',
                    'kbArticleLang': 'en',
                    'order': 4
                },
                'Village_Relocation': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000053606',
                    'order': 5
                }
            }
        },
        'Robbers': {
            'type': IngameHelp.Topic,
            'order': 3,
            'children': {
                'Robbers_RobberCamps': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083381',
                    'kbArticleLang': 'en',
                    'order': 0
                },
                'Robbers_RobberHideouts': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083381',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'Robbers_StolenGoodsAndTreasures': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083383',
                    'kbArticleLang': 'en',
                    'order': 2
                }
            }
        },
        'Kingdom': {
            'type': IngameHelp.Topic,
            'order': 4,
            'children': {
                'Kingdom_MapAndDetailView': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082990',
                    'kbArticleLang': 'en',
                    'order': 0
                },
                'Kingdom_Tributes': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083383',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'Kingdom_Influence': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000081939',
                    'kbArticleLang': 'en',
                    'order': 2
                },
                'Kingdom_Invitations': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000081939',
                    'kbArticleLang': 'en',
                    'order': 3
                },
                'Kingdom_Dukes': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082523',
                    'kbArticleLang': 'en',
                    'order': 4
                },
                'Kingdom_Unions': {
                    'type': IngameHelp.View,
                    'order': 5
                }
            }
        },
        'Hero': {
            'type': IngameHelp.Topic,
            'order': 5,
            'children': {
                'Hero_Adventures': {
                    'type': IngameHelp.View,
                    'order': 0
                },
                'Hero_Consumables': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000081996',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'Hero_Equipment': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082005',
                    'kbArticleLang': 'en',
                    'order': 2
                },
                'Hero_Auctions': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000081640',
                    'kbArticleLang': 'en',
                    'order': 3
                },
                'Hero_HeroProduction': {
                    'type': IngameHelp.View,
                    'order': 4
                },
                'Hero_Attributes': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082914',
                    'kbArticleLang': 'en',
                    'order': 5
                },
                'Hero_CapturingAnimals': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083361',
                    'kbArticleLang': 'en',
                    'order': 6
                },
                'Hero_Resurrection': {
                    'type': IngameHelp.View,
                    'order': 7
                }
            }
        },
        'Oases': {
            'type': IngameHelp.Topic,
            'order': 7,
            'children': {
                'Oases_WildOases': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082954',
                    'kbArticleLang': 'en',
                    'order': 0
                },
                'Oases_AssignOasis': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082954',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'Oases_TroopsInOases': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000082954',
                    'kbArticleLang': 'en',
                    'order': 2
                }
            }
        },
        'Trading': {
            'type': IngameHelp.Topic,
            'order': 8,
            'children': {
                'Trading_TradingResources': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000052606',
                    'order': 0
                },
                'Trading_OfferingResources': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000052606',
                    'order': 1
                },
                'Trading_SendingResources': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000052606',
                    'order': 2
                },
                'Trading_TradeRoutes': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000052606',
                    'order': 3
                }
            }
        },
        'Progress': {
            'type': IngameHelp.Topic,
            'order': 9,
            'children': {
                'Progress_BeginnerProtection': {
                    'type': IngameHelp.View,
                    'order': 0
                },
                'Progress_Achievements': {
                    'type': IngameHelp.View,
                    'order': 1,
                    'featureFlag': 'achievements'
                },
                'Progress_DailyQuests': {
                    'type': IngameHelp.View,
                    'order': 2
                },
                'Progress_Prestige': {
                    'type': IngameHelp.View,
                    'order': 3,
                    'featureFlag': 'prestige'
                }
            }
        },
        'MilitaryAndDiplomacy': {
            'type': IngameHelp.Topic,
            'order': 10,
            'children': {
                'MilitaryAndDiplomacy_AttackTypes': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083384',
                    'kbArticleLang': 'en',
                    'order': 0
                },
                'MilitaryAndDiplomacy_SupportOtherPlayers': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083384',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'MilitaryAndDiplomacy_StrategicMap': {
                    'type': IngameHelp.View,
                    'order': 2
                },
                'MilitaryAndDiplomacy_SecretSocieties': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000083382',
                    'kbArticleLang': 'en',
                    'order': 3
                },
                'MilitaryAndDiplomacy_VictoryPoints': {
                    'type': IngameHelp.View,
                    'order': 4
                },
                'MilitaryAndDiplomacy_WonderOfTheWorld': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000080454',
                    'kbArticleLang': 'en',
                    'order': 5
                },
                'MilitaryAndDiplomacy_FarmLists': {
                    'type': IngameHelp.View,
                    'order': 6
                },
                'MilitaryAndDiplomacy_Conquering': {
                    'type': IngameHelp.View,
                    'order': 7
                },
                'MilitaryAndDiplomacy_Halloween': {
                    'type': IngameHelp.View,
                    'order': 8,
                    'specialRule': 'halloween'
                }
            }
        },
        'Premium': {
            'type': IngameHelp.Topic,
            'order': 11,
            'children': {
                'Premium_CardGame': {
                    'type': IngameHelp.View,
                    'order': 0
                },
                'Premium_RuntimeFeatures': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000078806',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'Premium_InstantFeatures': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000078806',
                    'kbArticleLang': 'en',
                    'order': 2
                },
                'Premium_InviteAFriend': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000084557',
                    'kbArticleLang': 'en',
                    'order': 3
                },
                'Premium_MasterBuilder': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000084036',
                    'kbArticleLang': 'en',
                    'order': 4
                }
            }
        },
        'AccountSystem': {
            'type': IngameHelp.Topic,
            'order': 12,
            'children': {
                'AccountSystem_AccountAndAvatars': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000070093',
                    'order': 0
                },
                'AccountSystem_DualsAndSitters': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000081450',
                    'kbArticleLang': 'en',
                    'order': 1
                },
                'AccountSystem_GoldTransfer': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000053898',
                    'order': 2
                },
                'AccountSystem_VacationMode': {
                    'type': IngameHelp.View,
                    'knowledgeBase': '7000057823',
                    'order': 3
                }
            }
        }
    };

    //The sort order the buildings will appear in the navigation list
    var buildingsOrder = {
        1: [//Infrastructure
        Building.TYPE.MAIN_BUILDING, Building.TYPE.WAREHOUSE, Building.TYPE.GRANARY, Building.TYPE.CRANNY, Building.TYPE.MARKET, Building.TYPE.EMBASSY, Building.TYPE.RESIDENCE, Building.TYPE.PALACE, Building.TYPE.TOWN_HALL, Building.TYPE.TREASURY, Building.TYPE.HIDDEN_TREASURY, Building.TYPE.STONEMASON, Building.TYPE.TRADE_OFFICE, Building.TYPE.WONDER_OF_WORLD, Building.TYPE.GREAT_WAREHOUSE, Building.TYPE.GREAT_GRANARY],
        2: [//Military
        Building.TYPE.RALLY_POINT, Building.TYPE.BARRACKS, Building.TYPE.STABLE, Building.TYPE.WORKSHOP, Building.TYPE.ACADEMY, Building.TYPE.BLACKSMITH, Building.TYPE.HEALING_TENT, Building.TYPE.TRAPPER, Building.TYPE.CITY_WALL, // roman wall
        Building.TYPE.EARTH_WALL, // teuton wall
        Building.TYPE.PALLISADE, // gaul wall
        Building.TYPE.NATAR_CITY_WALL, // natar wall
        Building.TYPE.MOAT, Building.TYPE.TOURNAMENT_SQUARE, Building.TYPE.HORSE_DRINKING_TROUGH, Building.TYPE.BREWERY, Building.TYPE.TEAHOUSE, Building.TYPE.GREAT_BARRACKS, Building.TYPE.GREAT_STABLE],
        3: [//Resources
        Building.TYPE.WOOD, Building.TYPE.CLAY, Building.TYPE.IRON, Building.TYPE.CROP, Building.TYPE.SAWMILL, Building.TYPE.CLAY_BAKERY, Building.TYPE.IRON_FOUNDRY, Building.TYPE.MILL, Building.TYPE.BAKERY]
    };

    function getSortOrder(category, buildingType) {

        if (typeof (buildingsOrder[category]) !== 'undefined' && typeof (buildingsOrder[category].indexOf(buildingType)) !== 'undefined') {
            return buildingsOrder[category].indexOf(buildingType);
        }
        return 0;
    }

    function enabledElements(children) {
        // removes disabled features' from help structure,
        // also removes category if it contains 0 children
        var totalActiveChildren = 0;
        for (var childId in children) {
            if (children.hasOwnProperty(childId)) {
                if ((children[childId]['featureFlag'] && !Travian.Config['features'][children[childId]['featureFlag']]) || (children[childId]['specialRule'] && !Travian.Config['specialRules'][children[childId]['specialRule']])) {
                    delete children[childId];
                } else {
                    totalActiveChildren++;
                    if (typeof (children[childId]['children']) != 'undefined') {
                        var actualChildren = enabledElements(children[childId]['children']);
                        if (actualChildren) {
                            children[childId]['children'] = actualChildren;
                        } else {
                            delete children[childId];
                        }
                    }
                }
            }
        }
        if (!totalActiveChildren) {
            return null;
        }
        return children;
    }

    function loadBuildings() {
        for (var buildingType in Travian.Config['buildingConfig']) {
            if ((buildingType == Building.TYPE.BREWERY) && (Travian.Config['teahouse'] === "true" || Travian.Config['teahouse'] === true)) {
                continue;
            }
            if ((buildingType == Building.TYPE.TEAHOUSE) && (Travian.Config['teahouse'] === "false" || Travian.Config['teahouse'] === false)) {
                continue;
            }
            var data = angular.copy(Travian.Config['buildingConfig'][buildingType]);
            data["descriptionParam"] = Building.getDescriptionParamByType(buildingType);

            var building = {
                'type': IngameHelp.Building,
                'knowledgeBase': '',
                'order': getSortOrder(data['category'], parseInt(buildingType)),
                'data': data
            };

            switch (building['data']['category']) {
            case Building.CATEGORY.INFRASTRUCTURE:
                config['Buildings']['children']['Buildings_Infrastructure']['children']['Buildings_Infrastructure_' + buildingType] = building;
                break;
            case Building.CATEGORY.MILITARY:
                config['Buildings']['children']['Buildings_Military']['children']['Buildings_Military_' + buildingType] = building;
                break;
            case Building.CATEGORY.RESOURCES:
                config['Buildings']['children']['Buildings_Resources']['children']['Buildings_Resources_' + buildingType] = building;
                break;
            }
        }
    }

    function loadUnits() {
        for (var unitId in Travian.Config['troopConfig']) {
            var data = angular.copy(Travian.Config['troopConfig'][unitId]);
            data['time'] = Math.ceil(data['time'] / Travian.Config['TG_SPEED']);

            var unit = {
                'type': IngameHelp.Unit,
                'knowledgeBase': '',
                'order': data['nr'],
                'data': data
            };

            switch (unit['data']['tribe']) {
            case Player.TRIBE.ROMAN:
                config['Troops']['children']['Troops_Romans']['children']['Troops_Romans_' + unit['data']['nr']] = unit;
                break;
            case Player.TRIBE.TEUTON:
                config['Troops']['children']['Troops_Teutons']['children']['Troops_Teutons_' + unit['data']['nr']] = unit;
                break;
            case Player.TRIBE.GAUL:
                if (unit['data']['nr'] != 79) {
                    // 79 troop type is Trap
                    config['Troops']['children']['Troops_Gauls']['children']['Troops_Gauls_' + unit['data']['nr']] = unit;
                }
                break;
            }
        }
    }

    this.getBuildingViewIdByType = function(type) {

        for (var category in config['Buildings']['children']) {
            if (typeof (config['Buildings']['children'][category]['children'][category + '_' + type]) != "undefined") {
                return category + '_' + type
            }
        }

    }
    ;

    this.getItemViewIdByItemIdAndCategory = function(category, itemId) {
        var item = null;
        var tribe = null;
        if ("buildings" == category) {
            item = Travian.Config.buildingConfig[itemId];
            return this.getBuildingViewIdByType(item['buildingType']);
        } else if ("troops" == category) {
            item = Travian.Config['troopConfig'][itemId];
            tribe = Player.TRIBE_NAME[item['tribe']];
            var navitagtionLevel = category.ucfirst() + '_' + tribe.ucfirst() + 's';
            if (typeof (config[category.ucfirst()]['children'][navitagtionLevel]['children'][navitagtionLevel + '_' + item['nr']]) != "undefined") {
                return navitagtionLevel + '_' + item['nr'];
            }
        }
    }
    ;

    this.getRandomTopic = function() {
        var topicsToChooseFrom = Object.keys(config);
        topicsToChooseFrom.splice(topicsToChooseFrom.indexOf('Troops'), 1);
        topicsToChooseFrom.splice(topicsToChooseFrom.indexOf('Buildings'), 1);
        var topic = config[topicsToChooseFrom[Math.floor(Math.random() * topicsToChooseFrom.length)]];
        var childKeys = Object.keys(topic.children);
        return {
            'viewId': childKeys[childKeys.length * Math.random() << 0],
            'type': IngameHelp.View
        };
    }
    ;

    this.getParentForId = function(id, firstLevel) {
        var Ids = id.split('_');

        if (Ids.length <= 1) {
            return false;
        }

        var parent = config;
        var grandparents = null;
        var parentId = null;
        for (var i = 0; i < Ids.length - 1; i++) {
            if (parentId == null) {
                parentId = Ids[i];
            } else {
                parentId = parentId + '_' + Ids[i];
            }

            grandparents = parent;
            if (typeof parent[parentId] !== 'undefined') {
                parent = parent[parentId];
            } else {
                parent = parent['children'][parentId];
            }
        }
        if (firstLevel && parent['type'] == 'group') {
            return grandparents;
        }
        return parent;
    }
    ;

    this.getById = function(id) {
        var Ids = id.split('_');

        if (Ids.length < 1 || id == 'index') {
            return config;
        }
        var element = config;
        var parentId = null;
        for (var i = 0; i < Ids.length; i++) {
            if (parentId == null) {
                parentId = Ids[i];
            } else {
                parentId = parentId + '_' + Ids[i];
            }
            if (typeof element[parentId] !== 'undefined') {
                element = element[parentId];
            } else {
                if ((element['children'] !== undefined) && (element['children'][parentId] !== undefined)) {
                    element = element['children'][parentId];
                } else {
                    return null;
                }
            }
        }

        return element;
    }
    ;

    loadBuildings();
    loadUnits();
    //leave only enabled features' pages after all pages were loaded
    config = enabledElements(config);
}

IngameHelp.Index = 'index';
IngameHelp.Topic = 'topic';
IngameHelp.View = 'view';
IngameHelp.Group = 'group';
IngameHelp.Building = 'building';
IngameHelp.Unit = 'unit';
/**
 * Kingdom Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['Kingdom'] = function Kingdom() {
    this.defaultData = {
        'groupId': 0,
        'tag': '',
        'creationTime': 0,
        'kingdomType': 0,
        'members': [],
        'description': {
            'publicDescription': '',
            'internalDescription': ''
        },
        'diplomacy': {
            'treaties': [],
            'ownOffers': [],
            'foreignOffers': []
        }
    };

    this.data = {};

    this.sortMembers = function(a, b) {
        if (parseInt(a['population']) > parseInt(b['population'])) {
            return -1;
        }
        if (parseInt(a['population']) < parseInt(b['population'])) {
            return 1;
        }
        return 0;
    }
    ;

    this.set = function(data) {
        data.members.sort(this.sortMembers);
        this.parent.set.call(this, data, false);
    }
    ;

    this.getKing = function() {
        for (var i = 0; i < this.data['members'].length; i++) {
            if (this.data['members'][i]['kingdomRole'] == Player.KINGDOM_ROLE_KING) {
                return this.data['members'][i];
            }
        }
        return null;
    }
    ;

    this.getKingId = function() {
        var king = this.getKing();
        if (king == null) {
            return 0;
        }
        return king['playerId'];
    }
    ;

    this.getViceKing = function() {
        for (var i = 0; i < this.data['members'].length; i++) {
            if (this.data['members'][i]['kingdomRole'] == Player.KINGDOM_ROLE_VICEKING) {
                return this.data['members'][i];
            }
        }
        return null;
    }
    ;

    this.getViceKingId = function() {
        var viceKing = this.getViceKing();
        if (viceKing == null) {
            return 0;
        }
        return viceKing['playerId'];
    }
    ;

    this.getDukes = function() {
        var dukes = [];
        for (var i = 0; i < this.data['members'].length; i++) {
            if (this.data['members'][i]['kingdomRole'] == Player.KINGDOM_ROLE_DUKE) {
                dukes.push(this.data['members'][i]);
            }
        }
        return dukes;
    }
    ;

    this.getDukeIds = function() {
        return this.getDukes().map(function(duke) {
            return duke['playerId']
        });
    }
    ;

    this.getGovernors = function() {
        var governors = [];
        var rank = 0;
        for (var i = 0; i < this.data['members'].length; i++) {
            var member = this.data['members'][i];
            if (member['kingdomRole'] == Player.KINGDOM_ROLE_GOVERNOR) {
                member['rank'] = rank++;
                governors.push(member);
            }
        }
        return governors;
    }
    ;

    this.set(this.defaultData);

    /**
	 * Saves the internal kingdom stats: top10Attacker, Defender, Climber
	 * @param data
	 */
    this.setStats = function(data) {
        this['stats'] = data;
    }
    ;

    var that = this;

    /**
	 * Returns a object of two lists of kingdom IDs.
	 * A list of friendly (has a NAP or BND with) and a list of war
	 */
    this.getTreaties = function() {
        var treaties = {
            0: {},
            1: {},
            2: {}
        };
        for (var i = 0; i < that.data['diplomacy']['treaties'].length; i++) {
            var t = that.data['diplomacy']['treaties'][i];
            treaties[t['type']][t['otherKingdomId']] = true;
        }
        return treaties;
    }
    ;

    this.hasTreatyWith = function(otherKingdomId, treatyType) {
        if (!treatyType) {
            treatyType = Kingdom.BND;
        }
        return this.getTreaties()[treatyType][otherKingdomId] === true;
    }
    ;

    this.isUnited = function() {
        return (that.data['kingdomType'] == Kingdom.TYPE_UNITED);
    }
    ;

    this.canUnify = function() {
        return (!that.isUnited() && ((Date.now() / 1000) - that.data['creationTime']) >= Travian.Config['KingdomConfig']['unionMinAge']);
    }
    ;

    this.name = 'Kingdom';
}

Kingdom.TYPE_NORMAL = 0;
Kingdom.TYPE_UNITED = 1;

Kingdom.RIGHT_GOVERNOR = 0;
Kingdom.RIGHT_KING = 1;
Kingdom.RIGHT_DUKE = 2;
Kingdom.RIGHT_VICEKING = 3;

Kingdom.NAP = 0;
Kingdom.BND = 1;
Kingdom.WAR = 2;

Kingdom.ROLE_STRING = {
    0: 'governor',
    1: 'king',
    2: 'duke',
    3: 'viceking'
};

Kingdom.prototype = new AbstractModel();
Cache.register(Kingdom);
;window['KingdomFightvalues'] = function KingdomFightvalues($statsId) {
    this.defaultData = {
        'statsId': 0,
        'groupId': 0,
        'type': 0,
        'd1': 0,
        'd2': 0,
        'd3': 0,
        'd4': 0,
        'd5': 0,
        'd6': 0,
        'd7': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'kingdomFightValues';
}

KingdomFightvalues.TYPE_OFF_STRENGTH = 1;
KingdomFightvalues.TYPE_DEF_STRENGTH = 2;
KingdomFightvalues.TYPE_OFF_POINTS = 3;
KingdomFightvalues.TYPE_DEF_POINTS = 4;

KingdomFightvalues.prototype = new AbstractModel();
Cache.register(KingdomFightvalues);

/**
 * @constructor
 * @extends {AbstractModel}
 */
;window['KingdomMemberlist'] = function KingdomMemberlist() {
    this.defaultData = {
        'id': 0,
        'members': []
    };

    this.data = {};
    this.set(this.defaultData);
    this.set = function(data) {
        PlayerKingdomMapper.removeMemberships(this.data['members']);
        this.parent.set.call(this, data, false);
        PlayerKingdomMapper.setMemberships(data.id, angular.copy(this.data['members']));
    }
    ;

    this.name = 'KingdomMemberlist';
}
KingdomMemberlist.prototype = new AbstractModel();
Cache.register(KingdomMemberlist);

;window['KingdomStats'] = function KingdomStats() {
    this.defaultData = {
        'kingdomId': 0,
        'treasuresLatestWeek': 0,
        'treasuresCurrent': 0,
        'victoryPointsLatestWeek': 0,
        'victoryPointsCurrent': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'KingdomStats';
}

KingdomStats.prototype = new AbstractModel();
Cache.register(KingdomStats);

;window['KingdomStatsFightStrength'] = function KingdomStatsFightStrength(kingdomId) {

    this.defaultData = {
        'strength': [],
        'fightingPoints': []
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'KingdomStatsFightStrength';
}
KingdomStatsFightStrength.prototype = new AbstractModel();
Cache.register(KingdomStatsFightStrength);
/**
 * MapDetails Model
 *
 * @constructor
 * @extends {AbstractData}
 * @param x
 * @param y
 */
;window['MapDetails'] = function MapDetails(id) {
    this.defaultData = {
        'x': null,
        'y:': null,
        'reports': null,
        'troops': null,
        'isOasis': null,
        'hasVillage': null,
        'isWonder': false,
        'resType': null,
        'oasisBonus': null,
        'playerId': null
    };

    this.data = {};

    this.filteredTroops = [];

    this.set = function(data) {
        data = data || {};

        this.parent.set.call(this, data, false);

        this.filteredTroops = [];

        if (this.data.npcInfo) {
            //Robber villages have npcInfo field with necessary data
            //For consistency we pull out troops and tribe info from npcInfo
            this.data.troops = this.data.npcInfo.troops;
            this.data.tribeId = this.data.npcInfo.tribeId;
        }

        if (this.data.troops != null) {
            for (var troopNr in this.data.troops.units) {
                if (this.data.troops.units[troopNr] > 0) {
                    this.filteredTroops.push({
                        'nr': troopNr,
                        'amount': this.data.troops.units[troopNr]
                    });
                }
            }
        }
    }
    ;

    this.set(this.defaultData);

    this.name = 'MapDetails';
}

MapDetails.prototype = new AbstractModel();
Cache.register(MapDetails, 'MapDetails:', 60);

/**
 * Marker Model
 *
 * @constructor
 * @extends {AbstractData}
 */
;window['Marker'] = function Marker() {
    this.defaultData = {
        'id': 0,
        'owner': 0,
        'ownerId': 0,
        'creatorPlayerId': 0,
        'type': 0,
        'targetId': 0,
        'color': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'Marker';
}

Marker.OWNER_PLAYER = 1;
Marker.OWNER_KINGDOM = 2;

Marker.TYPE_PLAYER = 1;
Marker.TYPE_KINGDOM = 2;
Marker.TYPE_COORDINATES = 3;
Marker.TYPE_TROOP_MOVEMENT = 4;
Marker.TYPE_KING_VILLAGE = 5;

Marker.editTypes = {
    TYPE_EDIT: 1,
    TYPE_DELETE: 2,
    TYPE_CREATE: 3
};

Marker.COLOR_BLUE = {
    index: 1,
    name: '01',
    cssStyle: {
        'background-color': '#3399ff'
    },
    colorRGBValues: '51, 153, 255'
};
Marker.COLOR_YELLOW = {
    index: 2,
    name: '02',
    cssStyle: {
        'background-color': '#ff9900'
    },
    colorRGBValues: '255, 153, 0'
};
Marker.COLOR_BROWN = {
    index: 3,
    name: '03',
    cssStyle: {
        'background-color': '#996633'
    },
    colorRGBValues: '153, 102, 51'
};
Marker.COLOR_OWN = {
    index: 4,
    name: '04',
    cssStyle: {
        'background-color': '#ffe500'
    },
    colorRGBValues: '255, 229, 0'
};
Marker.COLOR_TEAL = {
    index: 5,
    name: '05',
    cssStyle: {
        'background-color': '#66ffff'
    },
    colorRGBValues: '102, 255, 255'
};
Marker.COLOR_DARK_GREEN = {
    index: 6,
    name: '06',
    cssStyle: {
        'background-color': '#006633'
    },
    colorRGBValues: '0, 102, 51'
};
Marker.COLOR_LIGHT_GREEN = {
    index: 7,
    name: '07',
    cssStyle: {
        'background-color': '#66ff66'
    },
    colorRGBValues: '102, 255, 102'
};
Marker.COLOR_DARK_BLUE = {
    index: 8,
    name: '08',
    cssStyle: {
        'background-color': '#3366cc'
    },
    colorRGBValues: '51, 102, 204'
};
Marker.COLOR_ALLIANCE = {
    index: 9,
    name: '09',
    cssStyle: {
        'background-color': '#3333cc'
    },
    colorRGBValues: '51, 51, 204'
};
Marker.COLOR_PURPLE = {
    index: 10,
    name: '10',
    cssStyle: {
        'background-color': '#993399'
    },
    colorRGBValues: '153, 51, 153'
};
Marker.COLOR_PINK = {
    index: 11,
    name: '11',
    cssStyle: {
        'background-color': '#ff66ff'
    },
    colorRGBValues: '255, 102, 255'
};
Marker.COLOR_RED = {
    index: 12,
    name: '12',
    cssStyle: {
        'background-color': '#cc3333'
    },
    colorRGBValues: '204, 41, 41'
};
Marker.COLOR_ENEMY = {
    index: 13,
    name: '13',
    cssStyle: {
        'background-color': '#cc3333'
    },
    colorRGBValues: '204, 41, 41'
};
Marker.COLOR_NEUTRAL = {
    index: 15,
    name: '15',
    cssStyle: {
        'background-color': '#daeacd'
    },
    colorRGBValues: '218, 234, 205'
};
Marker.TREATY_COLOR_NAP = {
    index: 16,
    name: '16',
    cssStyle: {
        'background-color': '#00ffff'
    },
    colorRGBValues: '0, 255, 255'
};
Marker.TREATY_COLOR_BND = {
    index: 17,
    name: '17',
    cssStyle: {
        'background-color': '#00ff00'
    },
    colorRGBValues: '0, 255, 0'
};

Marker.COLORS = {
    1: Marker.COLOR_BLUE,
    2: Marker.COLOR_YELLOW,
    3: Marker.COLOR_BROWN,
    4: Marker.COLOR_OWN,
    5: Marker.COLOR_TEAL,
    6: Marker.COLOR_DARK_GREEN,
    7: Marker.COLOR_LIGHT_GREEN,
    8: Marker.COLOR_DARK_BLUE,
    9: Marker.COLOR_ALLIANCE,
    10: Marker.COLOR_PURPLE,
    11: Marker.COLOR_PINK,
    12: Marker.COLOR_RED,
    13: Marker.COLOR_ENEMY,
    15: Marker.COLOR_NEUTRAL,
    16: Marker.TREATY_COLOR_NAP,
    17: Marker.TREATY_COLOR_BND
};

Marker.VILLAGE_OWN = 'playerMarker/playerMarker_04';
Marker.VILLAGE_ALLIANCE = 'allianceMarker/allianceMarker_09';
Marker.VILLAGE_GOVERNOR = 'allianceMarker/allianceMarker_14';

Marker.prototype = new AbstractModel();
Cache.register(Marker, 'MapMarker:');
/**
 * Medal Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Medal'] = function Medal() {
    this.defaultData = {
        'medalId': 0,
        'type': 0,
        'week': 0,
        'playerId': 0,
        'rank': 0,
        'time': 0,
        'prestige': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Medal';
}

Medal.prototype = new AbstractModel();
Cache.register(Medal);

Medal.TYPE_CLIMBER = 1;
Medal.TYPE_ATTACKER = 2;
Medal.TYPE_DEFENDER = 3;
Medal.TYPE_ROBBER = 4;
Medal.TypeString = {
    1: 'climber',
    2: 'attacker',
    3: 'defender',
    4: 'robber'
};
/**
 * Merchants Model
 *
 * @constructor
 * @extends {AbstractData}
 */
;window['Merchants'] = function Merchants() {
    this.defaultData = {
        'villageId': 0,
        'max': 0,
        'inOffers': 0,
        'inTransport': 0,
        'carry': 0,
        'speed': 0,
        'merchantsFree': 0,
        'maxCapacity': 0
    };

    this.data = {};
    this.set = function(data) {
        this.parent.set.call(this, data, false);
        this.data['merchantsFree'] = Math.max(0, (this.data['max'] - this.data['inOffers'] - this.data['inTransport']));
        this.data['maxCapacity'] = this.data['carry'] * this.data['merchantsFree'];
    }
    ;
    this.set(this.defaultData);
    this.name = 'Merchants';
}
Merchants.getTributeCollectorSpeed = function(tribeId) {
    "use strict";
    return (Travian.Config['merchantSpeed'][tribeId] / 3600) * Travian.Config['TG_SPEED'];
}
;
Merchants.prototype = new AbstractModel();
Cache.register(Merchants);
/**
 * Notepad Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Notepad'] = function Notepad() {
    this.defaultData = {
        'id': 0,
        'positionX': 50,
        'positionY': 50,
        'sizeX': 0,
        'sizeY': 0,
        'text': ""
    };

    this['inEditor'] = false;

    this.data = {};

    this.style = {
        'top': 0,
        'transform': 'translate3d(0,0,0)',
        'width': 0,
        'height': 0,
        'zIndex': 1000
    };
    this.style[getReadingDirectionFrom()] = 0;
    this.editText = '';

    this.set = function(data) {
        this.parent.set.call(this, data);
        // Set the initial size according to the window size
        if (data['sizeX'] == 0) {
            this.data['sizeX'] = Math.floor(window.innerWidth / (100 / 20));
        }
        if (data['sizeY'] == 0) {
            this.data['sizeY'] = Math.floor(window.innerHeight / (100 / 15));
        }
        this.style[getReadingDirectionFrom()] = this.data['positionX'] + "%";
        this.style['top'] = this.data['positionY'] + "%";
        this.style['width'] = this.data['sizeX'] + "px";
        this.style['height'] = this.data['sizeY'] + "px";
        if (!this['inEditor']) {
            this.editText = this.data['text'];
        }
        if (Notepad.setNextToEdit) {
            Notepad.setNextToEdit = false;
            this['inEditor'] = true;
        }
    }
    ;

    this.persist = function() {
        var data = {
            'newSettings': {}
        };
        for (var key in this.defaultData) {
            data['newSettings'][key] = this.data[key];
        }
        Travian.request('player/changeNote', data);
    }
    ;

    this.delete = function() {
        var data = {
            'id': this.data['id']
        };
        Travian.request('player/removeNote', data);
    }
    ;

    this.requestNewNote = function() {
        var data = {
            'x': this.data['positionX'],
            'y': this.data['positionY']
        };
        Notepad.setNextToEdit = true;
        Travian.request('player/addNote', data);
    }
    ;

    this.set(this.defaultData);

    this.name = 'Notepad';
}

Notepad.setNextToEdit = false;

Notepad.prototype = new AbstractModel();
Cache.register(Notepad);
/**
 * Notifications Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Notifications'] = function Notifications() {
    this.defaultData = {};

    this.data = {};

    this.set = function(data) {
        data.icon = Notifications.getNotificationIcon(data.type, 'medium');
        this.parent.set.call(this, data, false);
    }
    ;

    this.name = 'Notifications';
}

Notifications.collectionUpdatedFct = function(newNotifications) {
    Travian.rootScope.$broadcast('notificationReceived', newNotifications);
}
;

Notifications.TYPE_FLASH = 'flashNotification';
Notifications.TYPE_NORMAL = '';
Notifications.TYPE_TIMED = 'timed';
Notifications.TYPE_CHAT = 'chatNotification';
Notifications.TYPE_IN_GAME_HELP = 'inGameHelp';
Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES = 1;
Notifications.REPORT_ATTACKER_WON_WITH_LOSSES = 2;
Notifications.REPORT_ATTACKER_LOST = 3;
Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES = 4;
Notifications.REPORT_DEFENDER_WON_WITH_LOSSES = 5;
Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES = 6;
Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES = 7;
Notifications.REPORT_SUPPORT_ARRIVED = 8;
Notifications.REPORT_TRADE = 10;
Notifications.REPORT_TRADE_WOOD = 11;
Notifications.REPORT_TRADE_CLAY = 12;
Notifications.REPORT_TRADE_IRON = 13;
Notifications.REPORT_TRADE_CROP = 14;
Notifications.REPORT_SPY_SUCCESS_UNDETECTED = 15;
Notifications.REPORT_SPY_SUCCESS_DETECTED = 16;
Notifications.REPORT_SPY_FAILURE = 17;
Notifications.REPORT_SPY_DEFENDED = 18;
Notifications.REPORT_SPY_NOT_DEFENDED = 19;
Notifications.REPORT_CAPTURED_ANIMALS = 20;
Notifications.REPORT_ADVENTURE = 21;
Notifications.REPORT_WORLD_PEACE = 22;
Notifications.REPORT_PRESTIGE = 23;
Notifications.TRIBUTE_COLLECTED = 31;
Notifications.TROOPS_SEND = 32;
Notifications.CONSTRUCTION_STARTED = 33;
Notifications.TRADER_STARTED = 34;
Notifications.TROOPS_RETURNED = 36;
Notifications.TROOPS_RELEASED = 37;
Notifications.TROOPS_DISBANDED = 38;
Notifications.BUILDING_FINISHED = 39;
Notifications.BUILDING_COMPLETELY_DESTROYED = 41;
Notifications.UNIT_RESEARCH_COMPLETED = 42;
Notifications.NEW_VILLAGE_SETTLED = 43;
Notifications.ATTACK_VILLAGE_STARTED = 44;
Notifications.AUCTION_OVERBID = 46;
Notifications.AUCTION_WON = 47;
Notifications.FRIEND_REQUEST_RECEIVED = 48;
Notifications.SOCIETY_INVITATION_RECEIVED = 49;
Notifications.TRADER_SENT = 50;
Notifications.CELEBRATION_STARTED = 51;
Notifications.CELEBRATION_ENDED = 52;
Notifications.TROOPS_RECRUITING_STARTED = 53;
Notifications.UNIT_RESEARCH_STARTED = 54;
Notifications.TROOPS_SUPPORT_SEND_HOME = 55;
Notifications.TROOPS_INCOMING_FOREIGN_SUPPORT = 57;
Notifications.PLAYER_IS_ATTACKED = 58;
Notifications.PLAYER_IS_ONLINE = 59;
Notifications.REPORT_SHARED_OWN = 60;
Notifications.REPORT_SHARED_KINGDOM = 61;
Notifications.REPORT_SHARED_SOCIETIES = 63;
Notifications.REPORT_SHARED = 64;
//we may decide in the future to display a single unified icon for all shared reports
Notifications.KINGDOM_CHANGED = 66;
Notifications.REQUEST_SENT = 67;
Notifications.KING_REQUEST_RECEIVED = 68;
Notifications.TROOPS_RELEASED_OTHER_TROOPS = 69;
Notifications.TIMER_CORONATION = 72;
Notifications.TIMER_NOOB_PROTECTION = 73;
Notifications.TIMER_DELETION = 74;
Notifications.TIMER_STARVATION_DEACTIVATED = 75;
Notifications.TIMER_WORLD_PEACE = 76;
Notifications.TIMER_GOLD_PROMOTION = 78;
Notifications.TIMER_PLUS_RUNS_OUT = 79;
Notifications.TIMER_RES_BONUS_RUNS_OUT = 80;
Notifications.TIMER_CROP_BONUS_RUNS_OUT = 81;
Notifications.SYSTEM_MESSAGE = 82;
Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD = 86;
Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD = 87;
Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD = 88;
Notifications.RES_BONUS_ENDS = 89;
Notifications.CROP_BONUS_ENDS = 90;
Notifications.PLUS_BONUS_ENDS = 91;
Notifications.KINGDOM_OASIS_LOST = 92;
Notifications.KINGDOM_OASIS_WON = 93;
Notifications.OASIS_BONUS_CHANGED = 94;
Notifications.TIMER_NATAR_SPIES_ATTACK = 95;
Notifications.HELP_CENTER_MESSAGE_RECEIVED = 97;
Notifications.TIMER_WORLD_PEACE_TO_BE_ACTIVATED = 98;
Notifications.TIMER_WORLD_PEACE_DISABLE_ONLY_STARVATION = 99;
Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE = 100;
Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE_SOON = 101;
Notifications.NEW_ROBBER_CAMPS = 102;
Notifications.GLOBAL_WORLD_ENDED = 104;
Notifications.DUKE_REQUEST_RECEIVED = 105;
Notifications.DUKE_REQUEST_DECLINED = 106;
Notifications.DUKE_REQUEST_ACCEPTED = 107;
Notifications.DUKE_ABDICATED = 108;
Notifications.DUKE_DISMISSED = 109;
Notifications.ADDED_CARDGAME_FREE_ROLL = 111;
Notifications.COOP_PACKAGE_GRANTED = 112;
Notifications.INVITATION_EMAIL_SENT = 113;
Notifications.REFERRAL_REWARD_CAN_COLLECT = 114;
Notifications.REPORT_FARMLIST_RAID = 115;
Notifications.ACHIEVEMENT = 116;
Notifications.REPORT_VACATION = 117;
Notifications.REPORT_FARMLIST_COMPLETED_WITHOUT_LOSSES = 118;
Notifications.REPORT_FARMLIST_COMPLETED_WITH_LOSSES = 119;
Notifications.REPORT_FARMLIST_COMPLETED_WITH_FULL_LOSSES = 120;
Notifications.USED_ITEM_ARTWORK = 121;
Notifications.CELEBRATION_STARTED_POINTS_GAINED = 122;
Notifications.CELEBRATION_STARTED_IN_QUEUE = 123;
Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITHOUT_LOSSES = 124;
Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_LOSSES = 125;
Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_FULL_LOSSES = 126;
Notifications.FARMLIST_ADDED_VILLAGE = 127;
Notifications.FARMLIST_REMOVED_VILLAGE = 128;
Notifications.KINGDOM_CHANGED_KING = 129;
Notifications.CAN_INVITE_NEUTRAL_GOVERNOR = 130;
Notifications.TIMER_VACATION_ACTIVATION = 131;
Notifications.TIMER_VACATION_MODE = 132;
Notifications.TIMER_VACATION_BOOST = 133;
Notifications.PEACE_OFFER = 134;
Notifications.UNITED_KINGDOM_VICEKING_RESIGNS = 135;
Notifications.UNITED_KINGDOM_DISSOLVES = 136;
Notifications.UNION_REQUEST_RECEIVED = 137;
Notifications.KINGDOM_UNION_AVAILABLE_SOON = 138;
Notifications.KINGDOM_UNION_AVAILABLE = 139;
Notifications.KINGDOM_UNIFIED = 140;
Notifications.REPORT_RELOCATION = 141;
Notifications.ATTACK_WW_VILLAGE_STARTED = 142;
Notifications.RESERVED_RELOCATION = 143;
Notifications.RELOCATION_COOLDOWN = 144;
Notifications.GAINED_FIREWORKS = 145;
Notifications.PAYMENT_PURCHASE = 146;
Notifications.OBTAINED_ITEM = 147;
Notifications.SYSTEM_MESSAGE_ANNOUNCEMENT = 148;
Notifications.TIMER_HALLOWEEN_BOOST_RUNS_OUT = 149;
Notifications.HALLOWEEN_BOOST_ENDS = 150;
Notifications.AUTO_EXTEND_HALLOWEEN_BOOST_NOT_ENOUGH_GOLD = 151;
Notifications.ITEM_TIER_AVAILABLE = 152;
Notifications.TROOPS_HEALING_STARTED = 153;
Notifications.HEALING_TENT_FULL = 154;

Notifications.AUTO_OPEN = [Notifications.OBTAINED_ITEM];

Notifications.FIGHT_AND_SPY_REPORTS = [Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES, Notifications.REPORT_ATTACKER_WON_WITH_LOSSES, Notifications.REPORT_ATTACKER_LOST, Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES, Notifications.REPORT_DEFENDER_WON_WITH_LOSSES, Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES, Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES, Notifications.REPORT_SPY_SUCCESS_UNDETECTED, Notifications.REPORT_SPY_SUCCESS_DETECTED, Notifications.REPORT_SPY_FAILURE, Notifications.REPORT_SPY_DEFENDED, Notifications.REPORT_SPY_NOT_DEFENDED];

Notifications.TYPE_STRINGS = {};
Notifications.TYPE_STRINGS[Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES] = 'attackerWonWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_ATTACKER_WON_WITH_LOSSES] = 'attackerWonWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_ATTACKER_LOST] = 'attackerLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES] = 'defenderWonWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_WON_WITH_LOSSES] = 'defenderWonWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES] = 'defenderLostWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES] = 'defenderLostWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_SUCCESS_UNDETECTED] = 'spyAttackerWonWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_SUCCESS_DETECTED] = 'spyAttackerWonWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_FAILURE] = 'spyAttackerLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_DEFENDED] = 'spyDefenderWon';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_NOT_DEFENDED] = 'spyDefenderLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_ADVENTURE + '_won'] = 'adventureWon';
Notifications.TYPE_STRINGS[Notifications.REPORT_ADVENTURE + '_lost'] = 'adventureLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_CAPTURED_ANIMALS] = 'capturedAnimals';
Notifications.TYPE_STRINGS[Notifications.REPORT_SUPPORT_ARRIVED] = 'support';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE] = 'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_WOOD] = 'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_CLAY] = 'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_IRON] = 'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_CROP] = 'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_VACATION] = 'vacation';

Notifications.getNotificationIcon = function(notificationType, size) {
    if (size != 'small' && size != 'medium') {
        size = 'small';
    }

    var iconMapping = [];
    iconMapping[Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES] = 'movement_attack_' + size + '_flat_positive';
    iconMapping[Notifications.REPORT_ATTACKER_WON_WITH_LOSSES] = 'movement_attack_' + size + '_flat_uncertain';
    iconMapping[Notifications.REPORT_ATTACKER_LOST] = 'movement_attack_' + size + '_flat_negative';
    iconMapping[Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES] = 'movement_defend_' + size + '_flat_positive';
    iconMapping[Notifications.REPORT_DEFENDER_WON_WITH_LOSSES] = 'movement_defend_' + size + '_flat_uncertain';
    iconMapping[Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES] = 'movement_defend_' + size + '_flat_negative';
    iconMapping[Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES] = 'movement_defend_' + size + '_flat_neutral';
    iconMapping[Notifications.REPORT_SUPPORT_ARRIVED] = 'movement_support_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_TRADE] = 'movement_trade_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_TRADE_WOOD] = 'movement_trade_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_TRADE_CLAY] = 'movement_trade_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_TRADE_IRON] = 'movement_trade_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_TRADE_CROP] = 'movement_trade_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_SPY_SUCCESS_UNDETECTED] = 'movement_spyAttack_' + size + '_flat_positive';
    iconMapping[Notifications.REPORT_SPY_SUCCESS_DETECTED] = 'movement_spyAttack_' + size + '_flat_uncertain';
    iconMapping[Notifications.REPORT_SPY_FAILURE] = 'movement_spyAttack_' + size + '_flat_negative';
    iconMapping[Notifications.REPORT_SPY_DEFENDED] = 'movement_spyDefend_' + size + '_flat_positive';
    iconMapping[Notifications.REPORT_SPY_NOT_DEFENDED] = 'movement_spyDefend_' + size + '_flat_negative';
    iconMapping[Notifications.REPORT_CAPTURED_ANIMALS] = 'movement_capture_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_ADVENTURE] = 'movement_adventure_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_WORLD_PEACE] = 'movement_peace_' + size + '_flat_black';
    iconMapping[Notifications.AUCTION_OVERBID] = 'feature_auction_' + size + '_flat_negative';
    iconMapping[Notifications.AUCTION_WON] = 'feature_auction_' + size + '_flat_positive';
    iconMapping[Notifications.FRIEND_REQUEST_RECEIVED] = 'community_friend_' + size + '_flat_black';
    iconMapping[Notifications.SOCIETY_INVITATION_RECEIVED] = 'action_invite_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_SHARED_OWN] = 'notification_sharedPlayer_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_SHARED_KINGDOM] = 'notification_sharedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_SHARED_SOCIETIES] = 'notification_sharedSecretSociety_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_SHARED] = 'report_share_' + size + '_flat_black';
    iconMapping[Notifications.KINGDOM_CHANGED] = 'community_kingdom_' + size + '_flat_black';
    iconMapping[Notifications.KING_REQUEST_RECEIVED] = 'action_invite_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_CORONATION] = 'community_kingdom_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_NOOB_PROTECTION] = 'feature_beginnersProtection_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_DELETION] = 'notification_playerDeletion_' + size + '_flat_red';
    iconMapping[Notifications.TIMER_STARVATION_DEACTIVATED] = 'notification_starvation_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_WORLD_PEACE_DISABLE_ONLY_STARVATION] = 'notification_starvation_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_WORLD_PEACE] = 'movement_peace_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_GOLD_PROMOTION] = 'notification_goldPromotion_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_PLUS_RUNS_OUT] = 'notification_plus_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_RES_BONUS_RUNS_OUT] = 'notification_resourceBonus_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_CROP_BONUS_RUNS_OUT] = 'notification_cropBonus_' + size + '_flat_black';
    iconMapping[Notifications.SYSTEM_MESSAGE] = 'notification_systemMessage_' + size + '_flat_black';
    iconMapping[Notifications.SYSTEM_MESSAGE_ANNOUNCEMENT] = 'notification_systemMessageAnnounce_' + size + '_flat_black';
    iconMapping[Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD] = 'notification_resourceBonus_' + size + '_flat_black';
    iconMapping[Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD] = 'notification_cropBonus_' + size + '_flat_black';
    iconMapping[Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD] = 'notification_plus_' + size + '_flat_black';
    iconMapping[Notifications.RES_BONUS_ENDS] = 'notification_resourceBonus_' + size + '_flat_red';
    iconMapping[Notifications.CROP_BONUS_ENDS] = 'notification_cropBonus_' + size + '_flat_red';
    iconMapping[Notifications.PLUS_BONUS_ENDS] = 'notification_plus_' + size + '_flat_red';
    iconMapping[Notifications.KINGDOM_OASIS_LOST] = 'feature_oasis_' + size + '_flat_negative';
    iconMapping[Notifications.KINGDOM_OASIS_WON] = 'feature_oasis_' + size + '_flat_positive';
    iconMapping[Notifications.OASIS_BONUS_CHANGED] = 'feature_oasis_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_NATAR_SPIES_ATTACK] = 'feature_natars_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_WORLD_PEACE_TO_BE_ACTIVATED] = 'movement_peace_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_STARVATION_DEACTIVATED] = 'notification_starvation_' + size + '_flat_black';
    iconMapping[Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE] = 'unit_culturePoint_' + size + '_flat_black';
    iconMapping[Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE_SOON] = 'unit_culturePoint_' + size + '_flat_black';
    iconMapping[Notifications.NEW_ROBBER_CAMPS] = 'feature_robberCamp_' + size + '_flat_black';
    iconMapping[Notifications.GLOBAL_WORLD_ENDED] = 'feature_worldWonder_' + size + '_flat_black';
    iconMapping[Notifications.DUKE_REQUEST_RECEIVED] = 'community_kingdom_' + size + '_flat_positive';
    iconMapping[Notifications.DUKE_REQUEST_DECLINED] = 'notification_dukeDecline_' + size + '_flat_negative';
    iconMapping[Notifications.DUKE_REQUEST_ACCEPTED] = 'notification_dukeAccept_' + size + '_flat_positive';
    iconMapping[Notifications.DUKE_ABDICATED] = 'notification_dukeLeave_' + size + '_flat_negative';
    iconMapping[Notifications.DUKE_DISMISSED] = 'notification_dukeLeave_' + size + '_flat_red';
    iconMapping[Notifications.HELP_CENTER_MESSAGE_RECEIVED] = 'notification_helpCenter_' + size + '_flat_black';
    iconMapping[Notifications.ADDED_CARDGAME_FREE_ROLL] = 'cardGame_cardGame_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_PRESTIGE] = 'feature_prestige_' + size + '_flat_black';
    iconMapping[Notifications.COOP_PACKAGE_GRANTED] = 'notification_coopPackage_' + size + '_flat_black';
    iconMapping[Notifications.REFERRAL_REWARD_CAN_COLLECT] = 'action_invite_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_FARMLIST_RAID] = 'movement_attack_' + size + '_flat_uncertain';
    iconMapping[Notifications.ACHIEVEMENT] = 'feature_achievement_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_VACATION] = 'notification_vacation_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_FARMLIST_COMPLETED_WITHOUT_LOSSES] = 'farmlist_result_' + size + '_flat_positive';
    iconMapping[Notifications.REPORT_FARMLIST_COMPLETED_WITH_LOSSES] = 'farmlist_result_' + size + '_flat_uncertain';
    iconMapping[Notifications.REPORT_FARMLIST_COMPLETED_WITH_FULL_LOSSES] = 'farmlist_result_' + size + '_flat_negative';
    iconMapping[Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITHOUT_LOSSES] = 'farmlist_resultSingle_' + size + '_flat_positive';
    iconMapping[Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_LOSSES] = 'farmlist_resultSingle_' + size + '_flat_uncertain';
    iconMapping[Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_FULL_LOSSES] = 'farmlist_resultSingle_' + size + '_flat_negative';
    iconMapping[Notifications.KINGDOM_CHANGED_KING] = 'notification_changedKing_' + size + '_flat_uncertain';
    iconMapping[Notifications.CAN_INVITE_NEUTRAL_GOVERNOR] = 'notification_inviteGovernor_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_VACATION_ACTIVATION] = 'notification_vacation_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_VACATION_MODE] = 'notification_vacation_' + size + '_flat_black';
    iconMapping[Notifications.TIMER_VACATION_BOOST] = 'notification_vacation_' + size + '_flat_black';
    iconMapping[Notifications.PEACE_OFFER] = 'action_invite_' + size + '_flat_black';
    iconMapping[Notifications.UNITED_KINGDOM_VICEKING_RESIGNS] = 'notification_unitedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.UNITED_KINGDOM_DISSOLVES] = 'notification_unitedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.UNION_REQUEST_RECEIVED] = 'notification_unitedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.KINGDOM_UNION_AVAILABLE_SOON] = 'notification_unitedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.KINGDOM_UNION_AVAILABLE] = 'notification_unitedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.KINGDOM_UNIFIED] = 'notification_unitedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.REPORT_RELOCATION] = 'notification_sharedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.RESERVED_RELOCATION] = 'notification_sharedKingdom_' + size + '_flat_black';
    iconMapping[Notifications.RELOCATION_COOLDOWN] = 'notification_relocationCooldown_' + size + '_flat_black';
    iconMapping[Notifications.GAINED_FIREWORKS] = 'notification_fireworks_' + size + '_flat_black';
    iconMapping[Notifications.PAYMENT_PURCHASE] = 'notification_paymentPurchase_' + size + '_flat_black';
    iconMapping[Notifications.HALLOWEEN_BOOST_ENDS] = 'notification_halloweenBoost_' + size + '_flat_red';
    iconMapping[Notifications.TIMER_HALLOWEEN_BOOST_RUNS_OUT] = 'notification_halloweenBoost_' + size + '_flat_black';
    iconMapping[Notifications.AUTO_EXTEND_HALLOWEEN_BOOST_NOT_ENOUGH_GOLD] = 'notification_halloweenBoost_' + size + '_flat_black';
    iconMapping[Notifications.ITEM_TIER_AVAILABLE] = 'notification_itemTierAvailable_' + size + '_flat_black';
    iconMapping[Notifications.HEALING_TENT_FULL] = 'notification_healingTentFull_' + size + '_flat_black';

    return iconMapping[notificationType];
}
;

Notifications.prototype = new AbstractModel();
Cache.register(Notifications);
/**
 * @constructor
 * @extends {AbstractData}
 */
;window['OasisTroopRanking'] = function OasisTroopRanking() {
    'use strict';

    this.defaultData = {
        'id': 0,
        'oasisId': 0,
        'oasisType': 0,
        'playerId': 0,
        'rank': 0,
        'amount': 0,
        'maxUsableTroops': 0,
        'villageInfluence': 0,
        'usedByVillage': 0,
        'bonus': 0
    };

    this.data = {};

    this.set = function(data) {
        this.parent.set.call(this, data, false);
        var xy = id2xy(this.data['oasisId']);
        this.data['coordsX'] = xy['x'];
        this.data['coordsY'] = xy['y'];
    }
    ;

    this.set(this.defaultData);
}

OasisTroopRanking.prototype = new AbstractModel();
Cache.register(OasisTroopRanking);

/**
 * Player Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Player'] = function Player() {
    this.defaultData = {
        'playerId': 0,
        'name': '',
        'tribeId': 0,
        'kingdomId': 0,
        'kingdomTag': "",
        'kingdomRole': 0,
        'kingId': 0,
        'kingstatus': 0,
        'mobileCountry': "",
        'coronationDuration': 0,
        'brewCelebration': 0,
        'population': 0,
        'gold': 0,
        'silver': 0,
        'deletionTime': 0,
        'uiStatus': -1,
        'spawnedOnMap': 0,
        'isInstant': 0,
        'isActivated': 1,
        'signupTime': 0,
        'hasNoobProtection': false,
        'productionBonusTime': 0,
        'cropProductionBonusTime': 0,
        'premiumFeatureAutoExtendFlags': 0,
        'plusAccountTime': 0,
        'limitedPremiumFeatureFlags': 0,
        'lastPaymentTime': 0,
        'isPunished': false,
        'limitationFlags': 0,
        'limitation': 0,
        'bannedUntil': 0,
        'isBannedFromMessaging': false,
        'bannedFromMessaging': 0,
        'uiLimitations': 0,
        'nextDailyQuestTime': 0,
        'dailyQuestsExchanged': 0,
        'prestige': 0,
        'nextLevelPrestige': 0,
        'level': 0,
        'stars': {
            'bronze': 0,
            'silver': 0,
            'gold': 0
        },
        'filterInformation': true,
        'vacationState': 0
    };

    var that = this;

    this.treasures = -1;
    this.data = {};
    this.set(this.defaultData);

    this.name = 'Player';

    this.hasPlusAccount = function() {
        return (this.data['plusAccountTime'] >= Travian.rootScope.currentServerTime || this.data['plusAccountTime'] == -1);
    }
    ;

    this.hasProductionBonus = function() {
        return (this.data['productionBonusTime'] >= Travian.rootScope.currentServerTime || this.data['productionBonusTime'] == -1);
    }
    ;

    this.hasCropProductionBonus = function() {
        return (this.data['cropProductionBonusTime'] >= Travian.rootScope.currentServerTime || this.data['cropProductionBonusTime'] == -1);
    }
    ;

    this.finishedTutorial = function() {
        return this.data['uiStatus'] == -1;
    }
    ;

    this.isOnMap = function() {
        return this.data['spawnedOnMap'] > 0;
    }
    ;

    this.isGoldDeletionTimeout = function() {
        return this.data.lastPaymentTime > Travian.rootScope.currentServerTime - Travian.Config['DeletionAfterBuyingGoldTimeout'];
    }
    ;

    this.hasUiLimitationFlag = function(flag) {
        var bits = Math.pow(2, flag);
        return ((this.data.uiLimitations & bits) == bits);
    }
    ;

    this.hasLimitation = function(flag) {
        var bits = Math.pow(2, flag);
        return ((this.data.limitation & bits) == bits);
    }
    ;

    this.getCoronationStatus = function() {
        if (this.data['kingstatus'] > 0) {
            if (this.data['kingstatus'] <= Travian.ServerTime) {
                return Player.CORONATION_STATUS.CROWNED;
            } else {
                return Player.CORONATION_STATUS.IN_CEREMONY;
            }
        } else {
            return Player.CORONATION_STATUS.NONE;
        }
    }
    ;

    this.isGovernor = function() {
        return (this.data.kingdomRole == Player.KINGDOM_ROLE_GOVERNOR);
    }
    ;

    this.isDuke = function() {
        return (this.data.kingdomRole == Player.KINGDOM_ROLE_DUKE);
    }
    ;

    this.isKing = function() {
        return (this.data.kingdomRole == Player.KINGDOM_ROLE_KING);
    }
    ;

    this.isViceKing = function() {
        return (this.data.kingdomRole == Player.KINGDOM_ROLE_VICEKING);
    }
    ;

    this.isKingdomLeader = function() {
        return (this.isDuke() || this.isKing() || this.isViceKing());
    }
    ;

    this.isWWOwner = function() {
        for (var i = 0; i < this.data.villages.length; i++) {
            if (this.data.villages[i]['type'] == Village.TYPE_WORLD_WONDER_VILLAGE || this.data.villages[i]['type'] == Village.TYPE_WORLD_WONDER_TOWN) {
                return true;
            }
        }
        return false;
    }
    ;

    this.isOnVacation = function() {
        return (that.data['vacationState'] == Player.VACATION_STATE_ACTIVE);
    }
    ;

    this.hasScheduledVacation = function(date) {
        date = date || (Date.now() / 1000);
        return ((that.data['vacationState'] == Player.VACATION_STATE_ACTIVATING || that.data['vacationState'] == Player.VACATION_STATE_ACTIVE) && that.data['vacationStateEnd'] >= date);
    }
    ;

    this.getAge = function() {
        return Math.ceil(((+new Date / 1000) - this.data['signupTime']) / 86400);
    }
    ;

    this.set = function(data, recursive) {
        data = data || {};

        // don't overwrite this model with filtered data when this model is unfiltered, because the own Player should never be filtered
        if (data['filterInformation'] !== undefined && this.data['filterInformation'] === false && data['filterInformation'] === true) {
            return;
        }

        // Check if this player is banned, then set the timeout to change the flag 'isBannedFromMessaging'
        if (data['bannedFromMessaging'] > 0) {
            var bannedUntil = data['bannedFromMessaging'];

            if (bannedUntil > Travian.ServerTime) {
                if (this.bannedTimeout) {
                    clearTimeout(this.bannedTimeout);
                }
                this.bannedTimeout = window.setTimeout(function() {
                    that.data['isBannedFromMessaging'] = false;
                    that.callSubscribers();
                }, parseInt(bannedUntil - Travian.ServerTime, 10) * 1000);
            }
        }

        this.parent.set.call(this, data, recursive);
    }
}

Player.isNPC = function(playerId) {
    return playerId <= 100;
}
;

Player.fetchPrestige = function(playerId, cb) {
    // Travian.prestigeService is not instantly available after page load, so we might need to wait a little
    var retryTimer = window.setTimeout(function() {
        Player.fetchPrestige(playerId, cb);
    }, 1000);

    if (!Travian.prestigeService) {
        return;
    }

    window.clearTimeout(retryTimer);

    Travian.prestigeService.getPrestigeForPlayerId(playerId, function(prestige) {
        cb(prestige);
    });
}
;

Player.ID = {
    NATAR: 1,
    NATURE: 0,
    ROBBER: -1,
    GOVERNOR_NPC: -2
};

Player.TRIBE = {
    NONE: 0,
    ROMAN: 1,
    TEUTON: 2,
    GAUL: 3,
    NATURE: 4,
    NATAR: 5
};

Player.TRIBE_NAME = {
    1: 'roman',
    2: 'teuton',
    3: 'gaul',
    4: 'nature',
    5: 'natar'
};

Player.ACTION_DELETE_ACCOUNT = 1;

Player.CORONATION_STATUS = {
    CROWNED: 1,
    IN_CEREMONY: 2,
    NONE: 3
};

Player.KINGDOM_ROLE_GOVERNOR = 0;
Player.KINGDOM_ROLE_KING = 1;
Player.KINGDOM_ROLE_DUKE = 2;
Player.KINGDOM_ROLE_VICEKING = 3;

Player.KINGDOM_ROLE_NAME = {};
Player.KINGDOM_ROLE_NAME[Player.KINGDOM_ROLE_GOVERNOR] = 'governor';
Player.KINGDOM_ROLE_NAME[Player.KINGDOM_ROLE_KING] = 'king';
Player.KINGDOM_ROLE_NAME[Player.KINGDOM_ROLE_DUKE] = 'duke';
Player.KINGDOM_ROLE_NAME[Player.KINGDOM_ROLE_VICEKING] = 'viceking';

Player.COLLECTION_KINGDOM = 'kingdom';

Player.UI_LIMITATIONS = {};
Player.UI_LIMITATIONS.SHOW_OASIS = 0;
Player.UI_LIMITATIONS.ALWAYS_SHOW_TRADE_ROUTES = 1;

Player.VACATION_STATE_INACTIVE = 0;
Player.VACATION_STATE_ACTIVATING = 1;
Player.VACATION_STATE_ACTIVE = 2;
Player.VACATION_STATE_BOOST = 3;

Player.collectionSortFct = function(a, b) {
    if (a['data']['population'] > b['data']['population']) {
        return -1;
    }
    if (a['data']['population'] < b['data']['population']) {
        return 1;
    }
    return 0;
}
;

Player.getKingdomIdByPlayerId = function(playerId) {
    var player = Player.get(playerId);
    return player.data['kingdomId'];
}
;

Player.prototype = new AbstractModel();
Cache.register(Player);

;window['PlayerHatesKing'] = function PlayerHatesKing() {
    this.defaultData = {
        'playerId': 0,
        'kingPlayerId': 0,
        'time': 0,
        'offerTime': 0
    };

    this.data = {};

    this.name = 'PlayerHatesKing';
    this.set(this.defaultData);
}

PlayerHatesKing.prototype = new AbstractModel();
Cache.register(PlayerHatesKing);

/**
 * PlayerProfile Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['PlayerProfile'] = function PlayerProfile($playerId) {
    this.defaultData = {
        'description': ''
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'PlayerProfile';
}

PlayerProfile.prototype = new AbstractModel();
Cache.register(PlayerProfile);
;window['PlayerProgressTrigger'] = function PlayerProgressTrigger() {
    this.defaultData = {
        'id': '',
        'playerId': 0,
        'type': 0,
        'subType': '',
        'triggered': false,
        'lastUse': 0,
        'data': {}
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'PlayerProgressTrigger';
}

/**
 * Trigger InGame Help Notification
 * @param string helpType
 * @param int additionalCheck
 */
PlayerProgressTrigger.triggerInGameHelp = function(helpType, additionalCheck) {
    var playerId = Travian.Player.data['playerId'];
    var uiStatus = Travian.Player.data['uiStatus'];
    // only trigger this when player is out of tutorial
    if (playerId > 0 && uiStatus == -1) {
        var settings = Settings.get(playerId);
        if (settings.data['enableHelpNotifications']) {
            var playerProgressTrigger = PlayerProgressTrigger.get(playerId + '_' + PlayerProgressTrigger.TYPE_IN_GAME_HELP + '_' + helpType);
            var subscribeId = playerProgressTrigger.subscribe(function() {
                if (playerProgressTrigger.data['triggered'] === false) {
                    var data = {
                        'helpType': helpType,
                        'additionalCheck': additionalCheck
                    };
                    Travian.writeRequest('player/triggerInGameHelpNotice', data);
                }
                playerProgressTrigger.unsubscribe(subscribeId);
            });
        }
    }
}
;

PlayerProgressTrigger.TYPE_OPEN_PREMIUM_MENU = 1;
PlayerProgressTrigger.TYPE_ROBBER_GOODS = 2;
PlayerProgressTrigger.TYPE_ADVENTURE = 3;
PlayerProgressTrigger.TYPE_ANNEX_OASIS = 4;
PlayerProgressTrigger.TYPE_INVITE_A_FRIEND = 5;
PlayerProgressTrigger.TYPE_IN_GAME_HELP = 6;

PlayerProgressTrigger.TOPIC_VILLAGE = 'Village';
PlayerProgressTrigger.TOPIC_ROBBERS = 'Robbers';
PlayerProgressTrigger.TOPIC_KINGDOM = 'Kingdom';
PlayerProgressTrigger.TOPIC_HERO = 'Hero';
PlayerProgressTrigger.TOPIC_ITEMS = 'Items';
PlayerProgressTrigger.TOPIC_OASES = 'Oases';
PlayerProgressTrigger.TOPIC_TRADING = 'Trading';
PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY = 'MilitaryAndDiplomacy';
PlayerProgressTrigger.TOPIC_PREMIUM = 'Premium';

PlayerProgressTrigger.HELP_PAGE_ROBBER_HIDEOUTS = 'RobberHideouts';
// Tutorial done & detail view or "send troops" view for a Robber Hideout is opened
PlayerProgressTrigger.HELP_PAGE_DUKES = 'Dukes';
// "Kingdom" tab of "Societies" window is opened
PlayerProgressTrigger.HELP_PAGE_MAP_DETAIL_VIEW = 'MapAndDetailView';
//Tutorial done & map view opened
PlayerProgressTrigger.HELP_PAGE_ADVENTURES = 'Adventures';
// Adventure menu opened
PlayerProgressTrigger.HELP_PAGE_HERO_PRODUCTION = 'HeroProduction';
// Hero attribute menu opened
PlayerProgressTrigger.HELP_PAGE_AUCTIONS = 'Auctions';
// Auction menu visited
PlayerProgressTrigger.HELP_PAGE_ASSIGN_OASIS = 'AssignOasis';
// Embassy built & opened "Oases" tab in Embassy window
PlayerProgressTrigger.HELP_PAGE_TROOPS_IN_OASIS = 'TroopsInOases';
// "Assign Oasis" quest was solved & opened non-wild oasis detail view
PlayerProgressTrigger.HELP_PAGE_WILD_OASES = 'WildOases';
// Detail view of wild Oasis opened
PlayerProgressTrigger.HELP_PAGE_TRADING_RESOURCES = 'TradingResources';
// "Buy" tab of marketplace opened
PlayerProgressTrigger.HELP_PAGE_OFFERING_RESOURCES = 'OfferingResources';
// "Sell" tab of marketplace opened
PlayerProgressTrigger.HELP_PAGE_CARD_GAME = 'CardGame';
// Card game screen opened
PlayerProgressTrigger.HELP_PAGE_RUNTIME_FEATURES = 'RuntimeFeatures';
// Premium menu opened
PlayerProgressTrigger.HELP_PAGE_MASTER_BUILDER = 'MasterBuilder';
// Building queue full
PlayerProgressTrigger.HELP_PAGE_TRADE_ROUTES = 'TradeRoutes';
// 3 or more villages owned & marketplace opened & Plus Account active
PlayerProgressTrigger.HELP_PAGE_ATTACK_TYPES = 'AttackTypes';
// Beginner protection ended & "Send troops" screen opened
PlayerProgressTrigger.HELP_PAGE_STRATEGIC_MAP = 'StrategicMap';
// Entered strategic (maximally zoomed out) map view
PlayerProgressTrigger.HELP_PAGE_FARM_LISTS = 'FarmLists';
// Sum of outgoing attacks and raids is at least 3 at the same time OR opened farm list tab
PlayerProgressTrigger.HELP_PAGE_VICTORY_POINTS = 'VictoryPoints';
// Second duke slot was unlocked in the kingdom
PlayerProgressTrigger.HELP_PAGE_INVITE_FRIEND = 'InviteAFriend';
// "Invite a Friend" tab opened
PlayerProgressTrigger.HELP_PAGE_SUPPORTING = 'SupportOtherPlayers';
// Beginner protection ended & player in kingdom is under attack & opened map view

/** Additional Checks in Backend */
PlayerProgressTrigger.CHECK_ASSIGN_OASIS_QUEST_SOLVED = 1;
PlayerProgressTrigger.CHECK_THREE_VILLAGES_OWNED = 2;

PlayerProgressTrigger.prototype = new AbstractModel();
Cache.register(PlayerProgressTrigger);

/**
 * PlayerPunishment Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['PlayerPunishment'] = function PlayerPunishment() {
    this.defaultData = {};

    this.data = {};
    this.set(this.defaultData);

    this.name = 'PlayerPunishment';
}

PlayerPunishment.TYPE_AUTO_BAN = 'playerBanned';
PlayerPunishment.TYPE_SUSPENDED = 'playerSuspended';
PlayerPunishment.TYPE_LOCKED = 'playerLocked';
PlayerPunishment.TYPE_ISOLATED = 'playerIsolated';

PlayerPunishment.STRIKE_REASON_GENERAL = 1;
PlayerPunishment.STRIKE_REASON_MULTI_ACCOUNT = 2;
PlayerPunishment.STRIKE_REASON_PASSWORD_SHARING = 3;
PlayerPunishment.STRIKE_REASON_BUG_ABUSE = 4;
PlayerPunishment.STRIKE_REASON_BOT_OR_SCRIPT_USING = 5;
PlayerPunishment.STRIKE_REASON_SILVER_FRAUD = 6;
PlayerPunishment.STRIKE_REASON_PAYMENT = 7;
PlayerPunishment.STRIKE_REASON_HARASSMENT_INSULT = 8;
PlayerPunishment.STRIKE_REASON_ACP_DELETION = 9;
PlayerPunishment.STRIKE_REASON_ACP_PAYMENT = 10;
PlayerPunishment.STRIKE_REASON_SPAM = 11;
PlayerPunishment.STRIKE_REASON_ADVERTISING = 12;

PlayerPunishment.ACTION_ISOLATED = 1;
PlayerPunishment.ACTION_LOCK = 2;

PlayerPunishment.prototype = new AbstractModel();
Cache.register(PlayerPunishment);
;window['PlayerStatsLastWeek'] = function PlayerStatsLastWeek() {
    this.defaultData = {
        'playerId': 0,
        'population': {
            'rank': -1,
            'value': 0
        },
        'off': {
            'rank': -1,
            'value': 0
        },
        'def': {
            'rank': -1,
            'value': 0
        },
        'hero': {
            'rank': -1,
            'value': 0
        }
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'PlayerStatsLastWeek';
}

PlayerStatsLastWeek.prototype = new AbstractModel();
Cache.register(PlayerStatsLastWeek);

/**
 * This Class handles all of the PremiumFeature Stuff
 *
 * To handle the this, there are two attributes for the button HTML
 * premium-feature: {string} this is the name of the PremiumFeature.
 * @use PremiumFeature.FEATURE_NAME_*
 *
;window['to get the parameters for the backend'] =  * premium-callback-param: {*} (optional) this a parameter for the callback-function to get the parameters for the backend (see below)
 *
 * Also, you can use a callback-function in your Controller which must be the same name as your PremiumFeature and must be inside $scope
 * Example for the controller:
 * <code>
 *     $scope[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function () {
 *     		return {'villageId': activeVillage.data['villageId']};
 *     };
 * </code>
 * For the Example we deliver the Backend the Object which has a Parameter villageId
 * In the Backend, the premiumFeature_*Service contains in $params your Object as an associative array
 *
 * @constructor
 */
var PremiumFeature = function(scope, element, $timeout) {

    /**
	 * Backend Config for the given Premium Feature
	 * @type {{}}
	 */
    var featureConfig = {};

    /**
	 * Name of the Premium Feature
	 * @use PremiumFeature.FEATURE_NAME_*
	 * @type {string}
	 */
    var featureName = '';
    /**
	 * a Object for the Backend
	 * This object will be set by the Callback-Function which has the same name as featureName
	 * @use PremiumFeature.FEATURE_NAME_*
	 * This Callback function has to be a part of $scope / directiveScope
	 * There are some keywords which would be filtered in setData:
	 *        callback: {function}            // will be called when we get the Backend-Response
	 *        delayForNextRequest: {Number}   // Timer when we finish the transaction (in milliseconds)
	 *                                        // When that is not set, the transaction stops after we get the Backend-Response
	 *        updateCacheFirst: {boolean}     // updateCacheFirst param for the Travian.writeRequest (default = false)
	 *        notEnoughGoldCallback: {function} // will be called if the user does not have enough gold
	 * @see this.bookFeature.backendData.params
	 *
	 * When premiumParamsCallback returns only false, it will stop the Transaction instantly
	 * @type {{}|boolean}
	 */
    var featureParams = {};

    /**
	 * the scope of Travian.Directive.Button
	 */
    var directiveScope;

    /**
	 * the element of Travian.Directive.Button
	 */
    var directiveElement;

    /**
	 * the $timeout of Travian.Directive.Button
	 */
    var directiveTimeout;

    /**
	 * Timeout return value
	 * @type {null|Promise|bool}
	 */
    var transaction = null;

    /**
	 * callback for the backend call
	 * @type {function}
	 */
    var requestCallback;

    /**
	 * delay for the backend call in milliseconds
	 * @type {function}
	 */
    var requestDelay;

    /**
	 * callback for the backend call if the player had not enough gold
	 * @type {function}
	 */
    var notEnoughGoldCallback;

    /**
	 * updateCacheFirst param for the Travian.writeRequest
	 * @type {boolean}
	 */
    var requestUpdateCacheFirst = false;

    /**
	 * Delay must be greater than 0 when we want a delay independent of the backend-response
	 * delay in milliseconds
	 * @type {number}
	 */
    var delayForNextRequest = 0;

    /**
	 * initialize the premiumFeature
	 *
	 * @param {{}} scope          the scope of Travian.Directive.Button (should be also the Ctrl-scope)
	 * @param element             the element of Travian.Directive.Button
	 * @param $timeout             the $timeout of Travian.Directive.Button
	 */
    function init(scope, element, $timeout) {
        directiveScope = scope;
        directiveElement = element;
        directiveTimeout = $timeout;
    }

    /**
	 * set the Data for this premiumFeature
	 * @param {array} data        0 = featureName
	 *                            1 = name of the callback-Function to get the featureParams
	 *                                (the Function should be inside the given scope (controller-Scope)
	 *                            3 = price (optional)
	 * @param additionalParams
	 */
    this.setData = function(data, additionalParams) {
        featureName = data[0];
        if (typeof directiveScope[featureName] === 'function') {
            featureParams = directiveScope[featureName](data[1]);
            if (typeof featureParams['callback'] !== 'undefined') {
                requestCallback = featureParams['callback'];
                delete (featureParams['callback']);
            }

            if (typeof featureParams['delayForNextRequest'] !== 'undefined') {
                delayForNextRequest = featureParams['delayForNextRequest'];
                delete (featureParams['delayForNextRequest']);
            }

            if (typeof featureParams['updateCacheFirst'] !== 'undefined') {
                requestUpdateCacheFirst = featureParams['updateCacheFirst'];
                delete (featureParams['updateCacheFirst']);
            }

            if (typeof featureParams['notEnoughGoldCallback'] !== 'undefined') {
                notEnoughGoldCallback = featureParams['notEnoughGoldCallback'];
                delete (featureParams['notEnoughGoldCallback']);
            }

            if (typeof featureParams['requestDelay'] !== 'undefined') {
                requestDelay = featureParams['requestDelay'];
                delete (featureParams['requestDelay']);
            }

            if (typeof data[2] != 'undefined') {
                featureParams['price'] = data[2];
            }
        }
        if (typeof additionalParams == 'object') {
            Object.assign(featureParams, additionalParams);
        }
    }
    ;

    /**
	 * start the premium Transaction and disabled this.directiveElement
	 * @returns {boolean}    true = all was fine, false = button was already disabled
	 */
    function startTransaction() {
        if (featureParams === false) {
            return false;
        }

        if (directiveElement.hasClass('disabled')) {
            return false;
        }

        // is there still a transaction, then doesn't start again
        if (transaction !== null) {
            return false;
        }

        if (delayForNextRequest > 0) {
            directiveElement.addClass("waiting");
            transaction = directiveTimeout(function() {
                directiveElement.removeClass("waiting");
                transaction = null;
            }, delayForNextRequest);
        } else {
            transaction = true;
        }

        return true;
    }

    /**
	 * stop the transaction
	 */
    function stopTransaction() {
        if (transaction !== null && delayForNextRequest > 0) {
            directiveTimeout.cancel(transaction);
        }
        transaction = null;
    }

    /**
	 * Load this Config from Backend by featureName
	 * @returns {boolean} true = all is fine, false = config doesn't exists
	 */
    function loadFeatureConfig() {
        featureConfig = Travian['Config']['PremiumFeatures'][featureName];
        return typeof featureConfig !== 'undefined';
    }

    /**
	 * After some Checks, this function call the backend to book the PremiumFeature.
	 * When the player has not enough gold, we will call the PaymentShop / the smallestPackage-Window
	 */
    this.bookFeature = function() {
        if (!startTransaction()) {
            return;
        }
        if (!loadFeatureConfig()) {
            stopTransaction();
            return;
        }

        if (!hasEnoughGold() && !hasVoucher()) {
            // Only show buy gold window if player is not punished
            if (!Travian.Player.data['isPunished']) {
                stopTransaction();
                openNotEnoughGoldWindow();
                if (typeof notEnoughGoldCallback !== 'undefined') {
                    notEnoughGoldCallback();
                }
                return;
            }
        }

        var backendData = {
            'featureName': featureName,
            'params': featureParams
        };

        function sendBookRequest() {
            var requestSuccess = Travian.writeRequest('premiumFeature/bookFeature', backendData, function(response) {
                // backend must provide response otherwise we can't check for errors
                // if we are locked auth controller takes over and response is undefined
                if (typeof response != "undefined") {
                    if (typeof (response['errors']) != "undefined" && response['errors'][0]['message'] == 'NotEnoughGold') {
                        delete (response['errors']);
                        openNotEnoughGoldWindow();
                        stopTransaction();
                        if (typeof notEnoughGoldCallback !== 'undefined') {
                            notEnoughGoldCallback();
                        }
                        return;
                    }
                    if (response['confirmation']) {
                        directiveScope.$root['openWindow']('confirmGoldUsage', {}, {
                            'feature': featureName,
                            'crid': directiveScope['getConfirmationRequestId'](),
                            'confirmationParams': response
                        });
                        stopTransaction();
                        return;
                    }
                }

                if (typeof requestCallback !== 'undefined') {
                    requestCallback(response);
                }
                if (delayForNextRequest == 0) {
                    stopTransaction();
                }
            }, requestUpdateCacheFirst);
            if (requestSuccess === false) {
                stopTransaction();
            }
        }

        if (requestDelay) {
            window.setTimeout(sendBookRequest, requestDelay);
        } else {
            sendBookRequest();
        }
    }
    ;

    /**
	 * Checks if the player has enough gold for the desired feature
	 * @returns {boolean} true = has enough gold, false = has not enough gold
	 */
    function hasEnoughGold() {
        var price = getPrice();
        return price <= directiveScope.player.data.gold;
    }

    function hasVoucher() {
        var vouchers = Voucher.get(Travian.Player.data['playerId']);
        var hasVoucher = vouchers.data['hasVouchers'][featureName];
        return hasVoucher > 0;
    }

    /**
	 * return the price you have to pay for your request
	 * @returns {int}
	 */
    function getPrice() {
        if (featureName == PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE) {
            if (featureParams['type'] == ExchangeOffice.TYPE_GOLD) {
                return featureParams['amount'];
            } else {
                return 0;
            }
        } else if (featureName == PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT && PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT)) {
            return featureConfig['price2'];
        } else if (featureName == PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT && PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT)) {
            return featureConfig['price3'];
        } else if (featureName == PremiumFeature.FEATURE_NAME_TRADER_SLOT && PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST)) {
            return featureConfig['price2'];
        } else if (featureName == PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION && Travian.Config['heroCustomizations']['purchasable'][featureParams['option']][featureParams['type']]['currency'] != 'gold') {
            return 0;
        }
        if (featureParams['price'] !== undefined) {
            return featureParams['price'];
        }
        return featureConfig['price'];
    }

    function openNotEnoughGoldWindow() {
        directiveScope.$root['openWindow']('notEnoughGold', {}, {
            'price': getPrice()
        });
    }

    init(scope, element, $timeout);
};

/**
 * Static Variable to save the Timeout-Response
 * @see PremiumFeature.saveAutoExtend()
 * @type {null|Promise}
 */
PremiumFeature.saveAutoExtendTimeout = null;

/**
 * Save function for AutoExtendFlag BitMask form the current Player
 */
PremiumFeature.saveAutoExtend = function(player) {
    var savePlayer = Travian.Player;
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        savePlayer = player;
    }

    if (PremiumFeature.saveAutoExtendTimeout !== null) {
        window.clearTimeout(PremiumFeature.saveAutoExtendTimeout)
    }

    PremiumFeature.saveAutoExtendTimeout = window.setTimeout(function() {
        PremiumFeature.saveAutoExtendTimeout = null;
        Travian.writeRequest('premiumFeature/saveAutoExtendFlags', {
            'autoExtendFlags': savePlayer.data['premiumFeatureAutoExtendFlags']
        });
    }, 1000);
}
;

/**
 * Checks if the current Player has the given AutoExtend-Flag
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param player
 * @returns {boolean}
 */
PremiumFeature.hasAutoExtendFlag = function(flag, player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        return (player.data['premiumFeatureAutoExtendFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
    }
    return (Travian.Player.data['premiumFeatureAutoExtendFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
}
;

/**
 * Checks if the current Player has the given LimitedFeature-Flag
 * @param {Number} flag
 * @use PremiumFeature.LIMITED_FLAG_*
 * @param {Player} player
 * @returns {boolean}
 */
PremiumFeature.hasLimitedFeatureFlag = function(flag, player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        return (player.data['limitedPremiumFeatureFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
    }
    return (Travian.Player.data['limitedPremiumFeatureFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
}
;

/**
 * Add the given AutoExtend-Flag for the currentPlayer
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param {Player} player
 */
PremiumFeature.setAutoExtendFlag = function(flag, player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        player.data['premiumFeatureAutoExtendFlags'] |= Math.pow(2, flag);
    } else {
        Travian.Player.data['premiumFeatureAutoExtendFlags'] |= Math.pow(2, flag);
    }
    PremiumFeature.saveAutoExtend(player);
}
;

/**
 * Removes the given AutoExtend-Flag for the currentPlayer
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param {Player} player
 */
PremiumFeature.unsetAutoExtendFlag = function(flag, player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        player.data['premiumFeatureAutoExtendFlags'] &= ~Math.pow(2, flag);
    } else {
        Travian.Player.data['premiumFeatureAutoExtendFlags'] &= ~Math.pow(2, flag);
    }
    PremiumFeature.saveAutoExtend();
}
;

/**
 * toggle the given AutoExtend-Flag for the currentPlayer
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param {Player} player
 */
PremiumFeature.toggleAutoExtendFlag = function(flag, player) {
    var usePlayer = Travian.Player;
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        usePlayer = player;
    }
    if (PremiumFeature.hasAutoExtendFlag(flag, usePlayer)) {
        PremiumFeature.unsetAutoExtendFlag(flag, usePlayer);
    } else {
        PremiumFeature.setAutoExtendFlag(flag, usePlayer);
    }
}
;

PremiumFeature.hasPlayerPlusAccount = function(player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        return player.hasPlusAccount();
    }
    return Travian.Player.hasPlusAccount();
}
;

PremiumFeature.hasProductionBonus = function(player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        return player.hasProductionBonus();
    }
    return Travian.Player.hasProductionBonus();
}
;

PremiumFeature.hasCropProductionBonus = function(player) {
    if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
        return player.hasCropProductionBonus();
    }
    return Travian.Player.hasCropProductionBonus();
}
;

PremiumFeature.getNotTradableResTypes = function() {
    return Travian.Config['specialRules']['cropDiet'] ? [Resources.CROP] : [];
}
;

// valid PremiumFeature-Names
PremiumFeature.FEATURE_NAME_FINISH_NOW = 'finishNow';
PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE = 'exchangeOffice';
PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS = 'productionBonus';
PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS = 'cropProductionBonus';
PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT = 'plusAccount';
PremiumFeature.FEATURE_NAME_NPC_TRADER = 'NPCTrader';
PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY = 'tributeFetchInstantly';
PremiumFeature.FEATURE_NAME_FETCH_ALL_TRIBUTE_INSTANTLY = 'tributeFetchAllInstantly';
PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT = 'treasureResourcesInstant';
PremiumFeature.FEATURE_NAME_STARTER_PACKAGE = 'starterPackage';
PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT = 'buildingMasterSlot';
PremiumFeature.FEATURE_NAME_TRADER_SLOT = 'traderSlot';
PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY = 'traderArriveInstantly';
PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE = 'cardgameSingle';
PremiumFeature.FEATURE_NAME_CARDGAME_4OF5 = 'cardgame4of5';
PremiumFeature.FEATURE_NAME_BIRTHDAY_PACKAGE = 'birthdayPackage';
PremiumFeature.FEATURE_NAME_HALLOWEEN_PACKAGE = 'halloweenPackage';
PremiumFeature.FEATURE_NAME_MASQUERADE_PACKAGE = 'masqueradePackage';
PremiumFeature.FEATURE_NAME_HALLOWEEN_BOOST = 'halloweenBoost';
PremiumFeature.FEATURE_NAME_HERO_CUSTOMIZATION = 'heroCustomization';

PremiumFeature.AUTO_EXTEND_FLAG_RES_BONUS = 0;
PremiumFeature.AUTO_EXTEND_FLAG_CROP_BONUS = 1;
PremiumFeature.AUTO_EXTEND_FLAG_PLUS_BONUS = 2;
PremiumFeature.AUTO_EXTEND_FLAG_HALLOWEEN_BOOST = 3;

PremiumFeature.AUTO_EXTEND_FLAGS = {};
PremiumFeature.AUTO_EXTEND_FLAGS[PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT] = PremiumFeature.AUTO_EXTEND_FLAG_PLUS_BONUS;
PremiumFeature.AUTO_EXTEND_FLAGS[PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS] = PremiumFeature.AUTO_EXTEND_FLAG_RES_BONUS;
PremiumFeature.AUTO_EXTEND_FLAGS[PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS] = PremiumFeature.AUTO_EXTEND_FLAG_CROP_BONUS;
PremiumFeature.AUTO_EXTEND_FLAGS[PremiumFeature.FEATURE_NAME_HALLOWEEN_BOOST] = PremiumFeature.AUTO_EXTEND_FLAG_HALLOWEEN_BOOST;

// Limited Premium Features
PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT = 1;
PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT = 2;
PremiumFeature.LIMITED_FLAG_THIRD_BUILD_MASTER_SLOT = 3;
PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST = 4;
PremiumFeature.LIMITED_FLAG_TRADER_SLOT_SECOND = 5;

// Limits the use of the npc trader feature by the amount of traded resources
PremiumFeature.NPC_TRADER_INSIGNIFICANCE_LIMIT = 5;

;window['PrestigeCondition'] = function PrestigeCondition() {
    this.defaultData = {
        'id': 0,
        'avatarIdentifier': 0,
        'conditionType': 0,
        'controlValue': 0,
        'achievedValue': 0,
        'finalValue': 0,
        'threshold': '',
        'fulfilled': 0,
        'type': 0
    };

    this.data = {};

    this.set(this.defaultData);
    this.name = 'PrestigeCondition';
}

PrestigeCondition.prototype = new AbstractModel();
Cache.register(PrestigeCondition);

var PrestigeConditions = {};

PrestigeCondition.LEVELUP_HERO = 1;
PrestigeCondition.COMPLETE_ADVENTURE = 2;
PrestigeCondition.COMPLETE_DAILY_QUEST = 3;
PrestigeCondition.COMPLETE_RESEARCH = 4;
PrestigeCondition.POPULATION_GROW = 5;
PrestigeCondition.WRITE_MESSAGE = 6;
PrestigeCondition.ACQUIRE_VILLAGE = 7;
PrestigeCondition.TREASURES = 8;
PrestigeCondition.IMPROVE_RANK_POPULATION = 9;
PrestigeCondition.IMPROVE_RANK_ATTACKER = 10;
PrestigeCondition.IMPROVE_RANK_DEFENDER = 11;
PrestigeCondition.IMPROVE_RANK_VILLAGES = 12;
PrestigeCondition.IMPROVE_RANK_HEROES = 13;
PrestigeCondition.HOLD_TOP_RANKING = 14;
PrestigeCondition.ATTACK_DEFEND_PLAYER = 15;

/**
 * Privileges Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['Privileges'] = function Privileges() {
    this.defaultData = {
        'heroCustomizations': {}
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Privilege';
}

Privileges.prototype = new AbstractModel();
Cache.register(Privileges);
/**
 * Quest Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Quest'] = function Quest() {
    this.defaultData = {
        'id': 0,
        'status': 0,
        'progress': 0,
        'finishedSteps': 0,
        'finalStep': 0,
        'questGiver': 0,
        'data': 0,
        'rewards': []
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Quest';

    this.image = '';

    this.set = function(data) {
        this.parent.set.call(this, data, false);
        var cfg = QuestCfg[data['id']];
        if (cfg) {
            // This is a tutorial quest
            this.data['cfg'] = QuestCfg[data['id']];
        }
        this.data['rewardCnt'] = Object.keys(this.data['rewards']).length;
    }
    ;
}

Quest.isAdventure = function(questId) {
    var adventureQuestIds = [991, 992];
    return (adventureQuestIds.indexOf(questId) != -1);
}
;

Quest.isEnvoyQuest = function(questId) {
    var envoyQuestIds = [101, 102];
    return (envoyQuestIds.indexOf(questId) != -1);
}
;

Quest.isTutorial = function(questId) {
    // hide UI elements for special payment User Accounts
    if (Travian.Player.data.hasOwnProperty('userAccountIdentifier')) {
        var userAccountIdentifier = Travian.Player.data['userAccountIdentifier'];
        var paymentUserAccountIdentifiers = Travian.Config['paymentUserAccountIdentifiers'];
        if ($.inArray(userAccountIdentifier, paymentUserAccountIdentifiers)) {
            return false;
        }
    }
    return typeof (QuestCfg[questId]) != 'undefined';
}
;

Quest.prototype = new AbstractModel();
Cache.register(Quest);

Quest.STATUS_INACTIVE = 1;
Quest.STATUS_ACTIVATABLE = 2;
Quest.STATUS_ACTIVE = 3;
Quest.STATUS_DONE = 4;
Quest.STATUS_FINISHED = 5;

Quest.REWARD_XP = 1;
Quest.REWARD_RESOURCES = 2;
Quest.REWARD_TROOPS = 3;
Quest.REWARD_SILVER = 4;
Quest.REWARD_ITEM = 5;
Quest.REWARD_ONLY_TEXT = 6;
Quest.REWARD_GOLD = 7;
Quest.REWARD_CULTURE_POINTS = 8;
Quest.REWARD_TREASURES = 9;
Quest.REWARD_ADVENTURES_POINTS = 10;
Quest.REWARD_BUILDING_LEVEL = 11;
Quest.REWARD_PLUS_ACCOUNT = 12;
Quest.REWARD_RESOURCE_BONUS = 13;
Quest.REWARD_CROP_BONUS = 14;
Quest.REWARD_FREE_ROLL = 15;
Quest.REWARD_HERO_CUSTOMIZATION = 16;

Quest.DAILY_QUESTS_NUMBER = 3;

Quest.DAILY_CONDITIONAL_OPEN_PREMIUM_MENU = 10015;

// The tutorial quests will be inserted into this config (see quests folder)
var QuestCfg = {};

/**
 * QuestGiver Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['QuestGiver'] = function QuestGiver() {
    this.defaultData = {
        'npcId': 0,
        'questId': 0,
        'dialog': 0,
        'questStatus': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'QuestGiver';
}

QuestGiver.DAILY = -1;
QuestGiver.MYSELF = 0;
QuestGiver.WREN = 1;
QuestGiver.FARMER = 2;
QuestGiver.SCOUT = 3;
QuestGiver.WOODCUTTER = 4;
QuestGiver.CLAY_MAN = 5;
QuestGiver.MINER = 6;
QuestGiver.TRADER = 7;
QuestGiver.ROBBER = 8;
QuestGiver.CHIEF = 9;
QuestGiver.ENVOY = 10;
QuestGiver.ADVENTURER = 11;
QuestGiver.GENERAL = 12;

// Quest givers which stand in the main village
QuestGiver.VILLAGERS = [QuestGiver.WREN, QuestGiver.SCOUT, QuestGiver.CHIEF, QuestGiver.ENVOY, QuestGiver.ADVENTURER];

// The animations will be randomly played, see questGiver directive
QuestGiver.ANIMATIONS = {};
//QuestGiver.ANIMATIONS[QuestGiver.WREN] = [17, 50, 36]; // Count of frames for each animation
//QuestGiver.ANIMATIONS[QuestGiver.SCOUT] = [42, 30, 29];
//QuestGiver.ANIMATIONS[QuestGiver.CHIEF] = [35, 36, 37];

QuestGiver.STRING = {};
QuestGiver.STRING[QuestGiver.DAILY] = 'daily';
QuestGiver.STRING[QuestGiver.MYSELF] = 'myself';
QuestGiver.STRING[QuestGiver.WREN] = 'wren';
QuestGiver.STRING[QuestGiver.FARMER] = 'farmer';
QuestGiver.STRING[QuestGiver.SCOUT] = 'scout';
QuestGiver.STRING[QuestGiver.WOODCUTTER] = 'woodcutter';
QuestGiver.STRING[QuestGiver.CLAY_MAN] = 'clayMan';
QuestGiver.STRING[QuestGiver.MINER] = 'miner';
QuestGiver.STRING[QuestGiver.TRADER] = 'trader';
QuestGiver.STRING[QuestGiver.ROBBER] = 'robber';
QuestGiver.STRING[QuestGiver.CHIEF] = 'chief';
QuestGiver.STRING[QuestGiver.ENVOY] = 'envoy';
QuestGiver.STRING[QuestGiver.ADVENTURER] = 'adventurer';
QuestGiver.STRING[QuestGiver.GENERAL] = 'general';

QuestGiver.prototype = new AbstractModel();
Cache.register(QuestGiver);
/**
 * Report Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Report'] = function Report() {
    this.defaultData = {};

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Report';
}

Report.COLLECTION_PERSONAL = 'own';
Report.COLLECTION_KING = 'king';
Report.COLLECTION_KING_MINIONS = 'king_minions';
Report.COLLECTION_SOCIETY = 'society';
Report.COLLECTION_FAVORITE = 'favorite';
Report.COLLECTION_SEARCH = 'search';
Report.ALL_COLLECTIONS = [Report.COLLECTION_PERSONAL, Report.COLLECTION_KING, Report.COLLECTION_KING_MINIONS, Report.COLLECTION_SOCIETY, Report.COLLECTION_FAVORITE, Report.COLLECTION_SEARCH];

Report.DISPLAY_TYPE_SUPPORT = 1;
Report.DISPLAY_TYPE_TRADE = 2;
Report.DISPLAY_TYPE_ADVENTURE = 3;
Report.DISPLAY_TYPE_FIGHT = 4;
Report.DISPLAY_TYPE_SPY = 5;
Report.DISPLAY_TYPE_PEACE = 6;
Report.DISPLAY_TYPE_SUPPORT_ATTACKED = 7;
Report.DISPLAY_TYPE_TROOP_RELEASE = 8;
Report.DISPLAY_TYPE_ANIMALS_CAPTURE = 9;
Report.DISPLAY_TYPE_PRESTIGE = 10;
Report.DISPLAY_TYPE_FARMLIST_RAID = 11;
Report.DISPLAY_TYPE_FARMLIST_RAID_COMPLETE = 12;
Report.DISPLAY_TYPE_RELOCATION = 13;
Report.DISPLAY_TYPE_VACATION = 14;

Report.DISPLAY_TYPES_FIGHT = [Report.DISPLAY_TYPE_FIGHT, Report.DISPLAY_TYPE_SPY, Report.DISPLAY_TYPE_SUPPORT_ATTACKED, Report.DISPLAY_TYPE_ANIMALS_CAPTURE];

Report.DISPLAY_TYPES_VISIT = [Report.DISPLAY_TYPE_PEACE, Report.DISPLAY_TYPE_VACATION];

Report.ADVENTURE_LOOT_TYPE_NOTHING = 0;
Report.ADVENTURE_LOOT_TYPE_RESOURCES = 3;
Report.ADVENTURE_LOOT_TYPE_SILVER = 4;
Report.ADVENTURE_LOOT_TYPE_TROOPS = 5;

Report.REPORTS_PER_PAGE = 10;

Report.prototype = new AbstractModel();
Cache.register(Report);
/**
 * ReportFavorites Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['ReportFavorites'] = function ReportFavorites() {
    this.defaultData = {};

    this.data = {};
    this.set(this.defaultData);

    this.name = 'ReportFavorites';
}
ReportFavorites.prototype = new AbstractModel();
Cache.register(ReportFavorites);
/**
 * Research Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Research'] = function Research(villageId) {
    this.defaultData = {};

    this.data = {
        'researchQueueFull': false,
        'upgradeQueueFull': false,
        'units': []
    };
    this.set(this.defaultData);

    this.name = 'Research';

    this.getUnitLevel = function(unitId) {
        for (var i = 0; i < this.data['units'].length; i++) {
            if (this.data['units'][i]['unitType'] == unitId) {
                return this.data['units'][i]['unitLevel'];
            }
        }
        return 0;
    }
}
Research.prototype = new AbstractModel();
Cache.register(Research);
;window['Resources'] = function Resources(resources) {
    for (var i = 1; i <= 4; i++) {
        if (typeof (resources) != 'undefined') {
            this[i] = parseInt(resources[i]);
        } else {
            this[i] = 0;
        }

    }

    this.multiply = function(factor) {
        for (var i = 1; i <= 4; i++) {
            this[i] *= factor;
        }
        return this;
    }
    ;

    this.floor = function() {
        for (var i = 1; i <= 4; i++) {
            this[i] = Math.floor(this[i]);
        }
        return this;
    }
    ;

    this.getSum = function(notTradableResTypes) {
        if (Array.isArray(notTradableResTypes)) {
            var sum = 0;
            for (var i = 1; i <= 4; i++) {
                if (notTradableResTypes.indexOf(i) === -1) {
                    sum += this[i];
                }
            }
            return sum;
        } else {
            return Math.floor(this['1'] + this['2'] + this['3'] + this['4']);
        }
    }
    ;

    this.cap = function(max) {
        for (var i = 1; i <= 4; i++) {
            this[i] = Math.min(max, this[i]);
        }
        return this;
    }
    ;

    this.getResources = function() {
        return {
            1: this[1],
            2: this[2],
            3: this[3],
            4: this[4]
        }
    }
    ;

    this.addResources = function(otherRes) {
        for (var i = 1; i <= 4; i++) {
            if (otherRes[i] !== undefined) {
                this[i] += otherRes[i];
            }
        }
    }
    ;

    /**
	 * resources are first set to desired distribution.
	 * the remained resources are distributet to the four resources
	 * (added or removed, depending on the sum of available resources, if they are more or less, than the desired sum)
	 * @param capacity
	 * @param preDefinedDistribution
	 * @param production
	 * @param resourceSlots
	 * @returns {copy|*|XMLList|XML|copy|copy}
	 */
    this.distribute = function(capacity, preDefinedDistribution, production, resourceSlots) {
        // get the sum of available and desired resources
        var sumAvailable = this.getSum();
        var sumDesired = preDefinedDistribution.getSum();

        // first set the distribution to the desired one
        // we need to copy this instance of Resources
        // so we don't change the original object.
        var returnDistribution = new Resources(preDefinedDistribution.getResources());

        // get the difference between available and desired resources, that still has to be distributet
        var differenceToDistribute = Math.abs(sumAvailable - sumDesired);

        // If we don't have enough resources for the desired output, we might want to take the resource production into account
        if (production && sumDesired > sumAvailable) {
            // Sum up the current production per hour
            var prodPerTimeSum = 0;
            for (var i = 1; i <= 4; i++) {
                prodPerTimeSum += parseInt(production[i]);
            }
            // Change the desired distribution accordingly to the production
            for (var i = 1; i <= 4; i++) {
                var diff = Math.round(differenceToDistribute * (parseInt(production[i]) / prodPerTimeSum));
                if (diff > returnDistribution[i]) {
                    diff = returnDistribution[i];
                }
                returnDistribution[i] -= diff;
            }

            sumDesired = returnDistribution.getSum();
            differenceToDistribute = Math.abs(sumAvailable - sumDesired);
        }

        // do we have more or less resources than desired? -> do we need to add or substract the differenc?
        var addDifference = (sumAvailable > sumDesired ? true : false);

        // free resource slots to add or substract resources (get removed from the array, no more change is possible)
        if (!resourceSlots) {
            resourceSlots = Resources.allTypes();
        }
        // loop as long, as there are no more resources left to distribute
        while (differenceToDistribute > 0 && resourceSlots.length > 0) {
            // calculate an evenly distribution of the difference, depending on the number of slots
            var changePerSlot = Math.floor(differenceToDistribute / resourceSlots.length);

            // don't forget the remainder
            var remainder = differenceToDistribute - changePerSlot * resourceSlots.length;

            // for now the difference is fully distributed
            differenceToDistribute = 0;

            // now lets add/substract the distributed difference to the single slots,
            // and also distribute the remainder
            for (var i = 0; i < resourceSlots.length; i++) {
                var resourceIndex = resourceSlots[i];

                if (addDifference) {
                    returnDistribution[resourceIndex] += changePerSlot;
                    if (remainder > 0) {
                        returnDistribution[resourceIndex]++;
                        remainder--;
                    }
                } else {
                    returnDistribution[resourceIndex] -= changePerSlot;
                    if (remainder > 0) {
                        returnDistribution[resourceIndex]--;
                        remainder--;
                    }
                }

                // if there is an overflow (higher than capacity or lower then 0),
                // put the overflow back to the differenceToDistriute
                // and lock this slot for further changes
                if (returnDistribution[resourceIndex] >= capacity[resourceIndex]) {
                    differenceToDistribute += (returnDistribution[resourceIndex] - capacity[resourceIndex]);
                    returnDistribution[resourceIndex] = parseInt(capacity[resourceIndex]);
                    resourceSlots.splice(i, 1);
                    i--;
                } else if (returnDistribution[resourceIndex] <= 0) {
                    differenceToDistribute += Math.abs(returnDistribution[resourceIndex]);
                    returnDistribution[resourceIndex] = 0;
                    resourceSlots.splice(i, 1);
                    i--;
                }
            }
        }

        return returnDistribution;
    }
    ;

    this.toString = function() {
        return "1: " + this[1] + " 2: " + this[2] + " 3: " + this[3] + " 4: " + this[4] + " (sum: " + this.getSum() + ")";
    }
}

Resources.STRING = {
    0: 'resourcesAll',
    1: 'wood',
    2: 'clay',
    3: 'iron',
    4: 'crop'
};

Resources.ID = {
    'wood': 1,
    'clay': 2,
    'iron': 3,
    'crop': 4
};

Resources.WOOD = 1;
Resources.CLAY = 2;
Resources.IRON = 3;
Resources.CROP = 4;

Resources.allTypes = function(exclude, strings) {
    var res = [];
    if (exclude && typeof (exclude) == 'number') {
        exclude = [exclude];
    }
    for (var i in Resources.STRING) {
        if (i > 0 && (!exclude || exclude.indexOf(parseInt(i, 10)) < 0)) {
            res.push(strings ? Resources.STRING[i] : i);
        }
    }
    return res;
}
;

module.exports = Resources;
;window['Session'] = function Session() {
    this.defaultData = {
        'playerId': 0,
        'sessionId': '',
        'type': 0,
        'rights': 0
    };

    this.data = {};

    this.name = 'Session';

    this.set(this.defaultData);
    var myself = this;

    this.hasRight = function(right) {
        right = Math.pow(2, right);
        var myRight = parseInt(myself['data']['rights']);
        var res = myRight & right;
        return res == right;
    }
    ;

    this.getRightsAsObject = function() {
        var obj = {};
        for (var i = 1; i <= 4; i++) {
            obj[i] = myself.hasRight(i);
        }
        return obj;
    }
    ;
}
Session.TYPE_PLAYER = 0;
Session.TYPE_DUAL = 1;
Session.TYPE_SITTER = 2;
Session.TYPE_ADMIN = 3;

Session.RIGHT_SEND_RAIDS = 1;
Session.RIGHT_SEND_SUPPORT = 2;
Session.RIGHT_SEND_MERCHANTS = 3;
Session.RIGHT_SPEND_GOLD = 4;
Session.RIGHT_ACCESS_CHAT = 5;

Session.prototype = new AbstractModel();
Cache.register(Session);

;window['Settings'] = function Settings() {
    this.defaultData = {
        'premiumConfirmation': 2,
        'lang': 'en',
        'onlineStatusFilter': 0,
        'extendedSimulator': false,
        'musicVolume': 100,
        'soundVolume': 100,
        'uiSoundVolume': 100,
        'muteAll': 0,
        'timeType': 0,
        'timeZone': 0,
        'timeZoneString': '',
        'timeZoneSwitcher': 0,
        'timeFormat': null,
        'attacksFilter': 0,
        'mapFilter': 0,
        'enableTabNotifications': false,
        'disableAnimations': true,
        'enableHelpNotifications': true,
        'enableWelcomeScreen': true,
        'notpadsVisible': false,
        'showPopulationWarning': true,
        'showSeasonalTheme': true,
        'showSnowfall': true,
        'showFireworksDistributionWarning': true
    };

    var booleanValues = {
        'extendedSimulator': true,
        'muteAll': true,
        'enableTabNotifications': true,
        'disableAnimations': true,
        'enableHelpNotifications': true,
        'enableWelcomeScreen': true,
        'notpadsVisible': true,
        'showPopulationWarning': true,
        'showSeasonalTheme': true,
        'showSnowfall': true,
        'showFireworksDistributionWarning': true
    };

    this.hasPremiumConfirmationFlag = function(flag) {
        var bits = Math.pow(2, flag);
        return ((this.data['premiumConfirmation'] & bits) == bits);
    }
    ;

    this.setPremiumConfirmationFlag = function(flag) {
        this.data['premiumConfirmation'] |= Math.pow(2, flag);
    }
    ;

    this.unsetPremiumConfirmationFlag = function(flag) {
        var newPremiumConfirmations = this.data['premiumConfirmation'] &= ~Math.pow(2, flag);
        this.data['premiumConfirmation'] = parseInt(newPremiumConfirmations);
    }
    ;

    this.hasMapFilterFlag = function(flag) {
        var bits = Math.pow(2, flag);
        return ((this.data['mapFilter'] & bits) == bits);
    }
    ;

    this.data = {};
    this.timeZoneOffsetSeconds = 0;

    this.name = 'Settings';

    this.set(this.defaultData);
    this.set = function(data) {
        data['timeType'] = parseInt(data['timeType'], 10);
        switch (data['timeType']) {
        case Settings.TIME_TYPES.UTC:
            this.timeZoneOffsetSeconds = data['timeZone'] * 3600;
            break;
        case Settings.TIME_TYPES.GAMEWORLD:
            this.timeZoneOffsetSeconds = parseInt(Travian.Config['serverTimezoneOffset'], 10);
            break;
        default:
        case Settings.TIME_TYPES.LOCAL:
            this.timeZoneOffsetSeconds = new Date().getTimezoneOffset() * 60 * -1;
            break;
        }

        // Map the data from 0/1 to false/true if this is a boolean value
        for (var key in data) {
            if (booleanValues[key]) {
                if (data[key] == 1) {
                    data[key] = true;
                }
                if (data[key] == 0) {
                    data[key] = false;
                }
            }
        }
        $('body').toggleClass('withAnimations', !data['disableAnimations']).toggleClass('noAnimations', data['disableAnimations']);
        if (Travian.Config['season']) {
            $('body').toggleClass(Travian.Config['season'], data['showSeasonalTheme']);
            getAngularService('MapService').setSeason(data['showSeasonalTheme'] ? Travian.Config['season'] : '');
            if (Travian.Config['season'] == 'winter') {
                $('body').toggleClass('snowfall', data['showSnowfall'] && data['showSeasonalTheme'] && !data['disableAnimations']);
            }
        }
        this.parent.set.call(this, data);
    }
    ;

    this.persist = function(callback) {
        var data = {
            'newSettings': {}
        };
        for (var key in this.defaultData) {
            data['newSettings'][key] = this.data[key];
        }
        Travian.request('player/changeSettings', data, callback);
    }
    ;

    this.getSetting = function(key) {
        return this.data[key];
    }
    ;

    this.getAttackSettings = function() {
        var show = {
            'kingdom': true
        };
        var attacksFilter = this.getSetting('attacksFilter');
        var i = 2;
        for (var key in show) {
            show[key] = (attacksFilter & Math.pow(2, i - 1)) > 0;
            i--;
        }
        return show;
    }
}

Settings.prototype = new AbstractModel();

Settings.TIME_FORMATS = {
    EU: 0,
    US: 1,
    UK: 2,
    ISO: 3
};

Settings.TIME_TYPES = {
    UTC: 0,
    LOCAL: 1,
    GAMEWORLD: 2
};

Settings.PREMIUM_CONFIRMATION_FLAGS = {
    'DISABLE_GOLD_USAGE_CONFIRMATION': 0,
    'DISABLE_PREMIUM_USAGE_CONFIRMATION': 1
};

Cache.register(Settings);
;window['SilverChange'] = function SilverChange() {
    this.defaultData = {
        'id': 0,
        'playerId': 0,
        'silver': 0,
        'operationType': 0,
        'itemType': 0,
        'itemStrength': 0,
        'itemAmount': 0,
        'time': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'SilverChange';
}

SilverChange.TYPE_EXCHANGE_OFFICE = 1;
SilverChange.TYPE_AUCTION = 2;
SilverChange.TYPE_SELL_TO_INTERMEDIARY = 3;
SilverChange.TYPE_ADVENTURE = 4;
SilverChange.TYPE_COOP_PACKAGE = 5;
SilverChange.TYPE_QUEST = 6;
SilverChange.TYPE_STARTER_PACKAGE = 7;
SilverChange.TYPE_CARD_GAME = 8;

SilverChange.prototype = new AbstractModel();
Cache.register(SilverChange);
;window['Society'] = function Society(societyId) {
    this.defaultData = {
        'groupId': 0,
        'name': '',
        'createdBy': '',
        'attitude': '',
        'members': []
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Society';

    this.isShared = function(right) {
        return (this['data']['sharedInformations'] & right);
    }
}

Society.ATTITUDE_WHITE = 1;
Society.ATTITUDE_BLACK = 2;

Society.TARGET_VILLAGE = 1;
Society.TARGET_PLAYER = 2;
Society.TARGET_KINGDOM = 3;
Society.TARGET_SOCIETY = 5;

Society.CONDITION_WHITE_SEND_RESOURCES = 1;
Society.CONDITION_WHITE_LOST_UNITS = 2;
Society.CONDITION_WHITE_PROVIDED_UNITS = 3;
Society.CONDITION_BLACK_STOLE_RESOURCES = 4;
Society.CONDITION_BLACK_DEFEAT_UNITS = 5;
Society.CONDITION_BLACK_STOLE_TREASURE = 6;

Society.SHARED_CHAT = 1;
Society.SHARED_REPORTS = 2;
Society.SHARED_NEXT_ATTACKS = 4;
Society.SHARED_VILLAGE_DETAILS = 8;

Society.prototype = new AbstractModel();
Cache.register(Society);

;window['SocietyConditions'] = function SocietyConditions() {
    this.defaultData = {
        'type': 0,
        'value': 0,
        'ownValue': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'SocietyConditions';
}

SocietyConditions.TYPE_RESOURCES = 1;
SocietyConditions.TYPE_TROOPS = 2;
SocietyConditions.TYPE_TREASURES = 3;
SocietyConditions.TYPE_TROOPS_DEPLOYED = 4;

SocietyConditions.prototype = new AbstractModel();
Cache.register(SocietyConditions);
;window['SocietyInvitation'] = function SocietyInvitation(id) {
    this.defaultData = {
        'id': id,
        'societyId': 0,
        'societyName': '',
        'playerId': 0
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'SocietyInvitation';
}
SocietyInvitation.prototype = new AbstractModel();
Cache.register(SocietyInvitation);

;window['SocietyStats'] = function SocietyStats() {
    this.defaultData = {
        'id': 0,
        'playerId': 0,
        'destVillageId': 0,
        'destPlayerId': 0,
        'destKingdomId': 0,
        'resourcesSent': 0,
        'resourcesStolen': 0,
        'troopsKilled': 0,
        'troopsLost': 0,
        'treasuresStolen': 0,
        'troopsDeployed': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'SocietyStats';
}

SocietyStats.prototype = new AbstractModel();
Cache.register(SocietyStats);
/**
 * StatsWeeklyTop Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['StatsWeeklyTop'] = function StatsWeeklyTop(id, rankingType) {
    this.defaultData = {
        'top10Attacker': [],
        'top10Climber': [],
        'top10Defender': [],
        'top10Robber': []
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'StatsWeeklyTop';
}
StatsWeeklyTop.prototype = new AbstractModel();
Cache.register(StatsWeeklyTop);
/**
 * @constructor
 * @extends {AbstractData}
 * @param {Object} data
 */
;window['TradeOffer'] = function TradeOffer() {
    this.defaultData = {
        'villageId': 0
    };

    this.data = {};
    this.set(this.defaultData);
    this.name = 'TradeOffer';
}
TradeOffer.COLLECTION_OWN = 'own';
TradeOffer.COLLECTION_ALL = 'all';

TradeOffer.prototype = new AbstractModel();
Cache.register(TradeOffer);

/**
 * @constructor
 * @extends {AbstractData}
 * @param {Object} data
 */
;window['TradeRoute'] = function TradeRoute() {
    this.defaultData = {
        'id': 0,
        'villageId': 0,
        'destVillageId': 0,
        'resources': {},
        'times': 0,
        'minutesOffset': 0,
        'lastExecuted': 0,
        'nextExecution': 0,
        'merchants': 0,
        'duration': 0,
        'recurrences': 1,
        'status': 1
    };

    // Array of numbers that represent the hours at which this route should start
    this.hours = [];
    this.resources = new Resources();

    this.data = {};

    this.set = function(data) {
        data = data || {};

        this.parent.set.call(this, data);

        this.hours = [];
        for (var i = 0; i < 24; i++) {
            if ((this.data['times'] & Math.pow(2, i)) > 0) {
                this.hours.push(i);
            }
        }

        this.resources = new Resources(this.data['resources']);
    }
    ;

    /**
	 * Checks if the given hour is "active" in this trade route
	 */
    this.isHourSet = function(hour) {
        return ((this.data['times'] & Math.pow(2, hour)) > 0);
    }
    ;

    this.set(this.defaultData);

    this.name = 'TradeRoute';
}

TradeRoute.prototype = new AbstractModel();
Cache.register(TradeRoute);

/**
 * TreasurySlot Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['TreasurySlot'] = function TreasurySlot() {
    this.defaultData = {
        'slotId': 0,
        'kingdomId': 0,
        'playerId': 0,
        'villageId': 0,
        'kingdomRole': 0
    };

    this.name = 'TreasurySlot';
}

/**
 * Returns an array of the amount of total, assigned and used TreasurySlots separated by Players of the given Collection
 * <code>
 *
 *     [playerId]: {
 *         'assigned': Number,
 *         'used': Number,
 *         'total': Number
 *     },
 *     [playerId]: {...},
 *     ...
 * </code>
 * @param {Collection} collection
 * @returns {*}
 */
TreasurySlot.getAmountOfUsedAndAssignedByCollection = function(collection) {
    var slots = collection.data;

    var slotsPerPlayer = {};

    for (var i = 0; i < slots.length; i++) {
        var slot = slots[i];

        if (slotsPerPlayer[slot.data['playerId']] === undefined) {
            slotsPerPlayer[slot.data['playerId']] = {
                'used': 0,
                'assigned': 0,
                'total': 0
            };
        }

        if (slot.data['villageId'] <= 0) {
            slotsPerPlayer[slot.data['playerId']]['assigned']++;
        } else {
            slotsPerPlayer[slot.data['playerId']]['used']++;
        }

        slotsPerPlayer[slot.data['playerId']]['total']++;
    }

    return slotsPerPlayer;
}
;

/**
 * Returns the total amount of blocked (used and assigned) TreasurySlots by the given Collection
 * @param {Collection} collection
 * @returns {number}
 */
TreasurySlot.getAmountOfBlockedByCollection = function(collection) {
    var slotsPerPlayer = TreasurySlot.getAmountOfUsedAndAssignedByCollection(collection);

    var totalBlocked = 0;

    for (var playerId in slotsPerPlayer) {
        totalBlocked += Math.max(0, (slotsPerPlayer[playerId]['used'] - Travian.Config['KingdomConfig']['defaultTreasuriesForKingsAndDukes'])) + slotsPerPlayer[playerId]['assigned'];
    }

    return totalBlocked;
}
;

/**
 * Returns the total amount of assignable TreasurySlots of the given collection
 * @param {Collection} collection
 * @param {number} treasures
 * @returns {number}
 */
TreasurySlot.getAmountOfAssignableByCollection = function(collection, treasures) {
    var maxUnlockedSlots = Math.floor(treasures / Travian.Config['KingdomConfig']['treasuresNeededForTreasurySlot']);
    var totalBlocked = TreasurySlot.getAmountOfBlockedByCollection(collection);
    return Math.max(0, (maxUnlockedSlots - totalBlocked));
}
;

/**
 * Returns the Assigned Slots of the given Collection
 * @param {Collection} collection
 * @returns {Array.<*>}
 */
TreasurySlot.getAssignedByCollection = function(collection) {
    return collection.data.filter(function(slot) {
        return slot.data['villageId'] <= 0;
    });
}
;

/**
 * Returns the Used Slots of the given Collection
 * @param {Collection} collection
 * @returns {Array.<*>}
 */
TreasurySlot.getUsedByCollection = function(collection) {
    return collection.data.filter(function(slot) {
        return slot.data['villageId'] > 0;
    });
}
;

TreasurySlot.prototype = new AbstractModel();
Cache.register(TreasurySlot);
/**
 * Troop Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Troops'] = function Troops(data) {
    this.defaultData = {
        'troopId': 0,
        'playerId': 0,
        'playerName': '',
        'tribeId': 0,
        'units': {},
        'villageId': 0,
        'villageName': '',
        'villageIdLocation': 0,
        'villageIdSupply': 0,
        'status': '',
        'capacity': 0,
        'movement': {
            'troopId': 0,
            'villageIdStart': 0,
            'playerNameStart': '',
            'villageNameStart': '',
            'villageIdTarget': 0,
            'villageNameTarget': '',
            'playerNameTarget': '',
            'playerIdTarget': 0,
            'timeStart': 0,
            'timeFinish': 0,
            'movementType': 1,
            'resources': {
                1: 0,
                2: 0,
                3: 0,
                4: 0
            },
            'treasures': 0,
            'spyTarget': 0,
            'catapultTarget1': 0,
            'catapultTarget2': 0,
            'culturePoints': 0
        }
    };
    this.troopAmount = 0;
    this.name = 'Troops';
    this.data = {};
    var myself = this;
    this.isAttacking = false;
    this.fetchedNames = false;

    this.set = function(data) {
        // clear units
        this.data['units'] = {};

        // correct new incoming data if necessary
        if (data['units'] === null || data['units']instanceof Array) {
            data['units'] = {};
        }

        // reset villages names if its id were changed (inbound troops)
        if (this.data['movement'] && data['movement'] && this.data['movement']['villageIdStart'] != data['movement']['villageIdStart']) {
            this.data['movement']['villageNameStart'] = '';
            this.data['movement']['villageNameTarget'] = '';
            this.fetchedNames = false;
        }

        this.parent.set.call(this, data);
        // the units array is called originalTroops in the troopsDetails directive
        this.data['originalTroops'] = this.data['units'];

        this.troopAmount = 0;
        for (var nr in this.data['units']) {
            this.troopAmount += parseInt(this.data['units'][nr]);
        }

        this.isAttacking = (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_ATTACK || this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RAID || this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SIEGE || this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SPY);
    }
    ;
    this.set(this.defaultData);

    /**
	 * Returns a group name or null if troops are not connected to the given village
	 *
	 * @param {Number} villageId
	 * @returns {String}
	 */
    this.getMovementGroup = function(villageId) {
        if (this.data['status'] != 'transit') {
            return null;
        }

        var prefix = '';
        if (this.data['movement']['villageIdTarget'] == villageId) {
            prefix = 'incoming_';
        } else if (this.data['movement']['villageIdStart'] == villageId) {
            prefix = 'outgoing_';
        }
        if (prefix == '') {
            return null;
        }

        if (this.isAttacking) {
            return prefix + 'attacks';
        }

        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RETURN || this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RETURN_ADVENTURE) {
            return 'return';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_REGENERATION) {
            return prefix + 'healing';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_WOUNDED) {
            return prefix + 'wounded';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SUPPORT) {
            return prefix + 'support';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SETTLE) {
            return prefix + 'settlement';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT) {
            return prefix + 'tribute';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_ADVENTURE) {
            return prefix + 'adventure';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TRANSPORT) {
            return prefix + 'merchant';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN) {
            return prefix + 'merchant_return';
        }
        if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TREASURE_RESOURCES) {
            return prefix + 'treasureResources';
        }
        return prefix;
    }
    ;

    /**
	 * Return UnitTypeId from given unit number
	 *
	 * @param nr
	 * @returns {number}
	 */
    this.nrToUnitId = function(nr) {
        // Exeption for the hero: Everytime id 98
        if (nr == 11) {
            return 98;
        }
        return (this.data['tribeId'] - 1) * 10 + (nr * 1);
    }
    ;

    /**
	 * Returns the number of spies in these troops.
	 * Takes care of the different index number of the spy in the tribes.
	 */
    this.getSpyId = function() {
        if (this.data['tribeId'] == Player.TRIBE.GAUL) {
            return 3;
            //this.data['units'][3];
        } else {
            return 4;
            //this.data['units'][4];
        }
    }
    ;

    function fetchNameForMovement(to, id, type) {
        if (myself.data['movement'][to] == '') {
            Travian['nameService']['getNameForId'](id, function(name) {
                myself.data['movement'][to] = name;
            }, type);
        }
    }

    function fetchMovementTargetNames() {
        // if it is a adventure then just display 'advnture' and not fetch any names same as
        // it it is setteling then display the coordinates
        if (myself.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_ADVENTURE) {
            myself.data['movement']['villageNameTarget'] = Travian.translate('TroopMovementInfo_outgoing_adventure');
        } else if (myself.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SETTLE) {
            var coordinates = id2xy(myself.data['movement']['villageIdTarget']);
            myself.data['movement']['villageNameTarget'] = '(' + coordinates['x'] + '|' + coordinates['y'] + ')';
        } else {
            fetchNameForMovement('playerNameTarget', myself.data['movement']['playerIdTarget'], 'player');
            if (parseInt(myself.data['movement']['playerIdTarget']) > 0) {
                fetchNameForMovement('villageNameTarget', myself.data['movement']['villageIdTarget'], 'village');
            } else {
                fetchNameForMovement('villageNameTarget', myself.data['villageIdLocation'], 'village');
            }
        }
    }
    function fetchMovementStartNames() {
        if (myself.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RETURN_ADVENTURE) {
            myself.data['movement']['villageNameStart'] = Travian.translate('TroopMovementInfo_outgoing_adventure');
        } else {
            fetchNameForMovement('villageNameStart', myself.data['movement']['villageIdStart'], 'village');
        }
        if (myself.data['playerId'] != Travian.Player.data['playerId']) {
            fetchNameForMovement('playerNameStart', myself.data['playerId'], 'player');
        } else {
            myself.data['movement']['playerNameStart'] = Travian.Player.data['name'];
        }
    }

    /**
	 * will fetch the names of the target player, target village and start village.
	 */
    this.fetchNames = function() {
        if (!this.fetchedNames) {
            this.fetchedNames = true;
            fetchMovementTargetNames();
            fetchMovementStartNames();
        }
    }
    ;

    /**
	 * Returns the number of units in this troop (excluding the hero).
	 */
    this.getUnitAmount = function() {
        var amount = 0;
        for (var nr in this.data['units']) {
            if (nr != Troops.TYPE_HERO) {
                amount += parseInt(this.data['units'][nr]);
            }
        }
        return amount;
    }
    ;
}

Troops.getUnitValue = function(value, unitId, level, tribeId) {
    if (tribeId) {
        unitId = nrToUnitId(unitId, tribeId);
    }
    if (!level || level < 0) {
        level = 0;
    } else {
        level = parseInt(level);
    }
    var cfg = Travian.Config['troopConfig'][unitId];
    if (cfg && cfg[value]) {
        var strength = cfg[value];
        for (var i = 0; i < level; i++) {
            strength = strength * Travian.Config['unitResearchStrengthMultiplier'] + Travian.Config['unitResearchSupplyMultiplier'] * cfg['supply'];
        }
        return Math.floor(strength);
    }
    return 0;
}
;

Troops.getHeroBaseStrength = function(tribeId) {
    if (tribeId == Player.TRIBE['ROMAN']) {
        return Travian.Config['heroConfig']['HeroBaseStrengthRomans'];
    }
    return Travian.Config['heroConfig']['HeroBaseStrengthOthers'];
}
;

Troops.STATUS_HOME = 'home';
Troops.STATUS_TRANSIT = 'transit';
Troops.STATUS_SUPPORT = 'support';
Troops.STATUS_TRAP = 'trap';
Troops.STATUS_HOME_WOUNDED = 'wounded';

Troops.COLLECTION_STATIONARY = 'stationary';
Troops.COLLECTION_MOVING = 'moving';
Troops.COLLECTION_TRAPPED = 'trapped';
Troops.COLLECTION_ELSEWHERE = 'elsewhere';
Troops.COLLECTION_ALL = 'all';
Troops.COLLECTION_WOUNDED = 'wounded';

Troops.MOVEMENT_TYPE_ATTACK = 3;
Troops.MOVEMENT_TYPE_RAID = 4;
Troops.MOVEMENT_TYPE_SUPPORT = 5;
Troops.MOVEMENT_TYPE_SPY = 6;
Troops.MOVEMENT_TYPE_TRANSPORT = 7;
Troops.MOVEMENT_TYPE_RETURN = 9;
Troops.MOVEMENT_TYPE_SETTLE = 10;
Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT = 12;
Troops.MOVEMENT_TYPE_ADVENTURE = 20;
Troops.MOVEMENT_TYPE_RETURN_ADVENTURE = 27;
Troops.MOVEMENT_TYPE_TRANSPORT_RETURN = 33;
Troops.MOVEMENT_TYPE_REGENERATION = 36;
Troops.MOVEMENT_TYPE_SIEGE = 47;
Troops.MOVEMENT_TYPE_TREASURE_RESOURCES = 50;
Troops.MOVEMENT_TYPE_WOUNDED = 123;

Troops.MOVEMENT_TYPES_ATTACK = [Troops.MOVEMENT_TYPE_ATTACK, Troops.MOVEMENT_TYPE_RAID, Troops.MOVEMENT_TYPE_SIEGE];

Troops.TYPE_RAM = 7;
Troops.TYPE_CATAPULT = 8;
Troops.TYPE_LEADER = 9;
Troops.TYPE_SETTLER = 10;
Troops.TYPE_HERO = 11;

Troops.TYPE_TRAPS = 79;

Troops.SECOND_TARGET_CATAPULTS = 20;

Troops.MAX_LEVEL = 20;

Troops.MOVEMENT_ICON = {};
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_ATTACK] = 'movement_attack_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SIEGE] = 'movement_attack_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_RAID] = 'movement_raid_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SUPPORT] = 'movement_support_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SPY] = 'movement_spy_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TRANSPORT] = 'movement_trade_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_RETURN] = 'movement_support_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SETTLE] = 'movement_settle_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT] = 'movement_tribute_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_ADVENTURE] = 'movement_adventure_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_RETURN_ADVENTURE] = 'movement_support_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TRANSPORT_RETURN] = 'movement_trade_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_REGENERATION] = 'movement_heal_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TREASURE_RESOURCES] = 'movement_trade_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_WOUNDED] = 'movement_wounded_small_flat_black';

Troops.prototype = new AbstractModel();
Cache.register(Troops);
;window['TroopsMovementInfo'] = function TroopsMovementInfo(data) {
    "use strict";
    this.defaultData = {
        'troopId': 0,
        'villageIdStart': 0,
        'villageNameStart': '',
        'villageIdTarget': 0,
        'villageNameTarget': '',
        'playerNameTarget': '',
        'playerIdTarget': 0,
        'timeStart': 0,
        'timeFinish': 0,
        'movementType': 1,
        'resources': {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        'treasures': 0,
        'spyTarget': 0,
        'catapultTarget1': 0,
        'catapultTarget2': 0,
        'coordinateID': 0
    };

    this.data = {};

    this.name = 'TroopsMovementInfo';
}
TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE = "attackVillage";

TroopsMovementInfo.prototype = new AbstractModel();
Cache.register(TroopsMovementInfo);
/**
 * @constructor
 * @extends {AbstractData}
 * @param {Object} data
 */
;window['UnitQueue'] = function UnitQueue() {
    this.defaultData = {
        'villageId': 0,
        'buildingTypes': {},
        'unitsInQueue': {}
    };

    this.data = {};

    this.set = function(data) {
        this.data = data;

        // Compose an array of all units that are currently in production
        var inProduction = [];
        for (var j = 1; j <= 11; j++) {
            inProduction[j] = 0;
        }
        inProduction[Troops.TYPE_TRAPS] = 0;

        for (var buildingType in data['buildingTypes']) {
            for (var i = 0; i < data['buildingTypes'][buildingType].length; i++) {
                var unitNr = unitIdToNr(data['buildingTypes'][buildingType][i]['unitType']);
                if (data['buildingTypes'][buildingType][i]['unitType'] == 99) {
                    unitNr = Troops.TYPE_TRAPS;
                }
                inProduction[unitNr] += parseInt(data['buildingTypes'][buildingType][i]['count']);
            }
        }
        this.data['unitsInQueue'] = inProduction;
    }
    ;

    this.set(this.defaultData);

    this.name = 'UnitQueue';

    var unitProductionRequestInProgress = (new Date()).getTime();

    /**
	 * Checks if any unit training has finished and triggers the server
	 * to recalculate crop consumption (is called periodically via tick)
	 */
    this.checkUnits = function() {
        if (!this.filled) {
            return;
        }
        for (var buildingType in this.data['buildingTypes']) {
            var queue = this.data['buildingTypes'][buildingType];
            for (var i = 0; i < queue.length; i++) {
                var unit = queue[i];
                if (unit['pause'] <= 0 && unit['timeFinishedNext'] < Travian.rootScope['currentServerTime']) {
                    var now = (new Date()).getTime();
                    if (unitProductionRequestInProgress < now - 1000) {
                        unitProductionRequestInProgress = (new Date()).getTime();
                        Travian.writeRequest('village/checkUnitProduction', {
                            'villageId': this.data['villageId']
                        });
                    }
                }
            }
        }
    }
    .bind(this);

    /**
	 * Fetches the amount of all units in a specific unit queue
	 */
    this.getUnitAmount = function(buildingTypeId) {
        if (!this.filled) {
            return;
        }
        var amount = 0
          , i = 0;
        if (this.data['buildingTypes'][buildingTypeId]) {
            for (i = 0; i < this.data['buildingTypes'][buildingTypeId].length; i++) {
                amount += parseInt(this.data['buildingTypes'][buildingTypeId][i]['count'], 10);
            }
        }
        return amount;
    }
    .bind(this);
}

UnitQueue.prototype = new AbstractModel();
Cache.register(UnitQueue);
;window['UnitResearchQueue'] = function UnitResearchQueue() {
    this.defaultData = {};

    this.data = {
        'villageId': 0,
        'buildingTypes': {}
    };
    this.set(this.defaultData);
    this.name = 'UnitResearchQueue';
}
UnitResearchQueue.prototype = new AbstractModel();
Cache.register(UnitResearchQueue);
/**
 * Village Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Village'] = function Village(data) {
    this.data = {
        'villageId': null,
        'playerId': null,
        'name': '',
        'tribeId': 0,
        'type': 0,
        'supplyBuildings': 0,
        'supplyTroops': 0,
        'production': {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        'storage': {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        'storageCapacity': {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        // These values don't come from the server
        'lastProduction': 0,
        'lastCalculation': 0,
        'lastTributeProduction': 0,
        'lastTributeCalculation': 0,
        'cropBrutto': 0,
        'x': 0,
        'y': 0,
        'isActive': false,
        'calculatedStorage': {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        'belongsToKing': 0,
        'belongsToKingdom': 0,
        'tributes': {
            1: 0,
            2: 0,
            3: 0
        },
        'healingTentCapacity': 0,
        'treasury': {
            1: 0,
            2: 0,
            3: 0
        },
        'calculatedTributes': {
            1: 0,
            2: 0,
            3: 0
        },
        'tributeTreasures': null,
        'tributesCapacity': 0,
        'tributesOnTheirWay': false,
        'culturePoints': 0,
        'culturePointProduction': 0,
        'realTributePercent': 0,
        'estimatedWarehouseLevel': 0,
        'tributeSum': 0,
        'canFetchTributes': false,
        'tributePercentage': 0,
        'tributeTreasureMarker': 0,
        'timeUntilTributeFetch': 0,
        'tributeProduction': 0,
        'tributeProductionDetail': {
            1: 0,
            2: 0,
            3: 0
        },
        'position': 0,
        'allowTributeCollection': 0,
        'protectionGranted': 0,
        'fireworksActive': 0
    };

    var that = this;

    this.name = 'Village';
    this.granaryState = -1;
    this.warehouseState = -1;
    this.underAttack = false;

    this.set = function(data) {
        data = data || {};

        /**
		 * Timestamp when the last production was calculated Note: This is not very accurate due to XHR Response Time
		 * vice versa
		 *
		 * @type {Number}
		 */
        data.lastProduction = new Date().getTime();
        data.lastTributeProduction = new Date().getTime();

        /**
		 * Calculate village position
		 */
        if (data['villageId'] > 0) {
            var pos = id2xy(data['villageId']);
            data['x'] = pos.x;
            data['y'] = pos.y;
        }

        this.data.celebrations = [];
        this.parent.set.call(this, data);

        // calculate cropBrutto
        this.data['cropBrutto'] = this.data['production'][4] + this.data['supplyBuildings'] + this.data['supplyTroops'];
        this.data['calculatedTributes'] = {
            1: 0,
            2: 0,
            3: 0
        };

        this.data['name'] = "" + this.data['name'];

        extrapolateResourceObject();
        extrapolateTributeObject();
    }
    ;

    this.getResources = function() {
        // Calculate the current resources only once per second
        var now = new Date().getTime();
        if (now > this.data.lastCalculation + 1000) {
            this.data.lastCalculation = now;
            extrapolateResourceObject();
        }
        return this.data.calculatedStorage;
    }
    ;

    this.getCapacity = function() {
        return this.data['storageCapacity'];
    }
    ;

    this.getProduction = function() {
        return this.data['production'];
    }
    ;

    /**
	 * @param {Object} costs
	 * @returns {Boolean}
	 */
    this.hasEnoughResources = function(costs) {
        var res = this.getResources();
        for (var resType in costs) {
            if ((costs[resType] > res[resType]) && (costs[resType] > 0)) {
                return false;
            }
        }
        return true;
    }
    ;

    this.getTributes = function() {
        // Calculate the current resources only once per second
        var now = new Date().getTime();
        if (now > this.data.lastTributeCalculation + 1000) {
            this.data.lastTributeCalculation = now;
            extrapolateTributeObject();
        }
        return this.data['calculatedTributes'];
    }
    ;

    /**
	 * Calculate the current amount of resources. Note: This utilizes "this.data.lastProduction" to extrapolate the
	 * resources. It's not exact due to XHR Response time and vice versa
	 *
	 * @param {Number} storage
	 * @param {Number} storageCapacity
	 * @param {Number} production
	 * @returns {Number}
	 */
    function extrapolate(storage, storageCapacity, production) {
        return Math.floor(Math.min(Number(storage) + (production / 3600 * ((new Date().getTime() - that.data.lastProduction) / 1000)), storageCapacity));
    }

    /**
	 * Extrapolate all resources
	 */
    function extrapolateResourceObject() {
        var newResources = {};
        var somethingChanged = false;

        for (var resourceType in that.data.calculatedStorage) {
            var old = Math.floor(that.data.calculatedStorage[resourceType]);
            newResources[resourceType] = extrapolate(that.data['storage'][resourceType], that.data['storageCapacity'][resourceType], that.data['production'][resourceType]);
            if (Math.floor(newResources[resourceType]) != old) {
                somethingChanged = true;
            }
            that.data.calculatedStorage[resourceType] = newResources[resourceType];
        }

        if (somethingChanged) {
            if (that.data.calculatedStorage[Resources.ID['crop']] < 0) {
                // Trigger starvation check
                if (that.data.calculatedStorage[Resources.ID['crop']] < -1) {
                    Travian.rootScope.$broadcast('starveTroops', that.data['villageId']);
                }
                // Ensure that there is no actual negative crop in the storage for all further calculations
                that.data.calculatedStorage[Resources.ID['crop']] = Math.max(0, that.data.calculatedStorage[Resources.ID['crop']]);
                that.data['storage'][Resources.ID['crop']] = Math.max(0, that.data['storage'][Resources.ID['crop']]);
            }
            calcStorageBuildingStates();
            Travian.rootScope.$broadcast('resourcesChanged', that.data['villageId'], newResources);
        }
    }

    /**
	 * Extrapolate all Tributes
	 */
    function extrapolateTributeObject() {
        var currentTributes = {};
        var currentTributesRounded = {};
        var somethingChanged = false;

        var oldSum = 0;
        var newSum = 0;
        for (var resourceType in that.data['calculatedTributes']) {
            var old = Math.floor(that.data['calculatedTributes'][resourceType]);
            oldSum += old;
        }
        // extrapolate tributes only if we are not yet on the maximum
        if (oldSum < that.data.tributesCapacity) {
            for (var resourceType in that.data['calculatedTributes']) {
                var old = Math.floor(that.data['calculatedTributes'][resourceType]);
                currentTributes[resourceType] = Math.min(Number(that.data['tributes'][resourceType]) + (that.data['production'][resourceType] / 3600 * ((new Date().getTime() - that.data.lastTributeProduction) / 1000) * that.data['realTributePercent']), that.data['storageCapacity'][resourceType]);
                currentTributesRounded[resourceType] = Math.floor(currentTributes[resourceType]);
                if (Math.floor(currentTributesRounded[resourceType]) != old) {
                    somethingChanged = true;
                }
                newSum += currentTributesRounded[resourceType];
            }
            //we may have no too much resources produced...
            if (newSum > that.data['tributesCapacity']) {
                //All tributes shares the same capacity.. and we have to much, so lets cap them
                var distributed = 0;
                for (var resourceType in that.data['calculatedTributes']) {
                    var res = currentTributesRounded[resourceType];
                    //how much percentage we got
                    var percentage = (res / newSum);
                    var newValue = Math.floor(percentage * that.data['tributesCapacity']);
                    currentTributesRounded[resourceType] = newValue;
                    distributed += newValue;
                }
                var leftResources = that.data['tributesCapacity'] - distributed;
                // Distribute left resources
                for (var i = 0; i < leftResources; i++) {
                    var type = (i % 3) + 1;
                    currentTributesRounded[type]++;
                }
            }
            that.data['calculatedTributes'] = currentTributesRounded;
        }

        that.data['tributeSum'] = 0;
        for (var tributeId in that.data['calculatedTributes']) {
            that.data['tributeSum'] += that.data['calculatedTributes'][tributeId];
        }
        that.data['tributePercentage'] = Math.round(that.data['tributeSum'] / that.data['tributesCapacity'] * 100);
        that.data['tributeTreasureMarker'] = Math.ceil(that.data['tributesRequiredToFetch'] / that.data['tributesCapacity'] * 100);
        var newCanFetch = false;
        if (that.data['tributeSum'] >= that.data['tributesRequiredToFetch']) {
            newCanFetch = true;
        }
        if (that.data['canFetchTributes'] != newCanFetch) {
            Travian.rootScope.$broadcast('tributesChanged', that['data']['villageId'], that.data['calculatedTributes']);
        }
        that.data['canFetchTributes'] = newCanFetch;

        // calculates the time needed until there are enough fetchable tributes
        var tributeSum = 0;
        if (that.data['tributeProduction']) {
            for (var resourceType in currentTributes) {
                tributeSum += currentTributes[resourceType]
            }
            var secondsToFull = ((that.data['tributesCapacity'] - tributeSum) / that.data['tributeProduction']) * 3600;
            that.data['timeUntilTributeFull'] = Travian.ServerTime + secondsToFull;
        }
        if ((!newCanFetch) && (that.data['tributesRequiredToFetch'] && that.data['tributeProduction'])) {
            var secondsToTributeFetch = ((that.data['tributesRequiredToFetch'] - tributeSum) / that.data['tributeProduction']) * 3600;
            that.data['timeUntilTributeFetch'] = Travian.ServerTime + secondsToTributeFetch;
        }
    }

    /**
	 * Returns the timestamp of when there will be enough resources in this village. -1 when it will never reach these
	 * resources.
	 */
    this.getDestTimeForResources = function(res, onlyGetSeconds, ignoreCapacity) {
        var storage = this.getResources();
        var maxTime = 0;
        for (var resourceType in res) {
            if (res[resourceType] <= 0) {
                continue;
            }
            var currentRes = Math.min(Number(that.data['storage'][resourceType]) + (that.data['production'][resourceType] / 3600 * ((new Date().getTime() - that.data.lastProduction) / 1000)), that.data['storageCapacity'][resourceType]);
            var diff = res[resourceType] - currentRes;
            var production = this.data.production[resourceType];
            var capacity = this.data.storageCapacity[resourceType];
            if (ignoreCapacity) {
                capacity = res[resourceType];
            }
            // Do we need extra resources?
            if (diff > 0) {
                // Do we ever reach those?
                if ((capacity >= res[resourceType]) && (production > 0)) {
                    var time = diff / production;
                    if (time > maxTime) {
                        maxTime = time;
                    }
                } else {
                    // We never reach them
                    return -1;
                }
            }
        }
        if (onlyGetSeconds) {
            return maxTime * 3600;
        }
        return Math.round(Travian.ServerTime + maxTime * 3600);
    }
    ;

    /**
	 * Calculates the time reduction of a npc trade based on given resource costs
	 * @param costs
	 * @returns {number}
	 */
    this.calculateNpcTradingTimeBoost = function(costs) {
        // Calculate the time that it would take to have enough resources after we used the trader.
        var resDistribution = that.getCostsDistribution(costs);
        // Create a new cost object that differs from the current resource storage in exactly the same way as the new distribution would.
        var available = that.getResources();
        var newCostRes = new Resources();
        for (var i = 1; i <= 4; i++) {
            var diff = costs[i] - resDistribution[i];
            newCostRes[i] = available[i] + diff;
        }
        var oldDestTime = that.getDestTimeForResources(costs, true);
        var newDestTime = that.getDestTimeForResources(newCostRes, true, true);

        return oldDestTime - newDestTime;
    }
    ;

    /**
	 * Returns the best resource distribution based on the village capacity, production and given costs
	 * @param costs
	 * @returns {Resources}
	 */
    this.getCostsDistribution = function(costs) {
        var capacity = that.getCapacity();
        var available = new Resources(that.getResources());
        var costDistribution = new Resources(costs);
        var notTradableResTypes = PremiumFeature.getNotTradableResTypes();
        for (var i in notTradableResTypes) {
            costDistribution[notTradableResTypes[i]] = available[notTradableResTypes[i]];
        }
        return available.distribute(capacity, costDistribution, that.getProduction(), Resources.allTypes(notTradableResTypes));
    }
    ;

    /**
	 * Returns the count of changes to achieve the best distribution of resources based on given costs
	 * @param costs
	 * @returns {number}
	 */
    this.getCostsDistributionDifference = function(costs) {
        var diff = 0;
        var current = new Resources(that.getResources());
        var distribution = that.getCostsDistribution(costs);
        for (var i = 1; i <= 4; i++) {
            diff += Math.abs(current[i] - distribution[i]);
        }
        return diff;
    }
    ;

    this.isMainVillage = function() {
        return Village.isMainVillage(this.data['type']);
    }
    ;

    this.isWWVillage = function() {
        return Village.isWWVillage(this.data['type']);
    }
    ;

    this.hasActiveTreasury = function() {
        return this.data['treasuresUsable'] > 0;
    }
    ;

    // Caculates the state (fill level) of granary and warehouse (0 = 0%, 1 = 50%, 2 = 100%)
    function calcStorageBuildingStates() {
        // Get the current storage
        var storage = that.getResources();
        // Calculate the new granary state
        var cropId = Resources.ID['crop'];
        var percent = storage[cropId] / that.data['storageCapacity'][cropId];
        var newGranaryState = Math.floor(percent * 2);
        var stateChanged = newGranaryState != that.granaryState;
        that.granaryState = newGranaryState;
        // Calculate the new warehouse state
        var warehouseCurrent = storage[Resources.ID['wood']] + storage[Resources.ID['clay']] + storage[Resources.ID['iron']];
        var warehouseCapacity = that.data['storageCapacity'][Resources.ID['wood']] * 3;
        percent = warehouseCurrent / warehouseCapacity;
        var newWarehouseState = Math.floor(percent * 2);
        stateChanged = stateChanged || newWarehouseState != that.warehouseState;
        that.warehouseState = newWarehouseState;
        if (stateChanged) {
            Travian.rootScope.$broadcast('warehouseStateChanged', that.data['villageId']);
        }
    }

    this.set(data);
}

Village.collectionSortFct = function(a, b) {
    if (a['data']['name'] > b['data']['name']) {
        return 1;
    }
    if (a['data']['name'] < b['data']['name']) {
        return -1;
    }
    return 0;
}
;

Village.isWWVillage = function(type) {
    return type == Village.TYPE_WORLD_WONDER_VILLAGE || type == Village.TYPE_WORLD_WONDER_TOWN;
}
;

Village.isMainVillage = function(type) {
    return (type == Village.TYPE_MAIN) || (type == Village.TYPE_MAIN_TOWN);
}
;

Village.isTown = function(type) {
    var townTypes = [Village.TYPE_TOWN, Village.TYPE_MAIN_TOWN, Village.TYPE_WORLD_WONDER_TOWN];
    return (townTypes.indexOf(parseInt(type)) >= 0);
}
;

Village.getVillageSizeByPopulation = function(population) {
    var sizes = [0, 100, 250, 500, 1000, 9999999];
    for (var i = 0; i < sizes.length; i++) {
        if (population < sizes[i]) {
            return i;
        }
    }
}
;

// Returns the population of a new settled village based on the resource fields distribution
Village.getNewVillagePopulation = function(resDistribution) {
    var population = Travian.Config['buildingConfig'][Building.TYPE.MAIN_BUILDING]['supply'];
    angular.forEach([Building.TYPE.WOOD, Building.TYPE.CLAY, Building.TYPE.IRON], function(resFieldType) {
        population += Travian.Config['buildingConfig'][resFieldType]['supply'] * String(resDistribution)[resFieldType - 1];
    });
    return population;
}
;

Village.getPlayerVillageImageClass = function(tribeId, active, type, population) {

    if (Village.isWWVillage(type)) {
        return 'ww_village';
    }
    var imgVillageSizeId = Village.getVillageSizeByPopulation(population);
    if (Village.isTown(type)) {
        imgVillageSizeId = 6;
    }
    var className = 'village' + tribeId + '_' + imgVillageSizeId;
    if (active == 0) {
        className = 'village' + tribeId + '_' + imgVillageSizeId + '_inactive';
    }

    return className;
}
;

Village.TYPE_NORMAL = 0;
Village.TYPE_MAIN = 1;
Village.TYPE_TOWN = 2;
Village.TYPE_MAIN_TOWN = 3;
Village.TYPE_WORLD_WONDER_VILLAGE = 4;
Village.TYPE_ROBBER_VILLAGE = 5;
Village.TYPE_GOVERNOR_NPC_VILLAGE = 6;
Village.TYPE_WORLD_WONDER_TOWN = 7;
Village.TYPE_KINGDOM_ROBBER = 8;

Village.TYPE_OASIS = 10;

Village.COLLECTION_OWN = 'own';
Village.COLLECTION_KINGDOM = 'kingdom';
Village.COLLECTION_NPCS = 'npc';
Village.COLLECTION_SOCIETY = 'society';

Village.PRODUCTION_TYPE_BUILDING = 1;
Village.PRODUCTION_TYPE_OASIS = 2;
Village.PRODUCTION_TYPE_HERO = 3;
Village.PRODUCTION_TYPE_TREASURES = 5;
Village.PRODUCTION_TYPE_GOLD = 6;
Village.PRODUCTION_TYPE_OASIS_TROOPS = 7;

Village.OASIS_STATUS_NO_OASIS = 0;
Village.OASIS_STATUS_OCCUPIED = 1;
Village.OASIS_STATUS_WILD = 3;

Village.prototype = new AbstractModel();
Cache.register(Village);
/**
 * Voucher Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['Voucher'] = function Voucher() {
    this.defaultData = {
        'playerId': 0,
        'hasVouchers': []
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'Voucher';
}

Voucher.prototype = new AbstractModel();
Cache.register(Voucher);
/**
 * Village Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['WorldWonderResources'] = function WorldWonderResources(data) {
    this.defaultData = {
        'id': 0,
        'villageId': '',
        'playerId': '',
        'resources': new Resources(),
        'resourcesToday': new Resources()
    };

    this.data = {};
    this.set(this.defaultData);

    this.name = 'WorldWonderResources';
}

WorldWonderResources.prototype = new AbstractModel();
Cache.register(WorldWonderResources);
/**
 * @constructor
 * @param {Object} modelClass
 */
;window['ChatCollection'] = function ChatCollection(modelClass) {
    this.cacheService = ChatCache;
    this.modelClass = modelClass;
    this.data = [];

    this.set = function(data) {
        var r = this.parent.set.call(this, data);
        // Automatically sort chat collections containing objects with a 'timestamp' field
        if (this.data.length > 0 && typeof this.data[0].data['timestamp'] != 'undefined' && data['operation'] != 3) {
            this.data.sort(function(a, b) {
                return a.data['timestamp'] - b.data['timestamp'];
            });
        }
        return r;
    }
    ;
}
ChatCollection.prototype = new AbstractCollection();
ChatCache.register(ChatCollection, 'Collection:');
ChatCache.collectionModel = ChatCollection;

;window['ChatInbox'] = function ChatInbox(uid, roomId) {
    this.defaultData = {
        '_id': '',
        'roomId': roomId,
        'myPlayerId': uid,
        'group': '',
        'playerId': 0,
        // Filled by ChatService, if this is a 1-on-1 chat. Will contain the other player id
        'playerName': 0,
        // Filled by ChatService, if this is a 1-on-1 chat
        'roomViewName': '',
        // Filled by ChatService
        'roomType': 0,
        // Filled by ChatService
        'ownUnread': false,
        // Filled by ChatService
        'otherUnread': false,
        // Filled by ChatService
        'isMassMail': false,
        // Filled by ChatService
        'isPrivateChat': false,
        // Filled by ChatService
        'totalParticipents': 0,
        // Filled by ChatService
        'linePlayerId': 0,
        'linePlayerName': '',
        'line': '',
        'timestamp': 0,
        'lastTimestamp': 0,
        'unread': 0,
        'lastOwnRead': -1,
        // If this is a massmail it will be overwritten by the ChatService
        'lastOtherRead': -1,
        'playersRead': {},
        'closed': false,
        'closedBy': 0,
        'ignoreUntil': 0
    };

    this.data = {};
    this.set = function(data) {
        data = data || {};

        this.parent.set.call(this, data);
    }
    ;

    this.set(this.defaultData);

    this.isAdminMessage = function() {
        return this.data['otherPlayer'] && this.data['otherPlayer']['data']['playerId'] === -1;
    }
    ;
}
ChatInbox.prototype = new AbstractModel();
ChatCache.register(ChatInbox);

;window['ChatLine'] = function ChatLine(id) {
    this.defaultData = {
        'id': id,
        'playerId': 0,
        'playerName': '',
        'timestamp': 0,
        'text': '',
        'roomId': ''
    };

    this.data = {};
    this.set(this.defaultData);
}
ChatLine.preventUpdateWithoutFirstFill = true;
ChatLine.prototype = new AbstractModel();
ChatCache.register(ChatLine);

/**
 * Non permanent chat room notification
 * @param roomId
 * @param type
 * @param playerName
 * @param playerId
 * @constructor
 */
;window['ChatNotification'] = function ChatNotification(roomId, type, playerName, playerId) {
    this.data = {
        'roomId': roomId,
        'type': type,
        'playerName': playerName,
        'playerId': playerId
    };
}

ChatNotification.PLAYER_JOINED = 1;
ChatNotification.PLAYER_LEFT = 2;
ChatNotification.PLAYER_ONLINE = 3;
ChatNotification.PLAYER_OFFLINE = 4;

ChatNotification.prototype = new AbstractModel();
ChatCache.register(ChatNotification);
;window['ChatRoom'] = function ChatRoom(roomId) {
    this.defaultData = {
        'roomId': roomId,
        'publicName': '',
        'lastRead': 0,
        'members': 0,
        'joined': 0 // Time when player joined the room (clicking on Join button)
    };

    this.data = {};
    this.roomIds = ('' + roomId).split('.');
    this.set(this.defaultData);

    this.getRoomType = function() {
        var tmp = ('' + this.data['roomId']).split('.');
        return parseInt(tmp[0], 10);
    }
    ;

    this.getRoomName = function() {
        var tmp = ('' + this.data['roomId']).split('.');
        return parseInt(tmp[1], 10);
    }
    ;

    this.resetData = function() {
        // Keep the members number
        var members = this.data['members'];
        var joined = this.data['joined'];
        this.set(this.defaultData);
        // Decrease by 1 (me), if I was in before
        this.data['members'] = joined !== 0 ? members - 1 : members;
    }
    ;

    this.isGlobal = function() {
        return this.roomIds[1] == 'global';
    }
    ;

    this.isBeginner = function() {
        return this.roomIds[1] == 'beginner';
    }
    ;
}

ChatRoom.isMonologue = function(roomId) {
    var splitRoomId = ("" + roomId).split('.');
    return (splitRoomId[0] == ChatRoom.TYPE_PRIVATE && splitRoomId[1] == splitRoomId[2]);
}
;

ChatRoom.isPrivate = function(roomId) {
    var splitRoomId = ("" + roomId).split('.');
    return (splitRoomId[0] == ChatRoom.TYPE_PRIVATE);
}
;

ChatRoom.TYPE_PRIVATE = 1;
ChatRoom.TYPE_GROUP = 3;
ChatRoom.TYPE_PUBLIC = 4;
ChatRoom.TYPE_KINGDOM = 5;
ChatRoom.TYPE_SECRET_SOCIETY = 7;

ChatRoom.GLOBAL = ChatRoom.TYPE_PUBLIC + '.global';
ChatRoom.BEGINNER = ChatRoom.TYPE_PUBLIC + '.beginner';

ChatRoom.prototype = new AbstractModel();
ChatCache.register(ChatRoom);

;window['ChatRoomUser'] = function ChatRoomUser(otherPlayerId) {
    this.defaultData = {
        'playerId': otherPlayerId,
        'name': '',
        'status': -1
    };

    this.data = {};

    this.set = function(data) {
        data = data || {};

        this.parent.set.call(this, data);

        otherPlayerId = this.data['playerId'];
        if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
            this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
        } else {
            this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
        }
    }
    ;
    this.set(this.defaultData);
}

ChatRoomUser.STATUS_NOT_AVAILABLE = -1;
ChatRoomUser.STATUS_OFFLINE = 0;
ChatRoomUser.STATUS_ONLINE = 1;
ChatRoomUser.STATUS_AFK = 2;

ChatRoomUser.prototype = new AbstractModel();
ChatCache.register(ChatRoomUser);

;window['ChatUser'] = function ChatUser(otherPlayerId) {
    this.defaultData = {
        'playerId': otherPlayerId,
        'name': '',
        'status': 1
    };

    this.data = {};

    this.set = function(data) {
        var oldOnline = this.data['online'];

        data = data || {};

        this.parent.set.call(this, data);

        otherPlayerId = this.data['playerId'];
        if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
            this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
        } else {
            this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
        }

        if ((this.data['online'] == true) && (!oldOnline) && (this.data['playerId'] != Travian.Player.data['playerId'])) {
            Travian.rootScope.$broadcast('flashNotification', {
                'notificationId': Notifications.PLAYER_IS_ONLINE,
                'option': this.data['name']
            });
        }
    }
    ;
    this.set(this.defaultData);
}
ChatUser.STATUS_NOT_AVAILABLE = -1;
ChatUser.STATUS_OFFLINE = 0;
ChatUser.STATUS_ONLINE = 1;
ChatUser.STATUS_AFK = 2;

ChatUser.prototype = new AbstractModel();
ChatCache.register(ChatUser);

;window['PrivateChat'] = function PrivateChat(roomId) {
    this.defaultData = {
        'roomId': roomId,
        'playerId': '',
        'chatUser': null,
        'chatInbox': null,
        'isDocked': false,
        'isNew': false
    };

    this.data = {};
    this.set(this.defaultData);

    // Construct default data
    var splitRoom = ("" + roomId).split('.');
    var otherPlayerId = splitRoom[2];
    if (splitRoom[1] != Travian.Player.data['playerId']) {
        otherPlayerId = splitRoom[1];
    }
    this.data['playerId'] = parseInt(otherPlayerId, 10);

    this.getPlayerId = function() {
        return this.data['playerId'];
    }
    ;

    this.setChatUser = function(chatUser) {
        this.data['chatUser'] = chatUser;
    }
    ;

    this.setChatInbox = function(inboxEntry) {
        this.data['chatInbox'] = inboxEntry;
    }
    ;
}

PrivateChat.prototype = new AbstractModel();

var Friend = (function() {
    'use strict';
    ;window['Friend'] = function Friend(otherPlayerId) {
        this.defaultData = {
            'playerId': otherPlayerId,
            'name': '',
            'status': 1
        };

        this.data = {};

        this.set = function(data) {
            var oldOnline = this.data['online'];

            data = data || {};

            this.parent.set.call(this, data);

            otherPlayerId = this.data['playerId'];
            if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
                this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
            } else {
                this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
            }

            if ((this.data['online'] == true) && (!oldOnline) && (this.data['playerId'] != Travian.Player.data['playerId'])) {
                Travian.rootScope.$broadcast('flashNotification', {
                    'notificationId': Notifications.PLAYER_IS_ONLINE,
                    'option': this.data['accountName'] || this.data['name'] || ''
                });
            }
        }
        ;
        this.set(this.defaultData);
    }
    Friend.STATUS_NOT_AVAILABLE = -1;
    Friend.STATUS_OFFLINE = 0;
    Friend.STATUS_ONLINE = 1;
    Friend.STATUS_AFK = 2;

    Friend.prototype = new AbstractModel();
    FriendCache.register(Friend);
    return Friend;
}());
var FriendCollection = (function() {
    /**
     * @constructor
     * @param {Object} modelClass
     */
    ;window['FriendCollection'] = function FriendCollection(modelClass) {
        this.cacheService = FriendCache;
        this.modelClass = modelClass;
        this.data = [];

        this.set = function(data) {
            var r = this.parent.set.call(this, data);
            // Automatically sort chat collections containing objects with a 'timestamp' field
            if (this.data.length > 0 && typeof this.data[0].data['timestamp'] != 'undefined' && data['operation'] != 3) {
                this.data.sort(function(a, b) {
                    return a.data['timestamp'] - b.data['timestamp'];
                });
            }
            return r;
        }
        ;
    }
    FriendCollection.prototype = new AbstractCollection();
    FriendCache.register(FriendCollection, 'Collection:');
    FriendCache.collectionModel = FriendCollection;
}());
var FriendRequest = (function() {
    ;window['FriendRequest'] = function FriendRequest(otherPlayerId) {
        this.defaultData = {
            'playerId': otherPlayerId,
            'name': '',
            'sourceId': 0
        };

        this.data = {};
        this.set(this.defaultData);

        this.set = function(data) {
            var myself = this;
            Travian.nameService.getNameForId(data['playerId'], function(name) {
                myself.data['name'] = name;
            });
            this.parent.set.call(this, data);

            otherPlayerId = this.data['playerId'];
            if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
                this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
            } else {
                this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
            }
        }
    }
    FriendRequest.prototype = new AbstractModel();
    FriendCache.register(FriendRequest);
    return FriendRequest;
}());

Travian.checkPage = function() {
    if (document.readyState != "complete" && document.readyState != "loaded") {
        // Try again later. The page is not complete yet
        window.setTimeout(Travian.checkPage, 2000);
        return;
    }
    // The main travian object is undefined? Then we definitely have to reload the page
    if ((typeof (Travian) === 'undefined') || (typeof (Travian.request) == 'undefined')) {
        // Try to reload the page if we didn't try before
        if (window.location.href.indexOf('nocache') < 0) {
            window.location.replace('/?nocache' + window.location.hash);
        }
        return;
    }
    if ((typeof (window.vitruvian) !== 'undefined') || document.getElementById("vitruvian")) {
        alert("There is malware on your PC! Run a virus scanner or a malware removal tool.");
    }
}
;
